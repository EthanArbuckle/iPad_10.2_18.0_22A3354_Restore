void sub_239B5E478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *__p)
{
  uint64_t v40;
  uint64_t v41;
  unint64_t *v43;
  uint64_t v44;

  v43 = (unint64_t *)STACK[0x8E8];
  if (STACK[0x8E8] == v40)
  {
    v44 = 4;
    v43 = &STACK[0x8D0];
  }
  else
  {
    if (!v43)
      goto LABEL_6;
    v44 = 5;
  }
  (*(void (**)(void))(*v43 + 8 * v44))();
LABEL_6:
  sub_239416834((_QWORD *)(v41 - 152));
  if (__p)
    operator delete(__p);
  sub_239A614AC(&STACK[0x210]);
  sub_239A615DC((uint64_t)&STACK[0x1300]);
  sub_239A6177C((uint64_t)&STACK[0x460]);
  sub_239420BFC((uint64_t)&STACK[0x730]);
  sub_23942FE80(&STACK[0x1AD0]);
  sub_239B60B4C((uint64_t)&STACK[0x1B10]);
  sub_2396FCD14((uint64_t)&STACK[0x2C88]);
  _Unwind_Resume(a1);
}

void sub_239B5EE28(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25693D9C0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25693D9C0))
  {
    sub_2399FF268(&v5);
    sub_23941A4FC(__p, "cv3dapi.pg");
    sub_239A03BC8(&v5, (uint64_t)__p, &qword_25693D9B8);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_25693D9C0);
  }
  *a1 = qword_25693D9B8;
}

void sub_239B5EEC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25693D9C0);
  _Unwind_Resume(a1);
}

uint64_t sub_239B5EEF8(uint64_t a1, char *__s)
{
  size_t v4;
  uint64_t v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  if (!*(_QWORD *)(a1 + 56))
  {
    v6 = operator new();
    sub_2394988CC(v6);
    v7 = (_QWORD *)operator new();
    *v7 = &unk_250AF1978;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = v6;
    v8 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v7;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  v4 = strlen(__s);
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)__s, v4);
  return a1;
}

void sub_239B5EFD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239B5EFF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

uint64_t sub_239B5F018(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void **v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  void **v20;
  void *v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  char *v25;
  size_t v26;

  if (sub_239B3BACC((char **)a1, (char **)a2) != (char **)a2)
  {
    *(_DWORD *)(a1 + 488) = *(_DWORD *)(a2 + 488);
    sub_239A99678((_QWORD *)(a1 + 456), *(const std::string **)(a2 + 472));
    *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
    sub_239A99678((_QWORD *)(a1 + 496), *(const std::string **)(a2 + 512));
    v4 = *(_OWORD *)(a2 + 536);
    v5 = *(_OWORD *)(a2 + 552);
    v6 = *(_OWORD *)(a2 + 584);
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(_OWORD *)(a1 + 584) = v6;
    *(_OWORD *)(a1 + 536) = v4;
    *(_OWORD *)(a1 + 552) = v5;
    v7 = *(_OWORD *)(a2 + 600);
    v8 = *(_OWORD *)(a2 + 616);
    v9 = *(_OWORD *)(a2 + 648);
    *(_OWORD *)(a1 + 632) = *(_OWORD *)(a2 + 632);
    *(_OWORD *)(a1 + 648) = v9;
    *(_OWORD *)(a1 + 600) = v7;
    *(_OWORD *)(a1 + 616) = v8;
    v10 = *(_OWORD *)(a2 + 776);
    v12 = *(_OWORD *)(a2 + 728);
    v11 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    *(_OWORD *)(a1 + 776) = v10;
    *(_OWORD *)(a1 + 728) = v12;
    *(_OWORD *)(a1 + 744) = v11;
    v13 = *(_OWORD *)(a2 + 664);
    v14 = *(_OWORD *)(a2 + 680);
    v15 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 712) = v15;
    *(_OWORD *)(a1 + 664) = v13;
    *(_OWORD *)(a1 + 680) = v14;
    *(_DWORD *)(a1 + 824) = *(_DWORD *)(a2 + 824);
    sub_239435F04((_QWORD *)(a1 + 792), *(uint64_t **)(a2 + 808), 0);
    sub_239B602E4(a1 + 832, *(_QWORD *)(a2 + 832), *(char **)(a2 + 840), (uint64_t)(*(_QWORD *)(a2 + 840) - *(_QWORD *)(a2 + 832)) >> 3);
  }
  v16 = (void **)(a1 + 856);
  if (*(unsigned __int8 *)(a1 + 896) == *(unsigned __int8 *)(a2 + 896))
  {
    if (a1 != a2 && *(_BYTE *)(a1 + 896))
    {
      *(_DWORD *)(a1 + 888) = *(_DWORD *)(a2 + 888);
      sub_2395F4558((_QWORD *)(a1 + 856), *(uint64_t **)(a2 + 872), 0);
    }
  }
  else if (*(_BYTE *)(a1 + 896))
  {
    v17 = *(_QWORD **)(a1 + 872);
    if (v17)
    {
      do
      {
        v18 = (_QWORD *)*v17;
        operator delete(v17);
        v17 = v18;
      }
      while (v18);
    }
    v19 = *v16;
    *v16 = 0;
    if (v19)
      operator delete(v19);
    *(_BYTE *)(a1 + 896) = 0;
  }
  else
  {
    sub_2395F4690(a1 + 856, a2 + 856);
    *(_BYTE *)(a1 + 896) = 1;
  }
  v20 = (void **)(a1 + 904);
  if (*(unsigned __int8 *)(a1 + 928) == *(unsigned __int8 *)(a2 + 928))
  {
    if (a1 != a2 && *(_BYTE *)(a1 + 928))
      sub_2395F65BC((_QWORD *)(a1 + 904), *(char **)(a2 + 904), *(char **)(a2 + 912), (uint64_t)(*(_QWORD *)(a2 + 912) - *(_QWORD *)(a2 + 904)) >> 5);
  }
  else if (*(_BYTE *)(a1 + 928))
  {
    v21 = *v20;
    if (*v20)
    {
      *(_QWORD *)(a1 + 912) = v21;
      operator delete(v21);
    }
    *(_BYTE *)(a1 + 928) = 0;
  }
  else
  {
    *v20 = 0;
    *(_QWORD *)(a1 + 912) = 0;
    *(_QWORD *)(a1 + 920) = 0;
    v22 = *(_BYTE **)(a2 + 904);
    v23 = *(_BYTE **)(a2 + 912);
    v24 = v23 - v22;
    if (v23 != v22)
    {
      if (v24 < 0)
        sub_2394189F8();
      v25 = (char *)operator new(v23 - v22);
      *(_QWORD *)(a1 + 904) = v25;
      *(_QWORD *)(a1 + 912) = v25;
      *(_QWORD *)(a1 + 920) = &v25[32 * (v24 >> 5)];
      v26 = v24 & 0xFFFFFFFFFFFFFFE0;
      memcpy(v25, v22, v26);
      *(_QWORD *)(a1 + 912) = &v25[v26];
    }
    *(_BYTE *)(a1 + 928) = 1;
  }
  return a1;
}

void sub_239B5F23C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 912) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B5F258(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t j;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  _QWORD *v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void **v36;
  void **v37;
  uint64_t v38;
  uint64_t k;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t m;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _QWORD *v59;
  _QWORD *v60;
  void *v61;
  _QWORD *v62;
  _QWORD *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;

  v4 = *(void **)a1;
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = v4;
    operator delete(v4);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a1 + 24) = v5;
  if (*(_QWORD *)(a1 + 56))
  {
    v6 = *(_QWORD **)(a1 + 48);
    if (v6)
    {
      do
      {
        v16 = (_QWORD *)*v6;
        v17 = (_QWORD *)v6[16];
        if (v17)
        {
          do
          {
            v18 = (_QWORD *)*v17;
            operator delete(v17);
            v17 = v18;
          }
          while (v18);
        }
        v19 = (void *)v6[14];
        v6[14] = 0;
        if (v19)
          operator delete(v19);
        if (*((_BYTE *)v6 + 104))
          sub_239916980((uint64_t)(v6 + 9));
        operator delete(v6);
        v6 = v16;
      }
      while (v16);
    }
    *(_QWORD *)(a1 + 48) = 0;
    v7 = *(_QWORD *)(a1 + 40);
    if (v7)
    {
      for (i = 0; i != v7; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 56) = 0;
  }
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = 0;
  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  if (v10)
    operator delete(v10);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a2 + 40) = 0;
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v13;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  if (v13)
  {
    v14 = *(_QWORD *)(v11 + 8);
    v15 = *(_QWORD *)(a1 + 40);
    if ((v15 & (v15 - 1)) != 0)
    {
      if (v14 >= v15)
        v14 %= v15;
    }
    else
    {
      v14 &= v15 - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * v14) = a1 + 48;
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 56) = 0;
  }
  if (*(_QWORD *)(a1 + 96))
  {
    v20 = *(char **)(a1 + 88);
    if (v20)
    {
      do
      {
        v30 = *(char **)v20;
        v31 = (_QWORD *)*((_QWORD *)v20 + 56);
        if (v31)
        {
          do
          {
            v32 = (_QWORD *)*v31;
            operator delete(v31);
            v31 = v32;
          }
          while (v32);
        }
        v33 = (void *)*((_QWORD *)v20 + 54);
        *((_QWORD *)v20 + 54) = 0;
        if (v33)
          operator delete(v33);
        if (v20[295] < 0)
          operator delete(*((void **)v20 + 34));
        free(*((void **)v20 + 8));
        operator delete(v20);
        v20 = v30;
      }
      while (v30);
    }
    *(_QWORD *)(a1 + 88) = 0;
    v21 = *(_QWORD *)(a1 + 80);
    if (v21)
    {
      for (j = 0; j != v21; ++j)
        *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8 * j) = 0;
    }
    *(_QWORD *)(a1 + 96) = 0;
  }
  v23 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 72) = 0;
  v24 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v23;
  if (v24)
    operator delete(v24);
  v25 = *(_QWORD *)(a2 + 88);
  v26 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v25;
  *(_QWORD *)(a1 + 80) = v26;
  *(_QWORD *)(a2 + 80) = 0;
  v27 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v27;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  if (v27)
  {
    v28 = *(_QWORD *)(v25 + 8);
    v29 = *(_QWORD *)(a1 + 80);
    if ((v29 & (v29 - 1)) != 0)
    {
      if (v28 >= v29)
        v28 %= v29;
    }
    else
    {
      v28 &= v29 - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8 * v28) = a1 + 88;
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 96) = 0;
  }
  v34 = *(_QWORD *)(a2 + 112);
  v35 = *(void **)(a1 + 128);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v34;
  if (v35)
  {
    *(_QWORD *)(a1 + 136) = v35;
    operator delete(v35);
    *(_QWORD *)(a1 + 128) = 0;
    *(_QWORD *)(a1 + 136) = 0;
    *(_QWORD *)(a1 + 144) = 0;
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = 0;
  if (*(_QWORD *)(a1 + 176))
  {
    v36 = *(void ***)(a1 + 168);
    if (v36)
    {
      do
      {
        v37 = (void **)*v36;
        free(v36[8]);
        operator delete(v36);
        v36 = v37;
      }
      while (v37);
    }
    *(_QWORD *)(a1 + 168) = 0;
    v38 = *(_QWORD *)(a1 + 160);
    if (v38)
    {
      for (k = 0; k != v38; ++k)
        *(_QWORD *)(*(_QWORD *)(a1 + 152) + 8 * k) = 0;
    }
    *(_QWORD *)(a1 + 176) = 0;
  }
  v40 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a2 + 152) = 0;
  v41 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v40;
  if (v41)
    operator delete(v41);
  v42 = *(_QWORD *)(a2 + 168);
  v43 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v42;
  *(_QWORD *)(a1 + 160) = v43;
  *(_QWORD *)(a2 + 160) = 0;
  v44 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v44;
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  if (v44)
  {
    v45 = *(_QWORD *)(v42 + 8);
    v46 = *(_QWORD *)(a1 + 160);
    if ((v46 & (v46 - 1)) != 0)
    {
      if (v45 >= v46)
        v45 %= v46;
    }
    else
    {
      v45 &= v46 - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 152) + 8 * v45) = a1 + 168;
    *(_QWORD *)(a2 + 168) = 0;
    *(_QWORD *)(a2 + 176) = 0;
  }
  if (*(_QWORD *)(a1 + 216))
  {
    v47 = *(_QWORD **)(a1 + 208);
    if (v47)
    {
      do
      {
        v48 = (_QWORD *)*v47;
        operator delete(v47);
        v47 = v48;
      }
      while (v48);
    }
    *(_QWORD *)(a1 + 208) = 0;
    v49 = *(_QWORD *)(a1 + 200);
    if (v49)
    {
      for (m = 0; m != v49; ++m)
        *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8 * m) = 0;
    }
    *(_QWORD *)(a1 + 216) = 0;
  }
  v51 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a2 + 192) = 0;
  v52 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v51;
  if (v52)
    operator delete(v52);
  v53 = *(_QWORD *)(a2 + 208);
  v54 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v53;
  *(_QWORD *)(a1 + 200) = v54;
  *(_QWORD *)(a2 + 200) = 0;
  v55 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 216) = v55;
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  if (v55)
  {
    v56 = *(_QWORD *)(v53 + 8);
    v57 = *(_QWORD *)(a1 + 200);
    if ((v57 & (v57 - 1)) != 0)
    {
      if (v56 >= v57)
        v56 %= v57;
    }
    else
    {
      v56 &= v57 - 1;
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8 * v56) = a1 + 208;
    *(_QWORD *)(a2 + 208) = 0;
    *(_QWORD *)(a2 + 216) = 0;
  }
  v58 = (void **)(a1 + 232);
  v59 = *(_QWORD **)(a1 + 232);
  if (v59)
  {
    v60 = *(_QWORD **)(a1 + 240);
    v61 = *(void **)(a1 + 232);
    if (v60 != v59)
    {
      do
      {
        v62 = (_QWORD *)*(v60 - 3);
        if (v62)
        {
          do
          {
            v63 = (_QWORD *)*v62;
            operator delete(v62);
            v62 = v63;
          }
          while (v63);
        }
        v65 = (void *)*(v60 - 5);
        v60 -= 5;
        v64 = v65;
        *v60 = 0;
        if (v65)
          operator delete(v64);
      }
      while (v60 != v59);
      v61 = *v58;
    }
    *(_QWORD *)(a1 + 240) = v59;
    operator delete(v61);
    *v58 = 0;
    *(_QWORD *)(a1 + 240) = 0;
    *(_QWORD *)(a1 + 248) = 0;
  }
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a2 + 232) = 0;
  *(_QWORD *)(a2 + 240) = 0;
  *(_QWORD *)(a2 + 248) = 0;
  v66 = *(void **)(a1 + 256);
  if (v66)
  {
    *(_QWORD *)(a1 + 264) = v66;
    operator delete(v66);
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    *(_QWORD *)(a1 + 272) = 0;
  }
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a2 + 256) = 0;
  *(_QWORD *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 272) = 0;
  v67 = *(void **)(a1 + 280);
  if (v67)
  {
    operator delete(v67);
    *(_QWORD *)(a1 + 280) = 0;
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
  }
  v68 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v68;
  v69 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a2 + 280) = 0;
  *(_QWORD *)(a2 + 288) = 0;
  *(_QWORD *)(a2 + 296) = 0;
  *(_QWORD *)(a1 + 304) = v69;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  v70 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v70;
  v72 = *(_OWORD *)(a2 + 384);
  v71 = *(_OWORD *)(a2 + 400);
  v73 = *(_OWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 384) = v72;
  *(_OWORD *)(a1 + 400) = v71;
  *(_OWORD *)(a1 + 368) = v73;
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  v74 = *(_OWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = v74;
  *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
  return a1;
}

uint64_t sub_239B5F800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE *v21;
  _BYTE *v22;
  int64_t v23;
  char *v24;
  char *v25;
  _BYTE *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  _BYTE *v43;
  __int128 v44;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v13;
  if (v13)
  {
    v14 = (unint64_t *)(v13 + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  v16 = *(_OWORD *)(a2 + 64);
  v17 = *(_OWORD *)(a2 + 80);
  v18 = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 80) = v17;
  *(_OWORD *)(a1 + 96) = v18;
  *(_OWORD *)(a1 + 64) = v16;
  v19 = *(_OWORD *)(a2 + 120);
  v20 = *(_OWORD *)(a2 + 132);
  *(_QWORD *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 132) = v20;
  *(_OWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  v22 = *(_BYTE **)(a2 + 152);
  v21 = *(_BYTE **)(a2 + 160);
  v23 = v21 - v22;
  if (v21 != v22)
  {
    if (v23 < 0)
      sub_2394189F8();
    v24 = (char *)operator new(v21 - v22);
    *(_QWORD *)(a1 + 152) = v24;
    *(_QWORD *)(a1 + 160) = v24;
    v25 = &v24[8 * (v23 >> 3)];
    *(_QWORD *)(a1 + 168) = v25;
    memcpy(v24, v22, v23);
    *(_QWORD *)(a1 + 160) = v25;
  }
  v26 = (_BYTE *)(a1 + 176);
  if (*(char *)(a2 + 199) < 0)
  {
    sub_23941A7F8(v26, *(void **)(a2 + 176), *(_QWORD *)(a2 + 184));
  }
  else
  {
    v27 = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_OWORD *)v26 = v27;
  }
  v28 = *(_OWORD *)(a2 + 200);
  v29 = *(_OWORD *)(a2 + 216);
  v30 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = v30;
  *(_OWORD *)(a1 + 216) = v29;
  *(_OWORD *)(a1 + 200) = v28;
  v31 = *(_OWORD *)(a2 + 264);
  v32 = *(_OWORD *)(a2 + 280);
  v33 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v33;
  *(_OWORD *)(a1 + 264) = v31;
  *(_OWORD *)(a1 + 280) = v32;
  v34 = *(_OWORD *)(a2 + 328);
  v35 = *(_OWORD *)(a2 + 344);
  v36 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v36;
  *(_OWORD *)(a1 + 328) = v34;
  *(_OWORD *)(a1 + 344) = v35;
  v37 = *(_OWORD *)(a2 + 392);
  v38 = *(_OWORD *)(a2 + 408);
  v39 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v39;
  *(_OWORD *)(a1 + 392) = v37;
  *(_OWORD *)(a1 + 408) = v38;
  sub_239A62AE0(a1 + 456, (__int128 *)(a2 + 456));
  v40 = *(_OWORD *)(a2 + 1536);
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1536) = v40;
  sub_239A628DC(a1 + 1568, (uint64_t *)(a2 + 1568));
  *(_DWORD *)(a1 + 1656) = *(_DWORD *)(a2 + 1656);
  *(_BYTE *)(a1 + 1664) = *(_BYTE *)(a2 + 1664);
  v41 = *(_QWORD *)(a2 + 1696);
  if (!v41)
    goto LABEL_22;
  if (v41 != a2 + 1672)
  {
    v41 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v41 + 16))(v41);
LABEL_22:
    *(_QWORD *)(a1 + 1696) = v41;
    goto LABEL_24;
  }
  *(_QWORD *)(a1 + 1696) = a1 + 1672;
  (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 1696) + 24))(*(_QWORD *)(a2 + 1696), a1 + 1672);
LABEL_24:
  *(_OWORD *)(a1 + 1704) = *(_OWORD *)(a2 + 1704);
  if (*(char *)(a2 + 1743) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 1720), *(void **)(a2 + 1720), *(_QWORD *)(a2 + 1728));
  }
  else
  {
    v42 = *(_OWORD *)(a2 + 1720);
    *(_QWORD *)(a1 + 1736) = *(_QWORD *)(a2 + 1736);
    *(_OWORD *)(a1 + 1720) = v42;
  }
  v43 = (_BYTE *)(a1 + 1744);
  if (*(char *)(a2 + 1767) < 0)
  {
    sub_23941A7F8(v43, *(void **)(a2 + 1744), *(_QWORD *)(a2 + 1752));
  }
  else
  {
    v44 = *(_OWORD *)(a2 + 1744);
    *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
    *(_OWORD *)v43 = v44;
  }
  return a1;
}

void sub_239B5FAC0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void **v8;
  _QWORD *v10;
  uint64_t v11;

  if (*(char *)(v1 + 1743) < 0)
    operator delete(*v8);
  v10 = *(_QWORD **)(v1 + 1696);
  if (v10 == v7)
  {
    v11 = 4;
  }
  else
  {
    if (!v10)
      goto LABEL_8;
    v11 = 5;
    v7 = *(_QWORD **)(v1 + 1696);
  }
  (*(void (**)(_QWORD *))(*v7 + 8 * v11))(v7);
LABEL_8:
  sub_239B61730((_QWORD *)(v1 + 1536));
  sub_239B61780(v6);
  sub_23943285C(v5 - 32);
  sub_239A4D7C0(v4);
  sub_239A4D7C0(v3);
  sub_239A4D7C0(v2);
  sub_239A4D7C0(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B5FB80(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[3];
  _QWORD *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = (_QWORD *)a2[3];
  if (!v3)
  {
    v10 = 0;
    v4 = (_QWORD *)(a1 + 936);
    goto LABEL_9;
  }
  if (v3 == a2)
  {
    v10 = v9;
    (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v9);
    v3 = v10;
    v4 = (_QWORD *)(a1 + 936);
    if (v10)
      goto LABEL_7;
LABEL_9:
    v12 = v3;
    goto LABEL_10;
  }
  v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
  v10 = v3;
  v4 = (_QWORD *)(a1 + 936);
  if (!v3)
    goto LABEL_9;
LABEL_7:
  if (v3 != v9)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
    goto LABEL_9;
  }
  v12 = v11;
  (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
LABEL_10:
  sub_239467AE8(v11, v4);
  v5 = v12;
  if (v12 == v11)
  {
    v6 = 4;
    v5 = v11;
  }
  else
  {
    if (!v12)
      goto LABEL_15;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_15:
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239B5FCE0(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B5FCEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v14;
  uint64_t v15;

  v14 = a13;
  if (a13 == &a10)
  {
    v15 = 4;
    v14 = &a10;
  }
  else
  {
    if (!a13)
      _Unwind_Resume(exception_object);
    v15 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v14 + 8 * v15))();
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B5FD30(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;

  if (*(char *)(a1 + 1767) < 0)
  {
    operator delete(*(void **)(a1 + 1744));
    if ((*(char *)(a1 + 1743) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else if ((*(char *)(a1 + 1743) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 1720));
LABEL_3:
  v2 = *(_QWORD **)(a1 + 1696);
  if (v2 == (_QWORD *)(a1 + 1672))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 1672);
  }
  else
  {
    if (!v2)
      goto LABEL_10;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_10:
  v4 = *(void **)(a1 + 1632);
  if (v4)
  {
    *(_QWORD *)(a1 + 1640) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 1608);
  if (v5)
  {
    *(_QWORD *)(a1 + 1616) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 1584);
  if (v6)
  {
    *(_QWORD *)(a1 + 1592) = v6;
    operator delete(v6);
  }
  v7 = *(_QWORD **)(a1 + 1496);
  if (v7 == (_QWORD *)(a1 + 1472))
  {
    v8 = 4;
    v7 = (_QWORD *)(a1 + 1472);
  }
  else
  {
    if (!v7)
      goto LABEL_21;
    v8 = 5;
  }
  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_21:
  v9 = *(_QWORD **)(a1 + 1464);
  if (v9 == (_QWORD *)(a1 + 1440))
  {
    v10 = 4;
    v9 = (_QWORD *)(a1 + 1440);
  }
  else
  {
    if (!v9)
      goto LABEL_26;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_26:
  v11 = *(void **)(a1 + 1120);
  if (v11)
  {
    *(_QWORD *)(a1 + 1128) = v11;
    operator delete(v11);
  }
  if (*(char *)(a1 + 911) < 0)
    operator delete(*(void **)(a1 + 888));
  v12 = *(_QWORD **)(a1 + 832);
  if (v12 == (_QWORD *)(a1 + 808))
  {
    v13 = 4;
    v12 = (_QWORD *)(a1 + 808);
  }
  else
  {
    if (!v12)
      goto LABEL_35;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_35:
  v14 = *(_QWORD **)(a1 + 800);
  if (v14 == (_QWORD *)(a1 + 776))
  {
    v15 = 4;
    v14 = (_QWORD *)(a1 + 776);
  }
  else
  {
    if (!v14)
      goto LABEL_40;
    v15 = 5;
  }
  (*(void (**)(void))(*v14 + 8 * v15))();
LABEL_40:
  if (*(char *)(a1 + 199) < 0)
  {
    operator delete(*(void **)(a1 + 176));
    v16 = *(void **)(a1 + 152);
    if (!v16)
      goto LABEL_43;
    goto LABEL_42;
  }
  v16 = *(void **)(a1 + 152);
  if (v16)
  {
LABEL_42:
    *(_QWORD *)(a1 + 160) = v16;
    operator delete(v16);
  }
LABEL_43:
  v17 = *(std::__shared_weak_count **)(a1 + 56);
  if (!v17)
    goto LABEL_47;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(p_shared_owners);
  while (__stlxr(v19 - 1, p_shared_owners));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    v20 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v20)
      goto LABEL_55;
  }
  else
  {
LABEL_47:
    v20 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v20)
      goto LABEL_55;
  }
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldaxr(v21);
  while (__stlxr(v22 - 1, v21));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
LABEL_55:
  v23 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v23)
    goto LABEL_59;
  v24 = (unint64_t *)&v23->__shared_owners_;
  do
    v25 = __ldaxr(v24);
  while (__stlxr(v25 - 1, v24));
  if (!v25)
  {
    ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
    std::__shared_weak_count::__release_weak(v23);
    v26 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v26)
      return a1;
  }
  else
  {
LABEL_59:
    v26 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v26)
      return a1;
  }
  v27 = (unint64_t *)&v26->__shared_owners_;
  do
    v28 = __ldaxr(v27);
  while (__stlxr(v28 - 1, v27));
  if (!v28)
  {
    ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
    std::__shared_weak_count::__release_weak(v26);
  }
  return a1;
}

uint64_t sub_239B5FFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void **v36;
  _QWORD *v37;
  void *v38;
  void *v39;

  v4 = sub_239B5F258(a1, a2);
  sub_239B3CD20(v4 + 456, (uint64_t *)(a2 + 456));
  sub_239B3CD20(a1 + 496, (uint64_t *)(a2 + 496));
  v5 = *(_OWORD *)(a2 + 536);
  v6 = *(_OWORD *)(a2 + 552);
  v7 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 584) = v7;
  *(_OWORD *)(a1 + 536) = v5;
  *(_OWORD *)(a1 + 552) = v6;
  v8 = *(_OWORD *)(a2 + 600);
  v9 = *(_OWORD *)(a2 + 616);
  v10 = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 632) = *(_OWORD *)(a2 + 632);
  *(_OWORD *)(a1 + 648) = v10;
  *(_OWORD *)(a1 + 600) = v8;
  *(_OWORD *)(a1 + 616) = v9;
  v11 = *(_OWORD *)(a2 + 776);
  v13 = *(_OWORD *)(a2 + 728);
  v12 = *(_OWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
  *(_OWORD *)(a1 + 776) = v11;
  *(_OWORD *)(a1 + 728) = v13;
  *(_OWORD *)(a1 + 744) = v12;
  v14 = *(_OWORD *)(a2 + 664);
  v15 = *(_OWORD *)(a2 + 680);
  v16 = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(_OWORD *)(a1 + 712) = v16;
  *(_OWORD *)(a1 + 664) = v14;
  *(_OWORD *)(a1 + 680) = v15;
  sub_239433E6C(a1 + 792, (uint64_t *)(a2 + 792));
  v17 = *(void **)(a1 + 832);
  if (v17)
  {
    *(_QWORD *)(a1 + 840) = v17;
    operator delete(v17);
    *(_QWORD *)(a1 + 832) = 0;
    *(_QWORD *)(a1 + 840) = 0;
    *(_QWORD *)(a1 + 848) = 0;
  }
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  *(_QWORD *)(a2 + 840) = 0;
  *(_QWORD *)(a2 + 832) = 0;
  *(_QWORD *)(a2 + 848) = 0;
  if (*(unsigned __int8 *)(a1 + 896) == *(unsigned __int8 *)(a2 + 896))
  {
    if (*(_BYTE *)(a1 + 896))
    {
      if (*(_QWORD *)(a1 + 880))
      {
        v18 = *(_QWORD **)(a1 + 872);
        if (v18)
        {
          do
          {
            v19 = (_QWORD *)*v18;
            operator delete(v18);
            v18 = v19;
          }
          while (v19);
        }
        *(_QWORD *)(a1 + 872) = 0;
        v20 = *(_QWORD *)(a1 + 864);
        if (v20)
        {
          for (i = 0; i != v20; ++i)
            *(_QWORD *)(*(_QWORD *)(a1 + 856) + 8 * i) = 0;
        }
        *(_QWORD *)(a1 + 880) = 0;
      }
      v22 = *(_QWORD *)(a2 + 856);
      *(_QWORD *)(a2 + 856) = 0;
      v23 = *(void **)(a1 + 856);
      *(_QWORD *)(a1 + 856) = v22;
      if (v23)
        operator delete(v23);
      *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
      *(_QWORD *)(a2 + 864) = 0;
      v24 = *(_QWORD *)(a2 + 880);
      *(_QWORD *)(a1 + 880) = v24;
      *(_DWORD *)(a1 + 888) = *(_DWORD *)(a2 + 888);
      v25 = *(_QWORD *)(a2 + 872);
      *(_QWORD *)(a1 + 872) = v25;
      if (v24)
      {
        v26 = *(_QWORD *)(v25 + 8);
        v27 = *(_QWORD *)(a1 + 864);
        if ((v27 & (v27 - 1)) != 0)
        {
          if (v26 >= v27)
            v26 %= v27;
        }
        else
        {
          v26 &= v27 - 1;
        }
        *(_QWORD *)(*(_QWORD *)(a1 + 856) + 8 * v26) = a1 + 872;
        *(_QWORD *)(a2 + 872) = 0;
        *(_QWORD *)(a2 + 880) = 0;
      }
    }
  }
  else if (*(_BYTE *)(a1 + 896))
  {
    v28 = *(_QWORD **)(a1 + 872);
    if (v28)
    {
      do
      {
        v29 = (_QWORD *)*v28;
        operator delete(v28);
        v28 = v29;
      }
      while (v29);
    }
    v30 = *(void **)(a1 + 856);
    *(_QWORD *)(a1 + 856) = 0;
    if (v30)
      operator delete(v30);
    *(_BYTE *)(a1 + 896) = 0;
  }
  else
  {
    v31 = *(_QWORD *)(a2 + 856);
    *(_QWORD *)(a2 + 856) = 0;
    *(_QWORD *)(a1 + 856) = v31;
    *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
    *(_QWORD *)(a2 + 864) = 0;
    v32 = *(_QWORD *)(a2 + 872);
    *(_QWORD *)(a1 + 872) = v32;
    v33 = *(_QWORD *)(a2 + 880);
    *(_QWORD *)(a1 + 880) = v33;
    *(_DWORD *)(a1 + 888) = *(_DWORD *)(a2 + 888);
    if (v33)
    {
      v34 = *(_QWORD *)(v32 + 8);
      v35 = *(_QWORD *)(a1 + 864);
      if ((v35 & (v35 - 1)) != 0)
      {
        if (v34 >= v35)
          v34 %= v35;
      }
      else
      {
        v34 &= v35 - 1;
      }
      *(_QWORD *)(v31 + 8 * v34) = a1 + 872;
      *(_QWORD *)(a2 + 872) = 0;
      *(_QWORD *)(a2 + 880) = 0;
    }
    *(_BYTE *)(a1 + 896) = 1;
  }
  v36 = (void **)(a1 + 904);
  v37 = (_QWORD *)(a2 + 904);
  if (*(unsigned __int8 *)(a1 + 928) == *(unsigned __int8 *)(a2 + 928))
  {
    if (*(_BYTE *)(a1 + 928))
    {
      v38 = *v36;
      if (*v36)
      {
        *(_QWORD *)(a1 + 912) = v38;
        operator delete(v38);
        *v36 = 0;
        *(_QWORD *)(a1 + 912) = 0;
        *(_QWORD *)(a1 + 920) = 0;
      }
      *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
      *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
      *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
      *v37 = 0;
      *(_QWORD *)(a2 + 912) = 0;
      *(_QWORD *)(a2 + 920) = 0;
    }
  }
  else if (*(_BYTE *)(a1 + 928))
  {
    v39 = *v36;
    if (*v36)
    {
      *(_QWORD *)(a1 + 912) = v39;
      operator delete(v39);
    }
    *(_BYTE *)(a1 + 928) = 0;
  }
  else
  {
    *v36 = 0;
    *(_QWORD *)(a1 + 912) = 0;
    *(_QWORD *)(a1 + 920) = 0;
    *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
    *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
    *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
    *v37 = 0;
    *(_QWORD *)(a2 + 912) = 0;
    *(_QWORD *)(a2 + 920) = 0;
    *(_BYTE *)(a1 + 928) = 1;
  }
  return a1;
}

_QWORD *sub_239B602E4(uint64_t a1, unint64_t a2, char *a3, size_t __sz)
{
  char *v6;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  int64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 *v30;
  uint64_t v31;
  __int128 v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  unint64_t v38;
  BOOL v39;
  char v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  __int128 *v44;
  _OWORD *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  unint64_t v51;
  char *v52;
  unint64_t v53;
  unint64_t v54;
  BOOL v56;
  uint64_t v58;
  uint64_t v59;
  __int128 *v60;
  _OWORD *v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v6 = (char *)a2;
  v8 = *(_QWORD *)(a1 + 16);
  result = *(_QWORD **)a1;
  if (__sz <= (v8 - (uint64_t)result) >> 3)
  {
    v17 = *(_QWORD **)(a1 + 8);
    v16 = (_QWORD *)(a1 + 8);
    v13 = v17;
    v18 = (char *)v17 - (char *)result;
    v19 = v17 - result;
    if (v19 < __sz)
    {
      v20 = (uint64_t *)(a2 + 8 * v19);
      if (v13 == result)
        goto LABEL_18;
      if ((unint64_t)(v18 - 8) >= 0x78)
      {
        v36 = (v18 & 0xFFFFFFFFFFFFFFF8) - 4;
        v37 = (char *)result + v36;
        v38 = a2 + v36;
        v39 = (unint64_t)result + 4 >= a2 + (v18 & 0xFFFFFFFFFFFFFFF8)
           || a2 + 4 >= (unint64_t)result + (v18 & 0xFFFFFFFFFFFFFFF8);
        v40 = !v39;
        v21 = (uint64_t *)a2;
        v41 = (unint64_t)v37 <= a2 || (unint64_t)result >= v38;
        if (v41 && (v40 & 1) == 0)
        {
          v42 = ((unint64_t)(v18 - 8) >> 3) + 1;
          v43 = 8 * (v42 & 0x3FFFFFFFFFFFFFF8);
          v44 = (__int128 *)(a2 + 32);
          v45 = result + 4;
          v46 = v42 & 0x3FFFFFFFFFFFFFF8;
          do
          {
            v48 = *(v44 - 2);
            v47 = *(v44 - 1);
            v50 = *v44;
            v49 = v44[1];
            v44 += 4;
            *(v45 - 2) = v48;
            *(v45 - 1) = v47;
            *v45 = v50;
            v45[1] = v49;
            v45 += 4;
            v46 -= 8;
          }
          while (v46);
          if (v42 == (v42 & 0x3FFFFFFFFFFFFFF8))
          {
LABEL_18:
            if (v20 == (uint64_t *)a3)
            {
              v15 = 0;
              goto LABEL_68;
            }
            v23 = v18 + a2;
            v24 = (unint64_t)&a3[-v23 - 8];
            if (v24 < 0x38)
            {
              v26 = (char *)v13;
            }
            else
            {
              v25 = (unint64_t)v13 - v23;
              v26 = (char *)v13;
              if (v25 >= 0x20)
              {
                v27 = (v24 >> 3) + 1;
                v28 = v27 & 0x3FFFFFFFFFFFFFFCLL;
                v20 = (uint64_t *)((char *)v20 + v28 * 8);
                v29 = v13 + 2;
                v30 = (__int128 *)(a2 + 8 * v19 + 16);
                v31 = v27 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  v32 = *v30;
                  *(v29 - 1) = *(v30 - 1);
                  *v29 = v32;
                  v29 += 2;
                  v30 += 2;
                  v31 -= 4;
                }
                while (v31);
                v26 = (char *)&v13[v28];
                if (v27 == (v27 & 0x3FFFFFFFFFFFFFFCLL))
                  goto LABEL_67;
              }
            }
            do
            {
              v67 = *v20++;
              *(_QWORD *)v26 = v67;
              v26 += 8;
            }
            while (v20 != (uint64_t *)a3);
LABEL_67:
            v15 = v26 - (char *)v13;
            goto LABEL_68;
          }
          v21 = (uint64_t *)(a2 + v43);
          result = (_QWORD *)((char *)result + v43);
        }
      }
      else
      {
        v21 = (uint64_t *)a2;
      }
      do
      {
        v22 = *v21++;
        *result++ = v22;
      }
      while (v21 != v20);
      goto LABEL_18;
    }
    if ((char *)a2 == a3)
    {
      v34 = (char *)result;
    }
    else
    {
      v33 = (unint64_t)&a3[-a2 - 8];
      if (v33 >= 0x78)
      {
        v51 = v33 & 0xFFFFFFFFFFFFFFF8 | 4;
        v52 = (char *)result + v51;
        v53 = a2 + v51;
        v54 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
        v56 = (unint64_t)result + 4 < a2 + v54 && a2 + 4 < (unint64_t)result + v54;
        if ((unint64_t)v52 <= a2 || (unint64_t)result >= v53)
        {
          if (v56)
          {
            v34 = (char *)result;
          }
          else
          {
            v58 = (v33 >> 3) + 1;
            v59 = v58 & 0x3FFFFFFFFFFFFFF8;
            v34 = (char *)&result[v59];
            v60 = (__int128 *)(a2 + 32);
            v61 = result + 4;
            v62 = v58 & 0x3FFFFFFFFFFFFFF8;
            do
            {
              v64 = *(v60 - 2);
              v63 = *(v60 - 1);
              v66 = *v60;
              v65 = v60[1];
              v60 += 4;
              *(v61 - 2) = v64;
              *(v61 - 1) = v63;
              *v61 = v66;
              v61[1] = v65;
              v61 += 4;
              v62 -= 8;
            }
            while (v62);
            if (v58 == (v58 & 0x3FFFFFFFFFFFFFF8))
              goto LABEL_32;
            v6 = (char *)(a2 + v59 * 8);
          }
        }
        else
        {
          v34 = (char *)result;
        }
      }
      else
      {
        v34 = (char *)result;
      }
      do
      {
        v35 = *(_QWORD *)v6;
        v6 += 8;
        *(_QWORD *)v34 = v35;
        v34 += 8;
      }
      while (v6 != a3);
    }
LABEL_32:
    v15 = v34 - (char *)result;
    v13 = result;
    goto LABEL_68;
  }
  if (result)
  {
    *(_QWORD *)(a1 + 8) = result;
    operator delete(result);
    v8 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  if (__sz >> 61)
    goto LABEL_70;
  v10 = v8 >> 2;
  if (v8 >> 2 <= __sz)
    v10 = __sz;
  v39 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8;
  v11 = 0x1FFFFFFFFFFFFFFFLL;
  if (!v39)
    v11 = v10;
  if (v11 >> 61)
LABEL_70:
    sub_2394189F8();
  v12 = v11;
  result = operator new(8 * v11);
  v13 = result;
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = result;
  *(_QWORD *)(a1 + 16) = &result[v12];
  v14 = (char *)result;
  if (v6 != a3)
  {
    result = memcpy(result, v6, ((a3 - v6 - 8) & 0xFFFFFFFFFFFFFFF8) + 8);
    v14 = (char *)v13 + ((a3 - v6 - 8) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  v15 = v14 - (char *)v13;
  v16 = (_QWORD *)(a1 + 8);
LABEL_68:
  *v16 = (char *)v13 + v15;
  return result;
}

void sub_239B60624(uint64_t a1, char a2, float64x2_t a3, float64x2_t a4)
{
  __int128 v5;
  float64x2_t v6;
  uint64_t *v9;
  float64x2_t v10;
  float64x2_t v16;
  double v17;
  double v18;
  float64x2_t v20;
  float64x2_t v22;
  float64x2_t v23;
  float64x2_t v24;
  unint64_t v25;
  double v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  float64x2_t v33;
  float64x2_t v34;
  int64x2_t v39;
  float64x2_t v40;
  double v41;
  float64x2_t v42;
  float64x2_t v43;
  float64x2_t v44;
  float64x2_t v45;
  float64x2_t v46;
  float64x2_t v47;
  float64x2_t v48;
  float64x2_t v49;
  float64x2_t v50;
  uint64_t *v51;
  float64x2_t v52;
  float64x2_t v53;
  float64x2_t v54;
  float64x2_t v55;
  float64x2_t v56;
  __int128 v57;
  float64x2_t v58;
  float64x2_t v59;
  float64x2_t v60;
  float64x2_t v61;
  float64x2_t v62;
  float64x2_t v63;
  _BYTE v64[32];
  float64x2_t v65;
  double v66;

  v9 = *(uint64_t **)(a1 + 88);
  if (v9)
  {
    v10.f64[0] = a3.f64[0];
    v10.f64[1] = a3.f64[0];
    v54 = v10;
    __asm { FMOV            V1.2D, #-1.0 }
    v55 = _Q1;
    v53 = a3;
    do
    {
      *(_QWORD *)&v23.f64[0] = v9[13];
      v24 = *(float64x2_t *)(v9 + 11);
      v25 = vextq_s8((int8x16_t)v24, (int8x16_t)v24, 8uLL).u64[0];
      v26 = *((double *)v9 + 17);
      v27 = *(float64x2_t *)(v9 + 15);
      *(_QWORD *)&v28.f64[0] = vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL).u64[0];
      *(_QWORD *)&v5 = v9[21];
      _Q24 = *(float64x2_t *)(v9 + 19);
      *(_QWORD *)&v30.f64[0] = vextq_s8((int8x16_t)_Q24, (int8x16_t)_Q24, 8uLL).u64[0];
      *(_QWORD *)&v6.f64[0] = v9[25];
      v31 = *(float64x2_t *)(v9 + 23);
      v32 = (float64x2_t)vzip1q_s64((int64x2_t)v24, (int64x2_t)v27);
      v33 = (float64x2_t)vzip2q_s64((int64x2_t)v24, (int64x2_t)v27);
      v34.f64[0] = v23.f64[0];
      v34.f64[1] = v26;
      *(float64_t *)v64 = v23.f64[0];
      v63 = v24;
      *(double *)&v64[24] = v26;
      *(float64x2_t *)&v64[8] = v27;
      v66 = *(double *)&v5;
      v65 = _Q24;
      _Q16 = (int64x2_t)vmulq_f64(_Q24, v24);
      _Q17.f64[0] = v24.f64[1];
      __asm { FMLA            D16, D17, V24.D[1] }
      _Q17.f64[0] = _Q24.f64[1];
      *(double *)_Q16.i64 = *(double *)_Q16.i64 + *(double *)&v5 * v23.f64[0];
      _Q19 = (int8x16_t)vmulq_f64(_Q24, v27);
      _D20 = v27.f64[1];
      __asm { FMLA            D19, D20, V24.D[1] }
      *(double *)_Q19.i64 = *(double *)_Q19.i64 + *(double *)&v5 * v26;
      __asm { FMLA            D21, D17, V24.D[1] }
      _Q17.f64[0] = _D21 + *(double *)&v5 * *(double *)&v5;
      v39 = (int64x2_t)vaddq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v32, v27.f64[0]), v33, v27, 1), v34, v26), (float64x2_t)xmmword_239EC6830);
      *(_QWORD *)&v40.f64[0] = *(_OWORD *)&vabsq_f64(vaddq_f64(_Q17, v55));
      v40.f64[1] = NAN;
      v41 = vmaxnmvq_f64(vmaxnmq_f64(vmaxnmq_f64(vmaxnmq_f64(vabsq_f64(vaddq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v32, v24.f64[0]), v33, v24, 1), v34, v23.f64[0]), (float64x2_t)xmmword_239EC6820)), v40), vabsq_f64((float64x2_t)vextq_s8((int8x16_t)v39, _Q19, 8uLL))), vmaxnmq_f64(vabsq_f64((float64x2_t)vzip1q_s64(_Q16, v39)), vabsq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v32, _Q24.f64[0]), v33, _Q24, 1), v34, *(double *)&v5)))));
      if (v41 > 0.0001)
        goto LABEL_7;
      v42.f64[0] = v28.f64[0];
      v42.f64[1] = v26;
      *(_QWORD *)&v43.f64[0] = v5;
      v43.f64[1] = v30.f64[0];
      v44 = vmulq_f64(v42, v43);
      v45.f64[0] = v30.f64[0];
      *(_QWORD *)&v45.f64[1] = v5;
      v46 = vsubq_f64(vmulq_n_f64(v45, v27.f64[0]), vmulq_n_f64(v42, _Q24.f64[0]));
      v45.f64[0] = v23.f64[0];
      *(_QWORD *)&v45.f64[1] = v25;
      v47 = vmulq_f64(v45, v46);
      if (fabs(v47.f64[0]+ v24.f64[0] * vsubq_f64(v44, (float64x2_t)vdupq_laneq_s64((int64x2_t)v44, 1)).f64[0]- v47.f64[1]+ -1.0) <= 0.0001)
      {
        v16.f64[0] = _Q24.f64[0];
        v17 = *(double *)&v5;
      }
      else
      {
LABEL_7:
        v58 = v32;
        v59 = v31;
        v60 = v6;
        v61 = v33;
        v62 = v34;
        if (v41 > 0.1
          || (v28.f64[1] = v26,
              *(_QWORD *)&v48.f64[0] = v5,
              v48.f64[1] = v30.f64[0],
              v49 = vmulq_f64(v28, v48),
              *(_QWORD *)&v30.f64[1] = v5,
              *(_QWORD *)&v23.f64[1] = v25,
              v50 = vmulq_f64(v23, vsubq_f64(vmulq_n_f64(v30, v27.f64[0]), vmulq_n_f64(v28, _Q24.f64[0]))),
              fabs(v50.f64[0]+ v24.f64[0] * vsubq_f64(v49, (float64x2_t)vdupq_laneq_s64((int64x2_t)v49, 1)).f64[0]- v50.f64[1]+ -1.0) > 0.1))
        {
          sub_239A444D4((uint64_t)"unknown file", 36, (uint64_t)"", (void (*)(void *))sub_239A4463C);
          sub_239A4475C();
          abort();
        }
        v56 = _Q24;
        v57 = v5;
        sub_239516070(&v63);
        _Q24 = v56;
        v5 = v57;
        v17 = v66;
        v16 = v65;
        v28 = *(float64x2_t *)&v64[16];
        v23 = *(float64x2_t *)v64;
        v24 = v63;
        *(_QWORD *)&v30.f64[0] = vextq_s8((int8x16_t)v16, (int8x16_t)v16, 8uLL).u64[0];
        *(_QWORD *)&v26 = vextq_s8((int8x16_t)v28, (int8x16_t)v28, 8uLL).u64[0];
        *(_QWORD *)&v27.f64[0] = vextq_s8((int8x16_t)v23, (int8x16_t)v23, 8uLL).u64[0];
        v25 = vextq_s8((int8x16_t)v24, (int8x16_t)v24, 8uLL).u64[0];
        a3 = v53;
        v34 = v62;
        v6 = v60;
        v33 = v61;
        v32 = v58;
        v31 = v59;
      }
      *(_QWORD *)&v18 = *(_OWORD *)&vsubq_f64((float64x2_t)0, v6);
      _Q18 = vsubq_f64((float64x2_t)0, v31);
      v20 = vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v32, _Q18.f64[0]), v33, _Q18, 1), v34, v18);
      _Q20 = vmulq_f64(_Q24, _Q18);
      _Q18.f64[0] = _Q18.f64[1];
      __asm { FMLA            D20, D18, V24.D[1] }
      _Q20.f64[0] = vmlad_n_f64(_Q20.f64[0], *(double *)&v5, v18);
      _Q17 = vmulq_f64(v54, v20);
      _Q18.f64[0] = *(double *)vextq_s8((int8x16_t)_Q17, (int8x16_t)_Q17, 8uLL).i64;
      v20.f64[0] = vmulq_f64(a3, _Q20).f64[0];
      v16.f64[1] = v30.f64[0];
      *(_QWORD *)&v24.f64[1] = v25;
      v27.f64[1] = v28.f64[0];
      v22 = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v24, _Q17.f64[0]), v27, _Q18.f64[0]), v16, v20.f64[0]);
      v27.f64[0] = v23.f64[0] * _Q17.f64[0] + v26 * _Q18.f64[0] + v17 * v20.f64[0];
      a4 = vnegq_f64(v22);
      *(float64x2_t *)(v9 + 23) = a4;
      v9[25] = *(_OWORD *)&vnegq_f64(v27);
      v9 = (uint64_t *)*v9;
    }
    while (v9);
  }
  if ((a2 & 1) == 0)
  {
    v51 = *(uint64_t **)(a1 + 48);
    if (v51)
    {
      v52.f64[0] = a3.f64[0];
      v52.f64[1] = a3.f64[0];
      do
      {
        *(_QWORD *)&a4.f64[0] = v51[5];
        a4 = vmulq_f64(a3, a4);
        *(float64x2_t *)(v51 + 3) = vmulq_f64(v52, *(float64x2_t *)(v51 + 3));
        v51[5] = *(_QWORD *)&a4.f64[0];
        v51 = (uint64_t *)*v51;
      }
      while (v51);
    }
  }
}

double sub_239B60994(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t v2;
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  float64x2_t v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  float64x2_t v20;
  float64x2_t v21;
  float64x2_t v23;
  float64x2_t v24;
  float64x2_t v25;
  float64x2_t v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  float64x2_t v40;
  float64x2_t v41;
  float64x2_t v42;
  float64x2_t v43;
  float64x2_t v44;
  float64x2_t v45;
  float64x2_t v46;
  float64x2_t v47;
  float64x2_t v48;
  float64x2_t v49;
  float64x2_t v50;
  float64x2_t v51;
  float64x2_t v52;
  float64x2_t v53;
  float64x2_t v54;
  double result;

  v2 = a2[1];
  v4 = a2[2];
  v3 = a2[3];
  v6 = a2[4];
  v5 = a2[5];
  v8 = a2[6];
  v7 = a2[7];
  __asm { FMOV            V7.2D, #-0.5 }
  v14 = vmulq_f64(*a2, _Q7);
  v15 = vmlaq_f64(v14, _Q7, v4);
  v16 = vmulq_f64(v2, _Q7);
  v17 = vmlaq_f64(v16, _Q7, v3);
  v18 = vaddq_f64(v7, vmlaq_f64(v17, _Q7, v5));
  v19 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v18, 1);
  v20 = vdivq_f64(vaddq_f64(v8, vmlaq_f64(v15, _Q7, v6)), v19);
  v21 = vdivq_f64(v18, v19);
  __asm { FMOV            V18.2D, #0.5 }
  v23 = vaddq_f64(v7, vmlaq_f64(v17, _Q18, v5));
  v24 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v23, 1);
  v25 = vdivq_f64(vaddq_f64(v8, vmlaq_f64(v15, _Q18, v6)), v24);
  v26 = vdivq_f64(v23, v24);
  v27 = vmlaq_f64(v14, _Q18, v4);
  v28 = vmlaq_f64(v16, _Q18, v3);
  v29 = vaddq_f64(v7, vmlaq_f64(v28, _Q7, v5));
  v30 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v29, 1);
  v31 = vdivq_f64(vaddq_f64(v8, vmlaq_f64(v27, _Q7, v6)), v30);
  v32 = vdivq_f64(v29, v30);
  v33 = vaddq_f64(v7, vmlaq_f64(v28, _Q18, v5));
  v34 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v33, 1);
  v35 = vdivq_f64(vaddq_f64(v8, vmlaq_f64(v27, _Q18, v6)), v34);
  v36 = vdivq_f64(v33, v34);
  v37 = vmulq_f64(*a2, _Q18);
  v38 = vmlaq_f64(v37, _Q7, v4);
  v39 = vmulq_f64(v2, _Q18);
  v40 = vmlaq_f64(v39, _Q7, v3);
  v41 = vaddq_f64(v7, vmlaq_f64(v40, _Q7, v5));
  v42 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v41, 1);
  v43 = vdivq_f64(vaddq_f64(v8, vmlaq_f64(v38, _Q7, v6)), v42);
  v44 = vdivq_f64(v41, v42);
  v45 = vaddq_f64(v7, vmlaq_f64(v40, _Q18, v5));
  v46 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v45, 1);
  v47 = vmlaq_f64(v37, _Q18, v4);
  v48 = vaddq_f64(v8, vmlaq_f64(v47, _Q7, v6));
  v49 = vmlaq_f64(v39, _Q18, v3);
  v50 = vaddq_f64(v7, vmlaq_f64(v49, _Q7, v5));
  v51 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v50, 1);
  v52 = vaddq_f64(v7, vmlaq_f64(v49, _Q18, v5));
  v53 = (float64x2_t)vdupq_laneq_s64((int64x2_t)v52, 1);
  v52.f64[0] = vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(v21, (float64x2_t)0), v26), v32), v36), v44), vdivq_f64(v45, v46)), vdivq_f64(v50, v51)), vdivq_f64(v52, v53)).f64[0];
  v54 = vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(vaddq_f64(v20, (float64x2_t)0), v25), v31), v35), v43), vdivq_f64(vaddq_f64(v8, vmlaq_f64(v38, _Q18, v6)), v46)), vdivq_f64(v48, v51)), vdivq_f64(vaddq_f64(v8, vmlaq_f64(v47, _Q18, v6)), v53));
  __asm { FMOV            V2.2D, #0.125 }
  *a1 = vmulq_f64(v54, _Q2);
  result = 0.125 * v52.f64[0];
  a1[1].f64[0] = result;
  return result;
}

uint64_t sub_239B60B4C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  sub_239A614AC((_QWORD *)(a1 + 3848));
  sub_239A615DC(a1 + 2104);
  sub_239A6177C(a1 + 1392);
  v2 = *(void **)(a1 + 1304);
  if (v2)
  {
    *(_QWORD *)(a1 + 1312) = v2;
    operator delete(v2);
  }
  sub_239421038(a1 + 1240, *(_QWORD **)(a1 + 1248));
  sub_239A61848(a1 + 736);
  v3 = *(void **)(a1 + 712);
  if (v3)
  {
    *(_QWORD *)(a1 + 720) = v3;
    operator delete(v3);
  }
  sub_239A4E1A4((_QWORD *)(a1 + 112));
  sub_239A4E2B0(a1 + 72);
  sub_239A4E348(a1 + 32);
  v4 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_239B60BE4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B60BF8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6FF8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B60C2C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6FF8;
  a2[1] = v2;
  return result;
}

void sub_239B60C48(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 48);
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B5A4EC;
  v9[1] = 0;
  v9[2] = v5;
  v9[3] = v4;
  sub_239B5A770((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B60CF0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B60D38()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B60D4C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = &off_250AF6FB0;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  result = *(__n128 *)(a1 + 40);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

__n128 sub_239B60D94(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  *(_QWORD *)a2 = &off_250AF6FB0;
  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B60DC4(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  sub_239AD2508(*(_QWORD *)(a1 + 8) + 208, *(__int128 **)(a1 + 16));
  sub_239AB5E40(*(_QWORD *)(a1 + 8) + 920, *(__int128 **)(a1 + 24));
  sub_239AA8158(*(_QWORD *)(a1 + 8) + 2664, *(__int128 **)(a1 + 32));
  kdebug_trace();
  v2 = *(_QWORD **)(a1 + 40);
  v3 = (std::__shared_weak_count *)v2[1];
  *v2 = 0;
  v2[1] = 0;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return kdebug_trace();
}

void sub_239B60E90()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B60EA4(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF6F68;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B60EE4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6F68;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

__n128 sub_239B60F0C(uint64_t a1)
{
  uint64_t v1;
  __int128 *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(__int128 **)(a1 + 16);
  v3 = *v2;
  v4 = v2[1];
  *(_DWORD *)(v1 + 48) = *((_DWORD *)v2 + 8);
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = v4;
  if ((__int128 *)(v1 + 16) == v2)
  {
    *(_QWORD *)(v1 + 80) = *((_QWORD *)v2 + 8);
    *(_OWORD *)(v1 + 88) = *(__int128 *)((char *)v2 + 72);
    v6 = *((_QWORD *)v2 + 11);
    *(_DWORD *)(v1 + 112) = *((_DWORD *)v2 + 24);
    *(_QWORD *)(v1 + 104) = v6;
  }
  else
  {
    sub_239421078((_QWORD *)(v1 + 56), *((_QWORD **)v2 + 5), (_QWORD *)v2 + 6);
    *(_QWORD *)(v1 + 80) = *((_QWORD *)v2 + 8);
    *(_OWORD *)(v1 + 88) = *(__int128 *)((char *)v2 + 72);
    v5 = *((_QWORD *)v2 + 11);
    *(_DWORD *)(v1 + 112) = *((_DWORD *)v2 + 24);
    *(_QWORD *)(v1 + 104) = v5;
    sub_23942156C((_QWORD *)(v1 + 120), *((char **)v2 + 13), *((char **)v2 + 14), (uint64_t)(*((_QWORD *)v2 + 14) - *((_QWORD *)v2 + 13)) >> 2);
  }
  *(_BYTE *)(v1 + 144) = *((_BYTE *)v2 + 128);
  result = *(__n128 *)((char *)v2 + 136);
  v8 = *(__int128 *)((char *)v2 + 152);
  v9 = *(__int128 *)((char *)v2 + 168);
  *(_QWORD *)(v1 + 200) = *((_QWORD *)v2 + 23);
  *(_OWORD *)(v1 + 184) = v9;
  *(_OWORD *)(v1 + 168) = v8;
  *(__n128 *)(v1 + 152) = result;
  return result;
}

void sub_239B60FD8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B60FEC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6EE8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B61020(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6EE8;
  a2[1] = v2;
  return result;
}

void sub_239B6103C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B61124;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B613A8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B610E0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B61124(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 308, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = a2;
  v14 = a2;
  v5 = v15;
  v6 = (uint64_t *)a3[3];
  if (!v6)
  {
    v16 = 0;
    LODWORD(v17) = 0;
    v18 = a2;
LABEL_10:
    v20 = v6;
    goto LABEL_11;
  }
  if (v6 == a3)
  {
    v16 = v15;
    (*(void (**)(uint64_t *, _QWORD *))(*a3 + 24))(a3, v15);
    v3 = v14;
    v6 = v16;
  }
  else
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    v16 = v6;
  }
  LODWORD(v17) = 0;
  v18 = v3;
  if (!v6)
    goto LABEL_10;
  if (v6 != v15)
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    goto LABEL_10;
  }
  v20 = &v19;
  (*(void (**)(_QWORD *))(v15[0] + 24))(v15);
LABEL_11:
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v18 = v14;
  v21 = v14;
  v25 = 0;
  v26 = v14;
  v7 = (std::__shared_weak_count *)operator new(0x120uLL);
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8A78;
  *(_QWORD *)&v13 = sub_239B00B80((uint64_t)&v7[1], (uint64_t)&v17);
  *((_QWORD *)&v13 + 1) = v7;
  sub_239A82E8C(&v17);
  if (v16 == v15)
  {
    v9 = 4;
    goto LABEL_15;
  }
  if (v16)
  {
    v9 = 5;
    v5 = v16;
LABEL_15:
    (*(void (**)(uint64_t *))(*v5 + 8 * v9))(v5);
  }
  v10 = sub_239AFE6F4(*(unsigned int **)(a1 + 288), &v13);
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  return v10;
}

void sub_239B61334(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B61340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, char a17)
{
  _QWORD *v17;
  uint64_t v19;

  if (a16 == v17)
  {
    v19 = 4;
  }
  else
  {
    if (!a16)
      _Unwind_Resume(exception_object);
    v19 = 5;
    v17 = a16;
  }
  (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B613A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, uint64_t, _BYTE *);
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  pthread_cond_t v22;
  pthread_cond_t v23;
  pthread_mutex_t v24;
  _BYTE v25[24];
  _BYTE *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  sub_2397A1618(&v24);
  v15 = 0x7FFFFFFF;
  pthread_cond_init(&v22, 0);
  pthread_cond_init(&v23, 0);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))a1;
  v8 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v6 >> 1));
  if ((v6 & 1) != 0)
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, _BYTE *))(*v8 + v7);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = operator new(0x20uLL);
  *v10 = &off_250AF9B88;
  v10[1] = &v15;
  v10[2] = a2;
  v10[3] = a3;
  v26 = v10;
  v11 = v7(v8, v9, v25);
  v12 = v26;
  if (v26 == v25)
  {
    v13 = 4;
    v12 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_8;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_8:
  if (v11)
  {
    sub_2395BFB54(&v15);
    sub_2395C2A4C((uint64_t)&v15);
  }
  return sub_2395C29C4((uint64_t)&v15);
}

void sub_239B61524(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  va_list va;

  va_start(va, a2);
  v5 = *(_QWORD **)(v3 - 80);
  if (v5 == v2)
  {
    v6 = 4;
    v5 = (_QWORD *)(v3 - 104);
  }
  else
  {
    if (!v5)
      goto LABEL_6;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_6:
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B61574()
{
  pthread_mutex_t *v0;

  sub_2397A163C(v0);
  JUMPOUT(0x239B61580);
}

void sub_239B61594()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B615A8(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF9B88;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B615E8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF9B88;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B61610(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  char v6;
  _QWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *a3;
  v7 = *(_QWORD **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v10 = (std::__shared_weak_count *)v7[1];
  *v7 = v4;
  v7[1] = v5;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  **(_BYTE **)(a1 + 24) = v6;
  v13 = *(unsigned int **)(a1 + 8);
  v16 = 1;
  sub_2395BFE44(v13, &v16);
  if (v5)
  {
    v14 = (unint64_t *)&v5->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_239B616F0(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B61730(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)a1[12];
  if (v2)
  {
    a1[13] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[9];
  if (v3)
  {
    a1[10] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[6];
  if (v4)
  {
    a1[7] = v4;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_239B61780(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = (_QWORD *)(a1 + 1016);
  v3 = *(_QWORD **)(a1 + 1040);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(_QWORD **)(a1 + 1008);
  if (v5 == (_QWORD *)(a1 + 984))
  {
    v6 = 4;
    v5 = (_QWORD *)(a1 + 984);
  }
  else
  {
    if (!v5)
      goto LABEL_11;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_11:
  v7 = *(void **)(a1 + 664);
  if (v7)
  {
    *(_QWORD *)(a1 + 672) = v7;
    operator delete(v7);
  }
  if (*(char *)(a1 + 455) < 0)
    operator delete(*(void **)(a1 + 432));
  v8 = *(_QWORD **)(a1 + 376);
  if (v8 == (_QWORD *)(a1 + 352))
  {
    v9 = 4;
    v8 = (_QWORD *)(a1 + 352);
  }
  else
  {
    if (!v8)
      goto LABEL_20;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_20:
  v10 = *(_QWORD **)(a1 + 344);
  if (v10 == (_QWORD *)(a1 + 320))
  {
    v11 = 4;
    v10 = (_QWORD *)(a1 + 320);
    goto LABEL_24;
  }
  if (v10)
  {
    v11 = 5;
LABEL_24:
    (*(void (**)(void))(*v10 + 8 * v11))();
  }
  return a1;
}

_QWORD *sub_239B61880(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF6EA0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B618E4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF6EA0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B61958(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF6EA0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B619A8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF6EA0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B619D8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B61A30(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B61A88(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *a2;
    v11 = 0uLL;
    v10 = 0;
    v9[0] = sub_239B4D474;
    v9[1] = 0;
    v9[2] = v4;
    v9[3] = v5;
    sub_239B4D6F8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
    if (v10)
    {
      *(_OWORD *)a3 = v11;
    }
    else
    {
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
      if (*((_QWORD *)&v11 + 1))
      {
        v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
        do
          v8 = __ldaxr(v7);
        while (__stlxr(v8 - 1, v7));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
    }
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
  }
}

void sub_239B61B38(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B61B80()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B61B94(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF6E58;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B61BD4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6E58;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

__n128 sub_239B61BFC(uint64_t a1)
{
  uint64_t v1;
  __int128 *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(__int128 **)(a1 + 16);
  v3 = *v2;
  v4 = v2[1];
  *(_DWORD *)(v1 + 48) = *((_DWORD *)v2 + 8);
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = v4;
  if ((__int128 *)(v1 + 16) == v2)
  {
    *(_QWORD *)(v1 + 80) = *((_QWORD *)v2 + 8);
    *(_OWORD *)(v1 + 88) = *(__int128 *)((char *)v2 + 72);
    v6 = *((_QWORD *)v2 + 11);
    *(_DWORD *)(v1 + 112) = *((_DWORD *)v2 + 24);
    *(_QWORD *)(v1 + 104) = v6;
  }
  else
  {
    sub_239421078((_QWORD *)(v1 + 56), *((_QWORD **)v2 + 5), (_QWORD *)v2 + 6);
    *(_QWORD *)(v1 + 80) = *((_QWORD *)v2 + 8);
    *(_OWORD *)(v1 + 88) = *(__int128 *)((char *)v2 + 72);
    v5 = *((_QWORD *)v2 + 11);
    *(_DWORD *)(v1 + 112) = *((_DWORD *)v2 + 24);
    *(_QWORD *)(v1 + 104) = v5;
    sub_23942156C((_QWORD *)(v1 + 120), *((char **)v2 + 13), *((char **)v2 + 14), (uint64_t)(*((_QWORD *)v2 + 14) - *((_QWORD *)v2 + 13)) >> 2);
  }
  *(_BYTE *)(v1 + 144) = *((_BYTE *)v2 + 128);
  result = *(__n128 *)((char *)v2 + 136);
  v8 = *(__int128 *)((char *)v2 + 152);
  v9 = *(__int128 *)((char *)v2 + 168);
  *(_QWORD *)(v1 + 200) = *((_QWORD *)v2 + 23);
  *(_OWORD *)(v1 + 184) = v9;
  *(_OWORD *)(v1 + 168) = v8;
  *(__n128 *)(v1 + 152) = result;
  return result;
}

void sub_239B61CC8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B61CDC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6DC8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B61D10(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6DC8;
  a2[1] = v2;
  return result;
}

void sub_239B61D2C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  char v13;
  __int128 v14;
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  pthread_cond_t v22;
  pthread_cond_t v23;
  pthread_mutex_t v24;
  uint64_t v25[3];
  uint64_t *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v14 = 0uLL;
  v13 = 0;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  sub_2397A1618(&v24);
  v15 = 0x7FFFFFFF;
  pthread_cond_init(&v22, 0);
  pthread_cond_init(&v23, 0);
  v6 = (uint64_t *)operator new(0x20uLL);
  *v6 = (uint64_t)&off_250AF6E10;
  v6[1] = (uint64_t)&v15;
  v6[2] = (uint64_t)&v14;
  v6[3] = (uint64_t)&v13;
  v26 = v6;
  v7 = sub_239B61F94(v4, v5, v25);
  v8 = v26;
  if (v26 == v25)
  {
    v9 = 4;
    v8 = v25;
  }
  else
  {
    if (!v26)
      goto LABEL_6;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_6:
  if (v7)
  {
    sub_2395BFB54(&v15);
    sub_2395C2A4C((uint64_t)&v15);
  }
  sub_2395C29C4((uint64_t)&v15);
  if (v13)
  {
    *(_OWORD *)a3 = v14;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
    if (*((_QWORD *)&v14 + 1))
    {
      v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
}

void sub_239B61EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, std::__shared_weak_count *a5, uint64_t a6, ...)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  va_list va;

  va_start(va, a6);
  v10 = *(_QWORD **)(v6 + 24);
  if (v10 == v7)
  {
    v11 = 4;
    v10 = (_QWORD *)(v8 - 104);
  }
  else
  {
    if (!v10)
      goto LABEL_6;
    v11 = 5;
  }
  (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_6:
  sub_2395C29C4((uint64_t)va);
  if (a5)
  {
    p_shared_owners = (unint64_t *)&a5->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a5->__on_zero_shared)(a5);
      std::__shared_weak_count::__release_weak(a5);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B61F78()
{
  pthread_mutex_t *v0;

  sub_2397A163C(v0);
  JUMPOUT(0x239B61F84);
}

uint64_t sub_239B61F94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 308, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = a2;
  v14 = a2;
  v5 = v15;
  v6 = (uint64_t *)a3[3];
  if (!v6)
  {
    v16 = 0;
    LODWORD(v17) = 0;
    v18 = a2;
LABEL_10:
    v20 = v6;
    goto LABEL_11;
  }
  if (v6 == a3)
  {
    v16 = v15;
    (*(void (**)(uint64_t *, _QWORD *))(*a3 + 24))(a3, v15);
    v3 = v14;
    v6 = v16;
  }
  else
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    v16 = v6;
  }
  LODWORD(v17) = 0;
  v18 = v3;
  if (!v6)
    goto LABEL_10;
  if (v6 != v15)
  {
    v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*v6 + 16))(v6);
    goto LABEL_10;
  }
  v20 = &v19;
  (*(void (**)(_QWORD *))(v15[0] + 24))(v15);
LABEL_11:
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v18 = v14;
  v21 = v14;
  v25 = 0;
  v26 = v14;
  v7 = (std::__shared_weak_count *)operator new(0x120uLL);
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8F30;
  *(_QWORD *)&v13 = sub_239B05428((uint64_t)&v7[1], (uint64_t)&v17);
  *((_QWORD *)&v13 + 1) = v7;
  sub_239A82E8C(&v17);
  if (v16 == v15)
  {
    v9 = 4;
    goto LABEL_15;
  }
  if (v16)
  {
    v9 = 5;
    v5 = v16;
LABEL_15:
    (*(void (**)(uint64_t *))(*v5 + 8 * v9))(v5);
  }
  v10 = sub_239B05644(*(unsigned int **)(a1 + 288), &v13);
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  return v10;
}

void sub_239B621A4(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239B621B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, char a17)
{
  _QWORD *v17;
  uint64_t v19;

  if (a16 == v17)
  {
    v19 = 4;
  }
  else
  {
    if (!a16)
      _Unwind_Resume(exception_object);
    v19 = 5;
    v17 = a16;
  }
  (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
  _Unwind_Resume(exception_object);
}

void sub_239B6221C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B62230(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF6E10;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B62270(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF6E10;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B62298(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  char v6;
  _QWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *a3;
  v7 = *(_QWORD **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v10 = (std::__shared_weak_count *)v7[1];
  *v7 = v4;
  v7[1] = v5;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  **(_BYTE **)(a1 + 24) = v6;
  v13 = *(unsigned int **)(a1 + 8);
  v16 = 1;
  sub_2395BFE44(v13, &v16);
  if (v5)
  {
    v14 = (unint64_t *)&v5->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_239B62378(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B623BC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B623D0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6D80;
  result[1] = v3;
  return result;
}

uint64_t sub_239B62404(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6D80;
  a2[1] = v2;
  return result;
}

void sub_239B62420(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B61124;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B613A8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B624C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B62508(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 *v18;
  _QWORD *v19;
  __int128 *v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 *v46;
  _QWORD *v47;
  __int128 *v48;
  _QWORD *v49;
  __int128 v50;

  v4 = *a2;
  v5 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v4;
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  v9 = a2[7];
  v10 = a2[8];
  v11 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v11;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v10;
  v12 = a2[11];
  v13 = a2[12];
  v14 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v14;
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 192) = v13;
  *(_OWORD *)(a1 + 240) = a2[15];
  v15 = a2[16];
  v16 = a2[17];
  v17 = a2[18];
  *(_OWORD *)(a1 + 297) = *(__int128 *)((char *)a2 + 297);
  *(_OWORD *)(a1 + 272) = v16;
  *(_OWORD *)(a1 + 288) = v17;
  *(_OWORD *)(a1 + 256) = v15;
  v18 = (__int128 *)*((_QWORD *)a2 + 43);
  if (!v18)
  {
    v19 = (_QWORD *)(a1 + 344);
    goto LABEL_5;
  }
  v19 = (_QWORD *)a2 + 43;
  if (v18 != a2 + 20)
  {
    *(_QWORD *)(a1 + 344) = v18;
LABEL_5:
    *v19 = 0;
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 344) = a1 + 320;
  (*(void (**)(_QWORD))(*(_QWORD *)*v19 + 24))(*v19);
LABEL_7:
  v20 = (__int128 *)*((_QWORD *)a2 + 47);
  if (!v20)
  {
    v21 = (_QWORD *)(a1 + 376);
    goto LABEL_11;
  }
  v21 = (_QWORD *)a2 + 47;
  if (v20 != a2 + 22)
  {
    *(_QWORD *)(a1 + 376) = v20;
LABEL_11:
    *v21 = 0;
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 376) = a1 + 352;
  (*(void (**)(_QWORD))(*(_QWORD *)*v21 + 24))(*v21);
LABEL_13:
  v22 = a2[24];
  *(_OWORD *)(a1 + 396) = *(__int128 *)((char *)a2 + 396);
  *(_OWORD *)(a1 + 384) = v22;
  *(_QWORD *)(a1 + 416) = *((_QWORD *)a2 + 52);
  *(_DWORD *)(a1 + 424) = *((_DWORD *)a2 + 106);
  v23 = a2[27];
  *(_QWORD *)(a1 + 448) = *((_QWORD *)a2 + 56);
  *(_OWORD *)(a1 + 432) = v23;
  *(__int128 *)((char *)a2 + 440) = 0u;
  *((_QWORD *)a2 + 54) = 0;
  v24 = *(__int128 *)((char *)a2 + 456);
  v25 = *(__int128 *)((char *)a2 + 472);
  *(_OWORD *)(a1 + 481) = *(__int128 *)((char *)a2 + 481);
  *(_OWORD *)(a1 + 456) = v24;
  *(_OWORD *)(a1 + 472) = v25;
  v26 = *(__int128 *)((char *)a2 + 520);
  *(_OWORD *)(a1 + 504) = *(__int128 *)((char *)a2 + 504);
  *(_OWORD *)(a1 + 520) = v26;
  v27 = *(__int128 *)((char *)a2 + 536);
  v28 = *(__int128 *)((char *)a2 + 552);
  v29 = *(__int128 *)((char *)a2 + 584);
  *(_OWORD *)(a1 + 568) = *(__int128 *)((char *)a2 + 568);
  *(_OWORD *)(a1 + 584) = v29;
  *(_OWORD *)(a1 + 536) = v27;
  *(_OWORD *)(a1 + 552) = v28;
  v30 = *(__int128 *)((char *)a2 + 600);
  v31 = *(__int128 *)((char *)a2 + 616);
  v32 = *(__int128 *)((char *)a2 + 632);
  *(_OWORD *)(a1 + 642) = *(__int128 *)((char *)a2 + 642);
  *(_OWORD *)(a1 + 616) = v31;
  *(_OWORD *)(a1 + 632) = v32;
  *(_OWORD *)(a1 + 600) = v30;
  *(_QWORD *)(a1 + 680) = 0;
  *(_OWORD *)(a1 + 664) = 0u;
  *(_QWORD *)(a1 + 664) = *((_QWORD *)a2 + 83);
  *(_QWORD *)(a1 + 672) = *((_QWORD *)a2 + 84);
  *(_QWORD *)(a1 + 680) = *((_QWORD *)a2 + 85);
  *((_QWORD *)a2 + 85) = 0;
  *(__int128 *)((char *)a2 + 664) = 0u;
  v33 = a2[43];
  *(_WORD *)(a1 + 704) = *((_WORD *)a2 + 352);
  *(_OWORD *)(a1 + 688) = v33;
  v34 = *(__int128 *)((char *)a2 + 824);
  v36 = *(__int128 *)((char *)a2 + 776);
  v35 = *(__int128 *)((char *)a2 + 792);
  *(_OWORD *)(a1 + 808) = *(__int128 *)((char *)a2 + 808);
  *(_OWORD *)(a1 + 824) = v34;
  *(_OWORD *)(a1 + 776) = v36;
  *(_OWORD *)(a1 + 792) = v35;
  v37 = *(__int128 *)((char *)a2 + 888);
  v39 = *(__int128 *)((char *)a2 + 840);
  v38 = *(__int128 *)((char *)a2 + 856);
  *(_OWORD *)(a1 + 872) = *(__int128 *)((char *)a2 + 872);
  *(_OWORD *)(a1 + 888) = v37;
  *(_OWORD *)(a1 + 840) = v39;
  *(_OWORD *)(a1 + 856) = v38;
  v40 = *(__int128 *)((char *)a2 + 712);
  v41 = *(__int128 *)((char *)a2 + 728);
  v42 = *(__int128 *)((char *)a2 + 760);
  *(_OWORD *)(a1 + 744) = *(__int128 *)((char *)a2 + 744);
  *(_OWORD *)(a1 + 760) = v42;
  *(_OWORD *)(a1 + 712) = v40;
  *(_OWORD *)(a1 + 728) = v41;
  *(_OWORD *)(a1 + 904) = *(__int128 *)((char *)a2 + 904);
  v43 = *(__int128 *)((char *)a2 + 920);
  v44 = *(__int128 *)((char *)a2 + 936);
  v45 = *(__int128 *)((char *)a2 + 952);
  *(_OWORD *)(a1 + 961) = *(__int128 *)((char *)a2 + 961);
  *(_OWORD *)(a1 + 936) = v44;
  *(_OWORD *)(a1 + 952) = v45;
  *(_OWORD *)(a1 + 920) = v43;
  v46 = (__int128 *)*((_QWORD *)a2 + 126);
  if (!v46)
  {
    v47 = (_QWORD *)(a1 + 1008);
    goto LABEL_17;
  }
  v47 = a2 + 63;
  if (v46 != (__int128 *)((char *)a2 + 984))
  {
    *(_QWORD *)(a1 + 1008) = v46;
LABEL_17:
    *v47 = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 1008) = a1 + 984;
  (*(void (**)(_QWORD))(*(_QWORD *)*v47 + 24))(*v47);
LABEL_19:
  v48 = (__int128 *)*((_QWORD *)a2 + 130);
  if (v48)
  {
    v49 = a2 + 65;
    if (v48 == (__int128 *)((char *)a2 + 1016))
    {
      *(_QWORD *)(a1 + 1040) = a1 + 1016;
      (*(void (**)(_QWORD))(*(_QWORD *)*v49 + 24))(*v49);
      goto LABEL_25;
    }
    *(_QWORD *)(a1 + 1040) = v48;
  }
  else
  {
    v49 = (_QWORD *)(a1 + 1040);
  }
  *v49 = 0;
LABEL_25:
  v50 = *(__int128 *)((char *)a2 + 1048);
  *(_OWORD *)(a1 + 1060) = *(__int128 *)((char *)a2 + 1060);
  *(_OWORD *)(a1 + 1048) = v50;
  return a1;
}

void sub_239B62804()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B62818(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6D38;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6284C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6D38;
  a2[1] = v2;
  return result;
}

void sub_239B62868(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4D474;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4D6F8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B6290C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B62954()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B62968(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6CF0;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6299C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6CF0;
  a2[1] = v2;
  return result;
}

void sub_239B629B8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4DD70;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4DFF4((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B62A5C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B62AA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  int16x8_t v11;
  double v12;
  int16x8_t v13;
  _BOOL4 v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v20;
  _BOOL4 v21;
  _QWORD *v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  std::mutex *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  std::__fs::filesystem::path *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  std::__fs::filesystem::path *v42;
  uint64_t v43;
  void **v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  void **v49;
  uint64_t v50;
  void **v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  void **v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  const std::locale::facet *v72;
  std::string *v73;
  __int128 v74;
  char *v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  __int128 *v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  std::locale::__imp *locale;
  unint64_t *v101;
  unint64_t v102;
  char *v103;
  __int128 v104;
  __int128 v105;
  _QWORD *v106;
  uint64_t v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  std::__shared_weak_count *v114;
  unint64_t *v115;
  unint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  _QWORD *v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  char v135;
  char v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  char v146;
  _QWORD *v147;
  uint64_t v148;
  std::__fs::filesystem::path *v149;
  uint64_t v150;
  void **v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  void **v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  std::string::size_type v163;
  uint64_t v164;
  char *v165;
  __int128 v166;
  __int128 v167;
  _QWORD *v168;
  uint64_t v169;
  std::__shared_weak_count *v170;
  unint64_t *v171;
  unint64_t v172;
  std::__shared_weak_count *v173;
  unint64_t *v174;
  unint64_t v175;
  std::__shared_weak_count *v176;
  unint64_t *v177;
  unint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  _BYTE *v193;
  _BYTE *v194;
  int64_t v195;
  const char *v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  uint64_t v205;
  __int128 v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  std::__shared_weak_count *v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t *v213;
  void *v214;
  char *v215;
  unint64_t v216;
  uint64_t v217;
  char *v218;
  const std::locale::facet *v219;
  std::string *v220;
  __int128 v221;
  std::__shared_weak_count *size;
  unint64_t *v223;
  unint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  char *v235;
  unint64_t *v236;
  unint64_t v237;
  uint64_t v238;
  char *v239;
  __int128 *v240;
  uint64_t v241;
  __int128 v242;
  unint64_t v243;
  unint64_t *v244;
  unint64_t v245;
  int v246;
  uint64_t v247;
  uint64_t v248;
  _BYTE *v249;
  uint64_t *v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t v253;
  char v254;
  uint64_t v255;
  _QWORD *v256;
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  _QWORD *v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  _QWORD *v264;
  uint64_t v265;
  char *v266;
  std::mutex *v267;
  std::locale *i;
  void *v269;
  _QWORD *v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t *v273;
  unint64_t *v274;
  unint64_t v275;
  std::__shared_weak_count *v276;
  unint64_t *v277;
  unint64_t v278;
  _QWORD *v279;
  uint64_t v280;
  _QWORD *v281;
  uint64_t v282;
  std::__fs::filesystem::path *v283;
  uint64_t v284;
  std::__fs::filesystem::path *v285;
  uint64_t v286;
  std::__shared_weak_count *v287;
  std::string *v288;
  std::__shared_weak_count *v289;
  unint64_t *v290;
  unint64_t v291;
  std::string::size_type v292;
  char *v293;
  char *v294;
  __int128 v295;
  __int128 v296;
  _QWORD *v297;
  uint64_t v298;
  std::__shared_weak_count *v299;
  unint64_t *v300;
  unint64_t v301;
  std::__shared_weak_count *v302;
  unint64_t *v303;
  unint64_t v304;
  std::__shared_weak_count *v305;
  unint64_t *v306;
  unint64_t v307;
  _QWORD *v308;
  uint64_t v309;
  uint64_t v310;
  _QWORD *v311;
  uint64_t v312;
  _QWORD *v313;
  _QWORD *v314;
  _QWORD *v315;
  uint64_t v316;
  uint64_t v317;
  _QWORD *v318;
  uint64_t v319;
  _QWORD *v320;
  uint64_t v321;
  void *v322;
  uint64_t *v323;
  int v324;
  int v325;
  int v326;
  uint64_t v327;
  uint64_t *v328;
  uint64_t v329;
  uint64_t v330;
  std::__shared_weak_count *v331;
  unint64_t *v332;
  unint64_t v333;
  std::string::size_type v334;
  unint64_t *v335;
  unint64_t v336;
  std::__shared_weak_count *v337;
  unint64_t *v338;
  unint64_t v339;
  std::__shared_weak_count *v340;
  unint64_t *v341;
  unint64_t v342;
  std::__shared_weak_count *v343;
  unint64_t *v344;
  unint64_t v345;
  std::__shared_weak_count *v346;
  unint64_t *v347;
  unint64_t v348;
  _BOOL8 v349;
  std::locale *v350;
  uint64_t *v351;
  uint64_t v352;
  int v353;
  _QWORD *v354;
  uint64_t v355;
  uint64_t *v356;
  uint64_t v357;
  _QWORD *v358;
  uint64_t v359;
  uint64_t *v360;
  uint64_t v361;
  _QWORD *v362;
  uint64_t v363;
  _QWORD *v364;
  uint64_t v365;
  _QWORD *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t *v369;
  uint64_t v370;
  BOOL v371;
  BOOL v372;
  BOOL v373;
  _QWORD *v374;
  std::locale::__imp *v375;
  _QWORD *v376;
  uint64_t v377;
  _QWORD *v378;
  std::__shared_weak_count *v379;
  unint64_t *v380;
  unint64_t v381;
  std::__fs::filesystem::path *v382;
  uint64_t v383;
  _QWORD *v384;
  uint64_t v385;
  _QWORD *v386;
  uint64_t v387;
  _QWORD *v388;
  uint64_t v389;
  _QWORD *v390;
  uint64_t v391;
  _QWORD *v392;
  uint64_t v393;
  _QWORD *v394;
  uint64_t v395;
  std::string *v396;
  uint64_t v397;
  std::string *v398;
  uint64_t v399;
  unint64_t *v400;
  unint64_t v401;
  void **v402;
  uint64_t v403;
  std::__shared_weak_count *v404;
  unint64_t *v405;
  unint64_t v406;
  std::__shared_weak_count *v407;
  unint64_t *v408;
  unint64_t v409;
  char *v411;
  __int128 v412;
  __int128 v413;
  _QWORD *v414;
  uint64_t v415;
  uint64_t v416;
  char v417;
  float64x2_t v418;
  float64x2_t v419;
  _QWORD *v420;
  uint64_t v421;
  _QWORD *v422;
  uint64_t v423;
  unint64_t *v424;
  unint64_t v425;
  char v426;
  BOOL v427;
  BOOL v428;
  _QWORD *v429;
  double v430;
  double v431;
  float64x2_t v432;
  double v433;
  float64x2_t v434;
  double v435;
  float64x2_t v436;
  uint64_t v437;
  _BOOL4 v438;
  std::string::size_type v439;
  _QWORD *v440;
  uint64_t v441;
  char *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  void *v449;
  uint64_t v450;
  char *v451;
  _QWORD *v452;
  _QWORD *v453;
  _QWORD v454[2];
  __int128 v455;
  uint64_t v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  std::locale v460[2];
  void *v461[2];
  int v462;
  __int128 v463;
  std::__shared_weak_count *v464;
  __int128 v465;
  __int128 v466;
  uint64_t v467[2];
  std::string v468;
  void *v469[2];
  std::string::size_type v470;
  __int128 v471;
  std::__shared_weak_count *v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  char v476;
  __int128 v477;
  std::__shared_weak_count *v478;
  __int128 v479;
  __int128 v480;
  char *v481;
  std::__shared_weak_count *v482;
  char *v483;
  std::__shared_weak_count *v484;
  std::string::size_type v485;
  std::__shared_weak_count *v486;
  void *__src;
  int v488[2];
  char v489;
  _QWORD v490[3];
  _QWORD *v491;
  _QWORD v492[8];
  _BYTE v493[24];
  _BYTE *v494;
  _BYTE v495[24];
  _BYTE *v496;
  int64x2_t v497;
  unint64_t v498;
  _BYTE __p[32];
  void *v500;
  void *v501;
  const char *v502;
  void *v503[7];
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  _BYTE v511[80];
  _BYTE v512[40];
  uint64_t v513;
  int v514;
  __int128 v515;
  __int128 v516;
  int v517;
  __int128 v518;
  __int128 v519;
  int v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  int v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  char v543;
  char v544;
  _QWORD v545[8];
  _QWORD v546[3];
  _QWORD *v547;
  _QWORD v548[3];
  _QWORD *v549;
  _QWORD v550[8];
  _QWORD v551[3];
  _QWORD *v552;
  _QWORD v553[3];
  _QWORD *v554;
  _QWORD v555[3];
  _QWORD *v556;
  _QWORD v557[8];
  _QWORD v558[3];
  _QWORD *v559;
  _QWORD v560[3];
  _QWORD *v561;
  _QWORD v562[3];
  _QWORD *v563;
  _QWORD v564[3];
  _QWORD *v565;
  _BYTE v566[24];
  _BYTE *v567;
  _BYTE v568[24];
  _BYTE *v569;
  std::__fs::filesystem::path v570;
  std::__fs::filesystem::path *v571;
  _BYTE v572[24];
  _BYTE *v573;
  _BYTE v574[24];
  _BYTE *v575;
  _BYTE v576[24];
  _BYTE *v577;
  std::__fs::filesystem::path task_info_outCnt;
  std::__fs::filesystem::path *p_task_info_outCnt;
  _QWORD v580[3];
  _QWORD *v581;
  _BYTE v582[24];
  _BYTE *v583;
  _BYTE v584[24];
  _BYTE *v585;
  void *v586;
  char v587;
  char v588;
  char v589;
  char v590;
  double v591;
  double v592;
  unsigned __int8 v593;
  void *v594;
  void *v595;
  _BYTE v596[24];
  _BYTE *v597;
  _BYTE v598[24];
  _BYTE *v599;
  std::string v600;
  std::string *v601;
  std::string v602;
  std::string *v603;
  void *v604[2];
  uint64_t v605;
  void **v606;
  _BYTE v607[8];
  _QWORD *v608;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  void *v610;
  void *v611;
  void *v612;
  char v613[225];
  char v614;
  char v615;
  char v616;
  _QWORD v617[3];
  float v618;
  char v619;
  _QWORD v620[3];
  _QWORD *v621;
  _BYTE v622[24];
  _BYTE *v623;
  _QWORD v624[3];
  _QWORD *v625;
  _QWORD v626[3];
  _QWORD *v627;
  _QWORD v628[3];
  _QWORD *v629;
  _QWORD v630[3];
  _QWORD *v631;
  _QWORD v632[3];
  _QWORD *v633;
  _QWORD v634[3];
  _QWORD *v635;
  _BYTE v636[24];
  _BYTE *v637;
  _BYTE v638[24];
  _BYTE *v639;
  _QWORD v640[3];
  _QWORD *v641;
  _BYTE v642[24];
  _BYTE *v643;
  _BYTE v644[24];
  _BYTE *v645;
  _BYTE v646[24];
  _BYTE *v647;
  void *v648[2];
  std::string::size_type v649;
  void **v650;
  _BYTE v651[24];
  _BYTE *v652;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v653;
  float v654;
  char v655;
  char v656;
  char v657;
  _QWORD v658[3];
  _QWORD *v659;
  _BYTE v660[24];
  _BYTE *v661;
  _BYTE v662[24];
  _BYTE *v663;
  _QWORD v664[3];
  _QWORD *v665;
  _QWORD v666[3];
  _QWORD *v667;
  _QWORD v668[3];
  _QWORD *v669;
  _QWORD v670[3];
  _QWORD *v671;
  _BYTE v672[24];
  _BYTE *v673;
  _BYTE v674[24];
  _BYTE *v675;
  _BYTE v676[24];
  _BYTE *v677;
  _BYTE v678[24];
  _BYTE *v679;
  _BYTE v680[24];
  _BYTE *v681;
  _QWORD v682[74];

  v1 = MEMORY[0x24BDAC7A8](a1);
  v452 = v2;
  v4 = v3;
  v6 = v5;
  v7 = v1;
  v682[71] = *MEMORY[0x24BDAC8D0];
  v14 = sub_239B29F38(v8, v9, v10, v11, v12, v13);
  v15 = *(_QWORD *)v7;
  v453 = v6;
  if (*(_QWORD *)(v7 + 16))
    v16 = *(_QWORD *)(v7 + 32) == 0;
  else
    v16 = 1;
  if (v16 || v15 == 0 || *(_QWORD *)(v7 + 48) == 0 || *v6 == 0)
    return 3;
  if (*(_QWORD *)(v15 + 480) <= 2uLL)
  {
    sub_2394202DC(v6 + 189, 4001);
    return 2;
  }
  v21 = v14;
  sub_2396B8E4C(v15 + 456, &__src);
  v486 = 0;
  v485 = 0;
  v484 = 0;
  v483 = 0;
  v22 = (_QWORD *)*v452;
  v440 = v4;
  if (*(_DWORD *)(v7 + 1704) == 2)
  {
    if (v22)
    {
      v23 = (std::__shared_weak_count *)v452[1];
      if (v23)
      {
        p_shared_owners = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(p_shared_owners);
        while (__stxr(v25 + 1, p_shared_owners));
      }
      goto LABEL_80;
    }
    v23 = (std::__shared_weak_count *)operator new(0x1B0uLL);
    v23->__shared_owners_ = 0;
    v23->__shared_weak_owners_ = 0;
    v23->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF88A0;
    p_task_info_outCnt = 0;
    task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = 9999;
    task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] = 0;
    task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = (int)std::thread::hardware_concurrency();
    v22 = &v23[1].__vftable;
    v606 = 0;
    *(_QWORD *)&__p[24] = 0;
    sub_239AFC640((uint64_t)&v23[1], (uint64_t *)&task_info_outCnt, v604, __p);
    v32 = *(_QWORD **)&__p[24];
    if (*(_BYTE **)&__p[24] == __p)
    {
      v33 = 4;
      v32 = __p;
    }
    else
    {
      if (!*(_QWORD *)&__p[24])
      {
LABEL_70:
        v49 = v606;
        if (v606 == v604)
        {
          v50 = 4;
          v49 = v604;
        }
        else
        {
          if (!v606)
            goto LABEL_80;
          v50 = 5;
        }
        (*((void (**)(void))*v49 + v50))();
LABEL_80:
        v485 = (std::string::size_type)v22;
        v486 = v23;
        v53 = (char *)operator new(0x138uLL);
        *((_QWORD *)v53 + 1) = 0;
        *((_QWORD *)v53 + 2) = 0;
        *(_QWORD *)v53 = &off_250AF7118;
        *((_QWORD *)v53 + 3) = &off_250AF71E0;
        *((_OWORD *)v53 + 2) = 0u;
        *((_OWORD *)v53 + 3) = 0u;
        *((_DWORD *)v53 + 16) = 1065353216;
        *((_QWORD *)v53 + 9) = 9999;
        *((_QWORD *)v53 + 10) = v53 + 80;
        *((_QWORD *)v53 + 11) = v53 + 80;
        *((_OWORD *)v53 + 6) = xmmword_239EC69E0;
        *((_OWORD *)v53 + 7) = 0u;
        *((_OWORD *)v53 + 8) = 0u;
        *((_OWORD *)v53 + 9) = 0u;
        *((_QWORD *)v53 + 20) = 0;
        *((_QWORD *)v53 + 24) = 0;
        *((_QWORD *)v53 + 29) = 0;
        *((_QWORD *)v53 + 30) = 0;
        *((_QWORD *)v53 + 28) = 0;
        *((_QWORD *)v53 + 31) = 850045863;
        *((_QWORD *)v53 + 38) = 0;
        *((_OWORD *)v53 + 18) = 0u;
        *((_OWORD *)v53 + 17) = 0u;
        *((_OWORD *)v53 + 16) = 0u;
        v604[0] = &off_250AF7200;
        v606 = v604;
        std::mutex::lock((std::mutex *)(v53 + 248));
        if (!v606)
          goto LABEL_89;
        if (v606 == v604)
        {
          *(_QWORD *)&__p[24] = __p;
          (*((void (**)(uint64_t, _QWORD *))v604[0] + 3))((uint64_t)v604, __p);
        }
        else
        {
          *(_QWORD *)&__p[24] = (*((uint64_t (**)(void))*v606 + 2))();
        }
        sub_239B03E2C(__p, (_QWORD *)v53 + 21);
        v54 = *(_QWORD **)&__p[24];
        if (*(_BYTE **)&__p[24] == __p)
        {
          v55 = 4;
          v54 = __p;
        }
        else
        {
          if (!*(_QWORD *)&__p[24])
            goto LABEL_89;
          v55 = 5;
        }
        (*(void (**)(void))(*v54 + 8 * v55))();
LABEL_89:
        std::mutex::unlock((std::mutex *)(v53 + 248));
        v56 = v606;
        if (v606 == v604)
        {
          v57 = 4;
          v56 = v604;
        }
        else
        {
          if (!v606)
          {
LABEL_94:
            v483 = v53 + 24;
            v484 = (std::__shared_weak_count *)v53;
            goto LABEL_95;
          }
          v57 = 5;
        }
        (*((void (**)(void))*v56 + v57))();
        goto LABEL_94;
      }
      v33 = 5;
    }
    (*(void (**)(void))(*v32 + 8 * v33))();
    goto LABEL_70;
  }
  if (v22)
  {
    v26 = (std::__shared_weak_count *)v452[1];
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
    }
    v485 = (std::string::size_type)v22;
    v486 = v26;
    goto LABEL_29;
  }
  v34 = *(_QWORD *)(v7 + 1712);
  v35 = (std::__shared_weak_count *)operator new(0x1B0uLL);
  v35->__shared_owners_ = 0;
  v35->__shared_weak_owners_ = 0;
  v35->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF88A0;
  v604[0] = &off_250AF7088;
  v604[1] = (void *)(v7 + 1720);
  v606 = v604;
  task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF70D0;
  task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = v7 + 1720;
  p_task_info_outCnt = &task_info_outCnt;
  *(_QWORD *)&__p[24] = 0;
  *(_QWORD *)__p = v34;
  *(_QWORD *)&__p[16] = 0;
  *(_QWORD *)&__p[8] = (int)std::thread::hardware_concurrency();
  sub_239AFC640((uint64_t)&v35[1], (uint64_t *)__p, v604, &task_info_outCnt);
  v36 = p_task_info_outCnt;
  if (p_task_info_outCnt == &task_info_outCnt)
  {
    v37 = 4;
    v36 = &task_info_outCnt;
  }
  else
  {
    if (!p_task_info_outCnt)
      goto LABEL_75;
    v37 = 5;
  }
  (*(void (**)(void))(v36->__pn_.__r_.__value_.__r.__words[0] + 8 * v37))();
LABEL_75:
  v51 = v606;
  if (v606 == v604)
  {
    v52 = 4;
    v51 = v604;
    goto LABEL_709;
  }
  if (v606)
  {
    v52 = 5;
LABEL_709:
    (*((void (**)(void))*v51 + v52))();
  }
  v346 = v486;
  v485 = (std::string::size_type)&v35[1];
  v486 = v35;
  if (v346)
  {
    v347 = (unint64_t *)&v346->__shared_owners_;
    do
      v348 = __ldaxr(v347);
    while (__stlxr(v348 - 1, v347));
    if (!v348)
    {
      ((void (*)(std::__shared_weak_count *))v346->__on_zero_shared)(v346);
      std::__shared_weak_count::__release_weak(v346);
    }
  }
LABEL_29:
  v29 = *(_QWORD *)(v7 + 1712);
  v30 = (char *)operator new(0x138uLL);
  *((_QWORD *)v30 + 1) = 0;
  *((_QWORD *)v30 + 2) = 0;
  *(_QWORD *)v30 = &off_250AF7118;
  v604[0] = &off_250AF7150;
  v604[1] = (void *)(v7 + 1744);
  v606 = v604;
  *((_QWORD *)v30 + 3) = &off_250AF71E0;
  task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF7198;
  task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = v7 + 1744;
  p_task_info_outCnt = &task_info_outCnt;
  *((_OWORD *)v30 + 2) = 0u;
  *((_OWORD *)v30 + 3) = 0u;
  *((_DWORD *)v30 + 16) = 1065353216;
  *((_QWORD *)v30 + 9) = v29;
  *((_QWORD *)v30 + 10) = v30 + 80;
  *((_QWORD *)v30 + 11) = v30 + 80;
  *((_OWORD *)v30 + 6) = xmmword_239EC69E0;
  *((_OWORD *)v30 + 7) = 0u;
  *((_OWORD *)v30 + 8) = 0u;
  *((_OWORD *)v30 + 9) = 0u;
  *((_QWORD *)v30 + 20) = 0;
  *((_QWORD *)v30 + 24) = 0;
  *((_QWORD *)v30 + 29) = 0;
  *((_QWORD *)v30 + 30) = 0;
  *((_QWORD *)v30 + 28) = 0;
  *((_QWORD *)v30 + 31) = 850045863;
  v31 = (std::mutex *)(v30 + 248);
  *((_QWORD *)v30 + 38) = 0;
  *((_OWORD *)v30 + 18) = 0u;
  *((_OWORD *)v30 + 17) = 0u;
  *((_OWORD *)v30 + 16) = 0u;
  std::mutex::lock((std::mutex *)(v30 + 248));
  if (!v606)
    goto LABEL_44;
  if (v606 == v604)
  {
    *(_QWORD *)&__p[24] = __p;
    (*((void (**)(uint64_t, _QWORD *))v604[0] + 3))((uint64_t)v604, __p);
  }
  else
  {
    *(_QWORD *)&__p[24] = (*((uint64_t (**)(void))*v606 + 2))();
  }
  sub_239B03E2C(__p, (_QWORD *)v30 + 21);
  v38 = *(_QWORD **)&__p[24];
  if (*(_BYTE **)&__p[24] == __p)
  {
    v39 = 4;
    v38 = __p;
  }
  else
  {
    if (!*(_QWORD *)&__p[24])
      goto LABEL_44;
    v39 = 5;
  }
  (*(void (**)(void))(*v38 + 8 * v39))();
LABEL_44:
  std::mutex::unlock(v31);
  std::mutex::lock(v31);
  if (!p_task_info_outCnt)
    goto LABEL_53;
  if (p_task_info_outCnt == &task_info_outCnt)
  {
    *(_QWORD *)&__p[24] = __p;
    (*(void (**)(uint64_t, _QWORD *))(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 24))((uint64_t)&task_info_outCnt, __p);
  }
  else
  {
    *(_QWORD *)&__p[24] = (*(uint64_t (**)(void))(p_task_info_outCnt->__pn_.__r_.__value_.__r.__words[0] + 16))();
  }
  sub_239B6B4D8(__p, (_QWORD *)v30 + 25);
  v40 = *(_QWORD **)&__p[24];
  if (*(_BYTE **)&__p[24] == __p)
  {
    v41 = 4;
    v40 = __p;
  }
  else
  {
    if (!*(_QWORD *)&__p[24])
      goto LABEL_53;
    v41 = 5;
  }
  (*(void (**)(void))(*v40 + 8 * v41))();
LABEL_53:
  std::mutex::unlock(v31);
  v42 = p_task_info_outCnt;
  if (p_task_info_outCnt == &task_info_outCnt)
  {
    v43 = 4;
    v42 = &task_info_outCnt;
  }
  else
  {
    if (!p_task_info_outCnt)
      goto LABEL_58;
    v43 = 5;
  }
  (*(void (**)(void))(v42->__pn_.__r_.__value_.__r.__words[0] + 8 * v43))();
LABEL_58:
  v44 = v606;
  if (v606 == v604)
  {
    v45 = 4;
    v44 = v604;
    goto LABEL_62;
  }
  if (v606)
  {
    v45 = 5;
LABEL_62:
    (*((void (**)(void))*v44 + v45))();
  }
  v46 = v484;
  v483 = v30 + 24;
  v484 = (std::__shared_weak_count *)v30;
  if (v46)
  {
    v47 = (unint64_t *)&v46->__shared_owners_;
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
LABEL_95:
  sub_2396FD800(v4, (uint64_t)v680);
  *(_QWORD *)__p = 0x42C8000000000000;
  sub_2396FCC68(v682, 100, v680, __p, 1.0);
  v58 = v681;
  if (v681 == v680)
  {
    v59 = 4;
    v58 = v680;
    goto LABEL_99;
  }
  if (v681)
  {
    v59 = 5;
LABEL_99:
    (*(void (**)(void))(*v58 + 8 * v59))();
  }
  sub_239B5EE28(v604);
  if (**((int **)v604[0] + 7) <= 3)
  {
    if (*((_BYTE *)v604[0] + 72))
    {
      *(_QWORD *)__p = v604;
      *(std::chrono::steady_clock::time_point *)&__p[8] = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&__p[16] = std::chrono::system_clock::now();
      *(_DWORD *)&__p[24] = 3;
      v500 = "unknown file";
      LODWORD(v501) = 456;
      v502 = "unknown function";
      *(_OWORD *)v503 = 0uLL;
      sub_239B5EEF8((uint64_t)__p, "Reconstructing camera poses - step 1");
      sub_239A47720((uint64_t)__p);
      sub_239A47720((uint64_t)__p);
      v60 = (std::__shared_weak_count *)v503[1];
      if (v503[1])
      {
        v61 = (unint64_t *)((char *)v503[1] + 8);
        do
          v62 = __ldaxr(v61);
        while (__stlxr(v62 - 1, v61));
        if (!v62)
        {
          ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
          std::__shared_weak_count::__release_weak(v60);
        }
      }
    }
  }
  v443 = v7;
  if (*v452)
  {
    __p[23] = 0;
    __p[0] = 0;
    sub_2396FCDAC((uint64_t)v682, (__int128 *)__p, 33);
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
    goto LABEL_334;
  }
  sub_239420EF4((uint64_t)v604);
  rep = std::chrono::system_clock::now().__d_.__rep_;
  LODWORD(task_info_outCnt.__pn_.__r_.__value_.__l.__data_) = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, (task_info_t)__p, (mach_msg_type_number_t *)&task_info_outCnt))
    *((float *)&v610 + 1) = (float)((float)(unint64_t)v506 * 0.00097656) * 0.00097656;
  v613[0] = 1;
  v63 = operator new(0x20uLL);
  *v63 = &off_250AF7248;
  v63[1] = v453;
  v63[2] = v604;
  v652 = v63;
  v437 = *(_QWORD *)(v7 + 16);
  v641 = 0;
  v64 = *(_QWORD *)(v7 + 32);
  if (v64)
  {
    *(_QWORD *)__p = &off_250AF7290;
    *(_QWORD *)&__p[8] = v64;
    *(_QWORD *)&__p[24] = __p;
    sub_23948AB98(__p, v640);
    v65 = *(_QWORD **)&__p[24];
    if (*(_BYTE **)&__p[24] == __p)
    {
      v66 = 4;
      v65 = __p;
    }
    else
    {
      if (!*(_QWORD *)&__p[24])
        goto LABEL_118;
      v66 = 5;
    }
    (*(void (**)(void))(*v65 + 8 * v66))();
  }
LABEL_118:
  v497 = 0uLL;
  v498 = 0;
  v439 = v485;
  v438 = v21;
  if (v21)
  {
    v67 = (char *)__src;
    v451 = *(char **)v488;
    if (__src != *(void **)v488)
    {
      v448 = v7 + 1720;
      v68 = *MEMORY[0x24BEDB7F0];
      v444 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v446 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v441 = MEMORY[0x24BEDB848] + 16;
      do
      {
        v69 = *(_QWORD *)v67;
        sub_2394988CC((uint64_t)__p);
        v70 = *(_QWORD *)&__p[16];
        v71 = &__p[*(_QWORD *)(*(_QWORD *)&__p[16] - 24) + 16];
        if (*((_DWORD *)v71 + 36) == -1)
        {
          std::ios_base::getloc((const std::ios_base *)&__p[*(_QWORD *)(*(_QWORD *)&__p[16] - 24) + 16]);
          v72 = std::locale::use_facet((const std::locale *)&task_info_outCnt, MEMORY[0x24BEDB350]);
          ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 32);
          std::locale::~locale((std::locale *)&task_info_outCnt);
          v70 = *(_QWORD *)&__p[16];
        }
        *((_DWORD *)v71 + 36) = 48;
        *(void **)((char *)&v501 + *(_QWORD *)(v70 - 24)) = (void *)8;
        std::ostream::operator<<();
        std::stringbuf::str();
        v73 = std::string::append(&v602, ".bin");
        v74 = *(_OWORD *)&v73->__r_.__value_.__l.__data_;
        v649 = v73->__r_.__value_.__r.__words[2];
        *(_OWORD *)v648 = v74;
        v73->__r_.__value_.__l.__size_ = 0;
        v73->__r_.__value_.__r.__words[2] = 0;
        v73->__r_.__value_.__r.__words[0] = 0;
        sub_2395ACAA8((uint64_t)v648, (char *)v460);
        *(_OWORD *)&task_info_outCnt.__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)&v460[0].__locale_;
        task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] = (std::string::size_type)v461[0];
        v460[1].__locale_ = 0;
        v461[0] = 0;
        v460[0].__locale_ = 0;
        sub_239498A04(&task_info_outCnt, v448, &v570);
        if (SHIBYTE(task_info_outCnt.__pn_.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(task_info_outCnt.__pn_.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v461[0]) & 0x80000000) == 0)
            goto LABEL_126;
        }
        else if ((SHIBYTE(v461[0]) & 0x80000000) == 0)
        {
          goto LABEL_126;
        }
        operator delete(v460[0].__locale_);
LABEL_126:
        if (SHIBYTE(v649) < 0)
          operator delete(v648[0]);
        if (SHIBYTE(v602.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v602.__r_.__value_.__l.__data_);
        v75 = (char *)operator new(0x78uLL);
        *((_QWORD *)v75 + 1) = 0;
        v76 = (unint64_t *)(v75 + 8);
        *((_QWORD *)v75 + 2) = 0;
        *(_QWORD *)v75 = &off_250ADB7B8;
        *(_OWORD *)(v75 + 24) = xmmword_239EC65B0;
        *(_OWORD *)(v75 + 40) = 0u;
        *(_OWORD *)(v75 + 56) = 0u;
        *(_OWORD *)(v75 + 72) = 0u;
        *(_OWORD *)(v75 + 88) = 0u;
        *(_OWORD *)(v75 + 104) = 0u;
        v460[0].__locale_ = (std::locale::__imp *)(v75 + 24);
        v460[1].__locale_ = (std::locale::__imp *)v75;
        std::__fs::filesystem::__status(&v570, 0);
        if (task_info_outCnt.__pn_.__r_.__value_.__s.__data_[0]
          && task_info_outCnt.__pn_.__r_.__value_.__s.__data_[0] != 255
          && sub_239B02D38((uint64_t)(v75 + 24)))
        {
          v481 = v75 + 24;
          v482 = (std::__shared_weak_count *)v75;
          do
            v77 = __ldxr(v76);
          while (__stxr(v77 + 1, v76));
          task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)sub_239B678AC;
          task_info_outCnt.__pn_.__r_.__value_.__l.__size_ = 0;
          task_info_outCnt.__pn_.__r_.__value_.__r.__words[2] = v439;
          p_task_info_outCnt = (std::__fs::filesystem::path *)(v75 + 24);
          v580[0] = v75;
          do
            v78 = __ldxr(v76);
          while (__stxr(v78 + 1, v76));
          LOBYTE(v648[0]) = 0;
          v580[1] = v69;
          sub_239B67B14((uint64_t)&task_info_outCnt, (uint64_t)v648);
          v7 = v443;
          do
            v79 = __ldaxr(v76);
          while (__stlxr(v79 - 1, v76));
          if (!v79)
          {
            (*(void (**)(char *))(*(_QWORD *)v75 + 16))(v75);
            std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v75);
          }
          v80 = v482;
          if (v482)
          {
            v81 = (unint64_t *)&v482->__shared_owners_;
            do
              v82 = __ldaxr(v81);
            while (__stlxr(v82 - 1, v81));
            if (!v82)
            {
              ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
              std::__shared_weak_count::__release_weak(v80);
            }
          }
        }
        else
        {
          v83 = v497.i64[1];
          if (v497.i64[1] >= v498)
          {
            v85 = (void *)v497.i64[0];
            v86 = v497.i64[1] - v497.i64[0];
            v87 = (v497.i64[1] - v497.i64[0]) >> 3;
            v88 = v87 + 1;
            if ((unint64_t)(v87 + 1) >> 61)
              sub_2394189F8();
            v89 = v498 - v497.i64[0];
            if ((uint64_t)(v498 - v497.i64[0]) >> 2 > v88)
              v88 = v89 >> 2;
            if ((unint64_t)v89 >= 0x7FFFFFFFFFFFFFF8)
              v90 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v90 = v88;
            if (v90)
            {
              if (v90 >> 61)
                sub_239418A80();
              v91 = (char *)operator new(8 * v90);
            }
            else
            {
              v91 = 0;
            }
            v92 = &v91[8 * v87];
            *(_QWORD *)v92 = v69;
            v84 = (uint64_t)(v92 + 8);
            if ((void *)v83 != v85)
            {
              v93 = v83 - 8 - (_QWORD)v85;
              if (v93 < 0x58)
                goto LABEL_926;
              if ((unint64_t)(v83 - (_QWORD)&v91[v86]) < 0x20)
                goto LABEL_926;
              v94 = (v93 >> 3) + 1;
              v95 = &v91[8 * v87 - 16];
              v96 = (__int128 *)(v83 - 16);
              v97 = v94 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v98 = *v96;
                *((_OWORD *)v95 - 1) = *(v96 - 1);
                *(_OWORD *)v95 = v98;
                v95 -= 32;
                v96 -= 2;
                v97 -= 4;
              }
              while (v97);
              v92 -= 8 * (v94 & 0x3FFFFFFFFFFFFFFCLL);
              v83 -= 8 * (v94 & 0x3FFFFFFFFFFFFFFCLL);
              if (v94 != (v94 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_926:
                do
                {
                  v99 = *(_QWORD *)(v83 - 8);
                  v83 -= 8;
                  *((_QWORD *)v92 - 1) = v99;
                  v92 -= 8;
                }
                while ((void *)v83 != v85);
              }
            }
            v497.i64[0] = (uint64_t)v92;
            v497.i64[1] = v84;
            v498 = (unint64_t)&v91[8 * v90];
            if (v85)
              operator delete(v85);
          }
          else
          {
            *(_QWORD *)v497.i64[1] = v69;
            v84 = v83 + 8;
          }
          v7 = v443;
          v497.i64[1] = v84;
        }
        locale = v460[1].__locale_;
        if (v460[1].__locale_)
        {
          v101 = (unint64_t *)((char *)v460[1].__locale_ + 8);
          do
            v102 = __ldaxr(v101);
          while (__stlxr(v102 - 1, v101));
          if (!v102)
          {
            (*(void (**)(std::locale::__imp *))(*(_QWORD *)locale + 16))(locale);
            std::__shared_weak_count::__release_weak((std::__shared_weak_count *)locale);
            if ((SHIBYTE(v570.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_176;
LABEL_175:
            operator delete(v570.__pn_.__r_.__value_.__l.__data_);
            goto LABEL_176;
          }
        }
        if (SHIBYTE(v570.__pn_.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_175;
LABEL_176:
        *(_QWORD *)__p = v68;
        *(_QWORD *)&__p[*(_QWORD *)(v68 - 24)] = v446;
        *(_QWORD *)&__p[16] = v444;
        *(_QWORD *)&__p[24] = v441;
        if (SHIBYTE(v503[6]) < 0)
          operator delete(v503[4]);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](&v505);
        v67 += 8;
      }
      while (v67 != v451);
    }
  }
  else
  {
    sub_23945D3D0(&v497, (char *)__src, *(char **)v488, (uint64_t)(*(_QWORD *)v488 - (_QWORD)__src) >> 3);
  }
  sub_2396FDAA8(v440, (uint64_t)v678);
  sub_2396FD534(&v477, v682, 32);
  v677 = 0;
  v103 = (char *)operator new(0x40uLL);
  *(_QWORD *)v103 = &off_250ADB9D8;
  *(_OWORD *)(v103 + 8) = v477;
  *((_QWORD *)v103 + 3) = v478;
  v478 = 0;
  *((_QWORD *)&v477 + 1) = 0;
  v104 = v479;
  v479 = 0uLL;
  v105 = v480;
  *((_OWORD *)v103 + 2) = v104;
  *((_OWORD *)v103 + 3) = v105;
  v480 = 0uLL;
  v677 = v103;
  sub_2396FD600((uint64_t)__p, (uint64_t)v678, (uint64_t)v676);
  v21 = v438;
  v106 = v677;
  if (v677 == v676)
  {
    v107 = 4;
    v106 = v676;
    goto LABEL_185;
  }
  if (v677)
  {
    v107 = 5;
LABEL_185:
    (*(void (**)(void))(*v106 + 8 * v107))();
  }
  v108 = (std::__shared_weak_count *)*((_QWORD *)&v480 + 1);
  if (*((_QWORD *)&v480 + 1))
  {
    v109 = (unint64_t *)(*((_QWORD *)&v480 + 1) + 8);
    do
      v110 = __ldaxr(v109);
    while (__stlxr(v110 - 1, v109));
    if (!v110)
    {
      ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
      std::__shared_weak_count::__release_weak(v108);
    }
  }
  v111 = (std::__shared_weak_count *)*((_QWORD *)&v479 + 1);
  if (*((_QWORD *)&v479 + 1))
  {
    v112 = (unint64_t *)(*((_QWORD *)&v479 + 1) + 8);
    do
      v113 = __ldaxr(v112);
    while (__stlxr(v113 - 1, v112));
    if (!v113)
    {
      ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
      std::__shared_weak_count::__release_weak(v111);
    }
  }
  v114 = v478;
  if (v478)
  {
    v115 = (unint64_t *)&v478->__shared_owners_;
    do
      v116 = __ldaxr(v115);
    while (__stlxr(v116 - 1, v115));
    if (!v116)
    {
      ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
      std::__shared_weak_count::__release_weak(v114);
    }
  }
  v117 = v679;
  if (v679 == v678)
  {
    v118 = 4;
    v117 = v678;
  }
  else
  {
    if (!v679)
      goto LABEL_206;
    v118 = 5;
  }
  (*(void (**)(void))(*v117 + 8 * v118))();
LABEL_206:
  sub_2396FDAA8(__p, (uint64_t)v674);
  v119 = *(_QWORD *)&__p[24];
  if (!*(_QWORD *)&__p[24])
  {
LABEL_209:
    v669 = (_QWORD *)v119;
    goto LABEL_211;
  }
  if (*(_BYTE **)&__p[24] != __p)
  {
    v119 = (*(uint64_t (**)(void))(**(_QWORD **)&__p[24] + 16))();
    goto LABEL_209;
  }
  v669 = v668;
  (*(void (**)(_BYTE *, _QWORD *))(*(_QWORD *)__p + 24))(__p, v668);
LABEL_211:
  v120 = v670;
  v121 = v503[0];
  if (!v503[0])
  {
LABEL_214:
    v671 = v121;
    goto LABEL_216;
  }
  if (v503[0] != &v500)
  {
    v121 = (_QWORD *)(*(uint64_t (**)(void))(*(_QWORD *)v503[0] + 16))();
    goto LABEL_214;
  }
  v671 = v670;
  (*(void (**)(void))(*(_QWORD *)v503[0] + 24))();
LABEL_216:
  v673 = 0;
  v122 = operator new(0x48uLL);
  v123 = v122;
  *v122 = &off_250AF7320;
  if (v669)
  {
    if (v669 == v668)
    {
      v122[4] = v122 + 1;
      (*(void (**)(_QWORD *))(v668[0] + 24))(v668);
    }
    else
    {
      v122[4] = v669;
      v669 = 0;
    }
  }
  else
  {
    v122[4] = 0;
  }
  if (v671)
  {
    if (v671 == v670)
    {
      v123[8] = v123 + 5;
      (*(void (**)(_QWORD *))(v670[0] + 24))(v670);
    }
    else
    {
      v123[8] = v671;
      v671 = 0;
    }
  }
  else
  {
    v123[8] = 0;
  }
  v673 = v123;
  sub_2396FD600((uint64_t)&task_info_outCnt, (uint64_t)v674, (uint64_t)v672);
  v124 = v673;
  if (v673 == v672)
  {
    v125 = 4;
    v124 = v672;
  }
  else
  {
    if (!v673)
      goto LABEL_231;
    v125 = 5;
  }
  (*(void (**)(void))(*v124 + 8 * v125))();
LABEL_231:
  if (v671 == v670)
  {
    v126 = 4;
  }
  else
  {
    if (!v671)
      goto LABEL_236;
    v126 = 5;
    v120 = v671;
  }
  (*(void (**)(_QWORD *))(*v120 + 8 * v126))(v120);
LABEL_236:
  v127 = v669;
  if (v669 == v668)
  {
    v128 = 4;
    v127 = v668;
  }
  else
  {
    if (!v669)
      goto LABEL_241;
    v128 = 5;
  }
  (*(void (**)(void))(*v127 + 8 * v128))();
LABEL_241:
  v129 = v675;
  if (v675 == v674)
  {
    v130 = 4;
    v129 = v674;
    goto LABEL_245;
  }
  if (v675)
  {
    v130 = 5;
LABEL_245:
    (*(void (**)(void))(*v129 + 8 * v130))();
  }
  if (v438 && v497.i64[0] == v497.i64[1])
    goto LABEL_289;
  v666[0] = &off_250AF7368;
  v666[1] = v437;
  v667 = v666;
  v664[0] = &off_250AF73B0;
  v664[1] = v439;
  v665 = v664;
  v131 = (uint64_t)v641;
  if (!v641)
    goto LABEL_251;
  if (v641 != v640)
  {
    v131 = (*(uint64_t (**)(void))(*v641 + 16))();
LABEL_251:
    v663 = (_BYTE *)v131;
    goto LABEL_253;
  }
  v663 = v662;
  (*(void (**)(_QWORD *, _BYTE *))(v640[0] + 24))(v640, v662);
LABEL_253:
  v132 = (uint64_t)p_task_info_outCnt;
  if (!p_task_info_outCnt)
  {
LABEL_256:
    v659 = (_QWORD *)v132;
    goto LABEL_258;
  }
  if (p_task_info_outCnt != &task_info_outCnt)
  {
    v132 = (*(uint64_t (**)(void))(p_task_info_outCnt->__pn_.__r_.__value_.__r.__words[0] + 16))();
    goto LABEL_256;
  }
  v659 = v658;
  (*(void (**)(std::__fs::filesystem::path *, _QWORD *))(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0]
                                                                  + 24))(&task_info_outCnt, v658);
LABEL_258:
  v133 = v660;
  v134 = (uint64_t)v581;
  if (!v581)
  {
LABEL_261:
    v661 = (_BYTE *)v134;
    goto LABEL_263;
  }
  if (v581 != v580)
  {
    v134 = (*(uint64_t (**)(void))(*v581 + 16))();
    goto LABEL_261;
  }
  v661 = v660;
  (*(void (**)(void))(*v581 + 24))();
LABEL_263:
  sub_23941EC8C((_opaque_pthread_t ***)&v497, (int *)(v7 + 72), (uint64_t)v666, (uint64_t)v664, (uint64_t)v662, v658, (uint64_t)v604, 1);
  v136 = v135;
  if (v661 == v660)
  {
    v137 = 4;
  }
  else
  {
    if (!v661)
      goto LABEL_268;
    v137 = 5;
    v133 = v661;
  }
  (*(void (**)(_QWORD *))(*v133 + 8 * v137))(v133);
LABEL_268:
  v138 = v659;
  if (v659 == v658)
  {
    v139 = 4;
    v138 = v658;
  }
  else
  {
    if (!v659)
      goto LABEL_273;
    v139 = 5;
  }
  (*(void (**)(void))(*v138 + 8 * v139))();
LABEL_273:
  v140 = v663;
  if (v663 == v662)
  {
    v141 = 4;
    v140 = v662;
  }
  else
  {
    if (!v663)
      goto LABEL_278;
    v141 = 5;
  }
  (*(void (**)(void))(*v140 + 8 * v141))();
LABEL_278:
  v142 = v665;
  if (v665 == v664)
  {
    v143 = 4;
    v142 = v664;
  }
  else
  {
    if (!v665)
      goto LABEL_283;
    v143 = 5;
  }
  (*(void (**)(void))(*v142 + 8 * v143))();
LABEL_283:
  v144 = v667;
  if (v667 == v666)
  {
    v145 = 4;
    v144 = v666;
  }
  else
  {
    if (!v667)
      goto LABEL_288;
    v145 = 5;
  }
  (*(void (**)(void))(*v144 + 8 * v145))();
LABEL_288:
  if ((v136 & 1) != 0)
  {
LABEL_289:
    *((_BYTE *)&v570.__pn_.__r_.__value_.__s + 23) = 0;
    v570.__pn_.__r_.__value_.__s.__data_[0] = 0;
    sub_2396FCDAC((uint64_t)v682, (__int128 *)&v570, 1);
    if (SHIBYTE(v570.__pn_.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v570.__pn_.__r_.__value_.__l.__data_);
    if (*(_DWORD *)(v7 + 1704) == 1 && *(_QWORD *)(v485 + 200))
    {
      LOBYTE(v460[0].__locale_) = 0;
      v570.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)sub_239B03660;
      v570.__pn_.__r_.__value_.__l.__size_ = 0;
      v570.__pn_.__r_.__value_.__r.__words[2] = v485;
      sub_239B0397C((uint64_t)&v570, (uint64_t)v460);
    }
    v146 = 1;
    goto LABEL_298;
  }
  *((_BYTE *)&v570.__pn_.__r_.__value_.__s + 23) = 0;
  v570.__pn_.__r_.__value_.__s.__data_[0] = 0;
  sub_2396FCC6C((uint64_t)v682, (uint64_t)&v570);
  if (SHIBYTE(v570.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v570.__pn_.__r_.__value_.__l.__data_);
  v146 = 0;
LABEL_298:
  v147 = v581;
  if (v581 == v580)
  {
    v148 = 4;
    v147 = v580;
  }
  else
  {
    if (!v581)
      goto LABEL_303;
    v148 = 5;
  }
  (*(void (**)(void))(*v147 + 8 * v148))();
LABEL_303:
  v149 = p_task_info_outCnt;
  if (p_task_info_outCnt == &task_info_outCnt)
  {
    v150 = 4;
    v149 = &task_info_outCnt;
  }
  else
  {
    if (!p_task_info_outCnt)
      goto LABEL_308;
    v150 = 5;
  }
  (*(void (**)(void))(v149->__pn_.__r_.__value_.__r.__words[0] + 8 * v150))();
LABEL_308:
  v151 = (void **)v503[0];
  if (v503[0] == &v500)
  {
    v152 = 4;
    v151 = &v500;
  }
  else
  {
    if (!v503[0])
      goto LABEL_313;
    v152 = 5;
  }
  (*((void (**)(void))*v151 + v152))();
LABEL_313:
  v153 = *(_QWORD **)&__p[24];
  if (*(_BYTE **)&__p[24] == __p)
  {
    v154 = 4;
    v153 = __p;
  }
  else
  {
    if (!*(_QWORD *)&__p[24])
      goto LABEL_318;
    v154 = 5;
  }
  (*(void (**)(void))(*v153 + 8 * v154))();
LABEL_318:
  if (v497.i64[0])
  {
    v497.i64[1] = v497.i64[0];
    operator delete((void *)v497.i64[0]);
  }
  v155 = v641;
  if (v641 == v640)
  {
    v156 = 4;
    v155 = v640;
  }
  else
  {
    if (!v641)
      goto LABEL_325;
    v156 = 5;
  }
  (*(void (**)(void))(*v155 + 8 * v156))();
LABEL_325:
  if (!v652)
    sub_2394172E0();
  (*(void (**)(_BYTE *))(*(_QWORD *)v652 + 48))(v652);
  v157 = v652;
  if (v652 == v651)
  {
    v158 = 4;
    v157 = v651;
  }
  else
  {
    if (!v652)
      goto LABEL_331;
    v158 = 5;
  }
  (*(void (**)(void))(*v157 + 8 * v158))();
LABEL_331:
  if (v611)
  {
    v612 = v611;
    operator delete(v611);
  }
  sub_239421038((uint64_t)v607, v608);
  if ((v146 & 1) == 0)
  {
    v20 = 2;
    goto LABEL_863;
  }
LABEL_334:
  v476 = 0;
  sub_239AD233C((uint64_t)v651);
  v159 = (void **)operator new(0x28uLL);
  *v159 = &off_250AF7440;
  v159[1] = v453;
  v159[2] = v651;
  v159[3] = &v476;
  v650 = v159;
  v475 = 0uLL;
  sub_239B5EE28(v604);
  if (**((int **)v604[0] + 7) <= 3)
  {
    if (*((_BYTE *)v604[0] + 72))
    {
      *(_QWORD *)__p = v604;
      *(std::chrono::steady_clock::time_point *)&__p[8] = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&__p[16] = std::chrono::system_clock::now();
      *(_DWORD *)&__p[24] = 3;
      v500 = "unknown file";
      LODWORD(v501) = 563;
      v502 = "unknown function";
      *(_OWORD *)v503 = 0uLL;
      sub_239B5EEF8((uint64_t)__p, "Reconstructing camera poses - step 2");
      sub_239A47720((uint64_t)__p);
      sub_239A47720((uint64_t)__p);
      v160 = (std::__shared_weak_count *)v503[1];
      if (v503[1])
      {
        v161 = (unint64_t *)((char *)v503[1] + 8);
        do
          v162 = __ldaxr(v161);
        while (__stlxr(v162 - 1, v161));
        if (!v162)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
      }
    }
  }
  v653 = std::chrono::system_clock::now().__d_.__rep_;
  LODWORD(v604[0]) = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, (task_info_t)__p, (mach_msg_type_number_t *)v604))
    v654 = (float)((float)(unint64_t)v506 * 0.00097656) * 0.00097656;
  v655 = 1;
  v570.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF7488;
  v570.__pn_.__r_.__value_.__l.__size_ = (std::string::size_type)v651;
  v570.__pn_.__r_.__value_.__r.__words[2] = 0;
  v571 = &v570;
  v163 = v485;
  v164 = (uint64_t)v483;
  sub_2396FDAA8(v440, (uint64_t)v646);
  sub_2396FD534(&v471, v682, 32);
  v645 = 0;
  v165 = (char *)operator new(0x40uLL);
  *(_QWORD *)v165 = &off_250ADB9D8;
  *(_OWORD *)(v165 + 8) = v471;
  *((_QWORD *)v165 + 3) = v472;
  *((_QWORD *)&v471 + 1) = 0;
  v472 = 0;
  v166 = v473;
  v473 = 0uLL;
  v167 = v474;
  *((_OWORD *)v165 + 2) = v166;
  *((_OWORD *)v165 + 3) = v167;
  v474 = 0uLL;
  v645 = v165;
  sub_2396FD600((uint64_t)&task_info_outCnt, (uint64_t)v646, (uint64_t)v644);
  v168 = v645;
  if (v645 == v644)
  {
    v169 = 4;
    v168 = v644;
    goto LABEL_347;
  }
  if (v645)
  {
    v169 = 5;
LABEL_347:
    (*(void (**)(void))(*v168 + 8 * v169))();
  }
  v170 = (std::__shared_weak_count *)*((_QWORD *)&v474 + 1);
  if (*((_QWORD *)&v474 + 1))
  {
    v171 = (unint64_t *)(*((_QWORD *)&v474 + 1) + 8);
    do
      v172 = __ldaxr(v171);
    while (__stlxr(v172 - 1, v171));
    if (!v172)
    {
      ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
      std::__shared_weak_count::__release_weak(v170);
    }
  }
  v173 = (std::__shared_weak_count *)*((_QWORD *)&v473 + 1);
  if (*((_QWORD *)&v473 + 1))
  {
    v174 = (unint64_t *)(*((_QWORD *)&v473 + 1) + 8);
    do
      v175 = __ldaxr(v174);
    while (__stlxr(v175 - 1, v174));
    if (!v175)
    {
      ((void (*)(std::__shared_weak_count *))v173->__on_zero_shared)(v173);
      std::__shared_weak_count::__release_weak(v173);
    }
  }
  v176 = v472;
  if (v472)
  {
    v177 = (unint64_t *)&v472->__shared_owners_;
    do
      v178 = __ldaxr(v177);
    while (__stlxr(v178 - 1, v177));
    if (!v178)
    {
      ((void (*)(std::__shared_weak_count *))v176->__on_zero_shared)(v176);
      std::__shared_weak_count::__release_weak(v176);
    }
  }
  v179 = v647;
  if (v647 == v646)
  {
    v180 = 4;
    v179 = v646;
  }
  else
  {
    if (!v647)
      goto LABEL_368;
    v180 = 5;
  }
  (*(void (**)(void))(*v179 + 8 * v180))();
LABEL_368:
  sub_2396FDAA8(&task_info_outCnt, (uint64_t)v638);
  v181 = (uint64_t)p_task_info_outCnt;
  if (!p_task_info_outCnt)
  {
LABEL_371:
    v633 = (_QWORD *)v181;
    goto LABEL_373;
  }
  if (p_task_info_outCnt != &task_info_outCnt)
  {
    v181 = (*(uint64_t (**)(void))(p_task_info_outCnt->__pn_.__r_.__value_.__r.__words[0] + 16))();
    goto LABEL_371;
  }
  v633 = v632;
  (*(void (**)(std::__fs::filesystem::path *, _QWORD *))(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0]
                                                                  + 24))(&task_info_outCnt, v632);
LABEL_373:
  v182 = v634;
  v183 = (uint64_t)v581;
  if (!v581)
  {
LABEL_376:
    v635 = (_QWORD *)v183;
    goto LABEL_378;
  }
  if (v581 != v580)
  {
    v183 = (*(uint64_t (**)(void))(*v581 + 16))();
    goto LABEL_376;
  }
  v635 = v634;
  (*(void (**)(void))(*v581 + 24))();
LABEL_378:
  v637 = 0;
  v184 = operator new(0x48uLL);
  v185 = v184;
  *v184 = &off_250AF74D0;
  if (v633)
  {
    if (v633 == v632)
    {
      v184[4] = v184 + 1;
      (*(void (**)(_QWORD *))(v632[0] + 24))(v632);
    }
    else
    {
      v184[4] = v633;
      v633 = 0;
    }
  }
  else
  {
    v184[4] = 0;
  }
  if (v635)
  {
    if (v635 == v634)
    {
      v185[8] = v185 + 5;
      (*(void (**)(_QWORD *))(v634[0] + 24))(v634);
    }
    else
    {
      v185[8] = v635;
      v635 = 0;
    }
  }
  else
  {
    v185[8] = 0;
  }
  v637 = v185;
  sub_2396FD600((uint64_t)v640, (uint64_t)v638, (uint64_t)v636);
  v186 = v637;
  if (v637 == v636)
  {
    v187 = 4;
    v186 = v636;
  }
  else
  {
    if (!v637)
      goto LABEL_393;
    v187 = 5;
  }
  (*(void (**)(void))(*v186 + 8 * v187))();
LABEL_393:
  if (v635 == v634)
  {
    v188 = 4;
  }
  else
  {
    if (!v635)
      goto LABEL_398;
    v188 = 5;
    v182 = v635;
  }
  (*(void (**)(_QWORD *))(*v182 + 8 * v188))(v182);
LABEL_398:
  v189 = v633;
  if (v633 == v632)
  {
    v190 = 4;
    v189 = v632;
  }
  else
  {
    if (!v633)
      goto LABEL_403;
    v190 = 5;
  }
  (*(void (**)(void))(*v189 + 8 * v190))();
LABEL_403:
  v191 = v639;
  if (v639 == v638)
  {
    v192 = 4;
    v191 = v638;
  }
  else
  {
    if (!v639)
      goto LABEL_408;
    v192 = 5;
  }
  (*(void (**)(void))(*v191 + 8 * v192))();
LABEL_408:
  *(_OWORD *)__p = *(_OWORD *)(v7 + 120);
  *(_OWORD *)&__p[12] = *(_OWORD *)(v7 + 132);
  v502 = 0;
  v500 = 0;
  v501 = 0;
  v194 = *(_BYTE **)(v7 + 152);
  v193 = *(_BYTE **)(v7 + 160);
  v195 = v193 - v194;
  if (v193 != v194)
  {
    if (v195 < 0)
      sub_2394189F8();
    v500 = operator new(v193 - v194);
    v501 = v500;
    v196 = (char *)v500 + 8 * (v195 >> 3);
    v502 = v196;
    memcpy(v500, v194, v195);
    v501 = (void *)v196;
  }
  if (*(char *)(v7 + 199) < 0)
  {
    sub_23941A7F8(v503, *(void **)(v7 + 176), *(_QWORD *)(v7 + 184));
  }
  else
  {
    *(_OWORD *)v503 = *(_OWORD *)(v7 + 176);
    v503[2] = *(void **)(v7 + 192);
  }
  v197 = *(_OWORD *)(v7 + 216);
  *(_OWORD *)&v503[3] = *(_OWORD *)(v7 + 200);
  *(_OWORD *)&v503[5] = v197;
  v198 = *(_OWORD *)(v7 + 248);
  v504 = *(_OWORD *)(v7 + 232);
  v505 = v198;
  v199 = *(_OWORD *)(v7 + 408);
  *(_OWORD *)&v511[48] = *(_OWORD *)(v7 + 392);
  *(_OWORD *)&v511[64] = v199;
  v200 = *(_OWORD *)(v7 + 440);
  *(_OWORD *)v512 = *(_OWORD *)(v7 + 424);
  *(_OWORD *)&v512[16] = v200;
  v201 = *(_OWORD *)(v7 + 344);
  v510 = *(_OWORD *)(v7 + 328);
  *(_OWORD *)v511 = v201;
  v202 = *(_OWORD *)(v7 + 376);
  *(_OWORD *)&v511[16] = *(_OWORD *)(v7 + 360);
  *(_OWORD *)&v511[32] = v202;
  v203 = *(_OWORD *)(v7 + 280);
  v506 = *(_OWORD *)(v7 + 264);
  v507 = v203;
  v204 = *(_OWORD *)(v7 + 312);
  v508 = *(_OWORD *)(v7 + 296);
  v509 = v204;
  sub_2396BF704((__int128 *)((char *)&v505 + 8), 1, v604);
  v206 = *(_OWORD *)v604;
  v604[1] = 0;
  v604[0] = 0;
  v207 = (std::__shared_weak_count *)*((_QWORD *)&v475 + 1);
  v475 = v206;
  if (v207)
  {
    v208 = (unint64_t *)&v207->__shared_owners_;
    do
      v209 = __ldaxr(v208);
    while (__stlxr(v209 - 1, v208));
    if (!v209)
    {
      ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
      std::__shared_weak_count::__release_weak(v207);
    }
  }
  v210 = (std::__shared_weak_count *)v604[1];
  if (v604[1])
  {
    v211 = (unint64_t *)((char *)v604[1] + 8);
    do
      v212 = __ldaxr(v211);
    while (__stlxr(v212 - 1, v211));
    if (!v212)
    {
      ((void (*)(std::__shared_weak_count *))v210->__on_zero_shared)(v210);
      std::__shared_weak_count::__release_weak(v210);
    }
  }
  if (!(_QWORD)v475)
  {
    HIBYTE(v605) = 0;
    LOBYTE(v604[0]) = 0;
    sub_2396FCC6C((uint64_t)v682, (uint64_t)v604);
    if (SHIBYTE(v605) < 0)
      operator delete(v604[0]);
    v246 = 1;
    goto LABEL_537;
  }
  v497 = 0uLL;
  v498 = 0;
  if (v21)
  {
    v213 = (unint64_t *)__src;
    v442 = *(char **)v488;
    if (__src != *(void **)v488)
    {
      v450 = v7 + 1744;
      v214 = (void *)*MEMORY[0x24BEDB7F0];
      v449 = *(void **)(MEMORY[0x24BEDB7F0] + 64);
      v447 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v445 = MEMORY[0x24BEDB848] + 16;
      v215 = *(char **)v488;
      while (1)
      {
        v216 = *v213;
        sub_2394988CC((uint64_t)v604);
        v217 = v605;
        v218 = (char *)&v605 + *(_QWORD *)(v605 - 24);
        if (*((_DWORD *)v218 + 36) == -1)
        {
          std::ios_base::getloc((const std::ios_base *)((char *)&v605 + *(_QWORD *)(v605 - 24)));
          v219 = std::locale::use_facet(v460, MEMORY[0x24BEDB350]);
          ((void (*)(const std::locale::facet *, uint64_t))v219->__vftable[2].~facet_0)(v219, 32);
          std::locale::~locale(v460);
          v217 = v605;
        }
        *((_DWORD *)v218 + 36) = 48;
        *(_QWORD *)&v607[*(_QWORD *)(v217 - 24)] = 8;
        std::ostream::operator<<();
        std::stringbuf::str();
        v220 = std::string::append(&v468, ".bin");
        v221 = *(_OWORD *)&v220->__r_.__value_.__l.__data_;
        v470 = v220->__r_.__value_.__r.__words[2];
        *(_OWORD *)v469 = v221;
        v220->__r_.__value_.__l.__size_ = 0;
        v220->__r_.__value_.__r.__words[2] = 0;
        v220->__r_.__value_.__r.__words[0] = 0;
        sub_2395ACAA8((uint64_t)v469, (char *)&v600);
        v602 = v600;
        memset(&v600, 0, sizeof(v600));
        sub_239498A04((std::__fs::filesystem::path *)&v602, v450, (std::__fs::filesystem::path *)v460);
        if (SHIBYTE(v602.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v602.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v600.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_433:
            if ((SHIBYTE(v470) & 0x80000000) == 0)
              goto LABEL_434;
            goto LABEL_448;
          }
        }
        else if ((SHIBYTE(v600.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_433;
        }
        operator delete(v600.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v470) & 0x80000000) == 0)
        {
LABEL_434:
          if (SHIBYTE(v468.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_449;
          goto LABEL_435;
        }
LABEL_448:
        operator delete(v469[0]);
        if (SHIBYTE(v468.__r_.__value_.__r.__words[2]) < 0)
LABEL_449:
          operator delete(v468.__r_.__value_.__l.__data_);
LABEL_435:
        size = (std::__shared_weak_count *)operator new(0x40uLL);
        size->__shared_owners_ = 0;
        v223 = (unint64_t *)&size->__shared_owners_;
        size->__shared_weak_owners_ = 0;
        size[1].std::__shared_count = 0u;
        size->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBF90;
        size[2].__shared_owners_ = 0;
        *(_OWORD *)&size[1].__shared_weak_owners_ = 0u;
        LODWORD(size[2].__shared_owners_) = 1065353216;
        v602.__r_.__value_.__r.__words[0] = (std::string::size_type)&size[1];
        v602.__r_.__value_.__l.__size_ = (std::string::size_type)size;
        std::__fs::filesystem::__status((const std::__fs::filesystem::path *)v460, 0);
        if (v600.__r_.__value_.__s.__data_[0]
          && v600.__r_.__value_.__s.__data_[0] != 255
          && sub_239B044E4(&size[1].__vftable))
        {
          v467[0] = (uint64_t)&size[1];
          v467[1] = (uint64_t)size;
          do
            v224 = __ldxr(v223);
          while (__stxr(v224 + 1, v223));
          sub_239B67D84(v164, v467, v216);
          do
            v225 = __ldaxr(v223);
          while (__stlxr(v225 - 1, v223));
          if (!v225)
          {
            ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
            std::__shared_weak_count::__release_weak(size);
          }
          v226 = v497.i64[1];
          if (v497.i64[1] >= v498)
          {
            v228 = (void *)v497.i64[0];
            v229 = v497.i64[1] - v497.i64[0];
            v230 = (v497.i64[1] - v497.i64[0]) >> 3;
            v231 = v230 + 1;
            if ((unint64_t)(v230 + 1) >> 61)
              sub_2394189F8();
            v232 = v498 - v497.i64[0];
            if ((uint64_t)(v498 - v497.i64[0]) >> 2 > v231)
              v231 = v232 >> 2;
            v233 = (unint64_t)v232 >= 0x7FFFFFFFFFFFFFF8 ? 0x1FFFFFFFFFFFFFFFLL : v231;
            if (v233)
            {
              if (v233 >> 61)
                sub_239418A80();
              v234 = v233;
              v235 = (char *)operator new(8 * v233);
              v233 = v234;
            }
            else
            {
              v235 = 0;
            }
            v236 = (unint64_t *)&v235[8 * v230];
            *v236 = v216;
            v227 = (uint64_t)(v236 + 1);
            if ((void *)v226 != v228)
            {
              v237 = v226 - 8 - (_QWORD)v228;
              if (v237 < 0x58)
                goto LABEL_927;
              if ((unint64_t)(v226 - (_QWORD)&v235[v229]) < 0x20)
                goto LABEL_927;
              v238 = (v237 >> 3) + 1;
              v239 = &v235[8 * v230 - 16];
              v240 = (__int128 *)(v226 - 16);
              v241 = v238 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v242 = *v240;
                *((_OWORD *)v239 - 1) = *(v240 - 1);
                *(_OWORD *)v239 = v242;
                v239 -= 32;
                v240 -= 2;
                v241 -= 4;
              }
              while (v241);
              v236 -= v238 & 0x3FFFFFFFFFFFFFFCLL;
              v226 -= 8 * (v238 & 0x3FFFFFFFFFFFFFFCLL);
              if (v238 != (v238 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_927:
                do
                {
                  v243 = *(_QWORD *)(v226 - 8);
                  v226 -= 8;
                  *--v236 = v243;
                }
                while ((void *)v226 != v228);
              }
            }
            v497.i64[0] = (uint64_t)v236;
            v497.i64[1] = v227;
            v498 = (unint64_t)&v235[8 * v233];
            if (v228)
              operator delete(v228);
          }
          else
          {
            *(_QWORD *)v497.i64[1] = v216;
            v227 = v226 + 8;
          }
          v497.i64[1] = v227;
          size = (std::__shared_weak_count *)v602.__r_.__value_.__l.__size_;
          v215 = v442;
          if (!v602.__r_.__value_.__l.__size_)
            goto LABEL_474;
        }
        v244 = (unint64_t *)&size->__shared_owners_;
        do
          v245 = __ldaxr(v244);
        while (__stlxr(v245 - 1, v244));
        if (v245)
        {
LABEL_474:
          if (SHIBYTE(v461[0]) < 0)
            goto LABEL_478;
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
          std::__shared_weak_count::__release_weak(size);
          if (SHIBYTE(v461[0]) < 0)
LABEL_478:
            operator delete(v460[0].__locale_);
        }
        v604[0] = v214;
        *(void **)((char *)v604 + *((_QWORD *)v214 - 3)) = v449;
        v605 = v447;
        v606 = (void **)v445;
        if (SHIBYTE(v611) < 0)
          operator delete(v610);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v613);
        if (++v213 == (unint64_t *)v215)
        {
          v247 = v497.i64[1];
          v248 = v497.i64[0];
          v249 = *(_BYTE **)v488;
          v213 = (unint64_t *)__src;
          v7 = v443;
          goto LABEL_485;
        }
      }
    }
    v248 = 0;
    v247 = 0;
    v249 = __src;
LABEL_485:
    if (v247 - v248 == v249 - (_BYTE *)v213)
      goto LABEL_529;
  }
  if (*v452)
    __p[27] = 1;
  v250 = *(uint64_t **)v7;
  v630[0] = &off_250AF7518;
  v630[1] = v163;
  v631 = v630;
  v629 = 0;
  v627 = 0;
  v624[0] = &off_250AF7560;
  v624[1] = v164;
  v625 = v624;
  v251 = (uint64_t)v641;
  if (!v641)
    goto LABEL_491;
  if (v641 != v640)
  {
    v251 = (*(uint64_t (**)(void))(*v641 + 16))();
LABEL_491:
    v621 = (_QWORD *)v251;
    goto LABEL_493;
  }
  v621 = v620;
  (*(void (**)(_QWORD *, _QWORD *))(v640[0] + 24))(v640, v620);
LABEL_493:
  v252 = v622;
  v253 = (uint64_t)v643;
  if (!v643)
  {
LABEL_496:
    v623 = (_BYTE *)v253;
    goto LABEL_498;
  }
  if (v643 != v642)
  {
    v253 = (*(uint64_t (**)(void))(*(_QWORD *)v643 + 16))();
    goto LABEL_496;
  }
  v623 = v622;
  (*(void (**)(void))(*(_QWORD *)v643 + 24))();
LABEL_498:
  v254 = sub_239463274(v250, (uint64_t)__p, v630, v628, v626, v624, v620, v205, (uint64_t)&v497, 1, 0, 0, v475, 1, (uint64_t)v651, 1);
  if (v623 == v622)
  {
    v255 = 4;
  }
  else
  {
    if (!v623)
      goto LABEL_503;
    v255 = 5;
    v252 = v623;
  }
  (*(void (**)(_QWORD *))(*v252 + 8 * v255))(v252);
LABEL_503:
  v256 = v621;
  if (v621 == v620)
  {
    v257 = 4;
    v256 = v620;
  }
  else
  {
    if (!v621)
      goto LABEL_508;
    v257 = 5;
  }
  (*(void (**)(void))(*v256 + 8 * v257))();
LABEL_508:
  v258 = v625;
  if (v625 == v624)
  {
    v259 = 4;
    v258 = v624;
  }
  else
  {
    if (!v625)
      goto LABEL_513;
    v259 = 5;
  }
  (*(void (**)(void))(*v258 + 8 * v259))();
LABEL_513:
  v260 = v627;
  if (v627 == v626)
  {
    v261 = 4;
    v260 = v626;
  }
  else
  {
    if (!v627)
      goto LABEL_518;
    v261 = 5;
  }
  (*(void (**)(void))(*v260 + 8 * v261))();
LABEL_518:
  v262 = v629;
  if (v629 == v628)
  {
    v263 = 4;
    v262 = v628;
  }
  else
  {
    if (!v629)
      goto LABEL_523;
    v263 = 5;
  }
  (*(void (**)(void))(*v262 + 8 * v263))();
LABEL_523:
  v264 = v631;
  if (v631 == v630)
  {
    v265 = 4;
    v264 = v630;
  }
  else
  {
    if (!v631)
      goto LABEL_528;
    v265 = 5;
  }
  (*(void (**)(void))(*v264 + 8 * v265))();
LABEL_528:
  if ((v254 & 1) == 0)
  {
    HIBYTE(v605) = 0;
    LOBYTE(v604[0]) = 0;
    sub_2396FCC6C((uint64_t)v682, (uint64_t)v604);
    if (SHIBYTE(v605) < 0)
      operator delete(v604[0]);
    v246 = 1;
    v269 = (void *)v497.i64[0];
    if (v497.i64[0])
      goto LABEL_536;
    goto LABEL_537;
  }
LABEL_529:
  HIBYTE(v605) = 0;
  LOBYTE(v604[0]) = 0;
  sub_2396FCDAC((uint64_t)v682, (__int128 *)v604, 1);
  if (SHIBYTE(v605) < 0)
    operator delete(v604[0]);
  if (*(_DWORD *)(v7 + 1704) == 1)
  {
    v266 = v483;
    v267 = (std::mutex *)(v483 + 224);
    std::mutex::lock((std::mutex *)(v483 + 224));
    if (*((_QWORD *)v266 + 25))
    {
      for (i = (std::locale *)*((_QWORD *)v266 + 3); i; i = (std::locale *)i->__locale_)
      {
        if (i[3].__locale_)
        {
          v272 = *((_QWORD *)v266 + 25);
          if (v272)
          {
            v273 = (unint64_t *)i[4].__locale_;
            v604[0] = i[3].__locale_;
            v604[1] = v273;
            if (v273)
            {
              v274 = v273 + 1;
              do
                v275 = __ldxr(v274);
              while (__stxr(v275 + 1, v274));
              v272 = *((_QWORD *)v266 + 25);
              v460[0] = i[2];
              if (!v272)
                sub_2394172E0();
            }
            else
            {
              v460[0] = i[2];
            }
            (*(void (**)(uint64_t, void **, std::locale *))(*(_QWORD *)v272 + 48))(v272, v604, v460);
            v276 = (std::__shared_weak_count *)v604[1];
            if (v604[1])
            {
              v277 = (unint64_t *)((char *)v604[1] + 8);
              do
                v278 = __ldaxr(v277);
              while (__stlxr(v278 - 1, v277));
              if (!v278)
              {
                ((void (*)(std::__shared_weak_count *))v276->__on_zero_shared)(v276);
                std::__shared_weak_count::__release_weak(v276);
              }
            }
          }
        }
      }
    }
    std::mutex::unlock(v267);
  }
  v246 = 0;
  v269 = (void *)v497.i64[0];
  if (v497.i64[0])
  {
LABEL_536:
    v497.i64[1] = (uint64_t)v269;
    operator delete(v269);
  }
LABEL_537:
  if (SHIBYTE(v503[2]) < 0)
    operator delete(v503[0]);
  if (v500)
  {
    v501 = v500;
    operator delete(v500);
  }
  v270 = v643;
  if (v643 == v642)
  {
    v271 = 4;
    v270 = v642;
  }
  else
  {
    if (!v643)
      goto LABEL_560;
    v271 = 5;
  }
  (*(void (**)(void))(*v270 + 8 * v271))();
LABEL_560:
  v279 = v641;
  if (v641 == v640)
  {
    v280 = 4;
    v279 = v640;
  }
  else
  {
    if (!v641)
      goto LABEL_565;
    v280 = 5;
  }
  (*(void (**)(void))(*v279 + 8 * v280))();
LABEL_565:
  v281 = v581;
  if (v581 == v580)
  {
    v282 = 4;
    v281 = v580;
  }
  else
  {
    if (!v581)
      goto LABEL_570;
    v282 = 5;
  }
  (*(void (**)(void))(*v281 + 8 * v282))();
LABEL_570:
  v283 = p_task_info_outCnt;
  if (p_task_info_outCnt == &task_info_outCnt)
  {
    v284 = 4;
    v283 = &task_info_outCnt;
  }
  else
  {
    if (!p_task_info_outCnt)
      goto LABEL_575;
    v284 = 5;
  }
  (*(void (**)(void))(v283->__pn_.__r_.__value_.__r.__words[0] + 8 * v284))();
LABEL_575:
  if (!v571)
    sub_2394172E0();
  (*(void (**)(std::__fs::filesystem::path *))(v571->__pn_.__r_.__value_.__r.__words[0] + 48))(v571);
  v285 = v571;
  if (v571 == &v570)
  {
    v286 = 4;
    v285 = &v570;
  }
  else
  {
    if (!v571)
      goto LABEL_581;
    v286 = 5;
  }
  (*(void (**)(void))(v285->__pn_.__r_.__value_.__r.__words[0] + 8 * v286))();
LABEL_581:
  if (v246)
  {
    v20 = 2;
    v287 = (std::__shared_weak_count *)*((_QWORD *)&v475 + 1);
    if (*((_QWORD *)&v475 + 1))
      goto LABEL_852;
    goto LABEL_856;
  }
  sub_239AB5C84((uint64_t)v604);
  v288 = (std::string *)operator new(0x28uLL);
  v288->__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF75A8;
  v288->__r_.__value_.__l.__size_ = (std::string::size_type)v453;
  v288->__r_.__value_.__r.__words[2] = (std::string::size_type)v604;
  v288[1].__r_.__value_.__r.__words[0] = (std::string::size_type)&v476;
  v603 = v288;
  sub_239B5EE28(&task_info_outCnt);
  if (**(int **)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 56) <= 3)
  {
    if (*(_BYTE *)(task_info_outCnt.__pn_.__r_.__value_.__r.__words[0] + 72))
    {
      *(_QWORD *)__p = &task_info_outCnt;
      *(std::chrono::steady_clock::time_point *)&__p[8] = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&__p[16] = std::chrono::system_clock::now();
      *(_DWORD *)&__p[24] = 3;
      v500 = "unknown file";
      LODWORD(v501) = 647;
      v502 = "unknown function";
      *(_OWORD *)v503 = 0uLL;
      sub_239B5EEF8((uint64_t)__p, "Reconstructing camera poses - step 3");
      sub_239A47720((uint64_t)__p);
      sub_239A47720((uint64_t)__p);
      v289 = (std::__shared_weak_count *)v503[1];
      if (v503[1])
      {
        v290 = (unint64_t *)((char *)v503[1] + 8);
        do
          v291 = __ldaxr(v290);
        while (__stlxr(v291 - 1, v290));
        if (!v291)
        {
          ((void (*)(std::__shared_weak_count *))v289->__on_zero_shared)(v289);
          std::__shared_weak_count::__release_weak(v289);
        }
      }
    }
  }
  v617[0] = std::chrono::system_clock::now().__d_.__rep_;
  LODWORD(task_info_outCnt.__pn_.__r_.__value_.__l.__data_) = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, (task_info_t)__p, (mach_msg_type_number_t *)&task_info_outCnt))
    v618 = (float)((float)(unint64_t)v506 * 0.00097656) * 0.00097656;
  v619 = 1;
  v600.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF75F0;
  v600.__r_.__value_.__l.__size_ = (std::string::size_type)v604;
  v600.__r_.__value_.__r.__words[2] = 0;
  v601 = &v600;
  v292 = v485;
  v293 = v483;
  sub_239A62AE0((uint64_t)&task_info_outCnt, (__int128 *)(v7 + 456));
  if (*v452)
    v588 = 1;
  sub_2396FDAA8(v440, (uint64_t)v576);
  sub_2396FD534(&v463, v682, 29);
  v575 = 0;
  v294 = (char *)operator new(0x40uLL);
  *(_QWORD *)v294 = &off_250ADB9D8;
  *(_OWORD *)(v294 + 8) = v463;
  *((_QWORD *)v294 + 3) = v464;
  *((_QWORD *)&v463 + 1) = 0;
  v464 = 0;
  v295 = v465;
  v465 = 0uLL;
  v296 = v466;
  *((_OWORD *)v294 + 2) = v295;
  *((_OWORD *)v294 + 3) = v296;
  v466 = 0uLL;
  v575 = v294;
  sub_2396FD600((uint64_t)v640, (uint64_t)v576, (uint64_t)v574);
  v297 = v575;
  if (v575 == v574)
  {
    v298 = 4;
    v297 = v574;
    goto LABEL_603;
  }
  if (v575)
  {
    v298 = 5;
LABEL_603:
    (*(void (**)(void))(*v297 + 8 * v298))();
  }
  v299 = (std::__shared_weak_count *)*((_QWORD *)&v466 + 1);
  if (*((_QWORD *)&v466 + 1))
  {
    v300 = (unint64_t *)(*((_QWORD *)&v466 + 1) + 8);
    do
      v301 = __ldaxr(v300);
    while (__stlxr(v301 - 1, v300));
    if (!v301)
    {
      ((void (*)(std::__shared_weak_count *))v299->__on_zero_shared)(v299);
      std::__shared_weak_count::__release_weak(v299);
    }
  }
  v302 = (std::__shared_weak_count *)*((_QWORD *)&v465 + 1);
  if (*((_QWORD *)&v465 + 1))
  {
    v303 = (unint64_t *)(*((_QWORD *)&v465 + 1) + 8);
    do
      v304 = __ldaxr(v303);
    while (__stlxr(v304 - 1, v303));
    if (!v304)
    {
      ((void (*)(std::__shared_weak_count *))v302->__on_zero_shared)(v302);
      std::__shared_weak_count::__release_weak(v302);
    }
  }
  v305 = v464;
  if (v464)
  {
    v306 = (unint64_t *)&v464->__shared_owners_;
    do
      v307 = __ldaxr(v306);
    while (__stlxr(v307 - 1, v306));
    if (!v307)
    {
      ((void (*)(std::__shared_weak_count *))v305->__on_zero_shared)(v305);
      std::__shared_weak_count::__release_weak(v305);
    }
  }
  v308 = v577;
  if (v577 == v576)
  {
    v309 = 4;
    v308 = v576;
  }
  else
  {
    if (!v577)
      goto LABEL_624;
    v309 = 5;
  }
  (*(void (**)(void))(*v308 + 8 * v309))();
LABEL_624:
  sub_2396FDAA8(v640, (uint64_t)v568);
  v310 = (uint64_t)v641;
  if (!v641)
  {
LABEL_627:
    v563 = (_QWORD *)v310;
    goto LABEL_629;
  }
  if (v641 != v640)
  {
    v310 = (*(uint64_t (**)(void))(*v641 + 16))();
    goto LABEL_627;
  }
  v563 = v562;
  (*(void (**)(_QWORD *, _QWORD *))(v640[0] + 24))(v640, v562);
LABEL_629:
  v311 = v564;
  v312 = (uint64_t)v643;
  if (!v643)
  {
LABEL_632:
    v565 = (_QWORD *)v312;
    goto LABEL_634;
  }
  if (v643 != v642)
  {
    v312 = (*(uint64_t (**)(void))(*(_QWORD *)v643 + 16))();
    goto LABEL_632;
  }
  v565 = v564;
  (*(void (**)(void))(*(_QWORD *)v643 + 24))();
LABEL_634:
  v567 = 0;
  v313 = operator new(0x48uLL);
  v314 = v313;
  *v313 = &off_250AF7638;
  if (v563)
  {
    if (v563 == v562)
    {
      v313[4] = v313 + 1;
      (*(void (**)(_QWORD *))(v562[0] + 24))(v562);
    }
    else
    {
      v313[4] = v563;
      v563 = 0;
    }
  }
  else
  {
    v313[4] = 0;
  }
  if (v565)
  {
    if (v565 == v564)
    {
      v314[8] = v314 + 5;
      (*(void (**)(_QWORD *))(v564[0] + 24))(v564);
    }
    else
    {
      v314[8] = v565;
      v565 = 0;
    }
  }
  else
  {
    v314[8] = 0;
  }
  v567 = v314;
  sub_2396FD600((uint64_t)&v570, (uint64_t)v568, (uint64_t)v566);
  v315 = v567;
  if (v567 == v566)
  {
    v316 = 4;
    v315 = v566;
  }
  else
  {
    if (!v567)
      goto LABEL_649;
    v316 = 5;
  }
  (*(void (**)(void))(*v315 + 8 * v316))();
LABEL_649:
  if (v565 == v564)
  {
    v317 = 4;
  }
  else
  {
    if (!v565)
      goto LABEL_654;
    v317 = 5;
    v311 = v565;
  }
  (*(void (**)(_QWORD *))(*v311 + 8 * v317))(v311);
LABEL_654:
  v318 = v563;
  if (v563 == v562)
  {
    v319 = 4;
    v318 = v562;
  }
  else
  {
    if (!v563)
      goto LABEL_659;
    v319 = 5;
  }
  (*(void (**)(void))(*v318 + 8 * v319))();
LABEL_659:
  v320 = v569;
  if (v569 == v568)
  {
    v321 = 4;
    v320 = v568;
  }
  else
  {
    if (!v569)
      goto LABEL_664;
    v321 = 5;
  }
  (*(void (**)(void))(*v320 + 8 * v321))();
LABEL_664:
  sub_239B5F018(*v453, *(_QWORD *)v7);
  *(_OWORD *)&v460[0].__locale_ = 0u;
  *(_OWORD *)v461 = 0u;
  v462 = 1065353216;
  v322 = *(void **)(v7 + 32);
  if (!v322)
    goto LABEL_719;
  v323 = *(uint64_t **)(*(_QWORD *)v7 + 88);
  if (!v323)
    goto LABEL_707;
  v324 = -1;
  do
  {
    v325 = *((_DWORD *)v323 + 55);
    if ((v325 & 0x80000000) == 0)
    {
      v326 = v324 >= v325 ? *((_DWORD *)v323 + 55) : v324;
      v324 = v324 == -1 ? *((_DWORD *)v323 + 55) : v326;
      if (!v324)
        goto LABEL_678;
    }
    v323 = (uint64_t *)*v323;
  }
  while (v323);
  if (v324 < 0)
  {
LABEL_707:
    v322 = 0;
    goto LABEL_719;
  }
LABEL_678:
  sub_2396B8D74(*(_QWORD *)v7 + 456, &v497);
  v327 = v497.i64[1];
  v328 = (uint64_t *)v497.i64[0];
  if (v497.i64[0] == v497.i64[1])
    goto LABEL_716;
  do
  {
    v329 = *v328;
    v330 = *(_QWORD *)(v7 + 32);
    v469[0] = 0;
    v469[1] = 0;
    v489 = 0;
    *(_QWORD *)__p = sub_239B4D474;
    *(_QWORD *)&__p[8] = 0;
    *(_QWORD *)&__p[16] = v330;
    *(_QWORD *)&__p[24] = v329;
    sub_239B4D6F8((uint64_t)__p, (uint64_t)v469, (uint64_t)&v489);
    if (v489)
    {
      v459 = *(_OWORD *)v469;
    }
    else
    {
      v459 = 0uLL;
      v340 = (std::__shared_weak_count *)v469[1];
      if (v469[1])
      {
        v341 = (unint64_t *)((char *)v469[1] + 8);
        do
          v342 = __ldaxr(v341);
        while (__stlxr(v342 - 1, v341));
        if (!v342)
        {
          ((void (*)(std::__shared_weak_count *))v340->__on_zero_shared)(v340);
          std::__shared_weak_count::__release_weak(v340);
        }
      }
    }
    sub_239E1BBDC((unint64_t)&v468, (uint64_t *)&v459);
    v331 = (std::__shared_weak_count *)*((_QWORD *)&v459 + 1);
    if (!*((_QWORD *)&v459 + 1))
      goto LABEL_687;
    v332 = (unint64_t *)(*((_QWORD *)&v459 + 1) + 8);
    do
      v333 = __ldaxr(v332);
    while (__stlxr(v333 - 1, v332));
    if (!v333)
    {
      ((void (*)(std::__shared_weak_count *))v331->__on_zero_shared)(v331);
      std::__shared_weak_count::__release_weak(v331);
      v334 = v468.__r_.__value_.__r.__words[0];
      if (!v468.__r_.__value_.__r.__words[0])
        goto LABEL_702;
    }
    else
    {
LABEL_687:
      v334 = v468.__r_.__value_.__r.__words[0];
      if (!v468.__r_.__value_.__r.__words[0])
        goto LABEL_702;
    }
    *(_DWORD *)__p = v329;
    *(_QWORD *)&__p[8] = v334;
    *(_QWORD *)&__p[16] = v468.__r_.__value_.__l.__size_;
    if (v468.__r_.__value_.__l.__size_)
    {
      v335 = (unint64_t *)(v468.__r_.__value_.__l.__size_ + 8);
      do
        v336 = __ldxr(v335);
      while (__stxr(v336 + 1, v335));
    }
    sub_239B67EF8((uint64_t)v460, v329, (uint64_t)__p);
    v337 = *(std::__shared_weak_count **)&__p[16];
    if (*(_QWORD *)&__p[16])
    {
      v338 = (unint64_t *)(*(_QWORD *)&__p[16] + 8);
      do
        v339 = __ldaxr(v338);
      while (__stlxr(v339 - 1, v338));
      if (!v339)
      {
        ((void (*)(std::__shared_weak_count *))v337->__on_zero_shared)(v337);
        std::__shared_weak_count::__release_weak(v337);
      }
    }
LABEL_702:
    v343 = (std::__shared_weak_count *)v468.__r_.__value_.__l.__size_;
    if (v468.__r_.__value_.__l.__size_)
    {
      v344 = (unint64_t *)(v468.__r_.__value_.__l.__size_ + 8);
      do
        v345 = __ldaxr(v344);
      while (__stlxr(v345 - 1, v344));
      if (!v345)
      {
        ((void (*)(std::__shared_weak_count *))v343->__on_zero_shared)(v343);
        std::__shared_weak_count::__release_weak(v343);
      }
    }
    ++v328;
  }
  while (v328 != (uint64_t *)v327);
  v328 = (uint64_t *)v497.i64[0];
LABEL_716:
  if (v328)
  {
    v497.i64[1] = (uint64_t)v328;
    operator delete(v328);
  }
  v322 = v461[1];
LABEL_719:
  v349 = v322 != 0;
  if (v322)
    v350 = v460;
  else
    v350 = 0;
  if (LODWORD(task_info_outCnt.__pn_.__r_.__value_.__l.__data_) == 2)
  {
    v360 = (uint64_t *)*v453;
    v548[0] = &off_250AF7680;
    v548[1] = v292;
    v549 = v548;
    v546[0] = &off_250AF76C8;
    v546[1] = v293;
    v547 = v546;
    sub_2394B2548((uint64_t)v545, (uint64_t)&v570);
    v353 = sub_239DFC830(v360, (uint64_t)&task_info_outCnt, v548, v546, v545, (uint64_t)v604, 1, v361, v475, 1, v350, v349);
    sub_23942FE80(v545);
    v362 = v547;
    if (v547 == v546)
    {
      v363 = 4;
      v362 = v546;
    }
    else
    {
      if (!v547)
      {
LABEL_741:
        v364 = v549;
        if (v549 != v548)
          goto LABEL_751;
        v365 = 4;
        v364 = v548;
        goto LABEL_754;
      }
      v363 = 5;
    }
    (*(void (**)(void))(*v362 + 8 * v363))();
    goto LABEL_741;
  }
  if (LODWORD(task_info_outCnt.__pn_.__r_.__value_.__l.__data_) == 1)
  {
    v356 = (uint64_t *)*v453;
    v553[0] = &off_250AF7680;
    v553[1] = v292;
    v554 = v553;
    v551[0] = &off_250AF76C8;
    v551[1] = v293;
    v552 = v551;
    sub_2394B2548((uint64_t)v550, (uint64_t)&v570);
    v353 = sub_239DFA9B4(v356, (uint64_t)&task_info_outCnt, v553, v551, v550, (uint64_t)v604, 1, v357, v475, 1, v350, v349);
    sub_23942FE80(v550);
    v358 = v552;
    if (v552 == v551)
    {
      v359 = 4;
      v358 = v551;
    }
    else
    {
      if (!v552)
      {
LABEL_737:
        v364 = v554;
        if (v554 != v553)
          goto LABEL_751;
        v365 = 4;
        v364 = v553;
        goto LABEL_754;
      }
      v359 = 5;
    }
    (*(void (**)(void))(*v358 + 8 * v359))();
    goto LABEL_737;
  }
  if (LODWORD(task_info_outCnt.__pn_.__r_.__value_.__l.__data_))
  {
    sub_23941A4FC(__p, "");
    sub_2396FCC6C((uint64_t)v682, (uint64_t)__p);
    goto LABEL_783;
  }
  v351 = (uint64_t *)*v453;
  v560[0] = &off_250AF7680;
  v560[1] = v292;
  v561 = v560;
  v558[0] = &off_250AF76C8;
  v558[1] = v293;
  v559 = v558;
  sub_2394B2548((uint64_t)v557, (uint64_t)&v570);
  v556 = 0;
  v353 = sub_239DF7D28(v351, (uint64_t)&task_info_outCnt, v560, v558, v557, (uint64_t)v604, 1, v352, v475, 1, v350, v349, v555);
  v354 = v556;
  if (v556 == v555)
  {
    v355 = 4;
    v354 = v555;
LABEL_744:
    (*(void (**)(void))(*v354 + 8 * v355))();
  }
  else if (v556)
  {
    v355 = 5;
    goto LABEL_744;
  }
  sub_23942FE80(v557);
  v366 = v559;
  if (v559 == v558)
  {
    v367 = 4;
    v366 = v558;
LABEL_749:
    (*(void (**)(void))(*v366 + 8 * v367))();
  }
  else if (v559)
  {
    v367 = 5;
    goto LABEL_749;
  }
  v364 = v561;
  if (v561 == v560)
  {
    v365 = 4;
    v364 = v560;
LABEL_754:
    (*(void (**)(void))(*v364 + 8 * v365))();
    goto LABEL_755;
  }
LABEL_751:
  if (v364)
  {
    v365 = 5;
    goto LABEL_754;
  }
LABEL_755:
  v368 = *v453;
  v369 = *(uint64_t **)(*v453 + 88);
  if (v369)
  {
    v370 = 0;
    do
    {
      if (*((_BYTE *)v369 + 256) == 2)
        ++v370;
      v369 = (uint64_t *)*v369;
    }
    while (v369);
  }
  else
  {
    v370 = 0;
  }
  if (v656)
    v371 = 1;
  else
    v371 = *(_BYTE *)(v7 + 1664) == 0;
  v372 = v371 || *((_BYTE *)v453 + 152) == 0;
  if (v372 || (!*v452 ? (v373 = v657 == 0) : (v373 = 0), !v373))
  {
    if ((v353 & 1) != 0)
      goto LABEL_774;
    bzero(__p, 0x3A8uLL);
    memset(&v503[2], 0, 32);
    LODWORD(v503[1]) = 1065353216;
    LODWORD(v503[6]) = 1065353216;
    v505 = 0u;
    v506 = 0u;
    v507 = 0u;
    *(_QWORD *)&v508 = 0;
    DWORD2(v508) = 1065353216;
    v509 = 0u;
    v510 = 0u;
    *(_DWORD *)v511 = 1065353216;
    memset(&v511[8], 0, 72);
    *(_QWORD *)v512 = 0x3FF0000000000000;
    memset(&v512[8], 0, 32);
    v513 = 0;
    v514 = -1;
    v515 = 0u;
    v516 = 0u;
    v517 = 1065353216;
    v518 = 0u;
    v519 = 0u;
    v520 = 1065353216;
    v521 = 0u;
    v522 = 0u;
    v523 = 0u;
    v524 = 0u;
    v525 = 0u;
    v526 = 0u;
    v527 = 0u;
    v528 = 0u;
    v529 = 0u;
    v530 = 0u;
    v531 = 0u;
    v532 = 0u;
    v533 = 0u;
    v534 = 0u;
    v535 = 0u;
    v536 = 0u;
    v537 = 0u;
    v538 = 0u;
    v539 = 1065353216;
    v540 = 0;
    v542 = 0;
    v541 = 0;
    v543 = 0;
    sub_239B5FFE0(v368, (uint64_t)__p);
    sub_239A4D648((uint64_t)__p);
    __p[23] = 0;
    __p[0] = 0;
    sub_2396FCC6C((uint64_t)v682, (uint64_t)__p);
LABEL_783:
    if ((__p[23] & 0x80000000) != 0)
      operator delete(*(void **)__p);
LABEL_785:
    v20 = 2;
    goto LABEL_786;
  }
  if (!v353 || 2 * v370 < (unint64_t)((uint64_t)(*(_QWORD *)v488 - (_QWORD)__src) >> 3))
  {
    v476 = 1;
    sub_239B5F800((uint64_t)__p, v7);
    BYTE3(v506) = 1;
    v544 = 1;
    sub_2396FDAA8(v640, (uint64_t)v495);
    sub_2396FD534(&v455, v682, 5);
    v494 = 0;
    v411 = (char *)operator new(0x40uLL);
    *(_QWORD *)v411 = &off_250ADB9D8;
    *(_OWORD *)(v411 + 8) = v455;
    *((_QWORD *)v411 + 3) = v456;
    *((_QWORD *)&v455 + 1) = 0;
    v456 = 0;
    v412 = v457;
    v457 = 0uLL;
    v413 = v458;
    *((_OWORD *)v411 + 2) = v412;
    *((_OWORD *)v411 + 3) = v413;
    v458 = 0uLL;
    v494 = v411;
    sub_2396FD600((uint64_t)&v497, (uint64_t)v495, (uint64_t)v493);
    v414 = v494;
    if (v494 == v493)
    {
      v415 = 4;
      v414 = v493;
LABEL_885:
      (*(void (**)(void))(*v414 + 8 * v415))();
    }
    else if (v494)
    {
      v415 = 5;
      goto LABEL_885;
    }
    sub_23942FEFC(&v455);
    v422 = v496;
    if (v496 == v495)
    {
      v423 = 4;
      v422 = v495;
LABEL_890:
      (*(void (**)(void))(*v422 + 8 * v423))();
    }
    else if (v496)
    {
      v423 = 5;
      goto LABEL_890;
    }
    sub_2394B2548((uint64_t)v492, (uint64_t)&v497);
    v454[0] = v485;
    v454[1] = v486;
    if (v486)
    {
      v424 = (unint64_t *)&v486->__shared_owners_;
      do
        v425 = __ldxr(v424);
      while (__stxr(v425 + 1, v424));
    }
    v20 = sub_239B62AA0(__p, v453, v492, v454);
    sub_239A4D7C0((uint64_t)v454);
    sub_23942FE80(v492);
    sub_23942FE80(&v497);
    sub_239B5FD30((uint64_t)__p);
    goto LABEL_786;
  }
LABEL_774:
  __p[23] = 0;
  __p[0] = 0;
  sub_2396FCDAC((uint64_t)v682, (__int128 *)__p, 5);
  if ((__p[23] & 0x80000000) != 0)
    operator delete(*(void **)__p);
  if (!v614 && v589 && *(_QWORD *)(v7 + 64) && *(_QWORD *)(v7 + 48))
  {
    if (sub_2396FD7B0((uint64_t)v640))
    {
      sub_2394202DC(v617, 2);
      v20 = 1;
      goto LABEL_786;
    }
    *(_QWORD *)__p = 0;
    v416 = *v453;
    v490[0] = &off_250AF7710;
    v490[1] = v7;
    v491 = v490;
    v417 = sub_239DABAC4(v416, (uint64_t)v490, __p, task_info_outCnt.__pn_.__r_.__value_.__r.__words[1]);
    v420 = v491;
    if (v491 == v490)
    {
      v421 = 4;
      v420 = v490;
LABEL_896:
      (*(void (**)(void))(*v420 + 8 * v421))();
    }
    else if (v491)
    {
      v421 = 5;
      goto LABEL_896;
    }
    if ((v417 & 1) != 0 && *(double *)__p >= 2.22044605e-16)
    {
      v419.f64[0] = 1.0;
      v418.f64[0] = 1.0 / *(double *)__p;
      sub_239B60624(v416, 0, v418, v419);
      v426 = 1;
    }
    else
    {
      sub_2394202DC(v617, 4504);
      v426 = 0;
    }
    v615 = v426;
  }
  if (!v590
    || ((v427 = sub_2394AEBA4((float64x2_t *)(*v453 + 536), 0.0001), v614) ? (v428 = v427) : (v428 = 0), !v428))
  {
    if (sub_2396FD7B0((uint64_t)v640))
    {
      v20 = 2;
      sub_2394202DC(v617, 2);
      goto LABEL_786;
    }
    if ((sub_239E022D8((uint64_t *)*v453, (_OWORD *)(*v453 + 536), v593, v591, v592) & 1) == 0)
    {
      sub_2394202DC(v617, 4020);
      v616 = 0;
      goto LABEL_785;
    }
    v616 = 1;
    if (!v614)
    {
      v429 = (_QWORD *)*v453;
      v430 = sub_239B60994((float64x2_t *)__p, (float64x2_t *)(*v453 + 536));
      sub_2396F661C((uint64_t)__p, v429, v430, v431, v432, v433, v434, v435, v436);
    }
  }
  v20 = 0;
LABEL_786:
  v374 = v461[0];
  if (v461[0])
  {
    do
    {
      v378 = v374;
      v374 = (_QWORD *)*v374;
      v379 = (std::__shared_weak_count *)v378[4];
      if (v379)
      {
        v380 = (unint64_t *)&v379->__shared_owners_;
        do
          v381 = __ldaxr(v380);
        while (__stlxr(v381 - 1, v380));
        if (!v381)
        {
          ((void (*)(std::__shared_weak_count *))v379->__on_zero_shared)(v379);
          std::__shared_weak_count::__release_weak(v379);
        }
      }
      operator delete(v378);
    }
    while (v374);
  }
  v375 = v460[0].__locale_;
  v460[0].__locale_ = 0;
  if (v375)
    operator delete(v375);
  v376 = v573;
  if (v573 == v572)
  {
    v377 = 4;
    v376 = v572;
LABEL_799:
    (*(void (**)(void))(*v376 + 8 * v377))();
  }
  else if (v573)
  {
    v377 = 5;
    goto LABEL_799;
  }
  v382 = v571;
  if (v571 == &v570)
  {
    v383 = 4;
    v382 = &v570;
LABEL_804:
    (*(void (**)(void))(v382->__pn_.__r_.__value_.__r.__words[0] + 8 * v383))();
  }
  else if (v571)
  {
    v383 = 5;
    goto LABEL_804;
  }
  v384 = v643;
  if (v643 == v642)
  {
    v385 = 4;
    v384 = v642;
LABEL_809:
    (*(void (**)(void))(*v384 + 8 * v385))();
  }
  else if (v643)
  {
    v385 = 5;
    goto LABEL_809;
  }
  v386 = v641;
  if (v641 == v640)
  {
    v387 = 4;
    v386 = v640;
LABEL_814:
    (*(void (**)(void))(*v386 + 8 * v387))();
  }
  else if (v641)
  {
    v387 = 5;
    goto LABEL_814;
  }
  v388 = v599;
  if (v599 == v598)
  {
    v389 = 4;
    v388 = v598;
LABEL_819:
    (*(void (**)(void))(*v388 + 8 * v389))();
  }
  else if (v599)
  {
    v389 = 5;
    goto LABEL_819;
  }
  v390 = v597;
  if (v597 == v596)
  {
    v391 = 4;
    v390 = v596;
LABEL_824:
    (*(void (**)(void))(*v390 + 8 * v391))();
  }
  else if (v597)
  {
    v391 = 5;
    goto LABEL_824;
  }
  if (v594)
  {
    v595 = v594;
    operator delete(v594);
  }
  if (v587 < 0)
    operator delete(v586);
  v392 = v585;
  if (v585 == v584)
  {
    v393 = 4;
    v392 = v584;
LABEL_833:
    (*(void (**)(void))(*v392 + 8 * v393))();
  }
  else if (v585)
  {
    v393 = 5;
    goto LABEL_833;
  }
  v394 = v583;
  if (v583 == v582)
  {
    v395 = 4;
    v394 = v582;
LABEL_838:
    (*(void (**)(void))(*v394 + 8 * v395))();
  }
  else if (v583)
  {
    v395 = 5;
    goto LABEL_838;
  }
  if (!v601)
    sub_2394172E0();
  (*(void (**)(std::string *))(v601->__r_.__value_.__r.__words[0] + 48))(v601);
  v396 = v601;
  if (v601 == &v600)
  {
    v397 = 4;
    v396 = &v600;
LABEL_844:
    (*(void (**)(void))(v396->__r_.__value_.__r.__words[0] + 8 * v397))();
  }
  else if (v601)
  {
    v397 = 5;
    goto LABEL_844;
  }
  if (!v603)
    sub_2394172E0();
  (*(void (**)(std::string *))(v603->__r_.__value_.__r.__words[0] + 48))(v603);
  v398 = v603;
  if (v603 == &v602)
  {
    v399 = 4;
    v398 = &v602;
LABEL_850:
    (*(void (**)(void))(v398->__r_.__value_.__r.__words[0] + 8 * v399))();
  }
  else if (v603)
  {
    v399 = 5;
    goto LABEL_850;
  }
  sub_239A615DC((uint64_t)v604);
  v287 = (std::__shared_weak_count *)*((_QWORD *)&v475 + 1);
  if (*((_QWORD *)&v475 + 1))
  {
LABEL_852:
    v400 = (unint64_t *)&v287->__shared_owners_;
    do
      v401 = __ldaxr(v400);
    while (__stlxr(v401 - 1, v400));
    if (!v401)
    {
      ((void (*)(std::__shared_weak_count *))v287->__on_zero_shared)(v287);
      std::__shared_weak_count::__release_weak(v287);
    }
  }
LABEL_856:
  if (!v650)
    sub_2394172E0();
  (*((void (**)(void **))*v650 + 6))(v650);
  v402 = v650;
  if (v650 == v648)
  {
    v403 = 4;
    v402 = v648;
LABEL_861:
    (*((void (**)(void))*v402 + v403))();
  }
  else if (v650)
  {
    v403 = 5;
    goto LABEL_861;
  }
  sub_239A6177C((uint64_t)v651);
LABEL_863:
  sub_2396FCD14((uint64_t)v682);
  v404 = v484;
  if (v484)
  {
    v405 = (unint64_t *)&v484->__shared_owners_;
    do
      v406 = __ldaxr(v405);
    while (__stlxr(v406 - 1, v405));
    if (!v406)
    {
      ((void (*)(std::__shared_weak_count *))v404->__on_zero_shared)(v404);
      std::__shared_weak_count::__release_weak(v404);
    }
  }
  v407 = v486;
  if (v486)
  {
    v408 = (unint64_t *)&v486->__shared_owners_;
    do
      v409 = __ldaxr(v408);
    while (__stlxr(v409 - 1, v408));
    if (!v409)
    {
      ((void (*)(std::__shared_weak_count *))v407->__on_zero_shared)(v407);
      std::__shared_weak_count::__release_weak(v407);
    }
  }
  if (__src)
  {
    *(_QWORD *)v488 = __src;
    operator delete(__src);
  }
  return v20;
}

void sub_239B66848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,std::locale a47)
{
  void *v48;

  sub_23946314C((uint64_t)&a47);
  sub_23942FE80(&STACK[0xCC0]);
  sub_23942FE80(&STACK[0x19D0]);
  sub_239B61780((uint64_t)&STACK[0xD40]);
  sub_239416834(&STACK[0x1180]);
  sub_239416834(&STACK[0x11A0]);
  sub_239A615DC((uint64_t)&STACK[0x11C0]);
  sub_239416DA0((uint64_t)&STACK[0x220]);
  sub_239416834(&STACK[0x1A50]);
  sub_239A6177C((uint64_t)&STACK[0x1A78]);
  sub_2396FCD14((uint64_t)&STACK[0x1EC0]);
  sub_239A4D7C0((uint64_t)&STACK[0x290]);
  sub_239A4D7C0((uint64_t)&STACK[0x2A0]);
  v48 = (void *)STACK[0x2B0];
  if (!STACK[0x2B0])
    _Unwind_Resume(a1);
  STACK[0x2B8] = (unint64_t)v48;
  operator delete(v48);
  _Unwind_Resume(a1);
}

uint64_t sub_239B678AC(uint64_t a1, uint64_t *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v22;
  uint64_t v23[2];
  std::__shared_weak_count *v24;
  char v25;
  _BYTE v26[24];
  _BYTE *v27;
  _QWORD v28[34];

  v28[33] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 337, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v4 = *a2;
  if (*a2)
  {
    v23[0] = a3;
    v23[1] = v4;
    v6 = (std::__shared_weak_count *)a2[1];
    v24 = v6;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }
    v25 = 0;
    v9 = v26;
    v10 = a4[3];
    if (v10)
    {
      if ((_QWORD *)v10 == a4)
      {
        v27 = v26;
        (*(void (**)(_QWORD *, _BYTE *))(*a4 + 24))(a4, v26);
LABEL_13:
        sub_239B01EF8((uint64_t)v28, v23);
        v13 = operator new(0x120uLL);
        v13[1] = 0;
        v13[2] = 0;
        *v13 = &off_250AF8A78;
        *(_QWORD *)&v22 = sub_239B00B80((uint64_t)(v13 + 3), (uint64_t)v28);
        *((_QWORD *)&v22 + 1) = v13;
        sub_239A82E8C(v28);
        if (v27 == v26)
        {
          v14 = 4;
        }
        else
        {
          if (!v27)
            goto LABEL_18;
          v14 = 5;
          v9 = v27;
        }
        (*(void (**)(_QWORD *))(*v9 + 8 * v14))(v9);
LABEL_18:
        v15 = v24;
        if (v24)
        {
          v16 = (unint64_t *)&v24->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
        v12 = sub_239AFE6F4(*(unsigned int **)(a1 + 288), &v22);
        v18 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
        if (*((_QWORD *)&v22 + 1))
        {
          v19 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        return v12;
      }
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
    }
    v27 = (_BYTE *)v10;
    goto LABEL_13;
  }
  LOBYTE(v28[0]) = 0;
  v11 = a4[3];
  if (!v11)
    sub_2394172E0();
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v11 + 48))(v11, v28);
  return 1;
}

void sub_239B67AC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239B67ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239A4D7C0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239B67AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_239A82E8C((uint64_t *)va1);
  sub_239A83110((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239B67B14(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)());
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t (***v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unsigned int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  pthread_cond_t v28;
  pthread_cond_t v29;
  pthread_mutex_t v30;
  uint64_t (**v31)();
  __int128 v32;
  uint64_t (***v33)();
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  sub_2397A1618(&v30);
  v21 = 0x7FFFFFFF;
  pthread_cond_init(&v28, 0);
  pthread_cond_init(&v29, 0);
  *(_QWORD *)&v4 = &v21;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)()))a1;
  v7 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v5 >> 1));
  if ((v5 & 1) != 0)
    v6 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t, uint64_t (***)()))(*v7 + v6);
  *((_QWORD *)&v4 + 1) = a2;
  v8 = *(std::__shared_weak_count **)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 24);
  v20 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  v11 = *(_QWORD *)(a1 + 40);
  v31 = &off_250AF72D8;
  v32 = v4;
  v33 = &v31;
  v12 = v6(v7, &v19, v11, &v31);
  v13 = v33;
  if (v33 == &v31)
  {
    v14 = 4;
    v13 = &v31;
    goto LABEL_10;
  }
  if (v33)
  {
    v14 = 5;
LABEL_10:
    (*v13)[v14]();
  }
  v15 = v20;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      if (!v12)
        return sub_2395C29C4((uint64_t)&v21);
      goto LABEL_16;
    }
  }
  if (v12)
  {
LABEL_16:
    sub_2395BFB54(&v21);
    sub_2395C2A4C((uint64_t)&v21);
  }
  return sub_2395C29C4((uint64_t)&v21);
}

void sub_239B67CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B67D60(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

BOOL sub_239B67D84(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v3;
  std::mutex *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v17;
  std::__shared_weak_count *v18;
  _QWORD v19[2];
  std::__shared_weak_count *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;

  v22 = a3;
  v3 = *a2;
  if (*a2)
  {
    v6 = (std::mutex *)(a1 + 224);
    std::mutex::lock((std::mutex *)(a1 + 224));
    sub_239B688E4((uint64_t)v19, a1, &v22, a2);
    if (v21)
    {
      v7 = *(_QWORD *)(a1 + 200);
      if (v7)
      {
        v17 = v19[1];
        v18 = v20;
        if (v20)
        {
          p_shared_owners = (unint64_t *)&v20->__shared_owners_;
          do
            v9 = __ldxr(p_shared_owners);
          while (__stxr(v9 + 1, p_shared_owners));
          v7 = *(_QWORD *)(a1 + 200);
          v23 = v19[0];
          if (!v7)
            sub_2394172E0();
        }
        else
        {
          v23 = v19[0];
        }
        (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v17, &v23);
        v10 = v18;
        if (v18)
        {
          v11 = (unint64_t *)&v18->__shared_owners_;
          do
            v12 = __ldaxr(v11);
          while (__stlxr(v12 - 1, v11));
          if (!v12)
          {
            ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
            std::__shared_weak_count::__release_weak(v10);
          }
        }
      }
      if (v21)
      {
        v13 = v20;
        if (v20)
        {
          v14 = (unint64_t *)&v20->__shared_owners_;
          do
            v15 = __ldaxr(v14);
          while (__stlxr(v15 - 1, v14));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
            std::__shared_weak_count::__release_weak(v13);
          }
        }
      }
    }
    std::mutex::unlock(v6);
  }
  return v3 != 0;
}

void sub_239B67ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::mutex *v11;

  sub_239416DA0((uint64_t)&a9);
  sub_239B68EB0((uint64_t)&a11);
  std::mutex::unlock(v11);
  _Unwind_Resume(a1);
}

uint64_t sub_239B67EF8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t **v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v14;
  char *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t prime;
  int8x8_t v22;
  unint64_t v23;
  uint8x8_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;

  v6 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = ((_DWORD)v7 - 1) & a2;
    }
    v9 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (v10)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (*((_DWORD *)v10 + 4) == a2)
                return 0;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_23;
            }
            v10 = (uint64_t *)*v10;
            if (!v10)
              goto LABEL_23;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (*((_DWORD *)v10 + 4) == a2)
              return 0;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (uint64_t *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_23:
  v14 = (_QWORD *)(a1 + 16);
  v15 = (char *)operator new(0x28uLL);
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = v6;
  *((_DWORD *)v15 + 4) = *(_DWORD *)a3;
  *(_OWORD *)(v15 + 24) = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v7 || (float)(v17 * (float)v7) < v16)
  {
    v18 = 1;
    if (v7 >= 3)
      v18 = (v7 & (v7 - 1)) != 0;
    v19 = v18 | (2 * v7);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      prime = v20;
    else
      prime = v19;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v22 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v22)
      goto LABEL_35;
    if (prime < *(_QWORD *)&v22)
    {
      v23 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v22 < 3uLL || (v24 = (uint8x8_t)vcnt_s8(v22), v24.i16[0] = vaddlv_u8(v24), v24.u32[0] > 1uLL))
      {
        v23 = std::__next_prime(v23);
      }
      else
      {
        v25 = 1 << -(char)__clz(v23 - 1);
        if (v23 >= 2)
          v23 = v25;
      }
      if (prime <= v23)
        prime = v23;
      if (prime < *(_QWORD *)&v22)
LABEL_35:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = ((_DWORD)v7 - 1) & v6;
    }
  }
  v26 = *(_QWORD *)a1;
  v27 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v27)
  {
    *(_QWORD *)v15 = *v27;
LABEL_59:
    *v27 = v15;
    goto LABEL_60;
  }
  *(_QWORD *)v15 = *v14;
  *v14 = v15;
  *(_QWORD *)(v26 + 8 * v3) = v14;
  if (*(_QWORD *)v15)
  {
    v28 = *(_QWORD *)(*(_QWORD *)v15 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v28 >= v7)
        v28 %= v7;
    }
    else
    {
      v28 &= v7 - 1;
    }
    v27 = (_QWORD *)(*(_QWORD *)a1 + 8 * v28);
    goto LABEL_59;
  }
LABEL_60:
  ++*(_QWORD *)(a1 + 24);
  return 1;
}

void sub_239B681F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239B68208(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B68264()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B68278(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7710;
  result[1] = v3;
  return result;
}

uint64_t sub_239B682AC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7710;
  a2[1] = v2;
  return result;
}

void sub_239B682C8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 48);
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B5A4EC;
  v9[1] = 0;
  v9[2] = v5;
  v9[3] = v4;
  sub_239B5A770((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B68370(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B683B8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B683CC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF76C8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B68400(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF76C8;
  a2[1] = v2;
  return result;
}

void sub_239B6841C(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  int8x8_t v15;
  uint8x8_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  _QWORD v36[2];
  std::__shared_weak_count *v37;
  char v38;
  __int128 v39;
  __int128 v40;
  unint64_t v41;
  uint64_t v42;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v41 = *a2;
  std::mutex::lock((std::mutex *)(v4 + 224));
  ++*(_QWORD *)(v4 + 208);
  v40 = 0uLL;
  if (sub_23946A940(v4, &v41, &v40))
  {
    ++*(_QWORD *)(v4 + 216);
    *(_OWORD *)a3 = v40;
    v40 = 0uLL;
    goto LABEL_60;
  }
  v6 = *(_QWORD *)(v4 + 168);
  if (!v6)
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    goto LABEL_60;
  }
  v36[0] = v5;
  (*(void (**)(__int128 *__return_ptr, uint64_t, _QWORD *))(*(_QWORD *)v6 + 48))(&v39, v6, v36);
  if (!(_QWORD)v39)
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    goto LABEL_55;
  }
  sub_239B688E4((uint64_t)v36, v4, &v41, (uint64_t *)&v39);
  if (!v38)
    goto LABEL_26;
  v7 = *(_QWORD *)(v4 + 200);
  v8 = v36[0];
  if (v7)
  {
    if (v36[0] == v5)
      goto LABEL_24;
    v34 = v36[1];
    v35 = v37;
    if (v37)
    {
      p_shared_owners = (unint64_t *)&v37->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      v7 = *(_QWORD *)(v4 + 200);
      v42 = v8;
      if (!v7)
        sub_2394172E0();
    }
    else
    {
      v42 = v36[0];
    }
    (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v34, &v42);
    v11 = v35;
    if (v35)
    {
      v12 = (unint64_t *)&v35->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v38)
    {
      v8 = v36[0];
      v5 = v41;
      goto LABEL_23;
    }
LABEL_26:
    *(_OWORD *)a3 = v39;
    v39 = 0uLL;
    goto LABEL_55;
  }
LABEL_23:
  if (v8 == v5)
  {
LABEL_24:
    *(_OWORD *)a3 = v39;
    v39 = 0uLL;
    v14 = v37;
    if (v37)
      goto LABEL_51;
    goto LABEL_55;
  }
  std::mutex::lock((std::mutex *)(v4 + 80));
  v15 = *(int8x8_t *)(v4 + 16);
  if (!*(_QWORD *)&v15)
    goto LABEL_66;
  v16 = (uint8x8_t)vcnt_s8(v15);
  v16.i16[0] = vaddlv_u8(v16);
  if (v16.u32[0] > 1uLL)
  {
    v17 = v5;
    if (v5 >= *(_QWORD *)&v15)
      v17 = v5 % *(_QWORD *)&v15;
  }
  else
  {
    v17 = (*(_QWORD *)&v15 - 1) & v5;
  }
  v18 = *(_QWORD **)(*(_QWORD *)(v4 + 8) + 8 * v17);
  if (!v18 || (v19 = (_QWORD *)*v18) == 0)
  {
LABEL_66:
    sub_239A444D4((uint64_t)"unknown file", 230, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (v16.u32[0] < 2uLL)
  {
    v20 = *(_QWORD *)&v15 - 1;
    while (1)
    {
      v22 = v19[1];
      if (v5 == v22)
      {
        if (v19[2] == v5)
          goto LABEL_47;
      }
      else if ((v22 & v20) != v17)
      {
        goto LABEL_66;
      }
      v19 = (_QWORD *)*v19;
      if (!v19)
        goto LABEL_66;
    }
  }
  while (1)
  {
    v21 = v19[1];
    if (v5 == v21)
      break;
    if (v21 >= *(_QWORD *)&v15)
      v21 %= *(_QWORD *)&v15;
    if (v21 != v17)
      goto LABEL_66;
LABEL_37:
    v19 = (_QWORD *)*v19;
    if (!v19)
      goto LABEL_66;
  }
  if (v19[2] != v5)
    goto LABEL_37;
LABEL_47:
  *(_QWORD *)a3 = v19[3];
  v23 = v19[4];
  *(_QWORD *)(a3 + 8) = v23;
  if (v23)
  {
    v24 = (unint64_t *)(v23 + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  std::mutex::unlock((std::mutex *)(v4 + 80));
  v14 = v37;
  if (v37)
  {
LABEL_51:
    v26 = (unint64_t *)&v14->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
LABEL_55:
  v28 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
  if (*((_QWORD *)&v39 + 1))
  {
    v29 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
LABEL_60:
  v31 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v32 = (unint64_t *)(*((_QWORD *)&v40 + 1) + 8);
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  std::mutex::unlock((std::mutex *)(v4 + 224));
}

void sub_239B687BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, char a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, std::__shared_weak_count *a18)
{
  std::mutex *v18;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;

  if (a14)
  {
    if (a13)
    {
      p_shared_owners = (unint64_t *)&a13->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))a13->__on_zero_shared)(a13);
        std::__shared_weak_count::__release_weak(a13);
      }
    }
  }
  if (a16)
  {
    v22 = (unint64_t *)&a16->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
      std::__shared_weak_count::__release_weak(a16);
    }
  }
  if (a18)
  {
    v24 = (unint64_t *)&a18->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))a18->__on_zero_shared)(a18);
      std::__shared_weak_count::__release_weak(a18);
    }
  }
  std::mutex::unlock(v18);
  _Unwind_Resume(a1);
}

void sub_239B688E4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t *a4)
{
  std::mutex *v8;
  uint64_t *v9;
  unint64_t v10;
  int8x8_t v11;
  uint8x8_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  uint64_t v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t v34;
  int8x8_t v35;
  uint8x8_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD **v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;

  v8 = (std::mutex *)(a2 + 80);
  std::mutex::lock((std::mutex *)(a2 + 80));
  v9 = (uint64_t *)(a2 + 8);
  v10 = *a3;
  v11 = *(int8x8_t *)(a2 + 16);
  if (!*(_QWORD *)&v11)
    goto LABEL_21;
  v12 = (uint8x8_t)vcnt_s8(v11);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    v13 = *a3;
    if (v10 >= *(_QWORD *)&v11)
      v13 = v10 % *(_QWORD *)&v11;
  }
  else
  {
    v13 = (*(_QWORD *)&v11 - 1) & v10;
  }
  v14 = *(_QWORD **)(*v9 + 8 * v13);
  if (!v14 || (v15 = (_QWORD *)*v14) == 0)
  {
LABEL_21:
    if ((unint64_t)(*(_QWORD *)(a2 + 32) + 1) <= *(_QWORD *)(a2 + 48))
    {
      v22 = operator new(0x18uLL);
      v23 = *(_QWORD **)(a2 + 64);
      *v22 = a2 + 56;
      v22[1] = v23;
      v22[2] = v10;
      *v23 = v22;
      v24 = *(_QWORD *)(a2 + 72) + 1;
      *(_QWORD *)(a2 + 64) = v22;
      *(_QWORD *)(a2 + 72) = v24;
      sub_239B68F10(a2 + 8, *a3, *a3, *a4, a4[1]);
      goto LABEL_29;
    }
    v18 = *(_QWORD *)(a2 + 72);
    if (v18)
    {
      v19 = *(uint64_t **)(a2 + 56);
      v20 = v19[2];
      if ((*(_QWORD *)&v11 & (*(_QWORD *)&v11 - 1)) != 0)
      {
        v29 = v19[2];
        if (v20 >= *(_QWORD *)&v11)
          v29 = v20 % *(_QWORD *)&v11;
        v21 = *(_QWORD **)(*v9 + 8 * v29);
        do
        {
          do
            v21 = (_QWORD *)*v21;
          while (v21[1] != v20);
        }
        while (v21[2] != v20);
      }
      else
      {
        v21 = *(_QWORD **)(*v9 + 8 * (v20 & (*(_QWORD *)&v11 - 1)));
        do
        {
          do
            v21 = (_QWORD *)*v21;
          while (v21[1] != v20);
        }
        while (v21[2] != v20);
      }
      v31 = v21[3];
      v30 = (std::__shared_weak_count *)v21[4];
      if (v30)
      {
        p_shared_owners = (unint64_t *)&v30->__shared_owners_;
        do
          v33 = __ldxr(p_shared_owners);
        while (__stxr(v33 + 1, p_shared_owners));
        v19 = *(uint64_t **)(a2 + 56);
        v18 = *(_QWORD *)(a2 + 72);
      }
      v34 = *v19;
      *(_QWORD *)(v34 + 8) = v19[1];
      *(_QWORD *)v19[1] = v34;
      *(_QWORD *)(a2 + 72) = v18 - 1;
      operator delete(v19);
      v35 = *(int8x8_t *)(a2 + 16);
      if (v35)
      {
        v36 = (uint8x8_t)vcnt_s8(v35);
        v36.i16[0] = vaddlv_u8(v36);
        if (v36.u32[0] > 1uLL)
        {
          v37 = v20;
          if (v20 >= *(_QWORD *)&v35)
            v37 = v20 % *(_QWORD *)&v35;
        }
        else
        {
          v37 = (*(_QWORD *)&v35 - 1) & v20;
        }
        v38 = *v9;
        v39 = *(_QWORD ***)(*v9 + 8 * v37);
        if (v39)
        {
          v40 = *v39;
          if (*v39)
          {
            v41 = *(_QWORD *)&v35 - 1;
            if (v36.u32[0] < 2uLL)
            {
              while (1)
              {
                v42 = v40[1];
                if (v42 == v20)
                {
                  if (v40[2] == v20)
                    goto LABEL_72;
                }
                else if ((v42 & v41) != v37)
                {
                  goto LABEL_104;
                }
                v40 = (_QWORD *)*v40;
                if (!v40)
                  goto LABEL_104;
              }
            }
            do
            {
              v43 = v40[1];
              if (v43 == v20)
              {
                if (v40[2] == v20)
                {
LABEL_72:
                  if (v36.u32[0] > 1uLL)
                  {
                    v52 = v20;
                    if (v20 >= *(_QWORD *)&v35)
                      v52 = v20 % *(_QWORD *)&v35;
                  }
                  else
                  {
                    v52 = v41 & v20;
                  }
                  v53 = *(_QWORD **)(v38 + 8 * v52);
                  do
                  {
                    v54 = v53;
                    v53 = (_QWORD *)*v53;
                  }
                  while (v53 != v40);
                  if (v54 == (_QWORD *)(a2 + 24))
                    goto LABEL_89;
                  v55 = v54[1];
                  if (v36.u32[0] > 1uLL)
                  {
                    if (v55 >= *(_QWORD *)&v35)
                      v55 %= *(_QWORD *)&v35;
                  }
                  else
                  {
                    v55 &= v41;
                  }
                  if (v55 != v52)
                  {
LABEL_89:
                    if (!*v40)
                      goto LABEL_90;
                    v56 = *(_QWORD *)(*v40 + 8);
                    if (v36.u32[0] > 1uLL)
                    {
                      if (v56 >= *(_QWORD *)&v35)
                        v56 %= *(_QWORD *)&v35;
                    }
                    else
                    {
                      v56 &= v41;
                    }
                    if (v56 != v52)
LABEL_90:
                      *(_QWORD *)(v38 + 8 * v52) = 0;
                  }
                  v57 = *v40;
                  if (*v40)
                  {
                    v58 = *(_QWORD *)(v57 + 8);
                    if (v36.u32[0] > 1uLL)
                    {
                      if (v58 >= *(_QWORD *)&v35)
                        v58 %= *(_QWORD *)&v35;
                    }
                    else
                    {
                      v58 &= v41;
                    }
                    if (v58 != v52)
                    {
                      *(_QWORD *)(*v9 + 8 * v58) = v54;
                      v57 = *v40;
                    }
                  }
                  *v54 = v57;
                  *v40 = 0;
                  --*(_QWORD *)(a2 + 32);
                  v59 = (std::__shared_weak_count *)v40[4];
                  if (v59)
                  {
                    v60 = (unint64_t *)&v59->__shared_owners_;
                    do
                      v61 = __ldaxr(v60);
                    while (__stlxr(v61 - 1, v60));
                    if (!v61)
                    {
                      v69 = v59;
                      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
                      std::__shared_weak_count::__release_weak(v69);
                    }
                  }
                  operator delete(v40);
                  break;
                }
              }
              else
              {
                if (v43 >= *(_QWORD *)&v35)
                  v43 %= *(_QWORD *)&v35;
                if (v43 != v37)
                  break;
              }
              v40 = (_QWORD *)*v40;
            }
            while (v40);
          }
        }
      }
LABEL_104:
      v62 = operator new(0x18uLL);
      v63 = *a3;
      v64 = *(_QWORD **)(a2 + 64);
      *v62 = a2 + 56;
      v62[1] = v64;
      v62[2] = v63;
      *v64 = v62;
      v65 = *(_QWORD *)(a2 + 72) + 1;
      *(_QWORD *)(a2 + 64) = v62;
      *(_QWORD *)(a2 + 72) = v65;
      sub_239B68F10(a2 + 8, *a3, *a3, *a4, a4[1]);
      if (v30)
      {
        v66 = (unint64_t *)&v30->__shared_owners_;
        do
          v67 = __ldxr(v66);
        while (__stxr(v67 + 1, v66));
        *(_QWORD *)a1 = v20;
        *(_QWORD *)(a1 + 8) = v31;
        *(_QWORD *)(a1 + 16) = v30;
        *(_BYTE *)(a1 + 24) = 1;
        do
          v68 = __ldaxr(v66);
        while (__stlxr(v68 - 1, v66));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
        goto LABEL_113;
      }
      *(_QWORD *)a1 = v20;
      *(_QWORD *)(a1 + 8) = v31;
      *(_QWORD *)(a1 + 16) = 0;
    }
    else
    {
      v26 = *a4;
      v25 = a4[1];
      if (v25)
      {
        v27 = (unint64_t *)(v25 + 8);
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
      }
      *(_QWORD *)a1 = v10;
      *(_QWORD *)(a1 + 8) = v26;
      *(_QWORD *)(a1 + 16) = v25;
    }
    *(_BYTE *)(a1 + 24) = 1;
    goto LABEL_113;
  }
  if (v12.u32[0] < 2uLL)
  {
    while (1)
    {
      v17 = v15[1];
      if (v17 == v10)
      {
        if (v15[2] == v10)
          goto LABEL_64;
      }
      else if ((v17 & (*(_QWORD *)&v11 - 1)) != v13)
      {
        goto LABEL_21;
      }
      v15 = (_QWORD *)*v15;
      if (!v15)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v16 = v15[1];
    if (v16 == v10)
      break;
    if (v16 >= *(_QWORD *)&v11)
      v16 %= *(_QWORD *)&v11;
    if (v16 != v13)
      goto LABEL_21;
LABEL_11:
    v15 = (_QWORD *)*v15;
    if (!v15)
      goto LABEL_21;
  }
  if (v15[2] != v10)
    goto LABEL_11;
LABEL_64:
  v44 = sub_239B69228(a2 + 8, *a3, (uint64_t *)a3);
  v46 = *a4;
  v45 = a4[1];
  if (v45)
  {
    v47 = (unint64_t *)(v45 + 8);
    do
      v48 = __ldxr(v47);
    while (__stxr(v48 + 1, v47));
  }
  v49 = (std::__shared_weak_count *)v44[4];
  v44[3] = v46;
  v44[4] = v45;
  if (v49)
  {
    v50 = (unint64_t *)&v49->__shared_owners_;
    do
      v51 = __ldaxr(v50);
    while (__stlxr(v51 - 1, v50));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
LABEL_29:
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
LABEL_113:
  std::mutex::unlock(v8);
}

void sub_239B68E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  std::mutex *v3;
  va_list va;

  va_start(va, a3);
  sub_239416DA0((uint64_t)va);
  std::mutex::unlock(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_239B68EB0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (*(_BYTE *)(a1 + 24))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  return a1;
}

void sub_239B68F10(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v11;
  uint8x8_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t *v19;
  unint64_t v20;
  float v21;
  float v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t prime;
  int8x8_t v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;

  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v5 = a2;
      if (v11 <= a2)
        v5 = a2 % v11;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
    v13 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
    if (v13)
    {
      v14 = (_QWORD *)*v13;
      if (v14)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == a2)
            {
              if (v14[2] == a2)
                return;
            }
            else if ((v16 & (v11 - 1)) != v5)
            {
              goto LABEL_22;
            }
            v14 = (_QWORD *)*v14;
            if (!v14)
              goto LABEL_22;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == a2)
          {
            if (v14[2] == a2)
              return;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v5)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_22:
  v17 = (_QWORD *)(a1 + 16);
  v18 = operator new(0x28uLL);
  *v18 = 0;
  v18[1] = a2;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  if (a5)
  {
    v19 = (unint64_t *)(a5 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v22 = *(float *)(a1 + 32);
  if (!v11 || (float)(v22 * (float)v11) < v21)
  {
    v23 = 1;
    if (v11 >= 3)
      v23 = (v11 & (v11 - 1)) != 0;
    v24 = v23 | (2 * v11);
    v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25)
      prime = v25;
    else
      prime = v24;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v27 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v27)
      goto LABEL_37;
    if (prime < *(_QWORD *)&v27)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v27 < 3uLL || (v29 = (uint8x8_t)vcnt_s8(v27), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < *(_QWORD *)&v27)
LABEL_37:
        sub_239A501C8(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v11 <= a2)
        v5 = a2 % v11;
      else
        v5 = a2;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
  }
  v31 = *(_QWORD *)a1;
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v32)
  {
    *v18 = *v32;
LABEL_61:
    *v32 = v18;
    goto LABEL_62;
  }
  *v18 = *v17;
  *v17 = v18;
  *(_QWORD *)(v31 + 8 * v5) = v17;
  if (*v18)
  {
    v33 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v33 >= v11)
        v33 %= v11;
    }
    else
    {
      v33 &= v11 - 1;
    }
    v32 = (_QWORD *)(*(_QWORD *)a1 + 8 * v33);
    goto LABEL_61;
  }
LABEL_62:
  ++*(_QWORD *)(a1 + 24);
}

void sub_239B69214(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B69228(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t prime;
  unint64_t v21;
  uint8x8_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;

  v5 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (v10[2] == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (v10[2] == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v13 = (_QWORD *)(a1 + 16);
  v10 = operator new(0x28uLL);
  *v10 = 0;
  v10[1] = v5;
  v14 = *a3;
  v10[3] = 0;
  v10[4] = 0;
  v10[2] = v14;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (v7 && (float)(v16 * (float)v7) >= v15)
  {
    v5 = v3;
  }
  else
  {
    v17 = 1;
    if (v7 >= 3)
      v17 = (v7 & (v7 - 1)) != 0;
    v18 = v17 | (2 * v7);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      prime = v19;
    else
      prime = v18;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_35;
    if (prime < v7)
    {
      v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v22 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        v21 = std::__next_prime(v21);
      }
      else
      {
        v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2)
          v21 = v23;
      }
      if (prime <= v21)
        prime = v21;
      if (prime < v7)
LABEL_35:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v5)
        v5 %= v7;
    }
    else
    {
      v5 &= v7 - 1;
    }
  }
  v24 = *(_QWORD *)a1;
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v25)
  {
    *v10 = *v25;
LABEL_58:
    *v25 = v10;
    goto LABEL_59;
  }
  *v10 = *v13;
  *v13 = v10;
  *(_QWORD *)(v24 + 8 * v5) = v13;
  if (*v10)
  {
    v26 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v26 >= v7)
        v26 %= v7;
    }
    else
    {
      v26 &= v7 - 1;
    }
    v25 = (_QWORD *)(*(_QWORD *)a1 + 8 * v26);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239B6950C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239B69524()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B69538(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7680;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6956C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7680;
  a2[1] = v2;
  return result;
}

void sub_239B69588(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B61124;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B613A8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B6962C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B69670(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF7638;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_239B696FC(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF7638;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B69798(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AF7638;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    if (v5 == a1 + 40)
    {
      v2[8] = v2 + 5;
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
      return v2;
    }
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v2[8] = v5;
  return v2;
}

void sub_239B69854(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B698A0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AF7638;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_239B69970(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B699AC(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = (_QWORD *)a1[4];
  if (result == v2)
  {
    v7 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B69A30(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

void sub_239B69AB0(uint64_t a1, float *a2)
{
  float v2;
  void *__p;
  char v4;

  v2 = *a2;
  v4 = 0;
  LOBYTE(__p) = 0;
  sub_2396FD7C8(a1 + 8, (uint64_t)&__p, v2);
  if (v4 < 0)
    operator delete(__p);
}

void sub_239B69AF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B69B18()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B69B2C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF75F0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B69B64(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF75F0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

float sub_239B69B84(uint64_t a1)
{
  uint64_t v1;
  std::chrono::system_clock::time_point v2;
  float result;
  rusage v4;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v7;

  v1 = *(_QWORD *)(a1 + 8);
  v2.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)(v1 + 600) = v2;
  *(double *)(v1 + 608) = (double)(v2.__d_.__rep_ - *(_QWORD *)(v1 + 592)) / 1000000.0;
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(v1 + 624) = (float)((float)v7 * 0.00097656) * 0.00097656;
  *(_BYTE *)(v1 + 656) = 0;
  getrusage(0, &v4);
  result = (float)((float)v4.ru_maxrss * 0.00097656) * 0.00097656;
  *(float *)(v1 + 616) = result;
  return result;
}

void sub_239B69C48()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B69C5C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_250AF75A8;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_239B69C9C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF75A8;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B69CC4(uint64_t result)
{
  if (!**(_BYTE **)(result + 24))
    return sub_239AB5E40(*(_QWORD *)(result + 8) + 920, *(__int128 **)(result + 16));
  return result;
}

void sub_239B69CE4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B69CF8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7560;
  result[1] = v3;
  return result;
}

uint64_t sub_239B69D2C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7560;
  a2[1] = v2;
  return result;
}

BOOL sub_239B69D48(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _BOOL8 v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14[2];

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *a3;
  v6 = *(_QWORD *)(a1 + 8);
  v14[0] = v3;
  v14[1] = (uint64_t)v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v9 = sub_239B67D84(v6, v14, v5);
  if (v4)
  {
    v10 = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v9;
}

void sub_239B69E0C(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B69E7C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B69E90(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7518;
  result[1] = v3;
  return result;
}

uint64_t sub_239B69EC4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7518;
  a2[1] = v2;
  return result;
}

void sub_239B69EE0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B61124;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B613A8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B69F84(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B69FC8(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF74D0;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_239B6A054(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF74D0;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6A0F0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AF74D0;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    if (v5 == a1 + 40)
    {
      v2[8] = v2 + 5;
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
      return v2;
    }
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v2[8] = v5;
  return v2;
}

void sub_239B6A1AC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B6A1F8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AF74D0;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_239B6A2C8(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B6A304(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = (_QWORD *)a1[4];
  if (result == v2)
  {
    v7 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B6A388(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

void sub_239B6A408(uint64_t a1, float *a2)
{
  float v2;
  void *__p;
  char v4;

  v2 = *a2;
  v4 = 0;
  LOBYTE(__p) = 0;
  sub_2396FD7C8(a1 + 8, (uint64_t)&__p, v2);
  if (v4 < 0)
    operator delete(__p);
}

void sub_239B6A450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B6A470()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B6A484(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF7488;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B6A4BC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7488;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

float sub_239B6A4DC(uint64_t a1)
{
  uint64_t v1;
  std::chrono::system_clock::time_point v2;
  float result;
  rusage v4;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v7;

  v1 = *(_QWORD *)(a1 + 8);
  v2.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)(v1 + 200) = v2;
  *(double *)(v1 + 208) = (double)(v2.__d_.__rep_ - *(_QWORD *)(v1 + 192)) / 1000000.0;
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(v1 + 224) = (float)((float)v7 * 0.00097656) * 0.00097656;
  *(_BYTE *)(v1 + 256) = 0;
  getrusage(0, &v4);
  result = (float)((float)v4.ru_maxrss * 0.00097656) * 0.00097656;
  *(float *)(v1 + 216) = result;
  return result;
}

void sub_239B6A5A0()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B6A5B4(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_250AF7440;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_239B6A5F4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7440;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B6A61C(uint64_t result)
{
  if (!**(_BYTE **)(result + 24))
    return sub_239AD2508(*(_QWORD *)(result + 8) + 208, *(__int128 **)(result + 16));
  return result;
}

void sub_239B6A63C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6A650(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF73B0;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6A684(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF73B0;
  a2[1] = v2;
  return result;
}

BOOL sub_239B6A6A0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t (*v18)(uint64_t, uint64_t *, uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unsigned __int8 v24;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v5 = *a3;
  v6 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v18 = sub_239B678AC;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = v4;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v18 = sub_239B678AC;
    v19 = 0;
    v20 = v6;
    v21 = v3;
    v22 = 0;
  }
  v24 = 0;
  v23 = v5;
  sub_239B67B14((uint64_t)&v18, (uint64_t)&v24);
  v10 = v22;
  if (v22)
  {
    v11 = (unint64_t *)&v22->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = v24;
  if (v4)
  {
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    do
      v16 = __ldaxr(v14);
    while (__stlxr(v16 - 1, v14));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v13 != 0;
}

void sub_239B6A7E4(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;

  v3 = v2;
  if (v3)
  {
    v5 = v3;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v1)
  {
    v8 = (unint64_t *)&v1->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B6A890()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6A8A4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7368;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6A8D8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7368;
  a2[1] = v2;
  return result;
}

void sub_239B6A8F4(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4DD70;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4DFF4((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B6A998(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B6A9DC(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF7320;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_239B6AA68(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF7320;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6AB04(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AF7320;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    if (v5 == a1 + 40)
    {
      v2[8] = v2 + 5;
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
      return v2;
    }
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v2[8] = v5;
  return v2;
}

void sub_239B6ABC0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B6AC0C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AF7320;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_239B6ACDC(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B6AD18(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = (_QWORD *)a1[4];
  if (result == v2)
  {
    v7 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B6AD9C(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

void sub_239B6AE1C(uint64_t a1, float *a2)
{
  float v2;
  void *__p;
  char v4;

  v2 = *a2;
  v4 = 0;
  LOBYTE(__p) = 0;
  sub_2396FD7C8(a1 + 8, (uint64_t)&__p, v2);
  if (v4 < 0)
    operator delete(__p);
}

void sub_239B6AE64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B6AE84()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B6AE98(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF72D8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B6AED0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF72D8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B6AEF0(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

void sub_239B6AF28()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6AF3C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7290;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6AF70(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7290;
  a2[1] = v2;
  return result;
}

void sub_239B6AF8C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4D474;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4D6F8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B6B030(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B6B078()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B6B08C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF7248;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B6B0CC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7248;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

__n128 sub_239B6B0F4(uint64_t a1)
{
  uint64_t v2;
  std::chrono::system_clock::time_point v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __n128 result;
  __int128 v12;
  __int128 v13;
  rusage v14;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)(v2 + 72) = v3;
  *(double *)(v2 + 80) = (double)(v3.__d_.__rep_ - *(_QWORD *)(v2 + 64)) / 1000000.0;
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(v2 + 96) = (float)((float)v17 * 0.00097656) * 0.00097656;
  *(_BYTE *)(v2 + 128) = 0;
  getrusage(0, &v14);
  *(float *)(v2 + 88) = (float)((float)v14.ru_maxrss * 0.00097656) * 0.00097656;
  v6 = a1 + 8;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(__int128 **)(v6 + 8);
  v7 = *v5;
  v8 = v5[1];
  *(_DWORD *)(v4 + 48) = *((_DWORD *)v5 + 8);
  *(_OWORD *)(v4 + 16) = v7;
  *(_OWORD *)(v4 + 32) = v8;
  if ((__int128 *)(v4 + 16) == v5)
  {
    *(_QWORD *)(v4 + 80) = *((_QWORD *)v5 + 8);
    *(_OWORD *)(v4 + 88) = *(__int128 *)((char *)v5 + 72);
    v10 = *((_QWORD *)v5 + 11);
    *(_DWORD *)(v4 + 112) = *((_DWORD *)v5 + 24);
    *(_QWORD *)(v4 + 104) = v10;
  }
  else
  {
    sub_239421078((_QWORD *)(v4 + 56), *((_QWORD **)v5 + 5), (_QWORD *)v5 + 6);
    *(_QWORD *)(v4 + 80) = *((_QWORD *)v5 + 8);
    *(_OWORD *)(v4 + 88) = *(__int128 *)((char *)v5 + 72);
    v9 = *((_QWORD *)v5 + 11);
    *(_DWORD *)(v4 + 112) = *((_DWORD *)v5 + 24);
    *(_QWORD *)(v4 + 104) = v9;
    sub_23942156C((_QWORD *)(v4 + 120), *((char **)v5 + 13), *((char **)v5 + 14), (uint64_t)(*((_QWORD *)v5 + 14) - *((_QWORD *)v5 + 13)) >> 2);
  }
  *(_BYTE *)(v4 + 144) = *((_BYTE *)v5 + 128);
  result = *(__n128 *)((char *)v5 + 136);
  v12 = *(__int128 *)((char *)v5 + 152);
  v13 = *(__int128 *)((char *)v5 + 168);
  *(_QWORD *)(v4 + 200) = *((_QWORD *)v5 + 23);
  *(_OWORD *)(v4 + 184) = v13;
  *(_OWORD *)(v4 + 168) = v12;
  *(__n128 *)(v4 + 152) = result;
  return result;
}

uint64_t sub_239B6B270(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;

  *(_QWORD *)a1 = &off_250AF8E20;
  sub_239467C88(a1);
  std::mutex::~mutex((std::mutex *)(a1 + 80));
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(_QWORD *)(a1 + 56);
    v2 = *(uint64_t **)(a1 + 64);
    v4 = *v2;
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
    **(_QWORD **)(v3 + 8) = v4;
    *(_QWORD *)(a1 + 72) = 0;
    if (v2 != (uint64_t *)(a1 + 56))
    {
      do
      {
        v5 = (uint64_t *)v2[1];
        operator delete(v2);
        v2 = v5;
      }
      while (v5 != (uint64_t *)(a1 + 56));
    }
  }
  v6 = *(_QWORD **)(a1 + 24);
  while (v6)
  {
    v9 = v6;
    v6 = (_QWORD *)*v6;
    v10 = (std::__shared_weak_count *)v9[4];
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    operator delete(v9);
  }
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v7)
    operator delete(v7);
  return a1;
}

void sub_239B6B364(uint64_t a1)
{
  sub_239B6B270(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B6B38C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6B3A0()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF7200;
  return result;
}

void sub_239B6B3C4(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF7200;
}

void sub_239B6B3DC(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_239B6B3E8(uint64_t a1)
{
  sub_239B6B40C(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B6B40C(uint64_t a1)
{
  std::mutex *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_250AF71E0;
  v2 = (std::mutex *)(a1 + 224);
  std::mutex::lock((std::mutex *)(a1 + 224));
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  sub_239467C88(a1);
  std::mutex::unlock(v2);
  std::mutex::~mutex(v2);
  v3 = *(_QWORD **)(a1 + 200);
  if (v3 == (_QWORD *)(a1 + 176))
  {
    v4 = 4;
    v3 = (_QWORD *)(a1 + 176);
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = *(_QWORD **)(a1 + 168);
  if (v5 == (_QWORD *)(a1 + 144))
  {
    v6 = 4;
    v5 = (_QWORD *)(a1 + 144);
    goto LABEL_10;
  }
  if (v5)
  {
    v6 = 5;
LABEL_10:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }
  return sub_239B6B270(a1);
}

void sub_239B6B4C0(void *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  sub_239416A48(a1);
}

_QWORD *sub_239B6B4D8(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_239B6B640(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

void sub_239B6B650()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6B664(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7198;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6B698(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7198;
  a2[1] = v2;
  return result;
}

BOOL sub_239B6B6B4(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  size_t *v4;
  uint64_t v5;
  char *v6;
  const std::locale::facet *v7;
  uint64_t v8;
  std::string *v9;
  __int128 v10;
  _BOOL8 v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string v16;
  void *v17[2];
  std::string::size_type v18;
  std::__fs::filesystem::path v19;
  std::__fs::filesystem::path v20;
  std::__fs::filesystem::path v21;
  _QWORD v22[2];
  _QWORD v23[11];
  char v24;
  uint64_t v25;

  v4 = *(size_t **)a2;
  v3 = *(std::__shared_weak_count **)(a2 + 8);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  sub_2394988CC((uint64_t)v22);
  v5 = v23[0];
  v6 = (char *)v23 + *(_QWORD *)(v23[0] - 24);
  if (*((_DWORD *)v6 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v23 + *(_QWORD *)(v23[0] - 24)));
    v7 = std::locale::use_facet((const std::locale *)&v21, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)&v21);
    v5 = v23[0];
  }
  *((_DWORD *)v6 + 36) = 48;
  *(_QWORD *)((char *)&v23[3] + *(_QWORD *)(v5 - 24)) = 8;
  std::ostream::operator<<();
  v8 = *(_QWORD *)(a1 + 8);
  std::stringbuf::str();
  v9 = std::string::append(&v16, ".bin");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v18 = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)v17 = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v17, (char *)&v19);
  v20 = v19;
  memset(&v19, 0, sizeof(v19));
  sub_239498A04(&v20, v8, &v21);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v18) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_19:
      operator delete(v17[0]);
      if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
      goto LABEL_20;
    }
  }
  else if ((SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v19.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v18) < 0)
    goto LABEL_19;
LABEL_6:
  if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_7;
LABEL_20:
  operator delete(v16.__r_.__value_.__l.__data_);
LABEL_7:
  v11 = sub_239B6BA60(v4);
  if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__pn_.__r_.__value_.__l.__data_);
  v22[0] = *MEMORY[0x24BEDB7F0];
  v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v22 + *(_QWORD *)(v22[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v23[0] = v12;
  v23[1] = MEMORY[0x24BEDB848] + 16;
  if (v24 < 0)
    operator delete((void *)v23[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v25);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v11;
}

void sub_239B6B904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,std::locale a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  std::__shared_weak_count *v60;
  uint64_t v62;
  unint64_t *p_shared_owners;
  unint64_t v64;

  a41 = *MEMORY[0x24BEDB7F0];
  v62 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a41 + *(_QWORD *)(a41 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a43 = v62;
  a44 = MEMORY[0x24BEDB848] + 16;
  if (a57 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a60);
  if (v60)
  {
    p_shared_owners = (unint64_t *)&v60->__shared_owners_;
    do
      v64 = __ldaxr(p_shared_owners);
    while (__stlxr(v64 - 1, p_shared_owners));
    if (!v64)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B6BA54()
{
  uint64_t v0;

  if (!v0)
    JUMPOUT(0x239B6BA4CLL);
  JUMPOUT(0x239B6BA1CLL);
}

BOOL sub_239B6BA60(size_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  std::ios_base *v14;
  uint64_t v15;
  void **v16;
  void *v17;
  const void *v19[3];
  void *v20[3];
  void *__p;
  char v22;
  void *v23[2];
  unsigned __int8 v24;
  char v25;
  uint64_t v26;
  uint64_t v27[8];
  __int128 v28;
  __int128 v29;
  int v30;
  uint64_t v31[19];
  uint64_t v32;
  _BYTE v33[408];
  _QWORD v34[22];

  v34[19] = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEDB840];
  v3 = MEMORY[0x24BEDB840] + 64;
  v4 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v34[0] = MEMORY[0x24BEDB840] + 64;
  v32 = v5;
  *(_QWORD *)&v33[*(_QWORD *)(v5 - 24) - 8] = v6;
  v7 = (std::ios_base *)&v33[*(_QWORD *)(v32 - 24) - 8];
  std::ios_base::init(v7, v33);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  v32 = v2 + 24;
  v34[0] = v3;
  MEMORY[0x23B83DC80](v33);
  std::ofstream::open();
  if ((v33[*(_QWORD *)(v32 - 24) + 24] & 5) != 0)
  {
    v8 = 0;
  }
  else
  {
    HIBYTE(v19[2]) = 18;
    strcpy((char *)v19, "CorePhotogrammetry");
    sub_2395AC84C(v19, v20);
    v9 = MEMORY[0x24BEDB870];
    v10 = MEMORY[0x24BEDB870] + 64;
    v11 = (uint64_t *)MEMORY[0x24BEDB800];
    v12 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
    v13 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
    v31[0] = MEMORY[0x24BEDB870] + 64;
    v26 = v12;
    *(uint64_t *)((char *)&v27[-1] + *(_QWORD *)(v12 - 24)) = v13;
    v14 = (std::ios_base *)((char *)&v27[-1] + *(_QWORD *)(v26 - 24));
    std::ios_base::init(v14, v27);
    v14[1].__vftable = 0;
    v14[1].__fmtflags_ = -1;
    v26 = v9 + 24;
    v31[0] = v10;
    std::streambuf::basic_streambuf();
    v15 = MEMORY[0x24BEDB848];
    v27[0] = MEMORY[0x24BEDB848] + 16;
    v28 = 0u;
    v29 = 0u;
    v30 = 16;
    sub_23960B178(a1, &v26, 1);
    std::stringbuf::str();
    sub_2395ABE70((const void **)&__p, (uint64_t)v20, (uint64_t)v23);
    if (v22 < 0)
      operator delete(__p);
    v8 = v25 != 0;
    if (v25)
    {
      v16 = (v24 & 0x80u) == 0 ? v23 : (void **)v23[0];
      v17 = (v24 & 0x80u) == 0 ? (void *)v24 : v23[1];
      sub_239458500(&v32, (uint64_t)v16, (uint64_t)v17);
      if (v25)
      {
        if ((char)v24 < 0)
          operator delete(v23[0]);
      }
    }
    v26 = *v11;
    *(uint64_t *)((char *)&v27[-1] + *(_QWORD *)(v26 - 24)) = v11[3];
    v27[0] = v15 + 16;
    if (SBYTE7(v29) < 0)
      operator delete((void *)v28);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x23B83E250](v31);
    if (v20[0])
    {
      v20[1] = v20[0];
      operator delete(v20[0]);
    }
    if (SHIBYTE(v19[2]) < 0)
      operator delete((void *)v19[0]);
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)&v33[*(_QWORD *)(v32 - 24) - 8], *(_DWORD *)&v33[*(_QWORD *)(v32 - 24) + 24] | 4);
  }
  v32 = *v4;
  *(_QWORD *)&v33[*(_QWORD *)(v32 - 24) - 8] = v4[3];
  MEMORY[0x23B83DC8C](v33);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v34);
  return v8;
}

void sub_239B6BD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27,int a28,__int16 a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  if (a27 && a26 < 0)
    operator delete(__p);
  sub_239A90B68((uint64_t)&a29);
  if (a15)
    operator delete(a15);
  if (a14 < 0)
    operator delete(a9);
  sub_23955C978(&a62);
  _Unwind_Resume(a1);
}

void sub_239B6BE4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

void sub_239B6BE78()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6BE8C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7150;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6BEC0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7150;
  a2[1] = v2;
  return result;
}

uint64_t sub_239B6BEDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  const std::locale::facet *v6;
  uint64_t v7;
  std::string *v8;
  __int128 v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  void *v13;
  _QWORD *v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  void *__p[2];
  void *v25[2];
  int v26;
  std::string v27;
  void *v28[2];
  std::string::size_type v29;
  void *v30[2];
  void *v31;
  std::__fs::filesystem::path v32;
  _QWORD v33[2];
  _QWORD v34[11];
  char v35;
  uint64_t v36;

  sub_2394988CC((uint64_t)v33);
  v4 = v34[0];
  v5 = (char *)v34 + *(_QWORD *)(v34[0] - 24);
  if (*((_DWORD *)v5 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v34 + *(_QWORD *)(v34[0] - 24)));
    v6 = std::locale::use_facet((const std::locale *)__p, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale((std::locale *)__p);
    v4 = v34[0];
  }
  *((_DWORD *)v5 + 36) = 48;
  *(_QWORD *)((char *)&v34[3] + *(_QWORD *)(v4 - 24)) = 8;
  std::ostream::operator<<();
  v7 = *(_QWORD *)(a1 + 8);
  std::stringbuf::str();
  v8 = std::string::append(&v27, ".bin");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v29 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)v28 = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v28, (char *)v30);
  *(_OWORD *)__p = *(_OWORD *)v30;
  v25[0] = v31;
  v30[1] = 0;
  v31 = 0;
  v30[0] = 0;
  sub_239498A04((std::__fs::filesystem::path *)__p, v7, &v32);
  if (SHIBYTE(v25[0]) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v31) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v29) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_23:
      operator delete(v28[0]);
      if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
LABEL_24:
      operator delete(v27.__r_.__value_.__l.__data_);
      goto LABEL_7;
    }
  }
  else if ((SHIBYTE(v31) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v30[0]);
  if (SHIBYTE(v29) < 0)
    goto LABEL_23;
LABEL_6:
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_24;
LABEL_7:
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v25 = 0u;
  v26 = 1065353216;
  std::__fs::filesystem::__status(&v32, 0);
  if (!LOBYTE(v30[0]) || LOBYTE(v30[0]) == 255 || !sub_239B044E4(__p))
  {
    *a2 = 0;
    a2[1] = 0;
    v14 = v25[0];
    if (!v25[0])
      goto LABEL_14;
    goto LABEL_31;
  }
  v10 = operator new(0x40uLL);
  v10[1] = 0;
  v10[2] = 0;
  v11 = __p[0];
  v12 = (unint64_t)__p[1];
  v10[3] = __p[0];
  *v10 = &off_250ADBF90;
  __p[0] = 0;
  __p[1] = 0;
  v10[4] = v12;
  v14 = v25[0];
  v13 = v25[1];
  v10[5] = v25[0];
  v10[6] = v13;
  *((_DWORD *)v10 + 14) = v26;
  if (v13)
  {
    v15 = v14[1];
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v15 >= v12)
        v15 %= v12;
    }
    else
    {
      v15 &= v12 - 1;
    }
    v14 = 0;
    v11[v15] = v10 + 5;
    v25[0] = 0;
    v25[1] = 0;
  }
  *a2 = v10 + 3;
  a2[1] = v10;
  if (v14)
  {
    do
    {
LABEL_31:
      v19 = (_QWORD *)*v14;
      v20 = (_QWORD *)v14[5];
      if (v20)
      {
        do
        {
          v22 = (_QWORD *)*v20;
          v23 = (void *)v20[3];
          if (v23)
          {
            v20[4] = v23;
            operator delete(v23);
          }
          operator delete(v20);
          v20 = v22;
        }
        while (v22);
      }
      v21 = (void *)v14[3];
      v14[3] = 0;
      if (v21)
        operator delete(v21);
      operator delete(v14);
      v14 = v19;
    }
    while (v19);
  }
LABEL_14:
  v16 = __p[0];
  __p[0] = 0;
  if (v16)
    operator delete(v16);
  if (SHIBYTE(v32.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v32.__pn_.__r_.__value_.__l.__data_);
  v33[0] = *MEMORY[0x24BEDB7F0];
  v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v33 + *(_QWORD *)(v33[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v34[0] = v17;
  v34[1] = MEMORY[0x24BEDB848] + 16;
  if (v35 < 0)
    operator delete((void *)v34[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v36);
}

void sub_239B6C21C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v61;

  a41 = *MEMORY[0x24BEDB7F0];
  v61 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a41 + *(_QWORD *)(a41 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a43 = v61;
  a44 = MEMORY[0x24BEDB848] + 16;
  if (a57 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a60);
  _Unwind_Resume(a1);
}

void sub_239B6C3A8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF7118;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B6C3B8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF7118;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B6C3E8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_239B6C3FC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6C410(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF70D0;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6C444(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF70D0;
  a2[1] = v2;
  return result;
}

BOOL sub_239B6C460(uint64_t a1, uint64_t *a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  const std::locale::facet *v7;
  uint64_t v8;
  std::string *v9;
  __int128 v10;
  _BOOL8 v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string v16;
  void *v17[2];
  std::string::size_type v18;
  std::__fs::filesystem::path v19;
  std::__fs::filesystem::path v20;
  std::__fs::filesystem::path v21;
  _QWORD v22[2];
  _QWORD v23[11];
  char v24;
  uint64_t v25;

  v4 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  sub_2394988CC((uint64_t)v22);
  v5 = v23[0];
  v6 = (char *)v23 + *(_QWORD *)(v23[0] - 24);
  if (*((_DWORD *)v6 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v23 + *(_QWORD *)(v23[0] - 24)));
    v7 = std::locale::use_facet((const std::locale *)&v21, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)&v21);
    v5 = v23[0];
  }
  *((_DWORD *)v6 + 36) = 48;
  *(_QWORD *)((char *)&v23[3] + *(_QWORD *)(v5 - 24)) = 8;
  std::ostream::operator<<();
  v8 = *(_QWORD *)(a1 + 8);
  std::stringbuf::str();
  v9 = std::string::append(&v16, ".bin");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v18 = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)v17 = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v17, (char *)&v19);
  v20 = v19;
  memset(&v19, 0, sizeof(v19));
  sub_239498A04(&v20, v8, &v21);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v18) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_19:
      operator delete(v17[0]);
      if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
      goto LABEL_20;
    }
  }
  else if ((SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v19.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v18) < 0)
    goto LABEL_19;
LABEL_6:
  if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_7;
LABEL_20:
  operator delete(v16.__r_.__value_.__l.__data_);
LABEL_7:
  v11 = sub_239B6C80C(v4);
  if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__pn_.__r_.__value_.__l.__data_);
  v22[0] = *MEMORY[0x24BEDB7F0];
  v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v22 + *(_QWORD *)(v22[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v23[0] = v12;
  v23[1] = MEMORY[0x24BEDB848] + 16;
  if (v24 < 0)
    operator delete((void *)v23[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v25);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v11;
}

void sub_239B6C6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,std::locale a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  std::__shared_weak_count *v60;
  uint64_t v62;
  unint64_t *p_shared_owners;
  unint64_t v64;

  a41 = *MEMORY[0x24BEDB7F0];
  v62 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a41 + *(_QWORD *)(a41 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a43 = v62;
  a44 = MEMORY[0x24BEDB848] + 16;
  if (a57 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a60);
  if (v60)
  {
    p_shared_owners = (unint64_t *)&v60->__shared_owners_;
    do
      v64 = __ldaxr(p_shared_owners);
    while (__stlxr(v64 - 1, p_shared_owners));
    if (!v64)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B6C800()
{
  uint64_t v0;

  if (!v0)
    JUMPOUT(0x239B6C7F8);
  JUMPOUT(0x239B6C7C8);
}

BOOL sub_239B6C80C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  std::ios_base *v14;
  uint64_t v15;
  void **v16;
  void *v17;
  const void *v19[3];
  void *v20[3];
  void *__p;
  char v22;
  void *v23[2];
  unsigned __int8 v24;
  char v25;
  uint64_t v26;
  uint64_t v27[8];
  __int128 v28;
  __int128 v29;
  int v30;
  uint64_t v31[19];
  uint64_t v32;
  _BYTE v33[408];
  _QWORD v34[22];

  v34[19] = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEDB840];
  v3 = MEMORY[0x24BEDB840] + 64;
  v4 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v34[0] = MEMORY[0x24BEDB840] + 64;
  v32 = v5;
  *(_QWORD *)&v33[*(_QWORD *)(v5 - 24) - 8] = v6;
  v7 = (std::ios_base *)&v33[*(_QWORD *)(v32 - 24) - 8];
  std::ios_base::init(v7, v33);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  v32 = v2 + 24;
  v34[0] = v3;
  MEMORY[0x23B83DC80](v33);
  std::ofstream::open();
  if ((v33[*(_QWORD *)(v32 - 24) + 24] & 5) != 0)
  {
    v8 = 0;
  }
  else
  {
    HIBYTE(v19[2]) = 18;
    strcpy((char *)v19, "CorePhotogrammetry");
    sub_2395AC84C(v19, v20);
    v9 = MEMORY[0x24BEDB870];
    v10 = MEMORY[0x24BEDB870] + 64;
    v11 = (uint64_t *)MEMORY[0x24BEDB800];
    v12 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
    v13 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
    v31[0] = MEMORY[0x24BEDB870] + 64;
    v26 = v12;
    *(uint64_t *)((char *)&v27[-1] + *(_QWORD *)(v12 - 24)) = v13;
    v14 = (std::ios_base *)((char *)&v27[-1] + *(_QWORD *)(v26 - 24));
    std::ios_base::init(v14, v27);
    v14[1].__vftable = 0;
    v14[1].__fmtflags_ = -1;
    v26 = v9 + 24;
    v31[0] = v10;
    std::streambuf::basic_streambuf();
    v15 = MEMORY[0x24BEDB848];
    v27[0] = MEMORY[0x24BEDB848] + 16;
    v28 = 0u;
    v29 = 0u;
    v30 = 16;
    sub_2395AD4EC(a1, &v26);
    std::stringbuf::str();
    sub_2395ABE70((const void **)&__p, (uint64_t)v20, (uint64_t)v23);
    if (v22 < 0)
      operator delete(__p);
    v8 = v25 != 0;
    if (v25)
    {
      v16 = (v24 & 0x80u) == 0 ? v23 : (void **)v23[0];
      v17 = (v24 & 0x80u) == 0 ? (void *)v24 : v23[1];
      sub_239458500(&v32, (uint64_t)v16, (uint64_t)v17);
      if (v25)
      {
        if ((char)v24 < 0)
          operator delete(v23[0]);
      }
    }
    v26 = *v11;
    *(uint64_t *)((char *)&v27[-1] + *(_QWORD *)(v26 - 24)) = v11[3];
    v27[0] = v15 + 16;
    if (SBYTE7(v29) < 0)
      operator delete((void *)v28);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x23B83E250](v31);
    if (v20[0])
    {
      v20[1] = v20[0];
      operator delete(v20[0]);
    }
    if (SHIBYTE(v19[2]) < 0)
      operator delete((void *)v19[0]);
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)&v33[*(_QWORD *)(v32 - 24) - 8], *(_DWORD *)&v33[*(_QWORD *)(v32 - 24) + 24] | 4);
  }
  v32 = *v4;
  *(_QWORD *)&v33[*(_QWORD *)(v32 - 24) - 8] = v4[3];
  MEMORY[0x23B83DC8C](v33);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v34);
  return v8;
}

void sub_239B6CB44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27,int a28,__int16 a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  if (a27 && a26 < 0)
    operator delete(__p);
  sub_239A90B68((uint64_t)&a29);
  if (a15)
    operator delete(a15);
  if (a14 < 0)
    operator delete(a9);
  sub_23955C978(&a62);
  _Unwind_Resume(a1);
}

void sub_239B6CBF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

void sub_239B6CC20()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6CC34(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7088;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6CC68(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7088;
  a2[1] = v2;
  return result;
}

uint64_t sub_239B6CC84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  const std::locale::facet *v6;
  uint64_t v7;
  std::string *v8;
  __int128 v9;
  char *v10;
  __int128 v11;
  void *v12;
  char *v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v19[2];
  void *v20[2];
  __int128 v21;
  void *v22[2];
  void *__p[4];
  std::string v24;
  void *v25[2];
  std::string::size_type v26;
  void *v27[2];
  void *v28;
  std::__fs::filesystem::path v29;
  _QWORD v30[2];
  _QWORD v31[11];
  char v32;
  uint64_t v33;

  sub_2394988CC((uint64_t)v30);
  v4 = v31[0];
  v5 = (char *)v31 + *(_QWORD *)(v31[0] - 24);
  if (*((_DWORD *)v5 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v31 + *(_QWORD *)(v31[0] - 24)));
    v6 = std::locale::use_facet((const std::locale *)v19, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale((std::locale *)v19);
    v4 = v31[0];
  }
  *((_DWORD *)v5 + 36) = 48;
  *(_QWORD *)((char *)&v31[3] + *(_QWORD *)(v4 - 24)) = 8;
  std::ostream::operator<<();
  v7 = *(_QWORD *)(a1 + 8);
  std::stringbuf::str();
  v8 = std::string::append(&v24, ".bin");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v26 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)v25 = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v25, (char *)v27);
  *(_OWORD *)v19 = *(_OWORD *)v27;
  v20[0] = v28;
  v27[1] = 0;
  v28 = 0;
  v27[0] = 0;
  sub_239498A04((std::__fs::filesystem::path *)v19, v7, &v29);
  if (SHIBYTE(v20[0]) < 0)
  {
    operator delete(v19[0]);
    if ((SHIBYTE(v28) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v26) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_27:
      operator delete(v25[0]);
      if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
LABEL_28:
      operator delete(v24.__r_.__value_.__l.__data_);
      goto LABEL_7;
    }
  }
  else if ((SHIBYTE(v28) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v27[0]);
  if (SHIBYTE(v26) < 0)
    goto LABEL_27;
LABEL_6:
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_28;
LABEL_7:
  *(_OWORD *)v19 = xmmword_239EC65B0;
  *(_OWORD *)v20 = 0u;
  v21 = 0u;
  *(_OWORD *)v22 = 0u;
  memset(__p, 0, sizeof(__p));
  std::__fs::filesystem::__status(&v29, 0);
  if (LOBYTE(v27[0]) && LOBYTE(v27[0]) != 255 && sub_239B02D38((uint64_t)v19))
  {
    v10 = (char *)operator new(0x78uLL);
    *(_OWORD *)(v10 + 24) = *(_OWORD *)v19;
    v11 = *(_OWORD *)v22;
    *(_OWORD *)(v10 + 56) = v21;
    *((_QWORD *)v10 + 1) = 0;
    *((_QWORD *)v10 + 2) = 0;
    *(_QWORD *)v10 = &off_250ADB7B8;
    v12 = v20[1];
    *((void **)v10 + 5) = v20[0];
    *((_QWORD *)v10 + 6) = v12;
    v20[1] = 0;
    *(_QWORD *)&v21 = 0;
    *(_OWORD *)(v10 + 72) = v11;
    *((void **)v10 + 11) = __p[0];
    v22[1] = 0;
    __p[0] = 0;
    *((_QWORD *)&v21 + 1) = 0;
    v22[0] = 0;
    *((_OWORD *)v10 + 6) = *(_OWORD *)&__p[1];
    *((void **)v10 + 14) = __p[3];
    memset(&__p[1], 0, 24);
    *a2 = v10 + 24;
    a2[1] = v10;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    v13 = (char *)__p[1];
    if (__p[1])
    {
      v14 = (char *)__p[2];
      v15 = __p[1];
      if (__p[2] != __p[1])
      {
        do
        {
          v16 = (void *)*((_QWORD *)v14 - 3);
          v14 -= 24;
          free(v16);
        }
        while (v14 != v13);
        v15 = __p[1];
      }
      __p[2] = v13;
      operator delete(v15);
    }
  }
  if (v22[0])
  {
    v22[1] = v22[0];
    operator delete(v22[0]);
  }
  if (v20[1])
    operator delete(v20[1]);
  if (SHIBYTE(v29.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v29.__pn_.__r_.__value_.__l.__data_);
  v30[0] = *MEMORY[0x24BEDB7F0];
  v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v30 + *(_QWORD *)(v30[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v31[0] = v17;
  v31[1] = MEMORY[0x24BEDB848] + 16;
  if (v32 < 0)
    operator delete((void *)v31[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v33);
}

void sub_239B6CF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v54;

  a34 = *MEMORY[0x24BEDB7F0];
  v54 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a34 + *(_QWORD *)(a34 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a36 = v54;
  a37 = MEMORY[0x24BEDB848] + 16;
  if (a50 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a53);
  _Unwind_Resume(a1);
}

uint64_t sub_239B6D110(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  uint64_t v13;
  char **v16;
  _QWORD *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  std::__shared_weak_count *v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  uint64_t (*v24)(_QWORD *, void **, void **);
  _QWORD *v25;
  _QWORD *v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char **v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  unint64_t *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  int32x2_t v65;
  int v66;
  int v67;
  char v68;
  unint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  char *v88;
  char *v89;
  void *v90;
  char *v91;
  void *v92;
  void *v93;
  char *v94;
  char *v95;
  void *v96;
  char *v97;
  void *v98;
  void *v99;
  unint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *p_shared_owners;
  unint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  __int128 v114;
  unint64_t *v115;
  unint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  char *v123;
  char *v124;
  void *v125;
  char *v126;
  void *v127;
  void *v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  char *v132;
  char *v133;
  void *v134;
  char *v135;
  void *v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  void *v142;
  void *v143;
  std::__shared_weak_count *v144;
  unint64_t *v145;
  unint64_t v146;
  char *v147;
  void *v148;
  _QWORD *v149;
  uint64_t v150;
  char *v151;
  void *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v160;
  uint64_t v161;
  void *__p[2];
  uint64_t v163;
  void *v164;
  void *v165;
  char v166;
  void *v167;
  void *v168;
  char v169;
  void *v170;
  char *v171;
  char v172;
  void *v173;
  void *v174;
  char v175;
  void *v176;
  char *v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  char v181;
  void *v182[3];
  char v183;
  void *v184;
  char *v185;
  char v186;
  void *v187[3];
  char v188;
  void *v189[2];
  uint64_t v190;
  __int128 v191;
  void *__dst[2];
  uint64_t v193;
  void *v194;
  std::__shared_weak_count *v195;
  uint64_t v196;
  void *v197[2];
  void *v198[2];
  int v199;
  char v200;
  __int128 v201;
  _QWORD v202[3];
  _QWORD *v203;
  _QWORD v204[3];
  _QWORD *v205;
  _QWORD v206[3];
  _QWORD *v207;
  _BYTE v208[24];
  _BYTE *v209;
  _QWORD v210[3];
  _QWORD *v211;
  void *v212;
  void *v213;
  uint64_t v214;
  void *v215;
  void *v216;
  char v217;
  void *v218;
  void *v219;
  char v220;
  void *v221;
  char *v222;
  char v223;
  void *v224;
  void *v225;
  char v226;
  _QWORD v227[3];
  _QWORD *v228;
  _QWORD v229[3];
  _QWORD *v230;
  void *v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  void *v235;
  void *v236;
  uint64_t v237;
  pthread_cond_t v238;
  pthread_cond_t v239;
  pthread_mutex_t v240;
  uint64_t v241;

  v241 = *MEMORY[0x24BDAC8D0];
  v3 = a1[60];
  v4 = a1[58];
  if (v3)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
    return 3;
  v6 = a1;
  v7 = a1[62];
  if (!v7)
    return 3;
  v8 = a1[66];
  v9 = a1[68];
  v10 = !*(_QWORD *)(v7 + 24) || a1[64] == 0;
  v11 = v10 || v8 == 0;
  if (v11 || v9 == 0)
    return 3;
  v16 = (char **)a1[70];
  v17 = (_QWORD *)a1[75];
  if (v17)
  {
    if (v17 == v6 + 72)
    {
      v230 = v229;
      (*(void (**)(_QWORD *, _QWORD *))(*v17 + 24))(v17, v229);
    }
    else
    {
      v230 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v17 + 16))(v17);
    }
  }
  else
  {
    v230 = 0;
  }
  v18 = v6[79];
  if (!v18)
    goto LABEL_27;
  if ((_QWORD *)v18 != v6 + 76)
  {
    v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 16))(v18);
LABEL_27:
    v228 = (_QWORD *)v18;
    goto LABEL_29;
  }
  v228 = v227;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v18 + 24))(v18, v227);
LABEL_29:
  v156 = v8;
  v155 = v9;
  v157 = v4;
  v158 = a2;
  *(_OWORD *)v197 = 0u;
  *(_OWORD *)v198 = 0u;
  v199 = 1065353216;
  v195 = 0;
  v194 = 0;
  v196 = 0;
  sub_239433C1C(v3, (uint64_t)&v194, 1);
  v19 = (std::__shared_weak_count *)v194;
  v20 = v195;
  v161 = (uint64_t)v6;
  if (v194 == v195)
    goto LABEL_92;
  do
  {
    v21 = sub_239470FCC(v3, v19->__vftable);
    if (*((_BYTE *)v21 + 241))
      goto LABEL_33;
    if (*((char *)v21 + 271) < 0)
    {
      sub_23941A7F8(__dst, (void *)v21[31], v21[32]);
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)(v21 + 31);
      v193 = v21[33];
    }
    v22 = v6[64];
    if (SHIBYTE(v193) < 0)
    {
      sub_23941A7F8(v189, __dst[0], (unint64_t)__dst[1]);
    }
    else
    {
      *(_OWORD *)v189 = *(_OWORD *)__dst;
      v190 = v193;
    }
    v201 = 0uLL;
    v200 = 0;
    v176 = sub_239B6EE74;
    v177 = 0;
    v178 = v22;
    if (SHIBYTE(v190) < 0)
    {
      sub_23941A7F8(&v179, v189[0], (unint64_t)v189[1]);
    }
    else
    {
      v179 = *(_OWORD *)v189;
      v180 = v190;
    }
    LODWORD(v231) = 0x7FFFFFFF;
    v232 = 0u;
    v233 = 0u;
    v234 = 0u;
    LOBYTE(v235) = 0;
    v236 = 0;
    v237 = 0;
    sub_2397A1618(&v240);
    v23 = (int)v231;
    if (v231 > 0x7FFFFFFE)
    {
      v23 = 0x7FFFFFFF;
    }
    else if (v231 < 2)
    {
      v23 = 1;
    }
    LODWORD(v231) = v23;
    pthread_cond_init(&v238, 0);
    pthread_cond_init(&v239, 0);
    v24 = (uint64_t (*)(_QWORD *, void **, void **))v176;
    v25 = (_QWORD *)(v178 + ((uint64_t)v177 >> 1));
    if ((v177 & 1) != 0)
      v24 = *(uint64_t (**)(_QWORD *, void **, void **))(*v25 + v176);
    if (SHIBYTE(v180) < 0)
    {
      sub_23941A7F8(__p, (void *)v179, *((unint64_t *)&v179 + 1));
    }
    else
    {
      *(_OWORD *)__p = v179;
      v163 = v180;
    }
    v215 = 0;
    v26 = operator new(0x20uLL);
    *v26 = &off_250AF7758;
    v26[1] = &v231;
    v26[2] = &v201;
    v26[3] = &v200;
    v215 = v26;
    v27 = v24(v25, __p, &v212);
    v28 = v215;
    if (v215 == &v212)
    {
      v28 = &v212;
      v29 = 4;
    }
    else
    {
      if (!v215)
        goto LABEL_58;
      v29 = 5;
    }
    (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_58:
    if (SHIBYTE(v163) < 0)
    {
      operator delete(__p[0]);
      if (!v27)
        goto LABEL_63;
LABEL_62:
      sub_2395BFB54((unsigned int *)&v231);
      sub_2395C2A4C((uint64_t)&v231);
      goto LABEL_63;
    }
    if (v27)
      goto LABEL_62;
LABEL_63:
    sub_2395C29C4((uint64_t)&v231);
    if (SHIBYTE(v180) < 0)
    {
      operator delete((void *)v179);
      if (v200)
      {
LABEL_65:
        v191 = v201;
        goto LABEL_66;
      }
    }
    else if (v200)
    {
      goto LABEL_65;
    }
    v191 = 0uLL;
    v31 = (std::__shared_weak_count *)*((_QWORD *)&v201 + 1);
    if (*((_QWORD *)&v201 + 1))
    {
      v32 = (unint64_t *)(*((_QWORD *)&v201 + 1) + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
LABEL_66:
    if (SHIBYTE(v190) < 0)
    {
      operator delete(v189[0]);
      v30 = (_QWORD *)v191;
      if (!(_QWORD)v191)
        goto LABEL_86;
LABEL_76:
      v34 = v30[1];
      if (*v30 == v34)
        goto LABEL_86;
      v35 = *v30 + 24;
      while (1)
      {
        if (*(char *)(v35 - 1) < 0)
        {
          if (!*(_QWORD *)(v35 - 16))
          {
LABEL_84:
            v231 = __dst;
            v37 = sub_239B6E81C((uint64_t)v197, (uint64_t)__dst, (__int128 **)&v231);
            v38 = (char **)(v37 + 5);
            if ((uint64_t *)v35 == v37 + 5)
              goto LABEL_78;
LABEL_82:
            sub_239A571B4(v38, *(__int128 **)v35, *(__int128 **)(v35 + 8), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(v35 + 8) - *(_QWORD *)v35) >> 3));
            goto LABEL_78;
          }
        }
        else if (!*(_BYTE *)(v35 - 1))
        {
          goto LABEL_84;
        }
        v231 = (void *)(v35 - 24);
        v37 = sub_239B6E81C((uint64_t)v197, v35 - 24, (__int128 **)&v231);
        v38 = (char **)(v37 + 5);
        if ((uint64_t *)v35 != v37 + 5)
          goto LABEL_82;
LABEL_78:
        *((_BYTE *)v37 + 64) = *(_BYTE *)(v35 + 24);
        v36 = v35 + 32;
        v35 += 56;
        if (v36 == v34)
          goto LABEL_86;
      }
    }
    v30 = (_QWORD *)v191;
    if ((_QWORD)v191)
      goto LABEL_76;
LABEL_86:
    v39 = (std::__shared_weak_count *)*((_QWORD *)&v191 + 1);
    v6 = (_QWORD *)v161;
    if (*((_QWORD *)&v191 + 1))
    {
      v40 = (unint64_t *)(*((_QWORD *)&v191 + 1) + 8);
      do
        v41 = __ldaxr(v40);
      while (__stlxr(v41 - 1, v40));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
      }
    }
    if (SHIBYTE(v193) < 0)
      operator delete(__dst[0]);
LABEL_33:
    v19 = (std::__shared_weak_count *)((char *)v19 + 8);
  }
  while (v19 != v20);
  v19 = (std::__shared_weak_count *)v194;
LABEL_92:
  v42 = v198[1];
  v43 = v158;
  if (v19)
  {
    v195 = v19;
    operator delete(v19);
  }
  if (!v42)
  {
    v13 = 3;
    goto LABEL_314;
  }
  v44 = (char *)operator new(0x3C0uLL);
  *((_QWORD *)v44 + 1) = 0;
  v45 = (unint64_t *)(v44 + 8);
  *((_QWORD *)v44 + 2) = 0;
  *(_QWORD *)v44 = &off_250B01B38;
  bzero(v44 + 24, 0x3A8uLL);
  *((_DWORD *)v44 + 22) = 1065353216;
  *((_OWORD *)v44 + 6) = 0u;
  *((_OWORD *)v44 + 7) = 0u;
  *((_DWORD *)v44 + 32) = 1065353216;
  *(_OWORD *)(v44 + 152) = 0u;
  *(_OWORD *)(v44 + 168) = 0u;
  *(_OWORD *)(v44 + 184) = 0u;
  *((_QWORD *)v44 + 25) = 0;
  *((_DWORD *)v44 + 52) = 1065353216;
  *(_OWORD *)(v44 + 216) = 0u;
  *(_OWORD *)(v44 + 232) = 0u;
  *((_DWORD *)v44 + 62) = 1065353216;
  *((_OWORD *)v44 + 16) = 0u;
  *((_OWORD *)v44 + 17) = 0u;
  *((_OWORD *)v44 + 18) = 0u;
  *((_OWORD *)v44 + 19) = 0u;
  *((_QWORD *)v44 + 40) = 0;
  *((_QWORD *)v44 + 41) = 0x3FF0000000000000;
  *((_QWORD *)v44 + 46) = 0;
  *((_OWORD *)v44 + 21) = 0u;
  *((_OWORD *)v44 + 22) = 0u;
  *((_DWORD *)v44 + 118) = -1;
  *((_OWORD *)v44 + 30) = 0u;
  *((_OWORD *)v44 + 31) = 0u;
  *((_DWORD *)v44 + 128) = 1065353216;
  *(_OWORD *)(v44 + 520) = 0u;
  *(_OWORD *)(v44 + 536) = 0u;
  *((_DWORD *)v44 + 138) = 1065353216;
  *((_OWORD *)v44 + 35) = 0u;
  *((_OWORD *)v44 + 36) = 0u;
  *((_OWORD *)v44 + 37) = 0u;
  *((_OWORD *)v44 + 38) = 0u;
  *((_OWORD *)v44 + 39) = 0u;
  *((_OWORD *)v44 + 40) = 0u;
  *((_OWORD *)v44 + 41) = 0u;
  *((_OWORD *)v44 + 42) = 0u;
  *((_OWORD *)v44 + 43) = 0u;
  *((_OWORD *)v44 + 44) = 0u;
  *((_OWORD *)v44 + 45) = 0u;
  *((_OWORD *)v44 + 46) = 0u;
  *((_OWORD *)v44 + 47) = 0u;
  *((_OWORD *)v44 + 48) = 0u;
  *((_OWORD *)v44 + 49) = 0u;
  *((_OWORD *)v44 + 50) = 0u;
  *((_OWORD *)v44 + 51) = 0u;
  *((_OWORD *)v44 + 52) = 0u;
  *((_DWORD *)v44 + 212) = 1065353216;
  *((_QWORD *)v44 + 107) = 0;
  *((_QWORD *)v44 + 109) = 0;
  *((_QWORD *)v44 + 108) = 0;
  v44[880] = 0;
  v160 = (uint64_t)(v44 + 24);
  v194 = v44 + 24;
  v195 = (std::__shared_weak_count *)v44;
  BYTE8(v234) = 0;
  LOBYTE(v235) = 0;
  LOBYTE(v238.__sig) = 0;
  v238.__opaque[0] = 0;
  v238.__opaque[24] = 0;
  v238.__opaque[32] = 0;
  v239.__opaque[8] = 0;
  v231 = 0;
  v232 = 0uLL;
  LOBYTE(v233) = 0;
  v181 = 0;
  LOBYTE(v182[0]) = 0;
  v183 = 0;
  LOBYTE(v184) = 0;
  v186 = 0;
  LOBYTE(v187[0]) = 0;
  v188 = 0;
  v177 = 0;
  v178 = 0;
  v176 = 0;
  LOBYTE(v179) = 0;
  v46 = operator new(0xB0uLL);
  v46[1] = 0;
  v46[2] = 0;
  *v46 = &off_250B020F8;
  v46[3] = 0;
  *((_BYTE *)v46 + 72) = 0;
  *((_BYTE *)v46 + 80) = 0;
  *((_BYTE *)v46 + 104) = 0;
  *((_BYTE *)v46 + 112) = 0;
  *((_BYTE *)v46 + 136) = 0;
  *((_BYTE *)v46 + 144) = 0;
  *((_BYTE *)v46 + 168) = 0;
  v46[4] = 0;
  v46[5] = 0;
  *((_BYTE *)v46 + 48) = 0;
  __dst[0] = v46 + 3;
  __dst[1] = v46;
  v217 = 0;
  LOBYTE(v218) = 0;
  v220 = 0;
  LOBYTE(v221) = 0;
  v223 = 0;
  LOBYTE(v224) = 0;
  v226 = 0;
  v214 = 0;
  v212 = 0;
  v213 = 0;
  LOBYTE(v215) = 0;
  v210[0] = &off_250AF77D8;
  v210[1] = v156;
  v211 = v210;
  v47 = a3;
  v48 = a3[3];
  if (!v48)
    goto LABEL_98;
  if ((_QWORD *)v48 != a3)
  {
    v48 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 16))(v48);
    v47 = a3;
LABEL_98:
    v207 = (_QWORD *)v48;
    goto LABEL_101;
  }
  v207 = v206;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v206);
  v47 = a3;
LABEL_101:
  v49 = v208;
  v50 = v47[7];
  if (!v50)
  {
LABEL_104:
    v209 = (_BYTE *)v50;
    goto LABEL_106;
  }
  if ((_QWORD *)v50 != v47 + 4)
  {
    v50 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 16))(v50);
    goto LABEL_104;
  }
  v209 = v208;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v50 + 24))(v50, v208);
LABEL_106:
  v51 = (uint64_t)v230;
  if (!v230)
  {
LABEL_109:
    v205 = (_QWORD *)v51;
    goto LABEL_111;
  }
  if (v230 != v229)
  {
    v51 = (*(uint64_t (**)(void))(*v230 + 16))();
    goto LABEL_109;
  }
  v205 = v204;
  (*(void (**)(_QWORD *, _QWORD *))(v229[0] + 24))(v229, v204);
LABEL_111:
  v52 = (uint64_t)v228;
  if (!v228)
  {
LABEL_114:
    v203 = (_QWORD *)v52;
    goto LABEL_116;
  }
  if (v228 != v227)
  {
    v52 = (*(uint64_t (**)(void))(*v228 + 16))();
    goto LABEL_114;
  }
  v203 = v202;
  (*(void (**)(_QWORD *, _QWORD *))(v227[0] + 24))(v227, v202);
LABEL_116:
  v53 = sub_239EAC0F4(v157, v3, v161, v210, v7, v197, v155, v160, (uint64_t)&v231, (uint64_t)&v176, (uint64_t)&v212, v206, (uint64_t *)(v158 + 64), 1, v204, v202);
  v54 = v203;
  if (v203 == v202)
  {
    v55 = 4;
    v54 = v202;
  }
  else
  {
    if (!v203)
      goto LABEL_121;
    v55 = 5;
  }
  (*(void (**)(void))(*v54 + 8 * v55))();
LABEL_121:
  v56 = v205;
  if (v205 == v204)
  {
    v57 = 4;
    v56 = v204;
  }
  else
  {
    if (!v205)
      goto LABEL_126;
    v57 = 5;
  }
  (*(void (**)(void))(*v56 + 8 * v57))();
LABEL_126:
  if (v209 == v208)
  {
    v58 = 4;
  }
  else
  {
    if (!v209)
      goto LABEL_131;
    v58 = 5;
    v49 = v209;
  }
  (*(void (**)(_QWORD *))(*v49 + 8 * v58))(v49);
LABEL_131:
  v59 = v207;
  if (v207 == v206)
  {
    v60 = 4;
    v59 = v206;
  }
  else
  {
    if (!v207)
      goto LABEL_136;
    v60 = 5;
  }
  (*(void (**)(void))(*v59 + 8 * v60))();
LABEL_136:
  v61 = v211;
  if (v211 == v210)
  {
    v62 = 4;
    v61 = v210;
    goto LABEL_140;
  }
  if (v211)
  {
    v62 = 5;
LABEL_140:
    (*(void (**)(void))(*v61 + 8 * v62))();
  }
  if ((v53 & 1) != 0)
  {
    sub_2394ECC58(v46 + 3, (char *)v176, v177, 0xAAAAAAAAAAAAAAABLL * ((v177 - (_BYTE *)v176) >> 2));
    sub_2394ED1E4((uint64_t)(v46 + 6), (uint64_t)&v179);
    sub_2394ED088((uint64_t)(v46 + 10), (uint64_t)v182);
    sub_2396E5FA4((uint64_t)(v46 + 14), (uint64_t)&v184);
    sub_2396E6088((uint64_t)(v46 + 18), (uint64_t)v187);
    v63 = operator new(0xB0uLL);
    v63[1] = 0;
    v63[2] = 0;
    *v63 = &off_250B020F8;
    v63[3] = 0;
    v64 = (uint64_t)(v63 + 3);
    *((_BYTE *)v63 + 72) = 0;
    *((_BYTE *)v63 + 80) = 0;
    *((_BYTE *)v63 + 104) = 0;
    *((_BYTE *)v63 + 112) = 0;
    *((_BYTE *)v63 + 136) = 0;
    *((_BYTE *)v63 + 144) = 0;
    *((_BYTE *)v63 + 168) = 0;
    v63[4] = 0;
    v63[5] = 0;
    *((_BYTE *)v63 + 48) = 0;
    *(_QWORD *)&v201 = v63 + 3;
    *((_QWORD *)&v201 + 1) = v63;
    v166 = 0;
    LOBYTE(v167) = 0;
    v169 = 0;
    LOBYTE(v170) = 0;
    v172 = 0;
    LOBYTE(v173) = 0;
    v175 = 0;
    __p[1] = 0;
    v163 = 0;
    __p[0] = 0;
    LOBYTE(v164) = 0;
    if ((sub_239EA8E00(v157, v16, (uint64_t)&v231, (uint64_t)__p, 0, 0, *(float *)(v161 + 400), *(float *)(v161 + 404), *(float *)(v161 + 408), *(float *)(v161 + 412), 0.004) & 1) != 0&& (v65.i32[0] = *(_DWORD *)(v161 + 416), sub_239EB2238(v160, (uint64_t *)__p, &v176, v64, *(unsigned __int8 *)(v161 + 428), *(_DWORD *)(v161 + 108),
            0,
            0,
            *(float *)(v161 + 400),
            v65,
            *(float *)(v161 + 420),
            *(float *)(v161 + 424))))
    {
      v66 = 1;
      sub_2396DB4C8();
      v13 = 3;
    }
    else
    {
      sub_2394202DC((_QWORD *)(v158 + 320), 5503);
      v66 = 0;
      v13 = 2;
    }
    if (v175 && v173)
    {
      v174 = v173;
      operator delete(v173);
    }
    if (v172)
    {
      v88 = (char *)v170;
      if (v170)
      {
        v89 = v171;
        v90 = v170;
        if (v171 != v170)
        {
          v91 = v171;
          do
          {
            v93 = (void *)*((_QWORD *)v91 - 3);
            v91 -= 24;
            v92 = v93;
            if (v93)
            {
              *((_QWORD *)v89 - 2) = v92;
              operator delete(v92);
            }
            v89 = v91;
          }
          while (v91 != v88);
          v90 = v170;
        }
        v171 = v88;
        operator delete(v90);
      }
    }
    if (v169 && v167)
    {
      v168 = v167;
      operator delete(v167);
    }
    if (v166 && v164)
    {
      v165 = v164;
      operator delete(v164);
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (v66)
    {
      do
        v100 = __ldxr(v45);
      while (__stxr(v100 + 1, v45));
      v101 = *(std::__shared_weak_count **)(v158 + 8);
      *(_QWORD *)v158 = v160;
      *(_QWORD *)(v158 + 8) = v44;
      if (v101)
      {
        p_shared_owners = (unint64_t *)&v101->__shared_owners_;
        do
          v103 = __ldaxr(p_shared_owners);
        while (__stlxr(v103 - 1, p_shared_owners));
        if (!v103)
        {
          ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
          std::__shared_weak_count::__release_weak(v101);
        }
      }
      v104 = operator new(0xB0uLL);
      v104[2] = 0;
      *v104 = &off_250B020F8;
      v104[1] = 0;
      v105 = sub_2394B6DC0((uint64_t)(v104 + 3), (uint64_t)&v176);
      v106 = *(std::__shared_weak_count **)(v158 + 24);
      *(_QWORD *)(v158 + 16) = v105;
      *(_QWORD *)(v158 + 24) = v104;
      if (v106)
      {
        v107 = (unint64_t *)&v106->__shared_owners_;
        do
          v108 = __ldaxr(v107);
        while (__stlxr(v108 - 1, v107));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
          std::__shared_weak_count::__release_weak(v106);
        }
      }
      v109 = operator new(0xB0uLL);
      v109[2] = 0;
      *v109 = &off_250B020F8;
      v109[1] = 0;
      v110 = sub_2394B6DC0((uint64_t)(v109 + 3), (uint64_t)&v212);
      v111 = *(std::__shared_weak_count **)(v158 + 40);
      *(_QWORD *)(v158 + 32) = v110;
      *(_QWORD *)(v158 + 40) = v109;
      if (v111)
      {
        v112 = (unint64_t *)&v111->__shared_owners_;
        do
          v113 = __ldaxr(v112);
        while (__stlxr(v113 - 1, v112));
        if (!v113)
        {
          ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
          std::__shared_weak_count::__release_weak(v111);
        }
      }
      v114 = v201;
      if (*((_QWORD *)&v201 + 1))
      {
        v115 = (unint64_t *)(*((_QWORD *)&v201 + 1) + 8);
        do
          v116 = __ldxr(v115);
        while (__stxr(v116 + 1, v115));
      }
      v117 = *(std::__shared_weak_count **)(v158 + 56);
      *(_OWORD *)(v158 + 48) = v114;
      if (v117)
      {
        v118 = (unint64_t *)&v117->__shared_owners_;
        do
          v119 = __ldaxr(v118);
        while (__stlxr(v119 - 1, v118));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
          std::__shared_weak_count::__release_weak(v117);
        }
      }
      v13 = 0;
    }
    v120 = (std::__shared_weak_count *)*((_QWORD *)&v201 + 1);
    if (*((_QWORD *)&v201 + 1))
    {
      v121 = (unint64_t *)(*((_QWORD *)&v201 + 1) + 8);
      do
        v122 = __ldaxr(v121);
      while (__stlxr(v122 - 1, v121));
      if (!v122)
      {
        ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
        std::__shared_weak_count::__release_weak(v120);
      }
    }
  }
  else
  {
    if (!*(_BYTE *)(v158 + 129))
      goto LABEL_243;
    v166 = 0;
    LOBYTE(v167) = 0;
    v169 = 0;
    LOBYTE(v170) = 0;
    v172 = 0;
    LOBYTE(v173) = 0;
    v175 = 0;
    __p[1] = 0;
    v163 = 0;
    __p[0] = 0;
    LOBYTE(v164) = 0;
    v67 = sub_239EA8E00(v157, v16, (uint64_t)&v231, (uint64_t)__p, 0, 0, *(float *)(v161 + 400), *(float *)(v161 + 404), *(float *)(v161 + 408), *(float *)(v161 + 412), 0.004);
    v68 = v67;
    if (v67)
    {
      do
        v69 = __ldxr(v45);
      while (__stxr(v69 + 1, v45));
      v70 = *(std::__shared_weak_count **)(v158 + 8);
      *(_QWORD *)v158 = v160;
      *(_QWORD *)(v158 + 8) = v44;
      if (v70)
      {
        v71 = (unint64_t *)&v70->__shared_owners_;
        do
          v72 = __ldaxr(v71);
        while (__stlxr(v72 - 1, v71));
        if (!v72)
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
      }
      v73 = operator new(0xB0uLL);
      v73[2] = 0;
      *v73 = &off_250B020F8;
      v73[1] = 0;
      v74 = sub_2394B6DC0((uint64_t)(v73 + 3), (uint64_t)&v231);
      v75 = *(std::__shared_weak_count **)(v158 + 24);
      *(_QWORD *)(v158 + 16) = v74;
      *(_QWORD *)(v158 + 24) = v73;
      if (v75)
      {
        v76 = (unint64_t *)&v75->__shared_owners_;
        do
          v77 = __ldaxr(v76);
        while (__stlxr(v77 - 1, v76));
        if (!v77)
        {
          ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
          std::__shared_weak_count::__release_weak(v75);
        }
      }
      v78 = operator new(0xB0uLL);
      v78[2] = 0;
      *v78 = &off_250B020F8;
      v78[1] = 0;
      v79 = sub_2394B6DC0((uint64_t)(v78 + 3), (uint64_t)&v212);
      v80 = *(std::__shared_weak_count **)(v158 + 40);
      *(_QWORD *)(v158 + 32) = v79;
      *(_QWORD *)(v158 + 40) = v78;
      if (v80)
      {
        v81 = (unint64_t *)&v80->__shared_owners_;
        do
          v82 = __ldaxr(v81);
        while (__stlxr(v82 - 1, v81));
        if (!v82)
        {
          ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
          std::__shared_weak_count::__release_weak(v80);
        }
      }
      v83 = operator new(0xB0uLL);
      v83[2] = 0;
      *v83 = &off_250B020F8;
      v83[1] = 0;
      v84 = sub_2394B6DC0((uint64_t)(v83 + 3), (uint64_t)__p);
      v85 = *(std::__shared_weak_count **)(v158 + 56);
      *(_QWORD *)(v158 + 48) = v84;
      *(_QWORD *)(v158 + 56) = v83;
      if (v85)
      {
        v86 = (unint64_t *)&v85->__shared_owners_;
        do
          v87 = __ldaxr(v86);
        while (__stlxr(v87 - 1, v86));
        if (!v87)
        {
          ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
          std::__shared_weak_count::__release_weak(v85);
        }
      }
      v13 = 3;
    }
    else
    {
      sub_2394202DC((_QWORD *)(v158 + 320), 5503);
      v13 = 2;
    }
    if (v175 && v173)
    {
      v174 = v173;
      operator delete(v173);
    }
    if (v172)
    {
      v94 = (char *)v170;
      if (v170)
      {
        v95 = v171;
        v96 = v170;
        if (v171 != v170)
        {
          v97 = v171;
          do
          {
            v99 = (void *)*((_QWORD *)v97 - 3);
            v97 -= 24;
            v98 = v99;
            if (v99)
            {
              *((_QWORD *)v95 - 2) = v98;
              operator delete(v98);
            }
            v95 = v97;
          }
          while (v97 != v94);
          v96 = v170;
        }
        v171 = v94;
        operator delete(v96);
      }
    }
    if (v169 && v167)
    {
      v168 = v167;
      operator delete(v167);
    }
    v43 = v158;
    if (v166 && v164)
    {
      v165 = v164;
      operator delete(v164);
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if ((v68 & 1) != 0)
    {
LABEL_243:
      sub_2394202DC((_QWORD *)(v43 + 320), 5503);
      v13 = 2;
    }
  }
  if (v226 && v224)
  {
    v225 = v224;
    operator delete(v224);
  }
  if (v223)
  {
    v123 = (char *)v221;
    if (v221)
    {
      v124 = v222;
      v125 = v221;
      if (v222 != v221)
      {
        v126 = v222;
        do
        {
          v128 = (void *)*((_QWORD *)v126 - 3);
          v126 -= 24;
          v127 = v128;
          if (v128)
          {
            *((_QWORD *)v124 - 2) = v127;
            operator delete(v127);
          }
          v124 = v126;
        }
        while (v126 != v123);
        v125 = v221;
      }
      v222 = v123;
      operator delete(v125);
    }
  }
  if (v220 && v218)
  {
    v219 = v218;
    operator delete(v218);
  }
  if (v217 && v215)
  {
    v216 = v215;
    operator delete(v215);
  }
  if (v212)
  {
    v213 = v212;
    operator delete(v212);
  }
  v129 = (std::__shared_weak_count *)__dst[1];
  if (__dst[1])
  {
    v130 = (unint64_t *)((char *)__dst[1] + 8);
    do
      v131 = __ldaxr(v130);
    while (__stlxr(v131 - 1, v130));
    if (!v131)
    {
      ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
      std::__shared_weak_count::__release_weak(v129);
    }
  }
  if (v188 && v187[0])
  {
    v187[1] = v187[0];
    operator delete(v187[0]);
  }
  if (v186)
  {
    v132 = (char *)v184;
    if (v184)
    {
      v133 = v185;
      v134 = v184;
      if (v185 != v184)
      {
        v135 = v185;
        do
        {
          v137 = (void *)*((_QWORD *)v135 - 3);
          v135 -= 24;
          v136 = v137;
          if (v137)
          {
            *((_QWORD *)v133 - 2) = v136;
            operator delete(v136);
          }
          v133 = v135;
        }
        while (v135 != v132);
        v134 = v184;
      }
      v185 = v132;
      operator delete(v134);
    }
  }
  if (v183 && v182[0])
  {
    v182[1] = v182[0];
    operator delete(v182[0]);
  }
  if (v181 && (_QWORD)v179)
  {
    *((_QWORD *)&v179 + 1) = v179;
    operator delete((void *)v179);
  }
  if (v176)
  {
    v177 = (char *)v176;
    operator delete(v176);
  }
  if (v239.__opaque[8] && *(_QWORD *)&v238.__opaque[32])
  {
    v239.__sig = *(_QWORD *)&v238.__opaque[32];
    operator delete(*(void **)&v238.__opaque[32]);
  }
  if (v238.__opaque[24])
  {
    v138 = *(_QWORD *)v238.__opaque;
    if (*(_QWORD *)v238.__opaque)
    {
      v139 = *(_QWORD *)&v238.__opaque[8];
      v140 = *(void **)v238.__opaque;
      if (*(_QWORD *)&v238.__opaque[8] != *(_QWORD *)v238.__opaque)
      {
        v141 = *(_QWORD *)&v238.__opaque[8];
        do
        {
          v143 = *(void **)(v141 - 24);
          v141 -= 24;
          v142 = v143;
          if (v143)
          {
            *(_QWORD *)(v139 - 16) = v142;
            operator delete(v142);
          }
          v139 = v141;
        }
        while (v141 != v138);
        v140 = *(void **)v238.__opaque;
      }
      *(_QWORD *)&v238.__opaque[8] = v138;
      operator delete(v140);
    }
  }
  if (LOBYTE(v238.__sig) && v235)
  {
    v236 = v235;
    operator delete(v235);
  }
  if (BYTE8(v234) && (_QWORD)v233)
  {
    *((_QWORD *)&v233 + 1) = v233;
    operator delete((void *)v233);
  }
  if (v231)
  {
    *(_QWORD *)&v232 = v231;
    operator delete(v231);
  }
  v144 = v195;
  if (v195)
  {
    v145 = (unint64_t *)&v195->__shared_owners_;
    do
      v146 = __ldaxr(v145);
    while (__stlxr(v146 - 1, v145));
    if (!v146)
    {
      ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
      std::__shared_weak_count::__release_weak(v144);
    }
  }
LABEL_314:
  v147 = (char *)v198[0];
  if (v198[0])
  {
    do
    {
      v151 = *(char **)v147;
      v152 = (void *)*((_QWORD *)v147 + 5);
      if (v152)
      {
        *((_QWORD *)v147 + 6) = v152;
        operator delete(v152);
      }
      if (v147[39] < 0)
        operator delete(*((void **)v147 + 2));
      operator delete(v147);
      v147 = v151;
    }
    while (v151);
  }
  v148 = v197[0];
  v197[0] = 0;
  if (v148)
    operator delete(v148);
  v149 = v228;
  if (v228 == v227)
  {
    v150 = 4;
    v149 = v227;
    goto LABEL_326;
  }
  if (v228)
  {
    v150 = 5;
LABEL_326:
    (*(void (**)(void))(*v149 + 8 * v150))();
  }
  v153 = v230;
  if (v230 == v229)
  {
    v154 = 4;
    v153 = v229;
    goto LABEL_331;
  }
  if (v230)
  {
    v154 = 5;
LABEL_331:
    (*(void (**)(void))(*v153 + 8 * v154))();
  }
  return v13;
}

void sub_239B6E4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  unint64_t *v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;

  sub_2394B6764((uint64_t)&a29);
  sub_239A4D7C0((uint64_t)&STACK[0x260]);
  sub_2394B6764((uint64_t)&STACK[0x318]);
  sub_239A4D7C0((uint64_t)&STACK[0x200]);
  sub_2394B6764((uint64_t)&a48);
  sub_2394B6764((uint64_t)&STACK[0x3F0]);
  sub_239A4D7C0((uint64_t)&STACK[0x218]);
  sub_239B6EC4C((uint64_t)&STACK[0x230]);
  v49 = (unint64_t *)STACK[0x3C8];
  if ((unint64_t *)STACK[0x3C8] == &STACK[0x3B0])
  {
    v50 = 4;
    v49 = &STACK[0x3B0];
  }
  else
  {
    if (!v49)
      goto LABEL_6;
    v50 = 5;
  }
  (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_6:
  v51 = (unint64_t *)STACK[0x3E8];
  if ((unint64_t *)STACK[0x3E8] == &STACK[0x3D0])
  {
    v52 = 4;
    v51 = &STACK[0x3D0];
  }
  else
  {
    if (!v51)
      _Unwind_Resume(a1);
    v52 = 5;
  }
  (*(void (**)(void))(*v51 + 8 * v52))();
  _Unwind_Resume(a1);
}

void sub_239B6E7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;

  sub_239A4D7C0((uint64_t)&a71);
  if (SLOBYTE(STACK[0x217]) < 0)
    JUMPOUT(0x239B6E808);
  JUMPOUT(0x239B6E748);
}

uint64_t *sub_239B6E81C(uint64_t a1, uint64_t a2, __int128 **a3)
{
  unint64_t v3;
  _BYTE *v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t **v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _BYTE *v26;
  __int128 *v27;
  __int128 v28;
  float v29;
  float v30;
  _BOOL8 v31;
  unint64_t v32;
  unint64_t v33;
  size_t prime;
  int8x8_t v35;
  unint64_t v36;
  uint8x8_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  _QWORD v42[2];
  char v43;

  v5 = (_BYTE *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(_QWORD *)a2;
    v8 = v7;
  }
  v9 = sub_239428940((uint64_t)v42, (uint64_t *)a2, v8);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v3 = v9;
      if (v9 >= v11)
        v3 = v9 % v11;
    }
    else
    {
      v3 = (v11 - 1) & v9;
    }
    v13 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        v15 = v5[23];
        if (v15 >= 0)
          v16 = v5[23];
        else
          v16 = *((_QWORD *)v5 + 1);
        if (v15 < 0)
          v5 = *(_BYTE **)v5;
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v21 = v14[1];
            if (v21 == v10)
            {
              v22 = *((unsigned __int8 *)v14 + 39);
              if ((v22 & 0x80u) == 0)
                v23 = *((unsigned __int8 *)v14 + 39);
              else
                v23 = v14[3];
              if (v23 == v16)
              {
                if ((v22 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v14[2], v5, v14[3]))
                    return v14;
                }
                else
                {
                  if (!*((_BYTE *)v14 + 39))
                    return v14;
                  v24 = 0;
                  while (*((unsigned __int8 *)v14 + v24 + 16) == v5[v24])
                  {
                    if (v22 == ++v24)
                      return v14;
                  }
                }
              }
            }
            else if ((v21 & (v11 - 1)) != v3)
            {
              goto LABEL_51;
            }
            v14 = (uint64_t *)*v14;
            if (!v14)
              goto LABEL_51;
          }
        }
        do
        {
          v17 = v14[1];
          if (v17 == v10)
          {
            v18 = *((unsigned __int8 *)v14 + 39);
            if ((v18 & 0x80u) == 0)
              v19 = *((unsigned __int8 *)v14 + 39);
            else
              v19 = v14[3];
            if (v19 == v16)
            {
              if ((v18 & 0x80) != 0)
              {
                if (!memcmp((const void *)v14[2], v5, v14[3]))
                  return v14;
              }
              else
              {
                if (!*((_BYTE *)v14 + 39))
                  return v14;
                v20 = 0;
                while (*((unsigned __int8 *)v14 + v20 + 16) == v5[v20])
                {
                  if (v18 == ++v20)
                    return v14;
                }
              }
            }
          }
          else
          {
            if (v17 >= v11)
              v17 %= v11;
            if (v17 != v3)
              break;
          }
          v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_51:
  v25 = (char *)operator new(0x48uLL);
  v42[0] = v25;
  v42[1] = a1 + 16;
  v43 = 0;
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = v10;
  v26 = v25 + 16;
  v27 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    sub_23941A7F8(v26, *(void **)v27, *((_QWORD *)v27 + 1));
  }
  else
  {
    v28 = *v27;
    *((_QWORD *)v25 + 4) = *((_QWORD *)v27 + 2);
    *(_OWORD *)v26 = v28;
  }
  *((_QWORD *)v25 + 5) = 0;
  *((_QWORD *)v25 + 6) = 0;
  v25[64] = 0;
  *((_QWORD *)v25 + 7) = 0;
  v43 = 1;
  v29 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v30 = *(float *)(a1 + 32);
  if (!v11 || (float)(v30 * (float)v11) < v29)
  {
    v31 = 1;
    if (v11 >= 3)
      v31 = (v11 & (v11 - 1)) != 0;
    v32 = v31 | (2 * v11);
    v33 = vcvtps_u32_f32(v29 / v30);
    if (v32 <= v33)
      prime = v33;
    else
      prime = v32;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v35 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v35)
      goto LABEL_66;
    if (prime < *(_QWORD *)&v35)
    {
      v36 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v35 < 3uLL || (v37 = (uint8x8_t)vcnt_s8(v35), v37.i16[0] = vaddlv_u8(v37), v37.u32[0] > 1uLL))
      {
        v36 = std::__next_prime(v36);
      }
      else
      {
        v38 = 1 << -(char)__clz(v36 - 1);
        if (v36 >= 2)
          v36 = v38;
      }
      if (prime <= v36)
        prime = v36;
      if (prime < *(_QWORD *)&v35)
LABEL_66:
        sub_239A501C8(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v3 = v10 % v11;
      else
        v3 = v10;
    }
    else
    {
      v3 = (v11 - 1) & v10;
    }
  }
  v39 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v39)
  {
    *(_QWORD *)v42[0] = *v39;
    *v39 = v42[0];
  }
  else
  {
    *(_QWORD *)v42[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v42[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v42[0])
    {
      v40 = *(_QWORD *)(*(_QWORD *)v42[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v40 >= v11)
          v40 %= v11;
      }
      else
      {
        v40 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v40) = v42[0];
    }
  }
  v14 = (uint64_t *)v42[0];
  ++*(_QWORD *)(a1 + 24);
  return v14;
}

void sub_239B6EC30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239B6EE18((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239B6EC4C(uint64_t a1)
{
  char *v2;
  void *v3;
  char *v5;
  void *v6;

  v2 = *(char **)(a1 + 16);
  if (v2)
  {
    do
    {
      v5 = *(char **)v2;
      v6 = (void *)*((_QWORD *)v2 + 5);
      if (v6)
      {
        *((_QWORD *)v2 + 6) = v6;
        operator delete(v6);
      }
      if (v2[39] < 0)
        operator delete(*((void **)v2 + 2));
      operator delete(v2);
      v2 = v5;
    }
    while (v5);
  }
  v3 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_239B6ECC8()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B6ECDC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF77D8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B6ED10(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF77D8;
  a2[1] = v2;
  return result;
}

void sub_239B6ED2C(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v10[4];
  char v11;
  __int128 v12;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v12 = 0uLL;
  v11 = 0;
  v10[0] = sub_239B49F7C;
  v10[1] = 0;
  v10[2] = v4;
  v10[3] = v5;
  sub_239B4A200((uint64_t)v10, (uint64_t)&v12, (uint64_t)&v11);
  if (v11)
  {
    v6 = v12;
  }
  else
  {
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
    v6 = 0uLL;
    if (*((_QWORD *)&v12 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, (__n128)0);
        std::__shared_weak_count::__release_weak(v7);
        v6 = 0uLL;
      }
    }
  }
  *a3 = v6;
}

void sub_239B6EDD4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239B6EE18(uint64_t *a1)
{
  uint64_t v2;
  void *v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16))
    {
      v3 = *(void **)(v2 + 40);
      if (v3)
      {
        *(_QWORD *)(v2 + 48) = v3;
        operator delete(v3);
      }
      if (*(char *)(v2 + 39) < 0)
        operator delete(*(void **)(v2 + 16));
    }
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_239B6EE74(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v14;
  std::string __str;
  std::string __p;
  _QWORD v17[3];
  _QWORD *v18;
  int v19;
  std::string v20;
  uint64_t v21;
  uint64_t *v22;
  std::string v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 308, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (*(char *)(a2 + 23) < 0)
    sub_23941A7F8(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  v5 = v17;
  v6 = a3[3];
  if (!v6)
    goto LABEL_8;
  if ((_QWORD *)v6 != a3)
  {
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
LABEL_8:
    v18 = (_QWORD *)v6;
    goto LABEL_10;
  }
  v18 = v17;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v17);
LABEL_10:
  v19 = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&v20, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v20 = __p;
  v7 = (uint64_t)v18;
  if (!v18)
    goto LABEL_16;
  if (v18 != v17)
  {
    v7 = (*(uint64_t (**)(void))(*v18 + 16))();
LABEL_16:
    v22 = (uint64_t *)v7;
    goto LABEL_18;
  }
  v22 = &v21;
  (*(void (**)(_QWORD *))(v17[0] + 24))(v17);
LABEL_18:
  memset(v23, 0, 41);
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  memset(&v23[3], 0, 48);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&__str, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    __str = __p;
  std::string::operator=(&v20, &__str);
  std::string::operator=(v23, &__str);
  std::string::operator=((std::string *)&v23[3].__r_.__value_.__r.__words[1], &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v8 = (std::__shared_weak_count *)operator new(0x150uLL);
  v8->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  v8->__shared_weak_owners_ = 0;
  v8->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF77A0;
  *(_QWORD *)&v14 = sub_239A6F410((uint64_t)&v8[1], (uint64_t)&v19);
  *((_QWORD *)&v14 + 1) = v8;
  sub_239A6F660((uint64_t)&v19);
  if (v18 == v17)
  {
    v10 = 4;
  }
  else
  {
    if (!v18)
      goto LABEL_28;
    v10 = 5;
    v5 = v18;
  }
  (*(void (**)(_QWORD *))(*v5 + 8 * v10))(v5);
LABEL_28:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v11 = sub_239A6F858(*(unsigned int **)(a1 + 288), &v14);
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  return v11;
}

void sub_239B6F140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;

  v66 = v64 + 31;
  v67 = (_QWORD *)a61;
  if ((_QWORD *)a61 == v64 + 35)
  {
    v68 = 4;
    v67 = v64 + 35;
  }
  else
  {
    if (!a61)
      goto LABEL_6;
    v68 = 5;
  }
  (*(void (**)(void))(*v67 + 8 * v68))();
LABEL_6:
  v69 = v64 + 27;
  v70 = (_QWORD *)a57;
  if ((_QWORD *)a57 == v66)
  {
    v71 = 4;
    v70 = v66;
  }
  else
  {
    if (!a57)
      goto LABEL_11;
    v71 = 5;
  }
  (*(void (**)(void))(*v70 + 8 * v71))();
LABEL_11:
  v72 = (_QWORD *)a53;
  if ((_QWORD *)a53 == v69)
  {
    v73 = 4;
    v72 = v69;
  }
  else
  {
    if (!a53)
      goto LABEL_16;
    v73 = 5;
  }
  (*(void (**)(void))(*v72 + 8 * v73))();
LABEL_16:
  sub_239A7010C(v63);
  sub_239A7001C(v62);
  sub_239A701B0(v61);
  sub_239A701B0((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_239B6F284()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B6F298(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF7758;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B6F2D8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7758;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B6F300(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  char v6;
  _QWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *a3;
  v7 = *(_QWORD **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v10 = (std::__shared_weak_count *)v7[1];
  *v7 = v4;
  v7[1] = v5;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  **(_BYTE **)(a1 + 24) = v6;
  v13 = *(unsigned int **)(a1 + 8);
  v16 = 1;
  sub_2395BFE44(v13, &v16);
  if (v5)
  {
    v14 = (unint64_t *)&v5->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_239B6F3E0(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B6F420(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v7;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  task_name_t *v14;
  _QWORD *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  mach_msg_type_number_t task_info_outCnt[4];
  void *v61[2];
  __int128 v62;
  void *v63[2];
  void *v64[2];
  __int128 v65;
  void *v66[2];
  void *v67[2];
  __int128 v68;
  void *__p[4];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  std::__shared_weak_count *v74;
  _BYTE v75[8];
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  char *v82;
  void *v83;
  void *v84;
  char *v85;
  void *v86;
  void *v87;
  char *v88;
  void *v89;
  void *v90;
  char *v91;
  int v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  int v97;
  void *v98;
  void *v99;
  uint64_t v100;
  char v101;
  __int16 v102;
  char v103;
  int v104;
  int v105;
  char v106;
  int v107;
  char v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int16 v116;
  integer_t task_info_out[4];
  __int128 v118;
  __int128 v119;
  char v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  unint64_t v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  _QWORD v134[3];
  _QWORD *v135;
  _BYTE v136[24];
  _BYTE *v137;
  _QWORD v138[3];
  _QWORD *v139;
  _QWORD v140[3];
  _QWORD *v141;
  _QWORD v142[3];
  _QWORD *v143;
  _QWORD v144[3];
  _QWORD *v145;
  _BYTE v146[24];
  _BYTE *v147;
  _BYTE v148[24];
  _BYTE *v149;
  _QWORD v150[3];
  _QWORD *v151;
  _BYTE v152[24];
  _BYTE *v153;
  _BYTE v154[24];
  _BYTE *v155;
  uint64_t v156;

  v156 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a1 + 56)
    || *(_QWORD *)(a1 + 112) == 0
    || *(_QWORD *)(a1 + 160) == 0
    || *(_QWORD *)(a1 + 128) == 0)
  {
    return 3;
  }
  v7 = *(unsigned __int8 *)(a1 + 199);
  if ((v7 & 0x80u) != 0)
    v7 = *(_QWORD *)(a1 + 184);
  if (!v7)
    return 3;
  v75[0] = 0;
  v76 = 0;
  v77 = 0;
  v78 = 0;
  v79 = 0;
  v10 = operator new(0xCuLL);
  *(_QWORD *)v10 = 0;
  v10[2] = 0;
  v80 = v10;
  v81 = v10 + 3;
  v82 = (char *)(v10 + 3);
  v11 = operator new(0xCuLL);
  *(_QWORD *)v11 = 0;
  v11[2] = 0;
  v83 = v11;
  v84 = v11 + 3;
  v85 = (char *)(v11 + 3);
  v12 = operator new(0xCuLL);
  *(_QWORD *)v12 = 0;
  v12[2] = 0;
  v86 = v12;
  v87 = v12 + 3;
  v88 = (char *)(v12 + 3);
  v13 = operator new(0xCuLL);
  v90 = v13 + 3;
  v91 = (char *)(v13 + 3);
  *(_QWORD *)v13 = 0;
  v13[2] = 0;
  v89 = v13;
  v99 = 0;
  v100 = 0;
  v98 = 0;
  v93 = 0u;
  v94 = 0u;
  v95 = 0u;
  v96 = 0u;
  v92 = 0;
  v97 = 0;
  v101 = 1;
  *(std::chrono::system_clock::time_point *)&v95 = std::chrono::system_clock::now();
  task_info_outCnt[0] = 93;
  v14 = (task_name_t *)MEMORY[0x24BDAEC58];
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, task_info_outCnt))
    *((float *)&v96 + 3) = (float)((float)v126 * 0.00097656) * 0.00097656;
  v101 = 1;
  v102 = 0;
  v103 = 1;
  v104 = 200000;
  v105 = 16777473;
  v106 = 1;
  v107 = 20;
  v108 = 1;
  v109 = 0u;
  v110 = 0u;
  v111 = 0u;
  v112 = 0;
  v113 = 256000;
  v114 = 0x200000000080;
  v115 = 0x4080000000000000;
  v116 = 0;
  *(std::chrono::system_clock::time_point *)&v95 = std::chrono::system_clock::now();
  task_info_outCnt[0] = 93;
  if (!task_info(*v14, 0x16u, task_info_out, task_info_outCnt))
    *((float *)&v96 + 3) = (float)((float)v126 * 0.00097656) * 0.00097656;
  v101 = 1;
  v15 = operator new(0x20uLL);
  *v15 = &off_250AF7868;
  v15[1] = v75;
  v15[2] = a2;
  v155 = v15;
  v16 = *(_QWORD *)(a1 + 128);
  v18 = *(_QWORD *)(a1 + 144);
  v17 = *(std::__shared_weak_count **)(a1 + 152);
  v73 = v18;
  v74 = v17;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(p_shared_owners);
    while (__stxr(v20 + 1, p_shared_owners));
  }
  sub_2396FDAA8(a3, (uint64_t)v148);
  v21 = a3[3];
  if (!v21)
    goto LABEL_24;
  if ((_QWORD *)v21 != a3)
  {
    v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 16))(v21);
LABEL_24:
    v143 = (_QWORD *)v21;
    goto LABEL_27;
  }
  v143 = v142;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v142);
LABEL_27:
  v23 = v144;
  v24 = a3[7];
  if (!v24)
  {
LABEL_30:
    v145 = (_QWORD *)v24;
    goto LABEL_32;
  }
  if ((_QWORD *)v24 != a3 + 4)
  {
    v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 16))(v24);
    goto LABEL_30;
  }
  v145 = v144;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v24 + 24))(v24, v144);
LABEL_32:
  v147 = 0;
  v25 = operator new(0x48uLL);
  v26 = v25;
  *v25 = &off_250AF78B0;
  if (v143)
  {
    if (v143 == v142)
    {
      v25[4] = v25 + 1;
      (*(void (**)(_QWORD *))(v142[0] + 24))(v142);
    }
    else
    {
      v25[4] = v143;
      v143 = 0;
    }
  }
  else
  {
    v25[4] = 0;
  }
  if (v145)
  {
    if (v145 == v144)
    {
      v26[8] = v26 + 5;
      (*(void (**)(_QWORD *))(v144[0] + 24))(v144);
    }
    else
    {
      v26[8] = v145;
      v145 = 0;
    }
  }
  else
  {
    v26[8] = 0;
  }
  v147 = v26;
  sub_2396FD600((uint64_t)v150, (uint64_t)v148, (uint64_t)v146);
  v28 = v147;
  if (v147 == v146)
  {
    v29 = 4;
    v28 = v146;
  }
  else
  {
    if (!v147)
      goto LABEL_47;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_47:
  if (v145 == v144)
  {
    v30 = 4;
  }
  else
  {
    if (!v145)
      goto LABEL_52;
    v30 = 5;
    v23 = v145;
  }
  (*(void (**)(_QWORD *))(*v23 + 8 * v30))(v23);
LABEL_52:
  v31 = v143;
  if (v143 == v142)
  {
    v32 = 4;
    v31 = v142;
  }
  else
  {
    if (!v143)
      goto LABEL_57;
    v32 = 5;
  }
  (*(void (**)(void))(*v31 + 8 * v32))();
LABEL_57:
  v33 = v149;
  if (v149 == v148)
  {
    v34 = 4;
    v33 = v148;
  }
  else
  {
    if (!v149)
      goto LABEL_62;
    v34 = 5;
  }
  (*(void (**)(void))(*v33 + 8 * v34))();
LABEL_62:
  v121 = 0;
  v122 = 0;
  v123 = 0;
  v124 = 0;
  v125 = 0;
  *(_OWORD *)task_info_out = 0u;
  v118 = 0u;
  v119 = 0u;
  v120 = 0;
  LOBYTE(v126) = 0;
  v127 = 0;
  v128 = 0;
  v129 = 0;
  v130 = 0;
  v131 = 0;
  v132 = 0;
  v133 = 0;
  v35 = *(_QWORD *)(a1 + 112);
  v36 = *(_QWORD *)(a1 + 160);
  v140[0] = &off_250AF78F8;
  v140[1] = v16;
  v141 = v140;
  if (v17)
  {
    v37 = (unint64_t *)&v17->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
  }
  v138[0] = &off_250AF7988;
  v138[1] = v18;
  v71 = 0;
  v72 = 0;
  v138[2] = v17;
  v139 = v138;
  v39 = (uint64_t)v151;
  if (!v151)
    goto LABEL_68;
  if (v151 != v150)
  {
    v39 = (*(uint64_t (**)(void))(*v151 + 16))();
LABEL_68:
    v135 = (_QWORD *)v39;
    goto LABEL_70;
  }
  v135 = v134;
  (*(void (**)(_QWORD *, _QWORD *))(v150[0] + 24))(v150, v134);
LABEL_70:
  v40 = v136;
  v41 = (uint64_t)v153;
  if (!v153)
  {
LABEL_73:
    v137 = (_BYTE *)v41;
    goto LABEL_75;
  }
  if (v153 != v152)
  {
    v41 = (*(uint64_t (**)(void))(*(_QWORD *)v153 + 16))();
    goto LABEL_73;
  }
  v137 = v136;
  (*(void (**)(void))(*(_QWORD *)v153 + 24))();
LABEL_75:
  v42 = sub_239521448(v35, v36, a1, (uint64_t)v140, (uint64_t)v138, v134, (uint64_t)task_info_out, v27, (uint64_t)v75, 1);
  if (v137 == v136)
  {
    v43 = 4;
  }
  else
  {
    if (!v137)
      goto LABEL_80;
    v43 = 5;
    v40 = v137;
  }
  (*(void (**)(_QWORD *))(*v40 + 8 * v43))(v40);
LABEL_80:
  v44 = v135;
  if (v135 == v134)
  {
    v45 = 4;
    v44 = v134;
  }
  else
  {
    if (!v135)
      goto LABEL_85;
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
LABEL_85:
  v46 = v139;
  if (v139 == v138)
  {
    v47 = 4;
    v46 = v138;
  }
  else
  {
    if (!v139)
      goto LABEL_90;
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
LABEL_90:
  v48 = v141;
  if (v141 == v140)
  {
    v49 = 4;
    v48 = v140;
  }
  else
  {
    if (!v141)
      goto LABEL_95;
    v49 = 5;
  }
  (*(void (**)(void))(*v48 + 8 * v49))();
LABEL_95:
  if ((v42 & 1) == 0)
  {
    v22 = 2;
    goto LABEL_114;
  }
  kdebug_trace();
  *(_OWORD *)task_info_outCnt = 0u;
  *(_OWORD *)v61 = 0u;
  v62 = 0u;
  *(_OWORD *)v63 = 0u;
  v70 = 0;
  memset(__p, 0, sizeof(__p));
  *(_OWORD *)v67 = 0u;
  v68 = 0u;
  v65 = 0u;
  *(_OWORD *)v66 = 0u;
  *(_OWORD *)v64 = 0u;
  HIBYTE(v61[0]) = 3;
  qmemcpy(task_info_outCnt, "jpg", 3);
  HIBYTE(v62) = 3;
  qmemcpy(&v61[1], "jpg", 3);
  HIBYTE(v64[0]) = 3;
  qmemcpy(v63, "jpg", 3);
  HIBYTE(v65) = 3;
  qmemcpy(&v64[1], "jpg", 3);
  HIBYTE(v67[0]) = 3;
  qmemcpy(v66, "jpg", 3);
  HIBYTE(v68) = 3;
  qmemcpy(&v67[1], "jpg", 3);
  __p[0] = operator new(0x19uLL);
  *(_OWORD *)&__p[1] = xmmword_239EC7360;
  strcpy((char *)__p[0], "CorePhotogrammetry Bake");
  __p[3] = 0;
  LODWORD(v70) = 0;
  v50 = sub_2396080A4((uint64_t)task_info_out, a1 + 176, 0x1Fu, (uint64_t)task_info_outCnt, 0, 0);
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v68) & 0x80000000) == 0)
    {
LABEL_98:
      if ((SHIBYTE(v67[0]) & 0x80000000) == 0)
        goto LABEL_99;
      goto LABEL_108;
    }
  }
  else if ((SHIBYTE(v68) & 0x80000000) == 0)
  {
    goto LABEL_98;
  }
  operator delete(v67[1]);
  if ((SHIBYTE(v67[0]) & 0x80000000) == 0)
  {
LABEL_99:
    if ((SHIBYTE(v65) & 0x80000000) == 0)
      goto LABEL_100;
    goto LABEL_109;
  }
LABEL_108:
  operator delete(v66[0]);
  if ((SHIBYTE(v65) & 0x80000000) == 0)
  {
LABEL_100:
    if ((SHIBYTE(v64[0]) & 0x80000000) == 0)
      goto LABEL_101;
    goto LABEL_110;
  }
LABEL_109:
  operator delete(v64[1]);
  if ((SHIBYTE(v64[0]) & 0x80000000) == 0)
  {
LABEL_101:
    if ((SHIBYTE(v62) & 0x80000000) == 0)
      goto LABEL_102;
    goto LABEL_111;
  }
LABEL_110:
  operator delete(v63[0]);
  if ((SHIBYTE(v62) & 0x80000000) == 0)
  {
LABEL_102:
    if ((SHIBYTE(v61[0]) & 0x80000000) == 0)
      goto LABEL_103;
    goto LABEL_112;
  }
LABEL_111:
  operator delete(v61[1]);
  if ((SHIBYTE(v61[0]) & 0x80000000) == 0)
  {
LABEL_103:
    if ((v50 & 1) != 0)
    {
LABEL_104:
      kdebug_trace();
      v22 = 0;
      goto LABEL_114;
    }
    goto LABEL_113;
  }
LABEL_112:
  operator delete(*(void **)task_info_outCnt);
  if ((v50 & 1) != 0)
    goto LABEL_104;
LABEL_113:
  v22 = 4;
LABEL_114:
  sub_2394EEFC0((uint64_t)task_info_out);
  v51 = v153;
  if (v153 == v152)
  {
    v52 = 4;
    v51 = v152;
  }
  else
  {
    if (!v153)
      goto LABEL_119;
    v52 = 5;
  }
  (*(void (**)(void))(*v51 + 8 * v52))();
LABEL_119:
  v53 = v151;
  if (v151 == v150)
  {
    v54 = 4;
    v53 = v150;
    goto LABEL_123;
  }
  if (v151)
  {
    v54 = 5;
LABEL_123:
    (*(void (**)(void))(*v53 + 8 * v54))();
  }
  if (v17)
  {
    v55 = (unint64_t *)&v17->__shared_owners_;
    do
      v56 = __ldaxr(v55);
    while (__stlxr(v56 - 1, v55));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (!v155)
    sub_2394172E0();
  (*(void (**)(_BYTE *))(*(_QWORD *)v155 + 48))(v155);
  v57 = v155;
  if (v155 == v154)
  {
    v58 = 4;
    v57 = v154;
    goto LABEL_134;
  }
  if (v155)
  {
    v58 = 5;
LABEL_134:
    (*(void (**)(void))(*v57 + 8 * v58))();
  }
  if (*((_QWORD *)&v110 + 1))
  {
    *(_QWORD *)&v111 = *((_QWORD *)&v110 + 1);
    operator delete(*((void **)&v110 + 1));
  }
  if (SBYTE7(v110) < 0)
    operator delete((void *)v109);
  if (v98)
  {
    v99 = v98;
    operator delete(v98);
  }
  if (v89)
  {
    v90 = v89;
    operator delete(v89);
  }
  if (v86)
  {
    v87 = v86;
    operator delete(v86);
  }
  if (v83)
  {
    v84 = v83;
    operator delete(v83);
  }
  if (v80)
  {
    v81 = v80;
    operator delete(v80);
  }
  return v22;
}

void sub_239B6FE14(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

uint64_t sub_239B700B4(uint64_t a1)
{
  if (*(char *)(a1 + 167) < 0)
  {
    operator delete(*(void **)(a1 + 144));
    if ((*(char *)(a1 + 143) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 119) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((*(char *)(a1 + 143) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 120));
  if ((*(char *)(a1 + 119) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 95) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(*(void **)(a1 + 96));
  if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(a1 + 72));
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
      goto LABEL_7;
LABEL_14:
    operator delete(*(void **)(a1 + 24));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
      return a1;
LABEL_15:
    operator delete(*(void **)a1);
    return a1;
  }
LABEL_13:
  operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0)
    goto LABEL_14;
LABEL_7:
  if (*(char *)(a1 + 23) < 0)
    goto LABEL_15;
  return a1;
}

_QWORD *sub_239B70178(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF7988;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B701DC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF7988;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B70250(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF7988;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B702A0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF7988;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B702D0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B70328(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B70380(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *a2;
    v11 = 0uLL;
    v10 = 0;
    v9[0] = sub_239B4D474;
    v9[1] = 0;
    v9[2] = v4;
    v9[3] = v5;
    sub_239B4D6F8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
    if (v10)
    {
      *(_OWORD *)a3 = v11;
    }
    else
    {
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
      if (*((_QWORD *)&v11 + 1))
      {
        v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
        do
          v8 = __ldaxr(v7);
        while (__stlxr(v8 - 1, v7));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
    }
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
  }
}

void sub_239B70430(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B70478()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B7048C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF78F8;
  result[1] = v3;
  return result;
}

uint64_t sub_239B704C0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF78F8;
  a2[1] = v2;
  return result;
}

void sub_239B704DC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4DD70;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4DFF4((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B70580(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B705C4(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF78B0;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
  return a1;
}

void sub_239B70650(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = &off_250AF78B0;
  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  v6 = (_QWORD *)a1[4];
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B706EC(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = operator new(0x48uLL);
  *v2 = &off_250AF78B0;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
    goto LABEL_4;
  if (v4 != a1 + 8)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
LABEL_4:
    v2[4] = v4;
    goto LABEL_6;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v4, v3);
LABEL_6:
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    if (v5 == a1 + 40)
    {
      v2[8] = v2 + 5;
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
      return v2;
    }
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  }
  v2[8] = v5;
  return v2;
}

void sub_239B707A8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)v1[4];
  if (v4 == v2)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v2 = (_QWORD *)v1[4];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
LABEL_6:
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B707F4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;

  *a2 = &off_250AF78B0;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      a2[4] = a2 + 1;
      (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32), a2 + 1);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
      {
LABEL_10:
        a2[8] = result;
        return result;
      }
    }
    else
    {
      a2[4] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
      result = *(_QWORD *)(a1 + 64);
      if (!result)
        goto LABEL_10;
    }
  }
  else
  {
    a2[4] = 0;
    result = *(_QWORD *)(a1 + 64);
    if (!result)
      goto LABEL_10;
  }
  if (result != a1 + 40)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_10;
  }
  a2[8] = a2 + 5;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 64) + 24))(*(_QWORD *)(a1 + 64));
}

void sub_239B708C4(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)(v2 + 32);
  if (v4 == v1)
  {
    v5 = 4;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
    v1 = *(_QWORD **)(v2 + 32);
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v5))(v1);
LABEL_6:
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B70900(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v2 = a1 + 1;
  v3 = a1 + 5;
  v4 = (_QWORD *)a1[8];
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
  result = (_QWORD *)a1[4];
  if (result == v2)
  {
    v7 = 4;
    result = v2;
  }
  else
  {
    if (!result)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239B70984(char *__p)
{
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = __p + 8;
  v3 = __p + 40;
  v4 = (char *)*((_QWORD *)__p + 8);
  if (v4 == v3)
  {
    v5 = 4;
    v4 = v3;
  }
  else
  {
    if (!v4)
      goto LABEL_6;
    v5 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v4 + 8 * v5))();
LABEL_6:
  v6 = (char *)*((_QWORD *)__p + 4);
  if (v6 == v2)
  {
    v7 = 4;
    v6 = v2;
    goto LABEL_10;
  }
  if (v6)
  {
    v7 = 5;
LABEL_10:
    (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
  }
  operator delete(__p);
}

void sub_239B70A04(uint64_t a1, float *a2)
{
  float v2;
  void *__p;
  char v4;

  v2 = *a2;
  v4 = 0;
  LOBYTE(__p) = 0;
  sub_2396FD7C8(a1 + 8, (uint64_t)&__p, v2);
  if (v4 < 0)
    operator delete(__p);
}

void sub_239B70A4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239B70A6C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B70A80(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF7868;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239B70AC0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7868;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239B70AE8(uint64_t a1)
{
  uint64_t v2;
  std::chrono::system_clock::time_point v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t result;
  rusage v7;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v10;

  v2 = *(_QWORD *)(a1 + 8);
  v3.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)(v2 + 184) = v3;
  *(double *)(v2 + 192) = (double)(v3.__d_.__rep_ - *(_QWORD *)(v2 + 176)) / 1000000.0;
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(v2 + 208) = (float)((float)v10 * 0.00097656) * 0.00097656;
  *(_BYTE *)(v2 + 240) = 0;
  getrusage(0, &v7);
  *(float *)(v2 + 200) = (float)((float)v7.ru_maxrss * 0.00097656) * 0.00097656;
  v5 = *(__int128 **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (*(_BYTE *)(v4 + 360))
    return sub_239B401B0(v4, v5);
  result = sub_239A60E98(v4, v5);
  *(_BYTE *)(result + 360) = 1;
  return result;
}

uint64_t sub_239B70BD4(uint64_t a1)
{
  uint64_t v1;
  std::mutex *v2;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = (std::mutex *)(v1 + 8);
  std::mutex::lock((std::mutex *)(v1 + 8));
  if (*(_DWORD *)v1 > 3u || *(_DWORD *)v1 == 2)
  {
    v4 = 0;
  }
  else
  {
    *(_DWORD *)v1 = 3;
    v4 = 1;
  }
  std::mutex::unlock(v2);
  return v4;
}

_QWORD *sub_239B70C2C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_250AF79F8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B70C90(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = off_250AF79F8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B70D08(uint64_t a1)
{
  sub_239B70D2C(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B70D2C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  _QWORD v29[3];
  int v30;
  const char *v31;
  int v32;
  const char *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;

  *(_QWORD *)a1 = &off_250AF7A20;
  sub_239B71020(&v36);
  if (**(int **)(v36 + 56) <= 3)
  {
    if (*(_BYTE *)(v36 + 72))
    {
      v29[0] = &v36;
      v29[1] = std::chrono::steady_clock::now().__d_.__rep_;
      v29[2] = std::chrono::system_clock::now().__d_.__rep_;
      v30 = 3;
      v31 = "unknown file";
      v32 = 1674;
      v34 = 0;
      v35 = 0;
      v33 = "unknown function";
      sub_239B710F0((uint64_t)v29, "Start destroying session");
      sub_239A47720((uint64_t)v29);
      sub_239A47720((uint64_t)v29);
      v2 = v35;
      if (v35)
      {
        p_shared_owners = (unint64_t *)&v35->__shared_owners_;
        do
          v4 = __ldaxr(p_shared_owners);
        while (__stlxr(v4 - 1, p_shared_owners));
        if (!v4)
        {
          ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
          std::__shared_weak_count::__release_weak(v2);
        }
      }
    }
  }
  sub_239B71210(a1);
  dispatch_release(*(dispatch_object_t *)(a1 + 136));
  dispatch_release(*(dispatch_object_t *)(a1 + 144));
  dispatch_release(*(dispatch_object_t *)(a1 + 152));
  dispatch_release(*(dispatch_object_t *)(a1 + 160));
  if (*(char *)(a1 + 247) < 0)
    operator delete(*(void **)(a1 + 224));
  sub_2396C9F80((_QWORD *)(a1 + 192));
  v6 = *(_QWORD *)(a1 + 168);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 176);
    v8 = *(void **)(a1 + 168);
    if (v7 != v6)
    {
      do
      {
        v9 = *(std::__shared_weak_count **)(v7 - 8);
        if (v9)
        {
          v10 = (unint64_t *)&v9->__shared_owners_;
          do
            v11 = __ldaxr(v10);
          while (__stlxr(v11 - 1, v10));
          if (!v11)
          {
            ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
            std::__shared_weak_count::__release_weak(v9);
          }
        }
        v7 -= 16;
      }
      while (v7 != v6);
      v8 = *(void **)(a1 + 168);
    }
    *(_QWORD *)(a1 + 176) = v6;
    operator delete(v8);
  }
  v12 = *(_QWORD **)(a1 + 128);
  if (v12 == (_QWORD *)(a1 + 104))
  {
    v13 = 4;
    v12 = (_QWORD *)(a1 + 104);
  }
  else
  {
    if (!v12)
      goto LABEL_26;
    v13 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t))(*v12 + 8 * v13))(v12, v5);
LABEL_26:
  v14 = *(_QWORD **)(a1 + 96);
  if (v14 == (_QWORD *)(a1 + 72))
  {
    v15 = 4;
    v14 = (_QWORD *)(a1 + 72);
    goto LABEL_30;
  }
  if (v14)
  {
    v15 = 5;
LABEL_30:
    (*(void (**)(_QWORD *, uint64_t))(*v14 + 8 * v15))(v14, v5);
  }
  v16 = *(std::__shared_weak_count **)(a1 + 64);
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = *(std::__shared_weak_count **)(a1 + 48);
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v22 = *(std::__shared_weak_count **)(a1 + 32);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v25 = *(std::__shared_weak_count **)(a1 + 16);
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  return a1;
}

void sub_239B71020(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25693D9D0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25693D9D0))
  {
    sub_2399FF268(&v5);
    sub_23941A4FC(__p, "cv3dapi.pg");
    sub_239A03BC8(&v5, (uint64_t)__p, &qword_25693D9C8);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_25693D9D0);
  }
  *a1 = qword_25693D9C8;
}

void sub_239B710BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_25693D9D0);
  _Unwind_Resume(a1);
}

uint64_t sub_239B710F0(uint64_t a1, char *__s)
{
  size_t v4;
  uint64_t v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  if (!*(_QWORD *)(a1 + 56))
  {
    v6 = operator new();
    sub_2394988CC(v6);
    v7 = (_QWORD *)operator new();
    *v7 = &unk_250AF1978;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = v6;
    v8 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_QWORD *)(a1 + 64) = v7;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  v4 = strlen(__s);
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)__s, v4);
  return a1;
}

void sub_239B711D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239B711EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_239B71210(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD block[5];

  dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 136));
  dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 144));
  dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 152));
  dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 160));
  v2 = *(NSObject **)(a1 + 136);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = sub_239B712C8;
  block[3] = &unk_250AF7DC8;
  block[4] = a1;
  dispatch_sync(v2, block);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    v4 = *(_QWORD **)(v3 + 176);
    if (v4)
    {
      atomic_store(1u, (unsigned __int8 *)(v4[1] + 1056));
      (*(void (**)(_QWORD *))(*v4 + 24))(v4);
    }
  }
}

void sub_239B712C8(uint64_t a1)
{
  dispatch_sync(*(dispatch_queue_t *)(*(_QWORD *)(a1 + 32) + 144), &unk_250AF7DA8);
}

void sub_239B712E4(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B71308(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  _QWORD *v7;
  _QWORD *v8;
  double v9;
  int16x8_t v10;
  const char *v11;
  const char *v12;
  size_t v13;
  int16x8_t v14;
  double v15;
  int16x8_t v16;
  std::string::size_type v17;
  std::string *p_dst;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  size_t v22;
  size_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  void *v35;
  int v38;
  int v39;
  int v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  CFUUIDRef v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t i;
  _QWORD *v59;
  const char *v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  void *v71;
  std::__shared_weak_count *v72;
  unint64_t *p_shared_owners;
  unint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t *v77;
  __int16 v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t *v85;
  unint64_t v86;
  _OWORD *v87;
  __int128 v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  char v92;
  std::__shared_weak_count *v93;
  uint64_t v94;
  unint64_t *v95;
  unint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  int64_t v100;
  char *v101;
  char *v102;
  unint64_t *v103;
  unint64_t v104;
  char *v105;
  VTPixelTransferSessionRef *v106;
  char *v107;
  _QWORD *v108;
  uint64_t v109;
  __int128 v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  std::__shared_weak_count *v114;
  unint64_t *v115;
  unint64_t v116;
  _BYTE *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  __int128 v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  std::__shared_weak_count *size;
  unint64_t *v126;
  unint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  std::__shared_weak_count *v133;
  _QWORD *v134;
  unint64_t *v135;
  unint64_t v136;
  std::__shared_weak_count *v137;
  unint64_t *v138;
  unint64_t v139;
  std::__shared_weak_count *v140;
  unint64_t *v141;
  unint64_t v142;
  unint64_t *v143;
  unint64_t v144;
  char *v145;
  VTPixelTransferSessionRef *v146;
  _OWORD *v147;
  int v148;
  int v149;
  void **v150;
  void *v151;
  _OWORD *v152;
  _QWORD *v153;
  void *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t *v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  _BYTE *v164;
  __int128 v165;
  std::__shared_weak_count *v166;
  unint64_t *v167;
  unint64_t v168;
  std::__shared_weak_count *v169;
  unint64_t *v170;
  unint64_t v171;
  _BYTE *v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  _BYTE *v176;
  __int128 v177;
  std::__shared_weak_count *v178;
  unint64_t *v179;
  unint64_t v180;
  std::__shared_weak_count *v181;
  unint64_t *v182;
  unint64_t v183;
  _BYTE *v184;
  uint64_t v185;
  void **v186;
  void *v187;
  char *v188;
  uint64_t v189;
  uint64_t j;
  void *v191;
  __int128 v192;
  uint64_t v193;
  unint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  _QWORD *v199;
  __int128 v200;
  std::__shared_weak_count *v201;
  unint64_t *v202;
  unint64_t v203;
  unint64_t *v204;
  unint64_t v205;
  std::__shared_weak_count *v206;
  unint64_t *v207;
  unint64_t v208;
  __int128 v209;
  unint64_t *v210;
  unint64_t v211;
  unint64_t v212;
  _QWORD *v213;
  __int128 v214;
  _QWORD *v215;
  uint64_t v216;
  _BYTE *v217;
  uint64_t v218;
  std::__shared_weak_count *v219;
  unint64_t *v220;
  unint64_t v221;
  unint64_t *v222;
  unint64_t v223;
  std::__shared_weak_count *v224;
  unint64_t *v225;
  unint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  std::__shared_weak_count *v229;
  unint64_t *v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void *v234;
  unint64_t *v235;
  unint64_t v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  _QWORD *v240;
  _QWORD *v241;
  uint64_t v242;
  _BYTE *v243;
  __int128 v244;
  std::__shared_weak_count *v245;
  unint64_t *v246;
  unint64_t v247;
  std::__shared_weak_count *v248;
  unint64_t *v249;
  unint64_t v250;
  _BYTE *v251;
  uint64_t v252;
  _QWORD *v253;
  uint64_t v254;
  std::__shared_weak_count *v255;
  unint64_t *v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void *v260;
  unint64_t *v261;
  unint64_t v262;
  std::__shared_weak_count *v263;
  unint64_t *v264;
  unint64_t v265;
  std::__shared_weak_count *v266;
  unint64_t *v267;
  unint64_t v268;
  unint64_t *v269;
  BOOL v270;
  uint64_t v271;
  const std::__fs::filesystem::path *v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  char v291;
  uint64_t v292;
  __int128 v293;
  unint64_t *v294;
  unint64_t v295;
  std::__shared_weak_count *v296;
  unint64_t *v297;
  unint64_t v298;
  uint64_t *v299;
  uint64_t v300;
  uint64_t v301;
  std::__shared_weak_count *v302;
  unint64_t *v303;
  unint64_t v304;
  unint64_t v305;
  uint64_t *v306;
  _QWORD *v307;
  uint64_t v308;
  std::__shared_weak_count *v309;
  unint64_t *v310;
  unint64_t v311;
  unint64_t v312;
  _QWORD *v313;
  _QWORD *v314;
  _QWORD *v315;
  _QWORD *v316;
  _BYTE *v317;
  uint64_t v318;
  _QWORD *v319;
  uint64_t v320;
  uint64_t *v321;
  std::__shared_weak_count *v322;
  unint64_t *v323;
  unint64_t v324;
  std::__shared_weak_count *v325;
  unint64_t *v326;
  unint64_t v327;
  uint64_t *v328;
  unint64_t v329;
  uint64_t *v330;
  uint64_t v331;
  __int128 v332;
  uint64_t v333;
  std::__shared_weak_count *v334;
  unint64_t *v335;
  unint64_t v336;
  unint64_t v337;
  _QWORD *v338;
  char *v339;
  _QWORD *v340;
  char *v341;
  _BYTE *v342;
  uint64_t v343;
  _QWORD *v344;
  uint64_t v345;
  uint64_t *v346;
  std::__shared_weak_count *v347;
  unint64_t *v348;
  unint64_t v349;
  std::__shared_weak_count *v350;
  unint64_t *v351;
  unint64_t v352;
  uint64_t *v353;
  unint64_t v354;
  std::string::size_type v355;
  std::string::size_type v356;
  unint64_t *v357;
  unint64_t v358;
  unint64_t v359;
  _QWORD *v360;
  char *v361;
  __int128 v362;
  uint64_t v363;
  uint64_t v364;
  unint64_t v365;
  uint64_t v366;
  std::__shared_weak_count *v367;
  unint64_t *v368;
  unint64_t v369;
  unint64_t v370;
  _QWORD *v371;
  _QWORD *v372;
  _BYTE *v373;
  _QWORD *v374;
  _BYTE *v375;
  _BYTE *v376;
  uint64_t v377;
  _QWORD *v378;
  uint64_t v379;
  uint64_t *v380;
  std::__shared_weak_count *v381;
  unint64_t *v382;
  unint64_t v383;
  std::__shared_weak_count *v384;
  unint64_t *v385;
  unint64_t v386;
  std::__shared_weak_count *v387;
  unint64_t *v388;
  unint64_t v389;
  uint64_t *v390;
  _QWORD *v391;
  uint64_t v392;
  _QWORD *v393;
  uint64_t v394;
  _QWORD *v395;
  void *v396;
  std::__shared_weak_count *v397;
  unint64_t *v398;
  unint64_t v399;
  std::__shared_weak_count *v400;
  unint64_t *v401;
  unint64_t v402;
  std::__shared_weak_count *v403;
  unint64_t *v404;
  unint64_t v405;
  _QWORD *v406;
  void *v407;
  void *v408;
  _QWORD *v409;
  uint64_t v410;
  uint64_t v411;
  void *v412;
  _QWORD *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  std::__shared_weak_count *v417;
  unint64_t *v418;
  unint64_t v419;
  unint64_t v420;
  _QWORD *v421;
  _QWORD *v422;
  _BYTE *v423;
  _QWORD *v424;
  _BYTE *v425;
  _BYTE *v426;
  uint64_t v427;
  _QWORD *v428;
  uint64_t v429;
  uint64_t *v430;
  std::__shared_weak_count *v431;
  unint64_t *v432;
  unint64_t v433;
  std::__shared_weak_count *v434;
  unint64_t *v435;
  unint64_t v436;
  uint64_t *v437;
  unint64_t v438;
  uint64_t v439;
  __int128 v440;
  uint64_t v441;
  std::__shared_weak_count *v442;
  unint64_t *v443;
  unint64_t v444;
  unint64_t v445;
  _QWORD *v446;
  char *v447;
  _QWORD *v448;
  char *v449;
  _BYTE *v450;
  uint64_t v451;
  _QWORD *v452;
  uint64_t v453;
  uint64_t *v454;
  std::__shared_weak_count *v455;
  unint64_t *v456;
  unint64_t v457;
  std::__shared_weak_count *v458;
  unint64_t *v459;
  unint64_t v460;
  std::__shared_weak_count *v461;
  unint64_t *v462;
  unint64_t v463;
  _QWORD *v464;
  uint64_t *v465;
  std::__shared_weak_count *v466;
  unint64_t *v467;
  unint64_t v468;
  std::__shared_weak_count *v469;
  unint64_t *v470;
  unint64_t v471;
  uint64_t *v472;
  unint64_t v473;
  uint64_t v474;
  std::__shared_weak_count *v475;
  unint64_t *v476;
  unint64_t v477;
  unint64_t v478;
  _QWORD *v479;
  uint64_t *v480;
  std::__shared_weak_count *v481;
  unint64_t *v482;
  unint64_t v483;
  std::__shared_weak_count *v484;
  unint64_t *v485;
  unint64_t v486;
  uint64_t *v487;
  unint64_t v488;
  uint64_t v489;
  std::__shared_weak_count *v490;
  unint64_t *v491;
  unint64_t v492;
  unint64_t v493;
  _QWORD *v494;
  _QWORD *v495;
  uint64_t v496;
  _BYTE *v497;
  uint64_t v498;
  uint64_t *v499;
  std::__shared_weak_count *v500;
  unint64_t *v501;
  unint64_t v502;
  std::__shared_weak_count *v503;
  unint64_t *v504;
  unint64_t v505;
  uint64_t *v506;
  unint64_t v507;
  uint64_t v508;
  std::__shared_weak_count *v509;
  unint64_t *v510;
  unint64_t v511;
  unint64_t v512;
  _QWORD *v513;
  _QWORD *v514;
  uint64_t v515;
  _BYTE *v516;
  uint64_t v517;
  uint64_t *v518;
  std::__shared_weak_count *v519;
  unint64_t *v520;
  unint64_t v521;
  std::__shared_weak_count *v522;
  unint64_t *v523;
  unint64_t v524;
  uint64_t *v525;
  unint64_t v526;
  uint64_t v527;
  std::__shared_weak_count *v528;
  unint64_t *v529;
  unint64_t v530;
  unint64_t v531;
  _QWORD *v532;
  _QWORD *v533;
  uint64_t v534;
  _BYTE *v535;
  uint64_t v536;
  uint64_t *v537;
  std::__shared_weak_count *v538;
  unint64_t *v539;
  unint64_t v540;
  std::__shared_weak_count *v541;
  unint64_t *v542;
  unint64_t v543;
  unint64_t *v544;
  void *v545;
  unint64_t *v546;
  unint64_t *v547;
  unint64_t v548;
  unint64_t v549;
  _QWORD *v550;
  _OWORD *v551;
  _QWORD *v552;
  uint64_t v553;
  _QWORD *v554;
  uint64_t v555;
  _QWORD *v556;
  void *v557;
  std::__shared_weak_count *v558;
  unint64_t *v559;
  unint64_t v560;
  std::__shared_weak_count *v561;
  unint64_t *v562;
  unint64_t v563;
  _QWORD *v564;
  void *v565;
  _QWORD *v566;
  uint64_t v567;
  uint64_t v568;
  std::string *v569;
  std::string::size_type v570;
  char v571;
  __int128 v572;
  unint64_t *v573;
  unint64_t v574;
  std::__shared_weak_count *v575;
  unint64_t *v576;
  unint64_t v577;
  void **v578;
  void *v579;
  std::__shared_weak_count *v580;
  unint64_t *v581;
  unint64_t v582;
  _QWORD *v583;
  void *v584;
  uint64_t *v585;
  uint64_t v586;
  uint64_t *v587;
  _BOOL4 v588;
  char *v589;
  unint64_t *v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  _QWORD *v594;
  uint64_t v595;
  uint64_t v596;
  std::ios_base *v597;
  void **v598;
  void *v599;
  _QWORD *v600;
  uint64_t v601;
  uint64_t v602;
  char *v603;
  uint64_t *v604;
  std::__shared_weak_count *v605;
  unint64_t *v606;
  unint64_t v607;
  char *v608;
  uint64_t *v609;
  std::__shared_weak_count *v610;
  unint64_t *v611;
  unint64_t v612;
  char *v613;
  std::__shared_weak_count *v614;
  unint64_t *v615;
  unint64_t v616;
  uint64_t v617;
  char v618;
  _BYTE *v619;
  uint64_t v620;
  unint64_t v621;
  std::__shared_weak_count *v622;
  unint64_t *v623;
  unint64_t v624;
  std::__shared_weak_count *v625;
  unint64_t *v626;
  unint64_t v627;
  uint64_t v628;
  _BOOL4 v629;
  char *v630;
  std::__fs::filesystem::path::__string_view v631;
  _BYTE *v632;
  std::basic_string_view<_CharT, _Traits>::size_type v633;
  std::basic_string_view<_CharT, _Traits>::size_type v634;
  uint64_t v635;
  std::__fs::filesystem::path::__string_view v636;
  _BYTE *v637;
  std::basic_string_view<_CharT, _Traits>::size_type v638;
  std::basic_string_view<_CharT, _Traits>::size_type v639;
  __int128 v640;
  unint64_t *v641;
  unint64_t v642;
  std::__shared_weak_count *v643;
  unint64_t *v644;
  unint64_t v645;
  std::__shared_weak_count *v646;
  unint64_t *v647;
  unint64_t v648;
  uint64_t v649;
  _QWORD *v650;
  unint64_t v651;
  char *v652;
  int64x2_t v653;
  void *v654;
  uint64_t v655;
  _QWORD *v656;
  std::string *v657;
  std::string::size_type v658;
  char v659;
  void **v660;
  void *v661;
  _QWORD *v662;
  void **v663;
  void *v664;
  char *v665;
  uint64_t *v666;
  std::__shared_weak_count *v667;
  unint64_t *v668;
  unint64_t v669;
  char *v670;
  uint64_t *v671;
  std::__shared_weak_count *v672;
  unint64_t *v673;
  unint64_t v674;
  char *v675;
  uint64_t *v676;
  std::__shared_weak_count *v677;
  unint64_t *v678;
  unint64_t v679;
  uint64_t v680;
  uint64_t *v681;
  uint64_t *k;
  uint64_t v683;
  char *v684;
  void *v685;
  char *v686;
  int64_t v687;
  int64_t v688;
  unint64_t v689;
  uint64_t v690;
  unint64_t v691;
  _BYTE *v692;
  _QWORD *v693;
  unint64_t v694;
  uint64_t v695;
  _OWORD *v696;
  char *v697;
  uint64_t v698;
  __int128 v699;
  uint64_t v700;
  std::__shared_weak_count *v701;
  unint64_t *v702;
  unint64_t v703;
  void **v704;
  void **v705;
  _QWORD *v706;
  uint64_t v707;
  uint64_t v708;
  unint64_t *v709;
  unint64_t v710;
  std::__shared_weak_count *v711;
  unint64_t *v712;
  unint64_t v713;
  char *v714;
  std::__shared_weak_count *v715;
  unint64_t *v716;
  unint64_t v717;
  char *v718;
  std::__shared_weak_count *v719;
  unint64_t *v720;
  unint64_t v721;
  char *v722;
  std::__shared_weak_count *v723;
  unint64_t *v724;
  unint64_t v725;
  uint64_t v726;
  uint64_t v727;
  unint64_t *v728;
  unint64_t v729;
  std::__shared_weak_count *v730;
  unint64_t *v731;
  unint64_t v732;
  int v733;
  char *v734;
  std::__shared_weak_count *v735;
  unint64_t *v736;
  unint64_t v737;
  uint64_t *v738;
  std::__shared_weak_count *v739;
  unint64_t *v740;
  unint64_t v741;
  uint64_t *v742;
  std::__shared_weak_count *v743;
  unint64_t *v744;
  unint64_t v745;
  unint64_t *v746;
  char *v747;
  std::__shared_weak_count *v748;
  unint64_t *v749;
  unint64_t v750;
  char v751;
  _QWORD *v752;
  uint64_t v753;
  uint64_t v754;
  unint64_t *v755;
  unint64_t v756;
  std::__shared_weak_count *v757;
  unint64_t *v758;
  unint64_t v759;
  char *v760;
  uint64_t v761;
  unint64_t v762;
  std::__shared_weak_count *v763;
  unint64_t *v764;
  unint64_t v765;
  unint64_t v766;
  _QWORD *v767;
  char *v768;
  _BYTE *v769;
  std::string *v770;
  std::string::value_type *v771;
  std::string *v772;
  uint64_t v773;
  _QWORD *v774;
  uint64_t v775;
  uint64_t *v776;
  std::__shared_weak_count *v777;
  unint64_t *v778;
  unint64_t v779;
  std::__shared_weak_count *v780;
  unint64_t *v781;
  unint64_t v782;
  uint64_t *v783;
  unint64_t v784;
  _QWORD *v785;
  uint64_t v786;
  uint64_t v787;
  unint64_t *v788;
  unint64_t v789;
  std::__shared_weak_count *v790;
  unint64_t *v791;
  unint64_t v792;
  char *v793;
  char *v794;
  std::__shared_weak_count *v795;
  unint64_t *v796;
  unint64_t v797;
  _QWORD *v798;
  _DWORD *v799;
  uint64_t *v800;
  std::__shared_weak_count *v801;
  unint64_t *v802;
  unint64_t v803;
  _QWORD *v804;
  uint64_t *v805;
  std::__shared_weak_count *v806;
  unint64_t *v807;
  unint64_t v808;
  uint64_t *v809;
  uint64_t *m;
  uint64_t v811;
  char *v812;
  _QWORD *v813;
  char *v814;
  uint64_t v815;
  uint64_t v816;
  unint64_t v817;
  uint64_t v818;
  unint64_t v819;
  char *v820;
  char *v821;
  unint64_t v822;
  uint64_t v823;
  char *v824;
  char *v825;
  uint64_t v826;
  __int128 v827;
  uint64_t v828;
  std::__shared_weak_count *v829;
  unint64_t *v830;
  unint64_t v831;
  uint64_t v832;
  void **v833;
  _QWORD *v834;
  char *v835;
  void *v836;
  __int128 v837;
  int16x8_t v838;
  double v839;
  double v840;
  int16x8_t v841;
  void **v842;
  char *v843;
  char *v844;
  char *v845;
  std::__shared_weak_count *v846;
  unint64_t *v847;
  unint64_t v848;
  void *v849;
  uint64_t v850;
  int v851;
  uint64_t v852;
  int v853;
  uint64_t v854;
  uint64_t v855;
  int v856;
  uint64_t v857;
  uint64_t v858;
  int v859;
  uint64_t v860;
  char v861;
  char v862;
  char v863;
  int v864;
  int v865;
  unsigned __int8 *v866;
  size_t v867;
  size_t v868;
  void *v869;
  uint64_t v870;
  uint64_t v871;
  unsigned __int16 v872;
  double v873;
  int16x8_t v874;
  double v875;
  int16x8_t v876;
  unsigned __int8 *v877;
  size_t v878;
  size_t v879;
  void *v880;
  uint64_t v881;
  uint64_t v882;
  unsigned __int16 v883;
  int16x8_t v884;
  double v885;
  double v886;
  int16x8_t v887;
  unsigned __int8 *v888;
  size_t v889;
  size_t v890;
  _BYTE *v891;
  uint64_t v892;
  uint64_t v893;
  void **v896;
  int v899;
  int v900;
  int v902;
  int v903;
  uint64_t *v904;
  std::__shared_weak_count *v905;
  unint64_t *v906;
  unint64_t v907;
  _QWORD *v908;
  uint64_t v909;
  qos_class_t v910;
  unsigned int v911;
  unsigned int v912;
  int v914;
  int v915;
  uint64_t v916;
  uint64_t *v917;
  uint64_t v918;
  int v919;
  uint64_t v920;
  int v921;
  char *v922;
  unint64_t *v923;
  uint64_t v924;
  uint64_t v925;
  _BYTE *v926;
  uint64_t v927;
  uint64_t v928;
  std::ios_base *v929;
  _BOOL4 v930;
  _QWORD *v931;
  double v932;
  double v933;
  double v934;
  int16x8_t v935;
  double v936;
  int16x8_t v937;
  uint64_t *v938;
  std::__shared_weak_count *v939;
  unint64_t *v940;
  unint64_t v941;
  uint64_t v942;
  char *v943;
  uint64_t v944;
  uint64_t v945;
  _QWORD *v946;
  _BYTE *v947;
  _BYTE *v948;
  uint64_t (**v949)();
  uint64_t v950;
  _BYTE *v951;
  std::string::size_type v952;
  char v953;
  _BYTE *v954;
  uint64_t v955;
  const char *v956;
  size_t v957;
  size_t v958;
  _BYTE *v959;
  _QWORD *v960;
  uint64_t v961;
  _BYTE *v962;
  uint64_t v963;
  _QWORD *v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  _QWORD *v968;
  uint64_t v969;
  uint64_t v970;
  _QWORD *v971;
  uint64_t v972;
  _QWORD *v973;
  _QWORD *v974;
  uint64_t v975;
  _BYTE *v976;
  uint64_t v977;
  _QWORD *v978;
  uint64_t v979;
  _QWORD *v980;
  uint64_t v981;
  _QWORD *v982;
  uint64_t v983;
  _QWORD *v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  _QWORD *v988;
  int16x8_t v989;
  const char *v990;
  const char *v991;
  size_t v992;
  void *v993;
  void *v994;
  uint64_t v995;
  uint64_t v996;
  _QWORD *v997;
  const char *v998;
  size_t v999;
  size_t v1000;
  __int128 *v1001;
  uint64_t v1002;
  uint64_t v1003;
  _QWORD *v1004;
  const char *v1005;
  size_t v1006;
  void *v1007;
  void *v1008;
  uint64_t v1009;
  uint64_t v1010;
  _QWORD *v1011;
  const char *v1012;
  size_t v1013;
  size_t v1014;
  void *v1015;
  uint64_t v1016;
  uint64_t v1017;
  _QWORD *v1018;
  const char *v1019;
  size_t v1020;
  size_t v1021;
  void *v1022;
  uint64_t v1023;
  uint64_t v1024;
  _QWORD *v1025;
  const char *v1026;
  const char *v1027;
  size_t v1028;
  const void *v1029;
  const void **v1030;
  uint64_t v1031;
  uint64_t v1032;
  _QWORD *v1033;
  const char *v1034;
  const char *v1035;
  size_t v1036;
  void *v1037;
  void *v1038;
  uint64_t v1039;
  uint64_t v1040;
  _QWORD *v1041;
  const char *v1042;
  const char *v1043;
  size_t v1044;
  void *v1045;
  void **v1046;
  uint64_t v1047;
  uint64_t v1048;
  _QWORD *v1049;
  const char *v1050;
  size_t v1051;
  size_t v1052;
  _BYTE *v1053;
  uint64_t v1054;
  uint64_t v1055;
  _QWORD *v1056;
  const char *v1057;
  size_t v1058;
  size_t v1059;
  _BYTE *v1060;
  uint64_t v1061;
  uint64_t v1062;
  _QWORD *v1063;
  _QWORD *v1064;
  _QWORD *v1065;
  void *v1066;
  _QWORD *v1067;
  _QWORD *v1068;
  void *v1069;
  void *v1070;
  _QWORD *v1071;
  uint64_t v1072;
  void **v1073;
  void *v1074;
  unint64_t v1075;
  std::__shared_weak_count *v1076;
  unint64_t *v1077;
  unint64_t v1078;
  void **v1079;
  std::__shared_weak_count *v1080;
  unint64_t *v1081;
  unint64_t v1082;
  char *v1083;
  uint64_t *v1084;
  uint64_t v1085;
  uint64_t v1086;
  unint64_t *v1087;
  unint64_t v1088;
  _QWORD *v1089;
  uint64_t v1090;
  uint64_t v1091;
  uint64_t v1092;
  unint64_t *v1093;
  unint64_t v1094;
  uint64_t v1095;
  __int128 v1096;
  char *v1097;
  __int128 v1098;
  _QWORD *v1099;
  uint64_t v1100;
  unint64_t v1101;
  void *v1102;
  _QWORD *v1103;
  uint64_t v1104;
  uint64_t v1105;
  void *v1106;
  uint64_t v1107;
  _BYTE *v1108;
  uint64_t v1109;
  _QWORD *v1110;
  uint64_t v1111;
  _QWORD *v1112;
  uint64_t v1113;
  uint64_t v1114;
  uint64_t v1115;
  pthread_mutex_t **v1116;
  char *v1117;
  _BYTE *v1118;
  _BYTE *v1119;
  int64_t v1120;
  uint64_t v1121;
  _OWORD *v1122;
  __int128 v1123;
  _BYTE *v1124;
  __int128 *v1125;
  __int128 v1126;
  __int128 v1127;
  __int128 v1128;
  __int128 v1129;
  __int128 v1130;
  __int128 v1131;
  __int128 v1132;
  __int128 v1133;
  __int128 *v1135;
  _QWORD *v1136;
  _DWORD *v1137;
  __int128 v1138;
  qos_class_t *v1139;
  __int128 v1140;
  _QWORD *v1141;
  uint64_t v1142;
  void **v1143;
  _BYTE *v1144;
  uint64_t v1145;
  void **v1146;
  uint64_t v1147;
  uint64_t v1148;
  void **v1149;
  _BYTE *v1150;
  uint64_t v1151;
  void **v1152;
  uint64_t v1153;
  uint64_t v1154;
  void **v1155;
  _BYTE *v1156;
  uint64_t v1157;
  void **v1158;
  uint64_t v1159;
  uint64_t v1160;
  uint64_t v1161;
  char *v1162;
  uint64_t *v1163;
  uint64_t *v1164;
  uint64_t v1165;
  std::__shared_weak_count *v1166;
  unint64_t *v1167;
  unint64_t v1168;
  uint64_t v1169;
  uint64_t v1170;
  uint64_t v1171;
  uint64_t v1172;
  _QWORD *v1173;
  uint64_t v1174;
  std::__shared_weak_count *v1175;
  _QWORD *v1176;
  unint64_t *v1177;
  unint64_t v1178;
  uint64_t v1179;
  std::__shared_weak_count *v1180;
  unint64_t *v1181;
  std::__shared_count v1182;
  __int128 v1183;
  __int128 v1184;
  __int128 v1185;
  __int128 v1186;
  std::__shared_count v1187;
  __int128 v1188;
  std::__shared_count v1189;
  __int128 v1190;
  __int128 v1191;
  std::__shared_count v1192;
  __int128 v1193;
  pthread_mutex_t *v1194;
  char *v1195;
  __int128 v1196;
  __int128 v1197;
  __int128 v1198;
  std::__shared_count v1199;
  __int128 v1200;
  std::__shared_count v1201;
  __int128 v1202;
  __int128 v1203;
  std::__shared_weak_count *v1204;
  unint64_t *v1205;
  unint64_t v1206;
  unint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  char v1213;
  __int128 v1214;
  __int128 v1215;
  __int128 v1216;
  __int128 v1217;
  int v1218;
  _BYTE *v1219;
  _BYTE *v1220;
  int64_t v1221;
  char *v1222;
  char *v1223;
  __int128 v1224;
  __int128 v1225;
  __int128 v1226;
  uint64_t v1227;
  uint64_t v1228;
  void *v1229;
  uint64_t v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;
  task_name_t *v1234;
  uint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  uint64_t v1240;
  pthread_mutex_t *v1241;
  uint64_t v1242;
  uint64_t v1243;
  pthread_mutex_t *v1244;
  uint64_t v1245;
  std::__shared_weak_count *v1246;
  unint64_t *v1247;
  unint64_t v1248;
  __int128 *v1249;
  uint64_t v1250;
  _QWORD *v1251;
  uint64_t v1252;
  _QWORD *v1253;
  uint64_t v1254;
  _QWORD *v1255;
  uint64_t v1256;
  _QWORD *v1257;
  uint64_t v1258;
  void **v1259;
  uint64_t v1260;
  void **v1261;
  uint64_t v1262;
  const void **v1263;
  uint64_t v1264;
  uint64_t *v1265;
  std::__shared_weak_count *v1266;
  unint64_t *v1267;
  unint64_t v1268;
  std::string *v1269;
  uint64_t v1270;
  _QWORD *v1271;
  uint64_t v1272;
  _QWORD *v1273;
  uint64_t v1274;
  uint64_t *v1275;
  unint64_t v1276;
  __int128 v1277;
  char v1278;
  _QWORD *v1279;
  uint64_t v1280;
  _BYTE *v1281;
  uint64_t v1282;
  _BYTE *v1283;
  uint64_t v1284;
  uint64_t v1285;
  uint64_t v1286;
  uint64_t v1287;
  uint64_t v1288;
  unint64_t *v1289;
  unint64_t v1290;
  std::__shared_weak_count *v1291;
  unint64_t *v1292;
  unint64_t v1293;
  uint64_t *v1294;
  uint64_t *v1295;
  uint64_t v1296;
  uint64_t v1297;
  unint64_t *v1298;
  unint64_t v1299;
  std::__shared_weak_count *v1300;
  unint64_t *v1301;
  unint64_t v1302;
  uint64_t v1303;
  uint64_t v1304;
  unint64_t *v1305;
  unint64_t v1306;
  std::__shared_weak_count *v1307;
  unint64_t *v1308;
  unint64_t v1309;
  _QWORD *v1310;
  uint64_t v1311;
  uint64_t v1312;
  unint64_t *v1313;
  unint64_t v1314;
  std::__shared_weak_count *v1315;
  unint64_t *v1316;
  unint64_t v1317;
  void **v1318;
  void **v1319;
  uint64_t v1320;
  uint64_t *v1321;
  uint64_t v1322;
  _QWORD *v1323;
  uint64_t v1324;
  _QWORD *v1325;
  uint64_t v1326;
  char *v1327;
  char *v1328;
  _BYTE *v1329;
  __int128 v1330;
  _QWORD *v1331;
  uint64_t v1332;
  char v1333;
  _QWORD *v1334;
  uint64_t v1335;
  char *v1336;
  char *v1337;
  _BYTE *v1338;
  __int128 v1339;
  _QWORD *v1340;
  uint64_t v1341;
  _QWORD *v1342;
  _QWORD *v1343;
  uint64_t v1344;
  uint64_t *v1345;
  uint64_t *n;
  uint64_t v1347;
  char *v1348;
  _QWORD *v1349;
  char *v1350;
  uint64_t v1351;
  uint64_t v1352;
  unint64_t v1353;
  uint64_t v1354;
  unint64_t v1355;
  char *v1356;
  char *v1357;
  unint64_t v1358;
  uint64_t v1359;
  char *v1360;
  char *v1361;
  uint64_t v1362;
  __int128 v1363;
  uint64_t v1364;
  std::__shared_weak_count *v1365;
  unint64_t *v1366;
  unint64_t v1367;
  uint64_t *v1368;
  _QWORD *v1369;
  uint64_t v1370;
  char *v1371;
  uint64_t v1372;
  char *v1373;
  char *v1374;
  char *v1375;
  std::__shared_weak_count *v1376;
  unint64_t *v1377;
  unint64_t v1378;
  void *v1379;
  uint64_t *v1380;
  uint64_t v1381;
  _QWORD *v1382;
  _QWORD *v1383;
  uint64_t v1384;
  _QWORD *v1385;
  uint64_t v1386;
  _QWORD *v1387;
  _QWORD *v1388;
  uint64_t v1389;
  _BYTE *v1390;
  __int128 v1391;
  _QWORD *v1392;
  uint64_t v1393;
  char v1394;
  uint64_t v1395;
  _QWORD *v1396;
  _QWORD *v1397;
  uint64_t v1398;
  _BYTE *v1399;
  __int128 v1400;
  _QWORD *v1401;
  uint64_t v1402;
  char v1403;
  uint64_t v1404;
  _QWORD *v1405;
  _QWORD *v1406;
  uint64_t v1407;
  _BYTE *v1408;
  __int128 v1409;
  _QWORD *v1410;
  uint64_t v1411;
  char v1412;
  _QWORD *v1413;
  uint64_t v1414;
  _QWORD *v1415;
  _QWORD *v1416;
  uint64_t v1417;
  _BYTE *v1418;
  __int128 v1419;
  _QWORD *v1420;
  uint64_t v1421;
  _QWORD *v1422;
  _QWORD *v1423;
  uint64_t v1424;
  _QWORD *v1425;
  _QWORD *v1426;
  uint64_t v1427;
  _QWORD *v1428;
  _QWORD *v1429;
  uint64_t v1430;
  uint64_t *v1431;
  uint64_t *ii;
  uint64_t v1433;
  char *v1434;
  _QWORD *v1435;
  char *v1436;
  uint64_t v1437;
  uint64_t v1438;
  unint64_t v1439;
  uint64_t v1440;
  unint64_t v1441;
  char *v1442;
  char *v1443;
  unint64_t v1444;
  uint64_t v1445;
  char *v1446;
  char *v1447;
  uint64_t v1448;
  __int128 v1449;
  uint64_t v1450;
  std::__shared_weak_count *v1451;
  unint64_t *v1452;
  unint64_t v1453;
  _QWORD *v1454;
  uint64_t v1455;
  uint64_t v1456;
  void *v1457;
  std::__shared_weak_count *v1458;
  unint64_t *v1459;
  unint64_t v1460;
  char *v1461;
  uint64_t v1462;
  uint64_t *v1463;
  uint64_t *jj;
  uint64_t v1465;
  char *v1466;
  _QWORD *v1467;
  char *v1468;
  uint64_t v1469;
  uint64_t v1470;
  unint64_t v1471;
  uint64_t v1472;
  unint64_t v1473;
  char *v1474;
  char *v1475;
  unint64_t v1476;
  uint64_t v1477;
  char *v1478;
  char *v1479;
  uint64_t v1480;
  __int128 v1481;
  uint64_t v1482;
  std::__shared_weak_count *v1483;
  unint64_t *v1484;
  unint64_t v1485;
  _QWORD *v1486;
  uint64_t v1487;
  uint64_t v1488;
  void *v1489;
  std::__shared_weak_count *v1490;
  unint64_t *v1491;
  unint64_t v1492;
  char *v1493;
  uint64_t v1494;
  uint64_t *v1495;
  uint64_t *kk;
  uint64_t v1497;
  char *v1498;
  _QWORD *v1499;
  char *v1500;
  uint64_t v1501;
  uint64_t v1502;
  unint64_t v1503;
  uint64_t v1504;
  unint64_t v1505;
  char *v1506;
  char *v1507;
  unint64_t v1508;
  uint64_t v1509;
  char *v1510;
  char *v1511;
  uint64_t v1512;
  __int128 v1513;
  uint64_t v1514;
  std::__shared_weak_count *v1515;
  unint64_t *v1516;
  unint64_t v1517;
  _QWORD *v1518;
  uint64_t v1519;
  uint64_t v1520;
  void *v1521;
  std::__shared_weak_count *v1522;
  unint64_t *v1523;
  unint64_t v1524;
  char *v1525;
  uint64_t v1526;
  uint64_t v1527;
  uint64_t v1528;
  uint64_t v1529;
  _QWORD *v1530;
  uint64_t v1531;
  uint64_t v1532;
  std::ios_base *v1533;
  BOOL v1534;
  uint64_t v1535;
  uint64_t v1536;
  uint64_t v1537;
  uint64_t v1538;
  std::ios_base *v1539;
  int8x16_t v1540;
  double v1541;
  int32x4_t v1542;
  const char *v1543;
  const char *v1544;
  size_t v1545;
  std::string::size_type v1546;
  std::string *v1547;
  uint64_t v1548;
  uint64_t v1549;
  _QWORD *v1550;
  int8x16_t v1551;
  double v1552;
  int32x4_t v1553;
  const char *v1554;
  const char *v1555;
  size_t v1556;
  size_t v1557;
  _BYTE *v1558;
  uint64_t v1559;
  uint64_t v1560;
  _QWORD *v1561;
  int8x16_t v1562;
  double v1563;
  int32x4_t v1564;
  const char *v1565;
  const char *v1566;
  size_t v1567;
  void *v1568;
  void *v1569;
  uint64_t v1570;
  uint64_t v1571;
  _QWORD *v1572;
  int8x16_t v1573;
  double v1574;
  int32x4_t v1575;
  const char *v1576;
  const char *v1577;
  size_t v1578;
  size_t v1579;
  __int128 *v1580;
  uint64_t v1581;
  uint64_t v1582;
  _QWORD *v1583;
  const char *v1584;
  const char *v1585;
  size_t v1586;
  void *v1587;
  void *v1588;
  uint64_t v1589;
  uint64_t v1590;
  _QWORD *v1591;
  const char *v1592;
  size_t v1593;
  size_t v1594;
  void *v1595;
  uint64_t v1596;
  uint64_t v1597;
  _QWORD *v1598;
  _QWORD *v1599;
  _QWORD *v1600;
  uint64_t v1601;
  void **v1602;
  void *v1603;
  _BYTE *v1604;
  uint64_t v1605;
  char *v1606;
  _QWORD *v1607;
  NSObject *v1608;
  dispatch_queue_t v1609;
  NSObject *v1610;
  int v1611;
  void **v1613;
  _QWORD *v1614;
  std::__shared_weak_count *v1615;
  unint64_t *v1616;
  unint64_t v1617;
  std::runtime_error *exception;
  std::runtime_error *v1619;
  std::runtime_error *v1620;
  std::runtime_error *v1621;
  std::runtime_error *v1622;
  std::runtime_error *v1623;
  uint64_t v1624;
  std::runtime_error *v1625;
  uint64_t v1626;
  uint64_t v1627;
  uint64_t v1628;
  uint64_t v1629;
  uint64_t v1630;
  _BYTE v1631[48];
  uint64_t v1632;
  _QWORD *v1633;
  _OWORD v1634[2];
  __int128 v1635;
  uint64_t *v1636;
  _QWORD *v1637;
  uint64_t v1638;
  uint64_t **v1639;
  char *v1640;
  std::__shared_weak_count *v1641;
  __int128 v1642;
  uint64_t v1643;
  _BYTE *v1644;
  void *v1645[2];
  uint64_t v1646;
  unint64_t v1647;
  std::__shared_weak_count *v1648;
  uint64_t v1649;
  std::__shared_weak_count *v1650;
  uint64_t v1651;
  std::__shared_weak_count *v1652;
  uint64_t v1653;
  std::__shared_weak_count *v1654;
  uint64_t v1655;
  std::__shared_weak_count *v1656;
  uint64_t v1657;
  std::__shared_weak_count *v1658;
  uint64_t v1659;
  std::__shared_weak_count *v1660;
  uint64_t v1661;
  std::__shared_weak_count *v1662;
  uint64_t v1663;
  std::__shared_weak_count *v1664;
  uint64_t v1665;
  std::__shared_weak_count *v1666;
  uint64_t v1667;
  std::__shared_weak_count *v1668;
  char *v1669;
  std::__shared_weak_count *v1670;
  std::__fs::filesystem::path v1671;
  mach_msg_type_number_t task_info_outCnt[5];
  char v1673;
  char v1674[8];
  void *v1675[2];
  __int128 v1676;
  __int128 v1677;
  std::string v1678;
  std::string *v1679;
  _BYTE v1680[24];
  _BYTE *v1681;
  _BYTE v1682[24];
  _BYTE *v1683;
  _QWORD v1684[3];
  _QWORD *v1685;
  _QWORD v1686[3];
  _QWORD *v1687;
  _BYTE v1688[24];
  _BYTE *v1689;
  std::string __dst;
  std::string *v1691;
  char v1692;
  _QWORD v1693[3];
  _QWORD *v1694;
  uint64_t v1695;
  char v1696[8];
  char v1697[16];
  __int128 v1698;
  char v1699;
  __int128 v1700;
  uint64_t v1701;
  char v1702[8];
  char v1703[16];
  uint64_t v1704;
  char v1705[8];
  char v1706[16];
  uint64_t v1707;
  int v1708;
  __int16 v1709;
  uint64_t v1710;
  char v1711;
  void *v1712[3];
  void **v1713;
  void *v1714[2];
  unint64_t v1715;
  void **v1716;
  const void *v1717[3];
  const void **v1718;
  void *v1719;
  size_t v1720;
  unint64_t v1721;
  void **v1722;
  void *v1723;
  size_t v1724;
  unint64_t v1725;
  void **v1726;
  void *v1727[2];
  unint64_t v1728;
  void **v1729;
  _BYTE __p[160];
  char v1731;
  _BYTE v1732[32];
  _QWORD v1733[2];
  void *v1734;
  void *v1735;
  _DWORD *v1736;
  __int128 v1737;
  __int128 v1738;
  __int128 v1739;
  qos_class_t v1740;
  _BYTE v1741[112];
  __int128 v1742;
  _QWORD v1743[2];
  __int128 v1744;
  __int128 v1745;
  __int128 v1746;
  __int128 v1747;
  __int128 v1748;
  uint64_t v1749;
  uint64_t v1750;
  __int128 v1751;
  __int128 v1752;
  __int128 v1753;
  uint64_t v1754;
  char v1755;
  uint64_t v1756;
  char v1757;
  _BYTE v1758[24];
  _BYTE *v1759;
  _BYTE v1760[24];
  _BYTE *v1761;
  int v1762;
  __int16 v1763;
  char v1764;
  uint64_t v1765;
  char v1766;
  uint64_t v1767;
  uint64_t v1768;
  uint64_t v1769;
  void *v1770[2];
  __int128 v1771;
  int64x2_t v1772;
  char v1773;
  char v1774;
  char v1775;
  int v1776;
  __int128 v1777;
  uint64_t v1778;
  unint64_t v1779;
  __int128 v1780;
  uint64_t v1781;
  char v1782;
  __int128 v1783;
  char v1784;
  uint64_t v1785;
  uint64_t v1786;
  __int16 v1787;
  uint64_t v1788;
  uint64_t v1789;
  char v1790;
  uint64_t v1791;
  __int16 v1792;
  __int128 v1793;
  uint64_t v1794;
  __int128 v1795;
  __int16 v1796;
  uint64_t v1797;
  int64x2_t v1798;
  __int128 v1799;
  __int16 v1800;
  char v1801;
  uint64_t v1802;
  int v1803;
  uint64_t v1804;
  __int128 v1805;
  __int128 v1806;
  uint64_t v1807;
  __int16 v1808;
  uint64_t v1809;
  uint64_t v1810;
  __int128 v1811;
  __int16 v1812;
  char v1813;
  uint64_t v1814;
  __int16 v1815;
  uint64_t v1816;
  uint64_t v1817;
  __int128 v1818;
  __int128 v1819;
  uint64_t v1820;
  __int128 v1821;
  char v1822;
  uint64_t v1823;
  char v1824;
  _BYTE v1825[24];
  _BYTE *v1826;
  _BYTE v1827[24];
  _BYTE *v1828;
  int v1829;
  __int16 v1830;
  char v1831;
  uint64_t v1832;
  char v1833;
  uint64_t v1834;
  _BYTE __src[64];
  __int128 v1836;
  __int128 v1837;
  _BYTE v1838[32];
  _BYTE v1839[80];
  _BYTE v1840[32];
  __int128 v1841;
  __int128 v1842;
  __int128 v1843;
  __int128 v1844;
  __int128 v1845;
  __int128 v1846;
  _BYTE v1847[56];
  __int128 v1848;
  __int128 v1849;
  __int128 v1850;
  __int128 v1851;
  __int128 v1852;
  __int128 v1853;
  int v1854;
  char v1855;
  void *v1856[3];
  __int128 v1857;
  unint64_t v1858;
  __int128 *v1859;
  _BYTE v1860[112];
  uint64_t v1861;
  _BYTE v1862[16];
  unint64_t v1863;
  uint64_t v1864;

  *(_QWORD *)&v1635 = a3;
  v1638 = a2;
  v1864 = *MEMORY[0x24BDAC8D0];
  *a1 = &off_250AF7A20;
  a1[1] = 0;
  v1636 = a1 + 1;
  v1637 = a1;
  a1[2] = 0;
  v3 = (char *)operator new(0x858uLL);
  *((_QWORD *)v3 + 1) = 0;
  *((_QWORD *)v3 + 2) = 0;
  *(_QWORD *)v3 = &off_250AF7DF8;
  bzero(v3 + 24, 0x840uLL);
  *(_OWORD *)(v3 + 232) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  *((_DWORD *)v3 + 48) = 1065353216;
  *(_OWORD *)(v3 + 216) = 0u;
  *((_QWORD *)v3 + 38) = 0;
  *((_QWORD *)v3 + 46) = 0;
  *((_OWORD *)v3 + 27) = 0u;
  *((_OWORD *)v3 + 28) = 0u;
  *((_OWORD *)v3 + 29) = 0u;
  *((_OWORD *)v3 + 30) = 0u;
  *((_OWORD *)v3 + 31) = 0u;
  *((_QWORD *)v3 + 64) = 0;
  *((_QWORD *)v3 + 65) = &off_250AE94F0;
  *((_QWORD *)v3 + 66) = 0;
  *((_QWORD *)v3 + 67) = 0;
  __asm { FMOV            V0.2S, #1.0 }
  *((_QWORD *)v3 + 68) = _D0;
  *((_QWORD *)v3 + 70) = 0;
  *(_OWORD *)(v3 + 568) = xmmword_239F0C0D0;
  *((_DWORD *)v3 + 146) = 65793;
  *((_DWORD *)v3 + 147) = 1075838976;
  *((_OWORD *)v3 + 39) = 0u;
  *((_OWORD *)v3 + 38) = 0u;
  *((_OWORD *)v3 + 37) = 0u;
  *((_QWORD *)v3 + 80) = 8000000;
  *(_OWORD *)(v3 + 652) = xmmword_239F0C0E0;
  v3[668] = 2;
  *((_DWORD *)v3 + 168) = 3;
  *(_OWORD *)(v3 + 680) = xmmword_239F0C0F0;
  v3[696] = 1;
  *((_DWORD *)v3 + 175) = 0x40000000;
  *((_OWORD *)v3 + 44) = xmmword_239F0C100;
  *((_OWORD *)v3 + 45) = xmmword_239F0BFA0;
  *((_QWORD *)v3 + 92) = 5;
  *(_OWORD *)(v3 + 744) = xmmword_239F0C110;
  *(_OWORD *)(v3 + 760) = xmmword_239F0C120;
  *((_DWORD *)v3 + 196) = 1045220557;
  *((_QWORD *)v3 + 99) = 3;
  *((_DWORD *)v3 + 200) = 1077936128;
  *((_QWORD *)v3 + 101) = 3;
  *((_QWORD *)v3 + 102) = 0x3E4CCCCD41A00000;
  *((_DWORD *)v3 + 207) = 1065353216;
  *((_QWORD *)v3 + 104) = 0x41F000003C23D70ALL;
  *((_QWORD *)v3 + 105) = 0x3F50624DD2F1A9FCLL;
  *((int64x2_t *)v3 + 53) = vdupq_n_s64(0x1EuLL);
  *((_DWORD *)v3 + 216) = 1022739087;
  v3[872] = 1;
  *((_DWORD *)v3 + 219) = 1106247680;
  *((_QWORD *)v3 + 110) = 0x412000003C23D70ALL;
  *((_QWORD *)v3 + 111) = 200;
  *((int32x2_t *)v3 + 112) = vdup_n_s32(0x3C23D70Au);
  *((_QWORD *)v3 + 113) = 1;
  *((_DWORD *)v3 + 228) = 1050253722;
  *((_QWORD *)v3 + 115) = 1;
  *((_OWORD *)v3 + 58) = xmmword_239F0C130;
  *((_QWORD *)v3 + 118) = 0x42C8000000000000;
  v3[952] = 1;
  *(_QWORD *)(v3 + 956) = 0x837D1B717;
  *(_OWORD *)(v3 + 964) = xmmword_239F0C140;
  *(_OWORD *)(v3 + 980) = xmmword_239F0C150;
  v3[996] = 1;
  *((_QWORD *)v3 + 125) = 2147483650000000;
  v3[1008] = 0;
  *(_WORD *)(v3 + 649) = 257;
  v3[1032] = 1;
  *((_DWORD *)v3 + 259) = 1056964608;
  *((_QWORD *)v3 + 130) = 0x4000000000000000;
  *((_QWORD *)v3 + 131) = 0x12C3F800000;
  *((_QWORD *)v3 + 132) = 0x3F8000003F000000;
  *((_DWORD *)v3 + 266) = 5;
  v3[1068] = 1;
  *(_QWORD *)(v3 + 1076) = 0x103E4CCCCDLL;
  *((_QWORD *)v3 + 136) = 0x300000015;
  v3[1096] = 1;
  *(_QWORD *)(v3 + 1100) = 0x313E4CCCCDLL;
  *((_QWORD *)v3 + 139) = 100000000;
  *((_OWORD *)v3 + 70) = 0u;
  *((_OWORD *)v3 + 71) = 0u;
  *((_OWORD *)v3 + 72) = 0u;
  *((_QWORD *)v3 + 146) = 10240;
  *(_QWORD *)(v3 + 1180) = 0x43F800000;
  *(_QWORD *)(v3 + 1188) = 0x3A83126F41200000;
  *((_QWORD *)v3 + 150) = 256000;
  *((_DWORD *)v3 + 302) = 8000000;
  *((_QWORD *)v3 + 152) = 20000000;
  *((_DWORD *)v3 + 306) = 1050253722;
  v3[1228] = 1;
  *((_WORD *)v3 + 616) = 0;
  v3[1234] = 1;
  *((_DWORD *)v3 + 309) = 200000;
  *((_DWORD *)v3 + 310) = 16777473;
  v3[1244] = 1;
  *((_DWORD *)v3 + 312) = 20;
  v3[1252] = 1;
  *((_DWORD *)v3 + 326) = 0;
  *(_OWORD *)(v3 + 1288) = 0u;
  *(_OWORD *)(v3 + 1272) = 0u;
  *(_OWORD *)(v3 + 1256) = 0u;
  *((_QWORD *)v3 + 164) = 256000;
  *((_QWORD *)v3 + 165) = 0x200000000080;
  *((_QWORD *)v3 + 166) = 0x4080000000000000;
  *((_WORD *)v3 + 668) = 0;
  sub_239586CA4((uint64_t)(v3 + 1344));
  v3[1896] = 0;
  v3[1488] = 0;
  *((_OWORD *)v3 + 119) = 0u;
  *((_OWORD *)v3 + 120) = 0u;
  *((_DWORD *)v3 + 484) = 1065353216;
  *(_OWORD *)(v3 + 1944) = 0u;
  *(_OWORD *)(v3 + 1960) = 0u;
  *((_DWORD *)v3 + 494) = 1065353216;
  *((_OWORD *)v3 + 124) = 0u;
  *((_OWORD *)v3 + 125) = 0u;
  *((_DWORD *)v3 + 504) = 1065353216;
  *(_OWORD *)(v3 + 2024) = 0u;
  *((_DWORD *)v3 + 514) = 1065353216;
  *(_OWORD *)(v3 + 2040) = 0u;
  sub_2397A1618((pthread_mutex_t *)(v3 + 2064));
  *((_WORD *)v3 + 1066) = 256;
  v7 = v1637;
  v1639 = (uint64_t **)(v1637 + 3);
  v1637[3] = v3 + 24;
  v1637[4] = v3;
  v8 = operator new(0x20uLL);
  v8[1] = 0;
  v8[2] = 0;
  *v8 = &off_250AF7E30;
  v7[5] = v8 + 3;
  v7[6] = v8;
  *(_OWORD *)__src = xmmword_239F10B1B;
  *(int16x8_t *)&__src[16] = xmmword_239F10B2B[0];
  strcpy(&__src[31], "V_L[ZWQ");
  sub_2396F0804(__src, 1.63761957e69, xmmword_239F10B2B[0], v9, v10);
  v12 = v11;
  v13 = strlen(v11);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = v13;
  if (v13 >= 0x17)
  {
    v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v19 = v13 | 7;
    v20 = v19 + 1;
    p_dst = (std::string *)operator new(v19 + 1);
    __dst.__r_.__value_.__r.__words[2] = v20 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    __dst.__r_.__value_.__l.__size_ = v17;
    goto LABEL_8;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v13;
  p_dst = &__dst;
  if (v13)
LABEL_8:
    memmove(p_dst, v12, v17);
  p_dst->__r_.__value_.__s.__data_[v17] = 0;
  *(_OWORD *)v1741 = xmmword_239F10971;
  *(_OWORD *)&v1741[16] = *(_OWORD *)dbl_239F10981;
  *(_OWORD *)&v1741[32] = xmmword_239F10991;
  strcpy(&v1741[48], "oQm");
  v21 = sub_239B29B70(v1741, 3.10165196e141, dbl_239F10981[0], v14, v15, v16);
  v22 = strlen((const char *)v21);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    *(_QWORD *)&__p[16] = v26 | 0x8000000000000000;
    *(_QWORD *)__p = v24;
    *(_QWORD *)&__p[8] = v23;
    goto LABEL_16;
  }
  __p[23] = v22;
  v24 = __p;
  if (v22)
LABEL_16:
    memmove(v24, v21, v23);
  v24[v23] = 0;
  sub_2396284D4((uint64_t)__p, 0, 0, (uint64_t)v1741);
  if (!v1741[24])
  {
    v28 = 0;
    v29 = 0;
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_64;
    goto LABEL_24;
  }
  if ((v1741[23] & 0x80000000) != 0)
  {
    if (*(_QWORD *)&v1741[8] == 4)
    {
      v35 = *(void **)v1741;
      if (**(_DWORD **)v1741 == 1869903201)
      {
        v29 = 1;
        v28 = 99;
        goto LABEL_62;
      }
      goto LABEL_60;
    }
    if (*(_QWORD *)&v1741[8] == 7)
    {
      v35 = *(void **)v1741;
      if (**(_DWORD **)v1741 == 1634100580 && *(_DWORD *)(*(_QWORD *)v1741 + 3) == 1953264993)
      {
        v28 = 0;
        v29 = 1;
        goto LABEL_62;
      }
      if (**(_DWORD **)v1741 == 1818850421 && *(_DWORD *)(*(_QWORD *)v1741 + 3) == 2037672300)
      {
        v28 = 1;
        v29 = 1;
LABEL_62:
        operator delete(v35);
LABEL_63:
        if ((__p[23] & 0x80000000) == 0)
          goto LABEL_64;
LABEL_24:
        operator delete(*(void **)__p);
        goto LABEL_64;
      }
      goto LABEL_60;
    }
    if (*(_QWORD *)&v1741[8] != 10)
    {
LABEL_60:
      v29 = 0;
      v28 = 0;
      if ((v1741[23] & 0x80) == 0)
        goto LABEL_63;
      goto LABEL_61;
    }
    v27 = *(_BYTE **)v1741;
LABEL_29:
    v30 = *(_QWORD *)v27;
    v31 = *((unsigned __int16 *)v27 + 4);
    if (v30 == 0x756F72676B636162 && v31 == 25710)
    {
      v28 = 2;
      v29 = 1;
      if ((v1741[23] & 0x80) == 0)
        goto LABEL_63;
LABEL_61:
      v35 = *(void **)v1741;
      goto LABEL_62;
    }
    goto LABEL_60;
  }
  if (v1741[23] == 4)
  {
    if (*(_DWORD *)v1741 == 1869903201)
    {
      v29 = 1;
      v28 = 99;
      if ((__p[23] & 0x80000000) == 0)
        goto LABEL_64;
      goto LABEL_24;
    }
    goto LABEL_60;
  }
  if (v1741[23] != 7)
  {
    if (v1741[23] != 10)
      goto LABEL_60;
    v27 = v1741;
    goto LABEL_29;
  }
  if (*(_DWORD *)v1741 == 1634100580 && *(_DWORD *)&v1741[3] == 1953264993)
  {
    v28 = 0;
  }
  else
  {
    if (*(_DWORD *)v1741 != 1818850421 || *(_DWORD *)&v1741[3] != 2037672300)
      goto LABEL_60;
    v28 = 1;
  }
  v29 = 1;
  if ((__p[23] & 0x80000000) != 0)
    goto LABEL_24;
LABEL_64:
  v38 = *(_DWORD *)(v1638 + 76);
  if (v29)
    v38 = v28;
  switch(v38)
  {
    case 99:
      v39 = 9;
      if (*(_DWORD *)(v1638 + 72) != 1)
      {
        if (((*(_DWORD *)(v1638 + 160) < 4u) & (0xCu >> (*(_DWORD *)(v1638 + 160) & 0xF))) != 0)
          v39 = 9;
        else
          v39 = 21;
      }
      v40 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_72;
      break;
    case 2:
      v39 = 9;
      v40 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_72:
        sub_23941A7F8(v1847, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
        goto LABEL_79;
      }
      break;
    case 1:
      v39 = 17;
      v40 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_72;
      break;
    default:
      v39 = 21;
      v40 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_72;
      break;
  }
  *(std::string *)v1847 = __dst;
LABEL_79:
  *(_DWORD *)&v1847[24] = v39;
  sub_2397A1CD4((uint64_t *)v1860, (__int128 *)v1847);
  v41 = operator new(0x178uLL);
  v41[1] = 0;
  v41[2] = 0;
  *v41 = &off_250ADB8B0;
  v1637[7] = sub_2397A2A4C((uint64_t)(v41 + 3), (uint64_t)v1860);
  v1637[8] = v41;
  if ((v1860[39] & 0x80000000) == 0)
  {
    if ((v1847[23] & 0x80000000) == 0)
      goto LABEL_81;
LABEL_86:
    operator delete(*(void **)v1847);
    if ((v40 & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_87;
  }
  operator delete(*(void **)&v1860[16]);
  if ((v1847[23] & 0x80000000) != 0)
    goto LABEL_86;
LABEL_81:
  if ((v40 & 0x80000000) == 0)
    goto LABEL_82;
LABEL_87:
  operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_82:
  v42 = v1637;
  v1637[21] = 0;
  v1637[12] = 0;
  v1637[16] = 0;
  v1637[22] = 0;
  v1637[23] = 0;
  v1693[0] = &off_250AF7E68;
  v1693[1] = sub_239B82554;
  v1694 = v1693;
  sub_2396C98BC((uint64_t)v1693, v1637 + 24);
  v43 = v1694;
  if (v1694 == v1693)
  {
    v44 = 4;
    v43 = v1693;
    goto LABEL_89;
  }
  if (v1694)
  {
    v44 = 5;
LABEL_89:
    (*(void (**)(void))(*v43 + 8 * v44))();
  }
  v45 = CFUUIDCreate(0);
  sub_2396293E8((int)v1741, v45);
  sub_2396293EC((unint64_t *)v1741, (uint64_t)(v42 + 28));
  v46 = *(std::__shared_weak_count **)&v1741[8];
  if (*(_QWORD *)&v1741[8])
  {
    v47 = (unint64_t *)(*(_QWORD *)&v1741[8] + 8);
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  sub_239B71020(v1860);
  if (**(int **)(*(_QWORD *)v1860 + 56) <= 3)
  {
    if (*(_BYTE *)(*(_QWORD *)v1860 + 72))
    {
      *(_QWORD *)v1741 = v1860;
      *(std::chrono::steady_clock::time_point *)&v1741[8] = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&v1741[16] = std::chrono::system_clock::now();
      *(_DWORD *)&v1741[24] = 3;
      *(_QWORD *)&v1741[32] = "unknown file";
      *(_DWORD *)&v1741[40] = 190;
      *(_QWORD *)&v1741[64] = 0;
      *(_QWORD *)&v1741[48] = "unknown function";
      *(_QWORD *)&v1741[56] = 0;
      v49 = operator new();
      sub_2394988CC(v49);
      v50 = (_QWORD *)operator new();
      *v50 = &unk_250AF1978;
      v50[1] = 0;
      v50[2] = 0;
      v50[3] = v49;
      *(_QWORD *)&v1741[56] = v49;
      *(_QWORD *)&v1741[64] = v50;
      sub_239458500((_QWORD *)(v49 + 16), (uint64_t)"Creating Session", 16);
      sub_239A47720((uint64_t)v1741);
      sub_239A47720((uint64_t)v1741);
      v51 = *(std::__shared_weak_count **)&v1741[64];
      if (*(_QWORD *)&v1741[64])
      {
        v52 = (unint64_t *)(*(_QWORD *)&v1741[64] + 8);
        do
          v53 = __ldaxr(v52);
        while (__stlxr(v53 - 1, v52));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
    }
  }
  sub_239B71020(v1860);
  if (**(int **)(*(_QWORD *)v1860 + 56) <= 3)
  {
    if (*(_BYTE *)(*(_QWORD *)v1860 + 72))
    {
      *(_QWORD *)v1741 = v1860;
      *(std::chrono::steady_clock::time_point *)&v1741[8] = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&v1741[16] = std::chrono::system_clock::now();
      *(_DWORD *)&v1741[24] = 3;
      *(_QWORD *)&v1741[32] = "unknown file";
      *(_DWORD *)&v1741[40] = 198;
      *(_QWORD *)&v1741[64] = 0;
      *(_QWORD *)&v1741[48] = "unknown function";
      *(_QWORD *)&v1741[56] = 0;
      sub_239A002AC((uint64_t)v1741, "CorePhotogrammetry version: %d.%d.%d.%s", 2, 57, 0, "000000");
      sub_239A47720((uint64_t)v1741);
      sub_239A47720((uint64_t)v1741);
      v54 = *(std::__shared_weak_count **)&v1741[64];
      if (*(_QWORD *)&v1741[64])
      {
        v55 = (unint64_t *)(*(_QWORD *)&v1741[64] + 8);
        do
          v56 = __ldaxr(v55);
        while (__stlxr(v56 - 1, v55));
        if (!v56)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
        }
      }
    }
  }
  sub_2394988CC((uint64_t)v1741);
  v57 = *(_QWORD *)(v1638 + 40);
  for (i = *(_QWORD *)(v1638 + 48); v57 != i; v57 += 8)
  {
    v59 = (_QWORD *)std::ostream::operator<<();
    sub_239458500(v59, (uint64_t)" ", 1);
  }
  sub_239B71020(v1847);
  if (**(int **)(*(_QWORD *)v1847 + 56) <= 3 && *(_BYTE *)(*(_QWORD *)v1847 + 72))
  {
    *(_QWORD *)v1860 = v1847;
    *(std::chrono::steady_clock::time_point *)&v1860[8] = std::chrono::steady_clock::now();
    *(std::chrono::system_clock::time_point *)&v1860[16] = std::chrono::system_clock::now();
    *(_DWORD *)&v1860[24] = 3;
    *(_QWORD *)&v1860[32] = "unknown file";
    *(_DWORD *)&v1860[40] = 210;
    *(_QWORD *)&v1860[64] = 0;
    *(_QWORD *)&v1860[48] = "unknown function";
    *(_QWORD *)&v1860[56] = 0;
    std::stringbuf::str();
    if (__src[23] >= 0)
      v60 = __src;
    else
      v60 = *(const char **)__src;
    sub_239A002AC((uint64_t)v1860, "Selected Metal devices: %s", v60);
    if ((__src[23] & 0x80000000) != 0)
      operator delete(*(void **)__src);
    sub_239A47720((uint64_t)v1860);
    sub_239A47720((uint64_t)v1860);
    v61 = *(std::__shared_weak_count **)&v1860[64];
    if (*(_QWORD *)&v1860[64])
    {
      v62 = (unint64_t *)(*(_QWORD *)&v1860[64] + 8);
      do
        v63 = __ldaxr(v62);
      while (__stlxr(v63 - 1, v62));
      if (!v63)
      {
        ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
        std::__shared_weak_count::__release_weak(v61);
      }
    }
  }
  sub_2397A98A4(__src);
  v64 = *(_QWORD *)__src;
  v65 = *(_QWORD *)&__src[8];
  if (*(_QWORD *)__src != *(_QWORD *)&__src[8])
  {
    do
    {
      sub_239B71020(__p);
      if (**(int **)(*(_QWORD *)__p + 56) <= 3 && *(_BYTE *)(*(_QWORD *)__p + 72))
      {
        *(_QWORD *)v1860 = __p;
        *(std::chrono::steady_clock::time_point *)&v1860[8] = std::chrono::steady_clock::now();
        *(std::chrono::system_clock::time_point *)&v1860[16] = std::chrono::system_clock::now();
        *(_DWORD *)&v1860[24] = 3;
        *(_QWORD *)&v1860[32] = "unknown file";
        *(_DWORD *)&v1860[40] = 218;
        *(_QWORD *)&v1860[48] = "unknown function";
        *(_QWORD *)&v1860[56] = 0;
        *(_QWORD *)&v1860[64] = 0;
        sub_2397A9700(v64, v1847);
        if (v1847[23] >= 0)
          v66 = v1847;
        else
          v66 = *(const char **)v1847;
        sub_239A002AC((uint64_t)v1860, "Metal device: %s", v66);
        if ((v1847[23] & 0x80000000) != 0)
          operator delete(*(void **)v1847);
        sub_239A47720((uint64_t)v1860);
        sub_239A47720((uint64_t)v1860);
        v67 = *(std::__shared_weak_count **)&v1860[64];
        if (*(_QWORD *)&v1860[64])
        {
          v68 = (unint64_t *)(*(_QWORD *)&v1860[64] + 8);
          do
            v69 = __ldaxr(v68);
          while (__stlxr(v69 - 1, v68));
          if (!v69)
          {
            ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
            std::__shared_weak_count::__release_weak(v67);
          }
        }
      }
      v64 += 16;
    }
    while (v64 != v65);
    v64 = *(_QWORD *)__src;
  }
  if (v64)
  {
    v70 = *(_QWORD *)&__src[8];
    v71 = (void *)v64;
    if (*(_QWORD *)&__src[8] != v64)
    {
      do
      {
        v72 = *(std::__shared_weak_count **)(v70 - 8);
        if (v72)
        {
          p_shared_owners = (unint64_t *)&v72->__shared_owners_;
          do
            v74 = __ldaxr(p_shared_owners);
          while (__stlxr(v74 - 1, p_shared_owners));
          if (!v74)
          {
            ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
            std::__shared_weak_count::__release_weak(v72);
          }
        }
        v70 -= 16;
      }
      while (v70 != v64);
      v71 = *(void **)__src;
    }
    *(_QWORD *)&__src[8] = v64;
    operator delete(v71);
  }
  *(_QWORD *)v1741 = *MEMORY[0x24BEDB7F0];
  v1629 = *(_QWORD *)v1741;
  v75 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  v1628 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  *(_QWORD *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)] = v1628;
  v1630 = v75;
  *(_QWORD *)&v1741[16] = v75;
  *(_QWORD *)&v1741[24] = MEMORY[0x24BEDB848] + 16;
  if ((v1741[111] & 0x80000000) != 0)
    operator delete(*(void **)&v1741[88]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](v1743);
  v76 = *(unsigned __int8 *)(v1638 + 32);
  v77 = *v1639;
  v78 = *(_WORD *)(v1638 + 33);
  *((_DWORD *)v77 + 526) = 2 * (*(_BYTE *)(v1638 + 32) == 0);
  *((_WORD *)v77 + 1054) = v78;
  v79 = *(_QWORD *)v1635;
  if (*(_QWORD *)v1635)
  {
    v80 = v1637;
    v81 = (char *)operator new(0x940uLL);
    v82 = v81;
    *((_QWORD *)v81 + 1) = 0;
    *((_QWORD *)v81 + 2) = 0;
    *(_QWORD *)v81 = &off_250AF7EB0;
    v84 = v80[7];
    v83 = v80[8];
    *(_QWORD *)v1732 = v84;
    *(_QWORD *)&v1732[8] = v83;
    if (v83)
    {
      v85 = (unint64_t *)(v83 + 8);
      do
        v86 = __ldxr(v85);
      while (__stxr(v86 + 1, v85));
    }
    *((_DWORD *)v81 + 6) = v76;
    v81[28] = 1;
    v87 = v81 + 32;
    if (*(char *)(v79 + 79) < 0)
    {
      sub_23941A7F8(v81 + 32, *(void **)(v79 + 56), *(_QWORD *)(v79 + 64));
    }
    else
    {
      v88 = *(_OWORD *)(v79 + 56);
      *((_QWORD *)v81 + 6) = *(_QWORD *)(v79 + 72);
      *v87 = v88;
    }
    sub_239BB18C8((uint64_t *)v82 + 7);
    *(_QWORD *)&v1634[1] = v82 + 920;
    sub_239A8C7C0((uint64_t)(v82 + 920), v79 + 128);
    v82[2016] = 0;
    v82[2112] = 0;
    v82[2120] = 0;
    v82[2124] = 0;
    v82[2232] = 0;
    v82[2240] = 0;
    v82[2264] = 0;
    *(_OWORD *)(v82 + 1816) = 0u;
    *(_OWORD *)(v82 + 1832) = 0u;
    *(_OWORD *)(v82 + 1848) = 0u;
    *(_OWORD *)(v82 + 1864) = 0u;
    *(_OWORD *)(v82 + 1880) = 0u;
    *(_OWORD *)(v82 + 1896) = 0u;
    *(_OWORD *)(v82 + 1912) = 0u;
    *(_OWORD *)(v82 + 1928) = 0u;
    *(_OWORD *)(v82 + 1944) = 0u;
    *(_OWORD *)(v82 + 1960) = 0u;
    *(_OWORD *)(v82 + 1976) = 0u;
    v82[1992] = 0;
    v82[2088] = 0;
    *(_OWORD *)(v82 + 2072) = 0u;
    *(_OWORD *)(v82 + 2056) = 0u;
    *(_OWORD *)(v82 + 2040) = 0u;
    *(_OWORD *)(v82 + 2024) = 0u;
    *((_OWORD *)v82 + 133) = 0u;
    v82[2208] = 0;
    *((_OWORD *)v82 + 136) = 0u;
    *((_OWORD *)v82 + 135) = 0u;
    *((_OWORD *)v82 + 134) = 0u;
    *((_OWORD *)v82 + 137) = 0u;
    *((_OWORD *)v82 + 142) = *(_OWORD *)v79;
    *(_QWORD *)&v1634[0] = v82 + 2288;
    *((_QWORD *)v82 + 286) = 0;
    *((_QWORD *)v82 + 288) = 0;
    *((_QWORD *)v82 + 287) = 0;
    v99 = *(_BYTE **)(v79 + 16);
    v98 = *(_BYTE **)(v79 + 24);
    v100 = v98 - v99;
    if (v98 != v99)
    {
      if (v100 < 0)
        sub_2394189F8();
      v101 = (char *)operator new(v98 - v99);
      *((_QWORD *)v82 + 286) = v101;
      *((_QWORD *)v82 + 287) = v101;
      v102 = &v101[8 * (v100 >> 3)];
      *((_QWORD *)v82 + 288) = v102;
      memcpy(v101, v99, v100);
      *((_QWORD *)v82 + 287) = v102;
    }
    *(_OWORD *)(v82 + 2312) = *(_OWORD *)(v79 + 40);
    v82[2328] = 1;
    *((_QWORD *)v82 + 292) = v84;
    *((_QWORD *)v82 + 293) = v83;
    if (v83)
    {
      v103 = (unint64_t *)(v83 + 8);
      do
        v104 = __ldxr(v103);
      while (__stxr(v104 + 1, v103));
    }
    v105 = (char *)operator new(0x60uLL);
    *((_QWORD *)v105 + 1) = 0;
    *((_QWORD *)v105 + 2) = 0;
    *(_QWORD *)v105 = &off_250B00DF8;
    v106 = sub_239769348((VTPixelTransferSessionRef *)v105 + 3);
    *((_QWORD *)v105 + 4) = 850045863;
    *(_OWORD *)(v105 + 40) = 0u;
    *(_OWORD *)(v105 + 56) = 0u;
    *(_OWORD *)(v105 + 72) = 0u;
    *((_QWORD *)v105 + 11) = 0;
    *((_QWORD *)v82 + 294) = v106;
    *((_QWORD *)v82 + 295) = v105;
    if (!v82[1056])
    {
LABEL_216:
      v130 = (std::__shared_weak_count *)*((_QWORD *)v82 + 232);
      *((_QWORD *)v82 + 231) = 0;
      *((_QWORD *)v82 + 232) = 0;
      if (v130)
      {
        v131 = (unint64_t *)&v130->__shared_owners_;
        do
          v132 = __ldaxr(v131);
        while (__stlxr(v132 - 1, v131));
        if (!v132)
        {
          ((void (*)(std::__shared_weak_count *))v130->__on_zero_shared)(v130);
          std::__shared_weak_count::__release_weak(v130);
        }
      }
      v133 = (std::__shared_weak_count *)*((_QWORD *)v82 + 234);
      *((_QWORD *)v82 + 233) = 0;
      *((_QWORD *)v82 + 234) = 0;
      v134 = v1637;
      if (v133)
      {
        v135 = (unint64_t *)&v133->__shared_owners_;
        do
          v136 = __ldaxr(v135);
        while (__stlxr(v136 - 1, v135));
        if (!v136)
        {
          ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
          std::__shared_weak_count::__release_weak(v133);
        }
      }
      v137 = *(std::__shared_weak_count **)&v1732[8];
      if (*(_QWORD *)&v1732[8])
      {
        v138 = (unint64_t *)(*(_QWORD *)&v1732[8] + 8);
        do
          v139 = __ldaxr(v138);
        while (__stlxr(v139 - 1, v138));
        if (!v139)
        {
          ((void (*)(std::__shared_weak_count *))v137->__on_zero_shared)(v137);
          std::__shared_weak_count::__release_weak(v137);
        }
      }
      v140 = (std::__shared_weak_count *)v1637[2];
      v1637[1] = v82 + 24;
      v134[2] = v82;
      if (v140)
      {
        v141 = (unint64_t *)&v140->__shared_owners_;
        do
          v142 = __ldaxr(v141);
        while (__stlxr(v142 - 1, v141));
        goto LABEL_478;
      }
      goto LABEL_480;
    }
    v107 = v82 + 1016;
    *(_QWORD *)v1741 = v82 + 1016;
    if (v82[55] < 0)
    {
      sub_23941A7F8(&v1741[8], *((void **)v82 + 4), *((_QWORD *)v82 + 5));
      v106 = (VTPixelTransferSessionRef *)*((_QWORD *)v82 + 294);
      v107 = *(char **)v1741;
    }
    else
    {
      *(_OWORD *)&v1741[8] = *v87;
      *(_QWORD *)&v1741[24] = *((_QWORD *)v82 + 6);
    }
    *(_QWORD *)__p = 1064514355;
    *(_QWORD *)&__p[8] = v106;
    __p[16] = 1;
    *(_QWORD *)__src = v107;
    if ((v1741[31] & 0x80000000) != 0)
    {
      sub_23941A7F8(&__src[8], *(void **)&v1741[8], *(unint64_t *)&v1741[16]);
    }
    else
    {
      *(_OWORD *)&__src[8] = *(_OWORD *)&v1741[8];
      *(_QWORD *)&__src[24] = *(_QWORD *)&v1741[24];
    }
    *(_QWORD *)&v1860[24] = 0;
    v108 = operator new(0x28uLL);
    v109 = *(_QWORD *)__src;
    *v108 = off_250AF2E38;
    v108[1] = v109;
    *((_OWORD *)v108 + 1) = *(_OWORD *)&__src[8];
    v108[4] = *(_QWORD *)&__src[24];
    memset(&__src[8], 0, 24);
    *(_QWORD *)&v1860[24] = v108;
    sub_239A713D0(v1847, v1860, (__int128 *)__p, (uint64_t *)v1732);
    v110 = *(_OWORD *)v1847;
    *(_OWORD *)v1847 = 0uLL;
    v111 = (std::__shared_weak_count *)*((_QWORD *)v82 + 228);
    *(_OWORD *)(v82 + 1816) = v110;
    if (v111)
    {
      v112 = (unint64_t *)&v111->__shared_owners_;
      do
        v113 = __ldaxr(v112);
      while (__stlxr(v113 - 1, v112));
      if (!v113)
      {
        ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
        std::__shared_weak_count::__release_weak(v111);
      }
    }
    v114 = *(std::__shared_weak_count **)&v1847[8];
    if (*(_QWORD *)&v1847[8])
    {
      v115 = (unint64_t *)(*(_QWORD *)&v1847[8] + 8);
      do
        v116 = __ldaxr(v115);
      while (__stlxr(v116 - 1, v115));
      if (!v116)
      {
        ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
        std::__shared_weak_count::__release_weak(v114);
      }
    }
    v117 = *(_BYTE **)&v1860[24];
    if (*(_BYTE **)&v1860[24] == v1860)
    {
      v118 = 4;
      v117 = v1860;
    }
    else
    {
      if (!*(_QWORD *)&v1860[24])
        goto LABEL_194;
      v118 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v117 + 8 * v118))();
LABEL_194:
    if ((__src[31] & 0x80000000) != 0)
      operator delete(*(void **)&__src[8]);
    *(_QWORD *)v1847 = *(_QWORD *)v1741;
    if ((v1741[31] & 0x80000000) != 0)
    {
      sub_23941A7F8(&v1847[8], *(void **)&v1741[8], *(unint64_t *)&v1741[16]);
    }
    else
    {
      *(_OWORD *)&v1847[8] = *(_OWORD *)&v1741[8];
      *(_QWORD *)&v1847[24] = *(_QWORD *)&v1741[24];
    }
    *(_QWORD *)&v1860[24] = 0;
    v119 = operator new(0x28uLL);
    v120 = *(_QWORD *)v1847;
    *v119 = off_250AF2E38;
    v119[1] = v120;
    *((_OWORD *)v119 + 1) = *(_OWORD *)&v1847[8];
    v119[4] = *(_QWORD *)&v1847[24];
    memset(&v1847[8], 0, 24);
    *(_QWORD *)&v1860[24] = v119;
    sub_239A71AA0((uint64_t *)&__dst, v1860, (uint64_t *)v1732);
    v121 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = 0uLL;
    v122 = (std::__shared_weak_count *)*((_QWORD *)v82 + 230);
    *(_OWORD *)(v82 + 1832) = v121;
    if (v122)
    {
      v123 = (unint64_t *)&v122->__shared_owners_;
      do
        v124 = __ldaxr(v123);
      while (__stlxr(v124 - 1, v123));
      if (!v124)
      {
        ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
        std::__shared_weak_count::__release_weak(v122);
      }
    }
    size = (std::__shared_weak_count *)__dst.__r_.__value_.__l.__size_;
    if (__dst.__r_.__value_.__l.__size_)
    {
      v126 = (unint64_t *)(__dst.__r_.__value_.__l.__size_ + 8);
      do
        v127 = __ldaxr(v126);
      while (__stlxr(v127 - 1, v126));
      if (!v127)
      {
        ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
        std::__shared_weak_count::__release_weak(size);
      }
    }
    v128 = *(_BYTE **)&v1860[24];
    if (*(_BYTE **)&v1860[24] == v1860)
    {
      v129 = 4;
      v128 = v1860;
    }
    else
    {
      if (!*(_QWORD *)&v1860[24])
        goto LABEL_214;
      v129 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v128 + 8 * v129))();
LABEL_214:
    if ((v1847[31] & 0x80000000) != 0)
    {
      operator delete(*(void **)&v1847[8]);
      if ((v1741[31] & 0x80000000) == 0)
        goto LABEL_216;
    }
    else if ((v1741[31] & 0x80000000) == 0)
    {
      goto LABEL_216;
    }
    operator delete(*(void **)&v1741[8]);
    goto LABEL_216;
  }
  v89 = v1637;
  v90 = operator new(0x940uLL);
  v91 = v90;
  v90[1] = 0;
  v90[2] = 0;
  *v90 = &off_250AF7EB0;
  v92 = *(_BYTE *)(v1638 + 33);
  v94 = v89[7];
  v93 = (std::__shared_weak_count *)v89[8];
  *(_QWORD *)v1732 = v94;
  *(_QWORD *)&v1732[8] = v93;
  if (v93)
  {
    v95 = (unint64_t *)&v93->__shared_owners_;
    do
      v96 = __ldxr(v95);
    while (__stxr(v96 + 1, v95));
  }
  *((_DWORD *)v90 + 6) = v76;
  *((_BYTE *)v90 + 28) = v92;
  v97 = v1638;
  if (*(char *)(v1638 + 23) < 0)
  {
    sub_23941A7F8((_BYTE *)v90 + 32, *(void **)v1638, *(_QWORD *)(v1638 + 8));
  }
  else
  {
    *((_OWORD *)v90 + 2) = *(_OWORD *)v1638;
    v90[6] = *(_QWORD *)(v97 + 16);
  }
  sub_239BB18C8(v91 + 7);
  *((_BYTE *)v91 + 2016) = 0;
  *((_BYTE *)v91 + 2112) = 0;
  *((_BYTE *)v91 + 2120) = 0;
  *((_BYTE *)v91 + 2124) = 0;
  *((_BYTE *)v91 + 2232) = 0;
  *((_BYTE *)v91 + 2240) = 0;
  *((_BYTE *)v91 + 2264) = 0;
  *((_BYTE *)v91 + 2272) = 0;
  *((_BYTE *)v91 + 2328) = 0;
  bzero(v91 + 115, 0x431uLL);
  *((_BYTE *)v91 + 2088) = 0;
  *(_OWORD *)(v91 + 259) = 0u;
  *(_OWORD *)(v91 + 257) = 0u;
  *(_OWORD *)(v91 + 255) = 0u;
  *(_OWORD *)(v91 + 253) = 0u;
  *((_OWORD *)v91 + 133) = 0u;
  *((_OWORD *)v91 + 134) = 0u;
  *((_OWORD *)v91 + 135) = 0u;
  *((_OWORD *)v91 + 136) = 0u;
  *((_OWORD *)v91 + 137) = 0u;
  *((_BYTE *)v91 + 2208) = 0;
  v91[292] = v94;
  v91[293] = v93;
  if (v93)
  {
    v143 = (unint64_t *)&v93->__shared_owners_;
    do
      v144 = __ldxr(v143);
    while (__stxr(v144 + 1, v143));
  }
  *(_QWORD *)&v1634[1] = v91 + 115;
  v145 = (char *)operator new(0x60uLL);
  *((_QWORD *)v145 + 1) = 0;
  *((_QWORD *)v145 + 2) = 0;
  *(_QWORD *)v145 = &off_250B00DF8;
  v146 = sub_239769348((VTPixelTransferSessionRef *)v145 + 3);
  v147 = v91 + 227;
  *((_QWORD *)v145 + 4) = 850045863;
  *(_OWORD *)(v145 + 40) = 0u;
  *(_OWORD *)(v145 + 56) = 0u;
  *(_OWORD *)(v145 + 72) = 0u;
  *((_QWORD *)v145 + 11) = 0;
  v91[294] = v146;
  v91[295] = v145;
  v148 = *((unsigned __int8 *)v91 + 28);
  if (*((_BYTE *)v91 + 28))
  {
    *(_QWORD *)&v1741[4] = 0;
    v149 = *((unsigned __int8 *)v91 + 2328);
    *((_DWORD *)v91 + 568) = 0;
    *(_QWORD *)((char *)v91 + 2276) = *(_QWORD *)v1741;
    *((_DWORD *)v91 + 571) = *(_DWORD *)&v1741[8];
    v150 = (void **)(v91 + 286);
    if (v149)
    {
      v151 = *v150;
      if (*v150)
      {
        v91[287] = v151;
        operator delete(v151);
        *v150 = 0;
        v91[287] = 0;
        v91[288] = 0;
        v148 = *((unsigned __int8 *)v91 + 28);
      }
      *v150 = 0;
      v91[287] = 0;
      v91[288] = 0;
      *(_OWORD *)(v91 + 289) = xmmword_239F0C180;
      if (v76 | v148)
      {
LABEL_246:
        v152 = v91 + 127;
        memset(v1741, 0, 32);
        *(_DWORD *)&v1741[32] = 1065353216;
        if (*((_BYTE *)v91 + 1056))
        {
          sub_239A71290((uint64_t)(v91 + 127), (uint64_t *)v1741);
          v153 = *(_QWORD **)&v1741[16];
          if (*(_QWORD *)&v1741[16])
          {
            do
            {
              v155 = (_QWORD *)*v153;
              v156 = v153[3];
              if (v156)
              {
                v157 = v153[4];
                v154 = (void *)v153[3];
                if (v157 != v156)
                {
                  do
                  {
                    if (*(char *)(v157 - 1) < 0)
                      operator delete(*(void **)(v157 - 24));
                    v157 -= 24;
                  }
                  while (v157 != v156);
                  v154 = (void *)v153[3];
                }
                v153[4] = v156;
                operator delete(v154);
              }
              operator delete(v153);
              v153 = v155;
            }
            while (v155);
          }
        }
        else
        {
          *v152 = 0uLL;
          *(_OWORD *)(v91 + 129) = 0uLL;
          *((_DWORD *)v91 + 262) = 1065353216;
          *((_BYTE *)v91 + 1056) = 1;
        }
        if (*(_QWORD *)v1741)
          operator delete(*(void **)v1741);
        if (!*((_BYTE *)v91 + 1056))
          sub_2394875CC();
        *(_QWORD *)v1741 = v91 + 127;
        if (*(char *)(v1638 + 23) < 0)
        {
          sub_23941A7F8(&v1741[8], *(void **)v1638, *(_QWORD *)(v1638 + 8));
          v152 = *(_OWORD **)v1741;
        }
        else
        {
          *(_OWORD *)&v1741[8] = *(_OWORD *)v1638;
          *(_QWORD *)&v1741[24] = *(_QWORD *)(v1638 + 16);
        }
        v161 = v91[294];
        *(_QWORD *)__src = 1064514355;
        *(_QWORD *)&__src[8] = v161;
        __src[16] = 1;
        *(_QWORD *)v1847 = v152;
        if ((v1741[31] & 0x80000000) != 0)
        {
          sub_23941A7F8(&v1847[8], *(void **)&v1741[8], *(unint64_t *)&v1741[16]);
        }
        else
        {
          *(_OWORD *)&v1847[8] = *(_OWORD *)&v1741[8];
          *(_QWORD *)&v1847[24] = *(_QWORD *)&v1741[24];
        }
        *(_QWORD *)&v1860[24] = 0;
        v162 = operator new(0x28uLL);
        v163 = *(_QWORD *)v1847;
        *v162 = off_250AF2D70;
        v162[1] = v163;
        v164 = v162 + 2;
        if ((v1847[31] & 0x80000000) != 0)
        {
          sub_23941A7F8(v164, *(void **)&v1847[8], *(unint64_t *)&v1847[16]);
        }
        else
        {
          *(_OWORD *)v164 = *(_OWORD *)&v1847[8];
          v162[4] = *(_QWORD *)&v1847[24];
        }
        *(_QWORD *)&v1860[24] = v162;
        sub_239A713D0(__p, v1860, (__int128 *)__src, (uint64_t *)v1732);
        v165 = *(_OWORD *)__p;
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)__p = 0;
        v166 = (std::__shared_weak_count *)v91[228];
        *v147 = v165;
        if (v166)
        {
          v167 = (unint64_t *)&v166->__shared_owners_;
          do
            v168 = __ldaxr(v167);
          while (__stlxr(v168 - 1, v167));
          if (!v168)
          {
            ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
            std::__shared_weak_count::__release_weak(v166);
          }
        }
        v169 = *(std::__shared_weak_count **)&__p[8];
        if (*(_QWORD *)&__p[8])
        {
          v170 = (unint64_t *)(*(_QWORD *)&__p[8] + 8);
          do
            v171 = __ldaxr(v170);
          while (__stlxr(v171 - 1, v170));
          if (!v171)
          {
            ((void (*)(std::__shared_weak_count *))v169->__on_zero_shared)(v169);
            std::__shared_weak_count::__release_weak(v169);
          }
        }
        v172 = *(_BYTE **)&v1860[24];
        if (*(_BYTE **)&v1860[24] == v1860)
        {
          v173 = 4;
          v172 = v1860;
        }
        else
        {
          if (!*(_QWORD *)&v1860[24])
            goto LABEL_295;
          v173 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v172 + 8 * v173))();
LABEL_295:
        if ((v1847[31] & 0x80000000) != 0)
          operator delete(*(void **)&v1847[8]);
        *(_QWORD *)__p = *(_QWORD *)v1741;
        if ((v1741[31] & 0x80000000) != 0)
        {
          sub_23941A7F8(&__p[8], *(void **)&v1741[8], *(unint64_t *)&v1741[16]);
        }
        else
        {
          *(_OWORD *)&__p[8] = *(_OWORD *)&v1741[8];
          *(_QWORD *)&__p[24] = *(_QWORD *)&v1741[24];
        }
        *(_QWORD *)&v1860[24] = 0;
        v174 = operator new(0x28uLL);
        v175 = *(_QWORD *)__p;
        *v174 = off_250AF2D70;
        v174[1] = v175;
        v176 = v174 + 2;
        if ((__p[31] & 0x80000000) != 0)
        {
          sub_23941A7F8(v176, *(void **)&__p[8], *(unint64_t *)&__p[16]);
        }
        else
        {
          *(_OWORD *)v176 = *(_OWORD *)&__p[8];
          v174[4] = *(_QWORD *)&__p[24];
        }
        *(_QWORD *)&v1860[24] = v174;
        sub_239A71AA0((uint64_t *)&__dst, v1860, (uint64_t *)v1732);
        v177 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
        *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = 0uLL;
        v178 = (std::__shared_weak_count *)v91[230];
        *(_OWORD *)(v91 + 229) = v177;
        if (v178)
        {
          v179 = (unint64_t *)&v178->__shared_owners_;
          do
            v180 = __ldaxr(v179);
          while (__stlxr(v180 - 1, v179));
          if (!v180)
          {
            ((void (*)(std::__shared_weak_count *))v178->__on_zero_shared)(v178);
            std::__shared_weak_count::__release_weak(v178);
          }
        }
        v181 = (std::__shared_weak_count *)__dst.__r_.__value_.__l.__size_;
        if (__dst.__r_.__value_.__l.__size_)
        {
          v182 = (unint64_t *)(__dst.__r_.__value_.__l.__size_ + 8);
          do
            v183 = __ldaxr(v182);
          while (__stlxr(v183 - 1, v182));
          if (!v183)
          {
            ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
            std::__shared_weak_count::__release_weak(v181);
          }
        }
        v184 = *(_BYTE **)&v1860[24];
        if (*(_BYTE **)&v1860[24] == v1860)
        {
          v185 = 4;
          v184 = v1860;
        }
        else
        {
          if (!*(_QWORD *)&v1860[24])
            goto LABEL_318;
          v185 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v184 + 8 * v185))();
LABEL_318:
        if ((__p[31] & 0x80000000) != 0)
        {
          operator delete(*(void **)&__p[8]);
          if ((v1741[31] & 0x80000000) == 0)
            goto LABEL_320;
        }
        else if ((v1741[31] & 0x80000000) == 0)
        {
          goto LABEL_320;
        }
        operator delete(*(void **)&v1741[8]);
LABEL_320:
        if (v76 | *((unsigned __int8 *)v91 + 28))
          goto LABEL_321;
        goto LABEL_364;
      }
    }
    else
    {
      *v150 = 0;
      v91[287] = 0;
      v91[288] = 0;
      *(_OWORD *)(v91 + 289) = xmmword_239F0C180;
      *((_BYTE *)v91 + 2328) = 1;
      if (v76 | 1)
        goto LABEL_246;
    }
  }
  else if (v76)
  {
    goto LABEL_246;
  }
  if (v93)
  {
    v158 = (unint64_t *)&v93->__shared_owners_;
    do
      v159 = __ldxr(v158);
    while (__stxr(v159 + 1, v158));
    *(_OWORD *)v1741 = xmmword_239EC7640;
    *(_QWORD *)&v1741[16] = v94;
    *(_QWORD *)&v1741[24] = v93;
    do
      v160 = __ldxr(v158);
    while (__stxr(v160 + 1, v158));
  }
  else
  {
    *(_OWORD *)v1741 = xmmword_239EC7640;
    *(_QWORD *)&v1741[16] = v94;
    *(_QWORD *)&v1741[24] = 0;
  }
  *(_QWORD *)&v1741[8] = (int)std::thread::hardware_concurrency();
  v199 = operator new(0x1B0uLL);
  sub_239A7DA9C(v199, (uint64_t *)v1741);
  *(_QWORD *)&v200 = v199 + 3;
  v201 = *(std::__shared_weak_count **)&v1741[24];
  if (*(_QWORD *)&v1741[24])
  {
    v202 = (unint64_t *)(*(_QWORD *)&v1741[24] + 8);
    do
      v203 = __ldaxr(v202);
    while (__stlxr(v203 - 1, v202));
    if (!v203)
    {
      v1634[0] = v200;
      ((void (*)(std::__shared_weak_count *))v201->__on_zero_shared)(v201);
      std::__shared_weak_count::__release_weak(v201);
      *(_QWORD *)&v200 = *(_QWORD *)&v1634[0];
    }
  }
  *((_QWORD *)&v200 + 1) = v199;
  if (v93)
  {
    v204 = (unint64_t *)&v93->__shared_owners_;
    do
      v205 = __ldaxr(v204);
    while (__stlxr(v205 - 1, v204));
    if (!v205)
    {
      v1634[0] = v200;
      ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
      std::__shared_weak_count::__release_weak(v93);
      v200 = v1634[0];
    }
  }
  v206 = (std::__shared_weak_count *)v91[228];
  *v147 = v200;
  if (v206)
  {
    v207 = (unint64_t *)&v206->__shared_owners_;
    do
      v208 = __ldaxr(v207);
    while (__stlxr(v208 - 1, v207));
    if (!v208)
    {
      ((void (*)(std::__shared_weak_count *))v206->__on_zero_shared)(v206);
      std::__shared_weak_count::__release_weak(v206);
    }
  }
  if (*((_BYTE *)v91 + 28))
  {
LABEL_321:
    v186 = (void **)(v91 + 205);
    memset(v1741, 0, 32);
    *(_DWORD *)&v1741[32] = 1065353216;
    if (*((_BYTE *)v91 + 1680))
    {
      v187 = (void *)v91[208];
      if (v187)
      {
        v188 = (char *)v91[207];
        if (v188)
        {
          do
          {
            v195 = *(char **)v188;
            v196 = *((_QWORD *)v188 + 5);
            if (v196)
            {
              v197 = *((_QWORD *)v188 + 6);
              v198 = (void *)*((_QWORD *)v188 + 5);
              if (v197 != v196)
              {
                do
                {
                  if (*(char *)(v197 - 1) < 0)
                    operator delete(*(void **)(v197 - 24));
                  v197 -= 24;
                }
                while (v197 != v196);
                v198 = (void *)*((_QWORD *)v188 + 5);
              }
              *((_QWORD *)v188 + 6) = v196;
              operator delete(v198);
            }
            if (v188[39] < 0)
              operator delete(*((void **)v188 + 2));
            operator delete(v188);
            v188 = v195;
          }
          while (v195);
        }
        v91[207] = 0;
        v189 = v91[206];
        if (v189)
        {
          for (j = 0; j != v189; ++j)
            *((_QWORD *)*v186 + j) = 0;
        }
        v91[208] = 0;
        v187 = *(void **)v1741;
      }
      *(_QWORD *)v1741 = 0;
      v191 = *v186;
      *v186 = v187;
      if (v191)
        operator delete(v191);
      v192 = *(_OWORD *)&v1741[8];
      v91[206] = *(_QWORD *)&v1741[8];
      *(_QWORD *)&v1741[8] = 0;
      v193 = *(_QWORD *)&v1741[24];
      v91[208] = *(_QWORD *)&v1741[24];
      *((_DWORD *)v91 + 418) = *(_DWORD *)&v1741[32];
      v91[207] = *((_QWORD *)&v192 + 1);
      if (v193)
      {
        v194 = *(_QWORD *)(*((_QWORD *)&v192 + 1) + 8);
        if (((unint64_t)v192 & ((_QWORD)v192 - 1)) != 0)
        {
          if (*((_QWORD *)&v192 + 1) >= (unint64_t)v192)
            v194 = *((_QWORD *)&v192 + 1) % (unint64_t)v192;
        }
        else
        {
          v194 = (v192 - 1) & *((_QWORD *)&v192 + 1);
        }
        *((_QWORD *)*v186 + v194) = v91 + 207;
        *(_QWORD *)&v1741[16] = 0;
        *(_QWORD *)&v1741[24] = 0;
      }
    }
    else
    {
      *(_OWORD *)v186 = 0uLL;
      *(_OWORD *)(v91 + 207) = 0uLL;
      *((_DWORD *)v91 + 418) = 1065353216;
      *((_BYTE *)v91 + 1680) = 1;
    }
    sub_239A726C4((uint64_t)v1741);
    if (!*((_BYTE *)v91 + 1680))
      sub_2394875CC();
    *(_QWORD *)v1741 = v91 + 205;
    if (*(char *)(v1638 + 23) < 0)
    {
      sub_23941A7F8(&v1741[8], *(void **)v1638, *(_QWORD *)(v1638 + 8));
      v240 = *(_QWORD **)v1741;
    }
    else
    {
      *(_OWORD *)&v1741[8] = *(_OWORD *)v1638;
      *(_QWORD *)&v1741[24] = *(_QWORD *)(v1638 + 16);
      v240 = v91 + 205;
    }
    *(_QWORD *)__src = v240;
    if ((v1741[31] & 0x80000000) != 0)
    {
      sub_23941A7F8(&__src[8], *(void **)&v1741[8], *(unint64_t *)&v1741[16]);
    }
    else
    {
      *(_OWORD *)&__src[8] = *(_OWORD *)&v1741[8];
      *(_QWORD *)&__src[24] = *(_QWORD *)&v1741[24];
    }
    *(_QWORD *)&v1860[24] = 0;
    v241 = operator new(0x28uLL);
    v242 = *(_QWORD *)__src;
    *v241 = off_250AF2DB8;
    v241[1] = v242;
    v243 = v241 + 2;
    if ((__src[31] & 0x80000000) != 0)
    {
      sub_23941A7F8(v243, *(void **)&__src[8], *(unint64_t *)&__src[16]);
    }
    else
    {
      *(_OWORD *)v243 = *(_OWORD *)&__src[8];
      v241[4] = *(_QWORD *)&__src[24];
    }
    *(_QWORD *)&v1860[24] = v241;
    sub_239A7277C(&__dst, v1860, (uint64_t *)v1732);
    v244 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = 0uLL;
    v245 = (std::__shared_weak_count *)v91[232];
    *(_OWORD *)(v91 + 231) = v244;
    if (v245)
    {
      v246 = (unint64_t *)&v245->__shared_owners_;
      do
        v247 = __ldaxr(v246);
      while (__stlxr(v247 - 1, v246));
      if (!v247)
      {
        ((void (*)(std::__shared_weak_count *))v245->__on_zero_shared)(v245);
        std::__shared_weak_count::__release_weak(v245);
      }
    }
    v248 = (std::__shared_weak_count *)__dst.__r_.__value_.__l.__size_;
    if (__dst.__r_.__value_.__l.__size_)
    {
      v249 = (unint64_t *)(__dst.__r_.__value_.__l.__size_ + 8);
      do
        v250 = __ldaxr(v249);
      while (__stlxr(v250 - 1, v249));
      if (!v250)
      {
        ((void (*)(std::__shared_weak_count *))v248->__on_zero_shared)(v248);
        std::__shared_weak_count::__release_weak(v248);
      }
    }
    v251 = *(_BYTE **)&v1860[24];
    if (*(_BYTE **)&v1860[24] == v1860)
    {
      v252 = 4;
      v251 = v1860;
    }
    else
    {
      if (!*(_QWORD *)&v1860[24])
      {
LABEL_445:
        if ((__src[31] & 0x80000000) != 0)
          operator delete(*(void **)&__src[8]);
        v253 = operator new(0x68uLL);
        v253[1] = 0;
        v253[2] = 0;
        *v253 = &off_250AF2E00;
        v254 = v91[231];
        v255 = (std::__shared_weak_count *)v91[232];
        if (v255)
        {
          v256 = (unint64_t *)&v255->__shared_owners_;
          do
            v257 = __ldxr(v256);
          while (__stxr(v257 + 1, v256));
        }
        memset(v1860, 0, 24);
        sub_239490944(v1860, v91[46], v91[47], 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v91[47] - v91[46]) >> 3));
        sub_239A6E998((uint64_t)(v253 + 3), v254, (uint64_t)v255, (uint64_t *)v1860, (uint64_t)(v91 + 205), 1);
        v258 = *(_QWORD *)v1860;
        if (*(_QWORD *)v1860)
        {
          v259 = *(_QWORD *)&v1860[8];
          v260 = *(void **)v1860;
          if (*(_QWORD *)&v1860[8] != *(_QWORD *)v1860)
          {
            do
            {
              if (*(char *)(v259 - 1) < 0)
                operator delete(*(void **)(v259 - 24));
              v259 -= 24;
            }
            while (v259 != v258);
            v260 = *(void **)v1860;
          }
          *(_QWORD *)&v1860[8] = v258;
          operator delete(v260);
        }
        if (v255)
        {
          v261 = (unint64_t *)&v255->__shared_owners_;
          do
            v262 = __ldaxr(v261);
          while (__stlxr(v262 - 1, v261));
          if (!v262)
          {
            ((void (*)(std::__shared_weak_count *))v255->__on_zero_shared)(v255);
            std::__shared_weak_count::__release_weak(v255);
          }
        }
        v91[233] = v253 + 3;
        v263 = (std::__shared_weak_count *)v91[234];
        v91[234] = v253;
        if (v263)
        {
          v264 = (unint64_t *)&v263->__shared_owners_;
          do
            v265 = __ldaxr(v264);
          while (__stlxr(v265 - 1, v264));
          if (!v265)
          {
            ((void (*)(std::__shared_weak_count *))v263->__on_zero_shared)(v263);
            std::__shared_weak_count::__release_weak(v263);
          }
        }
        if ((v1741[31] & 0x80000000) != 0)
          operator delete(*(void **)&v1741[8]);
        goto LABEL_470;
      }
      v252 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v251 + 8 * v252))();
    goto LABEL_445;
  }
LABEL_364:
  v209 = *(_OWORD *)v1732;
  if (*(_QWORD *)&v1732[8])
  {
    v210 = (unint64_t *)(*(_QWORD *)&v1732[8] + 8);
    do
      v211 = __ldxr(v210);
    while (__stxr(v211 + 1, v210));
    *(_OWORD *)__src = xmmword_239EC7640;
    *(_OWORD *)&__src[16] = v209;
    do
      v212 = __ldxr(v210);
    while (__stxr(v212 + 1, v210));
  }
  else
  {
    *(_OWORD *)__src = xmmword_239EC7640;
    *(_QWORD *)&__src[16] = *(_QWORD *)v1732;
    *(_QWORD *)&__src[24] = 0;
  }
  *(_QWORD *)&__src[8] = (int)std::thread::hardware_concurrency();
  v213 = operator new(0x1B0uLL);
  v213[1] = 0;
  v213[2] = 0;
  *v213 = &off_250AF4EC8;
  *(_QWORD *)&v1860[24] = 0;
  *(_QWORD *)&v1741[24] = 0;
  sub_239A7458C((uint64_t)(v213 + 3), (uint64_t *)__src, v1860, v1741);
  v215 = *(_QWORD **)&v1741[24];
  if (*(_BYTE **)&v1741[24] == v1741)
  {
    v216 = 4;
    v215 = v1741;
  }
  else
  {
    if (!*(_QWORD *)&v1741[24])
      goto LABEL_376;
    v216 = 5;
  }
  (*(void (**)(void))(*v215 + 8 * v216))();
LABEL_376:
  v217 = *(_BYTE **)&v1860[24];
  if (*(_BYTE **)&v1860[24] == v1860)
  {
    v218 = 4;
    v217 = v1860;
  }
  else
  {
    if (!*(_QWORD *)&v1860[24])
      goto LABEL_381;
    v218 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v217 + 8 * v218))();
LABEL_381:
  *(_QWORD *)&v214 = v213 + 3;
  v219 = *(std::__shared_weak_count **)&__src[24];
  if (*(_QWORD *)&__src[24])
  {
    v220 = (unint64_t *)(*(_QWORD *)&__src[24] + 8);
    do
      v221 = __ldaxr(v220);
    while (__stlxr(v221 - 1, v220));
    if (!v221)
    {
      v1634[0] = v214;
      ((void (*)(std::__shared_weak_count *))v219->__on_zero_shared)(v219);
      std::__shared_weak_count::__release_weak(v219);
      *(_QWORD *)&v214 = *(_QWORD *)&v1634[0];
    }
  }
  *((_QWORD *)&v214 + 1) = v213;
  if (*((_QWORD *)&v209 + 1))
  {
    v222 = (unint64_t *)(*((_QWORD *)&v209 + 1) + 8);
    do
      v223 = __ldaxr(v222);
    while (__stlxr(v223 - 1, v222));
    if (!v223)
    {
      v1634[0] = v214;
      (*(void (**)(_QWORD))(**((_QWORD **)&v209 + 1) + 16))(*((_QWORD *)&v209 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v209 + 1));
      v214 = v1634[0];
    }
  }
  v224 = (std::__shared_weak_count *)v91[232];
  *(_OWORD *)(v91 + 231) = v214;
  if (v224)
  {
    v225 = (unint64_t *)&v224->__shared_owners_;
    do
      v226 = __ldaxr(v225);
    while (__stlxr(v226 - 1, v225));
    if (!v226)
    {
      ((void (*)(std::__shared_weak_count *))v224->__on_zero_shared)(v224);
      std::__shared_weak_count::__release_weak(v224);
    }
  }
  v227 = operator new(0x68uLL);
  v227[1] = 0;
  v227[2] = 0;
  *v227 = &off_250AF2E00;
  v228 = v91[231];
  v229 = (std::__shared_weak_count *)v91[232];
  if (v229)
  {
    v230 = (unint64_t *)&v229->__shared_owners_;
    do
      v231 = __ldxr(v230);
    while (__stxr(v231 + 1, v230));
  }
  memset(v1741, 0, 24);
  sub_239490944(v1741, v91[46], v91[47], 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v91[47] - v91[46]) >> 3));
  sub_239A6E998((uint64_t)(v227 + 3), v228, (uint64_t)v229, (uint64_t *)v1741, 0, 0);
  v232 = *(_QWORD *)v1741;
  if (*(_QWORD *)v1741)
  {
    v233 = *(_QWORD *)&v1741[8];
    v234 = *(void **)v1741;
    if (*(_QWORD *)&v1741[8] != *(_QWORD *)v1741)
    {
      do
      {
        if (*(char *)(v233 - 1) < 0)
          operator delete(*(void **)(v233 - 24));
        v233 -= 24;
      }
      while (v233 != v232);
      v234 = *(void **)v1741;
    }
    *(_QWORD *)&v1741[8] = v232;
    operator delete(v234);
  }
  if (v229)
  {
    v235 = (unint64_t *)&v229->__shared_owners_;
    do
      v236 = __ldaxr(v235);
    while (__stlxr(v236 - 1, v235));
    if (!v236)
    {
      ((void (*)(std::__shared_weak_count *))v229->__on_zero_shared)(v229);
      std::__shared_weak_count::__release_weak(v229);
    }
  }
  v91[233] = v227 + 3;
  v237 = (std::__shared_weak_count *)v91[234];
  v91[234] = v227;
  if (v237)
  {
    v238 = (unint64_t *)&v237->__shared_owners_;
    do
      v239 = __ldaxr(v238);
    while (__stlxr(v239 - 1, v238));
    if (!v239)
    {
      ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
      std::__shared_weak_count::__release_weak(v237);
    }
  }
LABEL_470:
  v266 = *(std::__shared_weak_count **)&v1732[8];
  if (*(_QWORD *)&v1732[8])
  {
    v267 = (unint64_t *)(*(_QWORD *)&v1732[8] + 8);
    do
      v268 = __ldaxr(v267);
    while (__stlxr(v268 - 1, v267));
    if (!v268)
    {
      ((void (*)(std::__shared_weak_count *))v266->__on_zero_shared)(v266);
      std::__shared_weak_count::__release_weak(v266);
    }
  }
  v140 = (std::__shared_weak_count *)v1637[2];
  v1637[1] = v91 + 3;
  v1637[2] = v91;
  if (v140)
  {
    v269 = (unint64_t *)&v140->__shared_owners_;
    do
      v142 = __ldaxr(v269);
    while (__stlxr(v142 - 1, v269));
LABEL_478:
    if (!v142)
    {
      ((void (*)(std::__shared_weak_count *))v140->__on_zero_shared)(v140);
      std::__shared_weak_count::__release_weak(v140);
    }
  }
LABEL_480:
  if (*(_QWORD *)v1635)
    v270 = *(_DWORD *)(v1638 + 144) == 1;
  else
    v270 = 0;
  LODWORD(v1633) = v270 && **(_DWORD **)v1635 >> 3 > 0x270u;
  v271 = *v1636;
  v272 = (const std::__fs::filesystem::path *)(*v1636 + 8);
  if (!sub_2396DAB08(v272))
    goto LABEL_2906;
  sub_2396F295C((uint64_t *)(v271 + 32), (uint64_t)v272, (uint64_t)v1741);
  v273 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
  if ((v1741[23] & 0x80000000) != 0)
    operator delete(*(void **)v1741);
  if (!v273)
    goto LABEL_2906;
  sub_2396F295C((uint64_t *)(v271 + 512), (uint64_t)v272, (uint64_t)v1741);
  v274 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
  if ((v1741[23] & 0x80000000) != 0)
    operator delete(*(void **)v1741);
  if (!v274)
    goto LABEL_2906;
  if (*(_BYTE *)(v271 + 4) || *(_DWORD *)v271)
  {
    sub_2396F295C((uint64_t *)(v271 + 152), (uint64_t)v272, (uint64_t)v1741);
    v275 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v275)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 200), (uint64_t)v272, (uint64_t)v1741);
    v276 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v276)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 224), (uint64_t)v272, (uint64_t)v1741);
    v277 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v277)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 248), (uint64_t)v272, (uint64_t)v1741);
    v278 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v278)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 272), (uint64_t)v272, (uint64_t)v1741);
    v279 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v279)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 296), (uint64_t)v272, (uint64_t)v1741);
    v280 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v280)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 320), (uint64_t)v272, (uint64_t)v1741);
    v281 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v281)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 344), (uint64_t)v272, (uint64_t)v1741);
    v282 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v282)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 368), (uint64_t)v272, (uint64_t)v1741);
    v283 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v283)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 392), (uint64_t)v272, (uint64_t)v1741);
    v284 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v284)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 416), (uint64_t)v272, (uint64_t)v1741);
    v285 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v285)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 536), (uint64_t)v272, (uint64_t)v1741);
    v286 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v286)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 584), (uint64_t)v272, (uint64_t)v1741);
    v287 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v287)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 608), (uint64_t)v272, (uint64_t)v1741);
    v288 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v288)
      goto LABEL_2906;
    sub_2396F295C((uint64_t *)(v271 + 824), (uint64_t)v272, (uint64_t)v1741);
    v289 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
    if ((v1741[23] & 0x80000000) != 0)
      operator delete(*(void **)v1741);
    if (!v289)
      goto LABEL_2906;
    if (*(_BYTE *)(v271 + 4) || *(_DWORD *)v271 >= 2u)
    {
      sub_2396F295C((uint64_t *)(v271 + 752), (uint64_t)v272, (uint64_t)v1741);
      v290 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
      if ((v1741[23] & 0x80000000) != 0)
        operator delete(*(void **)v1741);
      if (!v290)
        goto LABEL_2906;
      sub_2396F295C((uint64_t *)(v271 + 872), (uint64_t)v272, (uint64_t)v1741);
      v291 = sub_2396DAB08((const std::__fs::filesystem::path *)v1741);
      if ((v1741[23] & 0x80000000) != 0)
        operator delete(*(void **)v1741);
      if ((v291 & 1) == 0)
      {
LABEL_2906:
        exception = (std::runtime_error *)__cxa_allocate_exception(0x18uLL);
        sub_23941A4FC(v1741, "Failed to create directories");
        std::runtime_error::runtime_error(exception, (const std::string *)v1741);
        exception->__vftable = (std::runtime_error_vtbl *)&off_250AF79D0;
        LODWORD(exception[1].__vftable) = 0;
        __cxa_throw(exception, (struct type_info *)&unk_250AF7A30, (void (*)(void *))std::runtime_error::~runtime_error);
      }
    }
  }
  v292 = *(_QWORD *)(*v1636 + 2336);
  *(_QWORD *)&v293 = *(_QWORD *)(*v1636 + 2328);
  *((_QWORD *)&v293 + 1) = v292;
  if (v292)
  {
    v294 = (unint64_t *)(v292 + 8);
    do
      v295 = __ldxr(v294);
    while (__stxr(v295 + 1, v294));
  }
  v296 = (std::__shared_weak_count *)(*v1639)[61];
  *((_OWORD *)*v1639 + 30) = v293;
  if (v296)
  {
    v297 = (unint64_t *)&v296->__shared_owners_;
    do
      v298 = __ldaxr(v297);
    while (__stlxr(v298 - 1, v297));
    if (!v298)
    {
      ((void (*)(std::__shared_weak_count *))v296->__on_zero_shared)(v296);
      std::__shared_weak_count::__release_weak(v296);
    }
  }
  if (!*(_BYTE *)(v1638 + 32))
  {
    v306 = *v1639;
    v307 = v1637;
    if (**v1639)
    {
      if (v306[2])
        goto LABEL_566;
    }
    else
    {
      v308 = v1637[7];
      v309 = (std::__shared_weak_count *)v1637[8];
      v1657 = v308;
      v1658 = v309;
      if (v309)
      {
        v310 = (unint64_t *)&v309->__shared_owners_;
        do
          v311 = __ldxr(v310);
        while (__stxr(v311 + 1, v310));
        *(_OWORD *)v1741 = xmmword_239F0C190;
        *(_QWORD *)&v1741[16] = v308;
        *(_QWORD *)&v1741[24] = v309;
        do
          v312 = __ldxr(v310);
        while (__stxr(v312 + 1, v310));
      }
      else
      {
        *(_OWORD *)v1741 = xmmword_239F0C190;
        *(_QWORD *)&v1741[16] = v308;
        *(_QWORD *)&v1741[24] = 0;
      }
      *(_QWORD *)&v1741[8] = (int)std::thread::hardware_concurrency();
      v464 = operator new(0x1B0uLL);
      sub_239A7DA9C(v464, (uint64_t *)v1741);
      v465 = *v1639;
      v466 = (std::__shared_weak_count *)(*v1639)[1];
      *v465 = (uint64_t)(v464 + 3);
      v465[1] = (uint64_t)v464;
      if (v466)
      {
        v467 = (unint64_t *)&v466->__shared_owners_;
        do
          v468 = __ldaxr(v467);
        while (__stlxr(v468 - 1, v467));
        if (!v468)
        {
          ((void (*)(std::__shared_weak_count *))v466->__on_zero_shared)(v466);
          std::__shared_weak_count::__release_weak(v466);
        }
      }
      v469 = *(std::__shared_weak_count **)&v1741[24];
      if (*(_QWORD *)&v1741[24])
      {
        v470 = (unint64_t *)(*(_QWORD *)&v1741[24] + 8);
        do
          v471 = __ldaxr(v470);
        while (__stlxr(v471 - 1, v470));
        if (!v471)
        {
          ((void (*)(std::__shared_weak_count *))v469->__on_zero_shared)(v469);
          std::__shared_weak_count::__release_weak(v469);
        }
      }
      if (v1658)
      {
        v472 = &v1658->__shared_owners_;
        do
          v473 = __ldaxr((unint64_t *)v472);
        while (__stlxr(v473 - 1, (unint64_t *)v472));
        if (!v473)
        {
          ((void (*)(std::__shared_weak_count *))v1658->__on_zero_shared)(v1658);
          std::__shared_weak_count::__release_weak(v1658);
        }
      }
      v306 = *v1639;
      if ((*v1639)[2])
      {
LABEL_566:
        if (v306[8])
          goto LABEL_567;
        goto LABEL_912;
      }
    }
    v474 = v307[7];
    v475 = (std::__shared_weak_count *)v307[8];
    v1655 = v474;
    v1656 = v475;
    if (v475)
    {
      v476 = (unint64_t *)&v475->__shared_owners_;
      do
        v477 = __ldxr(v476);
      while (__stxr(v477 + 1, v476));
      *(_OWORD *)v1741 = xmmword_239F0C190;
      *(_QWORD *)&v1741[16] = v474;
      *(_QWORD *)&v1741[24] = v475;
      do
        v478 = __ldxr(v476);
      while (__stxr(v478 + 1, v476));
    }
    else
    {
      *(_OWORD *)v1741 = xmmword_239F0C190;
      *(_QWORD *)&v1741[16] = v474;
      *(_QWORD *)&v1741[24] = 0;
    }
    *(_QWORD *)&v1741[8] = (int)std::thread::hardware_concurrency();
    v479 = operator new(0x1B0uLL);
    sub_239B83060(v479, (uint64_t *)v1741);
    v480 = *v1639;
    v481 = (std::__shared_weak_count *)(*v1639)[3];
    v480[2] = (uint64_t)(v479 + 3);
    v480[3] = (uint64_t)v479;
    if (v481)
    {
      v482 = (unint64_t *)&v481->__shared_owners_;
      do
        v483 = __ldaxr(v482);
      while (__stlxr(v483 - 1, v482));
      if (!v483)
      {
        ((void (*)(std::__shared_weak_count *))v481->__on_zero_shared)(v481);
        std::__shared_weak_count::__release_weak(v481);
      }
    }
    v484 = *(std::__shared_weak_count **)&v1741[24];
    if (*(_QWORD *)&v1741[24])
    {
      v485 = (unint64_t *)(*(_QWORD *)&v1741[24] + 8);
      do
        v486 = __ldaxr(v485);
      while (__stlxr(v486 - 1, v485));
      if (!v486)
      {
        ((void (*)(std::__shared_weak_count *))v484->__on_zero_shared)(v484);
        std::__shared_weak_count::__release_weak(v484);
      }
    }
    if (v1656)
    {
      v487 = &v1656->__shared_owners_;
      do
        v488 = __ldaxr((unint64_t *)v487);
      while (__stlxr(v488 - 1, (unint64_t *)v487));
      if (!v488)
      {
        ((void (*)(std::__shared_weak_count *))v1656->__on_zero_shared)(v1656);
        std::__shared_weak_count::__release_weak(v1656);
      }
    }
    v306 = *v1639;
    if ((*v1639)[8])
    {
LABEL_567:
      if (v306[4])
        goto LABEL_568;
      goto LABEL_945;
    }
LABEL_912:
    v489 = v307[7];
    v490 = (std::__shared_weak_count *)v307[8];
    v1653 = v489;
    v1654 = v490;
    if (v490)
    {
      v491 = (unint64_t *)&v490->__shared_owners_;
      do
        v492 = __ldxr(v491);
      while (__stxr(v492 + 1, v491));
      *(_OWORD *)__src = xmmword_239F0C190;
      *(_QWORD *)&__src[16] = v489;
      *(_QWORD *)&__src[24] = v490;
      do
        v493 = __ldxr(v491);
      while (__stxr(v493 + 1, v491));
    }
    else
    {
      *(_OWORD *)__src = xmmword_239F0C190;
      *(_QWORD *)&__src[16] = v489;
      *(_QWORD *)&__src[24] = 0;
    }
    *(_QWORD *)&__src[8] = (int)std::thread::hardware_concurrency();
    v494 = operator new(0x1B0uLL);
    v494[1] = 0;
    v494[2] = 0;
    *v494 = &off_250AF91F0;
    *(_QWORD *)&v1860[24] = 0;
    *(_QWORD *)&v1741[24] = 0;
    sub_239A9DCA0((uint64_t)(v494 + 3), (uint64_t *)__src, v1860, v1741);
    v495 = *(_QWORD **)&v1741[24];
    if (*(_BYTE **)&v1741[24] == v1741)
    {
      v496 = 4;
      v495 = v1741;
      v307 = v1637;
    }
    else
    {
      v307 = v1637;
      if (!*(_QWORD *)&v1741[24])
        goto LABEL_924;
      v496 = 5;
    }
    (*(void (**)(void))(*v495 + 8 * v496))();
LABEL_924:
    v497 = *(_BYTE **)&v1860[24];
    if (*(_BYTE **)&v1860[24] == v1860)
    {
      v498 = 4;
      v497 = v1860;
    }
    else
    {
      if (!*(_QWORD *)&v1860[24])
      {
LABEL_929:
        v499 = *v1639;
        v500 = (std::__shared_weak_count *)(*v1639)[9];
        v499[8] = (uint64_t)(v494 + 3);
        v499[9] = (uint64_t)v494;
        if (v500)
        {
          v501 = (unint64_t *)&v500->__shared_owners_;
          do
            v502 = __ldaxr(v501);
          while (__stlxr(v502 - 1, v501));
          if (!v502)
          {
            ((void (*)(std::__shared_weak_count *))v500->__on_zero_shared)(v500);
            std::__shared_weak_count::__release_weak(v500);
          }
        }
        v503 = *(std::__shared_weak_count **)&__src[24];
        if (*(_QWORD *)&__src[24])
        {
          v504 = (unint64_t *)(*(_QWORD *)&__src[24] + 8);
          do
            v505 = __ldaxr(v504);
          while (__stlxr(v505 - 1, v504));
          if (!v505)
          {
            ((void (*)(std::__shared_weak_count *))v503->__on_zero_shared)(v503);
            std::__shared_weak_count::__release_weak(v503);
          }
        }
        if (v1654)
        {
          v506 = &v1654->__shared_owners_;
          do
            v507 = __ldaxr((unint64_t *)v506);
          while (__stlxr(v507 - 1, (unint64_t *)v506));
          if (!v507)
          {
            ((void (*)(std::__shared_weak_count *))v1654->__on_zero_shared)(v1654);
            std::__shared_weak_count::__release_weak(v1654);
          }
        }
        v306 = *v1639;
        if ((*v1639)[4])
        {
LABEL_568:
          if (v306[6])
            goto LABEL_1091;
          goto LABEL_978;
        }
LABEL_945:
        v508 = v307[7];
        v509 = (std::__shared_weak_count *)v307[8];
        v1651 = v508;
        v1652 = v509;
        if (v509)
        {
          v510 = (unint64_t *)&v509->__shared_owners_;
          do
            v511 = __ldxr(v510);
          while (__stxr(v511 + 1, v510));
          *(_OWORD *)__src = xmmword_239F0C190;
          *(_QWORD *)&__src[16] = v508;
          *(_QWORD *)&__src[24] = v509;
          do
            v512 = __ldxr(v510);
          while (__stxr(v512 + 1, v510));
        }
        else
        {
          *(_OWORD *)__src = xmmword_239F0C190;
          *(_QWORD *)&__src[16] = v508;
          *(_QWORD *)&__src[24] = 0;
        }
        *(_QWORD *)&__src[8] = (int)std::thread::hardware_concurrency();
        v513 = operator new(0x1B0uLL);
        v513[1] = 0;
        v513[2] = 0;
        *v513 = &off_250AF88A0;
        *(_QWORD *)&v1860[24] = 0;
        *(_QWORD *)&v1741[24] = 0;
        sub_239AFC640((uint64_t)(v513 + 3), (uint64_t *)__src, v1860, v1741);
        v514 = *(_QWORD **)&v1741[24];
        if (*(_BYTE **)&v1741[24] == v1741)
        {
          v515 = 4;
          v514 = v1741;
        }
        else
        {
          if (!*(_QWORD *)&v1741[24])
            goto LABEL_957;
          v515 = 5;
        }
        (*(void (**)(void))(*v514 + 8 * v515))();
LABEL_957:
        v516 = *(_BYTE **)&v1860[24];
        if (*(_BYTE **)&v1860[24] == v1860)
        {
          v517 = 4;
          v516 = v1860;
        }
        else
        {
          if (!*(_QWORD *)&v1860[24])
          {
LABEL_962:
            v518 = *v1639;
            v519 = (std::__shared_weak_count *)(*v1639)[5];
            v518[4] = (uint64_t)(v513 + 3);
            v518[5] = (uint64_t)v513;
            if (v519)
            {
              v520 = (unint64_t *)&v519->__shared_owners_;
              do
                v521 = __ldaxr(v520);
              while (__stlxr(v521 - 1, v520));
              if (!v521)
              {
                ((void (*)(std::__shared_weak_count *))v519->__on_zero_shared)(v519);
                std::__shared_weak_count::__release_weak(v519);
              }
            }
            v522 = *(std::__shared_weak_count **)&__src[24];
            if (*(_QWORD *)&__src[24])
            {
              v523 = (unint64_t *)(*(_QWORD *)&__src[24] + 8);
              do
                v524 = __ldaxr(v523);
              while (__stlxr(v524 - 1, v523));
              if (!v524)
              {
                ((void (*)(std::__shared_weak_count *))v522->__on_zero_shared)(v522);
                std::__shared_weak_count::__release_weak(v522);
              }
            }
            if (v1652)
            {
              v525 = &v1652->__shared_owners_;
              do
                v526 = __ldaxr((unint64_t *)v525);
              while (__stlxr(v526 - 1, (unint64_t *)v525));
              if (!v526)
              {
                ((void (*)(std::__shared_weak_count *))v1652->__on_zero_shared)(v1652);
                std::__shared_weak_count::__release_weak(v1652);
              }
            }
            if ((*v1639)[6])
              goto LABEL_1091;
LABEL_978:
            v527 = v1637[7];
            v528 = (std::__shared_weak_count *)v1637[8];
            v1649 = v527;
            v1650 = v528;
            if (v528)
            {
              v529 = (unint64_t *)&v528->__shared_owners_;
              do
                v530 = __ldxr(v529);
              while (__stxr(v530 + 1, v529));
              *(_OWORD *)__src = xmmword_239F0C190;
              *(_QWORD *)&__src[16] = v527;
              *(_QWORD *)&__src[24] = v528;
              do
                v531 = __ldxr(v529);
              while (__stxr(v531 + 1, v529));
            }
            else
            {
              *(_OWORD *)__src = xmmword_239F0C190;
              *(_QWORD *)&__src[16] = v527;
              *(_QWORD *)&__src[24] = 0;
            }
            *(_QWORD *)&__src[8] = (int)std::thread::hardware_concurrency();
            v532 = operator new(0x1B0uLL);
            v532[1] = 0;
            v532[2] = 0;
            *v532 = &off_250AF8D38;
            *(_QWORD *)&v1860[24] = 0;
            *(_QWORD *)&v1741[24] = 0;
            sub_239B82804((uint64_t)(v532 + 3), (uint64_t *)__src, v1860, v1741);
            v533 = *(_QWORD **)&v1741[24];
            if (*(_BYTE **)&v1741[24] == v1741)
            {
              v534 = 4;
              v533 = v1741;
            }
            else
            {
              if (!*(_QWORD *)&v1741[24])
                goto LABEL_990;
              v534 = 5;
            }
            (*(void (**)(void))(*v533 + 8 * v534))();
LABEL_990:
            v535 = *(_BYTE **)&v1860[24];
            if (*(_BYTE **)&v1860[24] == v1860)
            {
              v536 = 4;
              v535 = v1860;
            }
            else
            {
              if (!*(_QWORD *)&v1860[24])
                goto LABEL_995;
              v536 = 5;
            }
            (*(void (**)(void))(*(_QWORD *)v535 + 8 * v536))();
LABEL_995:
            v537 = *v1639;
            v538 = (std::__shared_weak_count *)(*v1639)[7];
            v537[6] = (uint64_t)(v532 + 3);
            v537[7] = (uint64_t)v532;
            if (v538)
            {
              v539 = (unint64_t *)&v538->__shared_owners_;
              do
                v540 = __ldaxr(v539);
              while (__stlxr(v540 - 1, v539));
              if (!v540)
              {
                ((void (*)(std::__shared_weak_count *))v538->__on_zero_shared)(v538);
                std::__shared_weak_count::__release_weak(v538);
              }
            }
            v541 = *(std::__shared_weak_count **)&__src[24];
            if (*(_QWORD *)&__src[24])
            {
              v542 = (unint64_t *)(*(_QWORD *)&__src[24] + 8);
              do
                v543 = __ldaxr(v542);
              while (__stlxr(v543 - 1, v542));
              if (!v543)
              {
                ((void (*)(std::__shared_weak_count *))v541->__on_zero_shared)(v541);
                std::__shared_weak_count::__release_weak(v541);
              }
            }
            v461 = v1650;
            if (!v1650)
              goto LABEL_1091;
            v544 = (unint64_t *)&v1650->__shared_owners_;
            do
              v463 = __ldaxr(v544);
            while (__stlxr(v463 - 1, v544));
LABEL_1008:
            if (!v463)
            {
              ((void (*)(std::__shared_weak_count *))v461->__on_zero_shared)(v461);
              std::__shared_weak_count::__release_weak(v461);
            }
            goto LABEL_1091;
          }
          v517 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v516 + 8 * v517))();
        goto LABEL_962;
      }
      v498 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v497 + 8 * v498))();
    goto LABEL_929;
  }
  v299 = *v1639;
  v300 = (*v1639)[60];
  if (**v1639)
    goto LABEL_603;
  v301 = v1637[7];
  v302 = (std::__shared_weak_count *)v1637[8];
  v1667 = v301;
  v1668 = v302;
  if (v302)
  {
    v303 = (unint64_t *)&v302->__shared_owners_;
    do
      v304 = __ldxr(v303);
    while (__stxr(v304 + 1, v303));
    *(_QWORD *)&__src[8] = 0;
    *(_QWORD *)__src = 0;
    *(_QWORD *)&__src[16] = v301;
    *(_QWORD *)&__src[24] = v302;
    do
      v305 = __ldxr(v303);
    while (__stxr(v305 + 1, v303));
  }
  else
  {
    *(_QWORD *)&__src[8] = 0;
    *(_QWORD *)__src = 0;
    *(_QWORD *)&__src[16] = v301;
    *(_QWORD *)&__src[24] = 0;
  }
  *(_QWORD *)&__src[8] = (int)std::thread::hardware_concurrency();
  v313 = operator new(0x1B0uLL);
  v313[1] = 0;
  v313[2] = 0;
  *v313 = &off_250AF7EE8;
  v314 = operator new(0x28uLL);
  v315 = v299 + 235;
  *v314 = &off_250AF7F20;
  v314[1] = v315;
  v314[2] = 1064514355;
  v314[3] = v300;
  *((_BYTE *)v314 + 32) = 1;
  *(_QWORD *)&v1741[24] = v314;
  v316 = operator new(0x28uLL);
  *v316 = &off_250AF7F68;
  v316[1] = v315;
  v316[2] = 1064514355;
  v316[3] = v300;
  *((_BYTE *)v316 + 32) = 1;
  *(_QWORD *)&v1860[24] = v316;
  sub_239A7DBE8((uint64_t)(v313 + 3), (uint64_t *)__src, v1741, v1860);
  v317 = *(_BYTE **)&v1860[24];
  if (*(_BYTE **)&v1860[24] == v1860)
  {
    v318 = 4;
    v317 = v1860;
  }
  else
  {
    if (!*(_QWORD *)&v1860[24])
      goto LABEL_582;
    v318 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v317 + 8 * v318))();
LABEL_582:
  v319 = *(_QWORD **)&v1741[24];
  if (*(_BYTE **)&v1741[24] == v1741)
  {
    v320 = 4;
    v319 = v1741;
  }
  else
  {
    if (!*(_QWORD *)&v1741[24])
      goto LABEL_587;
    v320 = 5;
  }
  (*(void (**)(void))(*v319 + 8 * v320))();
LABEL_587:
  v321 = *v1639;
  v322 = (std::__shared_weak_count *)(*v1639)[1];
  *v321 = (uint64_t)(v313 + 3);
  v321[1] = (uint64_t)v313;
  if (v322)
  {
    v323 = (unint64_t *)&v322->__shared_owners_;
    do
      v324 = __ldaxr(v323);
    while (__stlxr(v324 - 1, v323));
    if (!v324)
    {
      ((void (*)(std::__shared_weak_count *))v322->__on_zero_shared)(v322);
      std::__shared_weak_count::__release_weak(v322);
    }
  }
  v325 = *(std::__shared_weak_count **)&__src[24];
  if (*(_QWORD *)&__src[24])
  {
    v326 = (unint64_t *)(*(_QWORD *)&__src[24] + 8);
    do
      v327 = __ldaxr(v326);
    while (__stlxr(v327 - 1, v326));
    if (!v327)
    {
      ((void (*)(std::__shared_weak_count *))v325->__on_zero_shared)(v325);
      std::__shared_weak_count::__release_weak(v325);
    }
  }
  if (v1668)
  {
    v328 = &v1668->__shared_owners_;
    do
      v329 = __ldaxr((unint64_t *)v328);
    while (__stlxr(v329 - 1, (unint64_t *)v328));
    if (!v329)
    {
      ((void (*)(std::__shared_weak_count *))v1668->__on_zero_shared)(v1668);
      std::__shared_weak_count::__release_weak(v1668);
    }
  }
  v299 = *v1639;
LABEL_603:
  if (v299[2])
  {
    v1624 = 332;
    goto LABEL_2958;
  }
  if ((v1633 & 1) == 0)
  {
    v333 = v1637[7];
    v334 = (std::__shared_weak_count *)v1637[8];
    v1665 = v333;
    v1666 = v334;
    if (v334)
    {
      v335 = (unint64_t *)&v334->__shared_owners_;
      do
        v336 = __ldxr(v335);
      while (__stxr(v336 + 1, v335));
      *(_QWORD *)&__src[8] = 0;
      *(_QWORD *)__src = 0;
      *(_QWORD *)&__src[16] = v333;
      *(_QWORD *)&__src[24] = v334;
      do
        v337 = __ldxr(v335);
      while (__stxr(v337 + 1, v335));
    }
    else
    {
      *(_QWORD *)&__src[8] = 0;
      *(_QWORD *)__src = 0;
      *(_QWORD *)&__src[16] = v333;
      *(_QWORD *)&__src[24] = 0;
    }
    *(_QWORD *)&__src[8] = (int)std::thread::hardware_concurrency();
    v338 = operator new(0x1B0uLL);
    v338[1] = 0;
    v338[2] = 0;
    *v338 = &off_250AF83E8;
    v339 = (char *)operator new(0x28uLL);
    v340 = v299 + 240;
    *(_QWORD *)v339 = &off_250AF8420;
    *((_QWORD *)v339 + 1) = v340;
    *((_QWORD *)v339 + 2) = 1064514355;
    *((_QWORD *)v339 + 3) = v300;
    v339[32] = 1;
    *(_DWORD *)(v339 + 33) = v1727[0];
    *((_DWORD *)v339 + 9) = *(_DWORD *)((char *)v1727 + 3);
    *(_QWORD *)&v1741[24] = v339;
    v341 = (char *)operator new(0x28uLL);
    *(_QWORD *)v341 = &off_250AF8468;
    *((_QWORD *)v341 + 1) = v340;
    *((_QWORD *)v341 + 2) = 1064514355;
    *((_QWORD *)v341 + 3) = v300;
    v341[32] = 1;
    *(_DWORD *)(v341 + 33) = v1727[0];
    *((_DWORD *)v341 + 9) = *(_DWORD *)((char *)v1727 + 3);
    *(_QWORD *)&v1860[24] = v341;
    sub_239B07D6C((uint64_t)(v338 + 3), (uint64_t *)__src, v1741, v1860);
    v342 = *(_BYTE **)&v1860[24];
    if (*(_BYTE **)&v1860[24] == v1860)
    {
      v343 = 4;
      v342 = v1860;
    }
    else
    {
      if (!*(_QWORD *)&v1860[24])
        goto LABEL_623;
      v343 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v342 + 8 * v343))();
LABEL_623:
    v344 = *(_QWORD **)&v1741[24];
    if (*(_BYTE **)&v1741[24] == v1741)
    {
      v345 = 4;
      v344 = v1741;
    }
    else
    {
      if (!*(_QWORD *)&v1741[24])
      {
LABEL_628:
        v346 = *v1639;
        v347 = (std::__shared_weak_count *)(*v1639)[3];
        v346[2] = (uint64_t)(v338 + 3);
        v346[3] = (uint64_t)v338;
        if (v347)
        {
          v348 = (unint64_t *)&v347->__shared_owners_;
          do
            v349 = __ldaxr(v348);
          while (__stlxr(v349 - 1, v348));
          if (!v349)
          {
            ((void (*)(std::__shared_weak_count *))v347->__on_zero_shared)(v347);
            std::__shared_weak_count::__release_weak(v347);
          }
        }
        v350 = *(std::__shared_weak_count **)&__src[24];
        if (*(_QWORD *)&__src[24])
        {
          v351 = (unint64_t *)(*(_QWORD *)&__src[24] + 8);
          do
            v352 = __ldaxr(v351);
          while (__stlxr(v352 - 1, v351));
          if (!v352)
          {
            ((void (*)(std::__shared_weak_count *))v350->__on_zero_shared)(v350);
            std::__shared_weak_count::__release_weak(v350);
          }
        }
        if (v1666)
        {
          v353 = &v1666->__shared_owners_;
          do
            v354 = __ldaxr((unint64_t *)v353);
          while (__stlxr(v354 - 1, (unint64_t *)v353));
          if (!v354)
          {
            ((void (*)(std::__shared_weak_count *))v1666->__on_zero_shared)(v1666);
            std::__shared_weak_count::__release_weak(v1666);
          }
        }
        if ((*v1639)[4])
          goto LABEL_2941;
        sub_2396F295C((uint64_t *)(*v1636 + 392), *v1636 + 8, (uint64_t)&__dst);
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_23941A7F8(v1732, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
          {
            sub_23941A7F8(v1675, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
LABEL_659:
            v366 = v1637[7];
            v367 = (std::__shared_weak_count *)v1637[8];
            v1663 = v366;
            v1664 = v367;
            if (v367)
            {
              v368 = (unint64_t *)&v367->__shared_owners_;
              do
                v369 = __ldxr(v368);
              while (__stxr(v369 + 1, v368));
              *(_QWORD *)&__src[8] = 0;
              *(_QWORD *)__src = 0;
              *(_QWORD *)&__src[16] = v366;
              *(_QWORD *)&__src[24] = v367;
              do
                v370 = __ldxr(v368);
              while (__stxr(v370 + 1, v368));
            }
            else
            {
              *(_QWORD *)&__src[8] = 0;
              *(_QWORD *)__src = 0;
              *(_QWORD *)&__src[16] = v366;
              *(_QWORD *)&__src[24] = 0;
            }
            *(_QWORD *)&__src[8] = (int)std::thread::hardware_concurrency();
            v371 = operator new(0x1B0uLL);
            v371[1] = 0;
            v371[2] = 0;
            *v371 = &off_250AF88A0;
            if ((v1732[23] & 0x80000000) != 0)
            {
              sub_23941A7F8(v1847, *(void **)v1732, *(unint64_t *)&v1732[8]);
            }
            else
            {
              *(_OWORD *)v1847 = *(_OWORD *)v1732;
              *(_QWORD *)&v1847[16] = *(_QWORD *)&v1732[16];
            }
            *(_QWORD *)&v1741[24] = 0;
            v372 = operator new(0x20uLL);
            *v372 = off_250AF88D8;
            v373 = v372 + 1;
            if ((v1847[23] & 0x80000000) != 0)
            {
              sub_23941A7F8(v373, *(void **)v1847, *(unint64_t *)&v1847[8]);
            }
            else
            {
              *(_OWORD *)v373 = *(_OWORD *)v1847;
              v372[3] = *(_QWORD *)&v1847[16];
            }
            *(_QWORD *)&v1741[24] = v372;
            if (SBYTE7(v1676) < 0)
            {
              sub_23941A7F8(__p, v1675[0], (unint64_t)v1675[1]);
            }
            else
            {
              *(_OWORD *)__p = *(_OWORD *)v1675;
              *(_QWORD *)&__p[16] = v1676;
            }
            *(_QWORD *)&v1860[24] = 0;
            v374 = operator new(0x20uLL);
            *v374 = off_250AF8920;
            v375 = v374 + 1;
            if ((__p[23] & 0x80000000) != 0)
            {
              sub_23941A7F8(v375, *(void **)__p, *(unint64_t *)&__p[8]);
            }
            else
            {
              *(_OWORD *)v375 = *(_OWORD *)__p;
              v374[3] = *(_QWORD *)&__p[16];
            }
            *(_QWORD *)&v1860[24] = v374;
            sub_239AFC640((uint64_t)(v371 + 3), (uint64_t *)__src, v1741, v1860);
            v376 = *(_BYTE **)&v1860[24];
            if (*(_BYTE **)&v1860[24] == v1860)
            {
              v377 = 4;
              v376 = v1860;
            }
            else
            {
              if (!*(_QWORD *)&v1860[24])
                goto LABEL_683;
              v377 = 5;
            }
            (*(void (**)(void))(*(_QWORD *)v376 + 8 * v377))();
LABEL_683:
            if ((__p[23] & 0x80000000) != 0)
              operator delete(*(void **)__p);
            v378 = *(_QWORD **)&v1741[24];
            if (*(_BYTE **)&v1741[24] == v1741)
            {
              v379 = 4;
              v378 = v1741;
            }
            else
            {
              if (!*(_QWORD *)&v1741[24])
                goto LABEL_690;
              v379 = 5;
            }
            (*(void (**)(void))(*v378 + 8 * v379))();
LABEL_690:
            if ((v1847[23] & 0x80000000) != 0)
              operator delete(*(void **)v1847);
            v380 = *v1639;
            v381 = (std::__shared_weak_count *)(*v1639)[5];
            v380[4] = (uint64_t)(v371 + 3);
            v380[5] = (uint64_t)v371;
            if (v381)
            {
              v382 = (unint64_t *)&v381->__shared_owners_;
              do
                v383 = __ldaxr(v382);
              while (__stlxr(v383 - 1, v382));
              if (!v383)
              {
                ((void (*)(std::__shared_weak_count *))v381->__on_zero_shared)(v381);
                std::__shared_weak_count::__release_weak(v381);
              }
            }
            v384 = *(std::__shared_weak_count **)&__src[24];
            if (!*(_QWORD *)&__src[24])
              goto LABEL_701;
            v385 = (unint64_t *)(*(_QWORD *)&__src[24] + 8);
            do
              v386 = __ldaxr(v385);
            while (__stlxr(v386 - 1, v385));
            if (!v386)
            {
              ((void (*)(std::__shared_weak_count *))v384->__on_zero_shared)(v384);
              std::__shared_weak_count::__release_weak(v384);
              v387 = v1664;
              if (!v1664)
                goto LABEL_705;
            }
            else
            {
LABEL_701:
              v387 = v1664;
              if (!v1664)
                goto LABEL_705;
            }
            v388 = (unint64_t *)&v387->__shared_owners_;
            do
              v389 = __ldaxr(v388);
            while (__stlxr(v389 - 1, v388));
            if (!v389)
            {
              ((void (*)(std::__shared_weak_count *))v387->__on_zero_shared)(v387);
              std::__shared_weak_count::__release_weak(v387);
              if ((SBYTE7(v1676) & 0x80000000) == 0)
              {
LABEL_706:
                if ((v1732[23] & 0x80000000) == 0)
                  goto LABEL_707;
                goto LABEL_866;
              }
LABEL_865:
              operator delete(v1675[0]);
              if ((v1732[23] & 0x80000000) == 0)
              {
LABEL_707:
                if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                {
LABEL_708:
                  v390 = *v1639;
                  goto LABEL_746;
                }
LABEL_867:
                operator delete(__dst.__r_.__value_.__l.__data_);
                goto LABEL_708;
              }
LABEL_866:
              operator delete(*(void **)v1732);
              if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                goto LABEL_708;
              goto LABEL_867;
            }
LABEL_705:
            if ((SBYTE7(v1676) & 0x80000000) == 0)
              goto LABEL_706;
            goto LABEL_865;
          }
        }
        else
        {
          *(std::string *)v1732 = __dst;
        }
        *(_OWORD *)v1675 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
        *(_QWORD *)&v1676 = *((_QWORD *)&__dst.__r_.__value_.__l + 2);
        goto LABEL_659;
      }
      v345 = 5;
    }
    (*(void (**)(void))(*v344 + 8 * v345))();
    goto LABEL_628;
  }
  sub_239B07600(*v1636, v299 + 2);
  v330 = *v1639;
  if ((*v1639)[4])
  {
LABEL_2941:
    v1624 = 385;
    goto LABEL_2958;
  }
  v331 = *v1636;
  if (!*(_BYTE *)(*v1636 + 4))
  {
    v1624 = 884;
    goto LABEL_2958;
  }
  if (!*(_BYTE *)(v331 + 1240) || !*(_QWORD *)(v331 + 1224))
  {
LABEL_2935:
    v1619 = (std::runtime_error *)__cxa_allocate_exception(0x18uLL);
    sub_23941A4FC(v1741, "");
    std::runtime_error::runtime_error(v1619, (const std::string *)v1741);
    v1619->__vftable = (std::runtime_error_vtbl *)&off_250AF79D0;
    LODWORD(v1619[1].__vftable) = 2;
    __cxa_throw(v1619, (struct type_info *)&unk_250AF7A30, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  sub_239A8DC0C((uint64_t)v1860, v331 + 1200);
  if (*(char *)(v331 + 31) < 0)
  {
    sub_23941A7F8(&v1860[40], *(void **)(v331 + 8), *(_QWORD *)(v331 + 16));
  }
  else
  {
    v332 = *(_OWORD *)(v331 + 8);
    *(_QWORD *)&v1860[56] = *(_QWORD *)(v331 + 24);
    *(_OWORD *)&v1860[40] = v332;
  }
  v355 = *(_QWORD *)(v331 + 2312);
  v356 = *(_QWORD *)(v331 + 2320);
  __dst.__r_.__value_.__r.__words[0] = v355;
  __dst.__r_.__value_.__l.__size_ = v356;
  if (v356)
  {
    v357 = (unint64_t *)(v356 + 8);
    do
      v358 = __ldxr(v357);
    while (__stxr(v358 + 1, v357));
    *(_QWORD *)&__p[8] = 0;
    *(_QWORD *)__p = 0;
    *(_QWORD *)&__p[16] = v355;
    *(_QWORD *)&__p[24] = v356;
    do
      v359 = __ldxr(v357);
    while (__stxr(v359 + 1, v357));
  }
  else
  {
    *(_QWORD *)&__p[8] = 0;
    *(_QWORD *)__p = 0;
    *(_QWORD *)&__p[16] = v355;
    *(_QWORD *)&__p[24] = 0;
  }
  *(_QWORD *)&__p[8] = (int)std::thread::hardware_concurrency();
  v360 = operator new(0x1B0uLL);
  v360[1] = 0;
  v360[2] = 0;
  *v360 = &off_250AF88A0;
  sub_239AFC55C((uint64_t)v1741, (uint64_t)v1860);
  *(_QWORD *)&__src[24] = 0;
  v361 = (char *)operator new(0x48uLL);
  v362 = *(_OWORD *)v1741;
  *(_OWORD *)v1741 = 0uLL;
  *(_QWORD *)v361 = off_250AF4100;
  *(_OWORD *)(v361 + 8) = v362;
  v363 = *(_QWORD *)&v1741[16];
  v364 = *(_QWORD *)&v1741[24];
  *((_QWORD *)v361 + 3) = *(_QWORD *)&v1741[16];
  *((_QWORD *)v361 + 4) = v364;
  *((_DWORD *)v361 + 10) = *(_DWORD *)&v1741[32];
  if (v364)
  {
    v365 = *(_QWORD *)(v363 + 8);
    if ((*((_QWORD *)&v362 + 1) & (*((_QWORD *)&v362 + 1) - 1)) != 0)
    {
      if (v365 >= *((_QWORD *)&v362 + 1))
        v365 %= *((_QWORD *)&v362 + 1);
    }
    else
    {
      v365 &= *((_QWORD *)&v362 + 1) - 1;
    }
    *(_QWORD *)(v362 + 8 * v365) = v361 + 24;
    *(_QWORD *)&v1741[16] = 0;
    *(_QWORD *)&v1741[24] = 0;
  }
  *((_OWORD *)v361 + 3) = *(_OWORD *)&v1741[40];
  *((_QWORD *)v361 + 8) = *(_QWORD *)&v1741[56];
  memset(&v1741[40], 0, 24);
  *(_QWORD *)&__src[24] = v361;
  *(_QWORD *)v1847 = &off_250AF4148;
  *(_QWORD *)&v1847[24] = v1847;
  sub_239AFC640((uint64_t)(v360 + 3), (uint64_t *)__p, __src, v1847);
  v391 = *(_QWORD **)&v1847[24];
  if (*(_BYTE **)&v1847[24] == v1847)
  {
    v392 = 4;
    v391 = v1847;
  }
  else
  {
    if (!*(_QWORD *)&v1847[24])
      goto LABEL_717;
    v392 = 5;
  }
  (*(void (**)(void))(*v391 + 8 * v392))();
LABEL_717:
  v393 = *(_QWORD **)&__src[24];
  if (*(_BYTE **)&__src[24] == __src)
  {
    v394 = 4;
    v393 = __src;
  }
  else
  {
    if (!*(_QWORD *)&__src[24])
      goto LABEL_722;
    v394 = 5;
  }
  (*(void (**)(void))(*v393 + 8 * v394))();
LABEL_722:
  if ((v1741[63] & 0x80000000) != 0)
    operator delete(*(void **)&v1741[40]);
  v395 = *(_QWORD **)&v1741[16];
  if (*(_QWORD *)&v1741[16])
  {
    do
    {
      v409 = (_QWORD *)*v395;
      v410 = v395[3];
      if (v410)
      {
        v411 = v395[4];
        v408 = (void *)v395[3];
        if (v411 != v410)
        {
          do
          {
            if (*(char *)(v411 - 1) < 0)
              operator delete(*(void **)(v411 - 24));
            v411 -= 24;
          }
          while (v411 != v410);
          v408 = (void *)v395[3];
        }
        v395[4] = v410;
        operator delete(v408);
      }
      operator delete(v395);
      v395 = v409;
    }
    while (v409);
  }
  v396 = *(void **)v1741;
  *(_QWORD *)v1741 = 0;
  if (v396)
    operator delete(v396);
  v397 = (std::__shared_weak_count *)v330[5];
  v330[4] = (uint64_t)(v360 + 3);
  v330[5] = (uint64_t)v360;
  if (v397)
  {
    v398 = (unint64_t *)&v397->__shared_owners_;
    do
      v399 = __ldaxr(v398);
    while (__stlxr(v399 - 1, v398));
    if (!v399)
    {
      ((void (*)(std::__shared_weak_count *))v397->__on_zero_shared)(v397);
      std::__shared_weak_count::__release_weak(v397);
    }
  }
  v400 = *(std::__shared_weak_count **)&__p[24];
  if (!*(_QWORD *)&__p[24])
    goto LABEL_736;
  v401 = (unint64_t *)(*(_QWORD *)&__p[24] + 8);
  do
    v402 = __ldaxr(v401);
  while (__stlxr(v402 - 1, v401));
  if (!v402)
  {
    ((void (*)(std::__shared_weak_count *))v400->__on_zero_shared)(v400);
    std::__shared_weak_count::__release_weak(v400);
    v403 = (std::__shared_weak_count *)__dst.__r_.__value_.__l.__size_;
    if (!__dst.__r_.__value_.__l.__size_)
      goto LABEL_740;
  }
  else
  {
LABEL_736:
    v403 = (std::__shared_weak_count *)__dst.__r_.__value_.__l.__size_;
    if (!__dst.__r_.__value_.__l.__size_)
      goto LABEL_740;
  }
  v404 = (unint64_t *)&v403->__shared_owners_;
  do
    v405 = __ldaxr(v404);
  while (__stlxr(v405 - 1, v404));
  if (v405)
  {
LABEL_740:
    if ((v1860[63] & 0x80000000) == 0)
      goto LABEL_742;
    goto LABEL_741;
  }
  ((void (*)(std::__shared_weak_count *))v403->__on_zero_shared)(v403);
  std::__shared_weak_count::__release_weak(v403);
  if ((v1860[63] & 0x80000000) != 0)
LABEL_741:
    operator delete(*(void **)&v1860[40]);
LABEL_742:
  v406 = *(_QWORD **)&v1860[16];
  if (*(_QWORD *)&v1860[16])
  {
    do
    {
      v413 = (_QWORD *)*v406;
      v414 = v406[3];
      if (v414)
      {
        v415 = v406[4];
        v412 = (void *)v406[3];
        if (v415 != v414)
        {
          do
          {
            if (*(char *)(v415 - 1) < 0)
              operator delete(*(void **)(v415 - 24));
            v415 -= 24;
          }
          while (v415 != v414);
          v412 = (void *)v406[3];
        }
        v406[4] = v414;
        operator delete(v412);
      }
      operator delete(v406);
      v406 = v413;
    }
    while (v413);
  }
  v407 = *(void **)v1860;
  *(_QWORD *)v1860 = 0;
  if (v407)
    operator delete(v407);
  v390 = *v1639;
  if (!(*v1639)[4])
    goto LABEL_2935;
LABEL_746:
  if (v390[6])
    goto LABEL_820;
  sub_2396F295C((uint64_t *)(*v1636 + 416), *v1636 + 8, (uint64_t)&__dst);
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    *(std::string *)v1732 = __dst;
LABEL_768:
    *(_OWORD *)v1675 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
    *(_QWORD *)&v1676 = *((_QWORD *)&__dst.__r_.__value_.__l + 2);
    goto LABEL_769;
  }
  sub_23941A7F8(v1732, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_768;
  sub_23941A7F8(v1675, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
LABEL_769:
  v416 = v1637[7];
  v417 = (std::__shared_weak_count *)v1637[8];
  v1661 = v416;
  v1662 = v417;
  if (v417)
  {
    v418 = (unint64_t *)&v417->__shared_owners_;
    do
      v419 = __ldxr(v418);
    while (__stxr(v419 + 1, v418));
    *(_QWORD *)&__src[8] = 0;
    *(_QWORD *)__src = 0;
    *(_QWORD *)&__src[16] = v416;
    *(_QWORD *)&__src[24] = v417;
    do
      v420 = __ldxr(v418);
    while (__stxr(v420 + 1, v418));
  }
  else
  {
    *(_QWORD *)&__src[8] = 0;
    *(_QWORD *)__src = 0;
    *(_QWORD *)&__src[16] = v416;
    *(_QWORD *)&__src[24] = 0;
  }
  *(_QWORD *)&__src[8] = (int)std::thread::hardware_concurrency();
  v421 = operator new(0x1B0uLL);
  v421[1] = 0;
  v421[2] = 0;
  *v421 = &off_250AF8D38;
  if ((v1732[23] & 0x80000000) != 0)
  {
    sub_23941A7F8(v1847, *(void **)v1732, *(unint64_t *)&v1732[8]);
  }
  else
  {
    *(_OWORD *)v1847 = *(_OWORD *)v1732;
    *(_QWORD *)&v1847[16] = *(_QWORD *)&v1732[16];
  }
  *(_QWORD *)&v1741[24] = 0;
  v422 = operator new(0x20uLL);
  *v422 = off_250AF8D70;
  v423 = v422 + 1;
  if ((v1847[23] & 0x80000000) != 0)
  {
    sub_23941A7F8(v423, *(void **)v1847, *(unint64_t *)&v1847[8]);
  }
  else
  {
    *(_OWORD *)v423 = *(_OWORD *)v1847;
    v422[3] = *(_QWORD *)&v1847[16];
  }
  *(_QWORD *)&v1741[24] = v422;
  if (SBYTE7(v1676) < 0)
  {
    sub_23941A7F8(__p, v1675[0], (unint64_t)v1675[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v1675;
    *(_QWORD *)&__p[16] = v1676;
  }
  *(_QWORD *)&v1860[24] = 0;
  v424 = operator new(0x20uLL);
  *v424 = off_250AF8DB8;
  v425 = v424 + 1;
  if ((__p[23] & 0x80000000) != 0)
  {
    sub_23941A7F8(v425, *(void **)__p, *(unint64_t *)&__p[8]);
  }
  else
  {
    *(_OWORD *)v425 = *(_OWORD *)__p;
    v424[3] = *(_QWORD *)&__p[16];
  }
  *(_QWORD *)&v1860[24] = v424;
  sub_239B82804((uint64_t)(v421 + 3), (uint64_t *)__src, v1741, v1860);
  v426 = *(_BYTE **)&v1860[24];
  if (*(_BYTE **)&v1860[24] == v1860)
  {
    v427 = 4;
    v426 = v1860;
  }
  else
  {
    if (!*(_QWORD *)&v1860[24])
      goto LABEL_793;
    v427 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v426 + 8 * v427))();
LABEL_793:
  if ((__p[23] & 0x80000000) != 0)
    operator delete(*(void **)__p);
  v428 = *(_QWORD **)&v1741[24];
  if (*(_BYTE **)&v1741[24] == v1741)
  {
    v429 = 4;
    v428 = v1741;
  }
  else
  {
    if (!*(_QWORD *)&v1741[24])
      goto LABEL_800;
    v429 = 5;
  }
  (*(void (**)(void))(*v428 + 8 * v429))();
LABEL_800:
  if ((v1847[23] & 0x80000000) != 0)
    operator delete(*(void **)v1847);
  v430 = *v1639;
  v431 = (std::__shared_weak_count *)(*v1639)[7];
  v430[6] = (uint64_t)(v421 + 3);
  v430[7] = (uint64_t)v421;
  if (v431)
  {
    v432 = (unint64_t *)&v431->__shared_owners_;
    do
      v433 = __ldaxr(v432);
    while (__stlxr(v433 - 1, v432));
    if (!v433)
    {
      ((void (*)(std::__shared_weak_count *))v431->__on_zero_shared)(v431);
      std::__shared_weak_count::__release_weak(v431);
    }
  }
  v434 = *(std::__shared_weak_count **)&__src[24];
  if (*(_QWORD *)&__src[24])
  {
    v435 = (unint64_t *)(*(_QWORD *)&__src[24] + 8);
    do
      v436 = __ldaxr(v435);
    while (__stlxr(v436 - 1, v435));
    if (!v436)
    {
      ((void (*)(std::__shared_weak_count *))v434->__on_zero_shared)(v434);
      std::__shared_weak_count::__release_weak(v434);
    }
  }
  if (!v1662)
    goto LABEL_816;
  v437 = &v1662->__shared_owners_;
  do
    v438 = __ldaxr((unint64_t *)v437);
  while (__stlxr(v438 - 1, (unint64_t *)v437));
  if (!v438)
  {
    ((void (*)(std::__shared_weak_count *))v1662->__on_zero_shared)(v1662);
    std::__shared_weak_count::__release_weak(v1662);
    if ((SBYTE7(v1676) & 0x80000000) == 0)
    {
LABEL_817:
      if ((v1732[23] & 0x80000000) == 0)
        goto LABEL_818;
LABEL_870:
      operator delete(*(void **)v1732);
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_819;
LABEL_871:
      operator delete(__dst.__r_.__value_.__l.__data_);
      goto LABEL_819;
    }
  }
  else
  {
LABEL_816:
    if ((SBYTE7(v1676) & 0x80000000) == 0)
      goto LABEL_817;
  }
  operator delete(v1675[0]);
  if ((v1732[23] & 0x80000000) != 0)
    goto LABEL_870;
LABEL_818:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_871;
LABEL_819:
  v390 = *v1639;
LABEL_820:
  if (v390[8])
  {
    v1624 = 449;
    goto LABEL_2958;
  }
  if ((v1633 & 1) == 0)
  {
    v441 = v1637[7];
    v442 = (std::__shared_weak_count *)v1637[8];
    v1659 = v441;
    v1660 = v442;
    if (v442)
    {
      v443 = (unint64_t *)&v442->__shared_owners_;
      do
        v444 = __ldxr(v443);
      while (__stxr(v444 + 1, v443));
      *(_QWORD *)&__src[8] = 0;
      *(_QWORD *)__src = 0;
      *(_QWORD *)&__src[16] = v441;
      *(_QWORD *)&__src[24] = v442;
      do
        v445 = __ldxr(v443);
      while (__stxr(v445 + 1, v443));
    }
    else
    {
      *(_QWORD *)&__src[8] = 0;
      *(_QWORD *)__src = 0;
      *(_QWORD *)&__src[16] = v441;
      *(_QWORD *)&__src[24] = 0;
    }
    *(_QWORD *)&__src[8] = (int)std::thread::hardware_concurrency();
    v446 = operator new(0x1B0uLL);
    v446[1] = 0;
    v446[2] = 0;
    *v446 = &off_250AF91F0;
    v447 = (char *)operator new(0x28uLL);
    v448 = v390 + 245;
    *(_QWORD *)v447 = &off_250AF9228;
    *((_QWORD *)v447 + 1) = v448;
    *((_QWORD *)v447 + 2) = 1064514355;
    *((_QWORD *)v447 + 3) = v300;
    v447[32] = 1;
    *(_DWORD *)(v447 + 33) = v1727[0];
    *((_DWORD *)v447 + 9) = *(_DWORD *)((char *)v1727 + 3);
    *(_QWORD *)&v1741[24] = v447;
    v449 = (char *)operator new(0x28uLL);
    *(_QWORD *)v449 = &off_250AF9270;
    *((_QWORD *)v449 + 1) = v448;
    *((_QWORD *)v449 + 2) = 1064514355;
    *((_QWORD *)v449 + 3) = v300;
    v449[32] = 1;
    *(_DWORD *)(v449 + 33) = v1727[0];
    *((_DWORD *)v449 + 9) = *(_DWORD *)((char *)v1727 + 3);
    *(_QWORD *)&v1860[24] = v449;
    sub_239A9DCA0((uint64_t)(v446 + 3), (uint64_t *)__src, v1741, v1860);
    v450 = *(_BYTE **)&v1860[24];
    if (*(_BYTE **)&v1860[24] == v1860)
    {
      v451 = 4;
      v450 = v1860;
    }
    else
    {
      if (!*(_QWORD *)&v1860[24])
        goto LABEL_839;
      v451 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v450 + 8 * v451))();
LABEL_839:
    v452 = *(_QWORD **)&v1741[24];
    if (*(_BYTE **)&v1741[24] == v1741)
    {
      v453 = 4;
      v452 = v1741;
    }
    else
    {
      if (!*(_QWORD *)&v1741[24])
        goto LABEL_844;
      v453 = 5;
    }
    (*(void (**)(void))(*v452 + 8 * v453))();
LABEL_844:
    v454 = *v1639;
    v455 = (std::__shared_weak_count *)(*v1639)[9];
    v454[8] = (uint64_t)(v446 + 3);
    v454[9] = (uint64_t)v446;
    if (v455)
    {
      v456 = (unint64_t *)&v455->__shared_owners_;
      do
        v457 = __ldaxr(v456);
      while (__stlxr(v457 - 1, v456));
      if (!v457)
      {
        ((void (*)(std::__shared_weak_count *))v455->__on_zero_shared)(v455);
        std::__shared_weak_count::__release_weak(v455);
      }
    }
    v458 = *(std::__shared_weak_count **)&__src[24];
    if (*(_QWORD *)&__src[24])
    {
      v459 = (unint64_t *)(*(_QWORD *)&__src[24] + 8);
      do
        v460 = __ldaxr(v459);
      while (__stlxr(v460 - 1, v459));
      if (!v460)
      {
        ((void (*)(std::__shared_weak_count *))v458->__on_zero_shared)(v458);
        std::__shared_weak_count::__release_weak(v458);
      }
    }
    v461 = v1660;
    if (!v1660)
      goto LABEL_1091;
    v462 = (unint64_t *)&v1660->__shared_owners_;
    do
      v463 = __ldaxr(v462);
    while (__stlxr(v463 - 1, v462));
    goto LABEL_1008;
  }
  v439 = *v1636;
  if (!*(_BYTE *)(*v1636 + 4))
  {
    v1624 = 773;
LABEL_2958:
    sub_239A444D4((uint64_t)"unknown file", v1624, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (!*(_BYTE *)(v439 + 1160) || !*(_QWORD *)(v439 + 1144))
    goto LABEL_1091;
  sub_239A8DC0C((uint64_t)v1860, v439 + 1120);
  if (*(char *)(v439 + 31) < 0)
  {
    sub_23941A7F8(&v1860[40], *(void **)(v439 + 8), *(_QWORD *)(v439 + 16));
  }
  else
  {
    v440 = *(_OWORD *)(v439 + 8);
    *(_QWORD *)&v1860[56] = *(_QWORD *)(v439 + 24);
    *(_OWORD *)&v1860[40] = v440;
  }
  v545 = *(void **)(v439 + 2312);
  v546 = *(unint64_t **)(v439 + 2320);
  v1675[0] = v545;
  v1675[1] = v546;
  if (v546)
  {
    v547 = v546 + 1;
    do
      v548 = __ldxr(v547);
    while (__stxr(v548 + 1, v547));
    *(_QWORD *)&__p[8] = 0;
    *(_QWORD *)__p = 0;
    *(_QWORD *)&__p[16] = v545;
    *(_QWORD *)&__p[24] = v546;
    do
      v549 = __ldxr(v547);
    while (__stxr(v549 + 1, v547));
  }
  else
  {
    *(_QWORD *)&__p[8] = 0;
    *(_QWORD *)__p = 0;
    *(_QWORD *)&__p[16] = v545;
    *(_QWORD *)&__p[24] = 0;
  }
  *(_QWORD *)&__p[8] = (int)std::thread::hardware_concurrency();
  v550 = operator new(0x1B0uLL);
  v550[1] = 0;
  v550[2] = 0;
  *v550 = &off_250AF91F0;
  sub_239A9DBBC((uint64_t)v1741, (uint64_t)v1860);
  *(_QWORD *)&v1847[24] = 0;
  v551 = operator new(0x48uLL);
  *(_QWORD *)v551 = off_250AF3350;
  sub_239A8DC0C((uint64_t)v551 + 8, (uint64_t)v1741);
  v551[3] = *(_OWORD *)&v1741[40];
  *((_QWORD *)v551 + 8) = *(_QWORD *)&v1741[56];
  memset(&v1741[40], 0, 24);
  *(_QWORD *)&v1847[24] = v551;
  *(_QWORD *)&__src[24] = 0;
  sub_239A9DCA0((uint64_t)(v550 + 3), (uint64_t *)__p, v1847, __src);
  v552 = *(_QWORD **)&__src[24];
  if (*(_BYTE **)&__src[24] == __src)
  {
    v553 = 4;
    v552 = __src;
  }
  else
  {
    if (!*(_QWORD *)&__src[24])
      goto LABEL_1023;
    v553 = 5;
  }
  (*(void (**)(void))(*v552 + 8 * v553))();
LABEL_1023:
  v554 = *(_QWORD **)&v1847[24];
  if (*(_BYTE **)&v1847[24] == v1847)
  {
    v555 = 4;
    v554 = v1847;
    goto LABEL_1027;
  }
  if (*(_QWORD *)&v1847[24])
  {
    v555 = 5;
LABEL_1027:
    (*(void (**)(void))(*v554 + 8 * v555))();
  }
  if ((v1741[63] & 0x80000000) != 0)
    operator delete(*(void **)&v1741[40]);
  v556 = *(_QWORD **)&v1741[16];
  if (*(_QWORD *)&v1741[16])
  {
    do
    {
      v566 = (_QWORD *)*v556;
      v567 = v556[3];
      if (v567)
      {
        v568 = v556[4];
        v565 = (void *)v556[3];
        if (v568 != v567)
        {
          do
          {
            if (*(char *)(v568 - 1) < 0)
              operator delete(*(void **)(v568 - 24));
            v568 -= 24;
          }
          while (v568 != v567);
          v565 = (void *)v556[3];
        }
        v556[4] = v567;
        operator delete(v565);
      }
      operator delete(v556);
      v556 = v566;
    }
    while (v566);
  }
  v557 = *(void **)v1741;
  *(_QWORD *)v1741 = 0;
  if (v557)
    operator delete(v557);
  *(_QWORD *)v1732 = v550 + 3;
  *(_QWORD *)&v1732[8] = v550;
  v558 = *(std::__shared_weak_count **)&__p[24];
  if (*(_QWORD *)&__p[24])
  {
    v559 = (unint64_t *)(*(_QWORD *)&__p[24] + 8);
    do
      v560 = __ldaxr(v559);
    while (__stlxr(v560 - 1, v559));
    if (!v560)
    {
      ((void (*)(std::__shared_weak_count *))v558->__on_zero_shared)(v558);
      std::__shared_weak_count::__release_weak(v558);
    }
  }
  v561 = (std::__shared_weak_count *)v1675[1];
  if (v1675[1])
  {
    v562 = (unint64_t *)((char *)v1675[1] + 8);
    do
      v563 = __ldaxr(v562);
    while (__stlxr(v563 - 1, v562));
    if (!v563)
    {
      ((void (*)(std::__shared_weak_count *))v561->__on_zero_shared)(v561);
      std::__shared_weak_count::__release_weak(v561);
    }
  }
  memset(v1741, 0, 32);
  *(_DWORD *)&v1741[32] = 1065353216;
  sub_2396F295C((uint64_t *)(v439 + 272), v439 + 8, (uint64_t)v1847);
  v564 = *(_QWORD **)(v439 + 1136);
  if (v564)
  {
    while (1)
    {
      std::to_string(&__dst, v564[2]);
      v569 = std::string::append(&__dst, ".TIF");
      v570 = v569->__r_.__value_.__r.__words[0];
      *(_QWORD *)&v1857 = v569->__r_.__value_.__l.__size_;
      *(_QWORD *)((char *)&v1857 + 7) = *(std::string::size_type *)((char *)&v569->__r_.__value_.__r.__words[1] + 7);
      v571 = HIBYTE(v569->__r_.__value_.__r.__words[2]);
      v569->__r_.__value_.__l.__size_ = 0;
      v569->__r_.__value_.__r.__words[2] = 0;
      v569->__r_.__value_.__r.__words[0] = 0;
      *(_QWORD *)__src = v570;
      *(_QWORD *)&__src[15] = *(_QWORD *)((char *)&v1857 + 7);
      *(_QWORD *)&__src[8] = v1857;
      __src[23] = v571;
      sub_239498A04((std::__fs::filesystem::path *)__src, (uint64_t)v1847, (std::__fs::filesystem::path *)__p);
      if ((__src[23] & 0x80000000) != 0)
      {
        operator delete(*(void **)__src);
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
LABEL_1061:
          operator delete(__dst.__r_.__value_.__l.__data_);
      }
      else if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        goto LABEL_1061;
      }
      *(_QWORD *)__src = v564[2];
      if ((__p[23] & 0x80000000) != 0)
      {
        sub_23941A7F8(&__src[8], *(void **)__p, *(unint64_t *)&__p[8]);
      }
      else
      {
        *(_OWORD *)&__src[8] = *(_OWORD *)__p;
        *(_QWORD *)&__src[24] = *(_QWORD *)&__p[16];
      }
      sub_2395F833C((uint64_t)v1741, (unint64_t *)__src, (uint64_t)__src);
      if ((__src[31] & 0x80000000) != 0)
      {
        operator delete(*(void **)&__src[8]);
        if ((__p[23] & 0x80000000) == 0)
          goto LABEL_1055;
LABEL_1065:
        operator delete(*(void **)__p);
        v564 = (_QWORD *)*v564;
        if (!v564)
          break;
      }
      else
      {
        if ((__p[23] & 0x80000000) != 0)
          goto LABEL_1065;
LABEL_1055:
        v564 = (_QWORD *)*v564;
        if (!v564)
          break;
      }
    }
  }
  v572 = *(_OWORD *)v1732;
  if (*(_QWORD *)&v1732[8])
  {
    v573 = (unint64_t *)(*(_QWORD *)&v1732[8] + 8);
    do
      v574 = __ldxr(v573);
    while (__stxr(v574 + 1, v573));
  }
  v575 = (std::__shared_weak_count *)v390[9];
  *((_OWORD *)v390 + 4) = v572;
  if (v575)
  {
    v576 = (unint64_t *)&v575->__shared_owners_;
    do
      v577 = __ldaxr(v576);
    while (__stlxr(v577 - 1, v576));
    if (!v577)
    {
      ((void (*)(std::__shared_weak_count *))v575->__on_zero_shared)(v575);
      std::__shared_weak_count::__release_weak(v575);
    }
  }
  if (v1741 != (_BYTE *)(v390 + 245))
  {
    *((_DWORD *)v390 + 498) = *(_DWORD *)&v1741[32];
    sub_239A99678(v390 + 245, *(const std::string **)&v1741[16]);
  }
  if ((v1847[23] & 0x80000000) != 0)
    operator delete(*(void **)v1847);
  v578 = *(void ***)&v1741[16];
  if (*(_QWORD *)&v1741[16])
  {
    do
    {
      v598 = (void **)*v578;
      if (*((char *)v578 + 47) < 0)
        operator delete(v578[3]);
      operator delete(v578);
      v578 = v598;
    }
    while (v598);
  }
  v579 = *(void **)v1741;
  *(_QWORD *)v1741 = 0;
  if (v579)
    operator delete(v579);
  v580 = *(std::__shared_weak_count **)&v1732[8];
  if (*(_QWORD *)&v1732[8])
  {
    v581 = (unint64_t *)(*(_QWORD *)&v1732[8] + 8);
    do
      v582 = __ldaxr(v581);
    while (__stlxr(v582 - 1, v581));
    if (!v582)
    {
      ((void (*)(std::__shared_weak_count *))v580->__on_zero_shared)(v580);
      std::__shared_weak_count::__release_weak(v580);
    }
  }
  if ((v1860[63] & 0x80000000) != 0)
    operator delete(*(void **)&v1860[40]);
  v583 = *(_QWORD **)&v1860[16];
  if (*(_QWORD *)&v1860[16])
  {
    do
    {
      v600 = (_QWORD *)*v583;
      v601 = v583[3];
      if (v601)
      {
        v602 = v583[4];
        v599 = (void *)v583[3];
        if (v602 != v601)
        {
          do
          {
            if (*(char *)(v602 - 1) < 0)
              operator delete(*(void **)(v602 - 24));
            v602 -= 24;
          }
          while (v602 != v601);
          v599 = (void *)v583[3];
        }
        v583[4] = v601;
        operator delete(v599);
      }
      operator delete(v583);
      v583 = v600;
    }
    while (v600);
  }
  v584 = *(void **)v1860;
  *(_QWORD *)v1860 = 0;
  if (v584)
    operator delete(v584);
LABEL_1091:
  v585 = *v1639;
  if (!(*v1639)[12])
  {
    v613 = (char *)operator new(0x40uLL);
    *((_QWORD *)v613 + 1) = 0;
    *((_QWORD *)v613 + 2) = 0;
    *(_QWORD *)v613 = &off_250AF96A8;
    *(_OWORD *)(v613 + 24) = 0u;
    *(_OWORD *)(v613 + 40) = 0u;
    *((_DWORD *)v613 + 14) = 1065353216;
    v614 = (std::__shared_weak_count *)v585[13];
    v585[12] = (uint64_t)(v613 + 24);
    v585[13] = (uint64_t)v613;
    if (v614)
    {
      v615 = (unint64_t *)&v614->__shared_owners_;
      do
        v616 = __ldaxr(v615);
      while (__stlxr(v616 - 1, v615));
      if (!v616)
      {
        ((void (*)(std::__shared_weak_count *))v614->__on_zero_shared)(v614);
        std::__shared_weak_count::__release_weak(v614);
      }
    }
  }
  if ((v1633 & 1) == 0)
  {
    v603 = (char *)operator new(0x3C0uLL);
    *((_QWORD *)v603 + 1) = 0;
    *((_QWORD *)v603 + 2) = 0;
    *(_QWORD *)v603 = &off_250B01B38;
    bzero(v603 + 24, 0x3A8uLL);
    *((_DWORD *)v603 + 22) = 1065353216;
    *((_OWORD *)v603 + 6) = 0u;
    *((_OWORD *)v603 + 7) = 0u;
    *((_DWORD *)v603 + 32) = 1065353216;
    *(_OWORD *)(v603 + 152) = 0u;
    *(_OWORD *)(v603 + 168) = 0u;
    *(_OWORD *)(v603 + 184) = 0u;
    *((_QWORD *)v603 + 25) = 0;
    *((_DWORD *)v603 + 52) = 1065353216;
    *(_OWORD *)(v603 + 216) = 0u;
    *(_OWORD *)(v603 + 232) = 0u;
    *((_DWORD *)v603 + 62) = 1065353216;
    *((_OWORD *)v603 + 16) = 0u;
    *((_OWORD *)v603 + 17) = 0u;
    *((_OWORD *)v603 + 18) = 0u;
    *((_OWORD *)v603 + 19) = 0u;
    *((_QWORD *)v603 + 40) = 0;
    *((_QWORD *)v603 + 41) = 0x3FF0000000000000;
    *((_QWORD *)v603 + 46) = 0;
    *((_OWORD *)v603 + 21) = 0u;
    *((_OWORD *)v603 + 22) = 0u;
    *((_DWORD *)v603 + 118) = -1;
    *((_OWORD *)v603 + 30) = 0u;
    *((_OWORD *)v603 + 31) = 0u;
    *((_DWORD *)v603 + 128) = 1065353216;
    *(_OWORD *)(v603 + 520) = 0u;
    *(_OWORD *)(v603 + 536) = 0u;
    *((_DWORD *)v603 + 138) = 1065353216;
    *((_OWORD *)v603 + 35) = 0u;
    *((_OWORD *)v603 + 36) = 0u;
    *((_OWORD *)v603 + 37) = 0u;
    *((_OWORD *)v603 + 38) = 0u;
    *((_OWORD *)v603 + 39) = 0u;
    *((_OWORD *)v603 + 40) = 0u;
    *((_OWORD *)v603 + 41) = 0u;
    *((_OWORD *)v603 + 42) = 0u;
    *((_OWORD *)v603 + 43) = 0u;
    *((_OWORD *)v603 + 44) = 0u;
    *((_OWORD *)v603 + 45) = 0u;
    *((_OWORD *)v603 + 46) = 0u;
    *((_OWORD *)v603 + 47) = 0u;
    *((_OWORD *)v603 + 48) = 0u;
    *((_OWORD *)v603 + 49) = 0u;
    *((_OWORD *)v603 + 50) = 0u;
    *((_OWORD *)v603 + 51) = 0u;
    *((_OWORD *)v603 + 52) = 0u;
    *((_DWORD *)v603 + 212) = 1065353216;
    v603[880] = 0;
    *((_QWORD *)v603 + 109) = 0;
    *((_QWORD *)v603 + 108) = 0;
    *((_QWORD *)v603 + 107) = 0;
    v604 = *v1639;
    v605 = (std::__shared_weak_count *)(*v1639)[25];
    v604[24] = (uint64_t)(v603 + 24);
    v604[25] = (uint64_t)v603;
    if (v605)
    {
      v606 = (unint64_t *)&v605->__shared_owners_;
      do
        v607 = __ldaxr(v606);
      while (__stlxr(v607 - 1, v606));
      if (!v607)
      {
        ((void (*)(std::__shared_weak_count *))v605->__on_zero_shared)(v605);
        std::__shared_weak_count::__release_weak(v605);
      }
    }
    v608 = (char *)operator new(0xF8uLL);
    *((_QWORD *)v608 + 1) = 0;
    *((_QWORD *)v608 + 2) = 0;
    *(_QWORD *)v608 = &off_250AF96E0;
    *(_OWORD *)(v608 + 40) = 0u;
    *(_OWORD *)(v608 + 56) = 0u;
    *(_OWORD *)(v608 + 72) = 0u;
    *(_OWORD *)(v608 + 88) = 0u;
    *(_OWORD *)(v608 + 104) = 0u;
    *(_OWORD *)(v608 + 120) = 0u;
    *(_OWORD *)(v608 + 136) = 0u;
    *(_OWORD *)(v608 + 152) = 0u;
    *(_OWORD *)(v608 + 168) = 0u;
    *(_OWORD *)(v608 + 24) = 0u;
    v608[47] = 5;
    *((_DWORD *)v608 + 6) = 774909488;
    v608[28] = 48;
    v608[71] = 5;
    *((_DWORD *)v608 + 12) = 774909488;
    v608[52] = 48;
    v608[95] = 3;
    *((_WORD *)v608 + 36) = 11824;
    v608[74] = 48;
    *((_QWORD *)v608 + 23) = 0;
    *((_QWORD *)v608 + 24) = 0xBFF0000000000000;
    *(_OWORD *)(v608 + 232) = 0u;
    *(_OWORD *)(v608 + 216) = 0u;
    *(_OWORD *)(v608 + 200) = 0u;
    v609 = *v1639;
    v610 = (std::__shared_weak_count *)(*v1639)[11];
    v609[10] = (uint64_t)(v608 + 24);
    v609[11] = (uint64_t)v608;
    if (v610)
    {
      v611 = (unint64_t *)&v610->__shared_owners_;
      do
        v612 = __ldaxr(v611);
      while (__stlxr(v612 - 1, v611));
      if (!v612)
      {
        ((void (*)(std::__shared_weak_count *))v610->__on_zero_shared)(v610);
        std::__shared_weak_count::__release_weak(v610);
      }
    }
    goto LABEL_1255;
  }
  v586 = *v1636;
  if (!*(_BYTE *)(*v1636 + 4))
  {
    v1626 = 655;
    goto LABEL_2947;
  }
  v587 = *v1639;
  if (*(_BYTE *)(v586 + 984))
  {
    sub_2396F295C((uint64_t *)(v586 + 960), v586 + 8, (uint64_t)v1732);
    std::__fs::filesystem::__status((const std::__fs::filesystem::path *)v1732, 0);
    v588 = 0;
    if (v1741[0] && v1741[0] != 255)
    {
      kdebug_trace();
      v589 = (char *)operator new(0xF8uLL);
      *((_QWORD *)v589 + 1) = 0;
      v590 = (unint64_t *)(v589 + 8);
      *((_QWORD *)v589 + 2) = 0;
      *(_QWORD *)v589 = &off_250AF96E0;
      *(_OWORD *)(v589 + 24) = 0u;
      v591 = (uint64_t)(v589 + 24);
      *(_OWORD *)(v589 + 40) = 0u;
      *(_OWORD *)(v589 + 56) = 0u;
      *(_OWORD *)(v589 + 72) = 0u;
      *(_OWORD *)(v589 + 88) = 0u;
      *(_OWORD *)(v589 + 104) = 0u;
      *(_OWORD *)(v589 + 120) = 0u;
      *(_OWORD *)(v589 + 136) = 0u;
      *(_OWORD *)(v589 + 152) = 0u;
      *(_OWORD *)(v589 + 168) = 0u;
      v589[47] = 5;
      *((_DWORD *)v589 + 6) = 774909488;
      v589[28] = 48;
      v589[71] = 5;
      *((_DWORD *)v589 + 12) = 774909488;
      v589[52] = 48;
      v589[95] = 3;
      *((_WORD *)v589 + 36) = 11824;
      v589[74] = 48;
      *((_QWORD *)v589 + 23) = 0;
      *((_QWORD *)v589 + 24) = 0xBFF0000000000000;
      *(_OWORD *)(v589 + 200) = 0u;
      *(_OWORD *)(v589 + 216) = 0u;
      *(_OWORD *)(v589 + 232) = 0u;
      v1675[0] = v589 + 24;
      v1675[1] = v589;
      *(_QWORD *)&v1635 = &v1769;
      v592 = MEMORY[0x24BEDB838];
      v593 = MEMORY[0x24BEDB838] + 64;
      v594 = (_QWORD *)MEMORY[0x24BEDB7E0];
      v595 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
      v596 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
      v1769 = MEMORY[0x24BEDB838] + 64;
      *(_QWORD *)v1741 = v595;
      *(_QWORD *)&v1741[*(_QWORD *)(v595 - 24)] = v596;
      *(_QWORD *)&v1741[8] = 0;
      v597 = (std::ios_base *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)];
      std::ios_base::init(v597, &v1741[16]);
      v597[1].__vftable = 0;
      v597[1].__fmtflags_ = -1;
      *(_QWORD *)v1741 = v592 + 24;
      v1769 = v593;
      MEMORY[0x23B83DC80](&v1741[16]);
      std::ifstream::open();
      if ((v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24) + 32] & 5) != 0)
      {
        v588 = 0;
      }
      else
      {
        *((_BYTE *)&__dst.__r_.__value_.__s + 23) = 18;
        strcpy((char *)&__dst, "CorePhotogrammetry");
        sub_2395AC84C((const void **)&__dst.__r_.__value_.__l.__data_, __p);
        sub_239A7D600((std::string *)v1847, *(_QWORD **)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24) + 40]);
        v617 = v1847[23];
        v618 = v1847[23];
        if (v1847[23] < 0)
          v617 = *(_QWORD *)&v1847[8];
        if (v617)
        {
          sub_2395AC2E8((const void **)v1847, (uint64_t)__p, (uint64_t)__src);
          v588 = __src[24] != 0;
          if (__src[24])
          {
            sub_2394988CC((uint64_t)v1860);
            if (__src[23] >= 0)
              v619 = __src;
            else
              v619 = *(_BYTE **)__src;
            if (__src[23] >= 0)
              v620 = __src[23];
            else
              v620 = *(_QWORD *)&__src[8];
            sub_239458500(&v1860[16], (uint64_t)v619, v620);
            sub_23959FD90(v591, (uint64_t *)v1860, 1);
            *(_QWORD *)v1860 = v1629;
            *(_QWORD *)&v1860[*(_QWORD *)(v1629 - 24)] = v1628;
            *(_QWORD *)&v1860[16] = v1630;
            *(_QWORD *)&v1860[24] = MEMORY[0x24BEDB848] + 16;
            if ((v1860[111] & 0x80000000) != 0)
              operator delete(*(void **)&v1860[88]);
            std::streambuf::~streambuf();
            std::iostream::~basic_iostream();
            MEMORY[0x23B83E250](v1862);
            if (__src[24] && (__src[23] & 0x80000000) != 0)
              operator delete(*(void **)__src);
          }
          v618 = v1847[23];
        }
        else
        {
          v588 = 0;
        }
        if (v618 < 0)
          operator delete(*(void **)v1847);
        if (*(_QWORD *)__p)
        {
          *(_QWORD *)&__p[8] = *(_QWORD *)__p;
          operator delete(*(void **)__p);
        }
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__dst.__r_.__value_.__l.__data_);
        if (!std::filebuf::close())
          std::ios_base::clear((std::ios_base *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)], *(_DWORD *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24) + 32] | 4);
      }
      *(_QWORD *)v1741 = *v594;
      *(_QWORD *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)] = v594[3];
      MEMORY[0x23B83DC8C](&v1741[16]);
      std::istream::~istream();
      MEMORY[0x23B83E250](v1635);
      kdebug_trace();
      if (v588)
      {
        do
          v621 = __ldxr(v590);
        while (__stxr(v621 + 1, v590));
        v622 = (std::__shared_weak_count *)v587[11];
        v587[10] = v591;
        v587[11] = (uint64_t)v589;
        if (v622)
        {
          v623 = (unint64_t *)&v622->__shared_owners_;
          do
            v624 = __ldaxr(v623);
          while (__stlxr(v624 - 1, v623));
          if (!v624)
          {
            ((void (*)(std::__shared_weak_count *))v622->__on_zero_shared)(v622);
            std::__shared_weak_count::__release_weak(v622);
          }
        }
      }
      v625 = (std::__shared_weak_count *)v1675[1];
      if (v1675[1])
      {
        v626 = (unint64_t *)((char *)v1675[1] + 8);
        do
          v627 = __ldaxr(v626);
        while (__stlxr(v627 - 1, v626));
        if (!v627)
        {
          ((void (*)(std::__shared_weak_count *))v625->__on_zero_shared)(v625);
          std::__shared_weak_count::__release_weak(v625);
        }
      }
    }
    if ((v1732[23] & 0x80000000) != 0)
      operator delete(*(void **)v1732);
    if (!v588)
    {
LABEL_2936:
      v1620 = (std::runtime_error *)__cxa_allocate_exception(0x18uLL);
      sub_23941A4FC(v1741, "");
      std::runtime_error::runtime_error(v1620, (const std::string *)v1741);
      v1620->__vftable = (std::runtime_error_vtbl *)&off_250AF79D0;
      LODWORD(v1620[1].__vftable) = 2;
      __cxa_throw(v1620, (struct type_info *)&unk_250AF7A30, (void (*)(void *))std::runtime_error::~runtime_error);
    }
    v587 = *v1639;
  }
  if (!v587[10])
    goto LABEL_2936;
  v628 = *v1636;
  if (!*(_BYTE *)(*v1636 + 4))
  {
    v1626 = 703;
LABEL_2947:
    sub_239A444D4((uint64_t)"unknown file", v1626, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (!*(_BYTE *)(v628 + 1112))
    goto LABEL_1217;
  sub_2396F295C((uint64_t *)(v628 + 1088), v628 + 8, (uint64_t)v1860);
  std::__fs::filesystem::__status((const std::__fs::filesystem::path *)v1860, 0);
  v629 = 0;
  if (v1741[0] && v1741[0] != 255)
  {
    kdebug_trace();
    v630 = (char *)operator new(0x3C0uLL);
    *((_QWORD *)v630 + 1) = 0;
    *((_QWORD *)v630 + 2) = 0;
    *(_QWORD *)v630 = &off_250B01B38;
    bzero(v630 + 24, 0x3A8uLL);
    *((_DWORD *)v630 + 22) = 1065353216;
    *((_OWORD *)v630 + 6) = 0u;
    *((_OWORD *)v630 + 7) = 0u;
    *((_DWORD *)v630 + 32) = 1065353216;
    *(_OWORD *)(v630 + 152) = 0u;
    *(_OWORD *)(v630 + 168) = 0u;
    *(_OWORD *)(v630 + 184) = 0u;
    *((_QWORD *)v630 + 25) = 0;
    *((_DWORD *)v630 + 52) = 1065353216;
    *(_OWORD *)(v630 + 216) = 0u;
    *(_OWORD *)(v630 + 232) = 0u;
    *((_DWORD *)v630 + 62) = 1065353216;
    *((_OWORD *)v630 + 16) = 0u;
    *((_OWORD *)v630 + 17) = 0u;
    *((_OWORD *)v630 + 18) = 0u;
    *((_OWORD *)v630 + 19) = 0u;
    *((_QWORD *)v630 + 40) = 0;
    *((_QWORD *)v630 + 41) = 0x3FF0000000000000;
    *((_QWORD *)v630 + 46) = 0;
    *((_OWORD *)v630 + 21) = 0u;
    *((_OWORD *)v630 + 22) = 0u;
    *((_DWORD *)v630 + 118) = -1;
    *((_OWORD *)v630 + 30) = 0u;
    *((_OWORD *)v630 + 31) = 0u;
    *((_DWORD *)v630 + 128) = 1065353216;
    *(_OWORD *)(v630 + 520) = 0u;
    *(_OWORD *)(v630 + 536) = 0u;
    *((_DWORD *)v630 + 138) = 1065353216;
    *((_OWORD *)v630 + 35) = 0u;
    *((_OWORD *)v630 + 36) = 0u;
    *((_OWORD *)v630 + 37) = 0u;
    *((_OWORD *)v630 + 38) = 0u;
    *((_OWORD *)v630 + 39) = 0u;
    *((_OWORD *)v630 + 40) = 0u;
    *((_OWORD *)v630 + 41) = 0u;
    *((_OWORD *)v630 + 42) = 0u;
    *((_OWORD *)v630 + 43) = 0u;
    *((_OWORD *)v630 + 44) = 0u;
    *((_OWORD *)v630 + 45) = 0u;
    *((_OWORD *)v630 + 46) = 0u;
    *((_OWORD *)v630 + 47) = 0u;
    *((_OWORD *)v630 + 48) = 0u;
    *((_OWORD *)v630 + 49) = 0u;
    *((_OWORD *)v630 + 50) = 0u;
    *((_OWORD *)v630 + 51) = 0u;
    *((_OWORD *)v630 + 52) = 0u;
    *((_DWORD *)v630 + 212) = 1065353216;
    *((_QWORD *)v630 + 107) = 0;
    *((_QWORD *)v630 + 109) = 0;
    *((_QWORD *)v630 + 108) = 0;
    v630[880] = 0;
    *(_QWORD *)v1847 = v630 + 24;
    *(_QWORD *)&v1847[8] = v630;
    v629 = sub_239A9D108((uint64_t)(v630 + 24));
    kdebug_trace();
    if (!v629)
    {
LABEL_1208:
      v646 = *(std::__shared_weak_count **)&v1847[8];
      if (*(_QWORD *)&v1847[8])
      {
        v647 = (unint64_t *)(*(_QWORD *)&v1847[8] + 8);
        do
          v648 = __ldaxr(v647);
        while (__stlxr(v648 - 1, v647));
        if (!v648)
        {
          ((void (*)(std::__shared_weak_count *))v646->__on_zero_shared)(v646);
          std::__shared_weak_count::__release_weak(v646);
        }
      }
      goto LABEL_1213;
    }
    v631 = std::__fs::filesystem::path::__parent_path((const std::__fs::filesystem::path *)v1860);
    if (v631.__size_ > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    if (v631.__size_ >= 0x17)
    {
      v633 = (v631.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v631.__size_ | 7) != 0x17)
        v633 = v631.__size_ | 7;
      v634 = v633 + 1;
      v632 = operator new(v633 + 1);
      *(_QWORD *)&v1741[16] = v634 | 0x8000000000000000;
      *(_QWORD *)v1741 = v632;
      *(_QWORD *)&v1741[8] = v631.__size_;
    }
    else
    {
      v1741[23] = v631.__size_;
      v632 = v1741;
      if (!v631.__size_)
      {
LABEL_1188:
        v632[v631.__size_] = 0;
        *(_OWORD *)__src = *(_OWORD *)v1741;
        *(_QWORD *)&__src[16] = *(_QWORD *)&v1741[16];
        sub_2396B8C08((uint64_t)(v630 + 480), (uint64_t)__src);
        if ((__src[23] & 0x80000000) != 0)
          operator delete(*(void **)__src);
        v635 = *(_QWORD *)v1847;
        v636 = std::__fs::filesystem::path::__parent_path((const std::__fs::filesystem::path *)v1860);
        if (v636.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v636.__size_ >= 0x17)
        {
          v638 = (v636.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v636.__size_ | 7) != 0x17)
            v638 = v636.__size_ | 7;
          v639 = v638 + 1;
          v637 = operator new(v638 + 1);
          *(_QWORD *)&v1741[16] = v639 | 0x8000000000000000;
          *(_QWORD *)v1741 = v637;
          *(_QWORD *)&v1741[8] = v636.__size_;
        }
        else
        {
          v1741[23] = v636.__size_;
          v637 = v1741;
          if (!v636.__size_)
            goto LABEL_1198;
        }
        memmove(v637, v636.__data_, v636.__size_);
LABEL_1198:
        v637[v636.__size_] = 0;
        *(_OWORD *)__src = *(_OWORD *)v1741;
        *(_QWORD *)&__src[16] = *(_QWORD *)&v1741[16];
        sub_2396B8C08(v635 + 496, (uint64_t)__src);
        if ((__src[23] & 0x80000000) != 0)
          operator delete(*(void **)__src);
        v640 = *(_OWORD *)v1847;
        if (*(_QWORD *)&v1847[8])
        {
          v641 = (unint64_t *)(*(_QWORD *)&v1847[8] + 8);
          do
            v642 = __ldxr(v641);
          while (__stxr(v642 + 1, v641));
        }
        v643 = (std::__shared_weak_count *)v587[25];
        *((_OWORD *)v587 + 12) = v640;
        if (v643)
        {
          v644 = (unint64_t *)&v643->__shared_owners_;
          do
            v645 = __ldaxr(v644);
          while (__stlxr(v645 - 1, v644));
          if (!v645)
          {
            ((void (*)(std::__shared_weak_count *))v643->__on_zero_shared)(v643);
            std::__shared_weak_count::__release_weak(v643);
          }
        }
        goto LABEL_1208;
      }
    }
    memmove(v632, v631.__data_, v631.__size_);
    goto LABEL_1188;
  }
LABEL_1213:
  if ((v1860[23] & 0x80000000) != 0)
    operator delete(*(void **)v1860);
  if (!v629)
  {
LABEL_2937:
    v1621 = (std::runtime_error *)__cxa_allocate_exception(0x18uLL);
    sub_23941A4FC(v1741, "");
    std::runtime_error::runtime_error(v1621, (const std::string *)v1741);
    v1621->__vftable = (std::runtime_error_vtbl *)&off_250AF79D0;
    LODWORD(v1621[1].__vftable) = 2;
    __cxa_throw(v1621, (struct type_info *)&unk_250AF7A30, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v587 = *v1639;
LABEL_1217:
  v649 = v587[24];
  if (!v649)
    goto LABEL_2937;
  v650 = *(_QWORD **)(v649 + 472);
  v651 = *(_QWORD *)(v649 + 480);
  memset(v1741, 0, 24);
  if (v651)
  {
    if (v651 >> 61)
      sub_2394189F8();
    v652 = (char *)operator new(8 * v651);
    v651 = (unint64_t)&v652[8 * v651];
    *(_QWORD *)v1741 = v652;
    *(_QWORD *)&v1741[8] = v652;
    *(_QWORD *)&v1741[16] = v651;
  }
  else
  {
    v652 = 0;
  }
  *(_QWORD *)v1860 = v1741;
  if (v650)
  {
    do
    {
      sub_239A9CEE4((uint64_t *)v1860, v650[2]);
      v650 = (_QWORD *)*v650;
    }
    while (v650);
    v653 = *(int64x2_t *)v1741;
    v651 = *(_QWORD *)&v1741[16];
    v587 = *v1639;
  }
  else
  {
    v653 = vdupq_n_s64((unint64_t)v652);
  }
  v654 = (void *)v587[14];
  if (v654)
  {
    v587[15] = (uint64_t)v654;
    v1635 = (__int128)v653;
    operator delete(v654);
    v653 = (int64x2_t)v1635;
    v587[14] = 0;
    v587[15] = 0;
    v587[16] = 0;
  }
  *((int64x2_t *)v587 + 7) = v653;
  v587[16] = v651;
  std::__sort<std::__less<unsigned long long,unsigned long long> &,unsigned long long *>();
  memset(v1860, 0, 32);
  *(_DWORD *)&v1860[32] = 1065353216;
  v655 = *v1636;
  if (!*(_BYTE *)(*v1636 + 4))
  {
    sub_239A444D4((uint64_t)"unknown file", 515, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (*(_BYTE *)(v655 + 1080) && *(_QWORD *)(v655 + 1064))
  {
    memset(v1741, 0, 32);
    *(_DWORD *)&v1741[32] = 1065353216;
    sub_2396F295C((uint64_t *)(v655 + 248), v655 + 8, (uint64_t)v1847);
    v656 = *(_QWORD **)(v655 + 1056);
    if (v656)
    {
      while (1)
      {
        std::to_string(&__dst, v656[2]);
        v657 = std::string::append(&__dst, ".jpg");
        v658 = v657->__r_.__value_.__r.__words[0];
        *(_QWORD *)v1732 = v657->__r_.__value_.__l.__size_;
        *(_QWORD *)&v1732[7] = *(std::string::size_type *)((char *)&v657->__r_.__value_.__r.__words[1] + 7);
        v659 = HIBYTE(v657->__r_.__value_.__r.__words[2]);
        v657->__r_.__value_.__l.__size_ = 0;
        v657->__r_.__value_.__r.__words[2] = 0;
        v657->__r_.__value_.__r.__words[0] = 0;
        *(_QWORD *)__src = v658;
        *(_QWORD *)&__src[15] = *(_QWORD *)&v1732[7];
        *(_QWORD *)&__src[8] = *(_QWORD *)v1732;
        __src[23] = v659;
        sub_239498A04((std::__fs::filesystem::path *)__src, (uint64_t)v1847, (std::__fs::filesystem::path *)__p);
        if ((__src[23] & 0x80000000) != 0)
        {
          operator delete(*(void **)__src);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
LABEL_1240:
            operator delete(__dst.__r_.__value_.__l.__data_);
        }
        else if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          goto LABEL_1240;
        }
        *(_QWORD *)__src = v656[2];
        if ((__p[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(&__src[8], *(void **)__p, *(unint64_t *)&__p[8]);
        }
        else
        {
          *(_OWORD *)&__src[8] = *(_OWORD *)__p;
          *(_QWORD *)&__src[24] = *(_QWORD *)&__p[16];
        }
        sub_2395F833C((uint64_t)v1741, (unint64_t *)__src, (uint64_t)__src);
        if ((__src[31] & 0x80000000) != 0)
        {
          operator delete(*(void **)&__src[8]);
          if ((__p[23] & 0x80000000) == 0)
            goto LABEL_1234;
LABEL_1244:
          operator delete(*(void **)__p);
          v656 = (_QWORD *)*v656;
          if (!v656)
            break;
        }
        else
        {
          if ((__p[23] & 0x80000000) != 0)
            goto LABEL_1244;
LABEL_1234:
          v656 = (_QWORD *)*v656;
          if (!v656)
            break;
        }
      }
    }
    *(_DWORD *)&v1860[32] = *(_DWORD *)&v1741[32];
    sub_239A99678(v1860, *(const std::string **)&v1741[16]);
    if ((v1847[23] & 0x80000000) != 0)
      operator delete(*(void **)v1847);
    v660 = *(void ***)&v1741[16];
    if (*(_QWORD *)&v1741[16])
    {
      do
      {
        v705 = (void **)*v660;
        if (*((char *)v660 + 47) < 0)
          operator delete(v660[3]);
        operator delete(v660);
        v660 = v705;
      }
      while (v705);
    }
    v661 = *(void **)v1741;
    *(_QWORD *)v1741 = 0;
    if (v661)
      operator delete(v661);
  }
  v662 = *v1639 + 240;
  if (v662 != (_QWORD *)v1860)
  {
    *((_DWORD *)*v1639 + 488) = *(_DWORD *)&v1860[32];
    sub_239A99678(v662, *(const std::string **)&v1860[16]);
  }
  v663 = *(void ***)&v1860[16];
  if (*(_QWORD *)&v1860[16])
  {
    do
    {
      v704 = (void **)*v663;
      if (*((char *)v663 + 47) < 0)
        operator delete(v663[3]);
      operator delete(v663);
      v663 = v704;
    }
    while (v704);
  }
  v664 = *(void **)v1860;
  *(_QWORD *)v1860 = 0;
  if (v664)
    operator delete(v664);
LABEL_1255:
  v665 = (char *)operator new(0x3C0uLL);
  *((_QWORD *)v665 + 1) = 0;
  *((_QWORD *)v665 + 2) = 0;
  *(_QWORD *)v665 = &off_250B01B38;
  bzero(v665 + 24, 0x3A8uLL);
  *((_DWORD *)v665 + 22) = 1065353216;
  *((_OWORD *)v665 + 6) = 0u;
  *((_OWORD *)v665 + 7) = 0u;
  *((_DWORD *)v665 + 32) = 1065353216;
  *(_OWORD *)(v665 + 152) = 0u;
  *(_OWORD *)(v665 + 168) = 0u;
  *(_OWORD *)(v665 + 184) = 0u;
  *((_QWORD *)v665 + 25) = 0;
  *((_DWORD *)v665 + 52) = 1065353216;
  *(_OWORD *)(v665 + 216) = 0u;
  *(_OWORD *)(v665 + 232) = 0u;
  *((_DWORD *)v665 + 62) = 1065353216;
  *((_OWORD *)v665 + 16) = 0u;
  *((_OWORD *)v665 + 17) = 0u;
  *((_OWORD *)v665 + 18) = 0u;
  *((_OWORD *)v665 + 19) = 0u;
  *((_QWORD *)v665 + 40) = 0;
  *((_QWORD *)v665 + 41) = 0x3FF0000000000000;
  *((_QWORD *)v665 + 46) = 0;
  *((_OWORD *)v665 + 21) = 0u;
  *((_OWORD *)v665 + 22) = 0u;
  *((_DWORD *)v665 + 118) = -1;
  *((_OWORD *)v665 + 30) = 0u;
  *((_OWORD *)v665 + 31) = 0u;
  *((_DWORD *)v665 + 128) = 1065353216;
  *(_OWORD *)(v665 + 520) = 0u;
  *(_OWORD *)(v665 + 536) = 0u;
  *((_DWORD *)v665 + 138) = 1065353216;
  *((_OWORD *)v665 + 35) = 0u;
  *((_OWORD *)v665 + 36) = 0u;
  *((_OWORD *)v665 + 37) = 0u;
  *((_OWORD *)v665 + 38) = 0u;
  *((_OWORD *)v665 + 39) = 0u;
  *((_OWORD *)v665 + 40) = 0u;
  *((_OWORD *)v665 + 41) = 0u;
  *((_OWORD *)v665 + 42) = 0u;
  *((_OWORD *)v665 + 43) = 0u;
  *((_OWORD *)v665 + 44) = 0u;
  *((_OWORD *)v665 + 45) = 0u;
  *((_OWORD *)v665 + 46) = 0u;
  *((_OWORD *)v665 + 47) = 0u;
  *((_OWORD *)v665 + 48) = 0u;
  *((_OWORD *)v665 + 49) = 0u;
  *((_OWORD *)v665 + 50) = 0u;
  *((_OWORD *)v665 + 51) = 0u;
  *((_OWORD *)v665 + 52) = 0u;
  *((_DWORD *)v665 + 212) = 1065353216;
  v665[880] = 0;
  *((_QWORD *)v665 + 109) = 0;
  *((_QWORD *)v665 + 108) = 0;
  *((_QWORD *)v665 + 107) = 0;
  v666 = *v1639;
  v667 = (std::__shared_weak_count *)(*v1639)[27];
  v666[26] = (uint64_t)(v665 + 24);
  v666[27] = (uint64_t)v665;
  if (v667)
  {
    v668 = (unint64_t *)&v667->__shared_owners_;
    do
      v669 = __ldaxr(v668);
    while (__stlxr(v669 - 1, v668));
    if (!v669)
    {
      ((void (*)(std::__shared_weak_count *))v667->__on_zero_shared)(v667);
      std::__shared_weak_count::__release_weak(v667);
    }
  }
  if (*(_BYTE *)(v1638 + 24))
  {
    v670 = (char *)operator new(0x128uLL);
    *((_QWORD *)v670 + 1) = 0;
    *((_QWORD *)v670 + 2) = 0;
    *(_QWORD *)v670 = &off_250AF9718;
    *(_OWORD *)(v670 + 24) = 0u;
    *(_OWORD *)(v670 + 40) = 0u;
    *(_OWORD *)(v670 + 56) = 0u;
    *(_OWORD *)(v670 + 72) = 0u;
    *(_OWORD *)(v670 + 88) = 0u;
    *(_OWORD *)(v670 + 104) = 0u;
    *(_OWORD *)(v670 + 120) = 0u;
    *(_OWORD *)(v670 + 136) = 0u;
    *(_OWORD *)(v670 + 152) = 0u;
    *(_OWORD *)(v670 + 168) = 0u;
    *(_OWORD *)(v670 + 184) = 0u;
    *(_OWORD *)(v670 + 200) = 0u;
    *(_OWORD *)(v670 + 216) = 0u;
    *(_OWORD *)(v670 + 232) = 0u;
    *(_OWORD *)(v670 + 248) = 0u;
    *(_OWORD *)(v670 + 264) = 0u;
    *(_OWORD *)(v670 + 280) = 0u;
    *(_QWORD *)(v670 + 140) = 0xFF00000080;
    *(_QWORD *)(v670 + 148) = 0;
    *(_QWORD *)(v670 + 164) = 0;
    *(_QWORD *)(v670 + 156) = 0;
    *(_QWORD *)(v670 + 169) = 0;
    *(_OWORD *)(v670 + 180) = xmmword_239F0C080;
    v670[200] = 1;
    *(_QWORD *)(v670 + 204) = 0x3C23D70A00000002;
    *((_DWORD *)v670 + 53) = -1;
    v670[216] = 1;
    *((_DWORD *)v670 + 55) = 0;
    *((_DWORD *)v670 + 56) = qos_class_self();
    *((_QWORD *)v670 + 29) = 0;
    v670[240] = 0;
    *(_OWORD *)(v670 + 248) = xmmword_239F0C090;
    *((_QWORD *)v670 + 33) = 10;
    v670[272] = 1;
    *((_QWORD *)v670 + 35) = 5000;
    *((_DWORD *)v670 + 72) = 0;
    v671 = *v1639;
    v672 = (std::__shared_weak_count *)(*v1639)[53];
    v671[52] = (uint64_t)(v670 + 24);
    v671[53] = (uint64_t)v670;
    if (v672)
    {
      v673 = (unint64_t *)&v672->__shared_owners_;
      do
        v674 = __ldaxr(v673);
      while (__stlxr(v674 - 1, v673));
      if (!v674)
      {
        ((void (*)(std::__shared_weak_count *))v672->__on_zero_shared)(v672);
        std::__shared_weak_count::__release_weak(v672);
      }
    }
    v675 = (char *)operator new(0x1F8uLL);
    *((_QWORD *)v675 + 1) = 0;
    *((_QWORD *)v675 + 2) = 0;
    *(_QWORD *)v675 = &off_250AF9750;
    *(_OWORD *)(v675 + 24) = 0u;
    *(_OWORD *)(v675 + 56) = 0u;
    *(_OWORD *)(v675 + 72) = 0u;
    *(_OWORD *)(v675 + 88) = 0u;
    *(_OWORD *)(v675 + 104) = 0u;
    *(_OWORD *)(v675 + 120) = 0u;
    *(_OWORD *)(v675 + 136) = 0u;
    *(_OWORD *)(v675 + 152) = 0u;
    *(_OWORD *)(v675 + 168) = 0u;
    *(_OWORD *)(v675 + 184) = 0u;
    *(_OWORD *)(v675 + 200) = 0u;
    *(_OWORD *)(v675 + 216) = 0u;
    *(_OWORD *)(v675 + 232) = 0u;
    *(_OWORD *)(v675 + 248) = 0u;
    *(_OWORD *)(v675 + 264) = 0u;
    *(_OWORD *)(v675 + 280) = 0u;
    *(_OWORD *)(v675 + 296) = 0u;
    *(_OWORD *)(v675 + 312) = 0u;
    *(_OWORD *)(v675 + 328) = 0u;
    *(_OWORD *)(v675 + 344) = 0u;
    *(_OWORD *)(v675 + 360) = 0u;
    *(_OWORD *)(v675 + 376) = 0u;
    *(_OWORD *)(v675 + 392) = 0u;
    *(_OWORD *)(v675 + 408) = 0u;
    *(_OWORD *)(v675 + 424) = 0u;
    *(_OWORD *)(v675 + 440) = 0u;
    *(_OWORD *)(v675 + 456) = 0u;
    *(_OWORD *)(v675 + 472) = 0u;
    *(_OWORD *)(v675 + 488) = 0u;
    *(_OWORD *)(v675 + 40) = 0u;
    sub_239AEA110((uint64_t)(v675 + 40));
    v676 = *v1639;
    v677 = (std::__shared_weak_count *)(*v1639)[55];
    v676[54] = (uint64_t)(v675 + 24);
    v676[55] = (uint64_t)v675;
    if (v677)
    {
      v678 = (unint64_t *)&v677->__shared_owners_;
      do
        v679 = __ldaxr(v678);
      while (__stlxr(v679 - 1, v678));
      if (!v679)
      {
        ((void (*)(std::__shared_weak_count *))v677->__on_zero_shared)(v677);
        std::__shared_weak_count::__release_weak(v677);
      }
    }
    v680 = (*v1639)[52];
    v1675[1] = 0;
    v1675[0] = 0;
    *(_QWORD *)&v1676 = 0;
    sub_2397A98A4(&v1857);
    v681 = *(uint64_t **)(v1638 + 40);
    for (k = *(uint64_t **)(v1638 + 48); v681 != k; ++v681)
    {
      v683 = *v681;
      if (*v681 < (unint64_t)((uint64_t)(*((_QWORD *)&v1857 + 1) - v1857) >> 4))
      {
        sub_23946D5E0(v1741, v1857 + 16 * v683);
        v684 = (char *)v1675[1];
        if (v1675[1] >= (void *)v1676)
        {
          v686 = (char *)v1675[0];
          v687 = (char *)v1675[1] - (char *)v1675[0];
          v688 = ((char *)v1675[1] - (char *)v1675[0]) >> 3;
          v689 = v688 + 1;
          if ((unint64_t)(v688 + 1) >> 61)
            sub_2394189F8();
          v690 = v1676 - (unint64_t)v1675[0];
          if ((uint64_t)(v1676 - (unint64_t)v1675[0]) >> 2 > v689)
            v689 = v690 >> 2;
          if ((unint64_t)v690 >= 0x7FFFFFFFFFFFFFF8)
            v691 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v691 = v689;
          if (v691)
          {
            if (v691 >> 61)
              sub_239418A80();
            v692 = operator new(8 * v691);
          }
          else
          {
            v692 = 0;
          }
          v693 = &v692[8 * v688];
          *v693 = v683;
          v685 = v693 + 1;
          if (v684 != v686)
          {
            v694 = v684 - 8 - v686;
            if (v694 < 0x58)
              goto LABEL_2987;
            if ((unint64_t)(v684 - &v692[v687]) < 0x20)
              goto LABEL_2987;
            v695 = (v694 >> 3) + 1;
            v696 = &v692[v687 - 16];
            v697 = v684 - 16;
            v698 = v695 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v699 = *(_OWORD *)v697;
              *(v696 - 1) = *((_OWORD *)v697 - 1);
              *v696 = v699;
              v696 -= 2;
              v697 -= 32;
              v698 -= 4;
            }
            while (v698);
            v693 -= v695 & 0x3FFFFFFFFFFFFFFCLL;
            v684 -= 8 * (v695 & 0x3FFFFFFFFFFFFFFCLL);
            if (v695 != (v695 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_2987:
              do
              {
                v700 = *((_QWORD *)v684 - 1);
                v684 -= 8;
                *--v693 = v700;
              }
              while (v684 != v686);
            }
          }
          v1675[0] = v693;
          v1675[1] = v685;
          *(_QWORD *)&v1676 = &v692[8 * v691];
          if (v686)
            operator delete(v686);
        }
        else
        {
          *(_QWORD *)v1675[1] = v683;
          v685 = v684 + 8;
        }
        v1675[1] = v685;
        v701 = *(std::__shared_weak_count **)&v1741[8];
        if (*(_QWORD *)&v1741[8])
        {
          v702 = (unint64_t *)(*(_QWORD *)&v1741[8] + 8);
          do
            v703 = __ldaxr(v702);
          while (__stlxr(v703 - 1, v702));
          if (!v703)
          {
            ((void (*)(std::__shared_weak_count *))v701->__on_zero_shared)(v701);
            std::__shared_weak_count::__release_weak(v701);
          }
        }
      }
    }
    if (v1675[0] == v1675[1])
    {
      sub_239A444D4((uint64_t)"unknown file", 600, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v706 = v1637;
    if ((void **)(v680 + 128) != v1675)
      sub_23945D3D0((_QWORD *)(v680 + 128), (char *)v1675[0], (char *)v1675[1], ((char *)v1675[1] - (char *)v1675[0]) >> 3);
    *(_DWORD *)(v680 + 124) = *(_QWORD *)(v1638 + 64);
    v708 = **v1639;
    v707 = (*v1639)[1];
    if (v707)
    {
      v709 = (unint64_t *)(v707 + 8);
      do
        v710 = __ldxr(v709);
      while (__stxr(v710 + 1, v709));
    }
    v711 = *(std::__shared_weak_count **)(v680 + 104);
    *(_QWORD *)(v680 + 96) = v708;
    *(_QWORD *)(v680 + 104) = v707;
    if (v711)
    {
      v712 = (unint64_t *)&v711->__shared_owners_;
      do
        v713 = __ldaxr(v712);
      while (__stlxr(v713 - 1, v712));
      if (!v713)
      {
        ((void (*)(std::__shared_weak_count *))v711->__on_zero_shared)(v711);
        std::__shared_weak_count::__release_weak(v711);
      }
    }
    sub_2396B8E4C((*v1639)[24] + 456, v1741);
    v714 = (char *)operator new(0x30uLL);
    *((_QWORD *)v714 + 1) = 0;
    *((_QWORD *)v714 + 2) = 0;
    *(_QWORD *)v714 = &off_250AF9788;
    *(_OWORD *)(v714 + 24) = *(_OWORD *)v1741;
    *((_QWORD *)v714 + 5) = *(_QWORD *)&v1741[16];
    memset(v1741, 0, 24);
    v715 = *(std::__shared_weak_count **)(v680 + 88);
    *(_QWORD *)(v680 + 80) = v714 + 24;
    *(_QWORD *)(v680 + 88) = v714;
    if (v715)
    {
      v716 = (unint64_t *)&v715->__shared_owners_;
      do
        v717 = __ldaxr(v716);
      while (__stlxr(v717 - 1, v716));
      if (!v717)
      {
        ((void (*)(std::__shared_weak_count *))v715->__on_zero_shared)(v715);
        std::__shared_weak_count::__release_weak(v715);
      }
    }
    if (*(_QWORD *)v1741)
    {
      *(_QWORD *)&v1741[8] = *(_QWORD *)v1741;
      operator delete(*(void **)v1741);
    }
    v718 = (char *)operator new(0x40uLL);
    *((_QWORD *)v718 + 1) = 0;
    *((_QWORD *)v718 + 2) = 0;
    *(_QWORD *)v718 = &off_250AF97C0;
    *(_OWORD *)(v718 + 24) = 0u;
    *(_OWORD *)(v718 + 40) = 0u;
    *((_DWORD *)v718 + 14) = 1065353216;
    v719 = *(std::__shared_weak_count **)(v680 + 24);
    *(_QWORD *)(v680 + 16) = v718 + 24;
    *(_QWORD *)(v680 + 24) = v718;
    if (v719)
    {
      v720 = (unint64_t *)&v719->__shared_owners_;
      do
        v721 = __ldaxr(v720);
      while (__stlxr(v721 - 1, v720));
      if (!v721)
      {
        ((void (*)(std::__shared_weak_count *))v719->__on_zero_shared)(v719);
        std::__shared_weak_count::__release_weak(v719);
      }
    }
    v722 = (char *)operator new(0x40uLL);
    *((_QWORD *)v722 + 1) = 0;
    *((_QWORD *)v722 + 2) = 0;
    *(_QWORD *)v722 = &off_250AF97F8;
    *(_OWORD *)(v722 + 24) = 0u;
    *(_OWORD *)(v722 + 40) = 0u;
    *((_DWORD *)v722 + 14) = 1065353216;
    v723 = *(std::__shared_weak_count **)(v680 + 56);
    *(_QWORD *)(v680 + 48) = v722 + 24;
    *(_QWORD *)(v680 + 56) = v722;
    if (v723)
    {
      v724 = (unint64_t *)&v723->__shared_owners_;
      do
        v725 = __ldaxr(v724);
      while (__stlxr(v725 - 1, v724));
      if (!v725)
      {
        ((void (*)(std::__shared_weak_count *))v723->__on_zero_shared)(v723);
        std::__shared_weak_count::__release_weak(v723);
      }
    }
    v727 = (*v1639)[8];
    v726 = (*v1639)[9];
    if (v726)
    {
      v728 = (unint64_t *)(v726 + 8);
      do
        v729 = __ldxr(v728);
      while (__stxr(v729 + 1, v728));
    }
    v730 = *(std::__shared_weak_count **)(v680 + 72);
    *(_QWORD *)(v680 + 64) = v727;
    *(_QWORD *)(v680 + 72) = v726;
    if (v730)
    {
      v731 = (unint64_t *)&v730->__shared_owners_;
      do
        v732 = __ldaxr(v731);
      while (__stlxr(v732 - 1, v731));
      if (!v732)
      {
        ((void (*)(std::__shared_weak_count *))v730->__on_zero_shared)(v730);
        std::__shared_weak_count::__release_weak(v730);
      }
    }
    v733 = *(_DWORD *)(v1638 + 28);
    *(_DWORD *)(v680 + 112) = v733;
    if ((v733 - 1) > 1)
    {
      v735 = *(std::__shared_weak_count **)(v680 + 8);
      *(_QWORD *)v680 = 0;
      *(_QWORD *)(v680 + 8) = 0;
      if (!v735)
        goto LABEL_1363;
      v746 = (unint64_t *)&v735->__shared_owners_;
      do
        v737 = __ldaxr(v746);
      while (__stlxr(v737 - 1, v746));
    }
    else
    {
      v734 = (char *)operator new(0x40uLL);
      *((_QWORD *)v734 + 1) = 0;
      *((_QWORD *)v734 + 2) = 0;
      *(_QWORD *)v734 = &off_250AF9830;
      *(_OWORD *)(v734 + 24) = 0u;
      *(_OWORD *)(v734 + 40) = 0u;
      *((_DWORD *)v734 + 14) = 1065353216;
      v735 = *(std::__shared_weak_count **)(v680 + 8);
      *(_QWORD *)v680 = v734 + 24;
      *(_QWORD *)(v680 + 8) = v734;
      if (!v735)
        goto LABEL_1363;
      v736 = (unint64_t *)&v735->__shared_owners_;
      do
        v737 = __ldaxr(v736);
      while (__stlxr(v737 - 1, v736));
    }
    if (!v737)
    {
      ((void (*)(std::__shared_weak_count *))v735->__on_zero_shared)(v735);
      std::__shared_weak_count::__release_weak(v735);
    }
LABEL_1363:
    v747 = (char *)operator new(0x40uLL);
    *((_QWORD *)v747 + 1) = 0;
    *((_QWORD *)v747 + 2) = 0;
    *(_QWORD *)v747 = &off_250AF9868;
    *(_OWORD *)(v747 + 24) = 0u;
    *(_OWORD *)(v747 + 40) = 0u;
    *((_DWORD *)v747 + 14) = 1065353216;
    v748 = *(std::__shared_weak_count **)(v680 + 40);
    *(_QWORD *)(v680 + 32) = v747 + 24;
    *(_QWORD *)(v680 + 40) = v747;
    if (v748)
    {
      v749 = (unint64_t *)&v748->__shared_owners_;
      do
        v750 = __ldaxr(v749);
      while (__stlxr(v750 - 1, v749));
      if (!v750)
      {
        ((void (*)(std::__shared_weak_count *))v748->__on_zero_shared)(v748);
        std::__shared_weak_count::__release_weak(v748);
      }
    }
    v751 = (char)v1633;
    if (!*(_BYTE *)(v1638 + 32))
      v751 = 1;
    if ((v751 & 1) != 0)
    {
      v752 = (_QWORD *)(*v1639)[54];
      v754 = (*v1639)[2];
      v753 = (*v1639)[3];
      if (v753)
      {
        v755 = (unint64_t *)(v753 + 8);
        do
          v756 = __ldxr(v755);
        while (__stxr(v756 + 1, v755));
      }
      v757 = (std::__shared_weak_count *)v752[1];
      *v752 = v754;
      v752[1] = v753;
      if (v757)
      {
        v758 = (unint64_t *)&v757->__shared_owners_;
        do
          v759 = __ldaxr(v758);
        while (__stlxr(v759 - 1, v758));
        if (!v759)
        {
          ((void (*)(std::__shared_weak_count *))v757->__on_zero_shared)(v757);
          std::__shared_weak_count::__release_weak(v757);
          v760 = (char *)v1857;
          if (!(_QWORD)v1857)
            goto LABEL_1453;
          goto LABEL_1443;
        }
      }
LABEL_1442:
      v760 = (char *)v1857;
      if (!(_QWORD)v1857)
        goto LABEL_1453;
      goto LABEL_1443;
    }
    sub_2396F295C((uint64_t *)(*v1636 + 248), *v1636 + 8, (uint64_t)v1727);
    v761 = (*v1639)[60];
    if (SHIBYTE(v1728) < 0)
    {
      sub_23941A7F8(__src, v1727[0], (unint64_t)v1727[1]);
      *(_QWORD *)&__src[24] = 1064514355;
      *(_QWORD *)&__src[32] = v761;
      __src[40] = 1;
      if (SHIBYTE(v1728) < 0)
      {
        sub_23941A7F8(v1847, v1727[0], (unint64_t)v1727[1]);
LABEL_1384:
        *(_QWORD *)&v1847[24] = 1064514355;
        *(_QWORD *)&v1847[32] = v761;
        v1847[40] = 1;
        v762 = v706[7];
        v763 = (std::__shared_weak_count *)v706[8];
        v1647 = v762;
        v1648 = v763;
        if (v763)
        {
          v764 = (unint64_t *)&v763->__shared_owners_;
          do
            v765 = __ldxr(v764);
          while (__stxr(v765 + 1, v764));
          *(_OWORD *)v1732 = 0uLL;
          *(_QWORD *)&v1732[16] = v762;
          *(_QWORD *)&v1732[24] = v763;
          do
            v766 = __ldxr(v764);
          while (__stxr(v766 + 1, v764));
        }
        else
        {
          *(_OWORD *)v1732 = 0uLL;
          *(_OWORD *)&v1732[16] = v762;
        }
        *(_QWORD *)&v1732[8] = (int)std::thread::hardware_concurrency();
        v767 = operator new(0x1B0uLL);
        v767[1] = 0;
        v767[2] = 0;
        *v767 = &off_250AF83E8;
        if ((__src[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(v1741, *(void **)__src, *(unint64_t *)&__src[8]);
        }
        else
        {
          *(_OWORD *)v1741 = *(_OWORD *)__src;
          *(_QWORD *)&v1741[16] = *(_QWORD *)&__src[16];
        }
        *(_QWORD *)&v1741[40] = *(_QWORD *)&__src[40];
        *(_OWORD *)&v1741[24] = *(_OWORD *)&__src[24];
        *(_QWORD *)&__p[24] = 0;
        v768 = (char *)operator new(0x38uLL);
        *(_QWORD *)v768 = off_250AF98A0;
        v769 = v768 + 8;
        if ((v1741[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(v769, *(void **)v1741, *(unint64_t *)&v1741[8]);
        }
        else
        {
          *(_OWORD *)v769 = *(_OWORD *)v1741;
          *((_QWORD *)v768 + 3) = *(_QWORD *)&v1741[16];
        }
        *((_OWORD *)v768 + 2) = *(_OWORD *)&v1741[24];
        *((_QWORD *)v768 + 6) = *(_QWORD *)&v1741[40];
        *(_QWORD *)&__p[24] = v768;
        if ((v1847[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(v1860, *(void **)v1847, *(unint64_t *)&v1847[8]);
        }
        else
        {
          *(_OWORD *)v1860 = *(_OWORD *)v1847;
          *(_QWORD *)&v1860[16] = *(_QWORD *)&v1847[16];
        }
        *(_OWORD *)&v1860[24] = *(_OWORD *)&v1847[24];
        *(_QWORD *)&v1860[40] = *(_QWORD *)&v1847[40];
        v1691 = 0;
        v770 = (std::string *)operator new(0x38uLL);
        v770->__r_.__value_.__r.__words[0] = (std::string::size_type)off_250AF98E8;
        v771 = &v770->__r_.__value_.__s.__data_[8];
        if ((v1860[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(v771, *(void **)v1860, *(unint64_t *)&v1860[8]);
        }
        else
        {
          *(_OWORD *)v771 = *(_OWORD *)v1860;
          v770[1].__r_.__value_.__r.__words[0] = *(_QWORD *)&v1860[16];
        }
        *(_OWORD *)&v770[1].__r_.__value_.__r.__words[1] = *(_OWORD *)&v1860[24];
        v770[2].__r_.__value_.__r.__words[0] = *(_QWORD *)&v1860[40];
        v1691 = v770;
        sub_239B07D6C((uint64_t)(v767 + 3), (uint64_t *)v1732, __p, &__dst);
        v772 = v1691;
        if (v1691 == &__dst)
        {
          v773 = 4;
          v772 = &__dst;
        }
        else
        {
          if (!v1691)
            goto LABEL_1408;
          v773 = 5;
        }
        (*(void (**)(void))(v772->__r_.__value_.__r.__words[0] + 8 * v773))();
LABEL_1408:
        if ((v1860[23] & 0x80000000) != 0)
          operator delete(*(void **)v1860);
        v774 = *(_QWORD **)&__p[24];
        if (*(_BYTE **)&__p[24] == __p)
        {
          v775 = 4;
          v774 = __p;
        }
        else
        {
          if (!*(_QWORD *)&__p[24])
            goto LABEL_1415;
          v775 = 5;
        }
        (*(void (**)(void))(*v774 + 8 * v775))();
LABEL_1415:
        if ((v1741[23] & 0x80000000) != 0)
          operator delete(*(void **)v1741);
        v776 = *v1639;
        v777 = (std::__shared_weak_count *)(*v1639)[3];
        v776[2] = (uint64_t)(v767 + 3);
        v776[3] = (uint64_t)v767;
        if (v777)
        {
          v778 = (unint64_t *)&v777->__shared_owners_;
          do
            v779 = __ldaxr(v778);
          while (__stlxr(v779 - 1, v778));
          if (!v779)
          {
            ((void (*)(std::__shared_weak_count *))v777->__on_zero_shared)(v777);
            std::__shared_weak_count::__release_weak(v777);
          }
        }
        v780 = *(std::__shared_weak_count **)&v1732[24];
        if (*(_QWORD *)&v1732[24])
        {
          v781 = (unint64_t *)(*(_QWORD *)&v1732[24] + 8);
          do
            v782 = __ldaxr(v781);
          while (__stlxr(v782 - 1, v781));
          if (!v782)
          {
            ((void (*)(std::__shared_weak_count *))v780->__on_zero_shared)(v780);
            std::__shared_weak_count::__release_weak(v780);
          }
        }
        if (v1648)
        {
          v783 = &v1648->__shared_owners_;
          do
            v784 = __ldaxr((unint64_t *)v783);
          while (__stlxr(v784 - 1, (unint64_t *)v783));
          if (!v784)
          {
            ((void (*)(std::__shared_weak_count *))v1648->__on_zero_shared)(v1648);
            std::__shared_weak_count::__release_weak(v1648);
          }
        }
        v785 = (_QWORD *)(*v1639)[54];
        v787 = (*v1639)[2];
        v786 = (*v1639)[3];
        if (v786)
        {
          v788 = (unint64_t *)(v786 + 8);
          do
            v789 = __ldxr(v788);
          while (__stxr(v789 + 1, v788));
        }
        v790 = (std::__shared_weak_count *)v785[1];
        *v785 = v787;
        v785[1] = v786;
        if (!v790)
          goto LABEL_1439;
        v791 = (unint64_t *)&v790->__shared_owners_;
        do
          v792 = __ldaxr(v791);
        while (__stlxr(v792 - 1, v791));
        if (!v792)
        {
          ((void (*)(std::__shared_weak_count *))v790->__on_zero_shared)(v790);
          std::__shared_weak_count::__release_weak(v790);
          if ((v1847[23] & 0x80000000) == 0)
          {
LABEL_1440:
            if ((__src[23] & 0x80000000) == 0)
              goto LABEL_1441;
            goto LABEL_1619;
          }
        }
        else
        {
LABEL_1439:
          if ((v1847[23] & 0x80000000) == 0)
            goto LABEL_1440;
        }
        operator delete(*(void **)v1847);
        if ((__src[23] & 0x80000000) == 0)
        {
LABEL_1441:
          if ((SHIBYTE(v1728) & 0x80000000) == 0)
            goto LABEL_1442;
          goto LABEL_1620;
        }
LABEL_1619:
        operator delete(*(void **)__src);
        if ((SHIBYTE(v1728) & 0x80000000) == 0)
          goto LABEL_1442;
LABEL_1620:
        operator delete(v1727[0]);
        v760 = (char *)v1857;
        if (!(_QWORD)v1857)
        {
LABEL_1453:
          if (v1675[0])
          {
            v1675[1] = v1675[0];
            operator delete(v1675[0]);
          }
          goto LABEL_1455;
        }
LABEL_1443:
        v793 = (char *)*((_QWORD *)&v1857 + 1);
        v794 = v760;
        if (*((char **)&v1857 + 1) != v760)
        {
          do
          {
            v795 = (std::__shared_weak_count *)*((_QWORD *)v793 - 1);
            if (v795)
            {
              v796 = (unint64_t *)&v795->__shared_owners_;
              do
                v797 = __ldaxr(v796);
              while (__stlxr(v797 - 1, v796));
              if (!v797)
              {
                ((void (*)(std::__shared_weak_count *))v795->__on_zero_shared)(v795);
                std::__shared_weak_count::__release_weak(v795);
              }
            }
            v793 -= 16;
          }
          while (v793 != v760);
          v794 = (char *)v1857;
        }
        *((_QWORD *)&v1857 + 1) = v760;
        operator delete(v794);
        goto LABEL_1453;
      }
    }
    else
    {
      *(_OWORD *)__src = *(_OWORD *)v1727;
      *(_QWORD *)&__src[16] = v1728;
      *(_QWORD *)&__src[24] = 1064514355;
      *(_QWORD *)&__src[32] = v761;
      __src[40] = 1;
    }
    *(_OWORD *)v1847 = *(_OWORD *)v1727;
    *(_QWORD *)&v1847[16] = v1728;
    goto LABEL_1384;
  }
  v738 = *v1639;
  v739 = (std::__shared_weak_count *)(*v1639)[53];
  v738[52] = 0;
  v738[53] = 0;
  if (v739)
  {
    v740 = (unint64_t *)&v739->__shared_owners_;
    do
      v741 = __ldaxr(v740);
    while (__stlxr(v741 - 1, v740));
    if (!v741)
    {
      ((void (*)(std::__shared_weak_count *))v739->__on_zero_shared)(v739);
      std::__shared_weak_count::__release_weak(v739);
    }
  }
  v742 = *v1639;
  v743 = (std::__shared_weak_count *)(*v1639)[55];
  v742[54] = 0;
  v742[55] = 0;
  if (v743)
  {
    v744 = (unint64_t *)&v743->__shared_owners_;
    do
      v745 = __ldaxr(v744);
    while (__stlxr(v745 - 1, v744));
    if (!v745)
    {
      ((void (*)(std::__shared_weak_count *))v743->__on_zero_shared)(v743);
      std::__shared_weak_count::__release_weak(v743);
    }
  }
LABEL_1455:
  v798 = operator new(0x700uLL);
  v798[1] = 0;
  v798[2] = 0;
  *v798 = &off_250AF9930;
  bzero(v798 + 3, 0x6E8uLL);
  *((_OWORD *)v798 + 6) = xmmword_239F0C080;
  *((_BYTE *)v798 + 116) = 1;
  v798[15] = 0x3C23D70A00000002;
  *((_DWORD *)v798 + 32) = -1;
  *((_BYTE *)v798 + 132) = 1;
  *((_DWORD *)v798 + 34) = 0;
  *((_DWORD *)v798 + 35) = qos_class_self();
  sub_239AE2278((uint64_t)(v798 + 18));
  sub_239AD012C((uint64_t)(v798 + 60));
  *((_BYTE *)v798 + 1560) = 0;
  *(_QWORD *)((char *)v798 + 1564) = 0x500000000;
  *((_BYTE *)v798 + 1572) = 0;
  *((_DWORD *)v798 + 394) = 2;
  v798[198] = 0x403E000000000000;
  *((_BYTE *)v798 + 1592) = 0;
  *(_QWORD *)((char *)v798 + 1596) = 1920;
  v798[201] = 0;
  v798[203] = 0;
  v798[202] = 0;
  v799 = operator new(4uLL);
  v798[201] = v799;
  *v799++ = 0;
  v798[203] = v799;
  v798[202] = v799;
  *((_OWORD *)v798 + 102) = 0u;
  *((_OWORD *)v798 + 103) = 0u;
  *((_OWORD *)v798 + 104) = 0u;
  *((_DWORD *)v798 + 420) = qos_class_self();
  *((_BYTE *)v798 + 1688) = 0;
  v798[215] = 0;
  *((_OWORD *)v798 + 111) = 0u;
  *((_OWORD *)v798 + 110) = 0u;
  *((_OWORD *)v798 + 109) = 0u;
  v800 = *v1639;
  v801 = (std::__shared_weak_count *)(*v1639)[57];
  v800[56] = (uint64_t)(v798 + 3);
  v800[57] = (uint64_t)v798;
  if (v801)
  {
    v802 = (unint64_t *)&v801->__shared_owners_;
    do
      v803 = __ldaxr(v802);
    while (__stlxr(v803 - 1, v802));
    if (!v803)
    {
      ((void (*)(std::__shared_weak_count *))v801->__on_zero_shared)(v801);
      std::__shared_weak_count::__release_weak(v801);
    }
  }
  v804 = operator new(0xCC8uLL);
  v804[1] = 0;
  v804[2] = 0;
  *v804 = &off_250AF9968;
  bzero(v804 + 3, 0xCB0uLL);
  sub_239420EF4((uint64_t)(v804 + 5));
  sub_239AD233C((uint64_t)(v804 + 29));
  sub_239AB5C84((uint64_t)(v804 + 118));
  sub_239AA7E14((uint64_t)(v804 + 336));
  v805 = *v1639;
  v806 = (std::__shared_weak_count *)(*v1639)[59];
  v805[58] = (uint64_t)(v804 + 3);
  v805[59] = (uint64_t)v804;
  if (v806)
  {
    v807 = (unint64_t *)&v806->__shared_owners_;
    do
      v808 = __ldaxr(v807);
    while (__stlxr(v808 - 1, v807));
    if (!v808)
    {
      ((void (*)(std::__shared_weak_count *))v806->__on_zero_shared)(v806);
      std::__shared_weak_count::__release_weak(v806);
    }
  }
  v1632 = (*v1639)[56];
  memset(v1860, 0, 24);
  sub_2397A98A4(__src);
  v809 = *(uint64_t **)(v1638 + 40);
  for (m = *(uint64_t **)(v1638 + 48); v809 != m; ++v809)
  {
    v811 = *v809;
    if (*v809 < (unint64_t)((uint64_t)(*(_QWORD *)&__src[8] - *(_QWORD *)__src) >> 4))
    {
      sub_23946D5E0(v1741, *(_QWORD *)__src + 16 * v811);
      v812 = *(char **)&v1860[8];
      if (*(_QWORD *)&v1860[8] >= *(_QWORD *)&v1860[16])
      {
        v814 = *(char **)v1860;
        v815 = *(_QWORD *)&v1860[8] - *(_QWORD *)v1860;
        v816 = (uint64_t)(*(_QWORD *)&v1860[8] - *(_QWORD *)v1860) >> 3;
        v817 = v816 + 1;
        if ((unint64_t)(v816 + 1) >> 61)
          sub_2394189F8();
        v818 = *(_QWORD *)&v1860[16] - *(_QWORD *)v1860;
        if ((uint64_t)(*(_QWORD *)&v1860[16] - *(_QWORD *)v1860) >> 2 > v817)
          v817 = v818 >> 2;
        if ((unint64_t)v818 >= 0x7FFFFFFFFFFFFFF8)
          v819 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v819 = v817;
        if (v819)
        {
          if (v819 >> 61)
            sub_239418A80();
          v820 = (char *)operator new(8 * v819);
        }
        else
        {
          v820 = 0;
        }
        v821 = &v820[8 * v816];
        *(_QWORD *)v821 = v811;
        v813 = v821 + 8;
        if (v812 != v814)
        {
          v822 = v812 - 8 - v814;
          if (v822 < 0x58)
            goto LABEL_2988;
          if ((unint64_t)(v812 - &v820[v815]) < 0x20)
            goto LABEL_2988;
          v823 = (v822 >> 3) + 1;
          v824 = &v820[v815 - 16];
          v825 = v812 - 16;
          v826 = v823 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v827 = *(_OWORD *)v825;
            *((_OWORD *)v824 - 1) = *((_OWORD *)v825 - 1);
            *(_OWORD *)v824 = v827;
            v824 -= 32;
            v825 -= 32;
            v826 -= 4;
          }
          while (v826);
          v821 -= 8 * (v823 & 0x3FFFFFFFFFFFFFFCLL);
          v812 -= 8 * (v823 & 0x3FFFFFFFFFFFFFFCLL);
          if (v823 != (v823 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_2988:
            do
            {
              v828 = *((_QWORD *)v812 - 1);
              v812 -= 8;
              *((_QWORD *)v821 - 1) = v828;
              v821 -= 8;
            }
            while (v812 != v814);
          }
        }
        *(_QWORD *)v1860 = v821;
        *(_QWORD *)&v1860[8] = v813;
        *(_QWORD *)&v1860[16] = &v820[8 * v819];
        if (v814)
          operator delete(v814);
      }
      else
      {
        **(_QWORD **)&v1860[8] = v811;
        v813 = v812 + 8;
      }
      *(_QWORD *)&v1860[8] = v813;
      v829 = *(std::__shared_weak_count **)&v1741[8];
      if (*(_QWORD *)&v1741[8])
      {
        v830 = (unint64_t *)(*(_QWORD *)&v1741[8] + 8);
        do
          v831 = __ldaxr(v830);
        while (__stlxr(v831 - 1, v830));
        if (!v831)
        {
          ((void (*)(std::__shared_weak_count *))v829->__on_zero_shared)(v829);
          std::__shared_weak_count::__release_weak(v829);
        }
      }
    }
  }
  if (*(_QWORD *)v1860 == *(_QWORD *)&v1860[8])
  {
    sub_239A444D4((uint64_t)"unknown file", 699, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v832 = v1632;
  if ((_BYTE *)(v1632 + 152) != v1860)
    sub_23945D3D0((_QWORD *)(v1632 + 152), *(char **)v1860, *(char **)&v1860[8], (uint64_t)(*(_QWORD *)&v1860[8] - *(_QWORD *)v1860) >> 3);
  *(_QWORD *)v1847 = operator new(0x20uLL);
  v1635 = xmmword_239EC9FE0;
  *(_OWORD *)&v1847[8] = xmmword_239EC9FE0;
  strcpy(*(char **)v1847, "com.apple.CorePhotogrammetry");
  qmemcpy(v1634, "rePhotogrammetrycom.apple.CorePh", sizeof(v1634));
  *(_QWORD *)__p = operator new(0x30uLL);
  *(_WORD *)&v1631[34] = 0;
  *(_DWORD *)&v1631[36] = 0;
  *(_QWORD *)&v1631[40] = 0x8000000000000030;
  *(_OWORD *)&__p[8] = xmmword_239EC9F90;
  strcpy(v1631, "atching_Kernels.Photogrammetry_M(");
  strcpy(*(char **)__p, "Photogrammetry_Matching_Kernels.metallib");
  sub_239643810((uint64_t)v1847, (__int128 *)__p, 0, 0, (std::string *)v1741);
  if (!v1741[24])
    sub_2394875CC();
  v833 = (void **)(v1632 + 176);
  if (*(char *)(v1632 + 199) < 0)
    operator delete(*v833);
  *(_OWORD *)v833 = *(_OWORD *)v1741;
  *(_QWORD *)(v832 + 192) = *(_QWORD *)&v1741[16];
  v1741[23] = 0;
  v1741[0] = 0;
  if ((__p[23] & 0x80000000) != 0)
    operator delete(*(void **)__p);
  v834 = v1637;
  if ((v1847[23] & 0x80000000) != 0)
    operator delete(*(void **)v1847);
  v835 = (char *)operator new(0x20uLL);
  *(_QWORD *)v1847 = v835;
  *(_OWORD *)&v1847[8] = v1635;
  *(_OWORD *)v835 = v1634[1];
  *(_OWORD *)(v835 + 12) = v1634[0];
  v835[28] = 0;
  v836 = operator new(0x30uLL);
  *(_QWORD *)__p = v836;
  *(_OWORD *)&__p[8] = *(_OWORD *)&v1631[32];
  v837 = *(_OWORD *)v1631;
  *(_OWORD *)v836 = *(_OWORD *)&v1631[16];
  *((_OWORD *)v836 + 1) = v837;
  strcpy((char *)v836 + 32, "metallib");
  sub_239643810((uint64_t)v1847, (__int128 *)__p, 0, 0, (std::string *)v1741);
  if (!v1741[24])
    sub_2394875CC();
  v842 = (void **)(v832 + 888);
  if (*(char *)(v832 + 911) < 0)
    operator delete(*v842);
  *(_OWORD *)v842 = *(_OWORD *)v1741;
  *(_QWORD *)(v832 + 904) = *(_QWORD *)&v1741[16];
  v1741[23] = 0;
  v1741[0] = 0;
  if ((__p[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__p);
    if ((v1847[23] & 0x80000000) == 0)
    {
LABEL_1510:
      v843 = *(char **)__src;
      if (*(_QWORD *)__src)
        goto LABEL_1511;
LABEL_1524:
      v849 = *(void **)v1860;
      if (!*(_QWORD *)v1860)
        goto LABEL_1526;
      goto LABEL_1525;
    }
  }
  else if ((v1847[23] & 0x80000000) == 0)
  {
    goto LABEL_1510;
  }
  operator delete(*(void **)v1847);
  v843 = *(char **)__src;
  if (!*(_QWORD *)__src)
    goto LABEL_1524;
LABEL_1511:
  v844 = *(char **)&__src[8];
  v845 = v843;
  if (*(char **)&__src[8] != v843)
  {
    do
    {
      v846 = (std::__shared_weak_count *)*((_QWORD *)v844 - 1);
      if (v846)
      {
        v847 = (unint64_t *)&v846->__shared_owners_;
        do
          v848 = __ldaxr(v847);
        while (__stlxr(v848 - 1, v847));
        if (!v848)
        {
          ((void (*)(std::__shared_weak_count *))v846->__on_zero_shared)(v846);
          std::__shared_weak_count::__release_weak(v846);
        }
      }
      v844 -= 16;
    }
    while (v844 != v843);
    v845 = *(char **)__src;
  }
  *(_QWORD *)&__src[8] = v843;
  operator delete(v845);
  v834 = v1637;
  v849 = *(void **)v1860;
  if (*(_QWORD *)v1860)
  {
LABEL_1525:
    *(_QWORD *)&v1860[8] = v849;
    operator delete(v849);
  }
LABEL_1526:
  v850 = v1638;
  v851 = *(_DWORD *)(v1638 + 152);
  v852 = v1632;
  if (v851 == 1)
  {
    *(_QWORD *)(v1632 + 72) = 0x4000000012C0;
    *(_QWORD *)(v852 + 872) = 0;
    if (*(_DWORD *)(v850 + 144) == 1)
      *(_DWORD *)(v852 + 84) = 0;
    else
      *(_DWORD *)(v852 + 84) = 3;
  }
  else
  {
    if (v851)
    {
      v1627 = 733;
      goto LABEL_2952;
    }
    *(_QWORD *)(v1632 + 72) = 0x200000000C80;
    *(_DWORD *)(v852 + 84) = 0;
    *(_QWORD *)(v852 + 872) = 8;
  }
  v853 = *(_DWORD *)(v1638 + 156);
  if (v853)
  {
    if (v853 != 1)
    {
      v1627 = 750;
      goto LABEL_2952;
    }
    v854 = 0x3FB999999999999ALL;
    v855 = 5;
  }
  else
  {
    v854 = 0x3FD3333333333333;
    v855 = *(unsigned int *)(v1638 + 156);
  }
  *(_DWORD *)(v852 + 256) = v853;
  *(_QWORD *)(v852 + 912) = v855;
  *(_QWORD *)(v852 + 472) = v854;
  v856 = *(_DWORD *)(v1638 + 148);
  if (v856)
  {
    if (v856 == 1)
    {
      v857 = 0;
      v858 = 2;
      v859 = 1062836634;
      goto LABEL_1540;
    }
    v1627 = 764;
LABEL_2952:
    sub_239A444D4((uint64_t)"unknown file", v1627, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v858 = 3;
  v857 = 0x3FB999999999999ALL;
  v859 = 1061997773;
LABEL_1540:
  *(_DWORD *)(v852 + 200) = v859;
  *(_QWORD *)(v852 + 232) = v857;
  *(_QWORD *)(v852 + 488) = v858;
  v860 = v1638;
  v861 = *(_BYTE *)(v1638 + 169);
  *(_BYTE *)(v852 + 321) = v861;
  *(_BYTE *)(v852 + 418) = v861;
  *(_BYTE *)(v852 + 496) = v861;
  *(_BYTE *)(v852 + 92) = *(_BYTE *)(v860 + 170);
  v862 = 2 * (*(_BYTE *)(v860 + 171) == 0);
  v863 = *(_BYTE *)(v860 + 171) ^ 1;
  *(_BYTE *)(v852 + 856) = v863;
  *(_BYTE *)(v852 + 842) = v862;
  *(_BYTE *)(v852 + 843) = v862;
  *(_BYTE *)(v852 + 844) = v862;
  *(_BYTE *)(v852 + 1520) = v863;
  *(_BYTE *)(v852 + 1506) = v862;
  *(_BYTE *)(v852 + 1507) = v862;
  *(_BYTE *)(v852 + 1508) = v862;
  *(_DWORD *)(v852 + 456) = *(_DWORD *)(v860 + 164);
  v864 = *(unsigned __int8 *)(v860 + 168);
  if (v864 == 7)
  {
    *(_DWORD *)(v852 + 460) = 0;
    *(_BYTE *)(v852 + 248) = 7;
    *(_BYTE *)(v852 + 216) = 1;
    *(_QWORD *)(v852 + 440) = 0x200000000;
    *(_DWORD *)(v852 + 1080) = 2;
    *(_BYTE *)(v852 + 1073) = 1;
    *(_QWORD *)(v852 + 128) = 0x4000000000000000;
  }
  else
  {
    if (v864 == 6)
    {
      *(_DWORD *)(v852 + 460) = 3;
      LOBYTE(v864) = 1;
    }
    else
    {
      if (v864 != 1)
        goto LABEL_1547;
      *(_DWORD *)(v852 + 460) = 0;
    }
    *(_BYTE *)(v852 + 248) = v864;
    *(_BYTE *)(v852 + 1073) = 0;
  }
LABEL_1547:
  v865 = *(_DWORD *)(v1638 + 172);
  *(_DWORD *)(v852 + 1524) = v865;
  *(_DWORD *)(v852 + 860) = v865;
  *(_OWORD *)v1741 = xmmword_239F10A43;
  *(_OWORD *)&v1741[16] = *(_OWORD *)dbl_239F10A53;
  strcpy(&v1741[32], "KHFOmXKZBiEGZ_^Ohk");
  v866 = sub_2396F1590(v1741, 9.25534809e126, dbl_239F10A53[0], v838, v839, v840, v841);
  v867 = strlen((const char *)v866);
  if (v867 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_2918;
  v868 = v867;
  if (v867 >= 0x17)
  {
    v870 = (v867 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v867 | 7) != 0x17)
      v870 = v867 | 7;
    v871 = v870 + 1;
    v869 = operator new(v870 + 1);
    *(_QWORD *)&v1860[16] = v871 | 0x8000000000000000;
    *(_QWORD *)v1860 = v869;
    *(_QWORD *)&v1860[8] = v868;
    goto LABEL_1554;
  }
  v1860[23] = v867;
  v869 = v1860;
  if (v867)
LABEL_1554:
    memmove(v869, v866, v868);
  *((_BYTE *)v869 + v868) = 0;
  v872 = sub_2396287F4((uint64_t)v1860, 0, 0);
  if ((v1860[23] & 0x80000000) != 0)
    operator delete(*(void **)v1860);
  if (v872 < 0x100u || (_BYTE)v872)
  {
    *(_DWORD *)(v852 + 1524) = 1;
    *(_DWORD *)(v852 + 860) = 1;
  }
  *(_OWORD *)v1741 = xmmword_239F10A76;
  *(_OWORD *)&v1741[16] = *(_OWORD *)dbl_239F10A86;
  *(_OWORD *)&v1741[32] = xmmword_239F10A96;
  *(_QWORD *)&v1741[47] = 0x12113F3F261536;
  v877 = sub_239B29C90(v1741, 3.80593181e-139, dbl_239F10A86[0], v873, v874, v875, v876);
  v878 = strlen((const char *)v877);
  if (v878 > 0x7FFFFFFFFFFFFFF7)
LABEL_2918:
    sub_23941A5AC();
  v879 = v878;
  if (v878 >= 0x17)
  {
    v881 = (v878 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v878 | 7) != 0x17)
      v881 = v878 | 7;
    v882 = v881 + 1;
    v880 = operator new(v881 + 1);
    *(_QWORD *)&v1860[16] = v882 | 0x8000000000000000;
    *(_QWORD *)v1860 = v880;
    *(_QWORD *)&v1860[8] = v879;
    goto LABEL_1567;
  }
  v1860[23] = v878;
  v880 = v1860;
  if (v878)
LABEL_1567:
    memmove(v880, v877, v879);
  *((_BYTE *)v880 + v879) = 0;
  v883 = sub_2396287F4((uint64_t)v1860, 0, 0);
  if ((v1860[23] & 0x80000000) != 0)
    operator delete(*(void **)v1860);
  if (v883 < 0x100u || (_BYTE)v883)
    *(_DWORD *)(v852 + 860) = 1;
  *(_OWORD *)v1741 = xmmword_239F10A10;
  *(_OWORD *)&v1741[16] = *(_OWORD *)dbl_239F10A20;
  *(_OWORD *)&v1741[32] = xmmword_239F10A30;
  strcpy(&v1741[47], "(!4");
  v888 = sub_2396F1590(v1741, 8.42167962e-58, dbl_239F10A20[0], v884, v885, v886, v887);
  v889 = strlen((const char *)v888);
  if (v889 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v890 = v889;
  if (v889 >= 0x17)
  {
    v892 = (v889 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v889 | 7) != 0x17)
      v892 = v889 | 7;
    v893 = v892 + 1;
    v891 = operator new(v892 + 1);
    *(_QWORD *)&__src[16] = v893 | 0x8000000000000000;
    *(_QWORD *)__src = v891;
    *(_QWORD *)&__src[8] = v890;
    goto LABEL_1580;
  }
  __src[23] = v889;
  v891 = __src;
  if (v889)
LABEL_1580:
    memmove(v891, v888, v890);
  v891[v890] = 0;
  sub_2396284D4((uint64_t)__src, 0, 0, (uint64_t)v1860);
  if ((__src[23] & 0x80000000) == 0)
  {
    if (v1860[24])
      goto LABEL_1583;
LABEL_1586:
    HIBYTE(v1646) = 4;
    strcpy((char *)v1645, "auto");
    goto LABEL_1590;
  }
  operator delete(*(void **)__src);
  if (!v1860[24])
    goto LABEL_1586;
LABEL_1583:
  if ((v1860[23] & 0x80000000) != 0)
  {
    sub_23941A7F8(v1645, *(void **)v1860, *(unint64_t *)&v1860[8]);
    if (v1860[24] && (v1860[23] & 0x80000000) != 0)
      operator delete(*(void **)v1860);
  }
  else
  {
    *(_OWORD *)v1645 = *(_OWORD *)v1860;
    v1646 = *(_QWORD *)&v1860[16];
  }
LABEL_1590:
  if (SHIBYTE(v1646) < 0)
  {
    if (v1645[1] == (void *)3)
    {
      v896 = (void **)v1645[0];
      if (*(_WORD *)v1645[0] != 28771 || *((_BYTE *)v1645[0] + 2) != 117)
      {
        if (*(_WORD *)v1645[0] != 28775 || *((_BYTE *)v1645[0] + 2) != 117)
          goto LABEL_1610;
LABEL_1616:
        v902 = 2;
        goto LABEL_1623;
      }
LABEL_1615:
      v902 = 0;
      goto LABEL_1623;
    }
LABEL_1614:
    v902 = 3;
    goto LABEL_1623;
  }
  if (SHIBYTE(v1646) != 3)
    goto LABEL_1614;
  if (LOWORD(v1645[0]) == 28771 && BYTE2(v1645[0]) == 117)
    goto LABEL_1615;
  if (LOWORD(v1645[0]) == 28775 && BYTE2(v1645[0]) == 117)
    goto LABEL_1616;
  v896 = v1645;
LABEL_1610:
  v899 = *(unsigned __int16 *)v896;
  v900 = *((unsigned __int8 *)v896 + 2);
  if (v899 != 30568 || v900 != 97)
    goto LABEL_1614;
  v902 = 1;
LABEL_1623:
  *(_DWORD *)(v852 + 112) = v902;
  v903 = *(_DWORD *)(v1638 + 144);
  if (v903 == 1)
  {
    *(_DWORD *)(v852 + 80) = 1;
    *(_DWORD *)(v852 + 88) = 1;
    *(_WORD *)(v852 + 108) = 256;
    *(_DWORD *)(v852 + 120) = 1;
    *(_QWORD *)(v852 + 260) = 0x100000001;
    *(_QWORD *)(v852 + 464) = 1;
    v910 = qos_class_self();
    *(_DWORD *)(v852 + 1656) = v910;
    v911 = *(_DWORD *)(v1638 + 160);
    v912 = (v911 < 4) & (0xDu >> (v911 & 0xF));
    if (v912 == 1)
    {
      *(_DWORD *)(v852 + 104) = 4;
      *(_DWORD *)(v852 + 76) = 4096;
      *(_DWORD *)(v852 + 212) = 4096;
      *(_QWORD *)(v852 + 376) = 0;
      *(_DWORD *)(v852 + 1540) = 0;
      if (v911 == 3)
      {
        _CF = v910 >= QOS_CLASS_BACKGROUND;
        v914 = 9;
      }
      else
      {
        if (v911 != 2)
          goto LABEL_1644;
        _CF = v910 >= QOS_CLASS_UTILITY;
        v914 = 17;
      }
      if (!_CF)
        v914 = v910;
      *(_DWORD *)(v852 + 1656) = v914;
    }
    else
    {
      *(_QWORD *)(v852 + 376) = 0;
      *(_DWORD *)(v852 + 76) = 0x2000;
      *(_DWORD *)(v852 + 212) = 0x2000;
      *(_DWORD *)(v852 + 1540) = 0;
    }
LABEL_1644:
    v915 = *(_DWORD *)(v1638 + 156);
    if (v915 == 1)
    {
      *(_QWORD *)(v852 + 304) = 5;
      if (v912)
        v916 = 5;
      else
        v916 = 10;
      *(_QWORD *)(v852 + 312) = v916;
    }
    else if (!v915)
    {
      if (v912)
        *(_DWORD *)(v852 + 368) = 10;
      else
        *(_DWORD *)(v852 + 368) = 15;
    }
    v917 = *v1639;
    __dst.__r_.__value_.__s.__data_[0] = 0;
    v1692 = 0;
    v918 = v917[52];
    if (v918)
    {
      *(_DWORD *)(v918 + 124) = 1;
      sub_239B31818((uint64_t)&__dst, v918 + 112);
      v919 = 2;
      if ((v1633 & 1) != 0)
        goto LABEL_1655;
    }
    else
    {
      v919 = 0;
      if ((v1633 & 1) != 0)
      {
LABEL_1655:
        v1640 = 0;
        v1641 = 0;
        v920 = *v1636;
        if (!*(_BYTE *)(*v1636 + 4))
        {
          sub_239A444D4((uint64_t)"unknown file", 837, (uint64_t)"", (void (*)(void *))sub_239A4463C);
          sub_239A4475C();
          abort();
        }
        if (!*(_BYTE *)(v920 + 1192))
          goto LABEL_2938;
        sub_2396F295C((uint64_t *)(v920 + 1168), v920 + 8, (uint64_t)&v1671);
        std::__fs::filesystem::__status(&v1671, 0);
        v921 = 1;
        if (!v1741[0] || v1741[0] == 255)
        {
LABEL_1911:
          if (SHIBYTE(v1671.__pn_.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v1671.__pn_.__r_.__value_.__l.__data_);
          if (!v921)
          {
            v1083 = v1640;
            if (v1640)
            {
              v1683 = 0;
              v1084 = *v1639;
              v1085 = (*v1639)[2];
              if (!v1085)
                goto LABEL_1925;
              v1086 = v1084[3];
              if (v1086)
              {
                v1087 = (unint64_t *)(v1086 + 8);
                do
                  v1088 = __ldxr(v1087);
                while (__stxr(v1088 + 1, v1087));
              }
              *(_QWORD *)v1741 = &off_250AF9AB0;
              *(_QWORD *)&v1741[8] = v1085;
              *(_QWORD *)&v1741[16] = v1086;
              *(_QWORD *)&v1741[24] = v1741;
              sub_23948AB98(v1741, v1682);
              v1089 = *(_QWORD **)&v1741[24];
              if (*(_BYTE **)&v1741[24] == v1741)
              {
                v1090 = 4;
                v1089 = v1741;
              }
              else
              {
                if (!*(_QWORD *)&v1741[24])
                {
LABEL_1924:
                  v1084 = *v1639;
LABEL_1925:
                  v1092 = v1084[4];
                  v1091 = v1084[5];
                  if (v1091)
                  {
                    v1093 = (unint64_t *)(v1091 + 8);
                    do
                      v1094 = __ldxr(v1093);
                    while (__stxr(v1094 + 1, v1093));
                  }
                  *(_QWORD *)v1680 = &off_250AF9B40;
                  *(_QWORD *)&v1680[8] = v1092;
                  *(_QWORD *)&v1680[16] = v1091;
                  v1681 = v1680;
                  v1095 = *v1636;
                  v1679 = 0;
                  if (!*(_BYTE *)(v1095 + 4))
                  {
                    sub_239A444D4((uint64_t)"unknown file", 950, (uint64_t)"", (void (*)(void *))sub_239A4463C);
                    sub_239A4475C();
                    abort();
                  }
                  if (!*(_BYTE *)(v1095 + 1288) || !*(_QWORD *)(v1095 + 1272))
                    goto LABEL_2939;
                  sub_239A8DC0C((uint64_t)v1741, v1095 + 1248);
                  if (*(char *)(v1095 + 31) < 0)
                  {
                    sub_23941A7F8(&v1741[40], *(void **)(v1095 + 8), *(_QWORD *)(v1095 + 16));
                  }
                  else
                  {
                    v1096 = *(_OWORD *)(v1095 + 8);
                    *(_QWORD *)&v1741[56] = *(_QWORD *)(v1095 + 24);
                    *(_OWORD *)&v1741[40] = v1096;
                  }
                  v1097 = (char *)operator new(0x48uLL);
                  v1098 = *(_OWORD *)v1741;
                  *(_OWORD *)v1741 = 0uLL;
                  *(_QWORD *)v1097 = off_250AF4190;
                  *(_OWORD *)(v1097 + 8) = v1098;
                  v1099 = *(_QWORD **)&v1741[16];
                  v1100 = *(_QWORD *)&v1741[24];
                  *((_QWORD *)v1097 + 3) = *(_QWORD *)&v1741[16];
                  *((_QWORD *)v1097 + 4) = v1100;
                  *((_DWORD *)v1097 + 10) = *(_DWORD *)&v1741[32];
                  if (v1100)
                  {
                    v1101 = v1099[1];
                    if ((*((_QWORD *)&v1098 + 1) & (*((_QWORD *)&v1098 + 1) - 1)) != 0)
                    {
                      if (v1101 >= *((_QWORD *)&v1098 + 1))
                        v1101 %= *((_QWORD *)&v1098 + 1);
                    }
                    else
                    {
                      v1101 &= *((_QWORD *)&v1098 + 1) - 1;
                    }
                    *(_QWORD *)(v1098 + 8 * v1101) = v1097 + 24;
                    *(_QWORD *)&v1741[16] = 0;
                    *(_QWORD *)&v1741[24] = 0;
                    *((_OWORD *)v1097 + 3) = *(_OWORD *)&v1741[40];
                    *((_QWORD *)v1097 + 8) = *(_QWORD *)&v1741[56];
                    memset(&v1741[40], 0, 24);
                    *(_QWORD *)&__src[24] = v1097;
                  }
                  else
                  {
                    *((_OWORD *)v1097 + 3) = *(_OWORD *)&v1741[40];
                    *((_QWORD *)v1097 + 8) = *(_QWORD *)&v1741[56];
                    memset(&v1741[40], 0, 24);
                    *(_QWORD *)&__src[24] = v1097;
                    if (v1099)
                    {
                      do
                      {
                        v1103 = (_QWORD *)*v1099;
                        v1104 = v1099[3];
                        if (v1104)
                        {
                          v1105 = v1099[4];
                          v1102 = (void *)v1099[3];
                          if (v1105 != v1104)
                          {
                            do
                            {
                              if (*(char *)(v1105 - 1) < 0)
                                operator delete(*(void **)(v1105 - 24));
                              v1105 -= 24;
                            }
                            while (v1105 != v1104);
                            v1102 = (void *)v1099[3];
                          }
                          v1099[4] = v1104;
                          operator delete(v1102);
                        }
                        operator delete(v1099);
                        v1099 = v1103;
                      }
                      while (v1103);
                    }
                  }
                  v1106 = *(void **)v1741;
                  *(_QWORD *)v1741 = 0;
                  if (v1106)
                    operator delete(v1106);
                  v1107 = *(_QWORD *)&__src[24];
                  v834 = v1637;
                  if (*(_QWORD *)&__src[24])
                  {
                    if (*(_BYTE **)&__src[24] == __src)
                    {
                      *(_QWORD *)&v1860[24] = v1860;
                      (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)__src + 24))(__src, v1860);
LABEL_1958:
                      sub_239B03E2C(v1860, &v1678);
                      v1108 = *(_BYTE **)&v1860[24];
                      if (*(_BYTE **)&v1860[24] == v1860)
                      {
                        v1109 = 4;
                        v1108 = v1860;
                      }
                      else
                      {
                        if (!*(_QWORD *)&v1860[24])
                          goto LABEL_1963;
                        v1109 = 5;
                      }
                      (*(void (**)(void))(*(_QWORD *)v1108 + 8 * v1109))();
LABEL_1963:
                      v1110 = *(_QWORD **)&__src[24];
                      if (*(_BYTE **)&__src[24] == __src)
                      {
                        v1111 = 4;
                        v1110 = __src;
                      }
                      else
                      {
                        if (!*(_QWORD *)&__src[24])
                          goto LABEL_1968;
                        v1111 = 5;
                      }
                      (*(void (**)(void))(*v1110 + 8 * v1111))();
LABEL_1968:
                      if (v1679)
                      {
                        v1112 = operator new(0x50uLL);
                        v1112[1] = 0;
                        v1112[2] = 0;
                        *v1112 = &off_250AF99A0;
                        v1113 = (uint64_t)v1683;
                        v1633 = v1112;
                        if (v1683)
                        {
                          if (v1683 == v1682)
                          {
                            v1718 = v1717;
                            (*(void (**)(_BYTE *, const void **))(*(_QWORD *)v1682 + 24))(v1682, v1717);
LABEL_1974:
                            v1114 = (uint64_t)v1681;
                            if (v1681)
                            {
                              if (v1681 == v1680)
                              {
                                v1716 = v1714;
                                (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v1680 + 24))((uint64_t)v1680, v1714);
LABEL_1979:
                                v1115 = (uint64_t)v1679;
                                if (v1679)
                                {
                                  if (v1679 == &v1678)
                                  {
                                    v1713 = v1712;
                                    (*(void (**)(std::string *, void **))(v1678.__r_.__value_.__r.__words[0]
                                                                                   + 24))(&v1678, v1712);
LABEL_1984:
                                    *((_OWORD *)v1112 + 2) = 0u;
                                    v1116 = (pthread_mutex_t **)(v1112 + 4);
                                    *(v1116 - 1) = (pthread_mutex_t *)&off_250B014A8;
                                    *((_OWORD *)v1116 + 1) = 0u;
                                    *((_DWORD *)v1116 + 8) = -1;
                                    v1116[5] = 0;
                                    v1847[0] = 0;
                                    v1855 = 0;
                                    if (v1083[1424])
                                    {
                                      v1117 = v1083 + 1264;
                                    }
                                    else
                                    {
                                      if (!v1083[3520])
                                        goto LABEL_1992;
                                      v1117 = v1083 + 3064;
                                    }
                                    *(_OWORD *)v1847 = *(_OWORD *)v1117;
                                    memset(&v1847[16], 0, 24);
                                    v1119 = (_BYTE *)*((_QWORD *)v1117 + 2);
                                    v1118 = (_BYTE *)*((_QWORD *)v1117 + 3);
                                    v1120 = v1118 - v1119;
                                    if (v1118 != v1119)
                                    {
                                      if (v1120 < 0)
                                        sub_2394189F8();
                                      *(_QWORD *)&v1847[16] = operator new(v1118 - v1119);
                                      *(_QWORD *)&v1847[24] = *(_QWORD *)&v1847[16];
                                      v1121 = *(_QWORD *)&v1847[16] + 8 * (v1120 >> 3);
                                      *(_QWORD *)&v1847[32] = v1121;
                                      memcpy(*(void **)&v1847[16], v1119, v1120);
                                      *(_QWORD *)&v1847[24] = v1121;
                                      v834 = v1637;
                                    }
                                    v1851 = *(_OWORD *)(v1117 + 104);
                                    v1852 = *(_OWORD *)(v1117 + 120);
                                    v1853 = *(_OWORD *)(v1117 + 136);
                                    v1854 = *((_DWORD *)v1117 + 38);
                                    *(_OWORD *)&v1847[40] = *(_OWORD *)(v1117 + 40);
                                    v1848 = *(_OWORD *)(v1117 + 56);
                                    v1849 = *(_OWORD *)(v1117 + 72);
                                    v1850 = *(_OWORD *)(v1117 + 88);
                                    v1855 = 1;
LABEL_1992:
                                    *(_OWORD *)v1675 = xmmword_239F0C080;
                                    LODWORD(v1676) = 0;
                                    BYTE4(v1676) = 1;
                                    *((_QWORD *)&v1676 + 1) = 0x3C23D70A00000002;
                                    LODWORD(v1677) = -1;
                                    WORD2(v1677) = 1;
                                    DWORD2(v1677) = 0;
                                    HIDWORD(v1677) = qos_class_self();
                                    if (v1083[1480])
                                    {
                                      v1122 = v1083 + 1432;
                                    }
                                    else
                                    {
                                      if (!v1083[3720])
                                        goto LABEL_1997;
                                      v1122 = v1083 + 3672;
                                    }
                                    v1123 = v1122[1];
                                    *(_OWORD *)v1675 = *v1122;
                                    v1676 = v1123;
                                    v1677 = v1122[2];
LABEL_1997:
                                    *(_DWORD *)__src = 0;
                                    *(_OWORD *)&__src[8] = xmmword_239EC6680;
                                    *(_DWORD *)&__src[24] = 257;
                                    memset(&__src[32], 0, 32);
                                    v1836 = 0u;
                                    *(_QWORD *)&v1837 = 0x45D1B0003F4CCCCDLL;
                                    BYTE8(v1837) = 1;
                                    HIDWORD(v1837) = 0x3FFF;
                                    *(_WORD *)v1838 = 0;
                                    *(_OWORD *)&v1838[8] = xmmword_239EC6690;
                                    *(_QWORD *)&v1838[24] = 0;
                                    v1839[0] = 0;
                                    *(_OWORD *)&v1839[8] = xmmword_239EC66A0;
                                    *(_DWORD *)&v1839[4] = 981668463;
                                    *(_DWORD *)&v1839[24] = 1;
                                    *(_QWORD *)&v1839[28] = 0x404000003C23D70ALL;
                                    v1839[36] = 0;
                                    v1839[40] = 1;
                                    *(_QWORD *)&v1839[44] = 0x600000008;
                                    *(_OWORD *)&v1839[56] = xmmword_239EC66B0;
                                    *(_WORD *)&v1839[72] = 256;
                                    *(_OWORD *)&v1840[8] = xmmword_239EC66C0;
                                    *(_QWORD *)v1840 = 15;
                                    *(_QWORD *)&v1840[24] = 0xBFF0000000000000;
                                    LODWORD(v1841) = 2139095039;
                                    *(_QWORD *)((char *)&v1841 + 4) = 0x1EFFFFFFFFLL;
                                    WORD6(v1841) = 0;
                                    BYTE14(v1841) = 1;
                                    v1842 = 0uLL;
                                    *(_QWORD *)&v1843 = 0;
                                    BYTE8(v1843) = 1;
                                    LOBYTE(v1844) = 1;
                                    WORD4(v1844) = 0;
                                    BYTE10(v1844) = 1;
                                    v1845 = xmmword_239EC66D0;
                                    *(_QWORD *)&v1846 = 0x200000000;
                                    v1124 = v1083 + 4440;
                                    *((_QWORD *)&v1846 + 1) = qos_class_self() | 0x6400000000;
                                    if (v1083[1824])
                                    {
                                      *(_OWORD *)__src = *((_OWORD *)v1083 + 93);
                                      *(_OWORD *)&__src[12] = *(_OWORD *)(v1083 + 1500);
                                      if (__src != v1083 + 1488)
                                        sub_23945D3D0(&__src[32], *((char **)v1083 + 190), *((char **)v1083 + 191), (uint64_t)(*((_QWORD *)v1083 + 191) - *((_QWORD *)v1083 + 190)) >> 3);
                                      std::string::operator=((std::string *)&__src[56], (const std::string *)(v1083 + 1544));
                                      v1125 = (__int128 *)(v1083 + 1568);
                                    }
                                    else
                                    {
                                      if (!*v1124)
                                        goto LABEL_2006;
                                      *(_OWORD *)__src = *(_OWORD *)(v1083 + 4104);
                                      *(_OWORD *)&__src[12] = *(_OWORD *)(v1083 + 4116);
                                      if (__src != v1083 + 4104)
                                        sub_23945D3D0(&__src[32], *((char **)v1083 + 517), *((char **)v1083 + 518), (uint64_t)(*((_QWORD *)v1083 + 518) - *((_QWORD *)v1083 + 517)) >> 3);
                                      std::string::operator=((std::string *)&__src[56], (const std::string *)(v1083 + 4160));
                                      v1125 = (__int128 *)(v1083 + 4184);
                                    }
                                    v1126 = v1125[13];
                                    v1843 = v1125[12];
                                    v1844 = v1126;
                                    v1127 = v1125[15];
                                    v1845 = v1125[14];
                                    v1846 = v1127;
                                    v1128 = v1125[9];
                                    *(_OWORD *)v1840 = v1125[8];
                                    *(_OWORD *)&v1840[16] = v1128;
                                    v1129 = v1125[11];
                                    v1841 = v1125[10];
                                    v1842 = v1129;
                                    v1130 = v1125[5];
                                    *(_OWORD *)&v1839[16] = v1125[4];
                                    *(_OWORD *)&v1839[32] = v1130;
                                    v1131 = v1125[7];
                                    *(_OWORD *)&v1839[48] = v1125[6];
                                    *(_OWORD *)&v1839[64] = v1131;
                                    v1132 = v1125[1];
                                    v1837 = *v1125;
                                    *(_OWORD *)v1838 = v1132;
                                    v1133 = v1125[3];
                                    *(_OWORD *)&v1838[16] = v1125[2];
                                    *(_OWORD *)v1839 = v1133;
LABEL_2006:
                                    *(_OWORD *)v1741 = 2uLL;
                                    *(_OWORD *)&v1741[16] = xmmword_239F0BEF0;
                                    *(_QWORD *)&v1741[32] = 3;
                                    *(_WORD *)&v1741[40] = 1;
                                    v1743[0] = 0x3FE0000000000000;
                                    v1743[1] = 4;
                                    *(_OWORD *)&v1741[48] = xmmword_239F0BF00;
                                    *(_OWORD *)&v1741[64] = xmmword_239F0BF10;
                                    *(_OWORD *)&v1741[96] = xmmword_239EC67E0;
                                    *(int64x2_t *)&v1741[80] = vdupq_n_s64(5uLL);
                                    v1742 = xmmword_239F0BF20;
                                    v1744 = xmmword_239F0BF30;
                                    v1745 = xmmword_239F0BF40;
                                    v1748 = xmmword_239F0BF50;
                                    v1746 = xmmword_239F0BF60;
                                    v1747 = xmmword_239F0BF70;
                                    v1749 = 0x4010000000000000;
                                    v1750 = 20;
                                    __asm { FMOV            V0.4S, #-1.0 }
                                    v1751 = xmmword_239F0BF80;
                                    v1752 = _Q0;
                                    v1753 = xmmword_239F0BF90;
                                    v1754 = 0x3D719799812DEA11;
                                    v1755 = 1;
                                    v1756 = 0x3FF0000000000000;
                                    v1757 = 1;
                                    v1759 = 0;
                                    v1761 = 0;
                                    v1762 = 33685761;
                                    v1763 = 258;
                                    v1764 = 1;
                                    v1766 = 1;
                                    v1767 = 0;
                                    v1765 = 0;
                                    v1768 = 8;
                                    LODWORD(v1769) = 3;
                                    *(_OWORD *)v1770 = 0u;
                                    v1771 = 0u;
                                    v1772 = vdupq_n_s64(0xFuLL);
                                    v1773 = 0;
                                    v1774 = 0;
                                    v1775 = 0;
                                    v1776 = 16842753;
                                    v1780 = xmmword_239EC67F0;
                                    v1782 = 0;
                                    v1777 = xmmword_239F0BFA0;
                                    v1779 = 0xBFF0000000000000;
                                    v1778 = 3;
                                    v1781 = 0x3FD3333333333333;
                                    v1783 = xmmword_239F0BFB0;
                                    v1784 = 1;
                                    v1785 = 0x3FEFEF9DB22D0E56;
                                    v1786 = 0x3FF0000000000000;
                                    v1787 = 1;
                                    v1788 = 0x200000000;
                                    v1789 = 5;
                                    v1790 = 1;
                                    v1791 = 0x4010000000000000;
                                    v1792 = 0;
                                    v1793 = 0u;
                                    v1794 = 0;
                                    v1795 = xmmword_239F0BFC0;
                                    v1796 = 1;
                                    v1798 = vdupq_n_s64(0x4049000000000000uLL);
                                    v1799 = xmmword_239F0BFD0;
                                    v1800 = 257;
                                    v1801 = 1;
                                    v1802 = 0x100000032;
                                    v1803 = 2;
                                    v1804 = 0x3FF0000000000000;
                                    v1805 = xmmword_239F0BFE0;
                                    v1806 = xmmword_239F0BFF0;
                                    v1807 = 0x3FE3333333333333;
                                    v1808 = 257;
                                    v1809 = 0x100000032;
                                    v1810 = 0x3FB999999999999ALL;
                                    v1811 = xmmword_239F0C000;
                                    v1812 = 257;
                                    v1813 = 1;
                                    v1814 = 0x40A0000042480000;
                                    v1815 = 256;
                                    v1816 = 8;
                                    v1817 = 10;
                                    v1820 = 0x3EB0C6F7A0B5ED8DLL;
                                    v1821 = xmmword_239F0C010;
                                    v1826 = 0;
                                    v1828 = 0;
                                    v1829 = 33685761;
                                    v1830 = 258;
                                    v1831 = 1;
                                    v1833 = 1;
                                    v1834 = 0;
                                    v1832 = 0;
                                    v1822 = 1;
                                    v1823 = 0x3FD3333333333333;
                                    v1824 = 1;
                                    v1818 = xmmword_239F0C020;
                                    v1819 = _Q0;
                                    v1797 = 0;
                                    if (v1083[2912])
                                    {
                                      v1135 = (__int128 *)(v1083 + 1832);
                                      v1136 = v1633;
                                    }
                                    else
                                    {
                                      v1136 = v1633;
                                      if (!v1083[6192])
                                        goto LABEL_2011;
                                      v1135 = (__int128 *)(v1083 + 5112);
                                    }
                                    sub_239AB643C((uint64_t)v1741, v1135);
LABEL_2011:
                                    v1732[0] = 0;
                                    *(_QWORD *)&v1732[4] = 0x500000000;
                                    v1732[12] = 0;
                                    *(_DWORD *)&v1732[16] = 2;
                                    *(_QWORD *)&v1732[24] = 0x403E000000000000;
                                    LOBYTE(v1733[0]) = 0;
                                    *(_QWORD *)((char *)v1733 + 4) = 1920;
                                    v1137 = operator new(4uLL);
                                    v1734 = v1137;
                                    *v1137 = 0;
                                    v1736 = v1137 + 1;
                                    v1735 = v1137 + 1;
                                    v1737 = 0u;
                                    v1738 = 0u;
                                    v1739 = 0u;
                                    v1740 = qos_class_self();
                                    if (v1083[3048])
                                    {
                                      v1138 = *(_OWORD *)(v1083 + 2936);
                                      *(_OWORD *)v1732 = *(_OWORD *)(v1083 + 2920);
                                      *(_OWORD *)&v1732[16] = v1138;
                                      v1733[0] = *((_QWORD *)v1083 + 369);
                                      LODWORD(v1733[1]) = *((_DWORD *)v1083 + 740);
                                      if (v1732 != v1083 + 2920)
                                      {
                                        sub_23942156C(&v1734, *((char **)v1083 + 371), *((char **)v1083 + 372), (uint64_t)(*((_QWORD *)v1083 + 372) - *((_QWORD *)v1083 + 371)) >> 2);
                                        sub_23942156C(&v1737, *((char **)v1083 + 374), *((char **)v1083 + 375), (uint64_t)(*((_QWORD *)v1083 + 375) - *((_QWORD *)v1083 + 374)) >> 2);
                                        sub_23942156C((_QWORD *)&v1738 + 1, *((char **)v1083 + 377), *((char **)v1083 + 378), (uint64_t)(*((_QWORD *)v1083 + 378) - *((_QWORD *)v1083 + 377)) >> 2);
                                      }
                                      v1139 = (qos_class_t *)(v1083 + 3040);
                                    }
                                    else
                                    {
                                      if (!v1083[6784])
                                      {
LABEL_2020:
                                        sub_239B31B8C((uint64_t)__p, (__int128 *)v1847);
                                        v1141 = v1136 + 3;
                                        sub_239E7437C((uint64_t)(v1136 + 3), v1675, (uint64_t)__src, (uint64_t)v1741, (uint64_t)v1732, (__int128 *)__p);
                                        if (v1731 && *(_QWORD *)&__p[16])
                                        {
                                          *(_QWORD *)&__p[24] = *(_QWORD *)&__p[16];
                                          operator delete(*(void **)&__p[16]);
                                        }
                                        if (!v1718)
                                          goto LABEL_2042;
                                        v1142 = v1136[6];
                                        if (v1718 == v1717)
                                        {
                                          v1729 = v1727;
                                          (*((void (**)(const void **, void **))v1717[0] + 3))(v1717, v1727);
                                          v1143 = v1729;
                                          if (!v1729)
                                            goto LABEL_2030;
                                        }
                                        else
                                        {
                                          v1143 = (void **)(*((uint64_t (**)(void))*v1718 + 2))();
                                          v1729 = v1143;
                                          if (!v1143)
                                            goto LABEL_2030;
                                        }
                                        if (v1143 == v1727)
                                        {
                                          *(_QWORD *)&v1860[24] = v1860;
                                          (*((void (**)(void **, _BYTE *))v1727[0] + 3))(v1727, v1860);
LABEL_2032:
                                          sub_23948AB98(v1860, (_QWORD *)(v1142 + 904));
                                          v1144 = *(_BYTE **)&v1860[24];
                                          if (*(_BYTE **)&v1860[24] == v1860)
                                          {
                                            v1145 = 4;
                                            v1144 = v1860;
                                          }
                                          else
                                          {
                                            if (!*(_QWORD *)&v1860[24])
                                            {
LABEL_2037:
                                              v1146 = v1729;
                                              if (v1729 == v1727)
                                              {
                                                v1147 = 4;
                                                v1146 = v1727;
                                              }
                                              else
                                              {
                                                if (!v1729)
                                                  goto LABEL_2042;
                                                v1147 = 5;
                                              }
                                              (*((void (**)(void))*v1146 + v1147))();
LABEL_2042:
                                              if (!v1716)
                                                goto LABEL_2061;
                                              v1148 = v1136[6];
                                              if (v1716 == v1714)
                                              {
                                                v1726 = &v1723;
                                                (*((void (**)(void **, void **))v1714[0] + 3))(v1714, &v1723);
                                                v1149 = v1726;
                                                if (!v1726)
                                                  goto LABEL_2049;
                                              }
                                              else
                                              {
                                                v1149 = (void **)(*((uint64_t (**)(void))*v1716 + 2))();
                                                v1726 = v1149;
                                                if (!v1149)
                                                  goto LABEL_2049;
                                              }
                                              if (v1149 == &v1723)
                                              {
                                                *(_QWORD *)&v1860[24] = v1860;
                                                (*((void (**)(void **, _BYTE *))v1723 + 3))(&v1723, v1860);
LABEL_2051:
                                                sub_239467AE8(v1860, (_QWORD *)(v1148 + 936));
                                                v1150 = *(_BYTE **)&v1860[24];
                                                if (*(_BYTE **)&v1860[24] == v1860)
                                                {
                                                  v1151 = 4;
                                                  v1150 = v1860;
                                                }
                                                else
                                                {
                                                  if (!*(_QWORD *)&v1860[24])
                                                    goto LABEL_2056;
                                                  v1151 = 5;
                                                }
                                                (*(void (**)(void))(*(_QWORD *)v1150 + 8 * v1151))();
LABEL_2056:
                                                v1152 = v1726;
                                                if (v1726 == &v1723)
                                                {
                                                  v1153 = 4;
                                                  v1152 = &v1723;
                                                }
                                                else
                                                {
                                                  if (!v1726)
                                                    goto LABEL_2061;
                                                  v1153 = 5;
                                                }
                                                (*((void (**)(void))*v1152 + v1153))();
LABEL_2061:
                                                if (!v1713)
                                                  goto LABEL_2080;
                                                v1154 = v1136[6];
                                                if (v1713 == v1712)
                                                {
                                                  v1722 = &v1719;
                                                  (*((void (**)(void **, void **))v1712[0] + 3))(v1712, &v1719);
                                                  v1155 = v1722;
                                                  if (!v1722)
                                                    goto LABEL_2068;
                                                }
                                                else
                                                {
                                                  v1155 = (void **)(*((uint64_t (**)(void))*v1713 + 2))();
                                                  v1722 = v1155;
                                                  if (!v1155)
                                                    goto LABEL_2068;
                                                }
                                                if (v1155 == &v1719)
                                                {
                                                  *(_QWORD *)&v1860[24] = v1860;
                                                  (*((void (**)(void **, _BYTE *))v1719 + 3))(&v1719, v1860);
LABEL_2070:
                                                  sub_239B03E2C(v1860, (_QWORD *)(v1154 + 968));
                                                  v1156 = *(_BYTE **)&v1860[24];
                                                  if (*(_BYTE **)&v1860[24] == v1860)
                                                  {
                                                    v1157 = 4;
                                                    v1156 = v1860;
                                                  }
                                                  else
                                                  {
                                                    if (!*(_QWORD *)&v1860[24])
                                                      goto LABEL_2075;
                                                    v1157 = 5;
                                                  }
                                                  (*(void (**)(void))(*(_QWORD *)v1156 + 8 * v1157))();
LABEL_2075:
                                                  v1158 = v1722;
                                                  if (v1722 == &v1719)
                                                  {
                                                    v1159 = 4;
                                                    v1158 = &v1719;
                                                  }
                                                  else
                                                  {
                                                    if (!v1722)
                                                      goto LABEL_2080;
                                                    v1159 = 5;
                                                  }
                                                  (*((void (**)(void))*v1158 + v1159))();
LABEL_2080:
                                                  v1160 = v1136[6];
                                                  v1161 = *(_QWORD *)(v1160 + 960);
                                                  if (!v1161)
                                                    goto LABEL_2152;
                                                  if (v1161 == v1160 + 936)
                                                  {
                                                    v1859 = &v1857;
                                                    (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v1161 + 24))(v1161, &v1857);
                                                    if (!v1859)
                                                      goto LABEL_2152;
                                                  }
                                                  else
                                                  {
                                                    v1859 = (__int128 *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1161 + 16))(v1161);
                                                    if (!v1859)
                                                      goto LABEL_2152;
                                                  }
                                                  *(_QWORD *)&v1631[32] = v1136 + 3;
                                                  v1162 = (char *)(v1136[7] + 472);
                                                  if (v1162 != v1083)
                                                    sub_23942156C(v1162, *(char **)v1083, *((char **)v1083 + 1), (uint64_t)(*((_QWORD *)v1083 + 1) - *(_QWORD *)v1083) >> 2);
                                                  memset(v1856, 0, sizeof(v1856));
                                                  sub_239433C1C((uint64_t)(v1083 + 88), (uint64_t)v1856, 1);
                                                  v1163 = (uint64_t *)v1856[0];
                                                  v1164 = (uint64_t *)v1856[1];
                                                  if (v1856[0] == v1856[1])
                                                  {
LABEL_2097:
                                                    v1169 = v1633[6];
                                                    v1170 = operator new();
                                                    sub_239A4F3E4(v1170, (uint64_t)(v1083 + 24));
                                                    v1171 = *(_QWORD *)(v1169 + 792);
                                                    *(_QWORD *)(v1169 + 792) = v1170;
                                                    if (v1171)
                                                      sub_239E59AAC(v1171);
                                                    sub_239E583BC((uint64_t)*v1116, (uint64_t *)v1083 + 68);
                                                    v1172 = v1633[7];
                                                    v1173 = operator new(0x1E0uLL);
                                                    v1173[1] = 0;
                                                    v1173[2] = 0;
                                                    *v1173 = &off_250B01540;
                                                    v1174 = sub_239A4E3D8((uint64_t)(v1173 + 3), (uint64_t *)v1083 + 11);
                                                    v1175 = *(std::__shared_weak_count **)(v1172 + 448);
                                                    *(_QWORD *)(v1172 + 440) = v1174;
                                                    *(_QWORD *)(v1172 + 448) = v1173;
                                                    v1176 = v1633;
                                                    if (v1175)
                                                    {
                                                      v1177 = (unint64_t *)&v1175->__shared_owners_;
                                                      do
                                                        v1178 = __ldaxr(v1177);
                                                      while (__stlxr(v1178 - 1, v1177));
                                                      if (!v1178)
                                                      {
                                                        ((void (*)(std::__shared_weak_count *))v1175->__on_zero_shared)(v1175);
                                                        std::__shared_weak_count::__release_weak(v1175);
                                                      }
                                                    }
                                                    if (v1083[1256])
                                                    {
                                                      *(_QWORD *)&v1631[16] = v1083 + 4440;
                                                      v1179 = (uint64_t)*v1116;
                                                      v1180 = (std::__shared_weak_count *)operator new(0x118uLL);
                                                      v1180->__shared_owners_ = 0;
                                                      v1181 = (unint64_t *)&v1180->__shared_owners_;
                                                      v1180->__shared_weak_owners_ = 0;
                                                      v1180->__vftable = (std::__shared_weak_count_vtbl *)&off_250B01578;
                                                      v1182 = *(std::__shared_count *)(v1083 + 1000);
                                                      v1183 = *(_OWORD *)(v1083 + 1016);
                                                      v1184 = *(_OWORD *)(v1083 + 1032);
                                                      v1180[3].std::__shared_count = *(std::__shared_count *)(v1083 + 1048);
                                                      *(_OWORD *)&v1180[2].__shared_owners_ = v1184;
                                                      *(_OWORD *)&v1180[1].__shared_weak_owners_ = v1183;
                                                      v1180[1].std::__shared_count = v1182;
                                                      v1185 = *(_OWORD *)(v1083 + 1064);
                                                      v1186 = *(_OWORD *)(v1083 + 1080);
                                                      v1187 = *(std::__shared_count *)(v1083 + 1096);
                                                      *(_OWORD *)&v1180[5].__shared_weak_owners_ = *(_OWORD *)(v1083 + 1112);
                                                      v1180[5].std::__shared_count = v1187;
                                                      *(_OWORD *)&v1180[4].__shared_owners_ = v1186;
                                                      *(_OWORD *)&v1180[3].__shared_weak_owners_ = v1185;
                                                      v1188 = *(_OWORD *)(v1083 + 1224);
                                                      v1189 = *(std::__shared_count *)(v1083 + 1240);
                                                      v1190 = *(_OWORD *)(v1083 + 1208);
                                                      v1180[9].std::__shared_count = *(std::__shared_count *)(v1083 + 1192);
                                                      v1180[11].std::__shared_count = v1189;
                                                      *(_OWORD *)&v1180[10].__shared_owners_ = v1188;
                                                      *(_OWORD *)&v1180[9].__shared_weak_owners_ = v1190;
                                                      v1191 = *(_OWORD *)(v1083 + 1128);
                                                      v1192 = *(std::__shared_count *)(v1083 + 1144);
                                                      v1193 = *(_OWORD *)(v1083 + 1160);
                                                      *(_OWORD *)&v1180[8].__shared_owners_ = *(_OWORD *)(v1083 + 1176);
                                                      *(_OWORD *)&v1180[7].__shared_weak_owners_ = v1193;
                                                      v1180[7].std::__shared_count = v1192;
                                                      *(_OWORD *)&v1180[6].__shared_owners_ = v1191;
                                                      v1194 = (pthread_mutex_t *)(v1179 + 384);
                                                      sub_2397A1694((pthread_mutex_t *)(v1179 + 384));
                                                      v1195 = (char *)operator new(0x118uLL);
                                                      v1196 = *(_OWORD *)&v1180[4].__shared_owners_;
                                                      *(_OWORD *)(v1195 + 88) = *(_OWORD *)&v1180[3].__shared_weak_owners_;
                                                      *(_OWORD *)(v1195 + 104) = v1196;
                                                      v1197 = *(_OWORD *)&v1180[5].__shared_weak_owners_;
                                                      *(std::__shared_count *)(v1195 + 120) = v1180[5].std::__shared_count;
                                                      *(_OWORD *)(v1195 + 136) = v1197;
                                                      v1198 = *(_OWORD *)&v1180[1].__shared_weak_owners_;
                                                      *(std::__shared_count *)(v1195 + 24) = v1180[1].std::__shared_count;
                                                      *(_OWORD *)(v1195 + 40) = v1198;
                                                      v1199 = v1180[3].std::__shared_count;
                                                      *(_OWORD *)(v1195 + 56) = *(_OWORD *)&v1180[2].__shared_owners_;
                                                      *(std::__shared_count *)(v1195 + 72) = v1199;
                                                      v1200 = *(_OWORD *)&v1180[10].__shared_owners_;
                                                      *(std::__shared_count *)(v1195 + 264) = v1180[11].std::__shared_count;
                                                      *(_OWORD *)(v1195 + 248) = v1200;
                                                      v1201 = v1180[9].std::__shared_count;
                                                      *(_OWORD *)(v1195 + 232) = *(_OWORD *)&v1180[9].__shared_weak_owners_;
                                                      *(std::__shared_count *)(v1195 + 216) = v1201;
                                                      v1202 = *(_OWORD *)&v1180[7].__shared_weak_owners_;
                                                      *(_OWORD *)(v1195 + 200) = *(_OWORD *)&v1180[8].__shared_owners_;
                                                      *(_OWORD *)(v1195 + 184) = v1202;
                                                      v1203 = *(_OWORD *)&v1180[6].__shared_owners_;
                                                      *(std::__shared_count *)(v1195 + 168) = v1180[7].std::__shared_count;
                                                      *((_QWORD *)v1195 + 1) = 0;
                                                      *((_QWORD *)v1195 + 2) = 0;
                                                      *(_QWORD *)v1195 = &off_250B01578;
                                                      *(_OWORD *)(v1195 + 152) = v1203;
                                                      *(_QWORD *)(v1179 + 1040) = v1195 + 24;
                                                      v1204 = *(std::__shared_weak_count **)(v1179 + 1048);
                                                      *(_QWORD *)(v1179 + 1048) = v1195;
                                                      v1124 = *(_BYTE **)&v1631[16];
                                                      if (v1204)
                                                      {
                                                        v1205 = (unint64_t *)&v1204->__shared_owners_;
                                                        do
                                                          v1206 = __ldaxr(v1205);
                                                        while (__stlxr(v1206 - 1, v1205));
                                                        if (!v1206)
                                                        {
                                                          ((void (*)(std::__shared_weak_count *))v1204->__on_zero_shared)(v1204);
                                                          std::__shared_weak_count::__release_weak(v1204);
                                                        }
                                                      }
                                                      sub_2397A16B4(v1194);
                                                      do
                                                        v1207 = __ldaxr(v1181);
                                                      while (__stlxr(v1207 - 1, v1181));
                                                      v1176 = v1633;
                                                      if (!v1207)
                                                      {
                                                        ((void (*)(std::__shared_weak_count *))v1180->__on_zero_shared)(v1180);
                                                        std::__shared_weak_count::__release_weak(v1180);
                                                      }
                                                    }
                                                    sub_239E4B3D0(v1176[7]);
                                                    if (v1083[3520])
                                                    {
                                                      v1208 = operator new();
                                                      sub_239A5E664(v1208, (uint64_t)(v1083 + 3056));
                                                      v1209 = v1633[6];
                                                      v1210 = *(_QWORD *)(v1209 + 432);
                                                      *(_QWORD *)(v1209 + 432) = v1208;
                                                      if (v1210)
                                                      {
                                                        v1211 = sub_239A61848(v1210);
                                                        MEMORY[0x23B83E31C](v1211, 0x10B2C40292A2862);
                                                      }
                                                    }
                                                    if (v1083[3720])
                                                    {
                                                      v1212 = operator new();
                                                      v1213 = v919;
                                                      v1214 = *(_OWORD *)(v1083 + 3528);
                                                      v1215 = *(_OWORD *)(v1083 + 3544);
                                                      *(_DWORD *)(v1212 + 32) = *((_DWORD *)v1083 + 890);
                                                      *(_OWORD *)v1212 = v1214;
                                                      *(_OWORD *)(v1212 + 16) = v1215;
                                                      *(_QWORD *)(v1212 + 48) = 0;
                                                      *(_QWORD *)(v1212 + 40) = v1212 + 48;
                                                      *(_QWORD *)(v1212 + 56) = 0;
                                                      sub_239A634AC((uint64_t *)(v1212 + 40), *((_QWORD **)v1083 + 446), (_QWORD *)v1083 + 447);
                                                      v1216 = *(_OWORD *)(v1083 + 3592);
                                                      v1217 = *(_OWORD *)(v1083 + 3608);
                                                      v1218 = *((_DWORD *)v1083 + 906);
                                                      *(_QWORD *)(v1212 + 104) = 0;
                                                      *(_DWORD *)(v1212 + 96) = v1218;
                                                      *(_OWORD *)(v1212 + 80) = v1217;
                                                      *(_OWORD *)(v1212 + 64) = v1216;
                                                      *(_QWORD *)(v1212 + 112) = 0;
                                                      *(_QWORD *)(v1212 + 120) = 0;
                                                      v1219 = (_BYTE *)*((_QWORD *)v1083 + 454);
                                                      v1220 = (_BYTE *)*((_QWORD *)v1083 + 455);
                                                      v1221 = v1220 - v1219;
                                                      if (v1220 != v1219)
                                                      {
                                                        if (v1221 < 0)
                                                          sub_2394189F8();
                                                        v1222 = (char *)operator new(v1220 - v1219);
                                                        *(_QWORD *)(v1212 + 104) = v1222;
                                                        *(_QWORD *)(v1212 + 112) = v1222;
                                                        v1223 = &v1222[4 * (v1221 >> 2)];
                                                        *(_QWORD *)(v1212 + 120) = v1223;
                                                        memcpy(v1222, v1219, v1221);
                                                        *(_QWORD *)(v1212 + 112) = v1223;
                                                      }
                                                      *(_BYTE *)(v1212 + 128) = v1083[3656];
                                                      v1224 = *((_OWORD *)v1083 + 229);
                                                      v1225 = *((_OWORD *)v1083 + 230);
                                                      v1226 = *((_OWORD *)v1083 + 231);
                                                      *(_QWORD *)(v1212 + 184) = *((_QWORD *)v1083 + 464);
                                                      *(_OWORD *)(v1212 + 168) = v1226;
                                                      *(_OWORD *)(v1212 + 152) = v1225;
                                                      *(_OWORD *)(v1212 + 136) = v1224;
                                                      v1227 = v1633[6];
                                                      v1228 = *(_QWORD *)(v1227 + 440);
                                                      *(_QWORD *)(v1227 + 440) = v1212;
                                                      LOBYTE(v919) = v1213;
                                                      if (v1228)
                                                      {
                                                        v1229 = *(void **)(v1228 + 104);
                                                        if (v1229)
                                                        {
                                                          *(_QWORD *)(v1228 + 112) = v1229;
                                                          operator delete(v1229);
                                                        }
                                                        sub_239421038(v1228 + 40, *(_QWORD **)(v1228 + 48));
                                                        MEMORY[0x23B83E31C](v1228, 0x10A0C40D394526DLL);
                                                      }
                                                    }
                                                    v834 = v1637;
                                                    v1141 = *(_QWORD **)&v1631[32];
                                                    if (*v1124)
                                                    {
                                                      v1230 = operator new();
                                                      sub_239A5EC2C(v1230, (__int128 *)v1083 + 233);
                                                      v1231 = v1633[6];
                                                      v1232 = *(_QWORD *)(v1231 + 448);
                                                      *(_QWORD *)(v1231 + 448) = v1230;
                                                      if (v1232)
                                                      {
                                                        v1233 = sub_239A6177C(v1232);
                                                        MEMORY[0x23B83E31C](v1233, 0x10B2C40EE0C7B13);
                                                      }
                                                    }
                                                    v1234 = (task_name_t *)MEMORY[0x24BDAEC58];
                                                    if (v1124[1752])
                                                    {
                                                      v1235 = operator new();
                                                      sub_239A5F6A8(v1235, (__int128 *)v1083 + 278);
                                                      v1236 = v1633[7];
                                                      v1237 = *(_QWORD *)(v1236 + 416);
                                                      *(_QWORD *)(v1236 + 416) = v1235;
                                                      if (v1237)
                                                      {
                                                        v1238 = sub_239A615DC(v1237);
                                                        MEMORY[0x23B83E31C](v1238, 0x10B2C4067F71861);
                                                      }
                                                      v1239 = *(_QWORD *)(v1633[7] + 416);
                                                      *(std::chrono::system_clock::time_point *)(v1239 + 592) = std::chrono::system_clock::now();
                                                      task_info_outCnt[0] = 93;
                                                      if (!task_info(*v1234, 0x16u, (task_info_t)v1860, task_info_outCnt))*(float *)(v1239 + 620) = (float)((float)v1863 * 0.00097656)* 0.00097656;
                                                      *(_BYTE *)(v1239 + 656) = 1;
                                                      v834 = v1637;
                                                      v1141 = *(_QWORD **)&v1631[32];
                                                    }
                                                    if (v1124[2344])
                                                    {
                                                      v1240 = (uint64_t)*v1116;
                                                      v1241 = *v1116 + 7;
                                                      sub_2397A1694(v1241);
                                                      v1242 = *(_QWORD *)(v1240 + 1008);
                                                      if (v1242)
                                                      {
                                                        sub_239AA8158(v1242, (__int128 *)(v1083 + 6200));
                                                      }
                                                      else
                                                      {
                                                        v1614 = operator new(0x260uLL);
                                                        v1614[1] = 0;
                                                        v1614[2] = 0;
                                                        *v1614 = &off_250B00CF8;
                                                        *(_QWORD *)(v1240 + 1008) = sub_239A5FE90((uint64_t)(v1614 + 3), (__int128 *)(v1083 + 6200));
                                                        v1615 = *(std::__shared_weak_count **)(v1240 + 1016);
                                                        *(_QWORD *)(v1240 + 1016) = v1614;
                                                        if (v1615)
                                                        {
                                                          v1616 = (unint64_t *)&v1615->__shared_owners_;
                                                          do
                                                            v1617 = __ldaxr(v1616);
                                                          while (__stlxr(v1617 - 1, v1616));
                                                          if (!v1617)
                                                          {
                                                            ((void (*)(std::__shared_weak_count *))v1615->__on_zero_shared)(v1615);
                                                            std::__shared_weak_count::__release_weak(v1615);
                                                          }
                                                        }
                                                      }
                                                      sub_2397A16B4(v1241);
                                                      v1243 = (uint64_t)*v1116;
                                                      v1244 = *v1116 + 7;
                                                      sub_2397A1694(v1244);
                                                      v1245 = *(_QWORD *)(v1243 + 1008);
                                                      *(std::chrono::system_clock::time_point *)(v1245 + 240) = std::chrono::system_clock::now();
                                                      task_info_outCnt[0] = 93;
                                                      if (!task_info(*v1234, 0x16u, (task_info_t)v1860, task_info_outCnt))*(float *)(v1245 + 268) = (float)((float)v1863 * 0.00097656)* 0.00097656;
                                                      *(_BYTE *)(v1245 + 304) = 1;
                                                      sub_2397A16B4(v1244);
                                                      v834 = v1637;
                                                      v1141 = *(_QWORD **)&v1631[32];
                                                    }
                                                  }
                                                  else
                                                  {
                                                    v834 = v1637;
                                                    while (1)
                                                    {
                                                      v1165 = *v1163;
                                                      *(_QWORD *)task_info_outCnt = *v1163;
                                                      if (!v1859)
                                                        sub_2394172E0();
                                                      (*(void (**)(_BYTE *__return_ptr, __int128 *, mach_msg_type_number_t *))(*(_QWORD *)v1859 + 48))(v1860, v1859, task_info_outCnt);
                                                      if (!*(_QWORD *)v1860)
                                                        break;
                                                      sub_239E56EA0(*v1116, v1165, (uint64_t *)v1860);
                                                      v1166 = *(std::__shared_weak_count **)&v1860[8];
                                                      if (*(_QWORD *)&v1860[8])
                                                      {
                                                        v1167 = (unint64_t *)(*(_QWORD *)&v1860[8] + 8);
                                                        do
                                                          v1168 = __ldaxr(v1167);
                                                        while (__stlxr(v1168 - 1, v1167));
                                                        if (!v1168)
                                                        {
                                                          ((void (*)(std::__shared_weak_count *))v1166->__on_zero_shared)(v1166);
                                                          std::__shared_weak_count::__release_weak(v1166);
                                                        }
                                                      }
                                                      if (++v1163 == v1164)
                                                        goto LABEL_2097;
                                                    }
                                                    v1246 = *(std::__shared_weak_count **)&v1860[8];
                                                    v1141 = *(_QWORD **)&v1631[32];
                                                    if (*(_QWORD *)&v1860[8])
                                                    {
                                                      v1247 = (unint64_t *)(*(_QWORD *)&v1860[8] + 8);
                                                      do
                                                        v1248 = __ldaxr(v1247);
                                                      while (__stlxr(v1248 - 1, v1247));
                                                      if (!v1248)
                                                      {
                                                        ((void (*)(std::__shared_weak_count *))v1246->__on_zero_shared)(v1246);
                                                        std::__shared_weak_count::__release_weak(v1246);
                                                      }
                                                    }
                                                  }
                                                  if (v1856[0])
                                                  {
                                                    v1856[1] = v1856[0];
                                                    operator delete(v1856[0]);
                                                  }
                                                  v1249 = v1859;
                                                  v1136 = v1633;
                                                  if (v1859 == &v1857)
                                                  {
                                                    v1250 = 4;
                                                    v1249 = &v1857;
                                                  }
                                                  else
                                                  {
                                                    if (!v1859)
                                                      goto LABEL_2152;
                                                    v1250 = 5;
                                                  }
                                                  (*(void (**)(void))(*(_QWORD *)v1249 + 8 * v1250))();
LABEL_2152:
                                                  if (*((_QWORD *)&v1738 + 1))
                                                  {
                                                    *(_QWORD *)&v1739 = *((_QWORD *)&v1738 + 1);
                                                    operator delete(*((void **)&v1738 + 1));
                                                  }
                                                  if ((_QWORD)v1737)
                                                  {
                                                    *((_QWORD *)&v1737 + 1) = v1737;
                                                    operator delete((void *)v1737);
                                                  }
                                                  if (v1734)
                                                  {
                                                    v1735 = v1734;
                                                    operator delete(v1734);
                                                  }
                                                  v1251 = v1828;
                                                  if (v1828 == v1827)
                                                  {
                                                    v1252 = 4;
                                                    v1251 = v1827;
                                                  }
                                                  else
                                                  {
                                                    if (!v1828)
                                                      goto LABEL_2163;
                                                    v1252 = 5;
                                                  }
                                                  (*(void (**)(void))(*v1251 + 8 * v1252))();
LABEL_2163:
                                                  v1253 = v1826;
                                                  if (v1826 == v1825)
                                                  {
                                                    v1254 = 4;
                                                    v1253 = v1825;
                                                  }
                                                  else
                                                  {
                                                    if (!v1826)
                                                      goto LABEL_2168;
                                                    v1254 = 5;
                                                  }
                                                  (*(void (**)(void))(*v1253 + 8 * v1254))();
LABEL_2168:
                                                  if ((_QWORD)v1793)
                                                  {
                                                    *((_QWORD *)&v1793 + 1) = v1793;
                                                    operator delete((void *)v1793);
                                                  }
                                                  if (SBYTE7(v1771) < 0)
                                                    operator delete(v1770[0]);
                                                  v1255 = v1761;
                                                  if (v1761 == v1760)
                                                  {
                                                    v1256 = 4;
                                                    v1255 = v1760;
                                                  }
                                                  else
                                                  {
                                                    if (!v1761)
                                                      goto LABEL_2177;
                                                    v1256 = 5;
                                                  }
                                                  (*(void (**)(void))(*v1255 + 8 * v1256))();
LABEL_2177:
                                                  v1257 = v1759;
                                                  if (v1759 == v1758)
                                                  {
                                                    v1258 = 4;
                                                    v1257 = v1758;
                                                  }
                                                  else
                                                  {
                                                    if (!v1759)
                                                      goto LABEL_2182;
                                                    v1258 = 5;
                                                  }
                                                  (*(void (**)(void))(*v1257 + 8 * v1258))();
LABEL_2182:
                                                  if (SHIBYTE(v1836) < 0)
                                                    operator delete(*(void **)&__src[56]);
                                                  if (*(_QWORD *)&__src[32])
                                                  {
                                                    *(_QWORD *)&__src[40] = *(_QWORD *)&__src[32];
                                                    operator delete(*(void **)&__src[32]);
                                                  }
                                                  if (v1855 && *(_QWORD *)&v1847[16])
                                                  {
                                                    *(_QWORD *)&v1847[24] = *(_QWORD *)&v1847[16];
                                                    operator delete(*(void **)&v1847[16]);
                                                  }
                                                  v1259 = v1713;
                                                  if (v1713 == v1712)
                                                  {
                                                    v1260 = 4;
                                                    v1259 = v1712;
                                                  }
                                                  else
                                                  {
                                                    if (!v1713)
                                                      goto LABEL_2194;
                                                    v1260 = 5;
                                                  }
                                                  (*((void (**)(void))*v1259 + v1260))();
LABEL_2194:
                                                  v1261 = v1716;
                                                  if (v1716 == v1714)
                                                  {
                                                    v1262 = 4;
                                                    v1261 = v1714;
                                                  }
                                                  else
                                                  {
                                                    if (!v1716)
                                                      goto LABEL_2199;
                                                    v1262 = 5;
                                                  }
                                                  (*((void (**)(void))*v1261 + v1262))();
LABEL_2199:
                                                  v1263 = v1718;
                                                  if (v1718 == v1717)
                                                  {
                                                    v1264 = 4;
                                                    v1263 = v1717;
                                                  }
                                                  else
                                                  {
                                                    if (!v1718)
                                                    {
LABEL_2204:
                                                      v1265 = *v1639;
                                                      v1266 = (std::__shared_weak_count *)(*v1639)[23];
                                                      v1265[22] = (uint64_t)v1141;
                                                      v1265[23] = (uint64_t)v1136;
                                                      if (v1266)
                                                      {
                                                        v1267 = (unint64_t *)&v1266->__shared_owners_;
                                                        do
                                                          v1268 = __ldaxr(v1267);
                                                        while (__stlxr(v1268 - 1, v1267));
                                                        if (!v1268)
                                                        {
                                                          ((void (*)(std::__shared_weak_count *))v1266->__on_zero_shared)(v1266);
                                                          std::__shared_weak_count::__release_weak(v1266);
                                                        }
                                                      }
                                                      v1269 = v1679;
                                                      if (v1679 == &v1678)
                                                      {
                                                        v1270 = 4;
                                                        v1269 = &v1678;
                                                      }
                                                      else
                                                      {
                                                        if (!v1679)
                                                          goto LABEL_2214;
                                                        v1270 = 5;
                                                      }
                                                      (*(void (**)(void))(v1269->__r_.__value_.__r.__words[0] + 8 * v1270))();
LABEL_2214:
                                                      v1271 = v1681;
                                                      if (v1681 == v1680)
                                                      {
                                                        v1272 = 4;
                                                        v1271 = v1680;
                                                      }
                                                      else
                                                      {
                                                        if (!v1681)
                                                          goto LABEL_2219;
                                                        v1272 = 5;
                                                      }
                                                      (*(void (**)(void))(*v1271 + 8 * v1272))();
LABEL_2219:
                                                      v1273 = v1683;
                                                      if (v1683 == v1682)
                                                      {
                                                        v1274 = 4;
                                                        v1273 = v1682;
                                                      }
                                                      else
                                                      {
                                                        if (!v1683)
                                                        {
LABEL_2224:
                                                          if (v1641)
                                                          {
                                                            v1275 = &v1641->__shared_owners_;
                                                            do
                                                              v1276 = __ldaxr((unint64_t *)v1275);
                                                            while (__stlxr(v1276 - 1, (unint64_t *)v1275));
                                                            if (!v1276)
                                                            {
                                                              ((void (*)(std::__shared_weak_count *))v1641->__on_zero_shared)(v1641);
                                                              std::__shared_weak_count::__release_weak(v1641);
                                                            }
                                                          }
                                                          goto LABEL_2229;
                                                        }
                                                        v1274 = 5;
                                                      }
                                                      (*(void (**)(void))(*v1273 + 8 * v1274))();
                                                      goto LABEL_2224;
                                                    }
                                                    v1264 = 5;
                                                  }
                                                  (*((void (**)(void))*v1263 + v1264))();
                                                  goto LABEL_2204;
                                                }
                                                v1155 = (void **)(*((uint64_t (**)(void **))*v1155 + 2))(v1155);
LABEL_2068:
                                                *(_QWORD *)&v1860[24] = v1155;
                                                goto LABEL_2070;
                                              }
                                              v1149 = (void **)(*((uint64_t (**)(void **))*v1149 + 2))(v1149);
LABEL_2049:
                                              *(_QWORD *)&v1860[24] = v1149;
                                              goto LABEL_2051;
                                            }
                                            v1145 = 5;
                                          }
                                          (*(void (**)(void))(*(_QWORD *)v1144 + 8 * v1145))();
                                          goto LABEL_2037;
                                        }
                                        v1143 = (void **)(*((uint64_t (**)(void **))*v1143 + 2))(v1143);
LABEL_2030:
                                        *(_QWORD *)&v1860[24] = v1143;
                                        goto LABEL_2032;
                                      }
                                      v1140 = *((_OWORD *)v1083 + 417);
                                      *(_OWORD *)v1732 = *((_OWORD *)v1083 + 416);
                                      *(_OWORD *)&v1732[16] = v1140;
                                      v1733[0] = *((_QWORD *)v1083 + 836);
                                      LODWORD(v1733[1]) = *((_DWORD *)v1083 + 1674);
                                      if (v1732 != v1083 + 6656)
                                      {
                                        sub_23942156C(&v1734, *((char **)v1083 + 838), *((char **)v1083 + 839), (uint64_t)(*((_QWORD *)v1083 + 839) - *((_QWORD *)v1083 + 838)) >> 2);
                                        sub_23942156C(&v1737, *((char **)v1083 + 841), *((char **)v1083 + 842), (uint64_t)(*((_QWORD *)v1083 + 842) - *((_QWORD *)v1083 + 841)) >> 2);
                                        sub_23942156C((_QWORD *)&v1738 + 1, *((char **)v1083 + 844), *((char **)v1083 + 845), (uint64_t)(*((_QWORD *)v1083 + 845) - *((_QWORD *)v1083 + 844)) >> 2);
                                      }
                                      v1139 = (qos_class_t *)(v1083 + 6776);
                                    }
                                    v1740 = *v1139;
                                    goto LABEL_2020;
                                  }
                                  v1115 = (*(uint64_t (**)(void))(v1679->__r_.__value_.__r.__words[0] + 16))();
                                }
                                v1713 = (void **)v1115;
                                goto LABEL_1984;
                              }
                              v1114 = (*(uint64_t (**)(void))(*(_QWORD *)v1681 + 16))();
                            }
                            v1716 = (void **)v1114;
                            goto LABEL_1979;
                          }
                          v1113 = (*(uint64_t (**)(void))(*(_QWORD *)v1683 + 16))();
                        }
                        v1718 = (const void **)v1113;
                        goto LABEL_1974;
                      }
LABEL_2939:
                      v1623 = (std::runtime_error *)__cxa_allocate_exception(0x18uLL);
                      sub_23941A4FC(v1741, "");
                      std::runtime_error::runtime_error(v1623, (const std::string *)v1741);
                      v1623->__vftable = (std::runtime_error_vtbl *)&off_250AF79D0;
                      LODWORD(v1623[1].__vftable) = 2;
                      __cxa_throw(v1623, (struct type_info *)&unk_250AF7A30, (void (*)(void *))std::runtime_error::~runtime_error);
                    }
                    v1107 = (*(uint64_t (**)(void))(**(_QWORD **)&__src[24] + 16))();
                  }
                  *(_QWORD *)&v1860[24] = v1107;
                  goto LABEL_1958;
                }
                v1090 = 5;
              }
              (*(void (**)(void))(*v1089 + 8 * v1090))();
              goto LABEL_1924;
            }
          }
LABEL_2938:
          v1622 = (std::runtime_error *)__cxa_allocate_exception(0x18uLL);
          sub_23941A4FC(v1741, "");
          std::runtime_error::runtime_error(v1622, (const std::string *)v1741);
          v1622->__vftable = (std::runtime_error_vtbl *)&off_250AF79D0;
          LODWORD(v1622[1].__vftable) = 2;
          __cxa_throw(v1622, (struct type_info *)&unk_250AF7A30, (void (*)(void *))std::runtime_error::~runtime_error);
        }
        kdebug_trace();
        LODWORD(v1633) = v919;
        v922 = (char *)operator new(0x1AA0uLL);
        *((_QWORD *)v922 + 1) = 0;
        v923 = (unint64_t *)(v922 + 8);
        *((_QWORD *)v922 + 2) = 0;
        *(_QWORD *)v922 = &off_250AF5B10;
        bzero(v922 + 24, 0x1A88uLL);
        *((_DWORD *)v922 + 20) = 1065353216;
        *(_OWORD *)(v922 + 88) = 0u;
        *(_OWORD *)(v922 + 104) = 0u;
        *(_OWORD *)(v922 + 120) = 0u;
        *(_OWORD *)(v922 + 136) = 0u;
        *(_OWORD *)(v922 + 152) = 0u;
        *((_QWORD *)v922 + 21) = 0;
        *((_DWORD *)v922 + 44) = 1065353216;
        *(_OWORD *)(v922 + 184) = 0u;
        *(_OWORD *)(v922 + 200) = 0u;
        *((_DWORD *)v922 + 54) = 1065353216;
        *((_OWORD *)v922 + 15) = 0u;
        *((_OWORD *)v922 + 16) = 0u;
        *((_OWORD *)v922 + 17) = 0u;
        *((_QWORD *)v922 + 36) = 0;
        *((_DWORD *)v922 + 74) = 1065353216;
        *((_OWORD *)v922 + 19) = 0u;
        *((_OWORD *)v922 + 20) = 0u;
        *((_DWORD *)v922 + 84) = 1065353216;
        *(_OWORD *)(v922 + 344) = 0u;
        *(_OWORD *)(v922 + 360) = 0u;
        *(_OWORD *)(v922 + 376) = 0u;
        *(_OWORD *)(v922 + 392) = 0u;
        *((_QWORD *)v922 + 51) = 0;
        *((_QWORD *)v922 + 52) = 0x3FF0000000000000;
        *(_OWORD *)(v922 + 424) = 0u;
        *(_OWORD *)(v922 + 440) = 0u;
        *((_QWORD *)v922 + 57) = 0;
        *((_DWORD *)v922 + 140) = -1;
        *(_OWORD *)(v922 + 600) = 0u;
        *(_OWORD *)(v922 + 616) = 0u;
        *(_OWORD *)(v922 + 568) = 0u;
        *(_OWORD *)(v922 + 584) = 0u;
        *((_DWORD *)v922 + 158) = 1065353216;
        *((_OWORD *)v922 + 40) = 0u;
        *((_OWORD *)v922 + 41) = 0u;
        *((_DWORD *)v922 + 168) = 1065353216;
        *((_QWORD *)v922 + 93) = 0;
        *(_OWORD *)(v922 + 712) = 0u;
        *(_OWORD *)(v922 + 728) = 0u;
        *(_OWORD *)(v922 + 696) = 0u;
        *((_DWORD *)v922 + 188) = 1065353216;
        *(_OWORD *)(v922 + 760) = 0u;
        *(_OWORD *)(v922 + 776) = 0u;
        *((_DWORD *)v922 + 198) = 1065353216;
        *((_QWORD *)v922 + 108) = 0;
        *((_OWORD *)v922 + 52) = 0u;
        *((_OWORD *)v922 + 53) = 0u;
        *((_OWORD *)v922 + 50) = 0u;
        *((_OWORD *)v922 + 51) = 0u;
        *((_QWORD *)v922 + 109) = 0x3FF0000000000000;
        *((_QWORD *)v922 + 114) = 0;
        *((_OWORD *)v922 + 55) = 0u;
        *((_OWORD *)v922 + 56) = 0u;
        *((_DWORD *)v922 + 254) = -1;
        v1669 = v922 + 24;
        v1670 = (std::__shared_weak_count *)v922;
        v924 = MEMORY[0x24BEDB838];
        v925 = MEMORY[0x24BEDB838] + 64;
        v926 = &v1741[16];
        v927 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
        v928 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
        v1769 = MEMORY[0x24BEDB838] + 64;
        *(_QWORD *)v1741 = v927;
        *(_QWORD *)&v1741[*(_QWORD *)(v927 - 24)] = v928;
        *(_QWORD *)&v1741[8] = 0;
        v929 = (std::ios_base *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)];
        std::ios_base::init(v929, &v1741[16]);
        v929[1].__vftable = 0;
        v929[1].__fmtflags_ = -1;
        *(_QWORD *)v1741 = v924 + 24;
        v1769 = v925;
        MEMORY[0x23B83DC80](&v1741[16]);
        std::ifstream::open();
        if ((v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24) + 32] & 5) != 0)
        {
          v930 = 0;
LABEL_1894:
          *(_QWORD *)v1741 = *MEMORY[0x24BEDB7E0];
          *(_QWORD *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)] = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 24);
          MEMORY[0x23B83DC8C](v926);
          std::istream::~istream();
          MEMORY[0x23B83E250](&v1769);
          kdebug_trace();
          if (v930)
          {
            do
              v1075 = __ldxr(v923);
            while (__stxr(v1075 + 1, v923));
            v1076 = v1641;
            v1640 = v922 + 24;
            v1641 = (std::__shared_weak_count *)v922;
            LOBYTE(v919) = (_BYTE)v1633;
            if (v1076)
            {
              v1077 = (unint64_t *)&v1076->__shared_owners_;
              do
                v1078 = __ldaxr(v1077);
              while (__stlxr(v1078 - 1, v1077));
              if (!v1078)
              {
                ((void (*)(std::__shared_weak_count *))v1076->__on_zero_shared)(v1076);
                std::__shared_weak_count::__release_weak(v1076);
              }
            }
            v921 = 0;
          }
          else
          {
            v921 = 1;
            LOBYTE(v919) = (_BYTE)v1633;
          }
          v1080 = v1670;
          if (v1670)
          {
            v1081 = (unint64_t *)&v1670->__shared_owners_;
            do
              v1082 = __ldaxr(v1081);
            while (__stlxr(v1082 - 1, v1081));
            if (!v1082)
            {
              ((void (*)(std::__shared_weak_count *))v1080->__on_zero_shared)(v1080);
              std::__shared_weak_count::__release_weak(v1080);
            }
          }
          goto LABEL_1911;
        }
        v1673 = 18;
        strcpy((char *)task_info_outCnt, "CorePhotogrammetry");
        sub_2395AC84C((const void **)task_info_outCnt, v1856);
        sub_239A7D600(&v1678, *(_QWORD **)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24) + 40]);
        v952 = HIBYTE(v1678.__r_.__value_.__r.__words[2]);
        v953 = HIBYTE(v1678.__r_.__value_.__r.__words[2]);
        if ((v1678.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v952 = v1678.__r_.__value_.__l.__size_;
        if (!v952)
        {
          v930 = 0;
LABEL_1886:
          if (v953 < 0)
            operator delete(v1678.__r_.__value_.__l.__data_);
          if (v1856[0])
          {
            v1856[1] = v1856[0];
            operator delete(v1856[0]);
          }
          if (v1673 < 0)
            operator delete(*(void **)task_info_outCnt);
          if (!std::filebuf::close())
            std::ios_base::clear((std::ios_base *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)], *(_DWORD *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24) + 32] | 4);
          goto LABEL_1894;
        }
        sub_2395AC2E8((const void **)&v1678.__r_.__value_.__l.__data_, (uint64_t)v1856, (uint64_t)__p);
        v930 = __p[24] != 0;
        if (!__p[24])
        {
LABEL_1885:
          v953 = HIBYTE(v1678.__r_.__value_.__r.__words[2]);
          goto LABEL_1886;
        }
        sub_2394988CC((uint64_t)v1860);
        *(_QWORD *)&v1631[32] = &v1741[16];
        if (__p[23] >= 0)
          v954 = __p;
        else
          v954 = *(_BYTE **)__p;
        if (__p[23] >= 0)
          v955 = __p[23];
        else
          v955 = *(_QWORD *)&__p[8];
        sub_239458500(&v1860[16], (uint64_t)v954, v955);
        sub_2396157EC((uint64_t)v1847, 1);
        memset(__src, 0, sizeof(__src));
        *(_QWORD *)&v1836 = 0;
        *((_QWORD *)&v1836 + 1) = 0x3FF0000000000000;
        v1837 = 0u;
        memset(v1838, 0, 24);
        v1710 = 0xE1914220D1C107DLL;
        v1711 = 0;
        v956 = sub_239513718((char *)&v1710);
        v957 = strlen(v956);
        if (v957 > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        v958 = v957;
        if (v957 >= 0x17)
        {
          v986 = (v957 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v957 | 7) != 0x17)
            v986 = v957 | 7;
          v987 = v986 + 1;
          v959 = operator new(v986 + 1);
          *(_QWORD *)&v1732[16] = v987 | 0x8000000000000000;
          *(_QWORD *)v1732 = v959;
          *(_QWORD *)&v1732[8] = v958;
        }
        else
        {
          v1732[23] = v957;
          v959 = v1732;
          if (!v957)
          {
LABEL_1765:
            v959[v958] = 0;
            v988 = (_QWORD *)operator new();
            *v988 = &off_250ADF7B0;
            v988[1] = v922 + 24;
            sub_23961580C((uint64_t)v1847, (uint64_t)v1732, (uint64_t)v988);
            v1707 = 0xA053911030F1066;
            v1709 = 20;
            v1708 = 51516691;
            sub_23971A32C((uint64_t)&v1707, v989);
            v991 = v990;
            v992 = strlen(v990);
            if (v992 > 0x7FFFFFFFFFFFFFF7)
              sub_23941A5AC();
            v993 = (void *)v992;
            if (v992 >= 0x17)
            {
              v995 = (v992 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v992 | 7) != 0x17)
                v995 = v992 | 7;
              v996 = v995 + 1;
              v994 = operator new(v995 + 1);
              *(_QWORD *)&v1676 = v996 | 0x8000000000000000;
              v1675[0] = v994;
              v1675[1] = v993;
            }
            else
            {
              BYTE7(v1676) = v992;
              v994 = v1675;
              if (!v992)
              {
LABEL_1773:
                *((_BYTE *)v993 + (_QWORD)v994) = 0;
                v997 = (_QWORD *)operator new();
                *v997 = &off_250AE0520;
                v997[1] = v922 + 48;
                sub_23961580C((uint64_t)v1847, (uint64_t)v1675, (uint64_t)v997);
                strcpy(v1706, "(AEIOMwOZIX@");
                v998 = sub_239510ECC((uint64_t)v1706);
                v999 = strlen(v998);
                if (v999 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                v1000 = v999;
                if (v999 >= 0x17)
                {
                  v1002 = (v999 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v999 | 7) != 0x17)
                    v1002 = v999 | 7;
                  v1003 = v1002 + 1;
                  v1001 = (__int128 *)operator new(v1002 + 1);
                  v1858 = v1003 | 0x8000000000000000;
                  *(_QWORD *)&v1857 = v1001;
                  *((_QWORD *)&v1857 + 1) = v1000;
                }
                else
                {
                  HIBYTE(v1858) = v999;
                  v1001 = &v1857;
                  if (!v999)
                  {
LABEL_1781:
                    *((_BYTE *)v1001 + v1000) = 0;
                    v1004 = (_QWORD *)operator new();
                    *v1004 = &off_250AF33E0;
                    v1004[1] = __src;
                    sub_23961580C((uint64_t)v1847, (uint64_t)&v1857, (uint64_t)v1004);
                    strcpy(v1674, "W4#:");
                    v1005 = sub_239AA618C(v1674);
                    v1006 = strlen(v1005);
                    if (v1006 > 0x7FFFFFFFFFFFFFF7)
                      sub_23941A5AC();
                    v1007 = (void *)v1006;
                    if (v1006 >= 0x17)
                    {
                      v1009 = (v1006 & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v1006 | 7) != 0x17)
                        v1009 = v1006 | 7;
                      v1010 = v1009 + 1;
                      v1008 = operator new(v1009 + 1);
                      v1728 = v1010 | 0x8000000000000000;
                      v1727[0] = v1008;
                      v1727[1] = v1007;
                    }
                    else
                    {
                      HIBYTE(v1728) = v1006;
                      v1008 = v1727;
                      if (!v1006)
                      {
LABEL_1789:
                        *((_BYTE *)v1007 + (_QWORD)v1008) = 0;
                        v1011 = (_QWORD *)operator new();
                        *v1011 = &off_250ADFE90;
                        v1011[1] = v922 + 112;
                        sub_23961580C((uint64_t)v1847, (uint64_t)v1727, (uint64_t)v1011);
                        v1704 = 0x734F627F79626010;
                        strcpy(v1705, "d}");
                        v1012 = (const char *)sub_23958E518((uint64_t)&v1704);
                        v1013 = strlen(v1012);
                        if (v1013 > 0x7FFFFFFFFFFFFFF7)
                          sub_23941A5AC();
                        v1014 = v1013;
                        if (v1013 >= 0x17)
                        {
                          v1016 = (v1013 & 0xFFFFFFFFFFFFFFF8) + 8;
                          if ((v1013 | 7) != 0x17)
                            v1016 = v1013 | 7;
                          v1017 = v1016 + 1;
                          v1015 = operator new(v1016 + 1);
                          v1725 = v1017 | 0x8000000000000000;
                          v1723 = v1015;
                          v1724 = v1014;
                        }
                        else
                        {
                          HIBYTE(v1725) = v1013;
                          v1015 = &v1723;
                          if (!v1013)
                          {
LABEL_1797:
                            *((_BYTE *)v1015 + v1014) = 0;
                            v1018 = (_QWORD *)operator new();
                            *v1018 = &off_250ADFE90;
                            v1018[1] = v922 + 568;
                            sub_23961580C((uint64_t)v1847, (uint64_t)&v1723, (uint64_t)v1018);
                            strcpy(v1703, ":JHSUHeXXUB");
                            v1019 = sub_23958E4C8((uint64_t)v1703);
                            v1020 = strlen(v1019);
                            if (v1020 > 0x7FFFFFFFFFFFFFF7)
                              sub_23941A5AC();
                            v1021 = v1020;
                            if (v1020 >= 0x17)
                            {
                              v1023 = (v1020 & 0xFFFFFFFFFFFFFFF8) + 8;
                              if ((v1020 | 7) != 0x17)
                                v1023 = v1020 | 7;
                              v1024 = v1023 + 1;
                              v1022 = operator new(v1023 + 1);
                              v1721 = v1024 | 0x8000000000000000;
                              v1719 = v1022;
                              v1720 = v1021;
                            }
                            else
                            {
                              HIBYTE(v1721) = v1020;
                              v1022 = &v1719;
                              if (!v1020)
                              {
LABEL_1805:
                                *((_BYTE *)v1022 + v1021) = 0;
                                v1025 = (_QWORD *)operator new();
                                *v1025 = &off_250AF34A0;
                                v1025[1] = v922 + 1024;
                                sub_23961580C((uint64_t)v1847, (uint64_t)&v1719, (uint64_t)v1025);
                                v1701 = 0x7F54524F50455220;
                                strcpy(v1702, "OBJSEG");
                                sub_23958E5E0((uint64_t)&v1701);
                                v1027 = v1026;
                                v1028 = strlen(v1026);
                                if (v1028 > 0x7FFFFFFFFFFFFFF7)
                                  sub_23941A5AC();
                                v1029 = (const void *)v1028;
                                if (v1028 >= 0x17)
                                {
                                  v1031 = (v1028 & 0xFFFFFFFFFFFFFFF8) + 8;
                                  if ((v1028 | 7) != 0x17)
                                    v1031 = v1028 | 7;
                                  v1032 = v1031 + 1;
                                  v1030 = (const void **)operator new(v1031 + 1);
                                  v1717[2] = (const void *)(v1032 | 0x8000000000000000);
                                  v1717[0] = v1030;
                                  v1717[1] = v1029;
                                }
                                else
                                {
                                  HIBYTE(v1717[2]) = v1028;
                                  v1030 = v1717;
                                  if (!v1028)
                                  {
LABEL_1813:
                                    *((_BYTE *)v1029 + (_QWORD)v1030) = 0;
                                    v1033 = (_QWORD *)operator new();
                                    *v1033 = &off_250AF34D0;
                                    v1033[1] = v922 + 3080;
                                    sub_23961580C((uint64_t)v1847, (uint64_t)v1717, (uint64_t)v1033);
                                    v1700 = xmmword_239F0C1A0;
                                    sub_23950F8E4((uint64_t)&v1700);
                                    v1035 = v1034;
                                    v1036 = strlen(v1034);
                                    if (v1036 > 0x7FFFFFFFFFFFFFF7)
                                      sub_23941A5AC();
                                    v1037 = (void *)v1036;
                                    if (v1036 >= 0x17)
                                    {
                                      v1039 = (v1036 & 0xFFFFFFFFFFFFFFF8) + 8;
                                      if ((v1036 | 7) != 0x17)
                                        v1039 = v1036 | 7;
                                      v1040 = v1039 + 1;
                                      v1038 = operator new(v1039 + 1);
                                      v1715 = v1040 | 0x8000000000000000;
                                      v1714[0] = v1038;
                                      v1714[1] = v1037;
                                    }
                                    else
                                    {
                                      HIBYTE(v1715) = v1036;
                                      v1038 = v1714;
                                      if (!v1036)
                                      {
LABEL_1821:
                                        *((_BYTE *)v1037 + (_QWORD)v1038) = 0;
                                        v1041 = (_QWORD *)operator new();
                                        *v1041 = &off_250AF37A0;
                                        v1041[1] = v922 + 3552;
                                        sub_23961580C((uint64_t)v1847, (uint64_t)v1714, (uint64_t)v1041);
                                        v1698 = xmmword_239F0E625;
                                        v1699 = 0;
                                        sub_2396EFA24((uint64_t)&v1698);
                                        v1043 = v1042;
                                        v1044 = strlen(v1042);
                                        if (v1044 > 0x7FFFFFFFFFFFFFF7)
                                          sub_23941A5AC();
                                        v1045 = (void *)v1044;
                                        if (v1044 >= 0x17)
                                        {
                                          v1047 = (v1044 & 0xFFFFFFFFFFFFFFF8) + 8;
                                          if ((v1044 | 7) != 0x17)
                                            v1047 = v1044 | 7;
                                          v1048 = v1047 + 1;
                                          v1046 = (void **)operator new(v1047 + 1);
                                          v1712[2] = (void *)(v1048 | 0x8000000000000000);
                                          v1712[0] = v1046;
                                          v1712[1] = v1045;
                                        }
                                        else
                                        {
                                          HIBYTE(v1712[2]) = v1044;
                                          v1046 = v1712;
                                          if (!v1044)
                                          {
LABEL_1829:
                                            *((_BYTE *)v1045 + (_QWORD)v1046) = 0;
                                            v1049 = (_QWORD *)operator new();
                                            *v1049 = &off_250AF3890;
                                            v1049[1] = v922 + 3752;
                                            sub_23961580C((uint64_t)v1847, (uint64_t)v1712, (uint64_t)v1049);
                                            strcpy(v1697, "5GPEZGAjFSX");
                                            v1050 = sub_23958E4C8((uint64_t)v1697);
                                            v1051 = strlen(v1050);
                                            if (v1051 > 0x7FFFFFFFFFFFFFF7)
                                              sub_23941A5AC();
                                            v1052 = v1051;
                                            if (v1051 >= 0x17)
                                            {
                                              v1054 = (v1051 & 0xFFFFFFFFFFFFFFF8) + 8;
                                              if ((v1051 | 7) != 0x17)
                                                v1054 = v1051 | 7;
                                              v1055 = v1054 + 1;
                                              v1053 = operator new(v1054 + 1);
                                              *(_QWORD *)&v1682[16] = v1055 | 0x8000000000000000;
                                              *(_QWORD *)v1682 = v1053;
                                              *(_QWORD *)&v1682[8] = v1052;
                                            }
                                            else
                                            {
                                              v1682[23] = v1051;
                                              v1053 = v1682;
                                              if (!v1051)
                                              {
LABEL_1837:
                                                v1053[v1052] = 0;
                                                v1056 = (_QWORD *)operator new();
                                                *v1056 = &off_250AF3CE0;
                                                v1056[1] = v922 + 4472;
                                                sub_23961580C((uint64_t)v1847, (uint64_t)v1682, (uint64_t)v1056);
                                                v1695 = 0x517A7C617E6B7C0ELL;
                                                strcpy(v1696, "}boc");
                                                v1057 = sub_239510ECC((uint64_t)&v1695);
                                                v1058 = strlen(v1057);
                                                if (v1058 > 0x7FFFFFFFFFFFFFF7)
                                                  sub_23941A5AC();
                                                v1059 = v1058;
                                                if (v1058 >= 0x17)
                                                {
                                                  v1061 = (v1058 & 0xFFFFFFFFFFFFFFF8) + 8;
                                                  if ((v1058 | 7) != 0x17)
                                                    v1061 = v1058 | 7;
                                                  v1062 = v1061 + 1;
                                                  v1060 = operator new(v1061 + 1);
                                                  *(_QWORD *)&v1680[16] = v1062 | 0x8000000000000000;
                                                  *(_QWORD *)v1680 = v1060;
                                                  *(_QWORD *)&v1680[8] = v1059;
                                                }
                                                else
                                                {
                                                  v1680[23] = v1058;
                                                  v1060 = v1680;
                                                  if (!v1058)
                                                  {
LABEL_1845:
                                                    v926 = *(_BYTE **)&v1631[32];
                                                    v1060[v1059] = 0;
                                                    v1063 = (_QWORD *)operator new();
                                                    *v1063 = &off_250AF3D10;
                                                    v1063[1] = v922 + 6224;
                                                    sub_23961580C((uint64_t)v1847, (uint64_t)v1680, (uint64_t)v1063);
                                                    if ((v1680[23] & 0x80000000) != 0)
                                                    {
                                                      operator delete(*(void **)v1680);
                                                      if ((v1682[23] & 0x80000000) == 0)
                                                      {
LABEL_1847:
                                                        if ((SHIBYTE(v1712[2]) & 0x80000000) == 0)
                                                          goto LABEL_1848;
                                                        goto LABEL_2897;
                                                      }
                                                    }
                                                    else if ((v1682[23] & 0x80000000) == 0)
                                                    {
                                                      goto LABEL_1847;
                                                    }
                                                    operator delete(*(void **)v1682);
                                                    if ((SHIBYTE(v1712[2]) & 0x80000000) == 0)
                                                    {
LABEL_1848:
                                                      if ((SHIBYTE(v1715) & 0x80000000) == 0)
                                                        goto LABEL_1849;
                                                      goto LABEL_2898;
                                                    }
LABEL_2897:
                                                    operator delete(v1712[0]);
                                                    if ((SHIBYTE(v1715) & 0x80000000) == 0)
                                                    {
LABEL_1849:
                                                      if ((SHIBYTE(v1717[2]) & 0x80000000) == 0)
                                                        goto LABEL_1850;
                                                      goto LABEL_2899;
                                                    }
LABEL_2898:
                                                    operator delete(v1714[0]);
                                                    if ((SHIBYTE(v1717[2]) & 0x80000000) == 0)
                                                    {
LABEL_1850:
                                                      if ((SHIBYTE(v1721) & 0x80000000) == 0)
                                                        goto LABEL_1851;
                                                      goto LABEL_2900;
                                                    }
LABEL_2899:
                                                    operator delete((void *)v1717[0]);
                                                    if ((SHIBYTE(v1721) & 0x80000000) == 0)
                                                    {
LABEL_1851:
                                                      if ((SHIBYTE(v1725) & 0x80000000) == 0)
                                                        goto LABEL_1852;
                                                      goto LABEL_2901;
                                                    }
LABEL_2900:
                                                    operator delete(v1719);
                                                    if ((SHIBYTE(v1725) & 0x80000000) == 0)
                                                    {
LABEL_1852:
                                                      if ((SHIBYTE(v1728) & 0x80000000) == 0)
                                                        goto LABEL_1853;
                                                      goto LABEL_2902;
                                                    }
LABEL_2901:
                                                    operator delete(v1723);
                                                    if ((SHIBYTE(v1728) & 0x80000000) == 0)
                                                    {
LABEL_1853:
                                                      if ((SHIBYTE(v1858) & 0x80000000) == 0)
                                                        goto LABEL_1854;
                                                      goto LABEL_2903;
                                                    }
LABEL_2902:
                                                    operator delete(v1727[0]);
                                                    if ((SHIBYTE(v1858) & 0x80000000) == 0)
                                                    {
LABEL_1854:
                                                      if ((SBYTE7(v1676) & 0x80000000) == 0)
                                                        goto LABEL_1855;
                                                      goto LABEL_2904;
                                                    }
LABEL_2903:
                                                    operator delete((void *)v1857);
                                                    if ((SBYTE7(v1676) & 0x80000000) == 0)
                                                    {
LABEL_1855:
                                                      if ((v1732[23] & 0x80000000) == 0)
                                                      {
LABEL_1856:
                                                        if (sub_23959479C((uint64_t)v1847, (uint64_t *)v1860))sub_239AA61BC((uint64_t)(v922 + 344), (uint64_t *)__src);
                                                        if (*(_QWORD *)&__src[48])
                                                          operator delete(*(void **)&__src[48]);
                                                        if (*(_QWORD *)&__src[24])
                                                        {
                                                          *(_QWORD *)&__src[32] = *(_QWORD *)&__src[24];
                                                          operator delete(*(void **)&__src[24]);
                                                        }
                                                        v1064 = *(_QWORD **)__src;
                                                        if (*(_QWORD *)__src)
                                                        {
                                                          v1065 = *(_QWORD **)&__src[8];
                                                          v1066 = *(void **)__src;
                                                          if (*(_QWORD *)&__src[8] != *(_QWORD *)__src)
                                                          {
                                                            do
                                                            {
                                                              v1067 = (_QWORD *)*(v1065 - 3);
                                                              if (v1067)
                                                              {
                                                                do
                                                                {
                                                                  v1068 = (_QWORD *)*v1067;
                                                                  operator delete(v1067);
                                                                  v1067 = v1068;
                                                                }
                                                                while (v1068);
                                                              }
                                                              v1070 = (void *)*(v1065 - 5);
                                                              v1065 -= 5;
                                                              v1069 = v1070;
                                                              *v1065 = 0;
                                                              if (v1070)
                                                                operator delete(v1069);
                                                            }
                                                            while (v1065 != v1064);
                                                            v1066 = *(void **)__src;
                                                          }
                                                          *(_QWORD *)&__src[8] = v1064;
                                                          operator delete(v1066);
                                                        }
                                                        v1071 = *(_QWORD **)&v1847[16];
                                                        if (*(_QWORD *)&v1847[16])
                                                        {
                                                          do
                                                          {
                                                            v1072 = v1071[5];
                                                            if (v1072)
                                                              (*(void (**)(uint64_t))(*(_QWORD *)v1072 + 8))(v1072);
                                                            v1071 = (_QWORD *)*v1071;
                                                          }
                                                          while (v1071);
                                                          v1073 = *(void ***)&v1847[16];
                                                          if (*(_QWORD *)&v1847[16])
                                                          {
                                                            do
                                                            {
                                                              v1079 = (void **)*v1073;
                                                              if (*((char *)v1073 + 39) < 0)
                                                                operator delete(v1073[2]);
                                                              operator delete(v1073);
                                                              v1073 = v1079;
                                                            }
                                                            while (v1079);
                                                          }
                                                        }
                                                        v1074 = *(void **)v1847;
                                                        *(_QWORD *)v1847 = 0;
                                                        if (v1074)
                                                          operator delete(v1074);
                                                        *(_QWORD *)v1860 = v1629;
                                                        *(_QWORD *)&v1860[*(_QWORD *)(v1629 - 24)] = v1628;
                                                        *(_QWORD *)&v1860[16] = v1630;
                                                        *(_QWORD *)&v1860[24] = MEMORY[0x24BEDB848] + 16;
                                                        if ((v1860[111] & 0x80000000) != 0)
                                                          operator delete(*(void **)&v1860[88]);
                                                        std::streambuf::~streambuf();
                                                        std::iostream::~basic_iostream();
                                                        MEMORY[0x23B83E250](v1862);
                                                        if (__p[24] && (__p[23] & 0x80000000) != 0)
                                                          operator delete(*(void **)__p);
                                                        goto LABEL_1885;
                                                      }
LABEL_2905:
                                                      operator delete(*(void **)v1732);
                                                      goto LABEL_1856;
                                                    }
LABEL_2904:
                                                    operator delete(v1675[0]);
                                                    if ((v1732[23] & 0x80000000) == 0)
                                                      goto LABEL_1856;
                                                    goto LABEL_2905;
                                                  }
                                                }
                                                memmove(v1060, v1057, v1059);
                                                goto LABEL_1845;
                                              }
                                            }
                                            memmove(v1053, v1050, v1052);
                                            goto LABEL_1837;
                                          }
                                        }
                                        memmove(v1046, v1043, (size_t)v1045);
                                        goto LABEL_1829;
                                      }
                                    }
                                    memmove(v1038, v1035, (size_t)v1037);
                                    goto LABEL_1821;
                                  }
                                }
                                memmove(v1030, v1027, (size_t)v1029);
                                goto LABEL_1813;
                              }
                            }
                            memmove(v1022, v1019, v1021);
                            goto LABEL_1805;
                          }
                        }
                        memmove(v1015, v1012, v1014);
                        goto LABEL_1797;
                      }
                    }
                    memmove(v1008, v1005, (size_t)v1007);
                    goto LABEL_1789;
                  }
                }
                memmove(v1001, v998, v1000);
                goto LABEL_1781;
              }
            }
            memmove(v994, v991, (size_t)v993);
            goto LABEL_1773;
          }
        }
        memmove(v959, v956, v958);
        goto LABEL_1765;
      }
    }
    v931 = operator new(0x50uLL);
    v931[1] = 0;
    v931[2] = 0;
    *v931 = &off_250AF99A0;
    sub_239B31970((uint64_t)(v931 + 3), (_OWORD *)(v852 + 72), v852 + 120, v852 + 456, v852 + 1536, (__int128 *)&__dst);
    v938 = *v1639;
    v939 = (std::__shared_weak_count *)(*v1639)[23];
    v938[22] = (uint64_t)(v931 + 3);
    v938[23] = (uint64_t)v931;
    if (v939)
    {
      v940 = (unint64_t *)&v939->__shared_owners_;
      do
        v941 = __ldaxr(v940);
      while (__stlxr(v941 - 1, v940));
      if (!v941)
      {
        ((void (*)(std::__shared_weak_count *))v939->__on_zero_shared)(v939);
        std::__shared_weak_count::__release_weak(v939);
      }
    }
    if (!sub_239B29F38(v932, v933, v934, v935, v936, v937))
    {
LABEL_2229:
      *(_QWORD *)v1741 = v834;
      sub_2396F295C((uint64_t *)(v834[1] + 248), v834[1] + 8, (uint64_t)&v1741[8]);
      v1741[32] = v919;
      v1277 = *(_OWORD *)v1741;
      *(_QWORD *)__src = *(_QWORD *)&v1741[16];
      *(_QWORD *)&__src[7] = *(_QWORD *)&v1741[23];
      v1278 = v1741[31];
      memset(&v1741[8], 0, 24);
      v1279 = operator new(0x30uLL);
      v1280 = v1632;
      v1281 = (_BYTE *)(v1632 + 1672);
      *v1279 = off_250AF9BD0;
      v1279[1] = v1277;
      v1282 = *(_QWORD *)__src;
      v1279[2] = *((_QWORD *)&v1277 + 1);
      v1279[3] = v1282;
      *(_QWORD *)((char *)v1279 + 31) = *(_QWORD *)&__src[7];
      *((_BYTE *)v1279 + 39) = v1278;
      *((_BYTE *)v1279 + 40) = v919;
      *(_QWORD *)&v1860[24] = v1279;
      if (v1281 == v1860)
      {
        v1284 = 5;
        v834 = v1637;
        v852 = v1280;
        goto LABEL_2237;
      }
      v1283 = *(_BYTE **)(v1280 + 1696);
      v852 = v1280;
      if (v1283 == v1281)
      {
        v1279 = v1860;
        (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)v1281 + 24))(v1281, v1860);
        v834 = v1637;
        (*(void (**)(_QWORD))(**(_QWORD **)(v852 + 1696) + 32))(*(_QWORD *)(v852 + 1696));
        *(_QWORD *)(v852 + 1696) = *(_QWORD *)&v1860[24];
        *(_QWORD *)&v1860[24] = v1860;
      }
      else
      {
        *(_QWORD *)&v1860[24] = *(_QWORD *)(v1280 + 1696);
        *(_QWORD *)(v1280 + 1696) = v1279;
        v1279 = v1860;
        v834 = v1637;
        if (v1283 != v1860)
        {
          if (!v1283)
          {
LABEL_2239:
            if (v1692 && __dst.__r_.__value_.__r.__words[2])
            {
              v1691 = (std::string *)__dst.__r_.__value_.__r.__words[2];
              operator delete((void *)__dst.__r_.__value_.__r.__words[2]);
            }
            goto LABEL_2242;
          }
          v1284 = 5;
          v1279 = v1283;
LABEL_2237:
          (*(void (**)(_QWORD *))(*v1279 + 8 * v1284))(v1279);
          if ((v1741[31] & 0x80000000) != 0)
            operator delete(*(void **)&v1741[8]);
          goto LABEL_2239;
        }
      }
      v1284 = 4;
      goto LABEL_2237;
    }
    v942 = (*v1639)[60];
    *(_QWORD *)v1732 = 1064514355;
    *(_QWORD *)&v1732[8] = v942;
    v1732[16] = 1;
    sub_2396F295C((uint64_t *)(*v1636 + 248), *v1636 + 8, (uint64_t)&v1642);
    v1644 = v1732;
    *(_QWORD *)&__src[24] = 0;
    v943 = (char *)operator new(0x28uLL);
    *(_QWORD *)v943 = off_250AF99D8;
    *(_OWORD *)(v943 + 8) = v1642;
    v944 = v1643;
    v1642 = 0uLL;
    v1643 = 0;
    *((_QWORD *)v943 + 3) = v944;
    *((_QWORD *)v943 + 4) = v1732;
    *(_QWORD *)&__src[24] = v943;
    v945 = (*v1639)[22];
    *(_QWORD *)v1847 = &off_250AF9A20;
    *(_QWORD *)&v1847[8] = v1632;
    *(_QWORD *)&v1847[24] = v1847;
    *(_QWORD *)__p = &off_250AF9A68;
    *(_QWORD *)&__p[8] = v1632;
    *(_QWORD *)&__p[24] = __p;
    v946 = operator new(0x28uLL);
    *v946 = off_250AF99D8;
    v947 = v946 + 1;
    if (v943[31] < 0)
    {
      sub_23941A7F8(v947, *((void **)v943 + 1), *((_QWORD *)v943 + 2));
      v948 = (_BYTE *)*((_QWORD *)v943 + 4);
      v949 = (uint64_t (**)())*v946;
    }
    else
    {
      *(_OWORD *)v947 = *(_OWORD *)(v943 + 8);
      v946[3] = *((_QWORD *)v943 + 3);
      v948 = v1732;
      v949 = off_250AF99D8;
    }
    v946[4] = v948;
    v1689 = v946;
    v950 = *(_QWORD *)(v945 + 24);
    v951 = (_BYTE *)((uint64_t (*)(_QWORD *))v949[2])(v946);
    *(_QWORD *)&v1860[24] = v951;
    if (v951)
    {
      if (v951 == v1860)
      {
        *(_QWORD *)&v1741[24] = v1741;
        (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)v1860 + 24))(v1860, v1741);
LABEL_1691:
        sub_23948AB98(v1741, (_QWORD *)(v950 + 904));
        v960 = *(_QWORD **)&v1741[24];
        if (*(_BYTE **)&v1741[24] == v1741)
        {
          v961 = 4;
          v960 = v1741;
        }
        else
        {
          if (!*(_QWORD *)&v1741[24])
            goto LABEL_1696;
          v961 = 5;
        }
        (*(void (**)(void))(*v960 + 8 * v961))();
LABEL_1696:
        v962 = *(_BYTE **)&v1860[24];
        if (*(_BYTE **)&v1860[24] == v1860)
        {
          v963 = 4;
          v962 = v1860;
        }
        else
        {
          if (!*(_QWORD *)&v1860[24])
            goto LABEL_1701;
          v963 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v962 + 8 * v963))();
LABEL_1701:
        v964 = v1689;
        if (v1689 == v1688)
        {
          v965 = 4;
          v964 = v1688;
        }
        else
        {
          if (!v1689)
            goto LABEL_1706;
          v965 = 5;
        }
        (*(void (**)(void))(*v964 + 8 * v965))();
LABEL_1706:
        v966 = (*v1639)[22];
        v967 = *(_QWORD *)&v1847[24];
        if (*(_QWORD *)&v1847[24])
        {
          if (*(_BYTE **)&v1847[24] == v1847)
          {
            v1687 = v1686;
            (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v1847 + 24))((uint64_t)v1847, v1686);
LABEL_1711:
            sub_239B5FB80(*(_QWORD *)(v966 + 24), v1686);
            v968 = v1687;
            if (v1687 == v1686)
            {
              v969 = 4;
              v968 = v1686;
            }
            else
            {
              if (!v1687)
                goto LABEL_1716;
              v969 = 5;
            }
            (*(void (**)(void))(*v968 + 8 * v969))();
LABEL_1716:
            v970 = (*v1639)[22];
            v971 = *(_QWORD **)&__p[24];
            if (*(_QWORD *)&__p[24])
            {
              if (*(_BYTE **)&__p[24] == __p)
              {
                v1685 = v1684;
                (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)__p + 24))((uint64_t)__p, v1684);
                v971 = v1685;
                v972 = *(_QWORD *)(v970 + 24);
                if (v1685)
                  goto LABEL_1720;
                goto LABEL_1724;
              }
              v971 = (_QWORD *)(*(uint64_t (**)(void))(**(_QWORD **)&__p[24] + 16))();
            }
            v1685 = v971;
            v972 = *(_QWORD *)(v970 + 24);
            if (v971)
            {
LABEL_1720:
              if (v971 == v1684)
              {
                *(_QWORD *)&v1860[24] = v1860;
                (*(void (**)(_QWORD *, _BYTE *))(v1684[0] + 24))(v1684, v1860);
                v971 = *(_QWORD **)&v1860[24];
                v973 = (_QWORD *)(v972 + 968);
                if (!*(_QWORD *)&v1860[24])
                  goto LABEL_1728;
              }
              else
              {
                v971 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v971 + 16))(v971);
                *(_QWORD *)&v1860[24] = v971;
                v973 = (_QWORD *)(v972 + 968);
                if (!v971)
                  goto LABEL_1728;
              }
              if (v971 == (_QWORD *)v1860)
              {
                *(_QWORD *)&v1741[24] = v1741;
                (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)v1860 + 24))(v1860, v1741);
LABEL_1729:
                sub_239B03E2C(v1741, v973);
                v974 = *(_QWORD **)&v1741[24];
                if (*(_BYTE **)&v1741[24] == v1741)
                {
                  v975 = 4;
                  v974 = v1741;
                  v834 = v1637;
                }
                else
                {
                  v834 = v1637;
                  if (!*(_QWORD *)&v1741[24])
                    goto LABEL_1734;
                  v975 = 5;
                }
                (*(void (**)(void))(*v974 + 8 * v975))();
LABEL_1734:
                v976 = *(_BYTE **)&v1860[24];
                if (*(_BYTE **)&v1860[24] == v1860)
                {
                  v977 = 4;
                  v976 = v1860;
                }
                else
                {
                  if (!*(_QWORD *)&v1860[24])
                    goto LABEL_1739;
                  v977 = 5;
                }
                (*(void (**)(void))(*(_QWORD *)v976 + 8 * v977))();
LABEL_1739:
                v978 = v1685;
                if (v1685 == v1684)
                {
                  v979 = 4;
                  v978 = v1684;
                }
                else
                {
                  if (!v1685)
                    goto LABEL_1744;
                  v979 = 5;
                }
                (*(void (**)(void))(*v978 + 8 * v979))();
LABEL_1744:
                v980 = *(_QWORD **)&__p[24];
                if (*(_BYTE **)&__p[24] == __p)
                {
                  v981 = 4;
                  v980 = __p;
                }
                else
                {
                  if (!*(_QWORD *)&__p[24])
                    goto LABEL_1749;
                  v981 = 5;
                }
                (*(void (**)(void))(*v980 + 8 * v981))();
LABEL_1749:
                v982 = *(_QWORD **)&v1847[24];
                if (*(_BYTE **)&v1847[24] == v1847)
                {
                  v983 = 4;
                  v982 = v1847;
                }
                else
                {
                  if (!*(_QWORD *)&v1847[24])
                  {
LABEL_1754:
                    v984 = *(_QWORD **)&__src[24];
                    if (*(_BYTE **)&__src[24] == __src)
                    {
                      v985 = 4;
                      v984 = __src;
                    }
                    else
                    {
                      if (!*(_QWORD *)&__src[24])
                        goto LABEL_2229;
                      v985 = 5;
                    }
                    (*(void (**)(void))(*v984 + 8 * v985))();
                    goto LABEL_2229;
                  }
                  v983 = 5;
                }
                (*(void (**)(void))(*v982 + 8 * v983))();
                goto LABEL_1754;
              }
              v971 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v971 + 16))(v971);
LABEL_1728:
              *(_QWORD *)&v1741[24] = v971;
              goto LABEL_1729;
            }
LABEL_1724:
            *(_QWORD *)&v1860[24] = 0;
            v973 = (_QWORD *)(v972 + 968);
            goto LABEL_1728;
          }
          v967 = (*(uint64_t (**)(void))(**(_QWORD **)&v1847[24] + 16))();
        }
        v1687 = (_QWORD *)v967;
        goto LABEL_1711;
      }
      v951 = (_BYTE *)(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v951 + 16))(v951);
    }
    *(_QWORD *)&v1741[24] = v951;
    goto LABEL_1691;
  }
  if (v903)
  {
    sub_239A444D4((uint64_t)"unknown file", 1176, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v904 = *v1639;
  v905 = (std::__shared_weak_count *)(*v1639)[23];
  v904[22] = 0;
  v904[23] = 0;
  if (v905)
  {
    v906 = (unint64_t *)&v905->__shared_owners_;
    do
      v907 = __ldaxr(v906);
    while (__stlxr(v907 - 1, v906));
    if (!v907)
    {
      ((void (*)(std::__shared_weak_count *))v905->__on_zero_shared)(v905);
      std::__shared_weak_count::__release_weak(v905);
    }
  }
  v908 = *(_QWORD **)(v852 + 1696);
  *(_QWORD *)(v852 + 1696) = 0;
  if (v908 == (_QWORD *)(v852 + 1672))
  {
    v909 = 4;
    v908 = (_QWORD *)(v852 + 1672);
  }
  else
  {
    if (!v908)
      goto LABEL_2242;
    v909 = 5;
  }
  (*(void (**)(void))(*v908 + 8 * v909))();
LABEL_2242:
  v1285 = v1638;
  *(_BYTE *)(v852 + 1664) = *(_BYTE *)(v1638 + 24);
  v1286 = *(_QWORD *)(v1285 + 64);
  *(_DWORD *)(v852 + 80) = v1286;
  *(_DWORD *)(v852 + 120) = v1286;
  *(_QWORD *)(v852 + 464) = v1286;
  if (SHIBYTE(v1646) < 0)
    operator delete(v1645[0]);
  v1288 = (*v1639)[24];
  v1287 = (*v1639)[25];
  if (v1287)
  {
    v1289 = (unint64_t *)(v1287 + 8);
    do
      v1290 = __ldxr(v1289);
    while (__stxr(v1290 + 1, v1289));
  }
  v1291 = *(std::__shared_weak_count **)(v852 + 8);
  *(_QWORD *)v852 = v1288;
  *(_QWORD *)(v852 + 8) = v1287;
  if (v1291)
  {
    v1292 = (unint64_t *)&v1291->__shared_owners_;
    do
      v1293 = __ldaxr(v1292);
    while (__stlxr(v1293 - 1, v1292));
    if (!v1293)
    {
      ((void (*)(std::__shared_weak_count *))v1291->__on_zero_shared)(v1291);
      std::__shared_weak_count::__release_weak(v1291);
    }
  }
  v1294 = *v1639;
  v1295 = (uint64_t *)(*v1639)[54];
  if (!v1295 || (v1296 = *v1295) == 0)
  {
    v1296 = v1294[2];
    v1295 = v1294 + 2;
  }
  v1297 = v1295[1];
  if (v1297)
  {
    v1298 = (unint64_t *)(v1297 + 8);
    do
      v1299 = __ldxr(v1298);
    while (__stxr(v1299 + 1, v1298));
  }
  v1300 = *(std::__shared_weak_count **)(v852 + 40);
  *(_QWORD *)(v852 + 32) = v1296;
  *(_QWORD *)(v852 + 40) = v1297;
  if (v1300)
  {
    v1301 = (unint64_t *)&v1300->__shared_owners_;
    do
      v1302 = __ldaxr(v1301);
    while (__stlxr(v1302 - 1, v1301));
    if (!v1302)
    {
      ((void (*)(std::__shared_weak_count *))v1300->__on_zero_shared)(v1300);
      std::__shared_weak_count::__release_weak(v1300);
    }
  }
  v1304 = (*v1639)[8];
  v1303 = (*v1639)[9];
  if (v1303)
  {
    v1305 = (unint64_t *)(v1303 + 8);
    do
      v1306 = __ldxr(v1305);
    while (__stxr(v1306 + 1, v1305));
  }
  v1307 = *(std::__shared_weak_count **)(v852 + 56);
  *(_QWORD *)(v852 + 48) = v1304;
  *(_QWORD *)(v852 + 56) = v1303;
  if (v1307)
  {
    v1308 = (unint64_t *)&v1307->__shared_owners_;
    do
      v1309 = __ldaxr(v1308);
    while (__stlxr(v1309 - 1, v1308));
    if (!v1309)
    {
      ((void (*)(std::__shared_weak_count *))v1307->__on_zero_shared)(v1307);
      std::__shared_weak_count::__release_weak(v1307);
    }
  }
  v1310 = (_QWORD *)(*v1639)[58];
  v1312 = (*v1639)[26];
  v1311 = (*v1639)[27];
  if (v1311)
  {
    v1313 = (unint64_t *)(v1311 + 8);
    do
      v1314 = __ldxr(v1313);
    while (__stxr(v1314 + 1, v1313));
  }
  v1315 = (std::__shared_weak_count *)v1310[1];
  *v1310 = v1312;
  v1310[1] = v1311;
  if (v1315)
  {
    v1316 = (unint64_t *)&v1315->__shared_owners_;
    do
      v1317 = __ldaxr(v1316);
    while (__stlxr(v1317 - 1, v1316));
    if (!v1317)
    {
      ((void (*)(std::__shared_weak_count *))v1315->__on_zero_shared)(v1315);
      std::__shared_weak_count::__release_weak(v1315);
    }
  }
  *(_DWORD *)(v852 + 1704) = *((_DWORD *)*v1639 + 526);
  *(_QWORD *)(v852 + 1712) = *(_QWORD *)(v1638 + 176);
  sub_2396F295C((uint64_t *)(*v1636 + 392), *v1636 + 8, (uint64_t)v1741);
  v1318 = (void **)(v852 + 1720);
  if (*(char *)(v852 + 1743) < 0)
    operator delete(*v1318);
  *(_OWORD *)v1318 = *(_OWORD *)v1741;
  *(_QWORD *)(v852 + 1736) = *(_QWORD *)&v1741[16];
  sub_2396F295C((uint64_t *)(*v1636 + 416), *v1636 + 8, (uint64_t)v1741);
  v1319 = (void **)(v852 + 1744);
  if (*(char *)(v852 + 1767) < 0)
    operator delete(*v1319);
  *(_OWORD *)v1319 = *(_OWORD *)v1741;
  *(_QWORD *)(v852 + 1760) = *(_QWORD *)&v1741[16];
  v1320 = v1638;
  v1321 = *v1639;
  (*v1639)[67] = *(_QWORD *)(v1638 + 64);
  if (*(_BYTE *)(v1320 + 32))
  {
    v1322 = v1321[60];
    sub_2396F295C((uint64_t *)(*v1636 + 584), *v1636 + 8, (uint64_t)&__dst);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_23941A7F8(v1847, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      *(_QWORD *)&v1847[24] = 1064514355;
      *(_QWORD *)&v1847[32] = v1322;
      v1847[40] = 1;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_23941A7F8(__src, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
LABEL_2291:
        v1325 = v1321 + 250;
        *(_QWORD *)&__src[24] = v1321 + 250;
        *(_QWORD *)&__src[32] = 1064514355;
        *(_QWORD *)&__src[40] = v1322;
        __src[48] = 1;
        if ((v1847[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(v1860, *(void **)v1847, *(unint64_t *)&v1847[8]);
        }
        else
        {
          *(_OWORD *)v1860 = *(_OWORD *)v1847;
          *(_QWORD *)&v1860[16] = *(_QWORD *)&v1847[16];
        }
        *(_QWORD *)&v1860[40] = *(_QWORD *)&v1847[40];
        *(_OWORD *)&v1860[24] = *(_OWORD *)&v1847[24];
        if ((__src[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(&v1860[48], *(void **)__src, *(unint64_t *)&__src[8]);
        }
        else
        {
          *(_OWORD *)&v1860[48] = *(_OWORD *)__src;
          *(_QWORD *)&v1860[64] = *(_QWORD *)&__src[16];
        }
        *(_OWORD *)&v1860[72] = *(_OWORD *)&__src[24];
        *(_OWORD *)&v1860[88] = *(_OWORD *)&__src[40];
        *(_QWORD *)&v1860[104] = v1637;
        v1326 = v1637[3];
        if ((v1860[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(v1741, *(void **)v1860, *(unint64_t *)&v1860[8]);
        }
        else
        {
          *(_OWORD *)v1741 = *(_OWORD *)v1860;
          *(_QWORD *)&v1741[16] = *(_QWORD *)&v1860[16];
        }
        *(_OWORD *)&v1741[24] = *(_OWORD *)&v1860[24];
        *(_QWORD *)&v1741[40] = *(_QWORD *)&v1860[40];
        if ((v1860[71] & 0x80000000) != 0)
        {
          sub_23941A7F8(&v1741[48], *(void **)&v1860[48], *(unint64_t *)&v1860[56]);
        }
        else
        {
          *(_OWORD *)&v1741[48] = *(_OWORD *)&v1860[48];
          *(_QWORD *)&v1741[64] = *(_QWORD *)&v1860[64];
        }
        *(_OWORD *)&v1741[72] = *(_OWORD *)&v1860[72];
        *(_OWORD *)&v1741[88] = *(_OWORD *)&v1860[88];
        *(_QWORD *)&v1741[104] = *(_QWORD *)&v1860[104];
        v1327 = (char *)operator new(0x78uLL);
        v1328 = v1327;
        *(_QWORD *)v1327 = off_250AF9D10;
        if ((v1741[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(v1327 + 8, *(void **)v1741, *(unint64_t *)&v1741[8]);
        }
        else
        {
          *(_OWORD *)(v1327 + 8) = *(_OWORD *)v1741;
          *((_QWORD *)v1327 + 3) = *(_QWORD *)&v1741[16];
        }
        *((_OWORD *)v1328 + 2) = *(_OWORD *)&v1741[24];
        *((_QWORD *)v1328 + 6) = *(_QWORD *)&v1741[40];
        v1329 = v1328 + 56;
        if ((v1741[71] & 0x80000000) != 0)
        {
          sub_23941A7F8(v1329, *(void **)&v1741[48], *(unint64_t *)&v1741[56]);
        }
        else
        {
          *(_OWORD *)v1329 = *(_OWORD *)&v1741[48];
          *((_QWORD *)v1328 + 9) = *(_QWORD *)&v1741[64];
        }
        v1330 = *(_OWORD *)&v1741[88];
        *((_OWORD *)v1328 + 5) = *(_OWORD *)&v1741[72];
        *((_OWORD *)v1328 + 6) = v1330;
        *((_QWORD *)v1328 + 14) = *(_QWORD *)&v1741[104];
        *(_QWORD *)&__p[24] = v1328;
        sub_239B831AC(__p, (_QWORD *)(v1326 + 224));
        v1331 = *(_QWORD **)&__p[24];
        if (*(_BYTE **)&__p[24] == __p)
        {
          v1332 = 4;
          v1331 = __p;
        }
        else
        {
          if (!*(_QWORD *)&__p[24])
            goto LABEL_2314;
          v1332 = 5;
        }
        (*(void (**)(void))(*v1331 + 8 * v1332))();
LABEL_2314:
        if ((v1741[71] & 0x80000000) != 0)
        {
          operator delete(*(void **)&v1741[48]);
          if ((v1741[23] & 0x80000000) == 0)
          {
LABEL_2316:
            if ((v1860[71] & 0x80000000) == 0)
              goto LABEL_2317;
            goto LABEL_2326;
          }
        }
        else if ((v1741[23] & 0x80000000) == 0)
        {
          goto LABEL_2316;
        }
        operator delete(*(void **)v1741);
        if ((v1860[71] & 0x80000000) == 0)
        {
LABEL_2317:
          if ((v1860[23] & 0x80000000) == 0)
            goto LABEL_2318;
          goto LABEL_2327;
        }
LABEL_2326:
        operator delete(*(void **)&v1860[48]);
        if ((v1860[23] & 0x80000000) == 0)
        {
LABEL_2318:
          if ((__src[23] & 0x80000000) == 0)
            goto LABEL_2319;
          goto LABEL_2328;
        }
LABEL_2327:
        operator delete(*(void **)v1860);
        if ((__src[23] & 0x80000000) == 0)
        {
LABEL_2319:
          if ((v1847[23] & 0x80000000) == 0)
            goto LABEL_2320;
          goto LABEL_2329;
        }
LABEL_2328:
        operator delete(*(void **)__src);
        if ((v1847[23] & 0x80000000) == 0)
        {
LABEL_2320:
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_2321;
LABEL_2330:
          operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_2321:
          if (!*(_BYTE *)(v1638 + 24))
            goto LABEL_2381;
          sub_2396F295C((uint64_t *)(*v1636 + 608), *v1636 + 8, (uint64_t)&__dst);
          v1333 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
          {
            sub_23941A7F8(v1847, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
            v1333 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          }
          else
          {
            *(std::string *)v1847 = __dst;
          }
          *(_QWORD *)&v1847[24] = 1064514355;
          *(_QWORD *)&v1847[32] = v1322;
          v1847[40] = 1;
          *(_DWORD *)&v1847[41] = *(_DWORD *)v1732;
          *(_DWORD *)&v1847[44] = *(_DWORD *)&v1732[3];
          if (v1333 < 0)
            sub_23941A7F8(__src, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          else
            *(std::string *)__src = __dst;
          *(_QWORD *)&__src[24] = v1325;
          *(_QWORD *)&__src[32] = 1064514355;
          *(_QWORD *)&__src[40] = v1322;
          __src[48] = 1;
          *(_DWORD *)&__src[49] = *(_DWORD *)v1732;
          *(_DWORD *)&__src[52] = *(_DWORD *)&v1732[3];
          if ((v1847[23] & 0x80000000) != 0)
          {
            v1334 = v1637;
            sub_23941A7F8(v1860, *(void **)v1847, *(unint64_t *)&v1847[8]);
          }
          else
          {
            *(_OWORD *)v1860 = *(_OWORD *)v1847;
            *(_QWORD *)&v1860[16] = *(_QWORD *)&v1847[16];
            v1334 = v1637;
          }
          *(_OWORD *)&v1860[24] = *(_OWORD *)&v1847[24];
          *(_QWORD *)&v1860[40] = *(_QWORD *)&v1847[40];
          if ((__src[23] & 0x80000000) != 0)
          {
            sub_23941A7F8(&v1860[48], *(void **)__src, *(unint64_t *)&__src[8]);
          }
          else
          {
            *(_OWORD *)&v1860[48] = *(_OWORD *)__src;
            *(_QWORD *)&v1860[64] = *(_QWORD *)&__src[16];
          }
          *(_OWORD *)&v1860[72] = *(_OWORD *)&__src[24];
          *(_OWORD *)&v1860[88] = *(_OWORD *)&__src[40];
          *(_QWORD *)&v1860[104] = v1334;
          v1335 = v1334[3];
          if ((v1860[23] & 0x80000000) != 0)
          {
            sub_23941A7F8(v1741, *(void **)v1860, *(unint64_t *)&v1860[8]);
          }
          else
          {
            *(_OWORD *)v1741 = *(_OWORD *)v1860;
            *(_QWORD *)&v1741[16] = *(_QWORD *)&v1860[16];
          }
          *(_OWORD *)&v1741[24] = *(_OWORD *)&v1860[24];
          *(_QWORD *)&v1741[40] = *(_QWORD *)&v1860[40];
          if ((v1860[71] & 0x80000000) != 0)
          {
            sub_23941A7F8(&v1741[48], *(void **)&v1860[48], *(unint64_t *)&v1860[56]);
          }
          else
          {
            *(_OWORD *)&v1741[48] = *(_OWORD *)&v1860[48];
            *(_QWORD *)&v1741[64] = *(_QWORD *)&v1860[64];
          }
          *(_OWORD *)&v1741[72] = *(_OWORD *)&v1860[72];
          *(_OWORD *)&v1741[88] = *(_OWORD *)&v1860[88];
          *(_QWORD *)&v1741[104] = *(_QWORD *)&v1860[104];
          v1336 = (char *)operator new(0x78uLL);
          v1337 = v1336;
          *(_QWORD *)v1336 = off_250AF9DE8;
          if ((v1741[23] & 0x80000000) != 0)
          {
            sub_23941A7F8(v1336 + 8, *(void **)v1741, *(unint64_t *)&v1741[8]);
          }
          else
          {
            *(_OWORD *)(v1336 + 8) = *(_OWORD *)v1741;
            *((_QWORD *)v1336 + 3) = *(_QWORD *)&v1741[16];
          }
          *((_OWORD *)v1337 + 2) = *(_OWORD *)&v1741[24];
          *((_QWORD *)v1337 + 6) = *(_QWORD *)&v1741[40];
          v1338 = v1337 + 56;
          if ((v1741[71] & 0x80000000) != 0)
          {
            sub_23941A7F8(v1338, *(void **)&v1741[48], *(unint64_t *)&v1741[56]);
          }
          else
          {
            *(_OWORD *)v1338 = *(_OWORD *)&v1741[48];
            *((_QWORD *)v1337 + 9) = *(_QWORD *)&v1741[64];
          }
          v1339 = *(_OWORD *)&v1741[88];
          *((_OWORD *)v1337 + 5) = *(_OWORD *)&v1741[72];
          *((_OWORD *)v1337 + 6) = v1339;
          *((_QWORD *)v1337 + 14) = *(_QWORD *)&v1741[104];
          *(_QWORD *)&__p[24] = v1337;
          sub_239B8336C(__p, (_QWORD *)(v1335 + 256));
          v1340 = *(_QWORD **)&__p[24];
          if (*(_BYTE **)&__p[24] == __p)
          {
            v1341 = 4;
            v1340 = __p;
          }
          else
          {
            if (!*(_QWORD *)&__p[24])
              goto LABEL_2358;
            v1341 = 5;
          }
          (*(void (**)(void))(*v1340 + 8 * v1341))();
LABEL_2358:
          if ((v1741[71] & 0x80000000) != 0)
          {
            operator delete(*(void **)&v1741[48]);
            if ((v1741[23] & 0x80000000) == 0)
            {
LABEL_2360:
              if ((v1860[71] & 0x80000000) == 0)
                goto LABEL_2361;
              goto LABEL_2368;
            }
          }
          else if ((v1741[23] & 0x80000000) == 0)
          {
            goto LABEL_2360;
          }
          operator delete(*(void **)v1741);
          if ((v1860[71] & 0x80000000) == 0)
          {
LABEL_2361:
            if ((v1860[23] & 0x80000000) == 0)
              goto LABEL_2362;
            goto LABEL_2369;
          }
LABEL_2368:
          operator delete(*(void **)&v1860[48]);
          if ((v1860[23] & 0x80000000) == 0)
          {
LABEL_2362:
            if ((__src[23] & 0x80000000) == 0)
              goto LABEL_2363;
            goto LABEL_2370;
          }
LABEL_2369:
          operator delete(*(void **)v1860);
          if ((__src[23] & 0x80000000) == 0)
          {
LABEL_2363:
            if ((v1847[23] & 0x80000000) == 0)
              goto LABEL_2364;
            goto LABEL_2371;
          }
LABEL_2370:
          operator delete(*(void **)__src);
          if ((v1847[23] & 0x80000000) == 0)
          {
LABEL_2364:
            if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_2381;
LABEL_2372:
            operator delete(__dst.__r_.__value_.__l.__data_);
            goto LABEL_2381;
          }
LABEL_2371:
          operator delete(*(void **)v1847);
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_2381;
          goto LABEL_2372;
        }
LABEL_2329:
        operator delete(*(void **)v1847);
        if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_2321;
        goto LABEL_2330;
      }
    }
    else
    {
      *(std::string *)v1847 = __dst;
      *(_QWORD *)&v1847[24] = 1064514355;
      *(_QWORD *)&v1847[32] = v1322;
      v1847[40] = 1;
    }
    *(std::string *)__src = __dst;
    goto LABEL_2291;
  }
  *(_QWORD *)v1741 = &off_250AF9EC0;
  *(_QWORD *)&v1741[8] = v834;
  *(_QWORD *)&v1741[24] = v1741;
  sub_239B831AC(v1741, v1321 + 28);
  v1323 = *(_QWORD **)&v1741[24];
  if (*(_BYTE **)&v1741[24] == v1741)
  {
    v1324 = 4;
    v1323 = v1741;
  }
  else
  {
    if (!*(_QWORD *)&v1741[24])
      goto LABEL_2375;
    v1324 = 5;
  }
  (*(void (**)(void))(*v1323 + 8 * v1324))();
LABEL_2375:
  if (!*(_BYTE *)(v1638 + 24))
    goto LABEL_2381;
  v1342 = (_QWORD *)(v834[3] + 256);
  *(_QWORD *)v1741 = &off_250AF9F08;
  *(_QWORD *)&v1741[8] = v834;
  *(_QWORD *)&v1741[24] = v1741;
  sub_239B8336C(v1741, v1342);
  v1343 = *(_QWORD **)&v1741[24];
  if (*(_BYTE **)&v1741[24] == v1741)
  {
    v1344 = 4;
    v1343 = v1741;
  }
  else
  {
    if (!*(_QWORD *)&v1741[24])
      goto LABEL_2381;
    v1344 = 5;
  }
  (*(void (**)(void))(*v1343 + 8 * v1344))();
LABEL_2381:
  memset(v1860, 0, 24);
  sub_2397A98A4(__src);
  v1345 = *(uint64_t **)(v1638 + 40);
  for (n = *(uint64_t **)(v1638 + 48); v1345 != n; ++v1345)
  {
    v1347 = *v1345;
    if (*v1345 < (unint64_t)((uint64_t)(*(_QWORD *)&__src[8] - *(_QWORD *)__src) >> 4))
    {
      sub_23946D5E0(v1741, *(_QWORD *)__src + 16 * v1347);
      v1348 = *(char **)&v1860[8];
      if (*(_QWORD *)&v1860[8] >= *(_QWORD *)&v1860[16])
      {
        v1350 = *(char **)v1860;
        v1351 = *(_QWORD *)&v1860[8] - *(_QWORD *)v1860;
        v1352 = (uint64_t)(*(_QWORD *)&v1860[8] - *(_QWORD *)v1860) >> 3;
        v1353 = v1352 + 1;
        if ((unint64_t)(v1352 + 1) >> 61)
          sub_2394189F8();
        v1354 = *(_QWORD *)&v1860[16] - *(_QWORD *)v1860;
        if ((uint64_t)(*(_QWORD *)&v1860[16] - *(_QWORD *)v1860) >> 2 > v1353)
          v1353 = v1354 >> 2;
        if ((unint64_t)v1354 >= 0x7FFFFFFFFFFFFFF8)
          v1355 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v1355 = v1353;
        if (v1355)
        {
          if (v1355 >> 61)
            sub_239418A80();
          v1356 = (char *)operator new(8 * v1355);
        }
        else
        {
          v1356 = 0;
        }
        v1357 = &v1356[8 * v1352];
        *(_QWORD *)v1357 = v1347;
        v1349 = v1357 + 8;
        if (v1348 != v1350)
        {
          v1358 = v1348 - 8 - v1350;
          if (v1358 < 0x58)
            goto LABEL_2989;
          if ((unint64_t)(v1348 - &v1356[v1351]) < 0x20)
            goto LABEL_2989;
          v1359 = (v1358 >> 3) + 1;
          v1360 = &v1356[v1351 - 16];
          v1361 = v1348 - 16;
          v1362 = v1359 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v1363 = *(_OWORD *)v1361;
            *((_OWORD *)v1360 - 1) = *((_OWORD *)v1361 - 1);
            *(_OWORD *)v1360 = v1363;
            v1360 -= 32;
            v1361 -= 32;
            v1362 -= 4;
          }
          while (v1362);
          v1357 -= 8 * (v1359 & 0x3FFFFFFFFFFFFFFCLL);
          v1348 -= 8 * (v1359 & 0x3FFFFFFFFFFFFFFCLL);
          if (v1359 != (v1359 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_2989:
            do
            {
              v1364 = *((_QWORD *)v1348 - 1);
              v1348 -= 8;
              *((_QWORD *)v1357 - 1) = v1364;
              v1357 -= 8;
            }
            while (v1348 != v1350);
          }
        }
        *(_QWORD *)v1860 = v1357;
        *(_QWORD *)&v1860[8] = v1349;
        *(_QWORD *)&v1860[16] = &v1356[8 * v1355];
        if (v1350)
          operator delete(v1350);
      }
      else
      {
        **(_QWORD **)&v1860[8] = v1347;
        v1349 = v1348 + 8;
      }
      *(_QWORD *)&v1860[8] = v1349;
      v1365 = *(std::__shared_weak_count **)&v1741[8];
      if (*(_QWORD *)&v1741[8])
      {
        v1366 = (unint64_t *)(*(_QWORD *)&v1741[8] + 8);
        do
          v1367 = __ldaxr(v1366);
        while (__stlxr(v1367 - 1, v1366));
        if (!v1367)
        {
          ((void (*)(std::__shared_weak_count *))v1365->__on_zero_shared)(v1365);
          std::__shared_weak_count::__release_weak(v1365);
        }
      }
    }
  }
  if (*(_QWORD *)v1860 == *(_QWORD *)&v1860[8])
  {
    sub_239A444D4((uint64_t)"unknown file", 1341, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v1368 = *v1639;
  v1369 = *v1639 + 74;
  if (v1369 != (_QWORD *)v1860)
  {
    sub_23945D3D0(v1369, *(char **)v1860, *(char **)&v1860[8], (uint64_t)(*(_QWORD *)&v1860[8] - *(_QWORD *)v1860) >> 3);
    v1368 = *v1639;
  }
  *((_WORD *)v1368 + 281) = 257;
  v1370 = *(_QWORD *)(v1638 + 64);
  if (!v1370)
  {
    LODWORD(v1370) = std::thread::hardware_concurrency();
    v1368 = *v1639;
  }
  *((_DWORD *)v1368 + 155) = v1370;
  *((_DWORD *)v1368 + 163) = v1370;
  v1371 = (char *)operator new(0x20uLL);
  *(_QWORD *)v1847 = v1371;
  *(_OWORD *)&v1847[8] = v1635;
  *(_OWORD *)v1371 = v1634[1];
  *(_OWORD *)(v1371 + 12) = v1634[0];
  v1371[28] = 0;
  *(_QWORD *)__p = operator new(0x28uLL);
  *(_OWORD *)&__p[8] = xmmword_239F0C1B0;
  strcpy(*(char **)__p, "Photogrammetry_MVS_Kernels.metallib");
  sub_239643810((uint64_t)v1847, (__int128 *)__p, 0, 0, (std::string *)v1741);
  if (!v1741[24])
    sub_2394875CC();
  v1372 = (uint64_t)(*v1639 + 71);
  if (*((char *)*v1639 + 591) < 0)
    operator delete(*(void **)v1372);
  *(_OWORD *)v1372 = *(_OWORD *)v1741;
  *(_QWORD *)(v1372 + 16) = *(_QWORD *)&v1741[16];
  v1741[23] = 0;
  v1741[0] = 0;
  if ((__p[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__p);
    if ((v1847[23] & 0x80000000) == 0)
    {
LABEL_2421:
      v1373 = *(char **)__src;
      if (*(_QWORD *)__src)
        goto LABEL_2422;
LABEL_2435:
      v1379 = *(void **)v1860;
      if (!*(_QWORD *)v1860)
        goto LABEL_2437;
      goto LABEL_2436;
    }
  }
  else if ((v1847[23] & 0x80000000) == 0)
  {
    goto LABEL_2421;
  }
  operator delete(*(void **)v1847);
  v1373 = *(char **)__src;
  if (!*(_QWORD *)__src)
    goto LABEL_2435;
LABEL_2422:
  v1374 = *(char **)&__src[8];
  v1375 = v1373;
  if (*(char **)&__src[8] != v1373)
  {
    do
    {
      v1376 = (std::__shared_weak_count *)*((_QWORD *)v1374 - 1);
      if (v1376)
      {
        v1377 = (unint64_t *)&v1376->__shared_owners_;
        do
          v1378 = __ldaxr(v1377);
        while (__stlxr(v1378 - 1, v1377));
        if (!v1378)
        {
          ((void (*)(std::__shared_weak_count *))v1376->__on_zero_shared)(v1376);
          std::__shared_weak_count::__release_weak(v1376);
        }
      }
      v1374 -= 16;
    }
    while (v1374 != v1373);
    v1375 = *(char **)__src;
  }
  *(_QWORD *)&__src[8] = v1373;
  operator delete(v1375);
  v1379 = *(void **)v1860;
  if (*(_QWORD *)v1860)
  {
LABEL_2436:
    *(_QWORD *)&v1860[8] = v1379;
    operator delete(v1379);
  }
LABEL_2437:
  if (*(_BYTE *)(v1638 + 32))
  {
    sub_2396F295C((uint64_t *)(*v1636 + 536), *v1636 + 8, (uint64_t)&__dst);
    v1380 = *v1639;
    v1381 = (*v1639)[60];
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_23941A7F8(v1847, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      *(_QWORD *)&v1847[24] = 1064514355;
      *(_QWORD *)&v1847[32] = v1381;
      v1847[40] = 1;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_23941A7F8(__src, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
LABEL_2445:
        v1385 = v1380 + 250;
        *(_QWORD *)&__src[24] = v1380 + 250;
        *(_QWORD *)&__src[32] = 1064514355;
        *(_QWORD *)&__src[40] = v1381;
        __src[48] = 1;
        *(_QWORD *)v1860 = *(_QWORD *)(v1638 + 176);
        if ((v1847[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(&v1860[8], *(void **)v1847, *(unint64_t *)&v1847[8]);
        }
        else
        {
          *(_OWORD *)&v1860[8] = *(_OWORD *)v1847;
          *(_QWORD *)&v1860[24] = *(_QWORD *)&v1847[16];
        }
        *(_QWORD *)&v1860[48] = *(_QWORD *)&v1847[40];
        *(_OWORD *)&v1860[32] = *(_OWORD *)&v1847[24];
        if ((__src[23] & 0x80000000) != 0)
        {
          sub_23941A7F8(&v1860[56], *(void **)__src, *(unint64_t *)&__src[8]);
        }
        else
        {
          *(_OWORD *)&v1860[56] = *(_OWORD *)__src;
          *(_QWORD *)&v1860[72] = *(_QWORD *)&__src[16];
        }
        *(_OWORD *)&v1860[80] = *(_OWORD *)&__src[24];
        *(_OWORD *)&v1860[96] = *(_OWORD *)&__src[40];
        v1861 = (uint64_t)v1637;
        v1386 = v1637[3];
        *(_QWORD *)v1741 = *(_QWORD *)v1860;
        if ((v1860[31] & 0x80000000) != 0)
        {
          sub_23941A7F8(&v1741[8], *(void **)&v1860[8], *(unint64_t *)&v1860[16]);
        }
        else
        {
          *(_OWORD *)&v1741[8] = *(_OWORD *)&v1860[8];
          *(_QWORD *)&v1741[24] = *(_QWORD *)&v1860[24];
        }
        *(_OWORD *)&v1741[32] = *(_OWORD *)&v1860[32];
        *(_QWORD *)&v1741[48] = *(_QWORD *)&v1860[48];
        if ((v1860[79] & 0x80000000) != 0)
        {
          sub_23941A7F8(&v1741[56], *(void **)&v1860[56], *(unint64_t *)&v1860[64]);
        }
        else
        {
          *(_OWORD *)&v1741[56] = *(_OWORD *)&v1860[56];
          *(_QWORD *)&v1741[72] = *(_QWORD *)&v1860[72];
        }
        *(_OWORD *)&v1741[80] = *(_OWORD *)&v1860[80];
        *(_OWORD *)&v1741[96] = *(_OWORD *)&v1860[96];
        *(_QWORD *)&v1742 = v1861;
        v1387 = operator new(0x80uLL);
        v1388 = v1387;
        v1389 = *(_QWORD *)v1741;
        *v1387 = off_250AF9F50;
        v1387[1] = v1389;
        if ((v1741[31] & 0x80000000) != 0)
        {
          sub_23941A7F8((_BYTE *)v1387 + 16, *(void **)&v1741[8], *(unint64_t *)&v1741[16]);
        }
        else
        {
          *((_OWORD *)v1387 + 1) = *(_OWORD *)&v1741[8];
          v1387[4] = *(_QWORD *)&v1741[24];
        }
        *(_OWORD *)(v1388 + 5) = *(_OWORD *)&v1741[32];
        v1388[7] = *(_QWORD *)&v1741[48];
        v1390 = v1388 + 8;
        if ((v1741[79] & 0x80000000) != 0)
        {
          sub_23941A7F8(v1390, *(void **)&v1741[56], *(unint64_t *)&v1741[64]);
        }
        else
        {
          *(_OWORD *)v1390 = *(_OWORD *)&v1741[56];
          v1388[10] = *(_QWORD *)&v1741[72];
        }
        v1391 = *(_OWORD *)&v1741[96];
        *(_OWORD *)(v1388 + 11) = *(_OWORD *)&v1741[80];
        *(_OWORD *)(v1388 + 13) = v1391;
        v1388[15] = v1742;
        *(_QWORD *)&__p[24] = v1388;
        sub_239B834E0(__p, (_QWORD *)(v1386 + 288));
        v1392 = *(_QWORD **)&__p[24];
        if (*(_BYTE **)&__p[24] == __p)
        {
          v1393 = 4;
          v1392 = __p;
        }
        else
        {
          if (!*(_QWORD *)&__p[24])
            goto LABEL_2468;
          v1393 = 5;
        }
        (*(void (**)(void))(*v1392 + 8 * v1393))();
LABEL_2468:
        if ((v1741[79] & 0x80000000) != 0)
        {
          operator delete(*(void **)&v1741[56]);
          if ((v1741[31] & 0x80000000) == 0)
          {
LABEL_2470:
            if ((v1860[79] & 0x80000000) == 0)
              goto LABEL_2471;
            goto LABEL_2478;
          }
        }
        else if ((v1741[31] & 0x80000000) == 0)
        {
          goto LABEL_2470;
        }
        operator delete(*(void **)&v1741[8]);
        if ((v1860[79] & 0x80000000) == 0)
        {
LABEL_2471:
          if ((v1860[31] & 0x80000000) == 0)
            goto LABEL_2472;
          goto LABEL_2479;
        }
LABEL_2478:
        operator delete(*(void **)&v1860[56]);
        if ((v1860[31] & 0x80000000) == 0)
        {
LABEL_2472:
          if ((__src[23] & 0x80000000) == 0)
            goto LABEL_2473;
          goto LABEL_2480;
        }
LABEL_2479:
        operator delete(*(void **)&v1860[8]);
        if ((__src[23] & 0x80000000) == 0)
        {
LABEL_2473:
          if ((v1847[23] & 0x80000000) == 0)
            goto LABEL_2474;
          goto LABEL_2481;
        }
LABEL_2480:
        operator delete(*(void **)__src);
        if ((v1847[23] & 0x80000000) == 0)
        {
LABEL_2474:
          v1394 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_2475:
            *(std::string *)v1847 = __dst;
            goto LABEL_2483;
          }
LABEL_2482:
          sub_23941A7F8(v1847, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          v1394 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
LABEL_2483:
          *(_QWORD *)&v1847[24] = 1064514355;
          *(_QWORD *)&v1847[32] = v1381;
          v1847[40] = 1;
          *(_DWORD *)&v1847[41] = *(_DWORD *)v1732;
          *(_DWORD *)&v1847[44] = *(_DWORD *)&v1732[3];
          if (v1394 < 0)
            sub_23941A7F8(__src, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          else
            *(std::string *)__src = __dst;
          *(_QWORD *)&__src[24] = v1385;
          *(_QWORD *)&__src[32] = 1064514355;
          *(_QWORD *)&__src[40] = v1381;
          __src[48] = 1;
          *(_DWORD *)&__src[49] = *(_DWORD *)v1732;
          *(_DWORD *)&__src[52] = *(_DWORD *)&v1732[3];
          *(_QWORD *)v1860 = *(_QWORD *)(v1638 + 176);
          if ((v1847[23] & 0x80000000) != 0)
          {
            sub_23941A7F8(&v1860[8], *(void **)v1847, *(unint64_t *)&v1847[8]);
          }
          else
          {
            *(_OWORD *)&v1860[8] = *(_OWORD *)v1847;
            *(_QWORD *)&v1860[24] = *(_QWORD *)&v1847[16];
          }
          *(_OWORD *)&v1860[32] = *(_OWORD *)&v1847[24];
          *(_QWORD *)&v1860[48] = *(_QWORD *)&v1847[40];
          if ((__src[23] & 0x80000000) != 0)
          {
            sub_23941A7F8(&v1860[56], *(void **)__src, *(unint64_t *)&__src[8]);
          }
          else
          {
            *(_OWORD *)&v1860[56] = *(_OWORD *)__src;
            *(_QWORD *)&v1860[72] = *(_QWORD *)&__src[16];
          }
          *(_OWORD *)&v1860[80] = *(_OWORD *)&__src[24];
          *(_OWORD *)&v1860[96] = *(_OWORD *)&__src[40];
          v1861 = (uint64_t)v1637;
          v1395 = v1637[3];
          *(_QWORD *)v1741 = *(_QWORD *)v1860;
          if ((v1860[31] & 0x80000000) != 0)
          {
            sub_23941A7F8(&v1741[8], *(void **)&v1860[8], *(unint64_t *)&v1860[16]);
          }
          else
          {
            *(_OWORD *)&v1741[8] = *(_OWORD *)&v1860[8];
            *(_QWORD *)&v1741[24] = *(_QWORD *)&v1860[24];
          }
          *(_OWORD *)&v1741[32] = *(_OWORD *)&v1860[32];
          *(_QWORD *)&v1741[48] = *(_QWORD *)&v1860[48];
          if ((v1860[79] & 0x80000000) != 0)
          {
            sub_23941A7F8(&v1741[56], *(void **)&v1860[56], *(unint64_t *)&v1860[64]);
          }
          else
          {
            *(_OWORD *)&v1741[56] = *(_OWORD *)&v1860[56];
            *(_QWORD *)&v1741[72] = *(_QWORD *)&v1860[72];
          }
          *(_OWORD *)&v1741[80] = *(_OWORD *)&v1860[80];
          *(_OWORD *)&v1741[96] = *(_OWORD *)&v1860[96];
          *(_QWORD *)&v1742 = v1861;
          v1396 = operator new(0x80uLL);
          v1397 = v1396;
          v1398 = *(_QWORD *)v1741;
          *v1396 = off_250AFA450;
          v1396[1] = v1398;
          if ((v1741[31] & 0x80000000) != 0)
          {
            sub_23941A7F8((_BYTE *)v1396 + 16, *(void **)&v1741[8], *(unint64_t *)&v1741[16]);
          }
          else
          {
            *((_OWORD *)v1396 + 1) = *(_OWORD *)&v1741[8];
            v1396[4] = *(_QWORD *)&v1741[24];
          }
          *(_OWORD *)(v1397 + 5) = *(_OWORD *)&v1741[32];
          v1397[7] = *(_QWORD *)&v1741[48];
          v1399 = v1397 + 8;
          if ((v1741[79] & 0x80000000) != 0)
          {
            sub_23941A7F8(v1399, *(void **)&v1741[56], *(unint64_t *)&v1741[64]);
          }
          else
          {
            *(_OWORD *)v1399 = *(_OWORD *)&v1741[56];
            v1397[10] = *(_QWORD *)&v1741[72];
          }
          v1400 = *(_OWORD *)&v1741[96];
          *(_OWORD *)(v1397 + 11) = *(_OWORD *)&v1741[80];
          *(_OWORD *)(v1397 + 13) = v1400;
          v1397[15] = v1742;
          *(_QWORD *)&__p[24] = v1397;
          sub_239B836A0(__p, (_QWORD *)(v1395 + 320));
          v1401 = *(_QWORD **)&__p[24];
          if (*(_BYTE **)&__p[24] == __p)
          {
            v1402 = 4;
            v1401 = __p;
          }
          else
          {
            if (!*(_QWORD *)&__p[24])
              goto LABEL_2509;
            v1402 = 5;
          }
          (*(void (**)(void))(*v1401 + 8 * v1402))();
LABEL_2509:
          if ((v1741[79] & 0x80000000) != 0)
          {
            operator delete(*(void **)&v1741[56]);
            if ((v1741[31] & 0x80000000) == 0)
            {
LABEL_2511:
              if ((v1860[79] & 0x80000000) == 0)
                goto LABEL_2512;
              goto LABEL_2519;
            }
          }
          else if ((v1741[31] & 0x80000000) == 0)
          {
            goto LABEL_2511;
          }
          operator delete(*(void **)&v1741[8]);
          if ((v1860[79] & 0x80000000) == 0)
          {
LABEL_2512:
            if ((v1860[31] & 0x80000000) == 0)
              goto LABEL_2513;
            goto LABEL_2520;
          }
LABEL_2519:
          operator delete(*(void **)&v1860[56]);
          if ((v1860[31] & 0x80000000) == 0)
          {
LABEL_2513:
            if ((__src[23] & 0x80000000) == 0)
              goto LABEL_2514;
            goto LABEL_2521;
          }
LABEL_2520:
          operator delete(*(void **)&v1860[8]);
          if ((__src[23] & 0x80000000) == 0)
          {
LABEL_2514:
            if ((v1847[23] & 0x80000000) == 0)
              goto LABEL_2515;
            goto LABEL_2522;
          }
LABEL_2521:
          operator delete(*(void **)__src);
          if ((v1847[23] & 0x80000000) == 0)
          {
LABEL_2515:
            v1403 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
            if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_2516:
              *(std::string *)v1847 = __dst;
              goto LABEL_2524;
            }
LABEL_2523:
            sub_23941A7F8(v1847, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
            v1403 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
LABEL_2524:
            *(_QWORD *)&v1847[24] = 1064514355;
            *(_QWORD *)&v1847[32] = v1381;
            v1847[40] = 1;
            *(_DWORD *)&v1847[41] = *(_DWORD *)v1732;
            *(_DWORD *)&v1847[44] = *(_DWORD *)&v1732[3];
            if (v1403 < 0)
              sub_23941A7F8(__src, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
            else
              *(std::string *)__src = __dst;
            *(_QWORD *)&__src[24] = v1385;
            *(_QWORD *)&__src[32] = 1064514355;
            *(_QWORD *)&__src[40] = v1381;
            __src[48] = 1;
            *(_DWORD *)&__src[49] = *(_DWORD *)v1732;
            *(_DWORD *)&__src[52] = *(_DWORD *)&v1732[3];
            *(_QWORD *)v1860 = *(_QWORD *)(v1638 + 176);
            if ((v1847[23] & 0x80000000) != 0)
            {
              sub_23941A7F8(&v1860[8], *(void **)v1847, *(unint64_t *)&v1847[8]);
            }
            else
            {
              *(_OWORD *)&v1860[8] = *(_OWORD *)v1847;
              *(_QWORD *)&v1860[24] = *(_QWORD *)&v1847[16];
            }
            *(_OWORD *)&v1860[32] = *(_OWORD *)&v1847[24];
            *(_QWORD *)&v1860[48] = *(_QWORD *)&v1847[40];
            if ((__src[23] & 0x80000000) != 0)
            {
              sub_23941A7F8(&v1860[56], *(void **)__src, *(unint64_t *)&__src[8]);
            }
            else
            {
              *(_OWORD *)&v1860[56] = *(_OWORD *)__src;
              *(_QWORD *)&v1860[72] = *(_QWORD *)&__src[16];
            }
            *(_OWORD *)&v1860[80] = *(_OWORD *)&__src[24];
            *(_OWORD *)&v1860[96] = *(_OWORD *)&__src[40];
            v1861 = (uint64_t)v1637;
            v1404 = v1637[3];
            *(_QWORD *)v1741 = *(_QWORD *)v1860;
            if ((v1860[31] & 0x80000000) != 0)
            {
              sub_23941A7F8(&v1741[8], *(void **)&v1860[8], *(unint64_t *)&v1860[16]);
            }
            else
            {
              *(_OWORD *)&v1741[8] = *(_OWORD *)&v1860[8];
              *(_QWORD *)&v1741[24] = *(_QWORD *)&v1860[24];
            }
            *(_OWORD *)&v1741[32] = *(_OWORD *)&v1860[32];
            *(_QWORD *)&v1741[48] = *(_QWORD *)&v1860[48];
            if ((v1860[79] & 0x80000000) != 0)
            {
              sub_23941A7F8(&v1741[56], *(void **)&v1860[56], *(unint64_t *)&v1860[64]);
            }
            else
            {
              *(_OWORD *)&v1741[56] = *(_OWORD *)&v1860[56];
              *(_QWORD *)&v1741[72] = *(_QWORD *)&v1860[72];
            }
            *(_OWORD *)&v1741[80] = *(_OWORD *)&v1860[80];
            *(_OWORD *)&v1741[96] = *(_OWORD *)&v1860[96];
            *(_QWORD *)&v1742 = v1861;
            v1405 = operator new(0x80uLL);
            v1406 = v1405;
            v1407 = *(_QWORD *)v1741;
            *v1405 = off_250AFA950;
            v1405[1] = v1407;
            if ((v1741[31] & 0x80000000) != 0)
            {
              sub_23941A7F8((_BYTE *)v1405 + 16, *(void **)&v1741[8], *(unint64_t *)&v1741[16]);
            }
            else
            {
              *((_OWORD *)v1405 + 1) = *(_OWORD *)&v1741[8];
              v1405[4] = *(_QWORD *)&v1741[24];
            }
            *(_OWORD *)(v1406 + 5) = *(_OWORD *)&v1741[32];
            v1406[7] = *(_QWORD *)&v1741[48];
            v1408 = v1406 + 8;
            if ((v1741[79] & 0x80000000) != 0)
            {
              sub_23941A7F8(v1408, *(void **)&v1741[56], *(unint64_t *)&v1741[64]);
            }
            else
            {
              *(_OWORD *)v1408 = *(_OWORD *)&v1741[56];
              v1406[10] = *(_QWORD *)&v1741[72];
            }
            v1409 = *(_OWORD *)&v1741[96];
            *(_OWORD *)(v1406 + 11) = *(_OWORD *)&v1741[80];
            *(_OWORD *)(v1406 + 13) = v1409;
            v1406[15] = v1742;
            *(_QWORD *)&__p[24] = v1406;
            sub_239B834E0(__p, (_QWORD *)(v1404 + 352));
            v1410 = *(_QWORD **)&__p[24];
            if (*(_BYTE **)&__p[24] == __p)
            {
              v1411 = 4;
              v1410 = __p;
            }
            else
            {
              if (!*(_QWORD *)&__p[24])
                goto LABEL_2550;
              v1411 = 5;
            }
            (*(void (**)(void))(*v1410 + 8 * v1411))();
LABEL_2550:
            if ((v1741[79] & 0x80000000) != 0)
            {
              operator delete(*(void **)&v1741[56]);
              if ((v1741[31] & 0x80000000) == 0)
              {
LABEL_2552:
                if ((v1860[79] & 0x80000000) == 0)
                  goto LABEL_2553;
                goto LABEL_2560;
              }
            }
            else if ((v1741[31] & 0x80000000) == 0)
            {
              goto LABEL_2552;
            }
            operator delete(*(void **)&v1741[8]);
            if ((v1860[79] & 0x80000000) == 0)
            {
LABEL_2553:
              if ((v1860[31] & 0x80000000) == 0)
                goto LABEL_2554;
              goto LABEL_2561;
            }
LABEL_2560:
            operator delete(*(void **)&v1860[56]);
            if ((v1860[31] & 0x80000000) == 0)
            {
LABEL_2554:
              if ((__src[23] & 0x80000000) == 0)
                goto LABEL_2555;
              goto LABEL_2562;
            }
LABEL_2561:
            operator delete(*(void **)&v1860[8]);
            if ((__src[23] & 0x80000000) == 0)
            {
LABEL_2555:
              if ((v1847[23] & 0x80000000) == 0)
                goto LABEL_2556;
              goto LABEL_2563;
            }
LABEL_2562:
            operator delete(*(void **)__src);
            if ((v1847[23] & 0x80000000) == 0)
            {
LABEL_2556:
              v1412 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
              if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
LABEL_2557:
                *(std::string *)v1847 = __dst;
                goto LABEL_2565;
              }
LABEL_2564:
              sub_23941A7F8(v1847, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
              v1412 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
LABEL_2565:
              *(_QWORD *)&v1847[24] = 1064514355;
              *(_QWORD *)&v1847[32] = v1381;
              v1847[40] = 1;
              *(_DWORD *)&v1847[41] = *(_DWORD *)v1732;
              *(_DWORD *)&v1847[44] = *(_DWORD *)&v1732[3];
              if (v1412 < 0)
                sub_23941A7F8(__src, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
              else
                *(std::string *)__src = __dst;
              *(_QWORD *)&__src[24] = v1385;
              *(_QWORD *)&__src[32] = 1064514355;
              *(_QWORD *)&__src[40] = v1381;
              __src[48] = 1;
              *(_DWORD *)&__src[49] = *(_DWORD *)v1732;
              *(_DWORD *)&__src[52] = *(_DWORD *)&v1732[3];
              *(_QWORD *)v1860 = *(_QWORD *)(v1638 + 176);
              if ((v1847[23] & 0x80000000) != 0)
              {
                v1413 = v1637;
                sub_23941A7F8(&v1860[8], *(void **)v1847, *(unint64_t *)&v1847[8]);
              }
              else
              {
                *(_OWORD *)&v1860[8] = *(_OWORD *)v1847;
                *(_QWORD *)&v1860[24] = *(_QWORD *)&v1847[16];
                v1413 = v1637;
              }
              *(_OWORD *)&v1860[32] = *(_OWORD *)&v1847[24];
              *(_QWORD *)&v1860[48] = *(_QWORD *)&v1847[40];
              if ((__src[23] & 0x80000000) != 0)
              {
                sub_23941A7F8(&v1860[56], *(void **)__src, *(unint64_t *)&__src[8]);
              }
              else
              {
                *(_OWORD *)&v1860[56] = *(_OWORD *)__src;
                *(_QWORD *)&v1860[72] = *(_QWORD *)&__src[16];
              }
              *(_OWORD *)&v1860[80] = *(_OWORD *)&__src[24];
              *(_OWORD *)&v1860[96] = *(_OWORD *)&__src[40];
              v1861 = (uint64_t)v1413;
              v1414 = v1413[3];
              *(_QWORD *)v1741 = *(_QWORD *)v1860;
              if ((v1860[31] & 0x80000000) != 0)
              {
                sub_23941A7F8(&v1741[8], *(void **)&v1860[8], *(unint64_t *)&v1860[16]);
              }
              else
              {
                *(_OWORD *)&v1741[8] = *(_OWORD *)&v1860[8];
                *(_QWORD *)&v1741[24] = *(_QWORD *)&v1860[24];
              }
              *(_OWORD *)&v1741[32] = *(_OWORD *)&v1860[32];
              *(_QWORD *)&v1741[48] = *(_QWORD *)&v1860[48];
              if ((v1860[79] & 0x80000000) != 0)
              {
                sub_23941A7F8(&v1741[56], *(void **)&v1860[56], *(unint64_t *)&v1860[64]);
              }
              else
              {
                *(_OWORD *)&v1741[56] = *(_OWORD *)&v1860[56];
                *(_QWORD *)&v1741[72] = *(_QWORD *)&v1860[72];
              }
              *(_OWORD *)&v1741[80] = *(_OWORD *)&v1860[80];
              *(_OWORD *)&v1741[96] = *(_OWORD *)&v1860[96];
              *(_QWORD *)&v1742 = v1861;
              v1415 = operator new(0x80uLL);
              v1416 = v1415;
              v1417 = *(_QWORD *)v1741;
              *v1415 = off_250AFAA28;
              v1415[1] = v1417;
              if ((v1741[31] & 0x80000000) != 0)
              {
                sub_23941A7F8((_BYTE *)v1415 + 16, *(void **)&v1741[8], *(unint64_t *)&v1741[16]);
              }
              else
              {
                *((_OWORD *)v1415 + 1) = *(_OWORD *)&v1741[8];
                v1415[4] = *(_QWORD *)&v1741[24];
              }
              *(_OWORD *)(v1416 + 5) = *(_OWORD *)&v1741[32];
              v1416[7] = *(_QWORD *)&v1741[48];
              v1418 = v1416 + 8;
              if ((v1741[79] & 0x80000000) != 0)
              {
                sub_23941A7F8(v1418, *(void **)&v1741[56], *(unint64_t *)&v1741[64]);
              }
              else
              {
                *(_OWORD *)v1418 = *(_OWORD *)&v1741[56];
                v1416[10] = *(_QWORD *)&v1741[72];
              }
              v1419 = *(_OWORD *)&v1741[96];
              *(_OWORD *)(v1416 + 11) = *(_OWORD *)&v1741[80];
              *(_OWORD *)(v1416 + 13) = v1419;
              v1416[15] = v1742;
              *(_QWORD *)&__p[24] = v1416;
              sub_239B834E0(__p, (_QWORD *)(v1414 + 384));
              v1420 = *(_QWORD **)&__p[24];
              if (*(_BYTE **)&__p[24] == __p)
              {
                v1421 = 4;
                v1420 = __p;
              }
              else
              {
                if (!*(_QWORD *)&__p[24])
                  goto LABEL_2591;
                v1421 = 5;
              }
              (*(void (**)(void))(*v1420 + 8 * v1421))();
LABEL_2591:
              if ((v1741[79] & 0x80000000) != 0)
              {
                operator delete(*(void **)&v1741[56]);
                if ((v1741[31] & 0x80000000) == 0)
                {
LABEL_2593:
                  if ((v1860[79] & 0x80000000) == 0)
                    goto LABEL_2594;
                  goto LABEL_2601;
                }
              }
              else if ((v1741[31] & 0x80000000) == 0)
              {
                goto LABEL_2593;
              }
              operator delete(*(void **)&v1741[8]);
              if ((v1860[79] & 0x80000000) == 0)
              {
LABEL_2594:
                if ((v1860[31] & 0x80000000) == 0)
                  goto LABEL_2595;
                goto LABEL_2602;
              }
LABEL_2601:
              operator delete(*(void **)&v1860[56]);
              if ((v1860[31] & 0x80000000) == 0)
              {
LABEL_2595:
                if ((__src[23] & 0x80000000) == 0)
                  goto LABEL_2596;
                goto LABEL_2603;
              }
LABEL_2602:
              operator delete(*(void **)&v1860[8]);
              if ((__src[23] & 0x80000000) == 0)
              {
LABEL_2596:
                if ((v1847[23] & 0x80000000) == 0)
                  goto LABEL_2597;
                goto LABEL_2604;
              }
LABEL_2603:
              operator delete(*(void **)__src);
              if ((v1847[23] & 0x80000000) == 0)
              {
LABEL_2597:
                if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                  goto LABEL_2623;
LABEL_2605:
                operator delete(__dst.__r_.__value_.__l.__data_);
                goto LABEL_2623;
              }
LABEL_2604:
              operator delete(*(void **)v1847);
              if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                goto LABEL_2623;
              goto LABEL_2605;
            }
LABEL_2563:
            operator delete(*(void **)v1847);
            v1412 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
            if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_2557;
            goto LABEL_2564;
          }
LABEL_2522:
          operator delete(*(void **)v1847);
          v1403 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_2516;
          goto LABEL_2523;
        }
LABEL_2481:
        operator delete(*(void **)v1847);
        v1394 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
        if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_2475;
        goto LABEL_2482;
      }
    }
    else
    {
      *(std::string *)v1847 = __dst;
      *(_QWORD *)&v1847[24] = 1064514355;
      *(_QWORD *)&v1847[32] = v1381;
      v1847[40] = 1;
    }
    *(std::string *)__src = __dst;
    goto LABEL_2445;
  }
  v1382 = (_QWORD *)(v1637[3] + 288);
  *(_QWORD *)v1741 = &off_250AFAB00;
  *(_QWORD *)&v1741[8] = 9999;
  *(_QWORD *)&v1741[16] = v1637;
  *(_QWORD *)&v1741[24] = v1741;
  sub_239B834E0(v1741, v1382);
  v1383 = *(_QWORD **)&v1741[24];
  if (*(_BYTE **)&v1741[24] == v1741)
  {
    v1384 = 4;
    v1383 = v1741;
  }
  else
  {
    if (!*(_QWORD *)&v1741[24])
      goto LABEL_2608;
    v1384 = 5;
  }
  (*(void (**)(void))(*v1383 + 8 * v1384))();
LABEL_2608:
  v1422 = (_QWORD *)(v1637[3] + 320);
  *(_QWORD *)v1741 = &off_250AFAB48;
  *(_QWORD *)&v1741[8] = 9999;
  *(_QWORD *)&v1741[16] = v1637;
  *(_QWORD *)&v1741[24] = v1741;
  sub_239B836A0(v1741, v1422);
  v1423 = *(_QWORD **)&v1741[24];
  if (*(_BYTE **)&v1741[24] == v1741)
  {
    v1424 = 4;
    v1423 = v1741;
  }
  else
  {
    if (!*(_QWORD *)&v1741[24])
      goto LABEL_2613;
    v1424 = 5;
  }
  (*(void (**)(void))(*v1423 + 8 * v1424))();
LABEL_2613:
  v1425 = (_QWORD *)(v1637[3] + 352);
  *(_QWORD *)v1741 = &off_250AFAB90;
  *(_QWORD *)&v1741[8] = 9999;
  *(_QWORD *)&v1741[16] = v1637;
  *(_QWORD *)&v1741[24] = v1741;
  sub_239B834E0(v1741, v1425);
  v1426 = *(_QWORD **)&v1741[24];
  if (*(_BYTE **)&v1741[24] == v1741)
  {
    v1427 = 4;
    v1426 = v1741;
  }
  else
  {
    if (!*(_QWORD *)&v1741[24])
      goto LABEL_2618;
    v1427 = 5;
  }
  (*(void (**)(void))(*v1426 + 8 * v1427))();
LABEL_2618:
  v1428 = (_QWORD *)(v1637[3] + 384);
  *(_QWORD *)v1741 = &off_250AFABD8;
  *(_QWORD *)&v1741[8] = 9999;
  *(_QWORD *)&v1741[16] = v1637;
  *(_QWORD *)&v1741[24] = v1741;
  sub_239B834E0(v1741, v1428);
  v1429 = *(_QWORD **)&v1741[24];
  if (*(_BYTE **)&v1741[24] == v1741)
  {
    v1430 = 4;
    v1429 = v1741;
  }
  else
  {
    if (!*(_QWORD *)&v1741[24])
      goto LABEL_2623;
    v1430 = 5;
  }
  (*(void (**)(void))(*v1429 + 8 * v1430))();
LABEL_2623:
  memset(v1741, 0, 24);
  sub_2397A98A4(v1860);
  v1431 = *(uint64_t **)(v1638 + 40);
  for (ii = *(uint64_t **)(v1638 + 48); v1431 != ii; ++v1431)
  {
    v1433 = *v1431;
    if (*v1431 < (unint64_t)((uint64_t)(*(_QWORD *)&v1860[8] - *(_QWORD *)v1860) >> 4))
    {
      sub_23946D5E0(__src, *(_QWORD *)v1860 + 16 * v1433);
      v1434 = *(char **)&v1741[8];
      if (*(_QWORD *)&v1741[8] >= *(_QWORD *)&v1741[16])
      {
        v1436 = *(char **)v1741;
        v1437 = *(_QWORD *)&v1741[8] - *(_QWORD *)v1741;
        v1438 = (uint64_t)(*(_QWORD *)&v1741[8] - *(_QWORD *)v1741) >> 3;
        v1439 = v1438 + 1;
        if ((unint64_t)(v1438 + 1) >> 61)
          sub_2394189F8();
        v1440 = *(_QWORD *)&v1741[16] - *(_QWORD *)v1741;
        if ((uint64_t)(*(_QWORD *)&v1741[16] - *(_QWORD *)v1741) >> 2 > v1439)
          v1439 = v1440 >> 2;
        if ((unint64_t)v1440 >= 0x7FFFFFFFFFFFFFF8)
          v1441 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v1441 = v1439;
        if (v1441)
        {
          if (v1441 >> 61)
            sub_239418A80();
          v1442 = (char *)operator new(8 * v1441);
        }
        else
        {
          v1442 = 0;
        }
        v1443 = &v1442[8 * v1438];
        *(_QWORD *)v1443 = v1433;
        v1435 = v1443 + 8;
        if (v1434 != v1436)
        {
          v1444 = v1434 - 8 - v1436;
          if (v1444 < 0x58)
            goto LABEL_2990;
          if ((unint64_t)(v1434 - &v1442[v1437]) < 0x20)
            goto LABEL_2990;
          v1445 = (v1444 >> 3) + 1;
          v1446 = &v1442[v1437 - 16];
          v1447 = v1434 - 16;
          v1448 = v1445 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v1449 = *(_OWORD *)v1447;
            *((_OWORD *)v1446 - 1) = *((_OWORD *)v1447 - 1);
            *(_OWORD *)v1446 = v1449;
            v1446 -= 32;
            v1447 -= 32;
            v1448 -= 4;
          }
          while (v1448);
          v1443 -= 8 * (v1445 & 0x3FFFFFFFFFFFFFFCLL);
          v1434 -= 8 * (v1445 & 0x3FFFFFFFFFFFFFFCLL);
          if (v1445 != (v1445 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_2990:
            do
            {
              v1450 = *((_QWORD *)v1434 - 1);
              v1434 -= 8;
              *((_QWORD *)v1443 - 1) = v1450;
              v1443 -= 8;
            }
            while (v1434 != v1436);
          }
        }
        *(_QWORD *)v1741 = v1443;
        *(_QWORD *)&v1741[8] = v1435;
        *(_QWORD *)&v1741[16] = &v1442[8 * v1441];
        if (v1436)
          operator delete(v1436);
      }
      else
      {
        **(_QWORD **)&v1741[8] = v1433;
        v1435 = v1434 + 8;
      }
      *(_QWORD *)&v1741[8] = v1435;
      v1451 = *(std::__shared_weak_count **)&__src[8];
      if (*(_QWORD *)&__src[8])
      {
        v1452 = (unint64_t *)(*(_QWORD *)&__src[8] + 8);
        do
          v1453 = __ldaxr(v1452);
        while (__stlxr(v1453 - 1, v1452));
        if (!v1453)
        {
          ((void (*)(std::__shared_weak_count *))v1451->__on_zero_shared)(v1451);
          std::__shared_weak_count::__release_weak(v1451);
        }
      }
    }
  }
  if (*(_QWORD *)v1741 == *(_QWORD *)&v1741[8])
  {
    sub_239A444D4((uint64_t)"unknown file", 1567, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v1454 = *v1639 + 137;
  if (v1454 != (_QWORD *)v1741)
    sub_23945D3D0(v1454, *(char **)v1741, *(char **)&v1741[8], (uint64_t)(*(_QWORD *)&v1741[8] - *(_QWORD *)v1741) >> 3);
  v1455 = *(_QWORD *)v1860;
  if (*(_QWORD *)v1860)
  {
    v1456 = *(_QWORD *)&v1860[8];
    v1457 = *(void **)v1860;
    if (*(_QWORD *)&v1860[8] != *(_QWORD *)v1860)
    {
      do
      {
        v1458 = *(std::__shared_weak_count **)(v1456 - 8);
        if (v1458)
        {
          v1459 = (unint64_t *)&v1458->__shared_owners_;
          do
            v1460 = __ldaxr(v1459);
          while (__stlxr(v1460 - 1, v1459));
          if (!v1460)
          {
            ((void (*)(std::__shared_weak_count *))v1458->__on_zero_shared)(v1458);
            std::__shared_weak_count::__release_weak(v1458);
          }
        }
        v1456 -= 16;
      }
      while (v1456 != v1455);
      v1457 = *(void **)v1860;
    }
    *(_QWORD *)&v1860[8] = v1455;
    operator delete(v1457);
  }
  if (*(_QWORD *)v1741)
  {
    *(_QWORD *)&v1741[8] = *(_QWORD *)v1741;
    operator delete(*(void **)v1741);
  }
  v1461 = (char *)operator new(0x20uLL);
  *(_QWORD *)v1860 = v1461;
  *(_OWORD *)&v1860[8] = v1635;
  *(_OWORD *)v1461 = v1634[1];
  *(_OWORD *)(v1461 + 12) = v1634[0];
  v1461[28] = 0;
  *(_QWORD *)__src = operator new(0x28uLL);
  *(_OWORD *)&__src[8] = xmmword_239EC9F70;
  strcpy(*(char **)__src, "Photogrammetry_Meshing_Kernels.metallib");
  sub_239643810((uint64_t)v1860, (__int128 *)__src, 0, 0, (std::string *)v1741);
  if (!v1741[24])
    sub_2394875CC();
  v1462 = (uint64_t)(*v1639 + 140);
  if (*((char *)*v1639 + 1143) < 0)
    operator delete(*(void **)v1462);
  *(_OWORD *)v1462 = *(_OWORD *)v1741;
  *(_QWORD *)(v1462 + 16) = *(_QWORD *)&v1741[16];
  v1741[23] = 0;
  v1741[0] = 0;
  if ((__src[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__src);
    if ((v1860[23] & 0x80000000) == 0)
      goto LABEL_2674;
  }
  else if ((v1860[23] & 0x80000000) == 0)
  {
    goto LABEL_2674;
  }
  operator delete(*(void **)v1860);
LABEL_2674:
  memset(v1741, 0, 24);
  sub_2397A98A4(v1860);
  v1463 = *(uint64_t **)(v1638 + 40);
  for (jj = *(uint64_t **)(v1638 + 48); v1463 != jj; ++v1463)
  {
    v1465 = *v1463;
    if (*v1463 < (unint64_t)((uint64_t)(*(_QWORD *)&v1860[8] - *(_QWORD *)v1860) >> 4))
    {
      sub_23946D5E0(__src, *(_QWORD *)v1860 + 16 * v1465);
      v1466 = *(char **)&v1741[8];
      if (*(_QWORD *)&v1741[8] >= *(_QWORD *)&v1741[16])
      {
        v1468 = *(char **)v1741;
        v1469 = *(_QWORD *)&v1741[8] - *(_QWORD *)v1741;
        v1470 = (uint64_t)(*(_QWORD *)&v1741[8] - *(_QWORD *)v1741) >> 3;
        v1471 = v1470 + 1;
        if ((unint64_t)(v1470 + 1) >> 61)
          sub_2394189F8();
        v1472 = *(_QWORD *)&v1741[16] - *(_QWORD *)v1741;
        if ((uint64_t)(*(_QWORD *)&v1741[16] - *(_QWORD *)v1741) >> 2 > v1471)
          v1471 = v1472 >> 2;
        if ((unint64_t)v1472 >= 0x7FFFFFFFFFFFFFF8)
          v1473 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v1473 = v1471;
        if (v1473)
        {
          if (v1473 >> 61)
            sub_239418A80();
          v1474 = (char *)operator new(8 * v1473);
        }
        else
        {
          v1474 = 0;
        }
        v1475 = &v1474[8 * v1470];
        *(_QWORD *)v1475 = v1465;
        v1467 = v1475 + 8;
        if (v1466 != v1468)
        {
          v1476 = v1466 - 8 - v1468;
          if (v1476 < 0x58)
            goto LABEL_2991;
          if ((unint64_t)(v1466 - &v1474[v1469]) < 0x20)
            goto LABEL_2991;
          v1477 = (v1476 >> 3) + 1;
          v1478 = &v1474[v1469 - 16];
          v1479 = v1466 - 16;
          v1480 = v1477 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v1481 = *(_OWORD *)v1479;
            *((_OWORD *)v1478 - 1) = *((_OWORD *)v1479 - 1);
            *(_OWORD *)v1478 = v1481;
            v1478 -= 32;
            v1479 -= 32;
            v1480 -= 4;
          }
          while (v1480);
          v1475 -= 8 * (v1477 & 0x3FFFFFFFFFFFFFFCLL);
          v1466 -= 8 * (v1477 & 0x3FFFFFFFFFFFFFFCLL);
          if (v1477 != (v1477 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_2991:
            do
            {
              v1482 = *((_QWORD *)v1466 - 1);
              v1466 -= 8;
              *((_QWORD *)v1475 - 1) = v1482;
              v1475 -= 8;
            }
            while (v1466 != v1468);
          }
        }
        *(_QWORD *)v1741 = v1475;
        *(_QWORD *)&v1741[8] = v1467;
        *(_QWORD *)&v1741[16] = &v1474[8 * v1473];
        if (v1468)
          operator delete(v1468);
      }
      else
      {
        **(_QWORD **)&v1741[8] = v1465;
        v1467 = v1466 + 8;
      }
      *(_QWORD *)&v1741[8] = v1467;
      v1483 = *(std::__shared_weak_count **)&__src[8];
      if (*(_QWORD *)&__src[8])
      {
        v1484 = (unint64_t *)(*(_QWORD *)&__src[8] + 8);
        do
          v1485 = __ldaxr(v1484);
        while (__stlxr(v1485 - 1, v1484));
        if (!v1485)
        {
          ((void (*)(std::__shared_weak_count *))v1483->__on_zero_shared)(v1483);
          std::__shared_weak_count::__release_weak(v1483);
        }
      }
    }
  }
  if (*(_QWORD *)v1741 == *(_QWORD *)&v1741[8])
  {
    sub_239A444D4((uint64_t)"unknown file", 1596, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v1486 = *v1639 + 157;
  if (v1486 != (_QWORD *)v1741)
    sub_23945D3D0(v1486, *(char **)v1741, *(char **)&v1741[8], (uint64_t)(*(_QWORD *)&v1741[8] - *(_QWORD *)v1741) >> 3);
  v1487 = *(_QWORD *)v1860;
  if (*(_QWORD *)v1860)
  {
    v1488 = *(_QWORD *)&v1860[8];
    v1489 = *(void **)v1860;
    if (*(_QWORD *)&v1860[8] != *(_QWORD *)v1860)
    {
      do
      {
        v1490 = *(std::__shared_weak_count **)(v1488 - 8);
        if (v1490)
        {
          v1491 = (unint64_t *)&v1490->__shared_owners_;
          do
            v1492 = __ldaxr(v1491);
          while (__stlxr(v1492 - 1, v1491));
          if (!v1492)
          {
            ((void (*)(std::__shared_weak_count *))v1490->__on_zero_shared)(v1490);
            std::__shared_weak_count::__release_weak(v1490);
          }
        }
        v1488 -= 16;
      }
      while (v1488 != v1487);
      v1489 = *(void **)v1860;
    }
    *(_QWORD *)&v1860[8] = v1487;
    operator delete(v1489);
  }
  if (*(_QWORD *)v1741)
  {
    *(_QWORD *)&v1741[8] = *(_QWORD *)v1741;
    operator delete(*(void **)v1741);
  }
  v1493 = (char *)operator new(0x20uLL);
  *(_QWORD *)v1860 = v1493;
  *(_OWORD *)&v1860[8] = v1635;
  *(_OWORD *)v1493 = v1634[1];
  *(_OWORD *)(v1493 + 12) = v1634[0];
  v1493[28] = 0;
  *(_QWORD *)__src = operator new(0x30uLL);
  *(_OWORD *)&__src[8] = xmmword_239F0C1C0;
  strcpy(*(char **)__src, "Photogrammetry_Texturing_Kernels.metallib");
  sub_239643810((uint64_t)v1860, (__int128 *)__src, 0, 0, (std::string *)v1741);
  if (!v1741[24])
    sub_2394875CC();
  v1494 = (uint64_t)(*v1639 + 154);
  if (*((char *)*v1639 + 1255) < 0)
    operator delete(*(void **)v1494);
  *(_OWORD *)v1494 = *(_OWORD *)v1741;
  *(_QWORD *)(v1494 + 16) = *(_QWORD *)&v1741[16];
  v1741[23] = 0;
  v1741[0] = 0;
  if ((__src[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__src);
    if ((v1860[23] & 0x80000000) == 0)
      goto LABEL_2725;
  }
  else if ((v1860[23] & 0x80000000) == 0)
  {
    goto LABEL_2725;
  }
  operator delete(*(void **)v1860);
LABEL_2725:
  memset(v1741, 0, 24);
  sub_2397A98A4(v1860);
  v1495 = *(uint64_t **)(v1638 + 40);
  for (kk = *(uint64_t **)(v1638 + 48); v1495 != kk; ++v1495)
  {
    v1497 = *v1495;
    if (*v1495 < (unint64_t)((uint64_t)(*(_QWORD *)&v1860[8] - *(_QWORD *)v1860) >> 4))
    {
      sub_23946D5E0(__src, *(_QWORD *)v1860 + 16 * v1497);
      v1498 = *(char **)&v1741[8];
      if (*(_QWORD *)&v1741[8] >= *(_QWORD *)&v1741[16])
      {
        v1500 = *(char **)v1741;
        v1501 = *(_QWORD *)&v1741[8] - *(_QWORD *)v1741;
        v1502 = (uint64_t)(*(_QWORD *)&v1741[8] - *(_QWORD *)v1741) >> 3;
        v1503 = v1502 + 1;
        if ((unint64_t)(v1502 + 1) >> 61)
          sub_2394189F8();
        v1504 = *(_QWORD *)&v1741[16] - *(_QWORD *)v1741;
        if ((uint64_t)(*(_QWORD *)&v1741[16] - *(_QWORD *)v1741) >> 2 > v1503)
          v1503 = v1504 >> 2;
        if ((unint64_t)v1504 >= 0x7FFFFFFFFFFFFFF8)
          v1505 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v1505 = v1503;
        if (v1505)
        {
          if (v1505 >> 61)
            sub_239418A80();
          v1506 = (char *)operator new(8 * v1505);
        }
        else
        {
          v1506 = 0;
        }
        v1507 = &v1506[8 * v1502];
        *(_QWORD *)v1507 = v1497;
        v1499 = v1507 + 8;
        if (v1498 != v1500)
        {
          v1508 = v1498 - 8 - v1500;
          if (v1508 < 0x58)
            goto LABEL_2992;
          if ((unint64_t)(v1498 - &v1506[v1501]) < 0x20)
            goto LABEL_2992;
          v1509 = (v1508 >> 3) + 1;
          v1510 = &v1506[v1501 - 16];
          v1511 = v1498 - 16;
          v1512 = v1509 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v1513 = *(_OWORD *)v1511;
            *((_OWORD *)v1510 - 1) = *((_OWORD *)v1511 - 1);
            *(_OWORD *)v1510 = v1513;
            v1510 -= 32;
            v1511 -= 32;
            v1512 -= 4;
          }
          while (v1512);
          v1507 -= 8 * (v1509 & 0x3FFFFFFFFFFFFFFCLL);
          v1498 -= 8 * (v1509 & 0x3FFFFFFFFFFFFFFCLL);
          if (v1509 != (v1509 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_2992:
            do
            {
              v1514 = *((_QWORD *)v1498 - 1);
              v1498 -= 8;
              *((_QWORD *)v1507 - 1) = v1514;
              v1507 -= 8;
            }
            while (v1498 != v1500);
          }
        }
        *(_QWORD *)v1741 = v1507;
        *(_QWORD *)&v1741[8] = v1499;
        *(_QWORD *)&v1741[16] = &v1506[8 * v1505];
        if (v1500)
          operator delete(v1500);
      }
      else
      {
        **(_QWORD **)&v1741[8] = v1497;
        v1499 = v1498 + 8;
      }
      *(_QWORD *)&v1741[8] = v1499;
      v1515 = *(std::__shared_weak_count **)&__src[8];
      if (*(_QWORD *)&__src[8])
      {
        v1516 = (unint64_t *)(*(_QWORD *)&__src[8] + 8);
        do
          v1517 = __ldaxr(v1516);
        while (__stlxr(v1517 - 1, v1516));
        if (!v1517)
        {
          ((void (*)(std::__shared_weak_count *))v1515->__on_zero_shared)(v1515);
          std::__shared_weak_count::__release_weak(v1515);
        }
      }
    }
  }
  if (*(_QWORD *)v1741 == *(_QWORD *)&v1741[8])
  {
    sub_239A444D4((uint64_t)"unknown file", 1630, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v1518 = *v1639 + 222;
  if (v1518 != (_QWORD *)v1741)
    sub_23945D3D0(v1518, *(char **)v1741, *(char **)&v1741[8], (uint64_t)(*(_QWORD *)&v1741[8] - *(_QWORD *)v1741) >> 3);
  v1519 = *(_QWORD *)v1860;
  if (*(_QWORD *)v1860)
  {
    v1520 = *(_QWORD *)&v1860[8];
    v1521 = *(void **)v1860;
    if (*(_QWORD *)&v1860[8] != *(_QWORD *)v1860)
    {
      do
      {
        v1522 = *(std::__shared_weak_count **)(v1520 - 8);
        if (v1522)
        {
          v1523 = (unint64_t *)&v1522->__shared_owners_;
          do
            v1524 = __ldaxr(v1523);
          while (__stlxr(v1524 - 1, v1523));
          if (!v1524)
          {
            ((void (*)(std::__shared_weak_count *))v1522->__on_zero_shared)(v1522);
            std::__shared_weak_count::__release_weak(v1522);
          }
        }
        v1520 -= 16;
      }
      while (v1520 != v1519);
      v1521 = *(void **)v1860;
    }
    *(_QWORD *)&v1860[8] = v1519;
    operator delete(v1521);
  }
  if (*(_QWORD *)v1741)
  {
    *(_QWORD *)&v1741[8] = *(_QWORD *)v1741;
    operator delete(*(void **)v1741);
  }
  v1525 = (char *)operator new(0x20uLL);
  *(_QWORD *)v1860 = v1525;
  *(_OWORD *)&v1860[8] = v1635;
  *(_OWORD *)v1525 = v1634[1];
  *(_OWORD *)(v1525 + 12) = v1634[0];
  v1525[28] = 0;
  *(_QWORD *)__src = operator new(0x28uLL);
  *(_OWORD *)&__src[8] = xmmword_239F0C1D0;
  strcpy(*(char **)__src, "ComputerVision_Tess_Kernels.metallib");
  sub_239643810((uint64_t)v1860, (__int128 *)__src, 0, 0, (std::string *)v1741);
  if (!v1741[24])
    sub_2394875CC();
  v1526 = (uint64_t)(*v1639 + 225);
  if (*((char *)*v1639 + 1823) < 0)
    operator delete(*(void **)v1526);
  *(_OWORD *)v1526 = *(_OWORD *)v1741;
  *(_QWORD *)(v1526 + 16) = *(_QWORD *)&v1741[16];
  v1741[23] = 0;
  v1741[0] = 0;
  if ((__src[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__src);
    if ((v1860[23] & 0x80000000) == 0)
      goto LABEL_2776;
  }
  else if ((v1860[23] & 0x80000000) == 0)
  {
    goto LABEL_2776;
  }
  operator delete(*(void **)v1860);
LABEL_2776:
  v1527 = *v1636;
  if (!*(_BYTE *)(*v1636 + 4))
    goto LABEL_2873;
  v1847[0] = *(_BYTE *)(v1638 + 24);
  *(_QWORD *)&v1847[4] = *(_QWORD *)(v1638 + 72);
  v1847[12] = *(_BYTE *)(v1638 + 34);
  *(_DWORD *)&v1847[16] = *(_DWORD *)(v1638 + 28);
  *(_OWORD *)&v1847[20] = *(_OWORD *)(v1638 + 144);
  *(_QWORD *)&v1847[36] = *(_QWORD *)(v1638 + 160);
  *(_DWORD *)&v1847[44] = *(_DWORD *)(v1638 + 168);
  sub_2396F295C((uint64_t *)(v1527 + 56), v1527 + 8, (uint64_t)v1714);
  kdebug_trace();
  v1528 = MEMORY[0x24BEDB840];
  v1529 = MEMORY[0x24BEDB840] + 64;
  v1530 = (_QWORD *)MEMORY[0x24BEDB7E8];
  v1531 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v1532 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v1768 = MEMORY[0x24BEDB840] + 64;
  *(_QWORD *)v1741 = v1531;
  *(_QWORD *)&v1741[*(_QWORD *)(v1531 - 24)] = v1532;
  v1533 = (std::ios_base *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)];
  std::ios_base::init(v1533, &v1741[8]);
  v1533[1].__vftable = 0;
  v1533[1].__fmtflags_ = -1;
  *(_QWORD *)v1741 = v1528 + 24;
  v1768 = v1529;
  MEMORY[0x23B83DC80](&v1741[8]);
  std::ofstream::open();
  if ((v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24) + 32] & 5) != 0)
  {
    v1534 = 0;
    goto LABEL_2867;
  }
  HIBYTE(v1717[2]) = 18;
  strcpy((char *)v1717, "CorePhotogrammetry");
  sub_2395AC84C(v1717, &v1719);
  *(_QWORD *)&v1635 = &v1861;
  v1535 = MEMORY[0x24BEDB870];
  v1536 = MEMORY[0x24BEDB870] + 64;
  v1537 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
  v1538 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  v1861 = MEMORY[0x24BEDB870] + 64;
  *(_QWORD *)v1860 = v1537;
  *(_QWORD *)&v1860[*(_QWORD *)(v1537 - 24)] = v1538;
  v1539 = (std::ios_base *)&v1860[*(_QWORD *)(*(_QWORD *)v1860 - 24)];
  std::ios_base::init(v1539, &v1860[8]);
  v1539[1].__vftable = 0;
  v1539[1].__fmtflags_ = -1;
  *(_QWORD *)v1860 = v1535 + 24;
  v1861 = v1536;
  std::streambuf::basic_streambuf();
  *(_QWORD *)&v1860[8] = MEMORY[0x24BEDB848] + 16;
  memset(&v1860[72], 0, 32);
  *(_DWORD *)&v1860[104] = 16;
  sub_2396157EC((uint64_t)__src, 1);
  *(_QWORD *)task_info_outCnt = &v1847[4];
  v1671.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)&v1847[8];
  strcpy((char *)v1712, "+J^_DFJX@BELtNEJIGNO");
  sub_2396EFB50((uint64_t)v1712, *(int32x4_t *)"+J^_DFJX@BELtNEJIGNO", v1540, v1541, v1542);
  v1544 = v1543;
  v1545 = strlen(v1543);
  if (v1545 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v1546 = v1545;
  if (v1545 >= 0x17)
  {
    v1548 = (v1545 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v1545 | 7) != 0x17)
      v1548 = v1545 | 7;
    v1549 = v1548 + 1;
    v1547 = (std::string *)operator new(v1548 + 1);
    __dst.__r_.__value_.__r.__words[2] = v1549 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v1547;
    __dst.__r_.__value_.__l.__size_ = v1546;
    goto LABEL_2792;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v1545;
  v1547 = &__dst;
  if (v1545)
LABEL_2792:
    memmove(v1547, v1544, v1546);
  v1547->__r_.__value_.__s.__data_[v1546] = 0;
  v1550 = (_QWORD *)operator new();
  *v1550 = &off_250AFFEA8;
  v1550[1] = v1847;
  sub_23961580C((uint64_t)__src, (uint64_t)&__dst, (uint64_t)v1550);
  *(_OWORD *)__p = xmmword_239F0CF02;
  *(_OWORD *)&__p[14] = *(__int128 *)((char *)&xmmword_239F0CF02 + 14);
  sub_2396F0EE8((uint64_t)__p, *(int32x4_t *)((char *)&xmmword_239F0CF02 + 14), v1551, v1552, v1553);
  v1555 = v1554;
  v1556 = strlen(v1554);
  if (v1556 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v1557 = v1556;
  if (v1556 >= 0x17)
  {
    v1559 = (v1556 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v1556 | 7) != 0x17)
      v1559 = v1556 | 7;
    v1560 = v1559 + 1;
    v1558 = operator new(v1559 + 1);
    *(_QWORD *)&v1732[16] = v1560 | 0x8000000000000000;
    *(_QWORD *)v1732 = v1558;
    *(_QWORD *)&v1732[8] = v1557;
    goto LABEL_2800;
  }
  v1732[23] = v1556;
  v1558 = v1732;
  if (v1556)
LABEL_2800:
    memmove(v1558, v1555, v1557);
  v1558[v1557] = 0;
  v1561 = (_QWORD *)operator new();
  *v1561 = &off_250AF2FA0;
  v1561[1] = task_info_outCnt;
  sub_23961580C((uint64_t)__src, (uint64_t)v1732, (uint64_t)v1561);
  *(_OWORD *)v1682 = xmmword_239F0CF20;
  *(_QWORD *)&v1682[13] = 0x7D617F516A6F6BLL;
  sub_2396EFB50((uint64_t)v1682, (int32x4_t)xmmword_239F0CF20, v1562, v1563, v1564);
  v1566 = v1565;
  v1567 = strlen(v1565);
  if (v1567 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v1568 = (void *)v1567;
  if (v1567 >= 0x17)
  {
    v1570 = (v1567 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v1567 | 7) != 0x17)
      v1570 = v1567 | 7;
    v1571 = v1570 + 1;
    v1569 = operator new(v1570 + 1);
    *(_QWORD *)&v1676 = v1571 | 0x8000000000000000;
    v1675[0] = v1569;
    v1675[1] = v1568;
    goto LABEL_2808;
  }
  BYTE7(v1676) = v1567;
  v1569 = v1675;
  if (v1567)
LABEL_2808:
    memmove(v1569, v1566, (size_t)v1568);
  *((_BYTE *)v1568 + (_QWORD)v1569) = 0;
  v1572 = (_QWORD *)operator new();
  *v1572 = &off_250AF2FD0;
  v1572[1] = &v1671;
  sub_23961580C((uint64_t)__src, (uint64_t)v1675, (uint64_t)v1572);
  *(_OWORD *)v1680 = xmmword_239F0CF35;
  strcpy(&v1680[15], "25<");
  sub_23958E450((uint64_t)v1680, (int32x4_t)xmmword_239F0CF35, v1573, v1574, v1575);
  v1577 = v1576;
  v1578 = strlen(v1576);
  if (v1578 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v1579 = v1578;
  if (v1578 >= 0x17)
  {
    v1581 = (v1578 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v1578 | 7) != 0x17)
      v1581 = v1578 | 7;
    v1582 = v1581 + 1;
    v1580 = (__int128 *)operator new(v1581 + 1);
    v1858 = v1582 | 0x8000000000000000;
    *(_QWORD *)&v1857 = v1580;
    *((_QWORD *)&v1857 + 1) = v1579;
    goto LABEL_2816;
  }
  HIBYTE(v1858) = v1578;
  v1580 = &v1857;
  if (v1578)
LABEL_2816:
    memmove(v1580, v1577, v1579);
  *((_BYTE *)v1580 + v1579) = 0;
  v1583 = (_QWORD *)operator new();
  *v1583 = &off_250AFFEA8;
  v1583[1] = &v1847[12];
  sub_23961580C((uint64_t)__src, (uint64_t)&v1857, (uint64_t)v1583);
  *(_OWORD *)&v1678.__r_.__value_.__l.__data_ = xmmword_239F0CF62;
  v1678.__r_.__value_.__s.__data_[16] = 0;
  sub_2396EFA24((uint64_t)&v1678);
  v1585 = v1584;
  v1586 = strlen(v1584);
  if (v1586 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v1587 = (void *)v1586;
  if (v1586 >= 0x17)
  {
    v1589 = (v1586 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v1586 | 7) != 0x17)
      v1589 = v1586 | 7;
    v1590 = v1589 + 1;
    v1588 = operator new(v1589 + 1);
    v1728 = v1590 | 0x8000000000000000;
    v1727[0] = v1588;
    v1727[1] = v1587;
    goto LABEL_2824;
  }
  HIBYTE(v1728) = v1586;
  v1588 = v1727;
  if (v1586)
LABEL_2824:
    memmove(v1588, v1585, (size_t)v1587);
  *((_BYTE *)v1587 + (_QWORD)v1588) = 0;
  v1591 = (_QWORD *)operator new();
  *v1591 = &off_250AF3000;
  v1591[1] = &v1847[16];
  sub_23961580C((uint64_t)__src, (uint64_t)v1727, (uint64_t)v1591);
  strcpy((char *)v1856, "+XMFtD[_BDEX");
  v1592 = sub_239510ECC((uint64_t)v1856);
  v1593 = strlen(v1592);
  if (v1593 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v1594 = v1593;
  if (v1593 >= 0x17)
  {
    v1596 = (v1593 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v1593 | 7) != 0x17)
      v1596 = v1593 | 7;
    v1597 = v1596 + 1;
    v1595 = operator new(v1596 + 1);
    v1725 = v1597 | 0x8000000000000000;
    v1723 = v1595;
    v1724 = v1594;
    goto LABEL_2832;
  }
  HIBYTE(v1725) = v1593;
  v1595 = &v1723;
  if (v1593)
LABEL_2832:
    memmove(v1595, v1592, v1594);
  *((_BYTE *)v1595 + v1594) = 0;
  v1598 = (_QWORD *)operator new();
  *v1598 = &off_250AF3030;
  v1598[1] = &v1847[20];
  sub_23961580C((uint64_t)__src, (uint64_t)&v1723, (uint64_t)v1598);
  v1599 = (_QWORD *)MEMORY[0x24BEDB800];
  if (SHIBYTE(v1725) < 0)
  {
    operator delete(v1723);
    if ((SHIBYTE(v1728) & 0x80000000) == 0)
    {
LABEL_2835:
      if ((SHIBYTE(v1858) & 0x80000000) == 0)
        goto LABEL_2836;
      goto LABEL_2886;
    }
  }
  else if ((SHIBYTE(v1728) & 0x80000000) == 0)
  {
    goto LABEL_2835;
  }
  operator delete(v1727[0]);
  if ((SHIBYTE(v1858) & 0x80000000) == 0)
  {
LABEL_2836:
    if ((SBYTE7(v1676) & 0x80000000) == 0)
      goto LABEL_2837;
    goto LABEL_2887;
  }
LABEL_2886:
  operator delete((void *)v1857);
  if ((SBYTE7(v1676) & 0x80000000) == 0)
  {
LABEL_2837:
    if ((v1732[23] & 0x80000000) == 0)
      goto LABEL_2838;
LABEL_2888:
    operator delete(*(void **)v1732);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_2839;
LABEL_2889:
    operator delete(__dst.__r_.__value_.__l.__data_);
    goto LABEL_2839;
  }
LABEL_2887:
  operator delete(v1675[0]);
  if ((v1732[23] & 0x80000000) != 0)
    goto LABEL_2888;
LABEL_2838:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_2889;
LABEL_2839:
  sub_2395902F0((uint64_t)__src, v1860);
  v1600 = *(_QWORD **)&__src[16];
  if (*(_QWORD *)&__src[16])
  {
    do
    {
      v1601 = v1600[5];
      if (v1601)
        (*(void (**)(uint64_t))(*(_QWORD *)v1601 + 8))(v1601);
      v1600 = (_QWORD *)*v1600;
    }
    while (v1600);
    v1602 = *(void ***)&__src[16];
    if (*(_QWORD *)&__src[16])
    {
      do
      {
        v1613 = (void **)*v1602;
        if (*((char *)v1602 + 39) < 0)
          operator delete(v1602[2]);
        operator delete(v1602);
        v1602 = v1613;
      }
      while (v1613);
    }
  }
  v1603 = *(void **)__src;
  *(_QWORD *)__src = 0;
  if (v1603)
    operator delete(v1603);
  std::stringbuf::str();
  sub_2395ABE70((const void **)__p, (uint64_t)&v1719, (uint64_t)__src);
  if ((__p[23] & 0x80000000) != 0)
    operator delete(*(void **)__p);
  v1534 = __src[24] != 0;
  if (__src[24])
  {
    v1604 = __src[23] >= 0 ? __src : *(_BYTE **)__src;
    v1605 = __src[23] >= 0 ? __src[23] : *(_QWORD *)&__src[8];
    sub_239458500(v1741, (uint64_t)v1604, v1605);
    if (__src[24])
    {
      if ((__src[23] & 0x80000000) != 0)
        operator delete(*(void **)__src);
    }
  }
  *(_QWORD *)v1860 = *v1599;
  *(_QWORD *)&v1860[*(_QWORD *)(*(_QWORD *)v1860 - 24)] = v1599[3];
  *(_QWORD *)&v1860[8] = MEMORY[0x24BEDB848] + 16;
  if ((v1860[95] & 0x80000000) != 0)
    operator delete(*(void **)&v1860[72]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v1635);
  if (v1719)
  {
    v1720 = (size_t)v1719;
    operator delete(v1719);
  }
  if (SHIBYTE(v1717[2]) < 0)
    operator delete((void *)v1717[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)], *(_DWORD *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24) + 32] | 4);
LABEL_2867:
  *(_QWORD *)v1741 = *v1530;
  *(_QWORD *)&v1741[*(_QWORD *)(*(_QWORD *)v1741 - 24)] = v1530[3];
  MEMORY[0x23B83DC8C](&v1741[8]);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](&v1768);
  kdebug_trace();
  if (!v1534)
    goto LABEL_2870;
  v1606 = (char *)(v1527 + 896);
  if (*(_BYTE *)(v1527 + 920))
  {
    sub_239A70694((uint64_t)v1606, *(std::string **)(v1527 + 56), *(std::string **)(v1527 + 64), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v1527 + 64) - *(_QWORD *)(v1527 + 56)) >> 3));
LABEL_2870:
    if ((SHIBYTE(v1715) & 0x80000000) == 0)
      goto LABEL_2872;
    goto LABEL_2871;
  }
  *(_QWORD *)v1606 = 0;
  *(_QWORD *)(v1527 + 904) = 0;
  *(_QWORD *)(v1527 + 912) = 0;
  sub_239490944(v1606, *(_QWORD *)(v1527 + 56), *(_QWORD *)(v1527 + 64), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v1527 + 64) - *(_QWORD *)(v1527 + 56)) >> 3));
  *(_BYTE *)(v1527 + 920) = 1;
  if (SHIBYTE(v1715) < 0)
LABEL_2871:
    operator delete(v1714[0]);
LABEL_2872:
  if (!v1534)
  {
    v1625 = (std::runtime_error *)__cxa_allocate_exception(0x18uLL);
    sub_23941A4FC(v1741, "Failed to save files");
    std::runtime_error::runtime_error(v1625, (const std::string *)v1741);
    v1625->__vftable = (std::runtime_error_vtbl *)&off_250AF79D0;
    LODWORD(v1625[1].__vftable) = 1;
    __cxa_throw(v1625, (struct type_info *)&unk_250AF7A30, (void (*)(void *))std::runtime_error::~runtime_error);
  }
LABEL_2873:
  v1607 = v1637;
  v1637[17] = dispatch_queue_create("com.apple.CorePhotogrammetry.session.operation", 0);
  v1608 = dispatch_queue_create("com.apple.CorePhotogrammetry.session.processing", 0);
  v1607[18] = v1608;
  v1609 = dispatch_queue_create_with_target_V2("com.apple.CorePhotogrammetry.session.input", 0, v1608);
  v1610 = 0;
  v1607[19] = v1609;
  v1611 = *(_DWORD *)(v1638 + 72);
  if (v1611)
  {
    if (v1611 != 1)
    {
      sub_239A444D4((uint64_t)"unknown file", 1666, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v1610 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_UTILITY, 0);
  }
  v1607[20] = dispatch_queue_create_with_target_V2("com.apple.CorePhotogrammetry.session.recon", v1610, (dispatch_queue_t)v1607[18]);
  return v1607;
}

void sub_239B7EFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, _QWORD *a14, void **a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,std::__shared_weak_count *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a72;
  void *v73;
  void *v74;
  void **v75;
  uint64_t v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;

  if (LOBYTE(STACK[0x588]) && SLOBYTE(STACK[0x587]) < 0)
    operator delete((void *)STACK[0x570]);
  if (SLOBYTE(STACK[0x287]) < 0)
  {
    operator delete((void *)STACK[0x270]);
    v73 = (void *)STACK[0xCD8];
    if (STACK[0xCD8])
      goto LABEL_6;
  }
  else
  {
    v73 = (void *)STACK[0xCD8];
    if (STACK[0xCD8])
    {
LABEL_6:
      STACK[0xCE0] = (unint64_t)v73;
      operator delete(v73);
      if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0)
        goto LABEL_11;
LABEL_10:
      operator delete((void *)STACK[0x220]);
LABEL_11:
      sub_23955CB90(&STACK[0x6A0]);
      sub_239A4D7C0((uint64_t)&a72);
      if (SLOBYTE(STACK[0x21F]) < 0)
        operator delete((void *)STACK[0x208]);
      sub_239A4D7C0((uint64_t)&a41);
      if (LOBYTE(STACK[0x3D0]))
      {
        v74 = (void *)STACK[0x340];
        if (STACK[0x340])
        {
          STACK[0x348] = (unint64_t)v74;
          operator delete(v74);
        }
      }
      if (a52 < 0)
        operator delete(a47);
      if (*(char *)(a38 + 247) < 0)
        operator delete(*a13);
      sub_2396C9F80(a14);
      sub_2394631DC(a15);
      v75 = *(void ***)(a38 + 128);
      if (v75 == a15 - 8)
      {
        v76 = 4;
        v75 = a15 - 8;
      }
      else
      {
        if (!v75)
          goto LABEL_25;
        v76 = 5;
      }
      (*((void (**)(void))*v75 + v76))();
LABEL_25:
      v77 = *(void ***)(a38 + 96);
      if (v77 == a15 - 12)
      {
        v78 = 4;
        v77 = a15 - 12;
        v79 = a38;
      }
      else
      {
        v79 = a38;
        if (!v77)
          goto LABEL_30;
        v78 = 5;
      }
      (*((void (**)(void))*v77 + v78))();
LABEL_30:
      sub_239416DA0(a38 + 56);
      sub_239A4D7C0(v79 + 40);
      sub_239A4D7C0(a40);
      sub_239A4D7C0(a37);
      _Unwind_Resume(a1);
    }
  }
  if ((SLOBYTE(STACK[0x237]) & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

_QWORD *sub_239B82554@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  _QWORD v10[3];
  _QWORD *v11;
  _QWORD v12[3];
  _QWORD *v13;
  _QWORD v14[3];
  _QWORD *v15;
  _QWORD v16[3];
  _QWORD *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if ((sub_2399FCB60() & 1) == 0)
  {
    sub_239A444D4((uint64_t)"unknown file", 2323, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v16[0] = &off_250AFAE68;
  v17 = v16;
  v15 = v14;
  v13 = v12;
  v14[0] = &off_250AFAEB0;
  v11 = v10;
  v12[0] = &off_250AFAE68;
  v10[0] = &off_250AFAEB0;
  sub_2399FDF04(v12, v10, a1);
  v2 = v11;
  if (v11 == v10)
  {
    v3 = 4;
    v2 = v10;
  }
  else
  {
    if (!v11)
      goto LABEL_7;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_7:
  v4 = v13;
  if (v13 == v12)
  {
    v5 = 4;
    v4 = v12;
  }
  else
  {
    if (!v13)
      goto LABEL_12;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_12:
  if (!*a1)
  {
    sub_239A444D4((uint64_t)"unknown file", 2340, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_2399FE464((std::recursive_mutex ***)*a1, 3);
  if (sub_2399FE3FC())
    sub_2399FE6B0((std::recursive_mutex ***)*a1);
  v6 = v15;
  if (v15 == v14)
  {
    v7 = 4;
    v6 = v14;
  }
  else
  {
    if (!v15)
      goto LABEL_20;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_20:
  result = v17;
  if (v17 == v16)
  {
    v9 = 4;
    result = v16;
  }
  else
  {
    if (!v17)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_239B82728(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17, char a18, uint64_t a19, uint64_t a20,char *a21)
{
  uint64_t v21;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v23 = a13;
  if (a13 == &a10)
  {
    v24 = 4;
    v23 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v24 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v23 + 8 * v24))();
LABEL_6:
  v25 = a17;
  if (a17 == &a14)
  {
    v26 = 4;
    v25 = &a14;
  }
  else
  {
    if (!a17)
      goto LABEL_11;
    v26 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v25 + 8 * v26))();
LABEL_11:
  v27 = a21;
  if (a21 == &a18)
  {
    v28 = 4;
    v27 = &a18;
  }
  else
  {
    if (!a21)
      goto LABEL_16;
    v28 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v27 + 8 * v28))();
LABEL_16:
  v29 = *(_QWORD **)(v21 - 32);
  if (v29 == (_QWORD *)(v21 - 56))
  {
    v30 = 4;
    v29 = (_QWORD *)(v21 - 56);
  }
  else
  {
    if (!v29)
      goto LABEL_21;
    v30 = 5;
  }
  (*(void (**)(void))(*v29 + 8 * v30))();
LABEL_21:
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B82804(uint64_t a1, uint64_t *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  pthread_rwlock_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  char *v34;
  _DWORD *v35;
  unsigned int v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  std::__shared_weak_count *v51;
  unint64_t *p_shared_owners;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  _QWORD v62[3];
  _QWORD *v63;
  uint64_t v64;
  _BYTE v65[24];
  _BYTE *v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v7 = *a2;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = a1 + 56;
  *(_QWORD *)(a1 + 64) = a1 + 56;
  *(_OWORD *)(a1 + 72) = xmmword_239EC69E0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)a1 = &off_250AF8E00;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 240) = a2[2];
  v8 = a2[3];
  *(_QWORD *)(a1 + 248) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = (uint64_t *)(a1 + 256);
  *(_OWORD *)(a1 + 304) = 0uLL;
  *(_OWORD *)(a1 + 320) = 0uLL;
  v60 = (uint64_t *)(a1 + 256);
  v61 = (uint64_t *)(a1 + 272);
  v12 = (_QWORD *)(a1 + 288);
  v13 = (_QWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 272) = 0uLL;
  *(_OWORD *)(a1 + 288) = 0uLL;
  *(_OWORD *)(a1 + 256) = 0uLL;
  *(_DWORD *)(a1 + 336) = 1065353216;
  sub_2397A1618((pthread_mutex_t *)(a1 + 344));
  if (!*v12)
  {
    v34 = (char *)operator new(0x108uLL);
    *((_DWORD *)v34 + 6) = 0x7FFFFFFF;
    v35 = v34 + 24;
    *(_OWORD *)(v34 + 8) = 0u;
    *((_OWORD *)v34 + 2) = 0u;
    *(_QWORD *)v34 = &off_250AF8E40;
    *((_OWORD *)v34 + 3) = 0u;
    *((_OWORD *)v34 + 4) = 0u;
    v34[80] = 0;
    *(_OWORD *)(v34 + 88) = 0u;
    sub_2397A1618((pthread_mutex_t *)(v34 + 200));
    v36 = *((_DWORD *)v34 + 6);
    if (v36 >= 0x7FFFFFFF)
    {
      v36 = 0x7FFFFFFF;
      *v35 = 0x7FFFFFFF;
    }
    else if (v36 < 2)
    {
      v36 = 1;
    }
    *((_DWORD *)v34 + 6) = v36;
    pthread_cond_init((pthread_cond_t *)(v34 + 104), 0);
    pthread_cond_init((pthread_cond_t *)(v34 + 152), 0);
    v51 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = v35;
    *(_QWORD *)(a1 + 296) = v34;
    v11 = v60;
    if (v51)
    {
      p_shared_owners = (unint64_t *)&v51->__shared_owners_;
      do
        v53 = __ldaxr(p_shared_owners);
      while (__stlxr(v53 - 1, p_shared_owners));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
  }
  if (!*v11)
  {
    v14 = operator new(0x120uLL);
    v14[1] = 0;
    v14[2] = 0;
    *v14 = &off_250AE9800;
    v15 = sub_2397A1740((uint64_t)(v14 + 3));
    v16 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = v15;
    *(_QWORD *)(a1 + 264) = v14;
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v19 = *v11;
    v20 = (pthread_rwlock_t *)(*v11 + 24);
    j__pthread_rwlock_wrlock(v20);
    *(_BYTE *)(v19 + 16) = 1;
    j__pthread_rwlock_unlock(v20);
    sub_2397A195C(v19);
    v21 = (_QWORD *)operator new();
    *v21 = &off_250AF8E78;
    v21[1] = a1;
    *(_QWORD *)(v19 + 224) = v21;
    sub_2397A1878((pthread_t *)v19);
  }
  if (!*v61)
  {
    v22 = *(_QWORD *)(a1 + 240);
    v23 = *(_QWORD *)(a1 + 248);
    if (v23)
    {
      v24 = (unint64_t *)(v23 + 8);
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
    }
    v26 = *(std::__shared_weak_count **)(a1 + 280);
    *(_QWORD *)(a1 + 272) = v22;
    *(_QWORD *)(a1 + 280) = v23;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
      v22 = *v61;
    }
    if (!v22)
    {
      v54 = *(_QWORD *)(a1 + 232);
      v55 = operator new(0x178uLL);
      v55[1] = 0;
      v55[2] = 0;
      *v55 = &off_250ADB8B0;
      v56 = sub_2397A2A50((uint64_t)(v55 + 3), v54, 0);
      v57 = *(std::__shared_weak_count **)(a1 + 280);
      *(_QWORD *)(a1 + 272) = v56;
      *(_QWORD *)(a1 + 280) = v55;
      if (v57)
      {
        v58 = (unint64_t *)&v57->__shared_owners_;
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
    }
  }
  sub_239467C88(a1);
  if (*(_QWORD *)(a1 + 328))
  {
    v29 = *(_QWORD **)(a1 + 320);
    if (v29)
    {
      do
      {
        v30 = (_QWORD *)*v29;
        operator delete(v29);
        v29 = v30;
      }
      while (v30);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v31 = *(_QWORD *)(a1 + 312);
    if (v31)
    {
      for (i = 0; i != v31; ++i)
        *(_QWORD *)(*v13 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  v33 = a3[3];
  if (!v33)
    goto LABEL_33;
  if ((_QWORD *)v33 != a3)
  {
    v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
LABEL_33:
    v63 = (_QWORD *)v33;
    goto LABEL_38;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v62);
LABEL_38:
  v64 = a1;
  v66 = 0;
  v37 = operator new(0x30uLL);
  *v37 = &off_250AF9118;
  v38 = (uint64_t)v63;
  if (!v63)
  {
LABEL_41:
    v37[4] = v38;
    goto LABEL_43;
  }
  if (v63 != v62)
  {
    v38 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_41;
  }
  v37[4] = v37 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_43:
  v37[5] = v64;
  v66 = v37;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v39 = v66;
  if (v66 == v65)
  {
    v40 = 4;
    v39 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_51;
    v40 = 5;
  }
  (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_51:
  v41 = v63;
  if (v63 == v62)
  {
    v42 = 4;
    v41 = v62;
  }
  else
  {
    if (!v63)
      goto LABEL_56;
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_56:
  v43 = a4[3];
  if (!v43)
  {
LABEL_59:
    v63 = (_QWORD *)v43;
    goto LABEL_61;
  }
  if ((_QWORD *)v43 != a4)
  {
    v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 16))(v43);
    goto LABEL_59;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a4 + 24))(a4, v62);
LABEL_61:
  v64 = a1;
  v66 = 0;
  v44 = operator new(0x30uLL);
  *v44 = &off_250AF9160;
  v45 = (uint64_t)v63;
  if (!v63)
  {
LABEL_64:
    v44[4] = v45;
    goto LABEL_66;
  }
  if (v63 != v62)
  {
    v45 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_64;
  }
  v44[4] = v44 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_66:
  v44[5] = v64;
  v66 = v44;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v46 = v66;
  if (v66 == v65)
  {
    v47 = 4;
    v46 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_74;
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
LABEL_74:
  v48 = v63;
  if (v63 == v62)
  {
    v49 = 4;
    v48 = v62;
    goto LABEL_78;
  }
  if (v63)
  {
    v49 = 5;
LABEL_78:
    (*(void (**)(void))(*v48 + 8 * v49))();
  }
  return a1;
}

void sub_239B82E8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _QWORD **v22;
  uint64_t v23;
  pthread_mutex_t *v24;
  std::__shared_weak_count *v25;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  std::__shared_weak_count::~__shared_weak_count(v25);
  operator delete(v27);
  sub_2397A163C(v24);
  sub_239420950(v23);
  sub_239A4D7C0(a10);
  sub_239416DA0(a12);
  sub_239416DA0(a11);
  sub_239A74534(v21 + 224);
  v28 = *v22;
  if (*v22 == (_QWORD *)(v21 + 176))
  {
    v29 = 4;
    v28 = (_QWORD *)(v21 + 176);
  }
  else
  {
    if (!v28)
      goto LABEL_6;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_6:
  v30 = *(_QWORD **)(v21 + 168);
  if (v30 == (_QWORD *)(v21 + 144))
  {
    v31 = 4;
    v30 = (_QWORD *)(v21 + 144);
  }
  else
  {
    if (!v30)
      goto LABEL_11;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_11:
  sub_239B6B270(v21);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B83060(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD v8[3];
  _QWORD *v9;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &off_250AF83E8;
  v9 = 0;
  v11 = 0;
  sub_239B07D6C((uint64_t)(a1 + 3), a2, v8, v10);
  v3 = v11;
  if (v11 == v10)
  {
    v4 = 4;
    v3 = v10;
  }
  else
  {
    if (!v11)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = v9;
  if (v9 == v8)
  {
    v6 = 4;
    v5 = v8;
    goto LABEL_10;
  }
  if (v9)
  {
    v6 = 5;
LABEL_10:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }
  return a1;
}

void sub_239B83138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17)
{
  std::__shared_weak_count *v17;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v19 = a17;
  if (a17 == &a14)
  {
    v20 = 4;
    v19 = &a14;
  }
  else
  {
    if (!a17)
      goto LABEL_6;
    v20 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v19 + 8 * v20))();
LABEL_6:
  v21 = a13;
  if (a13 == &a10)
  {
    v22 = 4;
    v21 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_11;
    v22 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v21 + 8 * v22))();
LABEL_11:
  std::__shared_weak_count::~__shared_weak_count(v17);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B831AC(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_239B83314(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

uint64_t sub_239B83320(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
      return a1;
LABEL_5:
    operator delete(*(void **)a1);
    return a1;
  }
  if (*(char *)(a1 + 23) < 0)
    goto LABEL_5;
  return a1;
}

_QWORD *sub_239B8336C(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_239B834D4(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

_QWORD *sub_239B834E0(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_239B83648(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

uint64_t sub_239B83654(uint64_t a1)
{
  if (*(char *)(a1 + 79) < 0)
  {
    operator delete(*(void **)(a1 + 56));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
LABEL_5:
    operator delete(*(void **)(a1 + 8));
    return a1;
  }
  if (*(char *)(a1 + 31) < 0)
    goto LABEL_5;
  return a1;
}

_QWORD *sub_239B836A0(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_239B83808(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

void sub_239B83818()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B8382C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AFABD8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B83864(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AFABD8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B83884(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 + 56);
  v6 = *(std::__shared_weak_count **)(v4 + 64);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v17 = 0;
    v18 = v5;
    v19 = v6;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v17 = 0;
    v18 = v5;
    v19 = 0;
  }
  v16 = v3;
  v17 = (int)std::thread::hardware_concurrency();
  v10 = operator new(0x1B0uLL);
  sub_239B83A58(v10, &v16);
  *a2 = v10 + 3;
  a2[1] = v10;
  v11 = v19;
  if (!v19)
    goto LABEL_12;
  v12 = (unint64_t *)&v19->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    if (!v6)
      return;
  }
  else
  {
LABEL_12:
    if (!v6)
      return;
  }
  v14 = (unint64_t *)&v6->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
}

void sub_239B839AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  void *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  operator delete(v14);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (v12)
  {
    v18 = (unint64_t *)&v12->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_239B83A58(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD v8[3];
  _QWORD *v9;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &off_250AF9F98;
  v9 = 0;
  v11 = 0;
  sub_239B83BA4((uint64_t)(a1 + 3), a2, v8, v10);
  v3 = v11;
  if (v11 == v10)
  {
    v4 = 4;
    v3 = v10;
  }
  else
  {
    if (!v11)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = v9;
  if (v9 == v8)
  {
    v6 = 4;
    v5 = v8;
    goto LABEL_10;
  }
  if (v9)
  {
    v6 = 5;
LABEL_10:
    (*(void (**)(void))(*v5 + 8 * v6))();
  }
  return a1;
}

void sub_239B83B30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17)
{
  std::__shared_weak_count *v17;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v19 = a17;
  if (a17 == &a14)
  {
    v20 = 4;
    v19 = &a14;
  }
  else
  {
    if (!a17)
      goto LABEL_6;
    v20 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v19 + 8 * v20))();
LABEL_6:
  v21 = a13;
  if (a13 == &a10)
  {
    v22 = 4;
    v21 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_11;
    v22 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v21 + 8 * v22))();
LABEL_11:
  std::__shared_weak_count::~__shared_weak_count(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_239B83BA4(uint64_t a1, uint64_t *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  pthread_rwlock_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  char *v34;
  _DWORD *v35;
  unsigned int v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  std::__shared_weak_count *v51;
  unint64_t *p_shared_owners;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  _QWORD v62[3];
  _QWORD *v63;
  uint64_t v64;
  _BYTE v65[24];
  _BYTE *v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v7 = *a2;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = a1 + 56;
  *(_QWORD *)(a1 + 64) = a1 + 56;
  *(_OWORD *)(a1 + 72) = xmmword_239EC69E0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)a1 = &off_250AFA060;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 240) = a2[2];
  v8 = a2[3];
  *(_QWORD *)(a1 + 248) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = (uint64_t *)(a1 + 256);
  *(_OWORD *)(a1 + 304) = 0uLL;
  *(_OWORD *)(a1 + 320) = 0uLL;
  v60 = (uint64_t *)(a1 + 256);
  v61 = (uint64_t *)(a1 + 272);
  v12 = (_QWORD *)(a1 + 288);
  v13 = (_QWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 272) = 0uLL;
  *(_OWORD *)(a1 + 288) = 0uLL;
  *(_OWORD *)(a1 + 256) = 0uLL;
  *(_DWORD *)(a1 + 336) = 1065353216;
  sub_2397A1618((pthread_mutex_t *)(a1 + 344));
  if (!*v12)
  {
    v34 = (char *)operator new(0x108uLL);
    *((_DWORD *)v34 + 6) = 0x7FFFFFFF;
    v35 = v34 + 24;
    *(_OWORD *)(v34 + 8) = 0u;
    *((_OWORD *)v34 + 2) = 0u;
    *(_QWORD *)v34 = &off_250AFA0A0;
    *((_OWORD *)v34 + 3) = 0u;
    *((_OWORD *)v34 + 4) = 0u;
    v34[80] = 0;
    *(_OWORD *)(v34 + 88) = 0u;
    sub_2397A1618((pthread_mutex_t *)(v34 + 200));
    v36 = *((_DWORD *)v34 + 6);
    if (v36 >= 0x7FFFFFFF)
    {
      v36 = 0x7FFFFFFF;
      *v35 = 0x7FFFFFFF;
    }
    else if (v36 < 2)
    {
      v36 = 1;
    }
    *((_DWORD *)v34 + 6) = v36;
    pthread_cond_init((pthread_cond_t *)(v34 + 104), 0);
    pthread_cond_init((pthread_cond_t *)(v34 + 152), 0);
    v51 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = v35;
    *(_QWORD *)(a1 + 296) = v34;
    v11 = v60;
    if (v51)
    {
      p_shared_owners = (unint64_t *)&v51->__shared_owners_;
      do
        v53 = __ldaxr(p_shared_owners);
      while (__stlxr(v53 - 1, p_shared_owners));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
  }
  if (!*v11)
  {
    v14 = operator new(0x120uLL);
    v14[1] = 0;
    v14[2] = 0;
    *v14 = &off_250AE9800;
    v15 = sub_2397A1740((uint64_t)(v14 + 3));
    v16 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = v15;
    *(_QWORD *)(a1 + 264) = v14;
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v19 = *v11;
    v20 = (pthread_rwlock_t *)(*v11 + 24);
    j__pthread_rwlock_wrlock(v20);
    *(_BYTE *)(v19 + 16) = 1;
    j__pthread_rwlock_unlock(v20);
    sub_2397A195C(v19);
    v21 = (_QWORD *)operator new();
    *v21 = &off_250AFA0D8;
    v21[1] = a1;
    *(_QWORD *)(v19 + 224) = v21;
    sub_2397A1878((pthread_t *)v19);
  }
  if (!*v61)
  {
    v22 = *(_QWORD *)(a1 + 240);
    v23 = *(_QWORD *)(a1 + 248);
    if (v23)
    {
      v24 = (unint64_t *)(v23 + 8);
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
    }
    v26 = *(std::__shared_weak_count **)(a1 + 280);
    *(_QWORD *)(a1 + 272) = v22;
    *(_QWORD *)(a1 + 280) = v23;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
      v22 = *v61;
    }
    if (!v22)
    {
      v54 = *(_QWORD *)(a1 + 232);
      v55 = operator new(0x178uLL);
      v55[1] = 0;
      v55[2] = 0;
      *v55 = &off_250ADB8B0;
      v56 = sub_2397A2A50((uint64_t)(v55 + 3), v54, 0);
      v57 = *(std::__shared_weak_count **)(a1 + 280);
      *(_QWORD *)(a1 + 272) = v56;
      *(_QWORD *)(a1 + 280) = v55;
      if (v57)
      {
        v58 = (unint64_t *)&v57->__shared_owners_;
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
    }
  }
  sub_239467C88(a1);
  if (*(_QWORD *)(a1 + 328))
  {
    v29 = *(_QWORD **)(a1 + 320);
    if (v29)
    {
      do
      {
        v30 = (_QWORD *)*v29;
        operator delete(v29);
        v29 = v30;
      }
      while (v30);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v31 = *(_QWORD *)(a1 + 312);
    if (v31)
    {
      for (i = 0; i != v31; ++i)
        *(_QWORD *)(*v13 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  v33 = a3[3];
  if (!v33)
    goto LABEL_33;
  if ((_QWORD *)v33 != a3)
  {
    v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
LABEL_33:
    v63 = (_QWORD *)v33;
    goto LABEL_38;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v62);
LABEL_38:
  v64 = a1;
  v66 = 0;
  v37 = operator new(0x30uLL);
  *v37 = &off_250AFA378;
  v38 = (uint64_t)v63;
  if (!v63)
  {
LABEL_41:
    v37[4] = v38;
    goto LABEL_43;
  }
  if (v63 != v62)
  {
    v38 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_41;
  }
  v37[4] = v37 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_43:
  v37[5] = v64;
  v66 = v37;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v39 = v66;
  if (v66 == v65)
  {
    v40 = 4;
    v39 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_51;
    v40 = 5;
  }
  (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_51:
  v41 = v63;
  if (v63 == v62)
  {
    v42 = 4;
    v41 = v62;
  }
  else
  {
    if (!v63)
      goto LABEL_56;
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_56:
  v43 = a4[3];
  if (!v43)
  {
LABEL_59:
    v63 = (_QWORD *)v43;
    goto LABEL_61;
  }
  if ((_QWORD *)v43 != a4)
  {
    v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 16))(v43);
    goto LABEL_59;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a4 + 24))(a4, v62);
LABEL_61:
  v64 = a1;
  v66 = 0;
  v44 = operator new(0x30uLL);
  *v44 = &off_250AFA3C0;
  v45 = (uint64_t)v63;
  if (!v63)
  {
LABEL_64:
    v44[4] = v45;
    goto LABEL_66;
  }
  if (v63 != v62)
  {
    v45 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_64;
  }
  v44[4] = v44 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_66:
  v44[5] = v64;
  v66 = v44;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v46 = v66;
  if (v66 == v65)
  {
    v47 = 4;
    v46 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_74;
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
LABEL_74:
  v48 = v63;
  if (v63 == v62)
  {
    v49 = 4;
    v48 = v62;
    goto LABEL_78;
  }
  if (v63)
  {
    v49 = 5;
LABEL_78:
    (*(void (**)(void))(*v48 + 8 * v49))();
  }
  return a1;
}

void sub_239B8422C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _QWORD **v22;
  uint64_t v23;
  pthread_mutex_t *v24;
  std::__shared_weak_count *v25;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  std::__shared_weak_count::~__shared_weak_count(v25);
  operator delete(v27);
  sub_2397A163C(v24);
  sub_239420950(v23);
  sub_239A4D7C0(a10);
  sub_239416DA0(a12);
  sub_239416DA0(a11);
  sub_239A74534(v21 + 224);
  v28 = *v22;
  if (*v22 == (_QWORD *)(v21 + 176))
  {
    v29 = 4;
    v28 = (_QWORD *)(v21 + 176);
  }
  else
  {
    if (!v28)
      goto LABEL_6;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_6:
  v30 = *(_QWORD **)(v21 + 168);
  if (v30 == (_QWORD *)(v21 + 144))
  {
    v31 = 4;
    v30 = (_QWORD *)(v21 + 144);
  }
  else
  {
    if (!v30)
      goto LABEL_11;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_11:
  sub_239B84400(v21);
  _Unwind_Resume(a1);
}

uint64_t sub_239B84400(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;

  *(_QWORD *)a1 = &off_250AFA080;
  sub_239467C88(a1);
  std::mutex::~mutex((std::mutex *)(a1 + 80));
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(_QWORD *)(a1 + 56);
    v2 = *(uint64_t **)(a1 + 64);
    v4 = *v2;
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
    **(_QWORD **)(v3 + 8) = v4;
    *(_QWORD *)(a1 + 72) = 0;
    if (v2 != (uint64_t *)(a1 + 56))
    {
      do
      {
        v5 = (uint64_t *)v2[1];
        operator delete(v2);
        v2 = v5;
      }
      while (v5 != (uint64_t *)(a1 + 56));
    }
  }
  v6 = *(_QWORD **)(a1 + 24);
  while (v6)
  {
    v9 = v6;
    v6 = (_QWORD *)*v6;
    v10 = (std::__shared_weak_count *)v9[4];
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    operator delete(v9);
  }
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v7)
    operator delete(v7);
  return a1;
}

void sub_239B844F4(uint64_t a1)
{
  sub_239B84400(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B84518(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AFA3C0;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B84574(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AFA3C0;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B845E0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AFA3C0;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239B8465C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B84670(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AFA3C0;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239B846E8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B8471C(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239B8476C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 176;
  if ((_QWORD *)(v2 + 176) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 200);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 200) + 24))(*(_QWORD *)(v2 + 200), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
        *(_QWORD *)(v2 + 200) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 176);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 176);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 200);
      }
      *(_QWORD *)(v2 + 200) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 176, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
      *(_QWORD *)(v2 + 200) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 200);
      *(_QWORD *)(v2 + 200) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239B84960(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

_QWORD *sub_239B8496C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AFA378;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B849C8(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AFA378;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B84A34(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AFA378;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239B84AB0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B84AC4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AFA378;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239B84B3C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B84B70(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239B84BC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 144;
  if ((_QWORD *)(v2 + 144) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 168);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 168) + 24))(*(_QWORD *)(v2 + 168), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 168) + 32))(*(_QWORD *)(v2 + 168));
        *(_QWORD *)(v2 + 168) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 144);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 144);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 168);
      }
      *(_QWORD *)(v2 + 168) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 144, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 168) + 32))(*(_QWORD *)(v2 + 168));
      *(_QWORD *)(v2 + 168) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 168);
      *(_QWORD *)(v2 + 168) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239B84DB4(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

void sub_239B84DC4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B84DE8(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  int *v3;
  BOOL v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  BOOL v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  int8x8_t v35;
  uint8x8_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  int8x8_t v43;
  uint8x8_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t *v79;
  __int128 v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  __int128 v90;
  char v91;
  __int128 v92;
  __int128 v93;
  char v94;
  _BYTE v95[24];
  _BYTE *v96;
  _BYTE v97[24];
  _BYTE *v98;
  _QWORD v99[3];
  _QWORD *v100;
  _BYTE v101[24];
  _BYTE *v102;
  _BYTE v103[24];
  _BYTE *v104;
  _BYTE v105[24];
  _BYTE *v106;
  uint64_t v107;

  v107 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned int **)(v1 + 288);
  if (v2)
  {
    sub_239B85B44((uint64_t)&v93, v2);
    v3 = (int *)v93;
    if ((_QWORD)v93)
      v4 = v94 == 0;
    else
      v4 = 1;
    if (!v4)
    {
      v8 = (_QWORD *)(v1 + 304);
      while (2)
      {
        v10 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
        *(_QWORD *)&v92 = v3;
        *((_QWORD *)&v92 + 1) = *((_QWORD *)&v93 + 1);
        if (*((_QWORD *)&v93 + 1))
        {
          v11 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        v13 = *v3;
        switch(*v3)
        {
          case 0:
            if (v10)
            {
              p_shared_owners = (unint64_t *)&v10->__shared_owners_;
              do
                v15 = __ldxr(p_shared_owners);
              while (__stxr(v15 + 1, p_shared_owners));
              v16 = *((_QWORD *)v3 + 1);
              do
                v17 = __ldxr(p_shared_owners);
              while (__stxr(v17 + 1, p_shared_owners));
            }
            else
            {
              v16 = *((_QWORD *)v3 + 1);
            }
            v106 = 0;
            v50 = operator new(0x20uLL);
            *v50 = &off_250AFA100;
            v50[1] = v3;
            v50[2] = v10;
            v50[3] = v1;
            v106 = v50;
            v51 = sub_239B85D3C(v1, v16, (uint64_t)v105);
            v52 = v106;
            if (v106 == v105)
            {
              v52 = v105;
              v53 = 4;
            }
            else
            {
              if (!v106)
                goto LABEL_82;
              v53 = 5;
            }
            (*(void (**)(void))(*v52 + 8 * v53))();
LABEL_82:
            if ((v51 & 1) == 0)
              sub_239B417F8(*(unsigned int **)(v1 + 288), &v92);
            if (v10)
            {
              v58 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v58);
              while (__stlxr(v59 - 1, v58));
              goto LABEL_166;
            }
            goto LABEL_168;
          case 1:
            if (v10)
            {
              v29 = (unint64_t *)&v10->__shared_owners_;
              do
                v30 = __ldxr(v29);
              while (__stxr(v30 + 1, v29));
              v31 = *((unsigned __int8 *)v3 + 72);
              v32 = *((_QWORD *)v3 + 6);
              do
                v33 = __ldxr(v29);
              while (__stxr(v33 + 1, v29));
              if (!v31)
              {
LABEL_77:
                v104 = 0;
                v54 = operator new(0x20uLL);
                *v54 = &off_250AFA1C8;
                v54[1] = v3;
                v54[2] = v10;
                v54[3] = v1;
                v104 = v54;
                v55 = sub_239B85D3C(v1, v32, (uint64_t)v103);
                v56 = v104;
                if (v104 == v103)
                {
                  v56 = v103;
                  v57 = 4;
LABEL_160:
                  (*(void (**)(void))(*v56 + 8 * v57))();
                }
                else if (v104)
                {
                  v57 = 5;
                  goto LABEL_160;
                }
                if ((v55 & 1) == 0)
                  sub_239B417F8(*(unsigned int **)(v1 + 288), &v92);
                goto LABEL_163;
              }
            }
            else
            {
              v32 = *((_QWORD *)v3 + 6);
              if (!*((_BYTE *)v3 + 72))
                goto LABEL_77;
            }
            v102 = 0;
            v34 = operator new(0x20uLL);
            *v34 = &off_250AFA1C8;
            v34[1] = v3;
            v34[2] = v10;
            v34[3] = v1;
            v102 = v34;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v35 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v35)
              goto LABEL_151;
            v36 = (uint8x8_t)vcnt_s8(v35);
            v36.i16[0] = vaddlv_u8(v36);
            if (v36.u32[0] > 1uLL)
            {
              v37 = v32;
              if (*(_QWORD *)&v35 <= v32)
                v37 = v32 % *(_QWORD *)&v35;
            }
            else
            {
              v37 = (*(_QWORD *)&v35 - 1) & v32;
            }
            v71 = *(_QWORD **)(*v8 + 8 * v37);
            if (!v71 || (v72 = (_QWORD *)*v71) == 0)
            {
LABEL_151:
              v76 = 0;
              goto LABEL_152;
            }
            if (v36.u32[0] < 2uLL)
            {
              v73 = *(_QWORD *)&v35 - 1;
              while (1)
              {
                v75 = v72[1];
                if (v75 == v32)
                {
                  if (v72[2] == v32)
                    goto LABEL_184;
                }
                else if ((v75 & v73) != v37)
                {
                  goto LABEL_151;
                }
                v72 = (_QWORD *)*v72;
                if (!v72)
                  goto LABEL_151;
              }
            }
            while (1)
            {
              v74 = v72[1];
              if (v74 == v32)
                break;
              if (v74 >= *(_QWORD *)&v35)
                v74 %= *(_QWORD *)&v35;
              if (v74 != v37)
                goto LABEL_151;
LABEL_141:
              v72 = (_QWORD *)*v72;
              if (!v72)
                goto LABEL_151;
            }
            if (v72[2] != v32)
              goto LABEL_141;
LABEL_184:
            if (!v102)
              sub_2394172E0();
            (*(void (**)(_BYTE *))(*(_QWORD *)v102 + 48))(v102);
            v76 = 1;
LABEL_152:
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v77 = v102;
            if (v102 == v101)
            {
              v77 = v101;
              v78 = 4;
LABEL_156:
              (*(void (**)(void))(*v77 + 8 * v78))();
            }
            else if (v102)
            {
              v78 = 5;
              goto LABEL_156;
            }
            if ((v76 & 1) == 0)
            {
              sub_239A444D4((uint64_t)"unknown file", 793, (uint64_t)"", (void (*)(void *))sub_239A4463C);
              sub_239A4475C();
              abort();
            }
LABEL_163:
            if (v10)
            {
              v79 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v79);
              while (__stlxr(v59 - 1, v79));
              goto LABEL_166;
            }
LABEL_168:
            sub_239B85B44((uint64_t)&v90, *(unsigned int **)(v1 + 288));
            v80 = v90;
            v90 = 0uLL;
            v81 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
            v93 = v80;
            if (v81)
            {
              v82 = (unint64_t *)&v81->__shared_owners_;
              do
                v83 = __ldaxr(v82);
              while (__stlxr(v83 - 1, v82));
              if (!v83)
              {
                ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                std::__shared_weak_count::__release_weak(v81);
              }
            }
            v94 = v91;
            v84 = (std::__shared_weak_count *)*((_QWORD *)&v90 + 1);
            if (!*((_QWORD *)&v90 + 1))
              goto LABEL_177;
            v85 = (unint64_t *)(*((_QWORD *)&v90 + 1) + 8);
            do
              v86 = __ldaxr(v85);
            while (__stlxr(v86 - 1, v85));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
              std::__shared_weak_count::__release_weak(v84);
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
              {
LABEL_178:
                v88 = (unint64_t *)&v87->__shared_owners_;
                do
                  v89 = __ldaxr(v88);
                while (__stlxr(v89 - 1, v88));
                if (!v89)
                {
                  ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                  std::__shared_weak_count::__release_weak(v87);
                }
              }
            }
            else
            {
LABEL_177:
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
                goto LABEL_178;
            }
            v3 = (int *)v93;
            if ((_QWORD)v93)
              v9 = v94 == 0;
            else
              v9 = 1;
            if (v9)
              break;
            continue;
          case 2:
            if (v10)
            {
              v24 = (unint64_t *)&v10->__shared_owners_;
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              v26 = *((_QWORD *)v3 + 14);
              do
                v27 = __ldxr(v24);
              while (__stxr(v27 + 1, v24));
            }
            else
            {
              v26 = *((_QWORD *)v3 + 14);
            }
            v100 = 0;
            v42 = operator new(0x20uLL);
            *v42 = &off_250AFA258;
            v42[1] = v3;
            v42[2] = v10;
            v42[3] = v1;
            v100 = v42;
            *(_QWORD *)&v90 = v26;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v43 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v43)
              goto LABEL_122;
            v44 = (uint8x8_t)vcnt_s8(v43);
            v44.i16[0] = vaddlv_u8(v44);
            if (v44.u32[0] > 1uLL)
            {
              v45 = v26;
              if (*(_QWORD *)&v43 <= v26)
                v45 = v26 % *(_QWORD *)&v43;
            }
            else
            {
              v45 = (*(_QWORD *)&v43 - 1) & v26;
            }
            v62 = *(_QWORD **)(*v8 + 8 * v45);
            if (!v62)
              goto LABEL_122;
            v63 = (_QWORD *)*v62;
            if (!v63)
              goto LABEL_122;
            if (v44.u32[0] < 2uLL)
            {
              v64 = *(_QWORD *)&v43 - 1;
              while (1)
              {
                v66 = v63[1];
                if (v66 == v26)
                {
                  if (v63[2] == v26)
                    goto LABEL_121;
                }
                else if ((v66 & v64) != v45)
                {
                  goto LABEL_122;
                }
                v63 = (_QWORD *)*v63;
                if (!v63)
                  goto LABEL_122;
              }
            }
            while (1)
            {
              v65 = v63[1];
              if (v65 == v26)
              {
                if (v63[2] == v26)
                {
LABEL_121:
                  v67 = 0;
                  goto LABEL_123;
                }
              }
              else
              {
                if (v65 >= *(_QWORD *)&v43)
                  v65 %= *(_QWORD *)&v43;
                if (v65 != v45)
                {
LABEL_122:
                  sub_239465800(v1 + 304, (unint64_t *)&v90, &v90);
                  sub_239A7798C(*(_QWORD *)(v1 + 272), v99);
                  v67 = 1;
LABEL_123:
                  sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
                  v68 = v100;
                  if (v100 == v99)
                  {
                    v68 = v99;
                    v69 = 4;
LABEL_127:
                    (*(void (**)(void))(*v68 + 8 * v69))();
                  }
                  else if (v100)
                  {
                    v69 = 5;
                    goto LABEL_127;
                  }
                  if ((v67 & 1) == 0)
                    sub_239B417F8(*(unsigned int **)(v1 + 288), &v92);
                  if (v10)
                  {
                    v70 = (unint64_t *)&v10->__shared_owners_;
                    do
                      v59 = __ldaxr(v70);
                    while (__stlxr(v59 - 1, v70));
                    goto LABEL_166;
                  }
                  goto LABEL_168;
                }
              }
              v63 = (_QWORD *)*v63;
              if (!v63)
                goto LABEL_122;
            }
          case 3:
            v90 = *(_OWORD *)(v1 + 208);
            v28 = *((_QWORD *)v3 + 24);
            if (v28)
              (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v28 + 48))(v28, &v90);
            goto LABEL_168;
          default:
            if (v13 != 99)
            {
              if (v13 != 100)
                goto LABEL_168;
              if (v10)
              {
                v18 = (unint64_t *)&v10->__shared_owners_;
                do
                  v19 = __ldxr(v18);
                while (__stxr(v19 + 1, v18));
                do
                  v20 = __ldxr(v18);
                while (__stxr(v20 + 1, v18));
              }
              v96 = 0;
              v46 = operator new(0x20uLL);
              *v46 = &off_250AFA2E8;
              v46[1] = v3;
              v46[2] = v10;
              v46[3] = v1;
              v96 = v46;
              sub_2397A1694((pthread_mutex_t *)(v1 + 344));
              v47 = *(_QWORD *)(v1 + 328);
              if (!v47)
              {
                if (!v96)
                  sub_2394172E0();
                (*(void (**)(_BYTE *))(*(_QWORD *)v96 + 48))(v96);
              }
              sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
              v48 = v96;
              if (v96 == v95)
              {
                v48 = v95;
                v49 = 4;
              }
              else
              {
                if (!v96)
                {
LABEL_98:
                  if (v47)
                    sub_239B417F8(*(unsigned int **)(v1 + 288), &v92);
                  if (!v10)
                    goto LABEL_168;
                  v61 = (unint64_t *)&v10->__shared_owners_;
                  do
                    v59 = __ldaxr(v61);
                  while (__stlxr(v59 - 1, v61));
                  goto LABEL_166;
                }
                v49 = 5;
              }
              (*(void (**)(void))(*v48 + 8 * v49))();
              goto LABEL_98;
            }
            if (v10)
            {
              v21 = (unint64_t *)&v10->__shared_owners_;
              do
                v22 = __ldxr(v21);
              while (__stxr(v22 + 1, v21));
              do
                v23 = __ldxr(v21);
              while (__stxr(v23 + 1, v21));
            }
            v98 = 0;
            v38 = operator new(0x20uLL);
            *v38 = &off_250AFA2A0;
            v38[1] = v3;
            v38[2] = v10;
            v38[3] = v1;
            v98 = v38;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v39 = *(_QWORD *)(v1 + 328);
            if (!v39)
            {
              if (!v98)
                sub_2394172E0();
              (*(void (**)(_BYTE *))(*(_QWORD *)v98 + 48))(v98);
            }
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v40 = v98;
            if (v98 == v97)
            {
              v40 = v97;
              v41 = 4;
            }
            else
            {
              if (!v98)
              {
LABEL_90:
                if (v39)
                  sub_239B417F8(*(unsigned int **)(v1 + 288), &v92);
                if (!v10)
                  goto LABEL_168;
                v60 = (unint64_t *)&v10->__shared_owners_;
                do
                  v59 = __ldaxr(v60);
                while (__stlxr(v59 - 1, v60));
LABEL_166:
                if (!v59)
                {
                  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
                  std::__shared_weak_count::__release_weak(v10);
                }
                goto LABEL_168;
              }
              v41 = 5;
            }
            (*(void (**)(void))(*v40 + 8 * v41))();
            goto LABEL_90;
        }
        break;
      }
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
    if (*((_QWORD *)&v93 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
}

void sub_239B856F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char *a34)
{
  std::__shared_weak_count *v34;
  pthread_mutex_t *v35;
  char *v37;
  uint64_t v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;

  sub_2397A16B4(v35);
  v37 = a34;
  if (a34 == &a31)
  {
    v38 = 4;
    v37 = &a31;
  }
  else
  {
    if (!a34)
    {
LABEL_6:
      if (v34)
      {
        p_shared_owners = (unint64_t *)&v34->__shared_owners_;
        do
          v40 = __ldaxr(p_shared_owners);
        while (__stlxr(v40 - 1, p_shared_owners));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      if (a14)
      {
        v41 = (unint64_t *)&a14->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
          std::__shared_weak_count::__release_weak(a14);
        }
      }
      if (a16)
      {
        v43 = (unint64_t *)&a16->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
          std::__shared_weak_count::__release_weak(a16);
        }
      }
      _Unwind_Resume(a1);
    }
    v38 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v37 + 8 * v38))();
  goto LABEL_6;
}

uint64_t sub_239B85B44(uint64_t a1, unsigned int *a2)
{
  pthread_mutex_t *v4;
  __int128 v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v17;

  v4 = (pthread_mutex_t *)(a2 + 44);
  sub_2397A1694((pthread_mutex_t *)(a2 + 44));
  if (*((_QWORD *)a2 + 6))
  {
LABEL_4:
    v5 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                   + 16 * *((_QWORD *)a2 + 5));
    v17 = v5;
    if (*((_QWORD *)&v5 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
      v8 = *(std::__shared_weak_count **)(*(_QWORD *)(*((_QWORD *)a2 + 2)
                                                    + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                                        + 16 * *((_QWORD *)a2 + 5)
                                        + 8);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }
    v11 = *((_QWORD *)a2 + 6) - 1;
    v12 = *((_QWORD *)a2 + 5) + 1;
    *((_QWORD *)a2 + 5) = v12;
    *((_QWORD *)a2 + 6) = v11;
    if (v12 >= 0x200)
    {
      operator delete(**((void ***)a2 + 2));
      *((_QWORD *)a2 + 2) += 8;
      v11 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a2 + 5) -= 256;
    }
    if (v11 < *a2)
      pthread_cond_signal((pthread_cond_t *)(a2 + 20));
    *(_OWORD *)a1 = v17;
    if (*((_QWORD *)&v17 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v17 + 1) + 16))(*((_QWORD *)&v17 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v17 + 1));
      }
    }
    else
    {
      *(_BYTE *)(a1 + 16) = 1;
    }
  }
  else
  {
    while (!*((_BYTE *)a2 + 56))
    {
      ++*((_QWORD *)a2 + 9);
      pthread_cond_wait((pthread_cond_t *)(a2 + 32), v4);
      --*((_QWORD *)a2 + 9);
      if (*((_QWORD *)a2 + 6))
        goto LABEL_4;
    }
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
  return sub_2397A16B4(v4);
}

void sub_239B85D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pthread_mutex_t *v9;

  sub_239A4D7C0((uint64_t)&a9);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_239B85D3C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  pthread_mutex_t *v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v7 = *(int8x8_t *)(a1 + 312);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8(v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v9 = a2;
      if (*(_QWORD *)&v7 <= a2)
        v9 = a2 % *(_QWORD *)&v7;
    }
    else
    {
      v9 = (*(_QWORD *)&v7 - 1) & a2;
    }
    v10 = *(_QWORD **)(*(_QWORD *)(a1 + 304) + 8 * v9);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (v11)
      {
        if (v8.u32[0] < 2uLL)
        {
          v12 = *(_QWORD *)&v7 - 1;
          while (1)
          {
            v14 = v11[1];
            if (v14 == a2)
            {
              if (v11[2] == a2)
                goto LABEL_21;
            }
            else if ((v14 & v12) != v9)
            {
              goto LABEL_22;
            }
            v11 = (_QWORD *)*v11;
            if (!v11)
              goto LABEL_22;
          }
        }
        do
        {
          v13 = v11[1];
          if (v13 == a2)
          {
            if (v11[2] == a2)
            {
LABEL_21:
              v15 = 0;
              goto LABEL_24;
            }
          }
          else
          {
            if (v13 >= *(_QWORD *)&v7)
              v13 %= *(_QWORD *)&v7;
            if (v13 != v9)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_22:
  v16 = *(_QWORD *)(a3 + 24);
  if (!v16)
    sub_2394172E0();
  (*(void (**)(uint64_t))(*(_QWORD *)v16 + 48))(v16);
  v15 = 1;
LABEL_24:
  sub_2397A16B4(v6);
  return v15;
}

void sub_239B85E7C(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B85E94(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA2E8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B85EF8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA2E8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B85F6C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA2E8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B85FC4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA2E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B85FFC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B86054(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B860AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned __int16 i;
  uint64_t v27;
  uint64_t v29;
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  pthread_cond_t v37;
  pthread_cond_t v38;
  pthread_mutex_t v39;
  _BYTE v40[24];
  _BYTE *v41;
  uint64_t v42;

  v1 = a1;
  v42 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD **)(a1 + 24);
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_2397A1618(&v39);
  v30 = 0x7FFFFFFF;
  pthread_cond_init(&v37, 0);
  pthread_cond_init(&v38, 0);
  v3 = (_QWORD *)v2[3];
  if (!v3)
    goto LABEL_44;
  v29 = v1;
  v4 = 0;
  do
  {
    v6 = v3[2];
    v5 = v3[3];
    v7 = (std::__shared_weak_count *)v3[4];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }
    if (!v5 || !v2[25])
    {
      if (!v7)
        goto LABEL_4;
      goto LABEL_36;
    }
    if (v7)
    {
      v10 = (unint64_t *)&v7->__shared_owners_;
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
      v12 = v2[34];
      if (!*(_QWORD *)(v12 + 272))
      {
LABEL_50:
        sub_239A444D4((uint64_t)"unknown file", 546, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v13 = (unint64_t *)&v7->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v15 = *(unsigned int **)(v12 + 272);
      do
        v16 = __ldxr(v13);
      while (__stxr(v16 + 1, v13));
    }
    else
    {
      v15 = *(unsigned int **)(v2[34] + 272);
      if (!v15)
        goto LABEL_50;
    }
    v41 = 0;
    v17 = operator new(0x38uLL);
    *v17 = &off_250AFA330;
    v17[1] = v6;
    v17[2] = v5;
    v17[3] = v7;
    v17[4] = &v30;
    v17[5] = v2;
    v41 = v17;
    sub_2394D0CC4(v15, (uint64_t)v40);
    v18 = v41;
    if (v41 == v40)
    {
      v18 = v40;
      v19 = 4;
      goto LABEL_26;
    }
    if (v41)
    {
      v19 = 5;
LABEL_26:
      (*(void (**)(void))(*v18 + 8 * v19))();
    }
    if (!v7)
    {
      ++v4;
      goto LABEL_4;
    }
    v20 = (unint64_t *)&v7->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    ++v4;
    v22 = (unint64_t *)&v7->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_36:
    v24 = (unint64_t *)&v7->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_4:
    v3 = (_QWORD *)*v3;
  }
  while (v3);
  v1 = v29;
  if (v4 && (unsigned __int16)sub_2395BFB54(&v30) >= 0x100u)
  {
    do
      --v4;
    while (v4 && (unsigned __int16)sub_2395BFB54(&v30) > 0xFFu);
  }
LABEL_44:
  sub_2395C2A4C((uint64_t)&v30);
  for (i = sub_2395BFB54(&v30); i >= 0x100u; i = sub_2395BFB54(&v30))
    ;
  v27 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 256);
  if (v27)
  {
    v40[0] = 1;
    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v27 + 48))(v27, v40);
  }
  return sub_2395C29C4((uint64_t)&v30);
}

void sub_239B86404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_2395C29C4((uint64_t)&a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B865F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA330;
  v2 = (std::__shared_weak_count *)a1[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B86658(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA330;
  v1 = (std::__shared_weak_count *)a1[3];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B866CC(__n128 *a1)
{
  __n128 *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  __n128 result;

  v2 = (__n128 *)operator new(0x38uLL);
  v3 = a1->n128_u64[1];
  v4 = a1[1].n128_u64[0];
  v2->n128_u64[0] = (unint64_t)&off_250AFA330;
  v2->n128_u64[1] = v3;
  v5 = a1[1].n128_u64[1];
  v2[1].n128_u64[0] = v4;
  v2[1].n128_u64[1] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[2];
  v2[2] = result;
  return result;
}

__n128 sub_239B86728(__n128 *a1, __n128 *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __n128 result;

  v2 = a1->n128_u64[1];
  v3 = a1[1].n128_u64[0];
  a2->n128_u64[0] = (unint64_t)&off_250AFA330;
  a2->n128_u64[1] = v2;
  v4 = a1[1].n128_u64[1];
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = a1[2];
  a2[2] = result;
  return result;
}

void sub_239B86764(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B867BC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B86814(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v2 = a1[5];
  v3 = (std::__shared_weak_count *)a1[3];
  v12 = a1[2];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v14 = a1[1];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v12, &v14);
  v7 = v13;
  if (v13)
  {
    v8 = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)a1[4];
  LOBYTE(v14) = 1;
  return sub_2395BFE44(v10, &v14);
}

void sub_239B868D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B86918(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA2A0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B8697C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA2A0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B869F0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA2A0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B86A48(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA2A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B86A80(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B86AD8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B86B30(uint64_t a1)
{
  uint64_t result;

  sub_239467C88(*(_QWORD *)(a1 + 24));
  result = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 224);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

_QWORD *sub_239B86B74(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA258;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B86BD8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA258;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B86C4C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA258;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B86CA4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA258;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B86CDC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B86D34(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B86D8C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  char v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 8);
  v4 = (std::__shared_weak_count *)v3[16];
  v15 = v3[15];
  v16 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v3 = *(_QWORD **)(a1 + 8);
  }
  v17 = v3[14];
  v7 = *(_QWORD *)(v2 + 200);
  if (!v7)
    sub_2394172E0();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v15, &v17);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(v12 + 160);
  if (v13)
  {
    LOBYTE(v17) = v8;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v13 + 48))(v13, &v17);
    v12 = *(_QWORD *)(a1 + 8);
  }
  return sub_239B86EC0(v2, *(_QWORD *)(v12 + 112));
}

void sub_239B86E7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B86EC0(uint64_t a1, unint64_t a2)
{
  pthread_mutex_t *v4;
  int8x8_t v5;
  _QWORD *v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD **v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *__p;

  v4 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v5 = *(int8x8_t *)(a1 + 312);
  if (v5)
  {
    v6 = (_QWORD *)(a1 + 304);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = a2;
      if (*(_QWORD *)&v5 <= a2)
        v8 = a2 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*v6 + 8 * v8);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v13 == a2)
            {
              if (v10[2] == a2)
                goto LABEL_22;
            }
            else if ((v13 & v11) != v8)
            {
              return sub_2397A16B4(v4);
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              return sub_2397A16B4(v4);
          }
        }
        do
        {
          v12 = v10[1];
          if (v12 == a2)
          {
            if (v10[2] == a2)
            {
LABEL_22:
              sub_239A78378((uint64_t)&__p, v6, v10);
              if (__p)
                operator delete(__p);
              return sub_2397A16B4(v4);
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              return sub_2397A16B4(v4);
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  return sub_2397A16B4(v4);
}

_QWORD *sub_239B86FF0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA1C8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B87054(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA1C8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B870C8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA1C8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B87120(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA1C8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B87158(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B871B0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B87208(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  int8x8_t v8;
  uint8x8_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  uint64_t v28;
  int8x8_t v29;
  uint8x8_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD **v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  int v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int8x8_t v64;
  _QWORD *v65;
  uint8x8_t v66;
  unint64_t v67;
  _QWORD **v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  unint64_t *v76;
  unint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t *v85;
  unint64_t v86;
  _QWORD *v87;
  char v88;
  _QWORD *v89;
  uint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t *v101;
  unint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t *v108;
  unint64_t v109;
  uint64_t v110;
  __int128 v111;
  void *v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  _QWORD v115[3];
  _QWORD *v116;
  void *__p[9];
  char v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  std::__shared_weak_count *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[3];
  _QWORD *v129;
  uint64_t v130;

  v130 = *MEMORY[0x24BDAC8D0];
  v3 = (_QWORD *)a1[1];
  if (!v3[7])
  {
    v11 = v3[13];
    if (v11)
    {
      LOBYTE(__p[0]) = 0;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)v11 + 48))(v11, __p);
    }
    return;
  }
  v5 = a1[3];
  std::mutex::lock((std::mutex *)(v5 + 80));
  v6 = v3[6];
  v7 = (uint64_t *)(v5 + 8);
  v8 = *(int8x8_t *)(v5 + 16);
  if (!*(_QWORD *)&v8)
    goto LABEL_24;
  v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = v3[6];
    if (v6 >= *(_QWORD *)&v8)
      v10 = v6 % *(_QWORD *)&v8;
  }
  else
  {
    v10 = (*(_QWORD *)&v8 - 1) & v6;
  }
  v12 = *(_QWORD **)(*v7 + 8 * v10);
  if (!v12 || (v13 = (_QWORD *)*v12) == 0)
  {
LABEL_24:
    if ((unint64_t)(*(_QWORD *)(v5 + 32) + 1) > *(_QWORD *)(v5 + 48))
    {
      v16 = *(_QWORD *)(v5 + 72);
      if (v16)
      {
        v17 = *(uint64_t **)(v5 + 56);
        v6 = v17[2];
        if ((*(_QWORD *)&v8 & (*(_QWORD *)&v8 - 1)) != 0)
        {
          v25 = v17[2];
          if (v6 >= *(_QWORD *)&v8)
            v25 = v6 % *(_QWORD *)&v8;
          v18 = *(_QWORD **)(*v7 + 8 * v25);
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        else
        {
          v18 = *(_QWORD **)(*v7 + 8 * (v6 & (*(_QWORD *)&v8 - 1)));
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        v2 = v18[3];
        v1 = (std::__shared_weak_count *)v18[4];
        if (v1)
        {
          p_shared_owners = (unint64_t *)&v1->__shared_owners_;
          do
            v27 = __ldxr(p_shared_owners);
          while (__stxr(v27 + 1, p_shared_owners));
          v17 = *(uint64_t **)(v5 + 56);
          v16 = *(_QWORD *)(v5 + 72);
        }
        v28 = *v17;
        *(_QWORD *)(v28 + 8) = v17[1];
        *(_QWORD *)v17[1] = v28;
        *(_QWORD *)(v5 + 72) = v16 - 1;
        operator delete(v17);
        v29 = *(int8x8_t *)(v5 + 16);
        if (v29)
        {
          v30 = (uint8x8_t)vcnt_s8(v29);
          v30.i16[0] = vaddlv_u8(v30);
          if (v30.u32[0] > 1uLL)
          {
            v31 = v6;
            if (v6 >= *(_QWORD *)&v29)
              v31 = v6 % *(_QWORD *)&v29;
          }
          else
          {
            v31 = (*(_QWORD *)&v29 - 1) & v6;
          }
          v32 = *v7;
          v33 = *(_QWORD ***)(*v7 + 8 * v31);
          if (v33)
          {
            v34 = *v33;
            if (*v33)
            {
              v35 = *(_QWORD *)&v29 - 1;
              if (v30.u32[0] < 2uLL)
              {
                while (1)
                {
                  v36 = v34[1];
                  if (v36 == v6)
                  {
                    if (v34[2] == v6)
                      goto LABEL_75;
                  }
                  else if ((v36 & v35) != v31)
                  {
                    goto LABEL_107;
                  }
                  v34 = (_QWORD *)*v34;
                  if (!v34)
                    goto LABEL_107;
                }
              }
              do
              {
                v37 = v34[1];
                if (v37 == v6)
                {
                  if (v34[2] == v6)
                  {
LABEL_75:
                    if (v30.u32[0] > 1uLL)
                    {
                      v46 = v6;
                      if (v6 >= *(_QWORD *)&v29)
                        v46 = v6 % *(_QWORD *)&v29;
                    }
                    else
                    {
                      v46 = v35 & v6;
                    }
                    v47 = *(_QWORD **)(v32 + 8 * v46);
                    do
                    {
                      v48 = v47;
                      v47 = (_QWORD *)*v47;
                    }
                    while (v47 != v34);
                    if (v48 == (_QWORD *)(v5 + 24))
                      goto LABEL_92;
                    v49 = v48[1];
                    if (v30.u32[0] > 1uLL)
                    {
                      if (v49 >= *(_QWORD *)&v29)
                        v49 %= *(_QWORD *)&v29;
                    }
                    else
                    {
                      v49 &= v35;
                    }
                    if (v49 != v46)
                    {
LABEL_92:
                      if (!*v34)
                        goto LABEL_93;
                      v50 = *(_QWORD *)(*v34 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v50 >= *(_QWORD *)&v29)
                          v50 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v50 &= v35;
                      }
                      if (v50 != v46)
LABEL_93:
                        *(_QWORD *)(v32 + 8 * v46) = 0;
                    }
                    v51 = *v34;
                    v110 = v2;
                    if (*v34)
                    {
                      v52 = *(_QWORD *)(v51 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v52 >= *(_QWORD *)&v29)
                          v52 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v52 &= v35;
                      }
                      if (v52 != v46)
                      {
                        *(_QWORD *)(*v7 + 8 * v52) = v48;
                        v51 = *v34;
                      }
                    }
                    *v48 = v51;
                    *v34 = 0;
                    --*(_QWORD *)(v5 + 32);
                    v53 = (std::__shared_weak_count *)v34[4];
                    if (v53)
                    {
                      v54 = (unint64_t *)&v53->__shared_owners_;
                      do
                        v55 = __ldaxr(v54);
                      while (__stlxr(v55 - 1, v54));
                      if (!v55)
                      {
                        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
                        std::__shared_weak_count::__release_weak(v53);
                      }
                    }
                    operator delete(v34);
                    v2 = v110;
                    break;
                  }
                }
                else
                {
                  if (v37 >= *(_QWORD *)&v29)
                    v37 %= *(_QWORD *)&v29;
                  if (v37 != v31)
                    break;
                }
                v34 = (_QWORD *)*v34;
              }
              while (v34);
            }
          }
        }
LABEL_107:
        v56 = operator new(0x18uLL);
        v56[2] = v3[6];
        *v56 = v5 + 56;
        v57 = *(_QWORD **)(v5 + 64);
        v56[1] = v57;
        *v57 = v56;
        v58 = *(_QWORD *)(v5 + 72) + 1;
        *(_QWORD *)(v5 + 64) = v56;
        *(_QWORD *)(v5 + 72) = v58;
        sub_239B884F0(v5 + 8, v3[6], v3[6], v3[7], v3[8]);
        if (v1)
        {
          v59 = (unint64_t *)&v1->__shared_owners_;
          do
            v60 = __ldxr(v59);
          while (__stxr(v60 + 1, v59));
          do
            v61 = __ldaxr(v59);
          while (__stlxr(v61 - 1, v59));
          v45 = 0;
          v22 = 0;
          if (!v61)
            goto LABEL_112;
          goto LABEL_114;
        }
      }
      else
      {
        v2 = v3[7];
        v1 = (std::__shared_weak_count *)v3[8];
        if (v1)
        {
          v23 = (unint64_t *)&v1->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
        }
      }
      v22 = 0;
      goto LABEL_114;
    }
    v19 = operator new(0x18uLL);
    v19[2] = v6;
    *v19 = v5 + 56;
    v20 = *(_QWORD **)(v5 + 64);
    v19[1] = v20;
    *v20 = v19;
    v21 = *(_QWORD *)(v5 + 72) + 1;
    *(_QWORD *)(v5 + 64) = v19;
    *(_QWORD *)(v5 + 72) = v21;
    sub_239B884F0(v5 + 8, v3[6], v3[6], v3[7], v3[8]);
    goto LABEL_32;
  }
  if (v9.u32[0] < 2uLL)
  {
    while (1)
    {
      v15 = v13[1];
      if (v15 == v6)
      {
        if (v13[2] == v6)
          goto LABEL_67;
      }
      else if ((v15 & (*(_QWORD *)&v8 - 1)) != v10)
      {
        goto LABEL_24;
      }
      v13 = (_QWORD *)*v13;
      if (!v13)
        goto LABEL_24;
    }
  }
  while (1)
  {
    v14 = v13[1];
    if (v14 == v6)
      break;
    if (v14 >= *(_QWORD *)&v8)
      v14 %= *(_QWORD *)&v8;
    if (v14 != v10)
      goto LABEL_24;
LABEL_14:
    v13 = (_QWORD *)*v13;
    if (!v13)
      goto LABEL_24;
  }
  if (v13[2] != v6)
    goto LABEL_14;
LABEL_67:
  v38 = sub_239B88808(v5 + 8, v3[6], v3 + 6);
  v40 = v3[7];
  v39 = v3[8];
  if (v39)
  {
    v41 = (unint64_t *)(v39 + 8);
    do
      v42 = __ldxr(v41);
    while (__stxr(v42 + 1, v41));
  }
  v1 = (std::__shared_weak_count *)v38[4];
  v38[3] = v40;
  v38[4] = v39;
  if (!v1)
  {
LABEL_32:
    v6 = 0;
    v22 = 1;
    goto LABEL_114;
  }
  v43 = (unint64_t *)&v1->__shared_owners_;
  do
    v44 = __ldaxr(v43);
  while (__stlxr(v44 - 1, v43));
  v6 = 0;
  v45 = 1;
  v22 = 1;
  if (!v44)
  {
LABEL_112:
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
    v22 = v45;
  }
LABEL_114:
  std::mutex::unlock((std::mutex *)(v5 + 80));
  v62 = a1[1];
  if (*(_BYTE *)(v62 + 72))
  {
    v63 = *(_QWORD *)(v62 + 48);
    if (sub_2397A1B98((pthread_mutex_t *)(v5 + 344)))
    {
      sub_2397A16B4((pthread_mutex_t *)(v5 + 344));
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v64 = *(int8x8_t *)(v5 + 312);
    if (v64)
    {
      v65 = (_QWORD *)(v5 + 304);
      v66 = (uint8x8_t)vcnt_s8(v64);
      v66.i16[0] = vaddlv_u8(v66);
      if (v66.u32[0] > 1uLL)
      {
        v67 = v63;
        if (*(_QWORD *)&v64 <= v63)
          v67 = v63 % *(_QWORD *)&v64;
      }
      else
      {
        v67 = (*(_QWORD *)&v64 - 1) & v63;
      }
      v68 = *(_QWORD ***)(*v65 + 8 * v67);
      if (v68)
      {
        v69 = *v68;
        if (*v68)
        {
          if (v66.u32[0] < 2uLL)
          {
            v70 = *(_QWORD *)&v64 - 1;
            while (1)
            {
              v72 = v69[1];
              if (v72 == v63)
              {
                if (v69[2] == v63)
                  goto LABEL_137;
              }
              else if ((v72 & v70) != v67)
              {
                goto LABEL_139;
              }
              v69 = (_QWORD *)*v69;
              if (!v69)
                goto LABEL_139;
            }
          }
          do
          {
            v71 = v69[1];
            if (v71 == v63)
            {
              if (v69[2] == v63)
              {
LABEL_137:
                sub_239A78378((uint64_t)__p, v65, v69);
                if (__p[0])
                  operator delete(__p[0]);
                break;
              }
            }
            else
            {
              if (v71 >= *(_QWORD *)&v64)
                v71 %= *(_QWORD *)&v64;
              if (v71 != v67)
                break;
            }
            v69 = (_QWORD *)*v69;
          }
          while (v69);
        }
      }
    }
  }
LABEL_139:
  if (!v22)
  {
    v73 = a1[1];
    if (!*(_QWORD *)(v5 + 200) || *(_QWORD *)(v73 + 48) == v6 && *(_BYTE *)(v73 + 72))
      goto LABEL_144;
    v78 = (std::__shared_weak_count *)a1[2];
    if (v78)
    {
      v79 = (unint64_t *)&v78->__shared_owners_;
      do
        v80 = __ldxr(v79);
      while (__stxr(v80 + 1, v79));
    }
    if (v1)
    {
      v81 = (unint64_t *)&v1->__shared_owners_;
      do
        v82 = __ldxr(v81);
      while (__stxr(v82 + 1, v81));
    }
    if (v78)
    {
      v83 = (unint64_t *)&v78->__shared_owners_;
      do
        v84 = __ldxr(v83);
      while (__stxr(v84 + 1, v83));
    }
    if (v1)
    {
      v85 = (unint64_t *)&v1->__shared_owners_;
      do
        v86 = __ldxr(v85);
      while (__stxr(v86 + 1, v85));
    }
    v129 = 0;
    v87 = operator new(0x40uLL);
    *v87 = &off_250AFA210;
    v87[1] = v73;
    v87[2] = v78;
    v87[3] = v6;
    v87[4] = v2;
    v87[5] = v1;
    *((_BYTE *)v87 + 48) = 1;
    v87[7] = v5;
    v129 = v87;
    v88 = sub_239A82B00(v5, v6, v128);
    v89 = v129;
    if (v129 == v128)
    {
      v90 = 4;
      v89 = v128;
    }
    else
    {
      if (!v129)
        goto LABEL_172;
      v90 = 5;
    }
    (*(void (**)(void))(*v89 + 8 * v90))();
LABEL_172:
    if ((v88 & 1) != 0)
    {
LABEL_204:
      if (v1)
      {
        v106 = (unint64_t *)&v1->__shared_owners_;
        do
          v107 = __ldaxr(v106);
        while (__stlxr(v107 - 1, v106));
        if (!v107)
        {
          ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
          std::__shared_weak_count::__release_weak(v1);
        }
      }
      if (v78)
      {
        v108 = (unint64_t *)&v78->__shared_owners_;
        do
          v109 = __ldaxr(v108);
        while (__stlxr(v109 - 1, v108));
        if (!v109)
        {
          ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
          std::__shared_weak_count::__release_weak(v78);
        }
      }
      goto LABEL_146;
    }
    v112 = (void *)v6;
    v113 = v2;
    v114 = v1;
    if (v1)
    {
      v91 = (unint64_t *)&v1->__shared_owners_;
      do
        v92 = __ldxr(v91);
      while (__stxr(v92 + 1, v91));
    }
    v93 = v115;
    v94 = a1[1];
    v95 = *(_QWORD *)(v94 + 104);
    if (v95)
    {
      if (v95 == v94 + 80)
      {
        v116 = v115;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v95 + 24))(v95, v115);
LABEL_181:
        LODWORD(__p[0]) = 2;
        __p[7] = 0;
        __p[8] = 0;
        __p[5] = 0;
        v118 = 0;
        v119 = 0;
        v120 = v112;
        v121 = v113;
        v122 = v114;
        if (v114)
        {
          v96 = &v114->__shared_owners_;
          do
            v97 = __ldxr((unint64_t *)v96);
          while (__stxr(v97 + 1, (unint64_t *)v96));
        }
        v98 = (uint64_t)v116;
        if (v116)
        {
          if (v116 == v115)
          {
            v124 = &v123;
            (*(void (**)(_QWORD *))(v115[0] + 24))(v115);
LABEL_189:
            v126 = 0;
            v127 = 0;
            __p[1] = v112;
            __p[6] = v112;
            v125 = 0;
            v120 = v112;
            v99 = operator new(0x120uLL);
            v99[1] = 0;
            v99[2] = 0;
            *v99 = &off_250AFA190;
            *(_QWORD *)&v111 = sub_239B415DC((uint64_t)(v99 + 3), (uint64_t)__p);
            *((_QWORD *)&v111 + 1) = v99;
            sub_239A82E8C(__p);
            if (v116 == v115)
            {
              v100 = 4;
            }
            else
            {
              if (!v116)
                goto LABEL_194;
              v100 = 5;
              v93 = v116;
            }
            (*(void (**)(_QWORD *))(*v93 + 8 * v100))(v93);
LABEL_194:
            if (v114)
            {
              v101 = &v114->__shared_owners_;
              do
                v102 = __ldaxr((unint64_t *)v101);
              while (__stlxr(v102 - 1, (unint64_t *)v101));
              if (!v102)
              {
                ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
                std::__shared_weak_count::__release_weak(v114);
              }
            }
            sub_239B417F8(*(unsigned int **)(v5 + 288), &v111);
            v103 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
            if (*((_QWORD *)&v111 + 1))
            {
              v104 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
              do
                v105 = __ldaxr(v104);
              while (__stlxr(v105 - 1, v104));
              if (!v105)
              {
                ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
                std::__shared_weak_count::__release_weak(v103);
              }
            }
            goto LABEL_204;
          }
          v98 = (*(uint64_t (**)(void))(*v116 + 16))();
        }
        v124 = (uint64_t *)v98;
        goto LABEL_189;
      }
      v95 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v95 + 16))(v95);
    }
    v116 = (_QWORD *)v95;
    goto LABEL_181;
  }
  v73 = a1[1];
LABEL_144:
  v74 = *(_QWORD *)(v73 + 104);
  if (v74)
  {
    LOBYTE(__p[0]) = 1;
    (*(void (**)(uint64_t, void **))(*(_QWORD *)v74 + 48))(v74, __p);
  }
LABEL_146:
  if (v1)
    v75 = v22;
  else
    v75 = 1;
  if ((v75 & 1) == 0)
  {
    v76 = (unint64_t *)&v1->__shared_owners_;
    do
      v77 = __ldaxr(v76);
    while (__stlxr(v77 - 1, v76));
    if (!v77)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B87CCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, uint64_t a17, uint64_t a18, _QWORD *a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t *a25,uint64_t a26,uint64_t a27,std::__shared_weak_count *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t *a33,uint64_t a34,uint64_t a35,std::__shared_weak_count *a36)
{
  std::__shared_weak_count *v36;
  _QWORD *v37;
  std::__shared_weak_count *v38;
  char v39;
  std::__shared_weak_count *v41;
  unint64_t *p_shared_owners;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  char v58;
  unint64_t *v59;
  unint64_t v60;

  v41 = a36;
  if (a36)
  {
    p_shared_owners = (unint64_t *)&a36->__shared_owners_;
    do
      v43 = __ldaxr(p_shared_owners);
    while (__stlxr(v43 - 1, p_shared_owners));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
    }
  }
  v44 = a33;
  if (a33 == &a30)
  {
    v45 = 4;
    v44 = &a30;
  }
  else
  {
    if (!a33)
    {
LABEL_11:
      v46 = a28;
      if (a28)
      {
        v47 = (unint64_t *)&a28->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
      }
      v49 = a25;
      if (a25 == &a22)
      {
        v50 = 4;
        v49 = &a22;
      }
      else
      {
        if (!a25)
          goto LABEL_21;
        v50 = 5;
      }
      (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_21:
      if (a19 == v37)
      {
        v51 = 4;
      }
      else
      {
        if (!a19)
        {
LABEL_26:
          if (a15)
          {
            v52 = (unint64_t *)&a15->__shared_owners_;
            do
              v53 = __ldaxr(v52);
            while (__stlxr(v53 - 1, v52));
            if (!v53)
            {
              ((void (*)(std::__shared_weak_count *))a15->__on_zero_shared)(a15);
              std::__shared_weak_count::__release_weak(a15);
            }
          }
          if (v36)
          {
            v54 = (unint64_t *)&v36->__shared_owners_;
            do
              v55 = __ldaxr(v54);
            while (__stlxr(v55 - 1, v54));
            if (!v55)
            {
              ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
              std::__shared_weak_count::__release_weak(v36);
            }
          }
          if (v38)
          {
            v56 = (unint64_t *)&v38->__shared_owners_;
            do
              v57 = __ldaxr(v56);
            while (__stlxr(v57 - 1, v56));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          if (v36)
            v58 = v39;
          else
            v58 = 1;
          if ((v58 & 1) == 0)
          {
            v59 = (unint64_t *)&v36->__shared_owners_;
            do
              v60 = __ldaxr(v59);
            while (__stlxr(v60 - 1, v59));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
              std::__shared_weak_count::__release_weak(v36);
            }
          }
          _Unwind_Resume(exception_object);
        }
        v51 = 5;
        v37 = a19;
      }
      (*(void (**)(_QWORD *))(*v37 + 8 * v51))(v37);
      goto LABEL_26;
    }
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
  goto LABEL_11;
}

uint64_t sub_239B88020(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AFA210;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_239B880C4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AFA210;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B88178(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  result = operator new(0x40uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AFA210;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *((_BYTE *)result + 24) = 0;
  *((_BYTE *)result + 48) = 0;
  if (*(_BYTE *)(a1 + 48))
  {
    v7 = *(_QWORD *)(a1 + 32);
    result[3] = *(_QWORD *)(a1 + 24);
    result[4] = v7;
    v8 = *(_QWORD *)(a1 + 40);
    result[5] = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    *((_BYTE *)result + 48) = 1;
  }
  result[7] = *(_QWORD *)(a1 + 56);
  return result;
}

uint64_t sub_239B88210(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *(_QWORD *)a2 = &off_250AFA210;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  if (*(_BYTE *)(result + 48))
  {
    v6 = *(_QWORD *)(result + 32);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(result + 24);
    *(_QWORD *)(a2 + 32) = v6;
    v7 = *(_QWORD *)(result + 40);
    *(_QWORD *)(a2 + 40) = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    *(_BYTE *)(a2 + 48) = 1;
  }
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(result + 56);
  return result;
}

void sub_239B88288(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (!*(_BYTE *)(a1 + 48))
    goto LABEL_6;
  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  else
  {
LABEL_6:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239B88330(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (*((_BYTE *)__p + 48))
  {
    v2 = (std::__shared_weak_count *)__p[5];
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B883C8(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  char v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  v2 = a1[7];
  v3 = (std::__shared_weak_count *)a1[5];
  v13 = a1[4];
  v14 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v15 = a1[3];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v13, &v15);
  v8 = v14;
  if (v14)
  {
    v9 = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = *(_QWORD *)(a1[1] + 104);
  if (v11)
  {
    LOBYTE(v15) = v7;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v11 + 48))(v11, &v15);
  }
  return sub_239B86EC0(v2, a1[3]);
}

void sub_239B884AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B884F0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v11;
  uint8x8_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t *v19;
  unint64_t v20;
  float v21;
  float v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t prime;
  int8x8_t v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;

  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v5 = a2;
      if (v11 <= a2)
        v5 = a2 % v11;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
    v13 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
    if (v13)
    {
      v14 = (_QWORD *)*v13;
      if (v14)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == a2)
            {
              if (v14[2] == a2)
                return;
            }
            else if ((v16 & (v11 - 1)) != v5)
            {
              goto LABEL_22;
            }
            v14 = (_QWORD *)*v14;
            if (!v14)
              goto LABEL_22;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == a2)
          {
            if (v14[2] == a2)
              return;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v5)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_22:
  v17 = (_QWORD *)(a1 + 16);
  v18 = operator new(0x28uLL);
  *v18 = 0;
  v18[1] = a2;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  if (a5)
  {
    v19 = (unint64_t *)(a5 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v22 = *(float *)(a1 + 32);
  if (!v11 || (float)(v22 * (float)v11) < v21)
  {
    v23 = 1;
    if (v11 >= 3)
      v23 = (v11 & (v11 - 1)) != 0;
    v24 = v23 | (2 * v11);
    v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25)
      prime = v25;
    else
      prime = v24;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v27 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v27)
      goto LABEL_37;
    if (prime < *(_QWORD *)&v27)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v27 < 3uLL || (v29 = (uint8x8_t)vcnt_s8(v27), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < *(_QWORD *)&v27)
LABEL_37:
        sub_239A501C8(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v11 <= a2)
        v5 = a2 % v11;
      else
        v5 = a2;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
  }
  v31 = *(_QWORD *)a1;
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v32)
  {
    *v18 = *v32;
LABEL_61:
    *v32 = v18;
    goto LABEL_62;
  }
  *v18 = *v17;
  *v17 = v18;
  *(_QWORD *)(v31 + 8 * v5) = v17;
  if (*v18)
  {
    v33 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v33 >= v11)
        v33 %= v11;
    }
    else
    {
      v33 &= v11 - 1;
    }
    v32 = (_QWORD *)(*(_QWORD *)a1 + 8 * v33);
    goto LABEL_61;
  }
LABEL_62:
  ++*(_QWORD *)(a1 + 24);
}

void sub_239B887F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B88808(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t prime;
  unint64_t v21;
  uint8x8_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;

  v5 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (v10[2] == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (v10[2] == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v13 = (_QWORD *)(a1 + 16);
  v10 = operator new(0x28uLL);
  *v10 = 0;
  v10[1] = v5;
  v14 = *a3;
  v10[3] = 0;
  v10[4] = 0;
  v10[2] = v14;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (v7 && (float)(v16 * (float)v7) >= v15)
  {
    v5 = v3;
  }
  else
  {
    v17 = 1;
    if (v7 >= 3)
      v17 = (v7 & (v7 - 1)) != 0;
    v18 = v17 | (2 * v7);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      prime = v19;
    else
      prime = v18;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_35;
    if (prime < v7)
    {
      v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v22 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        v21 = std::__next_prime(v21);
      }
      else
      {
        v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2)
          v21 = v23;
      }
      if (prime <= v21)
        prime = v21;
      if (prime < v7)
LABEL_35:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v5)
        v5 %= v7;
    }
    else
    {
      v5 &= v7 - 1;
    }
  }
  v24 = *(_QWORD *)a1;
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v25)
  {
    *v10 = *v25;
LABEL_58:
    *v25 = v10;
    goto LABEL_59;
  }
  *v10 = *v13;
  *v13 = v10;
  *(_QWORD *)(v24 + 8 * v5) = v13;
  if (*v10)
  {
    v26 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v26 >= v7)
        v26 %= v7;
    }
    else
    {
      v26 &= v7 - 1;
    }
    v25 = (_QWORD *)(*(_QWORD *)a1 + 8 * v26);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239B88AEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B88B00(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA100;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B88B64(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA100;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B88BD8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA100;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B88C30(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA100;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B88C68(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B88CC0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B88D18(_QWORD *a1)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  char v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  uint64_t *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v2 = a1 + 1;
  v3 = a1[1];
  v4 = a1[3];
  ++*(_QWORD *)(v4 + 208);
  std::mutex::lock((std::mutex *)(v4 + 80));
  v5 = *(int8x8_t *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v3 + 8);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = *(_QWORD *)(v3 + 8);
      if (v6 >= *(_QWORD *)&v5)
        v8 = v6 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & v6;
    }
    v9 = *(_QWORD **)(*(_QWORD *)(v4 + 8) + 8 * v8);
    if (v9)
    {
      v10 = (_QWORD *)*v9;
      if (v10)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v6 == v13)
            {
              if (v10[2] == v6)
                goto LABEL_47;
            }
            else if ((v13 & v11) != v8)
            {
              goto LABEL_21;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_21;
          }
        }
        do
        {
          v12 = v10[1];
          if (v6 == v12)
          {
            if (v10[2] == v6)
            {
LABEL_47:
              v28 = v10[3];
              v15 = (std::__shared_weak_count *)v10[4];
              if (v15)
              {
                p_shared_owners = (unint64_t *)&v15->__shared_owners_;
                do
                  v30 = __ldxr(p_shared_owners);
                while (__stxr(v30 + 1, p_shared_owners));
              }
              std::mutex::unlock((std::mutex *)(v4 + 80));
              ++*(_QWORD *)(v4 + 216);
              v31 = *(_QWORD *)v2;
              v32 = *(_QWORD *)(*(_QWORD *)v2 + 40);
              if (v32)
              {
                v40 = v28;
                v41 = v15;
                if (v15)
                {
                  v33 = (unint64_t *)&v15->__shared_owners_;
                  do
                    v34 = __ldxr(v33);
                  while (__stxr(v34 + 1, v33));
                  v32 = *(_QWORD *)(v31 + 40);
                  v39 = 1;
                  if (!v32)
                    sub_2394172E0();
                }
                else
                {
                  v39 = 1;
                }
                (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v32 + 48))(v32, &v40, &v39);
                v35 = v41;
                if (v41)
                {
                  v36 = (unint64_t *)&v41->__shared_owners_;
                  do
                    v37 = __ldaxr(v36);
                  while (__stlxr(v37 - 1, v36));
                  if (!v37)
                  {
                    ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                    std::__shared_weak_count::__release_weak(v35);
                  }
                }
              }
              if (v15)
              {
                v38 = (unint64_t *)&v15->__shared_owners_;
                do
                  v22 = __ldaxr(v38);
                while (__stlxr(v22 - 1, v38));
LABEL_44:
                if (!v22)
                {
                  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                  std::__shared_weak_count::__release_weak(v15);
                }
              }
              return;
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_21:
  std::mutex::unlock((std::mutex *)(v4 + 80));
  v14 = *(_QWORD *)v2;
  if (*(_QWORD *)(v4 + 168))
  {
    v15 = (std::__shared_weak_count *)a1[2];
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      v18 = *(_QWORD *)(*(_QWORD *)v2 + 8);
      do
        v19 = __ldxr(v16);
      while (__stxr(v19 + 1, v16));
    }
    else
    {
      v18 = *(_QWORD *)(v14 + 8);
    }
    v23 = (uint64_t *)operator new(0x20uLL);
    *v23 = (uint64_t)&off_250AFA148;
    v23[1] = v14;
    v23[2] = (uint64_t)v15;
    v23[3] = v4;
    v42 = v23;
    v24 = sub_239A82B00(v4, v18, &v40);
    v25 = v42;
    if (v42 == &v40)
    {
      v26 = 4;
      v25 = &v40;
    }
    else
    {
      if (!v42)
        goto LABEL_39;
      v26 = 5;
    }
    (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_39:
    if ((v24 & 1) == 0)
    {
      sub_239B417F8(*(unsigned int **)(v4 + 288), v2);
      --*(_QWORD *)(v4 + 208);
    }
    if (v15)
    {
      v27 = (unint64_t *)&v15->__shared_owners_;
      do
        v22 = __ldaxr(v27);
      while (__stlxr(v22 - 1, v27));
      goto LABEL_44;
    }
    return;
  }
  v20 = *(_QWORD *)(v14 + 40);
  if (v20)
  {
    v40 = 0;
    v41 = 0;
    v39 = 1;
    (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v20 + 48))(v20, &v40, &v39);
    v15 = v41;
    if (v41)
    {
      v21 = (unint64_t *)&v41->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      goto LABEL_44;
    }
  }
}

void sub_239B890A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  if (v13)
  {
    v17 = (unint64_t *)&v13->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B891D8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA148;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B8923C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA148;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B892B0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA148;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B89308(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA148;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B89340(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B89398(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B893F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t v32[2];
  std::__shared_weak_count *v33;
  char v34;
  _BYTE v35[24];
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 24);
  v37 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  v3 = *(_QWORD *)(v2 + 168);
  if (!v3)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(&v30, v3, &v37);
  v4 = *(_QWORD *)(a1 + 8);
  if (v30)
  {
    v5 = *(_QWORD *)(v4 + 40);
    if (v5)
    {
      v37 = v30;
      v38 = v31;
      if (v31)
      {
        p_shared_owners = (unint64_t *)&v31->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        v5 = *(_QWORD *)(v4 + 40);
        LOBYTE(v32[0]) = 1;
        if (!v5)
          sub_2394172E0();
      }
      else
      {
        LOBYTE(v32[0]) = 1;
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v5 + 48))(v5, &v37, v32);
      v12 = v38;
      if (v38)
      {
        v13 = (unint64_t *)&v38->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
    }
    v32[0] = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    v32[1] = v30;
    v33 = v31;
    if (v31)
    {
      v15 = (unint64_t *)&v31->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    v34 = 1;
    v17 = v35;
    v36 = 0;
    sub_239B4B81C((uint64_t)&v37, v32);
    v18 = operator new(0x120uLL);
    v18[1] = 0;
    v18[2] = 0;
    *v18 = &off_250AFA190;
    *(_QWORD *)&v29 = sub_239B415DC((uint64_t)(v18 + 3), (uint64_t)&v37);
    *((_QWORD *)&v29 + 1) = v18;
    sub_239A82E8C(&v37);
    if (v36 == v35)
    {
      v19 = 4;
    }
    else
    {
      if (!v36)
        goto LABEL_30;
      v19 = 5;
      v17 = v36;
    }
    (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
LABEL_30:
    v20 = v33;
    if (v33)
    {
      v21 = (unint64_t *)&v33->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    sub_239B417F8(*(unsigned int **)(v2 + 288), &v29);
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
    if (*((_QWORD *)&v29 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    goto LABEL_40;
  }
  v8 = *(_QWORD *)(v4 + 40);
  if (v8)
  {
    v37 = 0;
    v38 = 0;
    LOBYTE(v32[0]) = 1;
    (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v8 + 48))(v8, &v37, v32);
    v9 = v38;
    if (v38)
    {
      v10 = (unint64_t *)&v38->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  sub_239B86EC0(v2, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8));
LABEL_40:
  v26 = v31;
  if (v31)
  {
    v27 = (unint64_t *)&v31->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_239B896EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,std::__shared_weak_count *a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;

  if (a22)
  {
    p_shared_owners = (unint64_t *)&a22->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
      std::__shared_weak_count::__release_weak(a22);
    }
  }
  if (a12)
  {
    v25 = (unint64_t *)&a12->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B89828(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA0A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B89838(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA0A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B89868(uint64_t a1)
{
  pthread_mutex_t *v2;
  int v3;

  v2 = (pthread_mutex_t *)(a1 + 200);
  sub_2397A1694((pthread_mutex_t *)(a1 + 200));
  v3 = *(unsigned __int8 *)(a1 + 80);
  sub_2397A16B4(v2);
  if (!v3)
    sub_239B898EC(a1 + 24);
  sub_2397A1694(v2);
  sub_2397A16B4(v2);
  pthread_cond_destroy((pthread_cond_t *)(a1 + 104));
  pthread_cond_destroy((pthread_cond_t *)(a1 + 152));
  sub_2397A163C(v2);
  return sub_239A7BCF8(a1 + 32);
}

uint64_t sub_239B898EC(uint64_t a1)
{
  pthread_mutex_t *v2;
  uint64_t v4;

  v2 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  *(_BYTE *)(a1 + 56) = 1;
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 64) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 80)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 64) <= 0)
        goto LABEL_4;
    }
    v4 = 261;
LABEL_15:
    sub_239A444D4((uint64_t)"unknown file", v4, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
LABEL_4:
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  while (*(_QWORD *)(a1 + 48) && *(uint64_t *)(a1 + 72) >= 1)
  {
    if (pthread_cond_wait((pthread_cond_t *)(a1 + 80), v2))
    {
      sub_239A444D4((uint64_t)"unknown file", 277, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 72) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 128)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 72) <= 0)
        return sub_2397A16B4(v2);
    }
    v4 = 287;
    goto LABEL_15;
  }
  return sub_2397A16B4(v2);
}

void sub_239B89A6C(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

void sub_239B89A8C(uint64_t a1)
{
  sub_239B89AB0(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B89AB0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  uint64_t v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t i;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &off_250AFA060;
  if (*(_QWORD *)(a1 + 272))
  {
    v3 = *(_QWORD *)(a1 + 240);
    v2 = *(std::__shared_weak_count **)(a1 + 248);
    if (!v2)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (v6)
    {
LABEL_7:
      if (v3)
        goto LABEL_10;
      goto LABEL_8;
    }
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (!v3)
LABEL_8:
      sub_2397A3758(*(_QWORD *)(a1 + 272));
  }
LABEL_10:
  v7 = *(_QWORD *)(a1 + 288);
  if (v7)
    sub_239B898EC(v7);
  while (1)
  {
    v42[0] = &off_250AFA408;
    v43 = v42;
    sub_2397A1694((pthread_mutex_t *)(a1 + 344));
    v8 = *(_QWORD *)(a1 + 328);
    if (!v8)
    {
      if (!v43)
        sub_2394172E0();
      (*(void (**)(_QWORD *))(*v43 + 48))(v43);
    }
    sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
    v9 = v43;
    if (v43 == v42)
    {
      v9 = v42;
      v10 = 4;
    }
    else
    {
      if (!v43)
        goto LABEL_20;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_20:
    if (!v8)
      break;
    sub_2397A186C(1);
  }
  v11 = *(_QWORD *)(a1 + 256);
  if (v11)
  {
    sub_2397A195C(v11);
    v12 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  if (*(_QWORD *)(a1 + 288))
  {
    v15 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_QWORD *)(a1 + 328))
  {
    v18 = *(_QWORD **)(a1 + 320);
    if (v18)
    {
      do
      {
        v19 = (_QWORD *)*v18;
        operator delete(v18);
        v18 = v19;
      }
      while (v19);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v20 = *(_QWORD *)(a1 + 312);
    if (v20)
    {
      for (i = 0; i != v20; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 304) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  sub_2397A163C((pthread_mutex_t *)(a1 + 344));
  v22 = *(_QWORD **)(a1 + 320);
  if (v22)
  {
    do
    {
      v23 = (_QWORD *)*v22;
      operator delete(v22);
      v22 = v23;
    }
    while (v23);
  }
  v24 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = 0;
  if (v24)
    operator delete(v24);
  v25 = *(std::__shared_weak_count **)(a1 + 296);
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = *(std::__shared_weak_count **)(a1 + 280);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = *(std::__shared_weak_count **)(a1 + 264);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = *(std::__shared_weak_count **)(a1 + 248);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = *(_QWORD **)(a1 + 200);
  if (v37 == (_QWORD *)(a1 + 176))
  {
    v38 = 4;
    v37 = (_QWORD *)(a1 + 176);
LABEL_69:
    (*(void (**)(void))(*v37 + 8 * v38))();
  }
  else if (v37)
  {
    v38 = 5;
    goto LABEL_69;
  }
  v39 = *(_QWORD **)(a1 + 168);
  if (v39 == (_QWORD *)(a1 + 144))
  {
    v40 = 4;
    v39 = (_QWORD *)(a1 + 144);
LABEL_74:
    (*(void (**)(void))(*v39 + 8 * v40))();
  }
  else if (v39)
  {
    v40 = 5;
    goto LABEL_74;
  }
  return sub_239B84400(a1);
}

void sub_239B89E60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_239416A48(exception_object);
}

void sub_239B89EDC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B89EF0()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AFA408;
  return result;
}

void sub_239B89F14(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AFA408;
}

void sub_239B89F30(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9F98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B89F40(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9F98;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B89F70(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_239B89F84()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B89F98(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AFAB90;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B89FD0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AFAB90;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B89FF0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 + 56);
  v6 = *(std::__shared_weak_count **)(v4 + 64);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v17 = 0;
    v18 = v5;
    v19 = v6;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v17 = 0;
    v18 = v5;
    v19 = 0;
  }
  v16 = v3;
  v17 = (int)std::thread::hardware_concurrency();
  v10 = operator new(0x1B0uLL);
  sub_239B83A58(v10, &v16);
  *a2 = v10 + 3;
  a2[1] = v10;
  v11 = v19;
  if (!v19)
    goto LABEL_12;
  v12 = (unint64_t *)&v19->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    if (!v6)
      return;
  }
  else
  {
LABEL_12:
    if (!v6)
      return;
  }
  v14 = (unint64_t *)&v6->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
}

void sub_239B8A118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  void *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  operator delete(v14);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (v12)
  {
    v18 = (unint64_t *)&v12->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B8A1C8()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B8A1DC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AFAB48;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B8A214(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AFAB48;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B8A234(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  _QWORD v24[3];
  _QWORD *v25;
  _QWORD v26[3];
  _QWORD *v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 + 56);
  v6 = *(std::__shared_weak_count **)(v4 + 64);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v21 = 0;
    v22 = v5;
    v23 = v6;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v21 = 0;
    v22 = v5;
    v23 = 0;
  }
  v20 = v3;
  v21 = (int)std::thread::hardware_concurrency();
  v10 = operator new(0x1B0uLL);
  v10[1] = 0;
  v10[2] = 0;
  *v10 = &off_250AFA498;
  v25 = 0;
  v27 = 0;
  sub_239B8A520((uint64_t)(v10 + 3), &v20, v24, v26);
  v11 = v27;
  if (v27 == v26)
  {
    v12 = 4;
    v11 = v26;
  }
  else
  {
    if (!v27)
      goto LABEL_13;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_13:
  v13 = v25;
  if (v25 == v24)
  {
    v14 = 4;
    v13 = v24;
    goto LABEL_17;
  }
  if (v25)
  {
    v14 = 5;
LABEL_17:
    (*(void (**)(void))(*v13 + 8 * v14))();
  }
  *a2 = v10 + 3;
  a2[1] = v10;
  v15 = v23;
  if (v23)
  {
    v16 = (unint64_t *)&v23->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v6)
  {
    v18 = (unint64_t *)&v6->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_239B8A3FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char *a17, char a18, uint64_t a19, uint64_t a20,char *a21)
{
  std::__shared_weak_count *v21;
  std::__shared_weak_count *v22;
  std::__shared_weak_count *v23;
  char *v24;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;

  v26 = a21;
  if (a21 == v24)
  {
    v27 = 4;
    v26 = &a18;
  }
  else
  {
    if (!a21)
      goto LABEL_6;
    v27 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v26 + 8 * v27))();
LABEL_6:
  v28 = a17;
  if (a17 == &a14)
  {
    v29 = 4;
    v28 = &a14;
  }
  else
  {
    if (!a17)
    {
LABEL_11:
      std::__shared_weak_count::~__shared_weak_count(v22);
      operator delete(v30);
      if (v23)
      {
        p_shared_owners = (unint64_t *)&v23->__shared_owners_;
        do
          v32 = __ldaxr(p_shared_owners);
        while (__stlxr(v32 - 1, p_shared_owners));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      if (v21)
      {
        v33 = (unint64_t *)&v21->__shared_owners_;
        do
          v34 = __ldaxr(v33);
        while (__stlxr(v34 - 1, v33));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      _Unwind_Resume(a1);
    }
    v29 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v28 + 8 * v29))();
  goto LABEL_11;
}

uint64_t sub_239B8A520(uint64_t a1, uint64_t *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  pthread_rwlock_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  char *v34;
  _DWORD *v35;
  unsigned int v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  std::__shared_weak_count *v51;
  unint64_t *p_shared_owners;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  _QWORD v62[3];
  _QWORD *v63;
  uint64_t v64;
  _BYTE v65[24];
  _BYTE *v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v7 = *a2;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = a1 + 56;
  *(_QWORD *)(a1 + 64) = a1 + 56;
  *(_OWORD *)(a1 + 72) = xmmword_239EC69E0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)a1 = &off_250AFA560;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 240) = a2[2];
  v8 = a2[3];
  *(_QWORD *)(a1 + 248) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = (uint64_t *)(a1 + 256);
  *(_OWORD *)(a1 + 304) = 0uLL;
  *(_OWORD *)(a1 + 320) = 0uLL;
  v60 = (uint64_t *)(a1 + 256);
  v61 = (uint64_t *)(a1 + 272);
  v12 = (_QWORD *)(a1 + 288);
  v13 = (_QWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 272) = 0uLL;
  *(_OWORD *)(a1 + 288) = 0uLL;
  *(_OWORD *)(a1 + 256) = 0uLL;
  *(_DWORD *)(a1 + 336) = 1065353216;
  sub_2397A1618((pthread_mutex_t *)(a1 + 344));
  if (!*v12)
  {
    v34 = (char *)operator new(0x108uLL);
    *((_DWORD *)v34 + 6) = 0x7FFFFFFF;
    v35 = v34 + 24;
    *(_OWORD *)(v34 + 8) = 0u;
    *((_OWORD *)v34 + 2) = 0u;
    *(_QWORD *)v34 = &off_250AFA5A0;
    *((_OWORD *)v34 + 3) = 0u;
    *((_OWORD *)v34 + 4) = 0u;
    v34[80] = 0;
    *(_OWORD *)(v34 + 88) = 0u;
    sub_2397A1618((pthread_mutex_t *)(v34 + 200));
    v36 = *((_DWORD *)v34 + 6);
    if (v36 >= 0x7FFFFFFF)
    {
      v36 = 0x7FFFFFFF;
      *v35 = 0x7FFFFFFF;
    }
    else if (v36 < 2)
    {
      v36 = 1;
    }
    *((_DWORD *)v34 + 6) = v36;
    pthread_cond_init((pthread_cond_t *)(v34 + 104), 0);
    pthread_cond_init((pthread_cond_t *)(v34 + 152), 0);
    v51 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = v35;
    *(_QWORD *)(a1 + 296) = v34;
    v11 = v60;
    if (v51)
    {
      p_shared_owners = (unint64_t *)&v51->__shared_owners_;
      do
        v53 = __ldaxr(p_shared_owners);
      while (__stlxr(v53 - 1, p_shared_owners));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
  }
  if (!*v11)
  {
    v14 = operator new(0x120uLL);
    v14[1] = 0;
    v14[2] = 0;
    *v14 = &off_250AE9800;
    v15 = sub_2397A1740((uint64_t)(v14 + 3));
    v16 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = v15;
    *(_QWORD *)(a1 + 264) = v14;
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v19 = *v11;
    v20 = (pthread_rwlock_t *)(*v11 + 24);
    j__pthread_rwlock_wrlock(v20);
    *(_BYTE *)(v19 + 16) = 1;
    j__pthread_rwlock_unlock(v20);
    sub_2397A195C(v19);
    v21 = (_QWORD *)operator new();
    *v21 = &off_250AFA5D8;
    v21[1] = a1;
    *(_QWORD *)(v19 + 224) = v21;
    sub_2397A1878((pthread_t *)v19);
  }
  if (!*v61)
  {
    v22 = *(_QWORD *)(a1 + 240);
    v23 = *(_QWORD *)(a1 + 248);
    if (v23)
    {
      v24 = (unint64_t *)(v23 + 8);
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
    }
    v26 = *(std::__shared_weak_count **)(a1 + 280);
    *(_QWORD *)(a1 + 272) = v22;
    *(_QWORD *)(a1 + 280) = v23;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
      v22 = *v61;
    }
    if (!v22)
    {
      v54 = *(_QWORD *)(a1 + 232);
      v55 = operator new(0x178uLL);
      v55[1] = 0;
      v55[2] = 0;
      *v55 = &off_250ADB8B0;
      v56 = sub_2397A2A50((uint64_t)(v55 + 3), v54, 0);
      v57 = *(std::__shared_weak_count **)(a1 + 280);
      *(_QWORD *)(a1 + 272) = v56;
      *(_QWORD *)(a1 + 280) = v55;
      if (v57)
      {
        v58 = (unint64_t *)&v57->__shared_owners_;
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
    }
  }
  sub_239467C88(a1);
  if (*(_QWORD *)(a1 + 328))
  {
    v29 = *(_QWORD **)(a1 + 320);
    if (v29)
    {
      do
      {
        v30 = (_QWORD *)*v29;
        operator delete(v29);
        v29 = v30;
      }
      while (v30);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v31 = *(_QWORD *)(a1 + 312);
    if (v31)
    {
      for (i = 0; i != v31; ++i)
        *(_QWORD *)(*v13 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  v33 = a3[3];
  if (!v33)
    goto LABEL_33;
  if ((_QWORD *)v33 != a3)
  {
    v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
LABEL_33:
    v63 = (_QWORD *)v33;
    goto LABEL_38;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v62);
LABEL_38:
  v64 = a1;
  v66 = 0;
  v37 = operator new(0x30uLL);
  *v37 = &off_250AFA878;
  v38 = (uint64_t)v63;
  if (!v63)
  {
LABEL_41:
    v37[4] = v38;
    goto LABEL_43;
  }
  if (v63 != v62)
  {
    v38 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_41;
  }
  v37[4] = v37 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_43:
  v37[5] = v64;
  v66 = v37;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v39 = v66;
  if (v66 == v65)
  {
    v40 = 4;
    v39 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_51;
    v40 = 5;
  }
  (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_51:
  v41 = v63;
  if (v63 == v62)
  {
    v42 = 4;
    v41 = v62;
  }
  else
  {
    if (!v63)
      goto LABEL_56;
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_56:
  v43 = a4[3];
  if (!v43)
  {
LABEL_59:
    v63 = (_QWORD *)v43;
    goto LABEL_61;
  }
  if ((_QWORD *)v43 != a4)
  {
    v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 16))(v43);
    goto LABEL_59;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a4 + 24))(a4, v62);
LABEL_61:
  v64 = a1;
  v66 = 0;
  v44 = operator new(0x30uLL);
  *v44 = &off_250AFA8C0;
  v45 = (uint64_t)v63;
  if (!v63)
  {
LABEL_64:
    v44[4] = v45;
    goto LABEL_66;
  }
  if (v63 != v62)
  {
    v45 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_64;
  }
  v44[4] = v44 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_66:
  v44[5] = v64;
  v66 = v44;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v46 = v66;
  if (v66 == v65)
  {
    v47 = 4;
    v46 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_74;
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
LABEL_74:
  v48 = v63;
  if (v63 == v62)
  {
    v49 = 4;
    v48 = v62;
    goto LABEL_78;
  }
  if (v63)
  {
    v49 = 5;
LABEL_78:
    (*(void (**)(void))(*v48 + 8 * v49))();
  }
  return a1;
}

void sub_239B8ABA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _QWORD **v22;
  uint64_t v23;
  pthread_mutex_t *v24;
  std::__shared_weak_count *v25;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  std::__shared_weak_count::~__shared_weak_count(v25);
  operator delete(v27);
  sub_2397A163C(v24);
  sub_239420950(v23);
  sub_239A4D7C0(a10);
  sub_239416DA0(a12);
  sub_239416DA0(a11);
  sub_239A74534(v21 + 224);
  v28 = *v22;
  if (*v22 == (_QWORD *)(v21 + 176))
  {
    v29 = 4;
    v28 = (_QWORD *)(v21 + 176);
  }
  else
  {
    if (!v28)
      goto LABEL_6;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_6:
  v30 = *(_QWORD **)(v21 + 168);
  if (v30 == (_QWORD *)(v21 + 144))
  {
    v31 = 4;
    v30 = (_QWORD *)(v21 + 144);
  }
  else
  {
    if (!v30)
      goto LABEL_11;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_11:
  sub_239B8AD7C(v21);
  _Unwind_Resume(a1);
}

uint64_t sub_239B8AD7C(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;

  *(_QWORD *)a1 = &off_250AFA580;
  sub_239467C88(a1);
  std::mutex::~mutex((std::mutex *)(a1 + 80));
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(_QWORD *)(a1 + 56);
    v2 = *(uint64_t **)(a1 + 64);
    v4 = *v2;
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
    **(_QWORD **)(v3 + 8) = v4;
    *(_QWORD *)(a1 + 72) = 0;
    if (v2 != (uint64_t *)(a1 + 56))
    {
      do
      {
        v5 = (uint64_t *)v2[1];
        operator delete(v2);
        v2 = v5;
      }
      while (v5 != (uint64_t *)(a1 + 56));
    }
  }
  v6 = *(_QWORD **)(a1 + 24);
  while (v6)
  {
    v9 = v6;
    v6 = (_QWORD *)*v6;
    v10 = (std::__shared_weak_count *)v9[4];
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    operator delete(v9);
  }
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v7)
    operator delete(v7);
  return a1;
}

void sub_239B8AE70(uint64_t a1)
{
  sub_239B8AD7C(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8AE94(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AFA8C0;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B8AEF0(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AFA8C0;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8AF5C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AFA8C0;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239B8AFD8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B8AFEC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AFA8C0;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239B8B064(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B8B098(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239B8B0E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 176;
  if ((_QWORD *)(v2 + 176) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 200);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 200) + 24))(*(_QWORD *)(v2 + 200), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
        *(_QWORD *)(v2 + 200) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 176);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 176);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 200);
      }
      *(_QWORD *)(v2 + 200) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 176, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
      *(_QWORD *)(v2 + 200) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 200);
      *(_QWORD *)(v2 + 200) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239B8B2DC(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

_QWORD *sub_239B8B2E8(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AFA878;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239B8B344(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AFA878;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8B3B0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AFA878;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239B8B42C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B8B440(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AFA878;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239B8B4B8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239B8B4EC(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239B8B53C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 144;
  if ((_QWORD *)(v2 + 144) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 168);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 168) + 24))(*(_QWORD *)(v2 + 168), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 168) + 32))(*(_QWORD *)(v2 + 168));
        *(_QWORD *)(v2 + 168) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 144);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 144);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 168);
      }
      *(_QWORD *)(v2 + 168) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 144, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 168) + 32))(*(_QWORD *)(v2 + 168));
      *(_QWORD *)(v2 + 168) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 168);
      *(_QWORD *)(v2 + 168) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239B8B730(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

void sub_239B8B740(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B8B764(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  int *v3;
  BOOL v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  BOOL v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  int8x8_t v35;
  uint8x8_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  int8x8_t v43;
  uint8x8_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t *v79;
  __int128 v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  __int128 v90;
  char v91;
  __int128 v92;
  __int128 v93;
  char v94;
  _BYTE v95[24];
  _BYTE *v96;
  _BYTE v97[24];
  _BYTE *v98;
  _QWORD v99[3];
  _QWORD *v100;
  _BYTE v101[24];
  _BYTE *v102;
  _BYTE v103[24];
  _BYTE *v104;
  _BYTE v105[24];
  _BYTE *v106;
  uint64_t v107;

  v107 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned int **)(v1 + 288);
  if (v2)
  {
    sub_239B8C4C0((uint64_t)&v93, v2);
    v3 = (int *)v93;
    if ((_QWORD)v93)
      v4 = v94 == 0;
    else
      v4 = 1;
    if (!v4)
    {
      v8 = (_QWORD *)(v1 + 304);
      while (2)
      {
        v10 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
        *(_QWORD *)&v92 = v3;
        *((_QWORD *)&v92 + 1) = *((_QWORD *)&v93 + 1);
        if (*((_QWORD *)&v93 + 1))
        {
          v11 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        v13 = *v3;
        switch(*v3)
        {
          case 0:
            if (v10)
            {
              p_shared_owners = (unint64_t *)&v10->__shared_owners_;
              do
                v15 = __ldxr(p_shared_owners);
              while (__stxr(v15 + 1, p_shared_owners));
              v16 = *((_QWORD *)v3 + 1);
              do
                v17 = __ldxr(p_shared_owners);
              while (__stxr(v17 + 1, p_shared_owners));
            }
            else
            {
              v16 = *((_QWORD *)v3 + 1);
            }
            v106 = 0;
            v50 = operator new(0x20uLL);
            *v50 = &off_250AFA600;
            v50[1] = v3;
            v50[2] = v10;
            v50[3] = v1;
            v106 = v50;
            v51 = sub_239B8C6B8(v1, v16, (uint64_t)v105);
            v52 = v106;
            if (v106 == v105)
            {
              v52 = v105;
              v53 = 4;
            }
            else
            {
              if (!v106)
                goto LABEL_82;
              v53 = 5;
            }
            (*(void (**)(void))(*v52 + 8 * v53))();
LABEL_82:
            if ((v51 & 1) == 0)
              sub_239B40A0C(*(unsigned int **)(v1 + 288), &v92);
            if (v10)
            {
              v58 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v58);
              while (__stlxr(v59 - 1, v58));
              goto LABEL_166;
            }
            goto LABEL_168;
          case 1:
            if (v10)
            {
              v29 = (unint64_t *)&v10->__shared_owners_;
              do
                v30 = __ldxr(v29);
              while (__stxr(v30 + 1, v29));
              v31 = *((unsigned __int8 *)v3 + 72);
              v32 = *((_QWORD *)v3 + 6);
              do
                v33 = __ldxr(v29);
              while (__stxr(v33 + 1, v29));
              if (!v31)
              {
LABEL_77:
                v104 = 0;
                v54 = operator new(0x20uLL);
                *v54 = &off_250AFA6C8;
                v54[1] = v3;
                v54[2] = v10;
                v54[3] = v1;
                v104 = v54;
                v55 = sub_239B8C6B8(v1, v32, (uint64_t)v103);
                v56 = v104;
                if (v104 == v103)
                {
                  v56 = v103;
                  v57 = 4;
LABEL_160:
                  (*(void (**)(void))(*v56 + 8 * v57))();
                }
                else if (v104)
                {
                  v57 = 5;
                  goto LABEL_160;
                }
                if ((v55 & 1) == 0)
                  sub_239B40A0C(*(unsigned int **)(v1 + 288), &v92);
                goto LABEL_163;
              }
            }
            else
            {
              v32 = *((_QWORD *)v3 + 6);
              if (!*((_BYTE *)v3 + 72))
                goto LABEL_77;
            }
            v102 = 0;
            v34 = operator new(0x20uLL);
            *v34 = &off_250AFA6C8;
            v34[1] = v3;
            v34[2] = v10;
            v34[3] = v1;
            v102 = v34;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v35 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v35)
              goto LABEL_151;
            v36 = (uint8x8_t)vcnt_s8(v35);
            v36.i16[0] = vaddlv_u8(v36);
            if (v36.u32[0] > 1uLL)
            {
              v37 = v32;
              if (*(_QWORD *)&v35 <= v32)
                v37 = v32 % *(_QWORD *)&v35;
            }
            else
            {
              v37 = (*(_QWORD *)&v35 - 1) & v32;
            }
            v71 = *(_QWORD **)(*v8 + 8 * v37);
            if (!v71 || (v72 = (_QWORD *)*v71) == 0)
            {
LABEL_151:
              v76 = 0;
              goto LABEL_152;
            }
            if (v36.u32[0] < 2uLL)
            {
              v73 = *(_QWORD *)&v35 - 1;
              while (1)
              {
                v75 = v72[1];
                if (v75 == v32)
                {
                  if (v72[2] == v32)
                    goto LABEL_184;
                }
                else if ((v75 & v73) != v37)
                {
                  goto LABEL_151;
                }
                v72 = (_QWORD *)*v72;
                if (!v72)
                  goto LABEL_151;
              }
            }
            while (1)
            {
              v74 = v72[1];
              if (v74 == v32)
                break;
              if (v74 >= *(_QWORD *)&v35)
                v74 %= *(_QWORD *)&v35;
              if (v74 != v37)
                goto LABEL_151;
LABEL_141:
              v72 = (_QWORD *)*v72;
              if (!v72)
                goto LABEL_151;
            }
            if (v72[2] != v32)
              goto LABEL_141;
LABEL_184:
            if (!v102)
              sub_2394172E0();
            (*(void (**)(_BYTE *))(*(_QWORD *)v102 + 48))(v102);
            v76 = 1;
LABEL_152:
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v77 = v102;
            if (v102 == v101)
            {
              v77 = v101;
              v78 = 4;
LABEL_156:
              (*(void (**)(void))(*v77 + 8 * v78))();
            }
            else if (v102)
            {
              v78 = 5;
              goto LABEL_156;
            }
            if ((v76 & 1) == 0)
            {
              sub_239A444D4((uint64_t)"unknown file", 793, (uint64_t)"", (void (*)(void *))sub_239A4463C);
              sub_239A4475C();
              abort();
            }
LABEL_163:
            if (v10)
            {
              v79 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v79);
              while (__stlxr(v59 - 1, v79));
              goto LABEL_166;
            }
LABEL_168:
            sub_239B8C4C0((uint64_t)&v90, *(unsigned int **)(v1 + 288));
            v80 = v90;
            v90 = 0uLL;
            v81 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
            v93 = v80;
            if (v81)
            {
              v82 = (unint64_t *)&v81->__shared_owners_;
              do
                v83 = __ldaxr(v82);
              while (__stlxr(v83 - 1, v82));
              if (!v83)
              {
                ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                std::__shared_weak_count::__release_weak(v81);
              }
            }
            v94 = v91;
            v84 = (std::__shared_weak_count *)*((_QWORD *)&v90 + 1);
            if (!*((_QWORD *)&v90 + 1))
              goto LABEL_177;
            v85 = (unint64_t *)(*((_QWORD *)&v90 + 1) + 8);
            do
              v86 = __ldaxr(v85);
            while (__stlxr(v86 - 1, v85));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
              std::__shared_weak_count::__release_weak(v84);
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
              {
LABEL_178:
                v88 = (unint64_t *)&v87->__shared_owners_;
                do
                  v89 = __ldaxr(v88);
                while (__stlxr(v89 - 1, v88));
                if (!v89)
                {
                  ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                  std::__shared_weak_count::__release_weak(v87);
                }
              }
            }
            else
            {
LABEL_177:
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
                goto LABEL_178;
            }
            v3 = (int *)v93;
            if ((_QWORD)v93)
              v9 = v94 == 0;
            else
              v9 = 1;
            if (v9)
              break;
            continue;
          case 2:
            if (v10)
            {
              v24 = (unint64_t *)&v10->__shared_owners_;
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              v26 = *((_QWORD *)v3 + 14);
              do
                v27 = __ldxr(v24);
              while (__stxr(v27 + 1, v24));
            }
            else
            {
              v26 = *((_QWORD *)v3 + 14);
            }
            v100 = 0;
            v42 = operator new(0x20uLL);
            *v42 = &off_250AFA758;
            v42[1] = v3;
            v42[2] = v10;
            v42[3] = v1;
            v100 = v42;
            *(_QWORD *)&v90 = v26;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v43 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v43)
              goto LABEL_122;
            v44 = (uint8x8_t)vcnt_s8(v43);
            v44.i16[0] = vaddlv_u8(v44);
            if (v44.u32[0] > 1uLL)
            {
              v45 = v26;
              if (*(_QWORD *)&v43 <= v26)
                v45 = v26 % *(_QWORD *)&v43;
            }
            else
            {
              v45 = (*(_QWORD *)&v43 - 1) & v26;
            }
            v62 = *(_QWORD **)(*v8 + 8 * v45);
            if (!v62)
              goto LABEL_122;
            v63 = (_QWORD *)*v62;
            if (!v63)
              goto LABEL_122;
            if (v44.u32[0] < 2uLL)
            {
              v64 = *(_QWORD *)&v43 - 1;
              while (1)
              {
                v66 = v63[1];
                if (v66 == v26)
                {
                  if (v63[2] == v26)
                    goto LABEL_121;
                }
                else if ((v66 & v64) != v45)
                {
                  goto LABEL_122;
                }
                v63 = (_QWORD *)*v63;
                if (!v63)
                  goto LABEL_122;
              }
            }
            while (1)
            {
              v65 = v63[1];
              if (v65 == v26)
              {
                if (v63[2] == v26)
                {
LABEL_121:
                  v67 = 0;
                  goto LABEL_123;
                }
              }
              else
              {
                if (v65 >= *(_QWORD *)&v43)
                  v65 %= *(_QWORD *)&v43;
                if (v65 != v45)
                {
LABEL_122:
                  sub_239465800(v1 + 304, (unint64_t *)&v90, &v90);
                  sub_239A7798C(*(_QWORD *)(v1 + 272), v99);
                  v67 = 1;
LABEL_123:
                  sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
                  v68 = v100;
                  if (v100 == v99)
                  {
                    v68 = v99;
                    v69 = 4;
LABEL_127:
                    (*(void (**)(void))(*v68 + 8 * v69))();
                  }
                  else if (v100)
                  {
                    v69 = 5;
                    goto LABEL_127;
                  }
                  if ((v67 & 1) == 0)
                    sub_239B40A0C(*(unsigned int **)(v1 + 288), &v92);
                  if (v10)
                  {
                    v70 = (unint64_t *)&v10->__shared_owners_;
                    do
                      v59 = __ldaxr(v70);
                    while (__stlxr(v59 - 1, v70));
                    goto LABEL_166;
                  }
                  goto LABEL_168;
                }
              }
              v63 = (_QWORD *)*v63;
              if (!v63)
                goto LABEL_122;
            }
          case 3:
            v90 = *(_OWORD *)(v1 + 208);
            v28 = *((_QWORD *)v3 + 24);
            if (v28)
              (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v28 + 48))(v28, &v90);
            goto LABEL_168;
          default:
            if (v13 != 99)
            {
              if (v13 != 100)
                goto LABEL_168;
              if (v10)
              {
                v18 = (unint64_t *)&v10->__shared_owners_;
                do
                  v19 = __ldxr(v18);
                while (__stxr(v19 + 1, v18));
                do
                  v20 = __ldxr(v18);
                while (__stxr(v20 + 1, v18));
              }
              v96 = 0;
              v46 = operator new(0x20uLL);
              *v46 = &off_250AFA7E8;
              v46[1] = v3;
              v46[2] = v10;
              v46[3] = v1;
              v96 = v46;
              sub_2397A1694((pthread_mutex_t *)(v1 + 344));
              v47 = *(_QWORD *)(v1 + 328);
              if (!v47)
              {
                if (!v96)
                  sub_2394172E0();
                (*(void (**)(_BYTE *))(*(_QWORD *)v96 + 48))(v96);
              }
              sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
              v48 = v96;
              if (v96 == v95)
              {
                v48 = v95;
                v49 = 4;
              }
              else
              {
                if (!v96)
                {
LABEL_98:
                  if (v47)
                    sub_239B40A0C(*(unsigned int **)(v1 + 288), &v92);
                  if (!v10)
                    goto LABEL_168;
                  v61 = (unint64_t *)&v10->__shared_owners_;
                  do
                    v59 = __ldaxr(v61);
                  while (__stlxr(v59 - 1, v61));
                  goto LABEL_166;
                }
                v49 = 5;
              }
              (*(void (**)(void))(*v48 + 8 * v49))();
              goto LABEL_98;
            }
            if (v10)
            {
              v21 = (unint64_t *)&v10->__shared_owners_;
              do
                v22 = __ldxr(v21);
              while (__stxr(v22 + 1, v21));
              do
                v23 = __ldxr(v21);
              while (__stxr(v23 + 1, v21));
            }
            v98 = 0;
            v38 = operator new(0x20uLL);
            *v38 = &off_250AFA7A0;
            v38[1] = v3;
            v38[2] = v10;
            v38[3] = v1;
            v98 = v38;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v39 = *(_QWORD *)(v1 + 328);
            if (!v39)
            {
              if (!v98)
                sub_2394172E0();
              (*(void (**)(_BYTE *))(*(_QWORD *)v98 + 48))(v98);
            }
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v40 = v98;
            if (v98 == v97)
            {
              v40 = v97;
              v41 = 4;
            }
            else
            {
              if (!v98)
              {
LABEL_90:
                if (v39)
                  sub_239B40A0C(*(unsigned int **)(v1 + 288), &v92);
                if (!v10)
                  goto LABEL_168;
                v60 = (unint64_t *)&v10->__shared_owners_;
                do
                  v59 = __ldaxr(v60);
                while (__stlxr(v59 - 1, v60));
LABEL_166:
                if (!v59)
                {
                  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
                  std::__shared_weak_count::__release_weak(v10);
                }
                goto LABEL_168;
              }
              v41 = 5;
            }
            (*(void (**)(void))(*v40 + 8 * v41))();
            goto LABEL_90;
        }
        break;
      }
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
    if (*((_QWORD *)&v93 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
}

void sub_239B8C074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char *a34)
{
  std::__shared_weak_count *v34;
  pthread_mutex_t *v35;
  char *v37;
  uint64_t v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;

  sub_2397A16B4(v35);
  v37 = a34;
  if (a34 == &a31)
  {
    v38 = 4;
    v37 = &a31;
  }
  else
  {
    if (!a34)
    {
LABEL_6:
      if (v34)
      {
        p_shared_owners = (unint64_t *)&v34->__shared_owners_;
        do
          v40 = __ldaxr(p_shared_owners);
        while (__stlxr(v40 - 1, p_shared_owners));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      if (a14)
      {
        v41 = (unint64_t *)&a14->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
          std::__shared_weak_count::__release_weak(a14);
        }
      }
      if (a16)
      {
        v43 = (unint64_t *)&a16->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
          std::__shared_weak_count::__release_weak(a16);
        }
      }
      _Unwind_Resume(a1);
    }
    v38 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v37 + 8 * v38))();
  goto LABEL_6;
}

uint64_t sub_239B8C4C0(uint64_t a1, unsigned int *a2)
{
  pthread_mutex_t *v4;
  __int128 v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v17;

  v4 = (pthread_mutex_t *)(a2 + 44);
  sub_2397A1694((pthread_mutex_t *)(a2 + 44));
  if (*((_QWORD *)a2 + 6))
  {
LABEL_4:
    v5 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                   + 16 * *((_QWORD *)a2 + 5));
    v17 = v5;
    if (*((_QWORD *)&v5 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
      v8 = *(std::__shared_weak_count **)(*(_QWORD *)(*((_QWORD *)a2 + 2)
                                                    + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                                        + 16 * *((_QWORD *)a2 + 5)
                                        + 8);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }
    v11 = *((_QWORD *)a2 + 6) - 1;
    v12 = *((_QWORD *)a2 + 5) + 1;
    *((_QWORD *)a2 + 5) = v12;
    *((_QWORD *)a2 + 6) = v11;
    if (v12 >= 0x200)
    {
      operator delete(**((void ***)a2 + 2));
      *((_QWORD *)a2 + 2) += 8;
      v11 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a2 + 5) -= 256;
    }
    if (v11 < *a2)
      pthread_cond_signal((pthread_cond_t *)(a2 + 20));
    *(_OWORD *)a1 = v17;
    if (*((_QWORD *)&v17 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v17 + 1) + 16))(*((_QWORD *)&v17 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v17 + 1));
      }
    }
    else
    {
      *(_BYTE *)(a1 + 16) = 1;
    }
  }
  else
  {
    while (!*((_BYTE *)a2 + 56))
    {
      ++*((_QWORD *)a2 + 9);
      pthread_cond_wait((pthread_cond_t *)(a2 + 32), v4);
      --*((_QWORD *)a2 + 9);
      if (*((_QWORD *)a2 + 6))
        goto LABEL_4;
    }
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
  return sub_2397A16B4(v4);
}

void sub_239B8C68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pthread_mutex_t *v9;

  sub_239A4D7C0((uint64_t)&a9);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_239B8C6B8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  pthread_mutex_t *v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v7 = *(int8x8_t *)(a1 + 312);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8(v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v9 = a2;
      if (*(_QWORD *)&v7 <= a2)
        v9 = a2 % *(_QWORD *)&v7;
    }
    else
    {
      v9 = (*(_QWORD *)&v7 - 1) & a2;
    }
    v10 = *(_QWORD **)(*(_QWORD *)(a1 + 304) + 8 * v9);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (v11)
      {
        if (v8.u32[0] < 2uLL)
        {
          v12 = *(_QWORD *)&v7 - 1;
          while (1)
          {
            v14 = v11[1];
            if (v14 == a2)
            {
              if (v11[2] == a2)
                goto LABEL_21;
            }
            else if ((v14 & v12) != v9)
            {
              goto LABEL_22;
            }
            v11 = (_QWORD *)*v11;
            if (!v11)
              goto LABEL_22;
          }
        }
        do
        {
          v13 = v11[1];
          if (v13 == a2)
          {
            if (v11[2] == a2)
            {
LABEL_21:
              v15 = 0;
              goto LABEL_24;
            }
          }
          else
          {
            if (v13 >= *(_QWORD *)&v7)
              v13 %= *(_QWORD *)&v7;
            if (v13 != v9)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_22:
  v16 = *(_QWORD *)(a3 + 24);
  if (!v16)
    sub_2394172E0();
  (*(void (**)(uint64_t))(*(_QWORD *)v16 + 48))(v16);
  v15 = 1;
LABEL_24:
  sub_2397A16B4(v6);
  return v15;
}

void sub_239B8C7F8(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B8C810(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA7E8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B8C874(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA7E8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8C8E8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA7E8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B8C940(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA7E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B8C978(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B8C9D0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B8CA28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned __int16 i;
  uint64_t v27;
  uint64_t v29;
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  pthread_cond_t v37;
  pthread_cond_t v38;
  pthread_mutex_t v39;
  _BYTE v40[24];
  _BYTE *v41;
  uint64_t v42;

  v1 = a1;
  v42 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD **)(a1 + 24);
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_2397A1618(&v39);
  v30 = 0x7FFFFFFF;
  pthread_cond_init(&v37, 0);
  pthread_cond_init(&v38, 0);
  v3 = (_QWORD *)v2[3];
  if (!v3)
    goto LABEL_44;
  v29 = v1;
  v4 = 0;
  do
  {
    v6 = v3[2];
    v5 = v3[3];
    v7 = (std::__shared_weak_count *)v3[4];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }
    if (!v5 || !v2[25])
    {
      if (!v7)
        goto LABEL_4;
      goto LABEL_36;
    }
    if (v7)
    {
      v10 = (unint64_t *)&v7->__shared_owners_;
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
      v12 = v2[34];
      if (!*(_QWORD *)(v12 + 272))
      {
LABEL_50:
        sub_239A444D4((uint64_t)"unknown file", 546, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v13 = (unint64_t *)&v7->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v15 = *(unsigned int **)(v12 + 272);
      do
        v16 = __ldxr(v13);
      while (__stxr(v16 + 1, v13));
    }
    else
    {
      v15 = *(unsigned int **)(v2[34] + 272);
      if (!v15)
        goto LABEL_50;
    }
    v41 = 0;
    v17 = operator new(0x38uLL);
    *v17 = &off_250AFA830;
    v17[1] = v6;
    v17[2] = v5;
    v17[3] = v7;
    v17[4] = &v30;
    v17[5] = v2;
    v41 = v17;
    sub_2394D0CC4(v15, (uint64_t)v40);
    v18 = v41;
    if (v41 == v40)
    {
      v18 = v40;
      v19 = 4;
      goto LABEL_26;
    }
    if (v41)
    {
      v19 = 5;
LABEL_26:
      (*(void (**)(void))(*v18 + 8 * v19))();
    }
    if (!v7)
    {
      ++v4;
      goto LABEL_4;
    }
    v20 = (unint64_t *)&v7->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    ++v4;
    v22 = (unint64_t *)&v7->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_36:
    v24 = (unint64_t *)&v7->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_4:
    v3 = (_QWORD *)*v3;
  }
  while (v3);
  v1 = v29;
  if (v4 && (unsigned __int16)sub_2395BFB54(&v30) >= 0x100u)
  {
    do
      --v4;
    while (v4 && (unsigned __int16)sub_2395BFB54(&v30) > 0xFFu);
  }
LABEL_44:
  sub_2395C2A4C((uint64_t)&v30);
  for (i = sub_2395BFB54(&v30); i >= 0x100u; i = sub_2395BFB54(&v30))
    ;
  v27 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 256);
  if (v27)
  {
    v40[0] = 1;
    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v27 + 48))(v27, v40);
  }
  return sub_2395C29C4((uint64_t)&v30);
}

void sub_239B8CD80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_2395C29C4((uint64_t)&a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B8CF70(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA830;
  v2 = (std::__shared_weak_count *)a1[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B8CFD4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA830;
  v1 = (std::__shared_weak_count *)a1[3];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B8D048(__n128 *a1)
{
  __n128 *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  __n128 result;

  v2 = (__n128 *)operator new(0x38uLL);
  v3 = a1->n128_u64[1];
  v4 = a1[1].n128_u64[0];
  v2->n128_u64[0] = (unint64_t)&off_250AFA830;
  v2->n128_u64[1] = v3;
  v5 = a1[1].n128_u64[1];
  v2[1].n128_u64[0] = v4;
  v2[1].n128_u64[1] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[2];
  v2[2] = result;
  return result;
}

__n128 sub_239B8D0A4(__n128 *a1, __n128 *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __n128 result;

  v2 = a1->n128_u64[1];
  v3 = a1[1].n128_u64[0];
  a2->n128_u64[0] = (unint64_t)&off_250AFA830;
  a2->n128_u64[1] = v2;
  v4 = a1[1].n128_u64[1];
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = a1[2];
  a2[2] = result;
  return result;
}

void sub_239B8D0E0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B8D138(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B8D190(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v2 = a1[5];
  v3 = (std::__shared_weak_count *)a1[3];
  v12 = a1[2];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v14 = a1[1];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v12, &v14);
  v7 = v13;
  if (v13)
  {
    v8 = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)a1[4];
  LOBYTE(v14) = 1;
  return sub_2395BFE44(v10, &v14);
}

void sub_239B8D250(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B8D294(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA7A0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B8D2F8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA7A0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8D36C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA7A0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B8D3C4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA7A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B8D3FC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B8D454(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B8D4AC(uint64_t a1)
{
  uint64_t result;

  sub_239467C88(*(_QWORD *)(a1 + 24));
  result = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 224);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

_QWORD *sub_239B8D4F0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA758;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B8D554(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA758;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8D5C8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA758;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B8D620(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA758;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B8D658(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B8D6B0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B8D708(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  char v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 8);
  v4 = (std::__shared_weak_count *)v3[16];
  v15 = v3[15];
  v16 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v3 = *(_QWORD **)(a1 + 8);
  }
  v17 = v3[14];
  v7 = *(_QWORD *)(v2 + 200);
  if (!v7)
    sub_2394172E0();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v15, &v17);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(v12 + 160);
  if (v13)
  {
    LOBYTE(v17) = v8;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v13 + 48))(v13, &v17);
    v12 = *(_QWORD *)(a1 + 8);
  }
  return sub_239B8D83C(v2, *(_QWORD *)(v12 + 112));
}

void sub_239B8D7F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B8D83C(uint64_t a1, unint64_t a2)
{
  pthread_mutex_t *v4;
  int8x8_t v5;
  _QWORD *v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD **v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *__p;

  v4 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v5 = *(int8x8_t *)(a1 + 312);
  if (v5)
  {
    v6 = (_QWORD *)(a1 + 304);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = a2;
      if (*(_QWORD *)&v5 <= a2)
        v8 = a2 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*v6 + 8 * v8);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v13 == a2)
            {
              if (v10[2] == a2)
                goto LABEL_22;
            }
            else if ((v13 & v11) != v8)
            {
              return sub_2397A16B4(v4);
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              return sub_2397A16B4(v4);
          }
        }
        do
        {
          v12 = v10[1];
          if (v12 == a2)
          {
            if (v10[2] == a2)
            {
LABEL_22:
              sub_239A78378((uint64_t)&__p, v6, v10);
              if (__p)
                operator delete(__p);
              return sub_2397A16B4(v4);
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              return sub_2397A16B4(v4);
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  return sub_2397A16B4(v4);
}

_QWORD *sub_239B8D96C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA6C8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B8D9D0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA6C8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8DA44(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA6C8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B8DA9C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA6C8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B8DAD4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B8DB2C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B8DB84(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  int8x8_t v8;
  uint8x8_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  uint64_t v28;
  int8x8_t v29;
  uint8x8_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD **v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  int v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int8x8_t v64;
  _QWORD *v65;
  uint8x8_t v66;
  unint64_t v67;
  _QWORD **v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  unint64_t *v76;
  unint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t *v85;
  unint64_t v86;
  _QWORD *v87;
  char v88;
  _QWORD *v89;
  uint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t *v101;
  unint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t *v108;
  unint64_t v109;
  uint64_t v110;
  __int128 v111;
  void *v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  _QWORD v115[3];
  _QWORD *v116;
  void *__p[9];
  char v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  std::__shared_weak_count *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[3];
  _QWORD *v129;
  uint64_t v130;

  v130 = *MEMORY[0x24BDAC8D0];
  v3 = (_QWORD *)a1[1];
  if (!v3[7])
  {
    v11 = v3[13];
    if (v11)
    {
      LOBYTE(__p[0]) = 0;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)v11 + 48))(v11, __p);
    }
    return;
  }
  v5 = a1[3];
  std::mutex::lock((std::mutex *)(v5 + 80));
  v6 = v3[6];
  v7 = (uint64_t *)(v5 + 8);
  v8 = *(int8x8_t *)(v5 + 16);
  if (!*(_QWORD *)&v8)
    goto LABEL_24;
  v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = v3[6];
    if (v6 >= *(_QWORD *)&v8)
      v10 = v6 % *(_QWORD *)&v8;
  }
  else
  {
    v10 = (*(_QWORD *)&v8 - 1) & v6;
  }
  v12 = *(_QWORD **)(*v7 + 8 * v10);
  if (!v12 || (v13 = (_QWORD *)*v12) == 0)
  {
LABEL_24:
    if ((unint64_t)(*(_QWORD *)(v5 + 32) + 1) > *(_QWORD *)(v5 + 48))
    {
      v16 = *(_QWORD *)(v5 + 72);
      if (v16)
      {
        v17 = *(uint64_t **)(v5 + 56);
        v6 = v17[2];
        if ((*(_QWORD *)&v8 & (*(_QWORD *)&v8 - 1)) != 0)
        {
          v25 = v17[2];
          if (v6 >= *(_QWORD *)&v8)
            v25 = v6 % *(_QWORD *)&v8;
          v18 = *(_QWORD **)(*v7 + 8 * v25);
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        else
        {
          v18 = *(_QWORD **)(*v7 + 8 * (v6 & (*(_QWORD *)&v8 - 1)));
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        v2 = v18[3];
        v1 = (std::__shared_weak_count *)v18[4];
        if (v1)
        {
          p_shared_owners = (unint64_t *)&v1->__shared_owners_;
          do
            v27 = __ldxr(p_shared_owners);
          while (__stxr(v27 + 1, p_shared_owners));
          v17 = *(uint64_t **)(v5 + 56);
          v16 = *(_QWORD *)(v5 + 72);
        }
        v28 = *v17;
        *(_QWORD *)(v28 + 8) = v17[1];
        *(_QWORD *)v17[1] = v28;
        *(_QWORD *)(v5 + 72) = v16 - 1;
        operator delete(v17);
        v29 = *(int8x8_t *)(v5 + 16);
        if (v29)
        {
          v30 = (uint8x8_t)vcnt_s8(v29);
          v30.i16[0] = vaddlv_u8(v30);
          if (v30.u32[0] > 1uLL)
          {
            v31 = v6;
            if (v6 >= *(_QWORD *)&v29)
              v31 = v6 % *(_QWORD *)&v29;
          }
          else
          {
            v31 = (*(_QWORD *)&v29 - 1) & v6;
          }
          v32 = *v7;
          v33 = *(_QWORD ***)(*v7 + 8 * v31);
          if (v33)
          {
            v34 = *v33;
            if (*v33)
            {
              v35 = *(_QWORD *)&v29 - 1;
              if (v30.u32[0] < 2uLL)
              {
                while (1)
                {
                  v36 = v34[1];
                  if (v36 == v6)
                  {
                    if (v34[2] == v6)
                      goto LABEL_75;
                  }
                  else if ((v36 & v35) != v31)
                  {
                    goto LABEL_107;
                  }
                  v34 = (_QWORD *)*v34;
                  if (!v34)
                    goto LABEL_107;
                }
              }
              do
              {
                v37 = v34[1];
                if (v37 == v6)
                {
                  if (v34[2] == v6)
                  {
LABEL_75:
                    if (v30.u32[0] > 1uLL)
                    {
                      v46 = v6;
                      if (v6 >= *(_QWORD *)&v29)
                        v46 = v6 % *(_QWORD *)&v29;
                    }
                    else
                    {
                      v46 = v35 & v6;
                    }
                    v47 = *(_QWORD **)(v32 + 8 * v46);
                    do
                    {
                      v48 = v47;
                      v47 = (_QWORD *)*v47;
                    }
                    while (v47 != v34);
                    if (v48 == (_QWORD *)(v5 + 24))
                      goto LABEL_92;
                    v49 = v48[1];
                    if (v30.u32[0] > 1uLL)
                    {
                      if (v49 >= *(_QWORD *)&v29)
                        v49 %= *(_QWORD *)&v29;
                    }
                    else
                    {
                      v49 &= v35;
                    }
                    if (v49 != v46)
                    {
LABEL_92:
                      if (!*v34)
                        goto LABEL_93;
                      v50 = *(_QWORD *)(*v34 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v50 >= *(_QWORD *)&v29)
                          v50 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v50 &= v35;
                      }
                      if (v50 != v46)
LABEL_93:
                        *(_QWORD *)(v32 + 8 * v46) = 0;
                    }
                    v51 = *v34;
                    v110 = v2;
                    if (*v34)
                    {
                      v52 = *(_QWORD *)(v51 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v52 >= *(_QWORD *)&v29)
                          v52 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v52 &= v35;
                      }
                      if (v52 != v46)
                      {
                        *(_QWORD *)(*v7 + 8 * v52) = v48;
                        v51 = *v34;
                      }
                    }
                    *v48 = v51;
                    *v34 = 0;
                    --*(_QWORD *)(v5 + 32);
                    v53 = (std::__shared_weak_count *)v34[4];
                    if (v53)
                    {
                      v54 = (unint64_t *)&v53->__shared_owners_;
                      do
                        v55 = __ldaxr(v54);
                      while (__stlxr(v55 - 1, v54));
                      if (!v55)
                      {
                        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
                        std::__shared_weak_count::__release_weak(v53);
                      }
                    }
                    operator delete(v34);
                    v2 = v110;
                    break;
                  }
                }
                else
                {
                  if (v37 >= *(_QWORD *)&v29)
                    v37 %= *(_QWORD *)&v29;
                  if (v37 != v31)
                    break;
                }
                v34 = (_QWORD *)*v34;
              }
              while (v34);
            }
          }
        }
LABEL_107:
        v56 = operator new(0x18uLL);
        v56[2] = v3[6];
        *v56 = v5 + 56;
        v57 = *(_QWORD **)(v5 + 64);
        v56[1] = v57;
        *v57 = v56;
        v58 = *(_QWORD *)(v5 + 72) + 1;
        *(_QWORD *)(v5 + 64) = v56;
        *(_QWORD *)(v5 + 72) = v58;
        sub_239B8EE6C(v5 + 8, v3[6], v3[6], v3[7], v3[8]);
        if (v1)
        {
          v59 = (unint64_t *)&v1->__shared_owners_;
          do
            v60 = __ldxr(v59);
          while (__stxr(v60 + 1, v59));
          do
            v61 = __ldaxr(v59);
          while (__stlxr(v61 - 1, v59));
          v45 = 0;
          v22 = 0;
          if (!v61)
            goto LABEL_112;
          goto LABEL_114;
        }
      }
      else
      {
        v2 = v3[7];
        v1 = (std::__shared_weak_count *)v3[8];
        if (v1)
        {
          v23 = (unint64_t *)&v1->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
        }
      }
      v22 = 0;
      goto LABEL_114;
    }
    v19 = operator new(0x18uLL);
    v19[2] = v6;
    *v19 = v5 + 56;
    v20 = *(_QWORD **)(v5 + 64);
    v19[1] = v20;
    *v20 = v19;
    v21 = *(_QWORD *)(v5 + 72) + 1;
    *(_QWORD *)(v5 + 64) = v19;
    *(_QWORD *)(v5 + 72) = v21;
    sub_239B8EE6C(v5 + 8, v3[6], v3[6], v3[7], v3[8]);
    goto LABEL_32;
  }
  if (v9.u32[0] < 2uLL)
  {
    while (1)
    {
      v15 = v13[1];
      if (v15 == v6)
      {
        if (v13[2] == v6)
          goto LABEL_67;
      }
      else if ((v15 & (*(_QWORD *)&v8 - 1)) != v10)
      {
        goto LABEL_24;
      }
      v13 = (_QWORD *)*v13;
      if (!v13)
        goto LABEL_24;
    }
  }
  while (1)
  {
    v14 = v13[1];
    if (v14 == v6)
      break;
    if (v14 >= *(_QWORD *)&v8)
      v14 %= *(_QWORD *)&v8;
    if (v14 != v10)
      goto LABEL_24;
LABEL_14:
    v13 = (_QWORD *)*v13;
    if (!v13)
      goto LABEL_24;
  }
  if (v13[2] != v6)
    goto LABEL_14;
LABEL_67:
  v38 = sub_239B8F184(v5 + 8, v3[6], v3 + 6);
  v40 = v3[7];
  v39 = v3[8];
  if (v39)
  {
    v41 = (unint64_t *)(v39 + 8);
    do
      v42 = __ldxr(v41);
    while (__stxr(v42 + 1, v41));
  }
  v1 = (std::__shared_weak_count *)v38[4];
  v38[3] = v40;
  v38[4] = v39;
  if (!v1)
  {
LABEL_32:
    v6 = 0;
    v22 = 1;
    goto LABEL_114;
  }
  v43 = (unint64_t *)&v1->__shared_owners_;
  do
    v44 = __ldaxr(v43);
  while (__stlxr(v44 - 1, v43));
  v6 = 0;
  v45 = 1;
  v22 = 1;
  if (!v44)
  {
LABEL_112:
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
    v22 = v45;
  }
LABEL_114:
  std::mutex::unlock((std::mutex *)(v5 + 80));
  v62 = a1[1];
  if (*(_BYTE *)(v62 + 72))
  {
    v63 = *(_QWORD *)(v62 + 48);
    if (sub_2397A1B98((pthread_mutex_t *)(v5 + 344)))
    {
      sub_2397A16B4((pthread_mutex_t *)(v5 + 344));
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v64 = *(int8x8_t *)(v5 + 312);
    if (v64)
    {
      v65 = (_QWORD *)(v5 + 304);
      v66 = (uint8x8_t)vcnt_s8(v64);
      v66.i16[0] = vaddlv_u8(v66);
      if (v66.u32[0] > 1uLL)
      {
        v67 = v63;
        if (*(_QWORD *)&v64 <= v63)
          v67 = v63 % *(_QWORD *)&v64;
      }
      else
      {
        v67 = (*(_QWORD *)&v64 - 1) & v63;
      }
      v68 = *(_QWORD ***)(*v65 + 8 * v67);
      if (v68)
      {
        v69 = *v68;
        if (*v68)
        {
          if (v66.u32[0] < 2uLL)
          {
            v70 = *(_QWORD *)&v64 - 1;
            while (1)
            {
              v72 = v69[1];
              if (v72 == v63)
              {
                if (v69[2] == v63)
                  goto LABEL_137;
              }
              else if ((v72 & v70) != v67)
              {
                goto LABEL_139;
              }
              v69 = (_QWORD *)*v69;
              if (!v69)
                goto LABEL_139;
            }
          }
          do
          {
            v71 = v69[1];
            if (v71 == v63)
            {
              if (v69[2] == v63)
              {
LABEL_137:
                sub_239A78378((uint64_t)__p, v65, v69);
                if (__p[0])
                  operator delete(__p[0]);
                break;
              }
            }
            else
            {
              if (v71 >= *(_QWORD *)&v64)
                v71 %= *(_QWORD *)&v64;
              if (v71 != v67)
                break;
            }
            v69 = (_QWORD *)*v69;
          }
          while (v69);
        }
      }
    }
  }
LABEL_139:
  if (!v22)
  {
    v73 = a1[1];
    if (!*(_QWORD *)(v5 + 200) || *(_QWORD *)(v73 + 48) == v6 && *(_BYTE *)(v73 + 72))
      goto LABEL_144;
    v78 = (std::__shared_weak_count *)a1[2];
    if (v78)
    {
      v79 = (unint64_t *)&v78->__shared_owners_;
      do
        v80 = __ldxr(v79);
      while (__stxr(v80 + 1, v79));
    }
    if (v1)
    {
      v81 = (unint64_t *)&v1->__shared_owners_;
      do
        v82 = __ldxr(v81);
      while (__stxr(v82 + 1, v81));
    }
    if (v78)
    {
      v83 = (unint64_t *)&v78->__shared_owners_;
      do
        v84 = __ldxr(v83);
      while (__stxr(v84 + 1, v83));
    }
    if (v1)
    {
      v85 = (unint64_t *)&v1->__shared_owners_;
      do
        v86 = __ldxr(v85);
      while (__stxr(v86 + 1, v85));
    }
    v129 = 0;
    v87 = operator new(0x40uLL);
    *v87 = &off_250AFA710;
    v87[1] = v73;
    v87[2] = v78;
    v87[3] = v6;
    v87[4] = v2;
    v87[5] = v1;
    *((_BYTE *)v87 + 48) = 1;
    v87[7] = v5;
    v129 = v87;
    v88 = sub_239A82B00(v5, v6, v128);
    v89 = v129;
    if (v129 == v128)
    {
      v90 = 4;
      v89 = v128;
    }
    else
    {
      if (!v129)
        goto LABEL_172;
      v90 = 5;
    }
    (*(void (**)(void))(*v89 + 8 * v90))();
LABEL_172:
    if ((v88 & 1) != 0)
    {
LABEL_204:
      if (v1)
      {
        v106 = (unint64_t *)&v1->__shared_owners_;
        do
          v107 = __ldaxr(v106);
        while (__stlxr(v107 - 1, v106));
        if (!v107)
        {
          ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
          std::__shared_weak_count::__release_weak(v1);
        }
      }
      if (v78)
      {
        v108 = (unint64_t *)&v78->__shared_owners_;
        do
          v109 = __ldaxr(v108);
        while (__stlxr(v109 - 1, v108));
        if (!v109)
        {
          ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
          std::__shared_weak_count::__release_weak(v78);
        }
      }
      goto LABEL_146;
    }
    v112 = (void *)v6;
    v113 = v2;
    v114 = v1;
    if (v1)
    {
      v91 = (unint64_t *)&v1->__shared_owners_;
      do
        v92 = __ldxr(v91);
      while (__stxr(v92 + 1, v91));
    }
    v93 = v115;
    v94 = a1[1];
    v95 = *(_QWORD *)(v94 + 104);
    if (v95)
    {
      if (v95 == v94 + 80)
      {
        v116 = v115;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v95 + 24))(v95, v115);
LABEL_181:
        LODWORD(__p[0]) = 2;
        __p[7] = 0;
        __p[8] = 0;
        __p[5] = 0;
        v118 = 0;
        v119 = 0;
        v120 = v112;
        v121 = v113;
        v122 = v114;
        if (v114)
        {
          v96 = &v114->__shared_owners_;
          do
            v97 = __ldxr((unint64_t *)v96);
          while (__stxr(v97 + 1, (unint64_t *)v96));
        }
        v98 = (uint64_t)v116;
        if (v116)
        {
          if (v116 == v115)
          {
            v124 = &v123;
            (*(void (**)(_QWORD *))(v115[0] + 24))(v115);
LABEL_189:
            v126 = 0;
            v127 = 0;
            __p[1] = v112;
            __p[6] = v112;
            v125 = 0;
            v120 = v112;
            v99 = operator new(0x120uLL);
            v99[1] = 0;
            v99[2] = 0;
            *v99 = &off_250AFA690;
            *(_QWORD *)&v111 = sub_239B407F0((uint64_t)(v99 + 3), (uint64_t)__p);
            *((_QWORD *)&v111 + 1) = v99;
            sub_239A82E8C(__p);
            if (v116 == v115)
            {
              v100 = 4;
            }
            else
            {
              if (!v116)
                goto LABEL_194;
              v100 = 5;
              v93 = v116;
            }
            (*(void (**)(_QWORD *))(*v93 + 8 * v100))(v93);
LABEL_194:
            if (v114)
            {
              v101 = &v114->__shared_owners_;
              do
                v102 = __ldaxr((unint64_t *)v101);
              while (__stlxr(v102 - 1, (unint64_t *)v101));
              if (!v102)
              {
                ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
                std::__shared_weak_count::__release_weak(v114);
              }
            }
            sub_239B40A0C(*(unsigned int **)(v5 + 288), &v111);
            v103 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
            if (*((_QWORD *)&v111 + 1))
            {
              v104 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
              do
                v105 = __ldaxr(v104);
              while (__stlxr(v105 - 1, v104));
              if (!v105)
              {
                ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
                std::__shared_weak_count::__release_weak(v103);
              }
            }
            goto LABEL_204;
          }
          v98 = (*(uint64_t (**)(void))(*v116 + 16))();
        }
        v124 = (uint64_t *)v98;
        goto LABEL_189;
      }
      v95 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v95 + 16))(v95);
    }
    v116 = (_QWORD *)v95;
    goto LABEL_181;
  }
  v73 = a1[1];
LABEL_144:
  v74 = *(_QWORD *)(v73 + 104);
  if (v74)
  {
    LOBYTE(__p[0]) = 1;
    (*(void (**)(uint64_t, void **))(*(_QWORD *)v74 + 48))(v74, __p);
  }
LABEL_146:
  if (v1)
    v75 = v22;
  else
    v75 = 1;
  if ((v75 & 1) == 0)
  {
    v76 = (unint64_t *)&v1->__shared_owners_;
    do
      v77 = __ldaxr(v76);
    while (__stlxr(v77 - 1, v76));
    if (!v77)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B8E648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15, uint64_t a16, uint64_t a17, uint64_t a18, _QWORD *a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t *a25,uint64_t a26,uint64_t a27,std::__shared_weak_count *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t *a33,uint64_t a34,uint64_t a35,std::__shared_weak_count *a36)
{
  std::__shared_weak_count *v36;
  _QWORD *v37;
  std::__shared_weak_count *v38;
  char v39;
  std::__shared_weak_count *v41;
  unint64_t *p_shared_owners;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  char v58;
  unint64_t *v59;
  unint64_t v60;

  v41 = a36;
  if (a36)
  {
    p_shared_owners = (unint64_t *)&a36->__shared_owners_;
    do
      v43 = __ldaxr(p_shared_owners);
    while (__stlxr(v43 - 1, p_shared_owners));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
    }
  }
  v44 = a33;
  if (a33 == &a30)
  {
    v45 = 4;
    v44 = &a30;
  }
  else
  {
    if (!a33)
    {
LABEL_11:
      v46 = a28;
      if (a28)
      {
        v47 = (unint64_t *)&a28->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
      }
      v49 = a25;
      if (a25 == &a22)
      {
        v50 = 4;
        v49 = &a22;
      }
      else
      {
        if (!a25)
          goto LABEL_21;
        v50 = 5;
      }
      (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_21:
      if (a19 == v37)
      {
        v51 = 4;
      }
      else
      {
        if (!a19)
        {
LABEL_26:
          if (a15)
          {
            v52 = (unint64_t *)&a15->__shared_owners_;
            do
              v53 = __ldaxr(v52);
            while (__stlxr(v53 - 1, v52));
            if (!v53)
            {
              ((void (*)(std::__shared_weak_count *))a15->__on_zero_shared)(a15);
              std::__shared_weak_count::__release_weak(a15);
            }
          }
          if (v36)
          {
            v54 = (unint64_t *)&v36->__shared_owners_;
            do
              v55 = __ldaxr(v54);
            while (__stlxr(v55 - 1, v54));
            if (!v55)
            {
              ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
              std::__shared_weak_count::__release_weak(v36);
            }
          }
          if (v38)
          {
            v56 = (unint64_t *)&v38->__shared_owners_;
            do
              v57 = __ldaxr(v56);
            while (__stlxr(v57 - 1, v56));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
              std::__shared_weak_count::__release_weak(v38);
            }
          }
          if (v36)
            v58 = v39;
          else
            v58 = 1;
          if ((v58 & 1) == 0)
          {
            v59 = (unint64_t *)&v36->__shared_owners_;
            do
              v60 = __ldaxr(v59);
            while (__stlxr(v60 - 1, v59));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
              std::__shared_weak_count::__release_weak(v36);
            }
          }
          _Unwind_Resume(exception_object);
        }
        v51 = 5;
        v37 = a19;
      }
      (*(void (**)(_QWORD *))(*v37 + 8 * v51))(v37);
      goto LABEL_26;
    }
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
  goto LABEL_11;
}

uint64_t sub_239B8E99C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AFA710;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_239B8EA40(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AFA710;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8EAF4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  result = operator new(0x40uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AFA710;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *((_BYTE *)result + 24) = 0;
  *((_BYTE *)result + 48) = 0;
  if (*(_BYTE *)(a1 + 48))
  {
    v7 = *(_QWORD *)(a1 + 32);
    result[3] = *(_QWORD *)(a1 + 24);
    result[4] = v7;
    v8 = *(_QWORD *)(a1 + 40);
    result[5] = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    *((_BYTE *)result + 48) = 1;
  }
  result[7] = *(_QWORD *)(a1 + 56);
  return result;
}

uint64_t sub_239B8EB8C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *(_QWORD *)a2 = &off_250AFA710;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  if (*(_BYTE *)(result + 48))
  {
    v6 = *(_QWORD *)(result + 32);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(result + 24);
    *(_QWORD *)(a2 + 32) = v6;
    v7 = *(_QWORD *)(result + 40);
    *(_QWORD *)(a2 + 40) = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    *(_BYTE *)(a2 + 48) = 1;
  }
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(result + 56);
  return result;
}

void sub_239B8EC04(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (!*(_BYTE *)(a1 + 48))
    goto LABEL_6;
  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  else
  {
LABEL_6:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239B8ECAC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (*((_BYTE *)__p + 48))
  {
    v2 = (std::__shared_weak_count *)__p[5];
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  operator delete(__p);
}

uint64_t sub_239B8ED44(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  char v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  v2 = a1[7];
  v3 = (std::__shared_weak_count *)a1[5];
  v13 = a1[4];
  v14 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v15 = a1[3];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v13, &v15);
  v8 = v14;
  if (v14)
  {
    v9 = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = *(_QWORD *)(a1[1] + 104);
  if (v11)
  {
    LOBYTE(v15) = v7;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v11 + 48))(v11, &v15);
  }
  return sub_239B8D83C(v2, a1[3]);
}

void sub_239B8EE28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B8EE6C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v11;
  uint8x8_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t *v19;
  unint64_t v20;
  float v21;
  float v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t prime;
  int8x8_t v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;

  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v5 = a2;
      if (v11 <= a2)
        v5 = a2 % v11;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
    v13 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
    if (v13)
    {
      v14 = (_QWORD *)*v13;
      if (v14)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == a2)
            {
              if (v14[2] == a2)
                return;
            }
            else if ((v16 & (v11 - 1)) != v5)
            {
              goto LABEL_22;
            }
            v14 = (_QWORD *)*v14;
            if (!v14)
              goto LABEL_22;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == a2)
          {
            if (v14[2] == a2)
              return;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v5)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_22:
  v17 = (_QWORD *)(a1 + 16);
  v18 = operator new(0x28uLL);
  *v18 = 0;
  v18[1] = a2;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  if (a5)
  {
    v19 = (unint64_t *)(a5 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v22 = *(float *)(a1 + 32);
  if (!v11 || (float)(v22 * (float)v11) < v21)
  {
    v23 = 1;
    if (v11 >= 3)
      v23 = (v11 & (v11 - 1)) != 0;
    v24 = v23 | (2 * v11);
    v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25)
      prime = v25;
    else
      prime = v24;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v27 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v27)
      goto LABEL_37;
    if (prime < *(_QWORD *)&v27)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v27 < 3uLL || (v29 = (uint8x8_t)vcnt_s8(v27), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < *(_QWORD *)&v27)
LABEL_37:
        sub_239A501C8(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v11 <= a2)
        v5 = a2 % v11;
      else
        v5 = a2;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
  }
  v31 = *(_QWORD *)a1;
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v32)
  {
    *v18 = *v32;
LABEL_61:
    *v32 = v18;
    goto LABEL_62;
  }
  *v18 = *v17;
  *v17 = v18;
  *(_QWORD *)(v31 + 8 * v5) = v17;
  if (*v18)
  {
    v33 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v33 >= v11)
        v33 %= v11;
    }
    else
    {
      v33 &= v11 - 1;
    }
    v32 = (_QWORD *)(*(_QWORD *)a1 + 8 * v33);
    goto LABEL_61;
  }
LABEL_62:
  ++*(_QWORD *)(a1 + 24);
}

void sub_239B8F170(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B8F184(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t prime;
  unint64_t v21;
  uint8x8_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;

  v5 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (v10[2] == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (v10[2] == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v13 = (_QWORD *)(a1 + 16);
  v10 = operator new(0x28uLL);
  *v10 = 0;
  v10[1] = v5;
  v14 = *a3;
  v10[3] = 0;
  v10[4] = 0;
  v10[2] = v14;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (v7 && (float)(v16 * (float)v7) >= v15)
  {
    v5 = v3;
  }
  else
  {
    v17 = 1;
    if (v7 >= 3)
      v17 = (v7 & (v7 - 1)) != 0;
    v18 = v17 | (2 * v7);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      prime = v19;
    else
      prime = v18;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_35;
    if (prime < v7)
    {
      v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v22 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        v21 = std::__next_prime(v21);
      }
      else
      {
        v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2)
          v21 = v23;
      }
      if (prime <= v21)
        prime = v21;
      if (prime < v7)
LABEL_35:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v5)
        v5 %= v7;
    }
    else
    {
      v5 &= v7 - 1;
    }
  }
  v24 = *(_QWORD *)a1;
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v25)
  {
    *v10 = *v25;
LABEL_58:
    *v25 = v10;
    goto LABEL_59;
  }
  *v10 = *v13;
  *v13 = v10;
  *(_QWORD *)(v24 + 8 * v5) = v13;
  if (*v10)
  {
    v26 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v26 >= v7)
        v26 %= v7;
    }
    else
    {
      v26 &= v7 - 1;
    }
    v25 = (_QWORD *)(*(_QWORD *)a1 + 8 * v26);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239B8F468(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239B8F47C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA600;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B8F4E0(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA600;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8F554(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA600;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B8F5AC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA600;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B8F5E4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B8F63C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B8F694(_QWORD *a1)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  char v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  uint64_t *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v2 = a1 + 1;
  v3 = a1[1];
  v4 = a1[3];
  ++*(_QWORD *)(v4 + 208);
  std::mutex::lock((std::mutex *)(v4 + 80));
  v5 = *(int8x8_t *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v3 + 8);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = *(_QWORD *)(v3 + 8);
      if (v6 >= *(_QWORD *)&v5)
        v8 = v6 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & v6;
    }
    v9 = *(_QWORD **)(*(_QWORD *)(v4 + 8) + 8 * v8);
    if (v9)
    {
      v10 = (_QWORD *)*v9;
      if (v10)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v6 == v13)
            {
              if (v10[2] == v6)
                goto LABEL_47;
            }
            else if ((v13 & v11) != v8)
            {
              goto LABEL_21;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_21;
          }
        }
        do
        {
          v12 = v10[1];
          if (v6 == v12)
          {
            if (v10[2] == v6)
            {
LABEL_47:
              v28 = v10[3];
              v15 = (std::__shared_weak_count *)v10[4];
              if (v15)
              {
                p_shared_owners = (unint64_t *)&v15->__shared_owners_;
                do
                  v30 = __ldxr(p_shared_owners);
                while (__stxr(v30 + 1, p_shared_owners));
              }
              std::mutex::unlock((std::mutex *)(v4 + 80));
              ++*(_QWORD *)(v4 + 216);
              v31 = *(_QWORD *)v2;
              v32 = *(_QWORD *)(*(_QWORD *)v2 + 40);
              if (v32)
              {
                v40 = v28;
                v41 = v15;
                if (v15)
                {
                  v33 = (unint64_t *)&v15->__shared_owners_;
                  do
                    v34 = __ldxr(v33);
                  while (__stxr(v34 + 1, v33));
                  v32 = *(_QWORD *)(v31 + 40);
                  v39 = 1;
                  if (!v32)
                    sub_2394172E0();
                }
                else
                {
                  v39 = 1;
                }
                (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v32 + 48))(v32, &v40, &v39);
                v35 = v41;
                if (v41)
                {
                  v36 = (unint64_t *)&v41->__shared_owners_;
                  do
                    v37 = __ldaxr(v36);
                  while (__stlxr(v37 - 1, v36));
                  if (!v37)
                  {
                    ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                    std::__shared_weak_count::__release_weak(v35);
                  }
                }
              }
              if (v15)
              {
                v38 = (unint64_t *)&v15->__shared_owners_;
                do
                  v22 = __ldaxr(v38);
                while (__stlxr(v22 - 1, v38));
LABEL_44:
                if (!v22)
                {
                  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                  std::__shared_weak_count::__release_weak(v15);
                }
              }
              return;
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_21:
  std::mutex::unlock((std::mutex *)(v4 + 80));
  v14 = *(_QWORD *)v2;
  if (*(_QWORD *)(v4 + 168))
  {
    v15 = (std::__shared_weak_count *)a1[2];
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      v18 = *(_QWORD *)(*(_QWORD *)v2 + 8);
      do
        v19 = __ldxr(v16);
      while (__stxr(v19 + 1, v16));
    }
    else
    {
      v18 = *(_QWORD *)(v14 + 8);
    }
    v23 = (uint64_t *)operator new(0x20uLL);
    *v23 = (uint64_t)&off_250AFA648;
    v23[1] = v14;
    v23[2] = (uint64_t)v15;
    v23[3] = v4;
    v42 = v23;
    v24 = sub_239A82B00(v4, v18, &v40);
    v25 = v42;
    if (v42 == &v40)
    {
      v26 = 4;
      v25 = &v40;
    }
    else
    {
      if (!v42)
        goto LABEL_39;
      v26 = 5;
    }
    (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_39:
    if ((v24 & 1) == 0)
    {
      sub_239B40A0C(*(unsigned int **)(v4 + 288), v2);
      --*(_QWORD *)(v4 + 208);
    }
    if (v15)
    {
      v27 = (unint64_t *)&v15->__shared_owners_;
      do
        v22 = __ldaxr(v27);
      while (__stlxr(v22 - 1, v27));
      goto LABEL_44;
    }
    return;
  }
  v20 = *(_QWORD *)(v14 + 40);
  if (v20)
  {
    v40 = 0;
    v41 = 0;
    v39 = 1;
    (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v20 + 48))(v20, &v40, &v39);
    v15 = v41;
    if (v41)
    {
      v21 = (unint64_t *)&v41->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      goto LABEL_44;
    }
  }
}

void sub_239B8FA1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  if (v13)
  {
    v17 = (unint64_t *)&v13->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B8FB54(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AFA648;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B8FBB8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AFA648;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B8FC2C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AFA648;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239B8FC84(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AFA648;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239B8FCBC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B8FD14(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B8FD6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t v32[2];
  std::__shared_weak_count *v33;
  char v34;
  _BYTE v35[24];
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 24);
  v37 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  v3 = *(_QWORD *)(v2 + 168);
  if (!v3)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(&v30, v3, &v37);
  v4 = *(_QWORD *)(a1 + 8);
  if (v30)
  {
    v5 = *(_QWORD *)(v4 + 40);
    if (v5)
    {
      v37 = v30;
      v38 = v31;
      if (v31)
      {
        p_shared_owners = (unint64_t *)&v31->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        v5 = *(_QWORD *)(v4 + 40);
        LOBYTE(v32[0]) = 1;
        if (!v5)
          sub_2394172E0();
      }
      else
      {
        LOBYTE(v32[0]) = 1;
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v5 + 48))(v5, &v37, v32);
      v12 = v38;
      if (v38)
      {
        v13 = (unint64_t *)&v38->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
    }
    v32[0] = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    v32[1] = v30;
    v33 = v31;
    if (v31)
    {
      v15 = (unint64_t *)&v31->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    v34 = 1;
    v17 = v35;
    v36 = 0;
    sub_239B4CDE8((uint64_t)&v37, v32);
    v18 = operator new(0x120uLL);
    v18[1] = 0;
    v18[2] = 0;
    *v18 = &off_250AFA690;
    *(_QWORD *)&v29 = sub_239B407F0((uint64_t)(v18 + 3), (uint64_t)&v37);
    *((_QWORD *)&v29 + 1) = v18;
    sub_239A82E8C(&v37);
    if (v36 == v35)
    {
      v19 = 4;
    }
    else
    {
      if (!v36)
        goto LABEL_30;
      v19 = 5;
      v17 = v36;
    }
    (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
LABEL_30:
    v20 = v33;
    if (v33)
    {
      v21 = (unint64_t *)&v33->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    sub_239B40A0C(*(unsigned int **)(v2 + 288), &v29);
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
    if (*((_QWORD *)&v29 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    goto LABEL_40;
  }
  v8 = *(_QWORD *)(v4 + 40);
  if (v8)
  {
    v37 = 0;
    v38 = 0;
    LOBYTE(v32[0]) = 1;
    (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v8 + 48))(v8, &v37, v32);
    v9 = v38;
    if (v38)
    {
      v10 = (unint64_t *)&v38->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  sub_239B8D83C(v2, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8));
LABEL_40:
  v26 = v31;
  if (v31)
  {
    v27 = (unint64_t *)&v31->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_239B90068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,std::__shared_weak_count *a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;

  if (a22)
  {
    p_shared_owners = (unint64_t *)&a22->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
      std::__shared_weak_count::__release_weak(a22);
    }
  }
  if (a12)
  {
    v25 = (unint64_t *)&a12->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B901A4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA5A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B901B4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA5A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B901E4(uint64_t a1)
{
  pthread_mutex_t *v2;
  int v3;

  v2 = (pthread_mutex_t *)(a1 + 200);
  sub_2397A1694((pthread_mutex_t *)(a1 + 200));
  v3 = *(unsigned __int8 *)(a1 + 80);
  sub_2397A16B4(v2);
  if (!v3)
    sub_239B90268(a1 + 24);
  sub_2397A1694(v2);
  sub_2397A16B4(v2);
  pthread_cond_destroy((pthread_cond_t *)(a1 + 104));
  pthread_cond_destroy((pthread_cond_t *)(a1 + 152));
  sub_2397A163C(v2);
  return sub_239A7BCF8(a1 + 32);
}

uint64_t sub_239B90268(uint64_t a1)
{
  pthread_mutex_t *v2;
  uint64_t v4;

  v2 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  *(_BYTE *)(a1 + 56) = 1;
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 64) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 80)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 64) <= 0)
        goto LABEL_4;
    }
    v4 = 261;
LABEL_15:
    sub_239A444D4((uint64_t)"unknown file", v4, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
LABEL_4:
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  while (*(_QWORD *)(a1 + 48) && *(uint64_t *)(a1 + 72) >= 1)
  {
    if (pthread_cond_wait((pthread_cond_t *)(a1 + 80), v2))
    {
      sub_239A444D4((uint64_t)"unknown file", 277, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 72) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 128)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 72) <= 0)
        return sub_2397A16B4(v2);
    }
    v4 = 287;
    goto LABEL_15;
  }
  return sub_2397A16B4(v2);
}

void sub_239B903E8(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

void sub_239B90408(uint64_t a1)
{
  sub_239B9042C(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B9042C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  uint64_t v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t i;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &off_250AFA560;
  if (*(_QWORD *)(a1 + 272))
  {
    v3 = *(_QWORD *)(a1 + 240);
    v2 = *(std::__shared_weak_count **)(a1 + 248);
    if (!v2)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (v6)
    {
LABEL_7:
      if (v3)
        goto LABEL_10;
      goto LABEL_8;
    }
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (!v3)
LABEL_8:
      sub_2397A3758(*(_QWORD *)(a1 + 272));
  }
LABEL_10:
  v7 = *(_QWORD *)(a1 + 288);
  if (v7)
    sub_239B90268(v7);
  while (1)
  {
    v42[0] = &off_250AFA908;
    v43 = v42;
    sub_2397A1694((pthread_mutex_t *)(a1 + 344));
    v8 = *(_QWORD *)(a1 + 328);
    if (!v8)
    {
      if (!v43)
        sub_2394172E0();
      (*(void (**)(_QWORD *))(*v43 + 48))(v43);
    }
    sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
    v9 = v43;
    if (v43 == v42)
    {
      v9 = v42;
      v10 = 4;
    }
    else
    {
      if (!v43)
        goto LABEL_20;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_20:
    if (!v8)
      break;
    sub_2397A186C(1);
  }
  v11 = *(_QWORD *)(a1 + 256);
  if (v11)
  {
    sub_2397A195C(v11);
    v12 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  if (*(_QWORD *)(a1 + 288))
  {
    v15 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_QWORD *)(a1 + 328))
  {
    v18 = *(_QWORD **)(a1 + 320);
    if (v18)
    {
      do
      {
        v19 = (_QWORD *)*v18;
        operator delete(v18);
        v18 = v19;
      }
      while (v19);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v20 = *(_QWORD *)(a1 + 312);
    if (v20)
    {
      for (i = 0; i != v20; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 304) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  sub_2397A163C((pthread_mutex_t *)(a1 + 344));
  v22 = *(_QWORD **)(a1 + 320);
  if (v22)
  {
    do
    {
      v23 = (_QWORD *)*v22;
      operator delete(v22);
      v22 = v23;
    }
    while (v23);
  }
  v24 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = 0;
  if (v24)
    operator delete(v24);
  v25 = *(std::__shared_weak_count **)(a1 + 296);
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = *(std::__shared_weak_count **)(a1 + 280);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = *(std::__shared_weak_count **)(a1 + 264);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = *(std::__shared_weak_count **)(a1 + 248);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = *(_QWORD **)(a1 + 200);
  if (v37 == (_QWORD *)(a1 + 176))
  {
    v38 = 4;
    v37 = (_QWORD *)(a1 + 176);
LABEL_69:
    (*(void (**)(void))(*v37 + 8 * v38))();
  }
  else if (v37)
  {
    v38 = 5;
    goto LABEL_69;
  }
  v39 = *(_QWORD **)(a1 + 168);
  if (v39 == (_QWORD *)(a1 + 144))
  {
    v40 = 4;
    v39 = (_QWORD *)(a1 + 144);
LABEL_74:
    (*(void (**)(void))(*v39 + 8 * v40))();
  }
  else if (v39)
  {
    v40 = 5;
    goto LABEL_74;
  }
  return sub_239B8AD7C(a1);
}

void sub_239B907DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_239416A48(exception_object);
}

void sub_239B90858()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B9086C()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AFA908;
  return result;
}

void sub_239B90890(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AFA908;
}

void sub_239B908AC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA498;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B908BC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFA498;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B908EC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_239B90900()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B90914(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AFAB00;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239B9094C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AFAB00;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239B9096C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 + 56);
  v6 = *(std::__shared_weak_count **)(v4 + 64);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v17 = 0;
    v18 = v5;
    v19 = v6;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  else
  {
    v17 = 0;
    v18 = v5;
    v19 = 0;
  }
  v16 = v3;
  v17 = (int)std::thread::hardware_concurrency();
  v10 = operator new(0x1B0uLL);
  sub_239B83A58(v10, &v16);
  *a2 = v10 + 3;
  a2[1] = v10;
  v11 = v19;
  if (!v19)
    goto LABEL_12;
  v12 = (unint64_t *)&v19->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    if (!v6)
      return;
  }
  else
  {
LABEL_12:
    if (!v6)
      return;
  }
  v14 = (unint64_t *)&v6->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
}

void sub_239B90A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  void *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  operator delete(v14);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (v12)
  {
    v18 = (unint64_t *)&v12->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B90B40(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFAA28;
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return a1;
LABEL_5:
    operator delete(*(void **)(a1 + 16));
    return a1;
  }
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_5;
  return a1;
}

void sub_239B90B98(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFAA28;
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
LABEL_6:
      JUMPOUT(0x23B83E31CLL);
  }
  else if ((*(char *)(a1 + 39) & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 16));
  goto LABEL_6;
}

_QWORD *sub_239B90C00(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v2 = operator new(0x80uLL);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 8);
  *v2 = off_250AFAA28;
  v2[1] = v4;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8((_BYTE *)v2 + 16, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *((_OWORD *)v2 + 1) = *(_OWORD *)(a1 + 16);
    v2[4] = *(_QWORD *)(a1 + 32);
  }
  *(_OWORD *)(v3 + 5) = *(_OWORD *)(a1 + 40);
  v3[7] = *(_QWORD *)(a1 + 56);
  v5 = v3 + 8;
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)(a1 + 64);
    v3[10] = *(_QWORD *)(a1 + 80);
  }
  *(_OWORD *)(v3 + 11) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(v3 + 13) = *(_OWORD *)(a1 + 104);
  v3[15] = *(_QWORD *)(a1 + 120);
  return v3;
}

void sub_239B90CC8(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[39] < 0)
    operator delete(*v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B90CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  __int128 v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;
  __n128 result;

  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a2 = off_250AFAA28;
  *(_QWORD *)(a2 + 8) = v4;
  v5 = (_BYTE *)(a2 + 16);
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    v6 = *(_OWORD *)(a1 + 16);
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
    *(_OWORD *)v5 = v6;
  }
  v7 = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v7;
  v8 = (_BYTE *)(a2 + 64);
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(v8, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    v9 = *(_OWORD *)(a1 + 64);
    *(_QWORD *)(a2 + 80) = *(_QWORD *)(a1 + 80);
    *(_OWORD *)v8 = v9;
  }
  result = *(__n128 *)(a1 + 88);
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a1 + 104);
  *(__n128 *)(a2 + 88) = result;
  *(_QWORD *)(a2 + 120) = *(_QWORD *)(a1 + 120);
  return result;
}

void sub_239B90DB0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_239B90DCC(uint64_t a1)
{
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(*(void **)(a1 + 16));
    return;
  }
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_5;
}

void sub_239B90E18(void **__p)
{
  if (*((char *)__p + 87) < 0)
  {
    operator delete(__p[8]);
    if ((*((char *)__p + 39) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_5:
    operator delete(__p[2]);
    goto LABEL_3;
  }
  if (*((char *)__p + 39) < 0)
    goto LABEL_5;
LABEL_3:
  operator delete(__p);
}

void sub_239B90E64(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  void *__p[2];
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  void *__dst[2];
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  _QWORD *v41;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(v4 + 56);
  v7 = *(std::__shared_weak_count **)(v4 + 64);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v29 = 0;
    v30 = v6;
    v31 = v7;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v29 = 0;
    v30 = v6;
    v31 = 0;
  }
  v28 = v5;
  v29 = (int)std::thread::hardware_concurrency();
  v11 = operator new(0x1B0uLL);
  v11[1] = 0;
  v11[2] = 0;
  *v11 = &off_250AF9F98;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(__dst, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 16);
    v37 = *(_QWORD *)(a1 + 32);
  }
  v38 = *(_OWORD *)(a1 + 40);
  v39 = *(_QWORD *)(a1 + 56);
  v43 = 0;
  v12 = (char *)operator new(0x38uLL);
  *(_QWORD *)v12 = off_250AFAA70;
  v13 = v12 + 8;
  if (SHIBYTE(v37) < 0)
  {
    sub_23941A7F8(v13, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)__dst;
    *((_QWORD *)v12 + 3) = v37;
  }
  *((_OWORD *)v12 + 2) = v38;
  *((_QWORD *)v12 + 6) = v39;
  v43 = v12;
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(__p, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a1 + 64);
    v33 = *(_QWORD *)(a1 + 80);
  }
  v34 = *(_OWORD *)(a1 + 88);
  v35 = *(_OWORD *)(a1 + 104);
  v41 = 0;
  v14 = (char *)operator new(0x40uLL);
  *(_QWORD *)v14 = off_250AFAAB8;
  v15 = v14 + 8;
  if (SHIBYTE(v33) < 0)
  {
    sub_23941A7F8(v15, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)__p;
    *((_QWORD *)v14 + 3) = v33;
  }
  v16 = v35;
  *((_OWORD *)v14 + 2) = v34;
  *((_OWORD *)v14 + 3) = v16;
  v41 = v14;
  sub_239B83BA4((uint64_t)(v11 + 3), &v28, v42, v40);
  v19 = v41;
  if (v41 == v40)
  {
    v20 = 4;
    v19 = v40;
  }
  else
  {
    if (!v41)
      goto LABEL_25;
    v20 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v19 + 8 * v20))(v19, v17, v18);
LABEL_25:
  if (SHIBYTE(v33) < 0)
    operator delete(__p[0]);
  v21 = v43;
  if (v43 == v42)
  {
    v22 = 4;
    v21 = v42;
  }
  else
  {
    if (!v43)
      goto LABEL_32;
    v22 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v21 + 8 * v22))(v21, v17, v18);
LABEL_32:
  if (SHIBYTE(v37) < 0)
    operator delete(__dst[0]);
  *a2 = v11 + 3;
  a2[1] = v11;
  v23 = v31;
  if (v31)
  {
    v24 = (unint64_t *)&v31->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  if (v7)
  {
    v26 = (unint64_t *)&v7->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_239B91178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;

  operator delete(v32);
  if (a18 < 0)
    operator delete(__p);
  v35 = *(_QWORD **)(v33 - 80);
  if (v35 == (_QWORD *)(v33 - 104))
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 104);
  }
  else
  {
    if (!v35)
      goto LABEL_8;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_8:
  if (a29 < 0)
    operator delete(a24);
  std::__shared_weak_count::~__shared_weak_count(v30);
  operator delete(v37);
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v39 = __ldaxr(p_shared_owners);
    while (__stlxr(v39 - 1, p_shared_owners));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  if (v29)
  {
    v40 = (unint64_t *)&v29->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B91300(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFAAB8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B9133C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFAAB8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B91388(uint64_t a1)
{
  char *v2;
  _BYTE *v3;
  __int128 v4;

  v2 = (char *)operator new(0x40uLL);
  *(_QWORD *)v2 = off_250AFAAB8;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  v4 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v2 + 3) = v4;
  return v2;
}

void sub_239B913F0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B91404(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  *(_QWORD *)a2 = off_250AFAAB8;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v7;
  return result;
}

void sub_239B91464(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B91478(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B914A8(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  _QWORD *v4;
  uint64_t v5;
  const std::ios_base *v6;
  const std::locale::facet *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  __int128 v17;
  uint64_t v18;
  std::__fs::filesystem::path __dst;
  std::__fs::filesystem::path v20;
  char v21;
  char v22;
  void *v23;
  char v24;
  void *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  std::string v30;
  std::__fs::filesystem::path __p;
  _QWORD v32[2];
  _QWORD v33[11];
  char v34;
  uint64_t v35;
  std::string v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD **)a2;
  v3 = *(std::__shared_weak_count **)(a2 + 8);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  sub_2394988CC((uint64_t)v32);
  v5 = v33[0];
  *(_QWORD *)((char *)&v33[3] + *(_QWORD *)(v33[0] - 24)) = 8;
  v6 = (const std::ios_base *)((char *)v33 + *(_QWORD *)(v5 - 24));
  if (v6[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v6);
    v7 = std::locale::use_facet((const std::locale *)&v20, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)&v20);
  }
  v6[1].__fmtflags_ = 48;
  v8 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v8, (uint64_t)"_fused2", 7);
  std::stringbuf::str();
  v9 = std::string::append(&v30, ".tiff");
  v10 = v9->__r_.__value_.__r.__words[0];
  v36.__r_.__value_.__r.__words[0] = v9->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v9->__r_.__value_.__r.__words[1] + 7);
  v11 = HIBYTE(v9->__r_.__value_.__r.__words[2]);
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&v20.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 7);
  v20.__pn_.__r_.__value_.__r.__words[0] = v10;
  v20.__pn_.__r_.__value_.__l.__size_ = v36.__r_.__value_.__r.__words[0];
  *((_BYTE *)&v20.__pn_.__r_.__value_.__s + 23) = v11;
  sub_239498A04(&v20, a1 + 8, &__p);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_5;
  }
  else if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v30.__r_.__value_.__l.__data_);
LABEL_5:
  if (sub_239B207F0(*(_QWORD *)(a1 + 32), (uint64_t)&__p))
    goto LABEL_16;
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&__dst, __p.__pn_.__r_.__value_.__l.__data_, __p.__pn_.__r_.__value_.__l.__size_);
  else
    __dst = __p;
  sub_2395ACAA8((uint64_t)&__dst, (char *)&v36);
  v30 = v36;
  memset(&v36, 0, sizeof(v36));
  v17 = *(_OWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 56);
  sub_239B91A2C((uint64_t)&v20, v4, (uint64_t)&v30, &v17);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v30.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_14;
LABEL_28:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v29)
        goto LABEL_15;
      goto LABEL_29;
    }
  }
  else if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(v36.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_28;
LABEL_14:
  if (v29)
  {
LABEL_15:
    sub_239B20A74(*(_QWORD *)(a1 + 32), (uint64_t)&__p);
    if (!v29 && v28)
    {
      if (v27)
      {
        if (v26 < 0)
          operator delete(v25);
        if (v24 < 0)
          operator delete(v23);
      }
      if (v22 && v21 < 0)
        operator delete((void *)v20.__pn_.__r_.__value_.__r.__words[2]);
    }
LABEL_16:
    v12 = 1;
    if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_17;
  }
LABEL_29:
  if (v28)
  {
    if (v27)
    {
      if (v26 < 0)
        operator delete(v25);
      if (v24 < 0)
        operator delete(v23);
    }
    if (v22 && v21 < 0)
      operator delete((void *)v20.__pn_.__r_.__value_.__r.__words[2]);
  }
  v12 = 0;
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_17:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
LABEL_18:
  v32[0] = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v32 + *(_QWORD *)(v32[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v33[0] = v13;
  v33[1] = MEMORY[0x24BEDB848] + 16;
  if (v34 < 0)
    operator delete((void *)v33[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v35);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v12;
}

void sub_239B91874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, std::locale a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  std::__shared_weak_count *v62;
  uint64_t v64;
  unint64_t *p_shared_owners;
  unint64_t v66;

  if (a42 < 0)
    operator delete(__p);
  a43 = *MEMORY[0x24BEDB7F0];
  v64 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a43 + *(_QWORD *)(a43 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a45 = v64;
  a46 = MEMORY[0x24BEDB848] + 16;
  if (a59 < 0)
    operator delete(a54);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a62);
  if (v62)
  {
    p_shared_owners = (unint64_t *)&v62->__shared_owners_;
    do
      v66 = __ldaxr(p_shared_owners);
    while (__stlxr(v66 - 1, p_shared_owners));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
      std::__shared_weak_count::__release_weak(v62);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B91A2C(uint64_t a1, _QWORD *a2, uint64_t a3, __int128 *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  std::ios_base *v12;
  int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::ios_base *v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  int v25;
  uint64_t v26;
  const void *v27[3];
  void *v28[3];
  __int128 v29;
  uint64_t v30;
  void *v31[2];
  char v32;
  char v33;
  void *v34;
  char v35;
  void *v36;
  char v37;
  char v38;
  char v39;
  void *v40[2];
  char v41;
  char v42;
  void *v43;
  char v44;
  void *v45;
  char v46;
  char v47;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  unsigned __int8 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  char v59;
  void *v60[2];
  unsigned __int8 v61;
  char v62;
  void *v63;
  char v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  char v76;
  char v77;
  char v78;
  __int128 v79;
  __int128 __p;
  uint64_t v81;
  unsigned __int8 v82;
  __int128 v83;
  uint64_t v84;
  void *v85[4];
  int v86;
  uint64_t v87[19];
  uint64_t v88;
  _BYTE v89[408];
  _QWORD v90[22];

  v90[19] = *MEMORY[0x24BDAC8D0];
  v7 = MEMORY[0x24BEDB840];
  v8 = MEMORY[0x24BEDB840] + 64;
  v9 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v10 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v11 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v90[0] = MEMORY[0x24BEDB840] + 64;
  v88 = v10;
  *(_QWORD *)&v89[*(_QWORD *)(v10 - 24) - 8] = v11;
  v12 = (std::ios_base *)&v89[*(_QWORD *)(v88 - 24) - 8];
  std::ios_base::init(v12, v89);
  v12[1].__vftable = 0;
  v12[1].__fmtflags_ = -1;
  v88 = v7 + 24;
  v90[0] = v8;
  MEMORY[0x23B83DC80](v89);
  std::ofstream::open();
  if ((v89[*(_QWORD *)(v88 - 24) + 24] & 5) != 0)
  {
    sub_239618F08(v31, "Failure during saving image file");
    v39 = 1;
    sub_239616578(5u, (__int128 *)v31, (uint64_t)&v79);
    *(_OWORD *)a1 = v79;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (LOBYTE(v87[0]))
    {
      *(_BYTE *)(a1 + 40) = 0;
      v13 = v82;
      if (v82)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v81;
        v81 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if ((_BYTE)v86)
      {
        v14 = v85[0];
        *(_QWORD *)(a1 + 64) = v84;
        *(_OWORD *)(a1 + 48) = v83;
        v83 = 0uLL;
        *(_QWORD *)(a1 + 72) = v14;
        *(_OWORD *)(a1 + 80) = *(_OWORD *)&v85[1];
        *(void **)(a1 + 96) = v85[3];
        v84 = 0;
        memset(&v85[1], 0, 24);
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v13 && SHIBYTE(v81) < 0)
        operator delete((void *)__p);
      if (!v39)
        goto LABEL_58;
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
      if (!v39)
        goto LABEL_58;
    }
    if (!v38)
      goto LABEL_34;
    if (v37 < 0)
    {
      operator delete(v36);
      if ((v35 & 0x80000000) == 0)
      {
LABEL_34:
        if (!v33)
          goto LABEL_58;
        goto LABEL_35;
      }
    }
    else if ((v35 & 0x80000000) == 0)
    {
      goto LABEL_34;
    }
    operator delete(v34);
    if (!v33)
      goto LABEL_58;
LABEL_35:
    if (v32 < 0)
      operator delete(v31[0]);
    goto LABEL_58;
  }
  v29 = *a4;
  v30 = *((_QWORD *)a4 + 2);
  HIBYTE(v27[2]) = 18;
  strcpy((char *)v27, "CorePhotogrammetry");
  sub_2395AC84C(v27, v28);
  v15 = MEMORY[0x24BEDB870];
  v16 = MEMORY[0x24BEDB870] + 64;
  v17 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
  v18 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  v87[0] = MEMORY[0x24BEDB870] + 64;
  *(_QWORD *)&v79 = v17;
  *(_QWORD *)((char *)&v79 + *(_QWORD *)(v17 - 24)) = v18;
  v19 = (std::ios_base *)((char *)&v79 + *(_QWORD *)(v79 - 24));
  std::ios_base::init(v19, (char *)&v79 + 8);
  v19[1].__vftable = 0;
  v19[1].__fmtflags_ = -1;
  *(_QWORD *)&v79 = v15 + 24;
  v87[0] = v16;
  std::streambuf::basic_streambuf();
  v20 = MEMORY[0x24BEDB848];
  *((_QWORD *)&v79 + 1) = MEMORY[0x24BEDB848] + 16;
  memset(v85, 0, sizeof(v85));
  v86 = 16;
  v65 = v29;
  v66 = v30;
  sub_23961EC8C(a2, &v79, 5, (uint64_t)&v67);
  if (v78)
  {
    std::stringbuf::str();
    sub_2395ABE70((const void **)&v63, (uint64_t)v28, (uint64_t)v60);
    if (v62)
    {
      if ((v61 & 0x80u) == 0)
        v21 = v60;
      else
        v21 = (void **)v60[0];
      if ((v61 & 0x80u) == 0)
        v22 = v61;
      else
        v22 = (uint64_t)v60[1];
      sub_239458500(&v88, (uint64_t)v21, v22);
      *(_BYTE *)(a1 + 120) = 1;
    }
    else
    {
      sub_239618F08(v40, "Failure during saving image file");
      v48 = 1;
      sub_239616578(5u, (__int128 *)v40, (uint64_t)&v49);
      *(_OWORD *)a1 = v49;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v59)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v25 = v52;
        if (v52)
        {
          *(_OWORD *)(a1 + 16) = v50;
          *(_QWORD *)(a1 + 32) = v51;
          v51 = 0;
          v50 = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v58)
        {
          v26 = v55;
          *(_QWORD *)(a1 + 64) = v54;
          *(_OWORD *)(a1 + 48) = v53;
          v53 = 0uLL;
          *(_QWORD *)(a1 + 72) = v26;
          *(_OWORD *)(a1 + 80) = v56;
          *(_QWORD *)(a1 + 96) = v57;
          v54 = 0;
          v56 = 0uLL;
          v57 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v25 && SHIBYTE(v51) < 0)
          operator delete((void *)v50);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v48)
      {
        if (v47)
        {
          if (v46 < 0)
            operator delete(v45);
          if (v44 < 0)
            operator delete(v43);
        }
        if (v42 && v41 < 0)
          operator delete(v40[0]);
      }
    }
    if (v62 && (char)v61 < 0)
      operator delete(v60[0]);
    if (v64 < 0)
      operator delete(v63);
    if (v78 || !v77)
      goto LABEL_50;
    if (!v76)
      goto LABEL_47;
LABEL_43:
    if (SHIBYTE(v75) < 0)
      operator delete((void *)v74);
    if (SHIBYTE(v72) < 0)
      operator delete((void *)v71);
LABEL_47:
    if (v70 && SHIBYTE(v69) < 0)
      operator delete((void *)v68);
    goto LABEL_50;
  }
  *(_BYTE *)(a1 + 120) = 0;
  *(_OWORD *)a1 = v67;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v77)
  {
    *(_BYTE *)(a1 + 40) = 0;
    if (v70)
    {
      *(_OWORD *)(a1 + 16) = v68;
      *(_QWORD *)(a1 + 32) = v69;
      v69 = 0;
      v68 = 0uLL;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v76)
    {
      v23 = v73;
      *(_QWORD *)(a1 + 64) = v72;
      *(_OWORD *)(a1 + 48) = v71;
      v71 = 0uLL;
      *(_QWORD *)(a1 + 72) = v23;
      *(_OWORD *)(a1 + 80) = v74;
      *(_QWORD *)(a1 + 96) = v75;
      v72 = 0;
      v74 = 0uLL;
      v75 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    if (!v76)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_50:
  *(_QWORD *)&v79 = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)&v79 + *(_QWORD *)(v79 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  *((_QWORD *)&v79 + 1) = v20 + 16;
  if (SHIBYTE(v85[2]) < 0)
    operator delete(v85[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v87);
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  if (SHIBYTE(v27[2]) < 0)
    operator delete((void *)v27[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)&v89[*(_QWORD *)(v88 - 24) - 8], *(_DWORD *)&v89[*(_QWORD *)(v88 - 24) + 24] | 4);
LABEL_58:
  v88 = *v9;
  *(_QWORD *)&v89[*(_QWORD *)(v88 - 24) - 8] = v9[3];
  MEMORY[0x23B83DC8C](v89);
  std::ostream::~ostream();
  return MEMORY[0x23B83E250](v90);
}

void sub_239B92150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a70;
  char a71;
  void *a72;
  char a73;
  char a74;

  sub_239523188((uint64_t)&a37);
  if (a71 && a70 < 0)
    operator delete(__p);
  if (a73 < 0)
    operator delete(a72);
  sub_239522F50((uint64_t)&a74);
  sub_239A90B68((uint64_t)&STACK[0x278]);
  if (a17)
    operator delete(a17);
  if (a16 < 0)
    operator delete(a11);
  sub_23955C978(&STACK[0x380]);
  _Unwind_Resume(a1);
}

void sub_239B92248(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B92270(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFAA70;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B922AC(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFAA70;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B922F8(uint64_t a1)
{
  char *v2;
  _BYTE *v3;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = off_250AFAA70;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v2 + 6) = *(_QWORD *)(a1 + 48);
  return v2;
}

void sub_239B92368(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B9237C(uint64_t a1, __n128 *a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __n128 result;

  a2->n128_u64[0] = (unint64_t)off_250AFAA70;
  v4 = &a2->n128_u8[8];
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    a2[1].n128_u64[1] = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  a2[3].n128_u64[0] = *(_QWORD *)(a1 + 48);
  a2[2] = result;
  return result;
}

void sub_239B923E4(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B923F8(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B92428@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  const std::ios_base *v5;
  const std::locale::facet *v6;
  _QWORD *v7;
  std::string *v8;
  std::string::size_type v9;
  char v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  std::__fs::filesystem::path __p;
  std::__fs::filesystem::path v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int16 v25;
  char v26;
  std::string v27;
  std::__fs::filesystem::path v28;
  _QWORD v29[2];
  _QWORD v30[11];
  char v31;
  uint64_t v32;
  std::string v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  sub_2394988CC((uint64_t)v29);
  v4 = v30[0];
  *(_QWORD *)((char *)&v30[3] + *(_QWORD *)(v30[0] - 24)) = 8;
  v5 = (const std::ios_base *)((char *)v30 + *(_QWORD *)(v4 - 24));
  if (v5[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v5);
    v6 = std::locale::use_facet((const std::locale *)&v20, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale((std::locale *)&v20);
  }
  v5[1].__fmtflags_ = 48;
  v7 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v7, (uint64_t)"_fused2", 7);
  std::stringbuf::str();
  v8 = std::string::append(&v27, ".tiff");
  v9 = v8->__r_.__value_.__r.__words[0];
  v33.__r_.__value_.__r.__words[0] = v8->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v33.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v8->__r_.__value_.__r.__words[1] + 7);
  v10 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&v20.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v33.__r_.__value_.__r.__words + 7);
  v20.__pn_.__r_.__value_.__r.__words[0] = v9;
  v20.__pn_.__r_.__value_.__l.__size_ = v33.__r_.__value_.__r.__words[0];
  *((_BYTE *)&v20.__pn_.__r_.__value_.__s + 23) = v10;
  sub_239498A04(&v20, a1 + 8, &v28);
  if ((SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_5;
LABEL_8:
    operator delete(v27.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_9;
  }
  operator delete(v20.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_8;
LABEL_5:
  if ((SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_6:
    __p = v28;
    goto LABEL_10;
  }
LABEL_9:
  sub_23941A7F8(&__p, v28.__pn_.__r_.__value_.__l.__data_, v28.__pn_.__r_.__value_.__l.__size_);
LABEL_10:
  sub_2395ACAA8((uint64_t)&__p, (char *)&v33);
  v27 = v33;
  memset(&v33, 0, sizeof(v33));
  v17 = *(_OWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 48);
  sub_239B928A0((uint64_t)&v20, (uint64_t)&v27, &v17);
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_13;
LABEL_17:
      operator delete(__p.__pn_.__r_.__value_.__l.__data_);
      if (v26)
        goto LABEL_14;
      goto LABEL_18;
    }
  }
  else if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v33.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_17;
LABEL_13:
  if (v26)
  {
LABEL_14:
    sub_239AA5614((uint64_t)&v20);
    v11 = operator new(0x70uLL);
    v11[1] = 0;
    v11[2] = 0;
    *v11 = &off_250B02130;
    v11[3] = &off_250ADD920;
    v12 = *(_OWORD *)&v20.__pn_.__r_.__value_.__r.__words[1];
    *(_OWORD *)&v20.__pn_.__r_.__value_.__r.__words[1] = 0uLL;
    v13 = v21;
    *((_OWORD *)v11 + 2) = v12;
    *((_OWORD *)v11 + 3) = v13;
    v14 = v23;
    *((_OWORD *)v11 + 4) = v22;
    *((_OWORD *)v11 + 5) = v14;
    v11[12] = v24;
    *((_WORD *)v11 + 52) = v25;
    *a2 = v11 + 3;
    a2[1] = v11;
    goto LABEL_19;
  }
LABEL_18:
  *a2 = 0;
  a2[1] = 0;
LABEL_19:
  sub_239AA557C((uint64_t)&v20);
  if (SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__pn_.__r_.__value_.__l.__data_);
  v29[0] = *MEMORY[0x24BEDB7F0];
  v15 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v29 + *(_QWORD *)(v29[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v30[0] = v15;
  v30[1] = MEMORY[0x24BEDB848] + 16;
  if (v31 < 0)
    operator delete((void *)v30[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v32);
}

void sub_239B92754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, std::locale a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_Unwind_Exception *exception_object,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v63;

  if (a42 < 0)
    operator delete(__p);
  a43 = *MEMORY[0x24BEDB7F0];
  v63 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a43 + *(_QWORD *)(a43 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a45 = v63;
  a46 = MEMORY[0x24BEDB848] + 16;
  if (a59 < 0)
    operator delete(a54);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a62);
  _Unwind_Resume(a1);
}

uint64_t sub_239B928A0(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  std::ios_base *v10;
  int v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  const void *v17[3];
  void *v18[3];
  __int128 v19;
  uint64_t v20;
  void *v21[2];
  char v22;
  char v23;
  void *v24;
  char v25;
  void *v26;
  char v27;
  char v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 __p;
  uint64_t v34;
  unsigned __int8 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  void *v45[2];
  unsigned __int8 v46;
  char v47;
  std::string v48;
  _QWORD v49[2];
  _BYTE v50[408];
  _QWORD v51[20];

  v51[19] = *MEMORY[0x24BDAC8D0];
  v5 = MEMORY[0x24BEDB838];
  v6 = MEMORY[0x24BEDB838] + 64;
  v7 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v8 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v9 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v51[0] = MEMORY[0x24BEDB838] + 64;
  v49[0] = v8;
  *(_QWORD *)((char *)v49 + *(_QWORD *)(v8 - 24)) = v9;
  v49[1] = 0;
  v10 = (std::ios_base *)((char *)v49 + *(_QWORD *)(v49[0] - 24));
  std::ios_base::init(v10, v50);
  v10[1].__vftable = 0;
  v10[1].__fmtflags_ = -1;
  v49[0] = v5 + 24;
  v51[0] = v6;
  MEMORY[0x23B83DC80](v50);
  std::ifstream::open();
  if ((v50[*(_QWORD *)(v49[0] - 24) + 16] & 5) != 0)
  {
    sub_239618F08(v21, "Failure during loading image file");
    v29 = 1;
    sub_239616578(5u, (__int128 *)v21, (uint64_t)&v32);
    *(_OWORD *)a1 = v32;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v43)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v11 = v35;
      if (v35)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v34;
        v34 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v41)
      {
        v12 = v38;
        *(_QWORD *)(a1 + 64) = v37;
        *(_OWORD *)(a1 + 48) = v36;
        v36 = 0uLL;
        *(_QWORD *)(a1 + 72) = v12;
        *(_OWORD *)(a1 + 80) = v39;
        *(_QWORD *)(a1 + 96) = v40;
        v37 = 0;
        v39 = 0uLL;
        v40 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v11 && SHIBYTE(v34) < 0)
        operator delete((void *)__p);
      if (!v29)
        goto LABEL_38;
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
      if (!v29)
        goto LABEL_38;
    }
    if (!v28)
      goto LABEL_35;
    if (v27 < 0)
    {
      operator delete(v26);
      if ((v25 & 0x80000000) == 0)
      {
LABEL_35:
        if (!v23)
          goto LABEL_38;
        goto LABEL_36;
      }
    }
    else if ((v25 & 0x80000000) == 0)
    {
      goto LABEL_35;
    }
    operator delete(v24);
    if (!v23)
      goto LABEL_38;
LABEL_36:
    if (v22 < 0)
      operator delete(v21[0]);
    goto LABEL_38;
  }
  v19 = *a3;
  v20 = *((_QWORD *)a3 + 2);
  HIBYTE(v17[2]) = 18;
  strcpy((char *)v17, "CorePhotogrammetry");
  sub_2395AC84C(v17, v18);
  sub_239A7D600(&v48, *(_QWORD **)&v50[*(_QWORD *)(v49[0] - 24) + 24]);
  sub_2395AC2E8((const void **)&v48.__r_.__value_.__l.__data_, (uint64_t)v18, (uint64_t)v45);
  sub_2394988CC((uint64_t)&v32);
  if ((v46 & 0x80u) == 0)
    v13 = v45;
  else
    v13 = (void **)v45[0];
  if ((v46 & 0x80u) == 0)
    v14 = v46;
  else
    v14 = (uint64_t)v45[1];
  sub_239458500(&__p, (uint64_t)v13, v14);
  v30 = v19;
  v31 = v20;
  sub_23961EA04(&v32, 5, a1);
  *(_QWORD *)&v32 = *MEMORY[0x24BEDB7F0];
  v15 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)&v32 + *(_QWORD *)(v32 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  *(_QWORD *)&__p = v15;
  *((_QWORD *)&__p + 1) = MEMORY[0x24BEDB848] + 16;
  if (v42 < 0)
    operator delete(*((void **)&v39 + 1));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v44);
  if (v47 && (char)v46 < 0)
    operator delete(v45[0]);
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v48.__r_.__value_.__l.__data_);
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  if (SHIBYTE(v17[2]) < 0)
    operator delete((void *)v17[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v49 + *(_QWORD *)(v49[0] - 24)), *(_DWORD *)&v50[*(_QWORD *)(v49[0] - 24) + 16] | 4);
LABEL_38:
  v49[0] = *v7;
  *(_QWORD *)((char *)v49 + *(_QWORD *)(v49[0] - 24)) = v7[3];
  MEMORY[0x23B83DC8C](v50);
  std::istream::~istream();
  return MEMORY[0x23B83E250](v51);
}

void sub_239B92CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a73;
  char a74;
  void *v75;

  if (a74)
  {
    if (a73 < 0)
      operator delete(__p);
  }
  if (SLOBYTE(STACK[0x217]) < 0)
  {
    operator delete((void *)STACK[0x200]);
    v75 = a15;
    if (!a15)
    {
LABEL_6:
      if ((a14 & 0x80000000) == 0)
      {
LABEL_11:
        sub_23955CB90(&STACK[0x218]);
        _Unwind_Resume(a1);
      }
LABEL_10:
      operator delete(a9);
      goto LABEL_11;
    }
  }
  else
  {
    v75 = a15;
    if (!a15)
      goto LABEL_6;
  }
  operator delete(v75);
  if ((a14 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239B92DBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

void sub_239B92DE4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250B02130;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B92DF4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250B02130;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

double sub_239B92E24(uint64_t a1)
{
  uint64_t v1;
  double result;

  v1 = a1 + 24;
  sub_239416DA0(a1 + 32);
  *(_QWORD *)&result = nullsub_4(v1).n128_u64[0];
  return result;
}

uint64_t sub_239B92E50(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA950;
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return a1;
LABEL_5:
    operator delete(*(void **)(a1 + 16));
    return a1;
  }
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_5;
  return a1;
}

void sub_239B92EA8(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA950;
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
LABEL_6:
      JUMPOUT(0x23B83E31CLL);
  }
  else if ((*(char *)(a1 + 39) & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 16));
  goto LABEL_6;
}

_QWORD *sub_239B92F10(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v2 = operator new(0x80uLL);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 8);
  *v2 = off_250AFA950;
  v2[1] = v4;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8((_BYTE *)v2 + 16, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *((_OWORD *)v2 + 1) = *(_OWORD *)(a1 + 16);
    v2[4] = *(_QWORD *)(a1 + 32);
  }
  *(_OWORD *)(v3 + 5) = *(_OWORD *)(a1 + 40);
  v3[7] = *(_QWORD *)(a1 + 56);
  v5 = v3 + 8;
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)(a1 + 64);
    v3[10] = *(_QWORD *)(a1 + 80);
  }
  *(_OWORD *)(v3 + 11) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(v3 + 13) = *(_OWORD *)(a1 + 104);
  v3[15] = *(_QWORD *)(a1 + 120);
  return v3;
}

void sub_239B92FD8(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[39] < 0)
    operator delete(*v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B93004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  __int128 v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;
  __n128 result;

  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a2 = off_250AFA950;
  *(_QWORD *)(a2 + 8) = v4;
  v5 = (_BYTE *)(a2 + 16);
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    v6 = *(_OWORD *)(a1 + 16);
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
    *(_OWORD *)v5 = v6;
  }
  v7 = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v7;
  v8 = (_BYTE *)(a2 + 64);
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(v8, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    v9 = *(_OWORD *)(a1 + 64);
    *(_QWORD *)(a2 + 80) = *(_QWORD *)(a1 + 80);
    *(_OWORD *)v8 = v9;
  }
  result = *(__n128 *)(a1 + 88);
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a1 + 104);
  *(__n128 *)(a2 + 88) = result;
  *(_QWORD *)(a2 + 120) = *(_QWORD *)(a1 + 120);
  return result;
}

void sub_239B930C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_239B930DC(uint64_t a1)
{
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(*(void **)(a1 + 16));
    return;
  }
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_5;
}

void sub_239B93128(void **__p)
{
  if (*((char *)__p + 87) < 0)
  {
    operator delete(__p[8]);
    if ((*((char *)__p + 39) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_5:
    operator delete(__p[2]);
    goto LABEL_3;
  }
  if (*((char *)__p + 39) < 0)
    goto LABEL_5;
LABEL_3:
  operator delete(__p);
}

void sub_239B93174(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  void *__p[2];
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  void *__dst[2];
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  _QWORD *v41;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(v4 + 56);
  v7 = *(std::__shared_weak_count **)(v4 + 64);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v29 = 0;
    v30 = v6;
    v31 = v7;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v29 = 0;
    v30 = v6;
    v31 = 0;
  }
  v28 = v5;
  v29 = (int)std::thread::hardware_concurrency();
  v11 = operator new(0x1B0uLL);
  v11[1] = 0;
  v11[2] = 0;
  *v11 = &off_250AF9F98;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(__dst, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 16);
    v37 = *(_QWORD *)(a1 + 32);
  }
  v38 = *(_OWORD *)(a1 + 40);
  v39 = *(_QWORD *)(a1 + 56);
  v43 = 0;
  v12 = (char *)operator new(0x38uLL);
  *(_QWORD *)v12 = off_250AFA998;
  v13 = v12 + 8;
  if (SHIBYTE(v37) < 0)
  {
    sub_23941A7F8(v13, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)__dst;
    *((_QWORD *)v12 + 3) = v37;
  }
  *((_OWORD *)v12 + 2) = v38;
  *((_QWORD *)v12 + 6) = v39;
  v43 = v12;
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(__p, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a1 + 64);
    v33 = *(_QWORD *)(a1 + 80);
  }
  v34 = *(_OWORD *)(a1 + 88);
  v35 = *(_OWORD *)(a1 + 104);
  v41 = 0;
  v14 = (char *)operator new(0x40uLL);
  *(_QWORD *)v14 = off_250AFA9E0;
  v15 = v14 + 8;
  if (SHIBYTE(v33) < 0)
  {
    sub_23941A7F8(v15, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)__p;
    *((_QWORD *)v14 + 3) = v33;
  }
  v16 = v35;
  *((_OWORD *)v14 + 2) = v34;
  *((_OWORD *)v14 + 3) = v16;
  v41 = v14;
  sub_239B83BA4((uint64_t)(v11 + 3), &v28, v42, v40);
  v19 = v41;
  if (v41 == v40)
  {
    v20 = 4;
    v19 = v40;
  }
  else
  {
    if (!v41)
      goto LABEL_25;
    v20 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v19 + 8 * v20))(v19, v17, v18);
LABEL_25:
  if (SHIBYTE(v33) < 0)
    operator delete(__p[0]);
  v21 = v43;
  if (v43 == v42)
  {
    v22 = 4;
    v21 = v42;
  }
  else
  {
    if (!v43)
      goto LABEL_32;
    v22 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v21 + 8 * v22))(v21, v17, v18);
LABEL_32:
  if (SHIBYTE(v37) < 0)
    operator delete(__dst[0]);
  *a2 = v11 + 3;
  a2[1] = v11;
  v23 = v31;
  if (v31)
  {
    v24 = (unint64_t *)&v31->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  if (v7)
  {
    v26 = (unint64_t *)&v7->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_239B93488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;

  operator delete(v32);
  if (a18 < 0)
    operator delete(__p);
  v35 = *(_QWORD **)(v33 - 80);
  if (v35 == (_QWORD *)(v33 - 104))
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 104);
  }
  else
  {
    if (!v35)
      goto LABEL_8;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_8:
  if (a29 < 0)
    operator delete(a24);
  std::__shared_weak_count::~__shared_weak_count(v30);
  operator delete(v37);
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v39 = __ldaxr(p_shared_owners);
    while (__stlxr(v39 - 1, p_shared_owners));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  if (v29)
  {
    v40 = (unint64_t *)&v29->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B93610(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA9E0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B9364C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA9E0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B93698(uint64_t a1)
{
  char *v2;
  _BYTE *v3;
  __int128 v4;

  v2 = (char *)operator new(0x40uLL);
  *(_QWORD *)v2 = off_250AFA9E0;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  v4 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v2 + 3) = v4;
  return v2;
}

void sub_239B93700(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B93714(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  *(_QWORD *)a2 = off_250AFA9E0;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v7;
  return result;
}

void sub_239B93774(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B93788(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B937B8(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  _QWORD *v4;
  uint64_t v5;
  const std::ios_base *v6;
  const std::locale::facet *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  __int128 v17;
  uint64_t v18;
  std::__fs::filesystem::path __dst;
  std::__fs::filesystem::path v20;
  char v21;
  char v22;
  void *v23;
  char v24;
  void *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  std::string v30;
  std::__fs::filesystem::path __p;
  _QWORD v32[2];
  _QWORD v33[11];
  char v34;
  uint64_t v35;
  std::string v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD **)a2;
  v3 = *(std::__shared_weak_count **)(a2 + 8);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  sub_2394988CC((uint64_t)v32);
  v5 = v33[0];
  *(_QWORD *)((char *)&v33[3] + *(_QWORD *)(v33[0] - 24)) = 8;
  v6 = (const std::ios_base *)((char *)v33 + *(_QWORD *)(v5 - 24));
  if (v6[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v6);
    v7 = std::locale::use_facet((const std::locale *)&v20, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)&v20);
  }
  v6[1].__fmtflags_ = 48;
  v8 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v8, (uint64_t)"_fused1", 7);
  std::stringbuf::str();
  v9 = std::string::append(&v30, ".tiff");
  v10 = v9->__r_.__value_.__r.__words[0];
  v36.__r_.__value_.__r.__words[0] = v9->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v9->__r_.__value_.__r.__words[1] + 7);
  v11 = HIBYTE(v9->__r_.__value_.__r.__words[2]);
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&v20.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 7);
  v20.__pn_.__r_.__value_.__r.__words[0] = v10;
  v20.__pn_.__r_.__value_.__l.__size_ = v36.__r_.__value_.__r.__words[0];
  *((_BYTE *)&v20.__pn_.__r_.__value_.__s + 23) = v11;
  sub_239498A04(&v20, a1 + 8, &__p);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_5;
  }
  else if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v30.__r_.__value_.__l.__data_);
LABEL_5:
  if (sub_239B207F0(*(_QWORD *)(a1 + 32), (uint64_t)&__p))
    goto LABEL_16;
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&__dst, __p.__pn_.__r_.__value_.__l.__data_, __p.__pn_.__r_.__value_.__l.__size_);
  else
    __dst = __p;
  sub_2395ACAA8((uint64_t)&__dst, (char *)&v36);
  v30 = v36;
  memset(&v36, 0, sizeof(v36));
  v17 = *(_OWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 56);
  sub_239B91A2C((uint64_t)&v20, v4, (uint64_t)&v30, &v17);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v30.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_14;
LABEL_28:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v29)
        goto LABEL_15;
      goto LABEL_29;
    }
  }
  else if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(v36.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_28;
LABEL_14:
  if (v29)
  {
LABEL_15:
    sub_239B20A74(*(_QWORD *)(a1 + 32), (uint64_t)&__p);
    if (!v29 && v28)
    {
      if (v27)
      {
        if (v26 < 0)
          operator delete(v25);
        if (v24 < 0)
          operator delete(v23);
      }
      if (v22 && v21 < 0)
        operator delete((void *)v20.__pn_.__r_.__value_.__r.__words[2]);
    }
LABEL_16:
    v12 = 1;
    if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_17;
  }
LABEL_29:
  if (v28)
  {
    if (v27)
    {
      if (v26 < 0)
        operator delete(v25);
      if (v24 < 0)
        operator delete(v23);
    }
    if (v22 && v21 < 0)
      operator delete((void *)v20.__pn_.__r_.__value_.__r.__words[2]);
  }
  v12 = 0;
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_17:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
LABEL_18:
  v32[0] = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v32 + *(_QWORD *)(v32[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v33[0] = v13;
  v33[1] = MEMORY[0x24BEDB848] + 16;
  if (v34 < 0)
    operator delete((void *)v33[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v35);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v12;
}

void sub_239B93B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, std::locale a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  std::__shared_weak_count *v62;
  uint64_t v64;
  unint64_t *p_shared_owners;
  unint64_t v66;

  if (a42 < 0)
    operator delete(__p);
  a43 = *MEMORY[0x24BEDB7F0];
  v64 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a43 + *(_QWORD *)(a43 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a45 = v64;
  a46 = MEMORY[0x24BEDB848] + 16;
  if (a59 < 0)
    operator delete(a54);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a62);
  if (v62)
  {
    p_shared_owners = (unint64_t *)&v62->__shared_owners_;
    do
      v66 = __ldaxr(p_shared_owners);
    while (__stlxr(v66 - 1, p_shared_owners));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
      std::__shared_weak_count::__release_weak(v62);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B93D3C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA998;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B93D78(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA998;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B93DC4(uint64_t a1)
{
  char *v2;
  _BYTE *v3;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = off_250AFA998;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v2 + 6) = *(_QWORD *)(a1 + 48);
  return v2;
}

void sub_239B93E34(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B93E48(uint64_t a1, __n128 *a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __n128 result;

  a2->n128_u64[0] = (unint64_t)off_250AFA998;
  v4 = &a2->n128_u8[8];
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    a2[1].n128_u64[1] = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  a2[3].n128_u64[0] = *(_QWORD *)(a1 + 48);
  a2[2] = result;
  return result;
}

void sub_239B93EB0(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B93EC4(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B93EF4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  const std::ios_base *v5;
  const std::locale::facet *v6;
  _QWORD *v7;
  std::string *v8;
  std::string::size_type v9;
  char v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  std::__fs::filesystem::path __p;
  std::__fs::filesystem::path v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int16 v25;
  char v26;
  std::string v27;
  std::__fs::filesystem::path v28;
  _QWORD v29[2];
  _QWORD v30[11];
  char v31;
  uint64_t v32;
  std::string v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  sub_2394988CC((uint64_t)v29);
  v4 = v30[0];
  *(_QWORD *)((char *)&v30[3] + *(_QWORD *)(v30[0] - 24)) = 8;
  v5 = (const std::ios_base *)((char *)v30 + *(_QWORD *)(v4 - 24));
  if (v5[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v5);
    v6 = std::locale::use_facet((const std::locale *)&v20, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale((std::locale *)&v20);
  }
  v5[1].__fmtflags_ = 48;
  v7 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v7, (uint64_t)"_fused1", 7);
  std::stringbuf::str();
  v8 = std::string::append(&v27, ".tiff");
  v9 = v8->__r_.__value_.__r.__words[0];
  v33.__r_.__value_.__r.__words[0] = v8->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v33.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v8->__r_.__value_.__r.__words[1] + 7);
  v10 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&v20.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v33.__r_.__value_.__r.__words + 7);
  v20.__pn_.__r_.__value_.__r.__words[0] = v9;
  v20.__pn_.__r_.__value_.__l.__size_ = v33.__r_.__value_.__r.__words[0];
  *((_BYTE *)&v20.__pn_.__r_.__value_.__s + 23) = v10;
  sub_239498A04(&v20, a1 + 8, &v28);
  if ((SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_5;
LABEL_8:
    operator delete(v27.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_9;
  }
  operator delete(v20.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_8;
LABEL_5:
  if ((SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_6:
    __p = v28;
    goto LABEL_10;
  }
LABEL_9:
  sub_23941A7F8(&__p, v28.__pn_.__r_.__value_.__l.__data_, v28.__pn_.__r_.__value_.__l.__size_);
LABEL_10:
  sub_2395ACAA8((uint64_t)&__p, (char *)&v33);
  v27 = v33;
  memset(&v33, 0, sizeof(v33));
  v17 = *(_OWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 48);
  sub_239B928A0((uint64_t)&v20, (uint64_t)&v27, &v17);
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_13;
LABEL_17:
      operator delete(__p.__pn_.__r_.__value_.__l.__data_);
      if (v26)
        goto LABEL_14;
      goto LABEL_18;
    }
  }
  else if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v33.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_17;
LABEL_13:
  if (v26)
  {
LABEL_14:
    sub_239AA5614((uint64_t)&v20);
    v11 = operator new(0x70uLL);
    v11[1] = 0;
    v11[2] = 0;
    *v11 = &off_250B02130;
    v11[3] = &off_250ADD920;
    v12 = *(_OWORD *)&v20.__pn_.__r_.__value_.__r.__words[1];
    *(_OWORD *)&v20.__pn_.__r_.__value_.__r.__words[1] = 0uLL;
    v13 = v21;
    *((_OWORD *)v11 + 2) = v12;
    *((_OWORD *)v11 + 3) = v13;
    v14 = v23;
    *((_OWORD *)v11 + 4) = v22;
    *((_OWORD *)v11 + 5) = v14;
    v11[12] = v24;
    *((_WORD *)v11 + 52) = v25;
    *a2 = v11 + 3;
    a2[1] = v11;
    goto LABEL_19;
  }
LABEL_18:
  *a2 = 0;
  a2[1] = 0;
LABEL_19:
  sub_239AA557C((uint64_t)&v20);
  if (SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__pn_.__r_.__value_.__l.__data_);
  v29[0] = *MEMORY[0x24BEDB7F0];
  v15 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v29 + *(_QWORD *)(v29[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v30[0] = v15;
  v30[1] = MEMORY[0x24BEDB848] + 16;
  if (v31 < 0)
    operator delete((void *)v30[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v32);
}

void sub_239B94220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, std::locale a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_Unwind_Exception *exception_object,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v63;

  if (a42 < 0)
    operator delete(__p);
  a43 = *MEMORY[0x24BEDB7F0];
  v63 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a43 + *(_QWORD *)(a43 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a45 = v63;
  a46 = MEMORY[0x24BEDB848] + 16;
  if (a59 < 0)
    operator delete(a54);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a62);
  _Unwind_Resume(a1);
}

uint64_t sub_239B9436C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA450;
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return a1;
LABEL_5:
    operator delete(*(void **)(a1 + 16));
    return a1;
  }
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_5;
  return a1;
}

void sub_239B943C4(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA450;
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
LABEL_6:
      JUMPOUT(0x23B83E31CLL);
  }
  else if ((*(char *)(a1 + 39) & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 16));
  goto LABEL_6;
}

_QWORD *sub_239B9442C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v2 = operator new(0x80uLL);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 8);
  *v2 = off_250AFA450;
  v2[1] = v4;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8((_BYTE *)v2 + 16, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *((_OWORD *)v2 + 1) = *(_OWORD *)(a1 + 16);
    v2[4] = *(_QWORD *)(a1 + 32);
  }
  *(_OWORD *)(v3 + 5) = *(_OWORD *)(a1 + 40);
  v3[7] = *(_QWORD *)(a1 + 56);
  v5 = v3 + 8;
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)(a1 + 64);
    v3[10] = *(_QWORD *)(a1 + 80);
  }
  *(_OWORD *)(v3 + 11) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(v3 + 13) = *(_OWORD *)(a1 + 104);
  v3[15] = *(_QWORD *)(a1 + 120);
  return v3;
}

void sub_239B944F4(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[39] < 0)
    operator delete(*v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B94520(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  __int128 v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;
  __n128 result;

  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a2 = off_250AFA450;
  *(_QWORD *)(a2 + 8) = v4;
  v5 = (_BYTE *)(a2 + 16);
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    v6 = *(_OWORD *)(a1 + 16);
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
    *(_OWORD *)v5 = v6;
  }
  v7 = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v7;
  v8 = (_BYTE *)(a2 + 64);
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(v8, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    v9 = *(_OWORD *)(a1 + 64);
    *(_QWORD *)(a2 + 80) = *(_QWORD *)(a1 + 80);
    *(_OWORD *)v8 = v9;
  }
  result = *(__n128 *)(a1 + 88);
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a1 + 104);
  *(__n128 *)(a2 + 88) = result;
  *(_QWORD *)(a2 + 120) = *(_QWORD *)(a1 + 120);
  return result;
}

void sub_239B945DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_239B945F8(uint64_t a1)
{
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(*(void **)(a1 + 16));
    return;
  }
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_5;
}

void sub_239B94644(void **__p)
{
  if (*((char *)__p + 87) < 0)
  {
    operator delete(__p[8]);
    if ((*((char *)__p + 39) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_5:
    operator delete(__p[2]);
    goto LABEL_3;
  }
  if (*((char *)__p + 39) < 0)
    goto LABEL_5;
LABEL_3:
  operator delete(__p);
}

void sub_239B94690(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  void *__p[2];
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  void *__dst[2];
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  _QWORD *v41;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(v4 + 56);
  v7 = *(std::__shared_weak_count **)(v4 + 64);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v29 = 0;
    v30 = v6;
    v31 = v7;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v29 = 0;
    v30 = v6;
    v31 = 0;
  }
  v28 = v5;
  v29 = (int)std::thread::hardware_concurrency();
  v11 = operator new(0x1B0uLL);
  v11[1] = 0;
  v11[2] = 0;
  *v11 = &off_250AFA498;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(__dst, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 16);
    v37 = *(_QWORD *)(a1 + 32);
  }
  v38 = *(_OWORD *)(a1 + 40);
  v39 = *(_QWORD *)(a1 + 56);
  v43 = 0;
  v12 = (char *)operator new(0x38uLL);
  *(_QWORD *)v12 = off_250AFA4D0;
  v13 = v12 + 8;
  if (SHIBYTE(v37) < 0)
  {
    sub_23941A7F8(v13, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)__dst;
    *((_QWORD *)v12 + 3) = v37;
  }
  *((_OWORD *)v12 + 2) = v38;
  *((_QWORD *)v12 + 6) = v39;
  v43 = v12;
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(__p, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a1 + 64);
    v33 = *(_QWORD *)(a1 + 80);
  }
  v34 = *(_OWORD *)(a1 + 88);
  v35 = *(_OWORD *)(a1 + 104);
  v41 = 0;
  v14 = (char *)operator new(0x40uLL);
  *(_QWORD *)v14 = off_250AFA518;
  v15 = v14 + 8;
  if (SHIBYTE(v33) < 0)
  {
    sub_23941A7F8(v15, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)__p;
    *((_QWORD *)v14 + 3) = v33;
  }
  v16 = v35;
  *((_OWORD *)v14 + 2) = v34;
  *((_OWORD *)v14 + 3) = v16;
  v41 = v14;
  sub_239B8A520((uint64_t)(v11 + 3), &v28, v42, v40);
  v19 = v41;
  if (v41 == v40)
  {
    v20 = 4;
    v19 = v40;
  }
  else
  {
    if (!v41)
      goto LABEL_25;
    v20 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v19 + 8 * v20))(v19, v17, v18);
LABEL_25:
  if (SHIBYTE(v33) < 0)
    operator delete(__p[0]);
  v21 = v43;
  if (v43 == v42)
  {
    v22 = 4;
    v21 = v42;
  }
  else
  {
    if (!v43)
      goto LABEL_32;
    v22 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v21 + 8 * v22))(v21, v17, v18);
LABEL_32:
  if (SHIBYTE(v37) < 0)
    operator delete(__dst[0]);
  *a2 = v11 + 3;
  a2[1] = v11;
  v23 = v31;
  if (v31)
  {
    v24 = (unint64_t *)&v31->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  if (v7)
  {
    v26 = (unint64_t *)&v7->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_239B949A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;

  operator delete(v32);
  if (a18 < 0)
    operator delete(__p);
  v35 = *(_QWORD **)(v33 - 80);
  if (v35 == (_QWORD *)(v33 - 104))
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 104);
  }
  else
  {
    if (!v35)
      goto LABEL_8;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_8:
  if (a29 < 0)
    operator delete(a24);
  std::__shared_weak_count::~__shared_weak_count(v30);
  operator delete(v37);
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v39 = __ldaxr(p_shared_owners);
    while (__stlxr(v39 - 1, p_shared_owners));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  if (v29)
  {
    v40 = (unint64_t *)&v29->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B94B2C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA518;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B94B68(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA518;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B94BB4(uint64_t a1)
{
  char *v2;
  _BYTE *v3;
  __int128 v4;

  v2 = (char *)operator new(0x40uLL);
  *(_QWORD *)v2 = off_250AFA518;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  v4 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v2 + 3) = v4;
  return v2;
}

void sub_239B94C1C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B94C30(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  *(_QWORD *)a2 = off_250AFA518;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v7;
  return result;
}

void sub_239B94C90(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B94CA4(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B94CD4(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  const std::ios_base *v6;
  const std::locale::facet *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  std::string::size_type *v14;
  std::string::size_type v15;
  std::string::size_type v16;
  std::ios_base *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  std::ios_base *v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  std::__shared_weak_count *v31;
  __int128 v32;
  uint64_t v33;
  std::__fs::filesystem::path __dst;
  void *v35[2];
  uint64_t v36;
  void *v37[2];
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  char v42;
  __int128 v43;
  void *v44;
  void *v45;
  void *v46[2];
  void *v47;
  char v48;
  char v49;
  char v50;
  std::__fs::filesystem::path v51;
  _QWORD v52[2];
  _QWORD v53[11];
  char v54;
  uint64_t v55;
  const void *v56[4];
  void *v57[3];
  void *v58[2];
  char v59;
  char v60;
  void *v61;
  char v62;
  void *v63;
  char v64;
  char v65;
  char v66;
  __int128 v67;
  __int128 v68;
  void *v69;
  char v70;
  __int128 v71;
  void *v72;
  void *v73;
  __int128 v74;
  void *v75;
  char v76;
  char v77;
  void *__p[2];
  unsigned __int8 v79;
  char v80;
  void *v81;
  char v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  void *v87;
  char v88;
  __int128 v89;
  void *v90;
  void *v91[4];
  int v92;
  uint64_t v93[19];
  std::__fs::filesystem::path v94[17];
  uint64_t v95[19];
  __int128 v96;
  __int128 v97;
  void *v98;
  char v99;
  __int128 v100;
  void *v101;
  void *v102;
  __int128 v103;
  void *v104;
  char v105;
  char v106;
  char v107;
  uint64_t v108;

  v108 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD **)a2;
  v4 = *(std::__shared_weak_count **)(a2 + 8);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  sub_2394988CC((uint64_t)v52);
  v5 = v53[0];
  *(_QWORD *)((char *)&v53[3] + *(_QWORD *)(v53[0] - 24)) = 8;
  v6 = (const std::ios_base *)((char *)v53 + *(_QWORD *)(v5 - 24));
  if (v6[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v6);
    v7 = std::locale::use_facet((const std::locale *)v94, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)v94);
  }
  v6[1].__fmtflags_ = 48;
  v8 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v8, (uint64_t)"_normal", 7);
  std::stringbuf::str();
  v9 = std::string::append((std::string *)&v85, ".tiff");
  v10 = v9->__r_.__value_.__r.__words[0];
  *(_QWORD *)&v96 = v9->__r_.__value_.__l.__size_;
  *(_QWORD *)((char *)&v96 + 7) = *(std::string::size_type *)((char *)&v9->__r_.__value_.__r.__words[1] + 7);
  v11 = HIBYTE(v9->__r_.__value_.__r.__words[2]);
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&v94[0].__pn_.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)&v96 + 7);
  v94[0].__pn_.__r_.__value_.__r.__words[0] = v10;
  v94[0].__pn_.__r_.__value_.__l.__size_ = v96;
  *((_BYTE *)&v94[0].__pn_.__r_.__value_.__s + 23) = v11;
  sub_239498A04(v94, a1 + 8, &v51);
  if (SHIBYTE(v94[0].__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v94[0].__pn_.__r_.__value_.__l.__data_);
    if ((SBYTE7(v86) & 0x80000000) == 0)
      goto LABEL_5;
  }
  else if ((SBYTE7(v86) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete((void *)v85);
LABEL_5:
  if (sub_239B207F0(*(_QWORD *)(a1 + 32), (uint64_t)&v51))
    goto LABEL_75;
  if (SHIBYTE(v51.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&__dst, v51.__pn_.__r_.__value_.__l.__data_, v51.__pn_.__r_.__value_.__l.__size_);
  else
    __dst = v51;
  sub_2395ACAA8((uint64_t)&__dst, (char *)v35);
  *(_OWORD *)v37 = *(_OWORD *)v35;
  v38 = v36;
  v35[1] = 0;
  v36 = 0;
  v35[0] = 0;
  v32 = *(_OWORD *)(a1 + 40);
  v33 = *(_QWORD *)(a1 + 56);
  v12 = MEMORY[0x24BEDB840];
  v13 = MEMORY[0x24BEDB840] + 64;
  v14 = (std::string::size_type *)MEMORY[0x24BEDB7E8];
  v15 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v16 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v95[0] = MEMORY[0x24BEDB840] + 64;
  v94[0].__pn_.__r_.__value_.__r.__words[0] = v15;
  *(std::string::size_type *)((char *)v94[0].__pn_.__r_.__value_.__r.__words + *(_QWORD *)(v15 - 24)) = v16;
  v17 = (std::ios_base *)((char *)v94 + *(_QWORD *)(v94[0].__pn_.__r_.__value_.__r.__words[0] - 24));
  std::ios_base::init(v17, &v94[0].__pn_.__r_.__value_.__r.__words[1]);
  v17[1].__vftable = 0;
  v17[1].__fmtflags_ = -1;
  v94[0].__pn_.__r_.__value_.__r.__words[0] = v12 + 24;
  v95[0] = v13;
  MEMORY[0x23B83DC80](&v94[0].__pn_.__r_.__value_.__r.__words[1]);
  std::ofstream::open();
  if ((v94[1].__pn_.__r_.__value_.__s.__data_[*(_QWORD *)(v94[0].__pn_.__r_.__value_.__r.__words[0] - 24) + 8] & 5) != 0)
  {
    sub_239618F08(&v96, "Failure during saving image file");
    LOBYTE(v104) = 1;
    sub_239616578(5u, &v96, (uint64_t)&v85);
    v39 = v85;
    LOBYTE(v40) = 0;
    v49 = 0;
    if (LOBYTE(v93[0]))
    {
      v42 = 0;
      if (v88)
      {
        v40 = v86;
        v41 = v87;
        v87 = 0;
        v86 = 0uLL;
        v42 = 1;
      }
      LOBYTE(v43) = 0;
      v48 = 0;
      if ((_BYTE)v92)
      {
        v44 = v90;
        v43 = v89;
        v89 = 0uLL;
        v45 = v91[0];
        *(_OWORD *)v46 = *(_OWORD *)&v91[1];
        v47 = v91[3];
        v90 = 0;
        memset(&v91[1], 0, 24);
        v48 = 1;
      }
      v49 = 1;
      v50 = 0;
      if (v88 && SHIBYTE(v87) < 0)
        operator delete((void *)v86);
      if (!(_BYTE)v104)
        goto LABEL_70;
    }
    else
    {
      v50 = 0;
      if (!(_BYTE)v104)
        goto LABEL_70;
    }
    if (BYTE8(v103))
    {
      if (SBYTE7(v103) < 0)
        operator delete(v101);
      if (SBYTE7(v100) < 0)
        operator delete(v98);
    }
    if (BYTE8(v97) && SBYTE7(v97) < 0)
      operator delete((void *)v96);
    goto LABEL_70;
  }
  v31 = v4;
  HIBYTE(v56[2]) = 18;
  strcpy((char *)v56, "CorePhotogrammetry");
  sub_2395AC84C(v56, v57);
  v18 = MEMORY[0x24BEDB870];
  v19 = MEMORY[0x24BEDB870] + 64;
  v20 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
  v21 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  v93[0] = MEMORY[0x24BEDB870] + 64;
  *(_QWORD *)&v85 = v20;
  *(_QWORD *)((char *)&v85 + *(_QWORD *)(v20 - 24)) = v21;
  v22 = (std::ios_base *)((char *)&v85 + *(_QWORD *)(v85 - 24));
  std::ios_base::init(v22, (char *)&v85 + 8);
  v22[1].__vftable = 0;
  v22[1].__fmtflags_ = -1;
  *(_QWORD *)&v85 = v18 + 24;
  v93[0] = v19;
  std::streambuf::basic_streambuf();
  v23 = MEMORY[0x24BEDB848];
  *((_QWORD *)&v85 + 1) = MEMORY[0x24BEDB848] + 16;
  memset(v91, 0, sizeof(v91));
  v92 = 16;
  v83 = v32;
  v84 = v33;
  sub_23961E5B4(v3, &v85, 5, (uint64_t)&v96);
  v14 = (std::string::size_type *)MEMORY[0x24BEDB7E8];
  if (v107)
  {
    std::stringbuf::str();
    sub_2395ABE70((const void **)&v81, (uint64_t)v57, (uint64_t)__p);
    if (v80)
    {
      if ((v79 & 0x80u) == 0)
        v24 = __p;
      else
        v24 = (void **)__p[0];
      if ((v79 & 0x80u) == 0)
        v25 = v79;
      else
        v25 = (uint64_t)__p[1];
      sub_239458500(v94, (uint64_t)v24, v25);
      v50 = 1;
    }
    else
    {
      sub_239618F08(v58, "Failure during saving image file");
      v66 = 1;
      sub_239616578(5u, (__int128 *)v58, (uint64_t)&v67);
      v39 = v67;
      LOBYTE(v40) = 0;
      v49 = 0;
      if (v77)
      {
        v42 = 0;
        if (v70)
        {
          v40 = v68;
          v41 = v69;
          v69 = 0;
          v68 = 0uLL;
          v42 = 1;
        }
        LOBYTE(v43) = 0;
        v48 = 0;
        if (v76)
        {
          v44 = v72;
          v43 = v71;
          v71 = 0uLL;
          v45 = v73;
          *(_OWORD *)v46 = v74;
          v47 = v75;
          v72 = 0;
          v74 = 0uLL;
          v75 = 0;
          v48 = 1;
        }
        v49 = 1;
        v50 = 0;
        if (v70 && SHIBYTE(v69) < 0)
          operator delete((void *)v68);
      }
      else
      {
        v50 = 0;
      }
      if (v66)
      {
        if (v65)
        {
          if (v64 < 0)
            operator delete(v63);
          if (v62 < 0)
            operator delete(v61);
        }
        if (v60 && v59 < 0)
          operator delete(v58[0]);
      }
    }
    if (v80 && (char)v79 < 0)
      operator delete(__p[0]);
    if (v82 < 0)
      operator delete(v81);
    if (v107 || !v106)
      goto LABEL_62;
    if (!v105)
      goto LABEL_59;
LABEL_55:
    if (SHIBYTE(v104) < 0)
      operator delete((void *)v103);
    if (SHIBYTE(v101) < 0)
      operator delete((void *)v100);
LABEL_59:
    if (v99 && SHIBYTE(v98) < 0)
      operator delete((void *)v97);
    goto LABEL_62;
  }
  v50 = 0;
  v39 = v96;
  LOBYTE(v40) = 0;
  v49 = 0;
  if (v106)
  {
    v42 = 0;
    if (v99)
    {
      v40 = v97;
      v41 = v98;
      v98 = 0;
      v97 = 0uLL;
      v42 = 1;
    }
    LOBYTE(v43) = 0;
    v48 = 0;
    if (v105)
    {
      v44 = v101;
      v43 = v100;
      v100 = 0uLL;
      v45 = v102;
      *(_OWORD *)v46 = v103;
      v47 = v104;
      v101 = 0;
      v103 = 0uLL;
      v104 = 0;
      v48 = 1;
    }
    v49 = 1;
    if (!v105)
      goto LABEL_59;
    goto LABEL_55;
  }
LABEL_62:
  *(_QWORD *)&v85 = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)&v85 + *(_QWORD *)(v85 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  *((_QWORD *)&v85 + 1) = v23 + 16;
  if (SHIBYTE(v91[2]) < 0)
    operator delete(v91[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v93);
  v4 = v31;
  if (v57[0])
  {
    v57[1] = v57[0];
    operator delete(v57[0]);
  }
  if (SHIBYTE(v56[2]) < 0)
    operator delete((void *)v56[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v94 + *(_QWORD *)(v94[0].__pn_.__r_.__value_.__r.__words[0] - 24)), *(_DWORD *)((char *)&v94[1].__pn_.__r_.__value_.__r.__words[1]+ *(_QWORD *)(v94[0].__pn_.__r_.__value_.__r.__words[0] - 24)) | 4);
LABEL_70:
  v94[0].__pn_.__r_.__value_.__r.__words[0] = *v14;
  *(std::string::size_type *)((char *)v94[0].__pn_.__r_.__value_.__r.__words
                            + *(_QWORD *)(v94[0].__pn_.__r_.__value_.__r.__words[0] - 24)) = v14[3];
  MEMORY[0x23B83DC8C](&v94[0].__pn_.__r_.__value_.__r.__words[1]);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v95);
  if (SHIBYTE(v38) < 0)
  {
    operator delete(v37[0]);
    if ((SHIBYTE(v36) & 0x80000000) == 0)
    {
LABEL_72:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_73;
LABEL_87:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v50)
        goto LABEL_74;
      goto LABEL_88;
    }
  }
  else if ((SHIBYTE(v36) & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(v35[0]);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_87;
LABEL_73:
  if (v50)
  {
LABEL_74:
    sub_239B20A74(*(_QWORD *)(a1 + 32), (uint64_t)&v51);
    if (!v50 && v49)
    {
      if (v48)
      {
        if (SHIBYTE(v47) < 0)
          operator delete(v46[0]);
        if (SHIBYTE(v44) < 0)
          operator delete((void *)v43);
      }
      if (v42 && SHIBYTE(v41) < 0)
        operator delete((void *)v40);
    }
LABEL_75:
    v26 = 1;
    if ((SHIBYTE(v51.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_77;
    goto LABEL_76;
  }
LABEL_88:
  if (v49)
  {
    if (v48)
    {
      if (SHIBYTE(v47) < 0)
        operator delete(v46[0]);
      if (SHIBYTE(v44) < 0)
        operator delete((void *)v43);
    }
    if (v42 && SHIBYTE(v41) < 0)
      operator delete((void *)v40);
  }
  v26 = 0;
  if (SHIBYTE(v51.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_76:
    operator delete(v51.__pn_.__r_.__value_.__l.__data_);
LABEL_77:
  v52[0] = *MEMORY[0x24BEDB7F0];
  v27 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v52 + *(_QWORD *)(v52[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v53[0] = v27;
  v53[1] = MEMORY[0x24BEDB848] + 16;
  if (v54 < 0)
    operator delete((void *)v53[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v55);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v29 = __ldaxr(p_shared_owners);
    while (__stlxr(v29 - 1, p_shared_owners));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v26;
}

void sub_239B95748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a69;
  char a72;
  uint64_t a73;
  uint64_t v73;
  void *v75;
  uint64_t v76;
  unint64_t *p_shared_owners;
  unint64_t v78;

  sub_239523188((uint64_t)&STACK[0x278]);
  if (LOBYTE(STACK[0x370]) && SLOBYTE(STACK[0x36F]) < 0)
    operator delete((void *)STACK[0x358]);
  if (SLOBYTE(STACK[0x38F]) < 0)
    operator delete((void *)STACK[0x378]);
  sub_239522F50(v73 - 232);
  sub_239A90B68((uint64_t)&STACK[0x3A8]);
  v75 = (void *)STACK[0x260];
  if (STACK[0x260])
  {
    STACK[0x268] = (unint64_t)v75;
    operator delete(v75);
  }
  if (SLOBYTE(STACK[0x257]) < 0)
    operator delete((void *)STACK[0x240]);
  sub_23955C978(&STACK[0x4B0]);
  if (a34 < 0)
  {
    operator delete(a29);
    if ((a28 & 0x80000000) == 0)
      goto LABEL_12;
  }
  else if ((a28 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a22 & 0x80000000) == 0)
    {
LABEL_17:
      if (a57 < 0)
        operator delete(a52);
      a58 = *MEMORY[0x24BEDB7F0];
      v76 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      *(uint64_t *)((char *)&a58 + *(_QWORD *)(a58 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      a60 = v76;
      a61 = MEMORY[0x24BEDB848] + 16;
      if (a72 < 0)
        operator delete(a69);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x23B83E250](&a73);
      if (a11)
      {
        p_shared_owners = (unint64_t *)&a11->__shared_owners_;
        do
          v78 = __ldaxr(p_shared_owners);
        while (__stlxr(v78 - 1, p_shared_owners));
        if (!v78)
        {
          ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
          std::__shared_weak_count::__release_weak(a11);
        }
      }
      _Unwind_Resume(a1);
    }
LABEL_16:
    operator delete(a17);
    goto LABEL_17;
  }
  operator delete(a23);
  if ((a22 & 0x80000000) == 0)
    goto LABEL_17;
  goto LABEL_16;
}

uint64_t sub_239B95A4C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA4D0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B95A88(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA4D0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B95AD4(uint64_t a1)
{
  char *v2;
  _BYTE *v3;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = off_250AFA4D0;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v2 + 6) = *(_QWORD *)(a1 + 48);
  return v2;
}

void sub_239B95B44(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B95B58(uint64_t a1, __n128 *a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __n128 result;

  a2->n128_u64[0] = (unint64_t)off_250AFA4D0;
  v4 = &a2->n128_u8[8];
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    a2[1].n128_u64[1] = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  a2[3].n128_u64[0] = *(_QWORD *)(a1 + 48);
  a2[2] = result;
  return result;
}

void sub_239B95BC0(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B95BD4(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B95C04@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  const std::ios_base *v5;
  const std::locale::facet *v6;
  _QWORD *v7;
  std::string *v8;
  std::string::size_type v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  std::string::size_type *v13;
  std::string::size_type v14;
  std::string::size_type v15;
  std::ios_base *v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  std::__fs::filesystem::path __dst;
  void *v30[2];
  uint64_t v31;
  void *v32[2];
  uint64_t v33;
  std::__fs::filesystem::path v34;
  _QWORD v35[2];
  _QWORD v36[11];
  char v37;
  uint64_t v38;
  const void *v39[4];
  void *v40[3];
  void *v41[2];
  unsigned __int8 v42;
  char v43;
  void *v44;
  char v45;
  void *v46;
  char v47;
  char v48;
  char v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  void *__p[2];
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  std::string v65;
  _BYTE v66[40];
  _BYTE v67[32];
  _BYTE v68[32];
  __int128 v69;
  uint64_t v70;
  __int16 v71;
  char v72;
  std::__fs::filesystem::path v73[17];
  _QWORD v74[20];

  v74[19] = *MEMORY[0x24BDAC8D0];
  sub_2394988CC((uint64_t)v35);
  v4 = v36[0];
  *(_QWORD *)((char *)&v36[3] + *(_QWORD *)(v36[0] - 24)) = 8;
  v5 = (const std::ios_base *)((char *)v36 + *(_QWORD *)(v4 - 24));
  if (v5[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v5);
    v6 = std::locale::use_facet((const std::locale *)v73, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale((std::locale *)v73);
  }
  v5[1].__fmtflags_ = 48;
  v7 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v7, (uint64_t)"_normal", 7);
  std::stringbuf::str();
  v8 = std::string::append((std::string *)&v52, ".tiff");
  v9 = v8->__r_.__value_.__r.__words[0];
  *(_QWORD *)v66 = v8->__r_.__value_.__l.__size_;
  *(_QWORD *)&v66[7] = *(std::string::size_type *)((char *)&v8->__r_.__value_.__r.__words[1] + 7);
  v10 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&v73[0].__pn_.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)&v66[7];
  v73[0].__pn_.__r_.__value_.__r.__words[0] = v9;
  v73[0].__pn_.__r_.__value_.__l.__size_ = *(_QWORD *)v66;
  *((_BYTE *)&v73[0].__pn_.__r_.__value_.__s + 23) = v10;
  sub_239498A04(v73, a1 + 8, &v34);
  if ((SHIBYTE(v73[0].__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SBYTE7(v53) & 0x80000000) == 0)
      goto LABEL_5;
LABEL_8:
    operator delete((void *)v52);
    if ((SHIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_9;
  }
  operator delete(v73[0].__pn_.__r_.__value_.__l.__data_);
  if (SBYTE7(v53) < 0)
    goto LABEL_8;
LABEL_5:
  if ((SHIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_6:
    __dst = v34;
    goto LABEL_10;
  }
LABEL_9:
  sub_23941A7F8(&__dst, v34.__pn_.__r_.__value_.__l.__data_, v34.__pn_.__r_.__value_.__l.__size_);
LABEL_10:
  sub_2395ACAA8((uint64_t)&__dst, (char *)v30);
  *(_OWORD *)v32 = *(_OWORD *)v30;
  v33 = v31;
  v30[1] = 0;
  v31 = 0;
  v30[0] = 0;
  v27 = *(_OWORD *)(a1 + 32);
  v28 = *(_QWORD *)(a1 + 48);
  v11 = MEMORY[0x24BEDB838];
  v12 = MEMORY[0x24BEDB838] + 64;
  v13 = (std::string::size_type *)MEMORY[0x24BEDB7E0];
  v14 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v15 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v74[0] = MEMORY[0x24BEDB838] + 64;
  v73[0].__pn_.__r_.__value_.__r.__words[0] = v14;
  *(std::string::size_type *)((char *)v73[0].__pn_.__r_.__value_.__r.__words + *(_QWORD *)(v14 - 24)) = v15;
  v73[0].__pn_.__r_.__value_.__l.__size_ = 0;
  v16 = (std::ios_base *)((char *)v73 + *(_QWORD *)(v73[0].__pn_.__r_.__value_.__r.__words[0] - 24));
  std::ios_base::init(v16, &v73[0].__pn_.__r_.__value_.__r.__words[2]);
  v16[1].__vftable = 0;
  v16[1].__fmtflags_ = -1;
  v73[0].__pn_.__r_.__value_.__r.__words[0] = v11 + 24;
  v74[0] = v12;
  MEMORY[0x23B83DC80](&v73[0].__pn_.__r_.__value_.__r.__words[2]);
  std::ifstream::open();
  if ((v73[1].__pn_.__r_.__value_.__s.__data_[*(_QWORD *)(v73[0].__pn_.__r_.__value_.__r.__words[0] - 24) + 8] & 5) != 0)
  {
    sub_239618F08(v41, "Failure during loading image file");
    v49 = 1;
    sub_239616578(5u, (__int128 *)v41, (uint64_t)&v52);
    *(_OWORD *)v66 = v52;
    v66[16] = 0;
    BYTE8(v69) = 0;
    if (v63)
    {
      v67[0] = 0;
      if (v55)
      {
        *(_OWORD *)&v66[16] = v53;
        *(_QWORD *)&v66[32] = v54;
        v54 = 0;
        v53 = 0uLL;
        v67[0] = 1;
      }
      v67[8] = 0;
      LOBYTE(v69) = 0;
      if (v61)
      {
        *(_QWORD *)&v67[24] = v57;
        *(_OWORD *)&v67[8] = v56;
        v56 = 0uLL;
        *(_QWORD *)v68 = v58;
        *(_OWORD *)&v68[8] = *(_OWORD *)__p;
        *(_QWORD *)&v68[24] = v60;
        v57 = 0;
        __p[0] = 0;
        __p[1] = 0;
        v60 = 0;
        LOBYTE(v69) = 1;
      }
      BYTE8(v69) = 1;
      v72 = 0;
      if (v55 && SHIBYTE(v54) < 0)
        operator delete((void *)v53);
      if (!v49)
        goto LABEL_47;
    }
    else
    {
      v72 = 0;
      if (!v49)
        goto LABEL_47;
    }
    if (!v48)
      goto LABEL_44;
    if (v47 < 0)
    {
      operator delete(v46);
      if ((v45 & 0x80000000) == 0)
      {
LABEL_44:
        if (!v43)
          goto LABEL_47;
LABEL_45:
        if ((char)v42 < 0)
          operator delete(v41[0]);
        goto LABEL_47;
      }
    }
    else if ((v45 & 0x80000000) == 0)
    {
      goto LABEL_44;
    }
    operator delete(v44);
    if (!v43)
      goto LABEL_47;
    goto LABEL_45;
  }
  HIBYTE(v39[2]) = 18;
  strcpy((char *)v39, "CorePhotogrammetry");
  sub_2395AC84C(v39, v40);
  sub_239A7D600(&v65, *(_QWORD **)((char *)&v73[1].__pn_.__r_.__value_.__r.__words[2]+ *(_QWORD *)(v73[0].__pn_.__r_.__value_.__r.__words[0] - 24)));
  sub_2395AC2E8((const void **)&v65.__r_.__value_.__l.__data_, (uint64_t)v40, (uint64_t)v41);
  sub_2394988CC((uint64_t)&v52);
  if ((v42 & 0x80u) == 0)
    v17 = v41;
  else
    v17 = (void **)v41[0];
  if ((v42 & 0x80u) == 0)
    v18 = v42;
  else
    v18 = (uint64_t)v41[1];
  sub_239458500(&v53, (uint64_t)v17, v18);
  v50 = v27;
  v51 = v28;
  sub_23961E310(&v52, 5, (uint64_t)v66);
  *(_QWORD *)&v52 = *MEMORY[0x24BEDB7F0];
  v19 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)&v52 + *(_QWORD *)(v52 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  *(_QWORD *)&v53 = v19;
  *((_QWORD *)&v53 + 1) = MEMORY[0x24BEDB848] + 16;
  if (v62 < 0)
    operator delete(__p[1]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v64);
  if (v43 && (char)v42 < 0)
    operator delete(v41[0]);
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v65.__r_.__value_.__l.__data_);
  if (v40[0])
  {
    v40[1] = v40[0];
    operator delete(v40[0]);
  }
  if (SHIBYTE(v39[2]) < 0)
    operator delete((void *)v39[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v73 + *(_QWORD *)(v73[0].__pn_.__r_.__value_.__r.__words[0] - 24)), *(_DWORD *)((char *)&v73[1].__pn_.__r_.__value_.__r.__words[1]+ *(_QWORD *)(v73[0].__pn_.__r_.__value_.__r.__words[0] - 24)) | 4);
LABEL_47:
  v73[0].__pn_.__r_.__value_.__r.__words[0] = *v13;
  *(std::string::size_type *)((char *)v73[0].__pn_.__r_.__value_.__r.__words
                            + *(_QWORD *)(v73[0].__pn_.__r_.__value_.__r.__words[0] - 24)) = v13[3];
  MEMORY[0x23B83DC8C](&v73[0].__pn_.__r_.__value_.__r.__words[2]);
  std::istream::~istream();
  MEMORY[0x23B83E250](v74);
  if (SHIBYTE(v33) < 0)
  {
    operator delete(v32[0]);
    if ((SHIBYTE(v31) & 0x80000000) == 0)
    {
LABEL_49:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_50;
LABEL_54:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v72)
        goto LABEL_51;
      goto LABEL_55;
    }
  }
  else if ((SHIBYTE(v31) & 0x80000000) == 0)
  {
    goto LABEL_49;
  }
  operator delete(v30[0]);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_54;
LABEL_50:
  if (v72)
  {
LABEL_51:
    v20 = operator new(0xA0uLL);
    v20[1] = 0;
    v20[2] = 0;
    *v20 = &off_250B01B00;
    v20[3] = &off_250ADDC30;
    v21 = *(_OWORD *)&v66[8];
    *(_QWORD *)&v66[8] = 0;
    *(_QWORD *)&v66[16] = 0;
    v22 = *(_OWORD *)&v68[16];
    *((_OWORD *)v20 + 6) = *(_OWORD *)v68;
    *((_OWORD *)v20 + 7) = v22;
    *((_OWORD *)v20 + 8) = v69;
    v20[18] = v70;
    v23 = *(_OWORD *)&v66[24];
    *((_OWORD *)v20 + 2) = v21;
    *((_OWORD *)v20 + 3) = v23;
    v24 = *(_OWORD *)&v67[16];
    *((_OWORD *)v20 + 4) = *(_OWORD *)v67;
    *((_OWORD *)v20 + 5) = v24;
    *((_WORD *)v20 + 76) = v71;
    *a2 = v20 + 3;
    a2[1] = v20;
    goto LABEL_56;
  }
LABEL_55:
  *a2 = 0;
  a2[1] = 0;
LABEL_56:
  sub_239B96550((uint64_t)v66);
  if (SHIBYTE(v34.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v34.__pn_.__r_.__value_.__l.__data_);
  v35[0] = *MEMORY[0x24BEDB7F0];
  v25 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v35 + *(_QWORD *)(v35[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v36[0] = v25;
  v36[1] = MEMORY[0x24BEDB848] + 16;
  if (v37 < 0)
    operator delete((void *)v36[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v38);
}

void sub_239B96318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a72;
  char a73;
  void *a74;
  uint64_t a75;
  void *__p;
  char a77;
  char a78;
  void *v79;
  uint64_t v80;

  if (a78 && a77 < 0)
    operator delete(__p);
  if (SLOBYTE(STACK[0x38F]) < 0)
  {
    operator delete((void *)STACK[0x378]);
    v79 = a74;
    if (a74)
      goto LABEL_6;
  }
  else
  {
    v79 = a74;
    if (a74)
    {
LABEL_6:
      a75 = (uint64_t)v79;
      operator delete(v79);
      if ((a73 & 0x80000000) == 0)
        goto LABEL_11;
LABEL_10:
      operator delete(a72);
LABEL_11:
      sub_23955CB90(&STACK[0x428]);
      if (a30 < 0)
      {
        operator delete(a25);
        if ((a24 & 0x80000000) == 0)
          goto LABEL_13;
      }
      else if ((a24 & 0x80000000) == 0)
      {
LABEL_13:
        if (a18 < 0)
          goto LABEL_14;
        goto LABEL_18;
      }
      operator delete(a19);
      if (a18 < 0)
      {
LABEL_14:
        operator delete(a13);
        if ((a37 & 0x80000000) == 0)
          goto LABEL_20;
LABEL_19:
        operator delete(a32);
LABEL_20:
        a38 = *MEMORY[0x24BEDB7F0];
        v80 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        *(uint64_t *)((char *)&a38 + *(_QWORD *)(a38 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        a40 = v80;
        a41 = MEMORY[0x24BEDB848] + 16;
        if (a54 < 0)
          operator delete(a49);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](&a57);
        _Unwind_Resume(a1);
      }
LABEL_18:
      if ((a37 & 0x80000000) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
  }
  if ((a73 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

uint64_t sub_239B96550(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 136))
  {
    sub_239416DA0(a1 + 8);
    nullsub_4(a1);
    return a1;
  }
  if (!*(_BYTE *)(a1 + 112))
    return a1;
  if (!*(_BYTE *)(a1 + 104))
    goto LABEL_8;
  if (*(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
LABEL_8:
      if (!*(_BYTE *)(a1 + 40))
        return a1;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  operator delete(*(void **)(a1 + 48));
  if (!*(_BYTE *)(a1 + 40))
    return a1;
LABEL_9:
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_239B965E8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250B01B00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B965F8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250B01B00;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

double sub_239B96628(uint64_t a1)
{
  uint64_t v1;
  double result;

  v1 = a1 + 24;
  sub_239416DA0(a1 + 32);
  *(_QWORD *)&result = nullsub_4(v1).n128_u64[0];
  return result;
}

uint64_t sub_239B96654(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9F50;
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return a1;
LABEL_5:
    operator delete(*(void **)(a1 + 16));
    return a1;
  }
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_5;
  return a1;
}

void sub_239B966AC(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9F50;
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
LABEL_6:
      JUMPOUT(0x23B83E31CLL);
  }
  else if ((*(char *)(a1 + 39) & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 16));
  goto LABEL_6;
}

_QWORD *sub_239B96714(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v2 = operator new(0x80uLL);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 8);
  *v2 = off_250AF9F50;
  v2[1] = v4;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8((_BYTE *)v2 + 16, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *((_OWORD *)v2 + 1) = *(_OWORD *)(a1 + 16);
    v2[4] = *(_QWORD *)(a1 + 32);
  }
  *(_OWORD *)(v3 + 5) = *(_OWORD *)(a1 + 40);
  v3[7] = *(_QWORD *)(a1 + 56);
  v5 = v3 + 8;
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)(a1 + 64);
    v3[10] = *(_QWORD *)(a1 + 80);
  }
  *(_OWORD *)(v3 + 11) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(v3 + 13) = *(_OWORD *)(a1 + 104);
  v3[15] = *(_QWORD *)(a1 + 120);
  return v3;
}

void sub_239B967DC(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[39] < 0)
    operator delete(*v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B96808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  __int128 v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;
  __n128 result;

  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a2 = off_250AF9F50;
  *(_QWORD *)(a2 + 8) = v4;
  v5 = (_BYTE *)(a2 + 16);
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    v6 = *(_OWORD *)(a1 + 16);
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
    *(_OWORD *)v5 = v6;
  }
  v7 = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v7;
  v8 = (_BYTE *)(a2 + 64);
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(v8, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    v9 = *(_OWORD *)(a1 + 64);
    *(_QWORD *)(a2 + 80) = *(_QWORD *)(a1 + 80);
    *(_OWORD *)v8 = v9;
  }
  result = *(__n128 *)(a1 + 88);
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a1 + 104);
  *(__n128 *)(a2 + 88) = result;
  *(_QWORD *)(a2 + 120) = *(_QWORD *)(a1 + 120);
  return result;
}

void sub_239B968C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 39) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_239B968E0(uint64_t a1)
{
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(*(void **)(a1 + 16));
    return;
  }
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 39) < 0)
    goto LABEL_5;
}

void sub_239B9692C(void **__p)
{
  if (*((char *)__p + 87) < 0)
  {
    operator delete(__p[8]);
    if ((*((char *)__p + 39) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_5:
    operator delete(__p[2]);
    goto LABEL_3;
  }
  if (*((char *)__p + 39) < 0)
    goto LABEL_5;
LABEL_3:
  operator delete(__p);
}

void sub_239B96978(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _BYTE *v13;
  char *v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  void *__p[2];
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  void *__dst[2];
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  _QWORD *v41;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(v4 + 56);
  v7 = *(std::__shared_weak_count **)(v4 + 64);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v29 = 0;
    v30 = v6;
    v31 = v7;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v29 = 0;
    v30 = v6;
    v31 = 0;
  }
  v28 = v5;
  v29 = (int)std::thread::hardware_concurrency();
  v11 = operator new(0x1B0uLL);
  v11[1] = 0;
  v11[2] = 0;
  *v11 = &off_250AF9F98;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(__dst, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 16);
    v37 = *(_QWORD *)(a1 + 32);
  }
  v38 = *(_OWORD *)(a1 + 40);
  v39 = *(_QWORD *)(a1 + 56);
  v43 = 0;
  v12 = (char *)operator new(0x38uLL);
  *(_QWORD *)v12 = off_250AF9FD0;
  v13 = v12 + 8;
  if (SHIBYTE(v37) < 0)
  {
    sub_23941A7F8(v13, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)__dst;
    *((_QWORD *)v12 + 3) = v37;
  }
  *((_OWORD *)v12 + 2) = v38;
  *((_QWORD *)v12 + 6) = v39;
  v43 = v12;
  if (*(char *)(a1 + 87) < 0)
  {
    sub_23941A7F8(__p, *(void **)(a1 + 64), *(_QWORD *)(a1 + 72));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a1 + 64);
    v33 = *(_QWORD *)(a1 + 80);
  }
  v34 = *(_OWORD *)(a1 + 88);
  v35 = *(_OWORD *)(a1 + 104);
  v41 = 0;
  v14 = (char *)operator new(0x40uLL);
  *(_QWORD *)v14 = off_250AFA018;
  v15 = v14 + 8;
  if (SHIBYTE(v33) < 0)
  {
    sub_23941A7F8(v15, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)__p;
    *((_QWORD *)v14 + 3) = v33;
  }
  v16 = v35;
  *((_OWORD *)v14 + 2) = v34;
  *((_OWORD *)v14 + 3) = v16;
  v41 = v14;
  sub_239B83BA4((uint64_t)(v11 + 3), &v28, v42, v40);
  v19 = v41;
  if (v41 == v40)
  {
    v20 = 4;
    v19 = v40;
  }
  else
  {
    if (!v41)
      goto LABEL_25;
    v20 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v19 + 8 * v20))(v19, v17, v18);
LABEL_25:
  if (SHIBYTE(v33) < 0)
    operator delete(__p[0]);
  v21 = v43;
  if (v43 == v42)
  {
    v22 = 4;
    v21 = v42;
  }
  else
  {
    if (!v43)
      goto LABEL_32;
    v22 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v21 + 8 * v22))(v21, v17, v18);
LABEL_32:
  if (SHIBYTE(v37) < 0)
    operator delete(__dst[0]);
  *a2 = v11 + 3;
  a2[1] = v11;
  v23 = v31;
  if (v31)
  {
    v24 = (unint64_t *)&v31->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  if (v7)
  {
    v26 = (unint64_t *)&v7->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_239B96C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;

  operator delete(v32);
  if (a18 < 0)
    operator delete(__p);
  v35 = *(_QWORD **)(v33 - 80);
  if (v35 == (_QWORD *)(v33 - 104))
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 104);
  }
  else
  {
    if (!v35)
      goto LABEL_8;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_8:
  if (a29 < 0)
    operator delete(a24);
  std::__shared_weak_count::~__shared_weak_count(v30);
  operator delete(v37);
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v39 = __ldaxr(p_shared_owners);
    while (__stlxr(v39 - 1, p_shared_owners));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  if (v29)
  {
    v40 = (unint64_t *)&v29->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B96E14(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA018;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B96E50(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AFA018;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B96E9C(uint64_t a1)
{
  char *v2;
  _BYTE *v3;
  __int128 v4;

  v2 = (char *)operator new(0x40uLL);
  *(_QWORD *)v2 = off_250AFA018;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  v4 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v2 + 3) = v4;
  return v2;
}

void sub_239B96F04(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B96F18(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  *(_QWORD *)a2 = off_250AFA018;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v7;
  return result;
}

void sub_239B96F78(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B96F8C(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B96FBC(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  _QWORD *v4;
  uint64_t v5;
  const std::ios_base *v6;
  const std::locale::facet *v7;
  _QWORD *v8;
  std::string *v9;
  std::string::size_type v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  __int128 v17;
  uint64_t v18;
  std::__fs::filesystem::path __dst;
  std::__fs::filesystem::path v20;
  char v21;
  char v22;
  void *v23;
  char v24;
  void *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  std::string v30;
  std::__fs::filesystem::path __p;
  _QWORD v32[2];
  _QWORD v33[11];
  char v34;
  uint64_t v35;
  std::string v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD **)a2;
  v3 = *(std::__shared_weak_count **)(a2 + 8);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  sub_2394988CC((uint64_t)v32);
  v5 = v33[0];
  *(_QWORD *)((char *)&v33[3] + *(_QWORD *)(v33[0] - 24)) = 8;
  v6 = (const std::ios_base *)((char *)v33 + *(_QWORD *)(v5 - 24));
  if (v6[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v6);
    v7 = std::locale::use_facet((const std::locale *)&v20, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)&v20);
  }
  v6[1].__fmtflags_ = 48;
  v8 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v8, (uint64_t)"_init", 5);
  std::stringbuf::str();
  v9 = std::string::append(&v30, ".tiff");
  v10 = v9->__r_.__value_.__r.__words[0];
  v36.__r_.__value_.__r.__words[0] = v9->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v9->__r_.__value_.__r.__words[1] + 7);
  v11 = HIBYTE(v9->__r_.__value_.__r.__words[2]);
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&v20.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v36.__r_.__value_.__r.__words + 7);
  v20.__pn_.__r_.__value_.__r.__words[0] = v10;
  v20.__pn_.__r_.__value_.__l.__size_ = v36.__r_.__value_.__r.__words[0];
  *((_BYTE *)&v20.__pn_.__r_.__value_.__s + 23) = v11;
  sub_239498A04(&v20, a1 + 8, &__p);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_5;
  }
  else if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v30.__r_.__value_.__l.__data_);
LABEL_5:
  if (sub_239B207F0(*(_QWORD *)(a1 + 32), (uint64_t)&__p))
    goto LABEL_16;
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&__dst, __p.__pn_.__r_.__value_.__l.__data_, __p.__pn_.__r_.__value_.__l.__size_);
  else
    __dst = __p;
  sub_2395ACAA8((uint64_t)&__dst, (char *)&v36);
  v30 = v36;
  memset(&v36, 0, sizeof(v36));
  v17 = *(_OWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 56);
  sub_239B91A2C((uint64_t)&v20, v4, (uint64_t)&v30, &v17);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v30.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_14;
LABEL_28:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v29)
        goto LABEL_15;
      goto LABEL_29;
    }
  }
  else if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(v36.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_28;
LABEL_14:
  if (v29)
  {
LABEL_15:
    sub_239B20A74(*(_QWORD *)(a1 + 32), (uint64_t)&__p);
    if (!v29 && v28)
    {
      if (v27)
      {
        if (v26 < 0)
          operator delete(v25);
        if (v24 < 0)
          operator delete(v23);
      }
      if (v22 && v21 < 0)
        operator delete((void *)v20.__pn_.__r_.__value_.__r.__words[2]);
    }
LABEL_16:
    v12 = 1;
    if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_17;
  }
LABEL_29:
  if (v28)
  {
    if (v27)
    {
      if (v26 < 0)
        operator delete(v25);
      if (v24 < 0)
        operator delete(v23);
    }
    if (v22 && v21 < 0)
      operator delete((void *)v20.__pn_.__r_.__value_.__r.__words[2]);
  }
  v12 = 0;
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_17:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
LABEL_18:
  v32[0] = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v32 + *(_QWORD *)(v32[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v33[0] = v13;
  v33[1] = MEMORY[0x24BEDB848] + 16;
  if (v34 < 0)
    operator delete((void *)v33[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v35);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v12;
}

void sub_239B97388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, std::locale a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  std::__shared_weak_count *v62;
  uint64_t v64;
  unint64_t *p_shared_owners;
  unint64_t v66;

  if (a42 < 0)
    operator delete(__p);
  a43 = *MEMORY[0x24BEDB7F0];
  v64 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a43 + *(_QWORD *)(a43 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a45 = v64;
  a46 = MEMORY[0x24BEDB848] + 16;
  if (a59 < 0)
    operator delete(a54);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a62);
  if (v62)
  {
    p_shared_owners = (unint64_t *)&v62->__shared_owners_;
    do
      v66 = __ldaxr(p_shared_owners);
    while (__stlxr(v66 - 1, p_shared_owners));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
      std::__shared_weak_count::__release_weak(v62);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B97540(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9FD0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B9757C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9FD0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B975C8(uint64_t a1)
{
  char *v2;
  _BYTE *v3;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = off_250AF9FD0;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v2 + 6) = *(_QWORD *)(a1 + 48);
  return v2;
}

void sub_239B97638(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B9764C(uint64_t a1, __n128 *a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __n128 result;

  a2->n128_u64[0] = (unint64_t)off_250AF9FD0;
  v4 = &a2->n128_u8[8];
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    a2[1].n128_u64[1] = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  a2[3].n128_u64[0] = *(_QWORD *)(a1 + 48);
  a2[2] = result;
  return result;
}

void sub_239B976B4(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B976C8(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B976F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  const std::ios_base *v5;
  const std::locale::facet *v6;
  _QWORD *v7;
  std::string *v8;
  std::string::size_type v9;
  char v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  std::__fs::filesystem::path __p;
  std::__fs::filesystem::path v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int16 v25;
  char v26;
  std::string v27;
  std::__fs::filesystem::path v28;
  _QWORD v29[2];
  _QWORD v30[11];
  char v31;
  uint64_t v32;
  std::string v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  sub_2394988CC((uint64_t)v29);
  v4 = v30[0];
  *(_QWORD *)((char *)&v30[3] + *(_QWORD *)(v30[0] - 24)) = 8;
  v5 = (const std::ios_base *)((char *)v30 + *(_QWORD *)(v4 - 24));
  if (v5[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v5);
    v6 = std::locale::use_facet((const std::locale *)&v20, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale((std::locale *)&v20);
  }
  v5[1].__fmtflags_ = 48;
  v7 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v7, (uint64_t)"_init", 5);
  std::stringbuf::str();
  v8 = std::string::append(&v27, ".tiff");
  v9 = v8->__r_.__value_.__r.__words[0];
  v33.__r_.__value_.__r.__words[0] = v8->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v33.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v8->__r_.__value_.__r.__words[1] + 7);
  v10 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&v20.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v33.__r_.__value_.__r.__words + 7);
  v20.__pn_.__r_.__value_.__r.__words[0] = v9;
  v20.__pn_.__r_.__value_.__l.__size_ = v33.__r_.__value_.__r.__words[0];
  *((_BYTE *)&v20.__pn_.__r_.__value_.__s + 23) = v10;
  sub_239498A04(&v20, a1 + 8, &v28);
  if ((SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_5;
LABEL_8:
    operator delete(v27.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_9;
  }
  operator delete(v20.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_8;
LABEL_5:
  if ((SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_6:
    __p = v28;
    goto LABEL_10;
  }
LABEL_9:
  sub_23941A7F8(&__p, v28.__pn_.__r_.__value_.__l.__data_, v28.__pn_.__r_.__value_.__l.__size_);
LABEL_10:
  sub_2395ACAA8((uint64_t)&__p, (char *)&v33);
  v27 = v33;
  memset(&v33, 0, sizeof(v33));
  v17 = *(_OWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 48);
  sub_239B928A0((uint64_t)&v20, (uint64_t)&v27, &v17);
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_13;
LABEL_17:
      operator delete(__p.__pn_.__r_.__value_.__l.__data_);
      if (v26)
        goto LABEL_14;
      goto LABEL_18;
    }
  }
  else if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v33.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_17;
LABEL_13:
  if (v26)
  {
LABEL_14:
    sub_239AA5614((uint64_t)&v20);
    v11 = operator new(0x70uLL);
    v11[1] = 0;
    v11[2] = 0;
    *v11 = &off_250B02130;
    v11[3] = &off_250ADD920;
    v12 = *(_OWORD *)&v20.__pn_.__r_.__value_.__r.__words[1];
    *(_OWORD *)&v20.__pn_.__r_.__value_.__r.__words[1] = 0uLL;
    v13 = v21;
    *((_OWORD *)v11 + 2) = v12;
    *((_OWORD *)v11 + 3) = v13;
    v14 = v23;
    *((_OWORD *)v11 + 4) = v22;
    *((_OWORD *)v11 + 5) = v14;
    v11[12] = v24;
    *((_WORD *)v11 + 52) = v25;
    *a2 = v11 + 3;
    a2[1] = v11;
    goto LABEL_19;
  }
LABEL_18:
  *a2 = 0;
  a2[1] = 0;
LABEL_19:
  sub_239AA557C((uint64_t)&v20);
  if (SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__pn_.__r_.__value_.__l.__data_);
  v29[0] = *MEMORY[0x24BEDB7F0];
  v15 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v29 + *(_QWORD *)(v29[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v30[0] = v15;
  v30[1] = MEMORY[0x24BEDB848] + 16;
  if (v31 < 0)
    operator delete((void *)v30[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v32);
}

void sub_239B97A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, std::locale a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_Unwind_Exception *exception_object,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v63;

  if (a42 < 0)
    operator delete(__p);
  a43 = *MEMORY[0x24BEDB7F0];
  v63 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a43 + *(_QWORD *)(a43 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a45 = v63;
  a46 = MEMORY[0x24BEDB848] + 16;
  if (a59 < 0)
    operator delete(a54);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a62);
  _Unwind_Resume(a1);
}

void sub_239B97B74()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B97B88(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF9F08;
  result[1] = v3;
  return result;
}

uint64_t sub_239B97BBC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF9F08;
  a2[1] = v2;
  return result;
}

void sub_239B97BD8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(v3 + 56);
  v5 = *(std::__shared_weak_count **)(v3 + 64);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v16 = 0;
    v17 = v4;
    v18 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v16 = 0;
    v17 = v4;
    v18 = 0;
  }
  v15 = -1;
  v16 = (int)std::thread::hardware_concurrency();
  v9 = operator new(0x1B0uLL);
  sub_239B83060(v9, &v15);
  *a2 = v9 + 3;
  a2[1] = v9;
  v10 = v18;
  if (!v18)
    goto LABEL_12;
  v11 = (unint64_t *)&v18->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (!v5)
      return;
  }
  else
  {
LABEL_12:
    if (!v5)
      return;
  }
  v13 = (unint64_t *)&v5->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239B97D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  void *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  operator delete(v14);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (v12)
  {
    v18 = (unint64_t *)&v12->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239B97DB4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B97DC8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF9EC0;
  result[1] = v3;
  return result;
}

uint64_t sub_239B97DFC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF9EC0;
  a2[1] = v2;
  return result;
}

void sub_239B97E18(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(v3 + 56);
  v5 = *(std::__shared_weak_count **)(v3 + 64);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v16 = 0;
    v17 = v4;
    v18 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v16 = 0;
    v17 = v4;
    v18 = 0;
  }
  v15 = -1;
  v16 = (int)std::thread::hardware_concurrency();
  v9 = operator new(0x1B0uLL);
  sub_239A7DA9C(v9, &v15);
  *a2 = v9 + 3;
  a2[1] = v9;
  v10 = v18;
  if (!v18)
    goto LABEL_12;
  v11 = (unint64_t *)&v18->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (!v5)
      return;
  }
  else
  {
LABEL_12:
    if (!v5)
      return;
  }
  v13 = (unint64_t *)&v5->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239B97F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  void *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  operator delete(v14);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (v12)
  {
    v18 = (unint64_t *)&v12->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B97FF0(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9DE8;
  if (*(char *)(a1 + 79) < 0)
  {
    operator delete(*(void **)(a1 + 56));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
LABEL_5:
    operator delete(*(void **)(a1 + 8));
    return a1;
  }
  if (*(char *)(a1 + 31) < 0)
    goto LABEL_5;
  return a1;
}

void sub_239B98048(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9DE8;
  if (*(char *)(a1 + 79) < 0)
  {
    operator delete(*(void **)(a1 + 56));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
LABEL_6:
      JUMPOUT(0x23B83E31CLL);
  }
  else if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 8));
  goto LABEL_6;
}

char *sub_239B980B0(uint64_t a1)
{
  char *v2;
  char *v3;
  _BYTE *v4;
  __int128 v5;

  v2 = (char *)operator new(0x78uLL);
  v3 = v2;
  *(_QWORD *)v2 = off_250AF9DE8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v2 + 8, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v3 + 6) = *(_QWORD *)(a1 + 48);
  v4 = v3 + 56;
  if (*(char *)(a1 + 79) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 56), *(_QWORD *)(a1 + 64));
  }
  else
  {
    *(_OWORD *)v4 = *(_OWORD *)(a1 + 56);
    *((_QWORD *)v3 + 9) = *(_QWORD *)(a1 + 72);
  }
  v5 = *(_OWORD *)(a1 + 96);
  *((_OWORD *)v3 + 5) = *(_OWORD *)(a1 + 80);
  *((_OWORD *)v3 + 6) = v5;
  *((_QWORD *)v3 + 14) = *(_QWORD *)(a1 + 112);
  return v3;
}

void sub_239B9816C(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B98198(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __int128 v6;
  _BYTE *v7;
  __int128 v8;
  __n128 result;
  __int128 v10;

  *(_QWORD *)a2 = off_250AF9DE8;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  v6 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = v6;
  v7 = (_BYTE *)(a2 + 56);
  if (*(char *)(a1 + 79) < 0)
  {
    sub_23941A7F8(v7, *(void **)(a1 + 56), *(_QWORD *)(a1 + 64));
  }
  else
  {
    v8 = *(_OWORD *)(a1 + 56);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a1 + 72);
    *(_OWORD *)v7 = v8;
  }
  result = *(__n128 *)(a1 + 80);
  v10 = *(_OWORD *)(a1 + 96);
  *(__n128 *)(a2 + 80) = result;
  *(_OWORD *)(a2 + 96) = v10;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a1 + 112);
  return result;
}

void sub_239B98248(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_239B98264(uint64_t a1)
{
  if ((*(char *)(a1 + 79) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(*(void **)(a1 + 8));
    return;
  }
  operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 31) < 0)
    goto LABEL_5;
}

void sub_239B982B0(void **__p)
{
  if (*((char *)__p + 79) < 0)
  {
    operator delete(__p[7]);
    if ((*((char *)__p + 31) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_5:
    operator delete(__p[1]);
    goto LABEL_3;
  }
  if (*((char *)__p + 31) < 0)
    goto LABEL_5;
LABEL_3:
  operator delete(__p);
}

void sub_239B982FC(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _BYTE *v14;
  __int128 v15;
  char *v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  void *__p[2];
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  void *__dst[2];
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  _QWORD *v43;
  _QWORD v44[3];
  _QWORD *v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v5 = *a2;
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(v6 + 56);
  v8 = *(std::__shared_weak_count **)(v6 + 64);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v31 = 0;
    v32 = v7;
    v33 = v8;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  else
  {
    v31 = 0;
    v32 = v7;
    v33 = 0;
  }
  v30 = v5;
  v31 = (int)std::thread::hardware_concurrency();
  v12 = operator new(0x1B0uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = &off_250AF83E8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(__dst, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 8);
    v39 = *(_QWORD *)(a1 + 24);
  }
  v40 = *(_OWORD *)(a1 + 32);
  v41 = *(_QWORD *)(a1 + 48);
  v45 = 0;
  v13 = (char *)operator new(0x38uLL);
  *(_QWORD *)v13 = off_250AF9E30;
  v14 = v13 + 8;
  if (SHIBYTE(v39) < 0)
  {
    sub_23941A7F8(v14, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)__dst;
    *((_QWORD *)v13 + 3) = v39;
  }
  *((_OWORD *)v13 + 2) = v40;
  *((_QWORD *)v13 + 6) = v41;
  v45 = v13;
  if (*(char *)(a1 + 79) < 0)
  {
    sub_23941A7F8(__p, *(void **)(a1 + 56), *(_QWORD *)(a1 + 64));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a1 + 56);
    v35 = *(_QWORD *)(a1 + 72);
  }
  v15 = *(_OWORD *)(a1 + 96);
  v36 = *(_OWORD *)(a1 + 80);
  v37 = v15;
  v43 = 0;
  v16 = (char *)operator new(0x40uLL);
  *(_QWORD *)v16 = off_250AF9E78;
  v17 = v16 + 8;
  if (SHIBYTE(v35) < 0)
  {
    sub_23941A7F8(v17, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)__p;
    *((_QWORD *)v16 + 3) = v35;
  }
  v18 = v37;
  *((_OWORD *)v16 + 2) = v36;
  *((_OWORD *)v16 + 3) = v18;
  v43 = v16;
  sub_239B07D6C((uint64_t)(v12 + 3), &v30, v44, v42);
  v21 = v43;
  if (v43 == v42)
  {
    v22 = 4;
    v21 = v42;
  }
  else
  {
    if (!v43)
      goto LABEL_25;
    v22 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v21 + 8 * v22))(v21, v19, v20);
LABEL_25:
  if (SHIBYTE(v35) < 0)
    operator delete(__p[0]);
  v23 = v45;
  if (v45 == v44)
  {
    v24 = 4;
    v23 = v44;
  }
  else
  {
    if (!v45)
      goto LABEL_32;
    v24 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v23 + 8 * v24))(v23, v19, v20);
LABEL_32:
  if (SHIBYTE(v39) < 0)
    operator delete(__dst[0]);
  *a3 = v12 + 3;
  a3[1] = v12;
  v25 = v33;
  if (v33)
  {
    v26 = (unint64_t *)&v33->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  if (v8)
  {
    v28 = (unint64_t *)&v8->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239B9860C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;

  operator delete(v32);
  if (a18 < 0)
    operator delete(__p);
  v35 = *(_QWORD **)(v33 - 80);
  if (v35 == (_QWORD *)(v33 - 104))
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 104);
  }
  else
  {
    if (!v35)
      goto LABEL_8;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_8:
  if (a29 < 0)
    operator delete(a24);
  std::__shared_weak_count::~__shared_weak_count(v30);
  operator delete(v37);
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v39 = __ldaxr(p_shared_owners);
    while (__stlxr(v39 - 1, p_shared_owners));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  if (v29)
  {
    v40 = (unint64_t *)&v29->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B98794(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9E78;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B987D0(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9E78;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B9881C(uint64_t a1)
{
  char *v2;
  _BYTE *v3;
  __int128 v4;

  v2 = (char *)operator new(0x40uLL);
  *(_QWORD *)v2 = off_250AF9E78;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  v4 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v2 + 3) = v4;
  return v2;
}

void sub_239B98884(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B98898(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  *(_QWORD *)a2 = off_250AF9E78;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v7;
  return result;
}

void sub_239B988F8(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B9890C(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B9893C(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::string *v6;
  std::string::size_type v7;
  char v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  std::__fs::filesystem::path __dst;
  std::__fs::filesystem::path __p;
  char v17;
  char v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  char v25;
  std::string v26;
  std::__fs::filesystem::path v27;
  std::string v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  std::to_string(&v26, *a3);
  v6 = std::string::append(&v26, ".jpg");
  v7 = v6->__r_.__value_.__r.__words[0];
  v28.__r_.__value_.__r.__words[0] = v6->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v28.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v6->__r_.__value_.__r.__words[1] + 7);
  v8 = HIBYTE(v6->__r_.__value_.__r.__words[2]);
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&__p.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v28.__r_.__value_.__r.__words + 7);
  __p.__pn_.__r_.__value_.__r.__words[0] = v7;
  __p.__pn_.__r_.__value_.__l.__size_ = v28.__r_.__value_.__r.__words[0];
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v8;
  sub_239498A04(&__p, a1 + 8, &v27);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v26.__r_.__value_.__l.__data_);
LABEL_3:
  if (sub_239B207F0(*(_QWORD *)(a1 + 32), (uint64_t)&v27))
    goto LABEL_14;
  if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&__dst, v27.__pn_.__r_.__value_.__l.__data_, v27.__pn_.__r_.__value_.__l.__size_);
  else
    __dst = v27;
  sub_2395ACAA8((uint64_t)&__dst, (char *)&v28);
  v26 = v28;
  memset(&v28, 0, sizeof(v28));
  v13 = *(_OWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 56);
  sub_239B98D48((uint64_t)&__p, v5, (uint64_t)&v26, &v13);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v26.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_11:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_12;
LABEL_24:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v25)
        goto LABEL_13;
LABEL_25:
      if (v24)
      {
        if (v23)
        {
          if (v22 < 0)
            operator delete(v21);
          if (v20 < 0)
            operator delete(v19);
        }
        if (v18 && v17 < 0)
          operator delete((void *)__p.__pn_.__r_.__value_.__r.__words[2]);
      }
      v9 = 0;
      if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_15;
      goto LABEL_16;
    }
  }
  else if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_11;
  }
  operator delete(v28.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_24;
LABEL_12:
  if (!v25)
    goto LABEL_25;
LABEL_13:
  sub_239B20A74(*(_QWORD *)(a1 + 32), (uint64_t)&v27);
  if (!v25 && v24)
  {
    if (v23)
    {
      if (v22 < 0)
        operator delete(v21);
      if (v20 < 0)
        operator delete(v19);
    }
    if (v18 && v17 < 0)
      operator delete((void *)__p.__pn_.__r_.__value_.__r.__words[2]);
  }
LABEL_14:
  v9 = 1;
  if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_15:
    operator delete(v27.__pn_.__r_.__value_.__l.__data_);
LABEL_16:
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v9;
}

void sub_239B98C08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42,int a43,__int16 a44,char a45,char a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *p_shared_owners;
  unint64_t v54;

  if (*(char *)(v51 - 81) < 0)
    operator delete(*(void **)(v51 - 104));
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v54 = __ldaxr(p_shared_owners);
    while (__stlxr(v54 - 1, p_shared_owners));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B98D48(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  std::ios_base *v12;
  int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  std::ios_base *v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  int v25;
  uint64_t v26;
  const void *v27[3];
  void *v28[3];
  __int128 v29;
  uint64_t v30;
  void *v31[2];
  char v32;
  char v33;
  void *v34;
  char v35;
  void *v36;
  char v37;
  char v38;
  char v39;
  void *v40[2];
  char v41;
  char v42;
  void *v43;
  char v44;
  void *v45;
  char v46;
  char v47;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  unsigned __int8 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  char v59;
  void *v60[2];
  unsigned __int8 v61;
  char v62;
  void *v63;
  char v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  char v76;
  char v77;
  char v78;
  __int128 v79;
  __int128 __p;
  uint64_t v81;
  unsigned __int8 v82;
  __int128 v83;
  uint64_t v84;
  void *v85[4];
  int v86;
  uint64_t v87[19];
  uint64_t v88;
  _BYTE v89[408];
  _QWORD v90[22];

  v90[19] = *MEMORY[0x24BDAC8D0];
  v7 = MEMORY[0x24BEDB840];
  v8 = MEMORY[0x24BEDB840] + 64;
  v9 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v10 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v11 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v90[0] = MEMORY[0x24BEDB840] + 64;
  v88 = v10;
  *(_QWORD *)&v89[*(_QWORD *)(v10 - 24) - 8] = v11;
  v12 = (std::ios_base *)&v89[*(_QWORD *)(v88 - 24) - 8];
  std::ios_base::init(v12, v89);
  v12[1].__vftable = 0;
  v12[1].__fmtflags_ = -1;
  v88 = v7 + 24;
  v90[0] = v8;
  MEMORY[0x23B83DC80](v89);
  std::ofstream::open();
  if ((v89[*(_QWORD *)(v88 - 24) + 24] & 5) != 0)
  {
    sub_239618F08(v31, "Failure during saving image file");
    v39 = 1;
    sub_239616578(5u, (__int128 *)v31, (uint64_t)&v79);
    *(_OWORD *)a1 = v79;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (LOBYTE(v87[0]))
    {
      *(_BYTE *)(a1 + 40) = 0;
      v13 = v82;
      if (v82)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v81;
        v81 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if ((_BYTE)v86)
      {
        v14 = v85[0];
        *(_QWORD *)(a1 + 64) = v84;
        *(_OWORD *)(a1 + 48) = v83;
        v83 = 0uLL;
        *(_QWORD *)(a1 + 72) = v14;
        *(_OWORD *)(a1 + 80) = *(_OWORD *)&v85[1];
        *(void **)(a1 + 96) = v85[3];
        v84 = 0;
        memset(&v85[1], 0, 24);
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v13 && SHIBYTE(v81) < 0)
        operator delete((void *)__p);
      if (!v39)
        goto LABEL_58;
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
      if (!v39)
        goto LABEL_58;
    }
    if (!v38)
      goto LABEL_34;
    if (v37 < 0)
    {
      operator delete(v36);
      if ((v35 & 0x80000000) == 0)
      {
LABEL_34:
        if (!v33)
          goto LABEL_58;
        goto LABEL_35;
      }
    }
    else if ((v35 & 0x80000000) == 0)
    {
      goto LABEL_34;
    }
    operator delete(v34);
    if (!v33)
      goto LABEL_58;
LABEL_35:
    if (v32 < 0)
      operator delete(v31[0]);
    goto LABEL_58;
  }
  v29 = *a4;
  v30 = *((_QWORD *)a4 + 2);
  HIBYTE(v27[2]) = 18;
  strcpy((char *)v27, "CorePhotogrammetry");
  sub_2395AC84C(v27, v28);
  v15 = MEMORY[0x24BEDB870];
  v16 = MEMORY[0x24BEDB870] + 64;
  v17 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
  v18 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  v87[0] = MEMORY[0x24BEDB870] + 64;
  *(_QWORD *)&v79 = v17;
  *(_QWORD *)((char *)&v79 + *(_QWORD *)(v17 - 24)) = v18;
  v19 = (std::ios_base *)((char *)&v79 + *(_QWORD *)(v79 - 24));
  std::ios_base::init(v19, (char *)&v79 + 8);
  v19[1].__vftable = 0;
  v19[1].__fmtflags_ = -1;
  *(_QWORD *)&v79 = v15 + 24;
  v87[0] = v16;
  std::streambuf::basic_streambuf();
  v20 = MEMORY[0x24BEDB848];
  *((_QWORD *)&v79 + 1) = MEMORY[0x24BEDB848] + 16;
  memset(v85, 0, sizeof(v85));
  v86 = 16;
  v65 = v29;
  v66 = v30;
  sub_23961D938(a2, &v79, 4, (uint64_t)&v65, (uint64_t)&v67);
  if (v78)
  {
    std::stringbuf::str();
    sub_2395ABE70((const void **)&v63, (uint64_t)v28, (uint64_t)v60);
    if (v62)
    {
      if ((v61 & 0x80u) == 0)
        v21 = v60;
      else
        v21 = (void **)v60[0];
      if ((v61 & 0x80u) == 0)
        v22 = v61;
      else
        v22 = (uint64_t)v60[1];
      sub_239458500(&v88, (uint64_t)v21, v22);
      *(_BYTE *)(a1 + 120) = 1;
    }
    else
    {
      sub_239618F08(v40, "Failure during saving image file");
      v48 = 1;
      sub_239616578(5u, (__int128 *)v40, (uint64_t)&v49);
      *(_OWORD *)a1 = v49;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v59)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v25 = v52;
        if (v52)
        {
          *(_OWORD *)(a1 + 16) = v50;
          *(_QWORD *)(a1 + 32) = v51;
          v51 = 0;
          v50 = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v58)
        {
          v26 = v55;
          *(_QWORD *)(a1 + 64) = v54;
          *(_OWORD *)(a1 + 48) = v53;
          v53 = 0uLL;
          *(_QWORD *)(a1 + 72) = v26;
          *(_OWORD *)(a1 + 80) = v56;
          *(_QWORD *)(a1 + 96) = v57;
          v54 = 0;
          v56 = 0uLL;
          v57 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v25 && SHIBYTE(v51) < 0)
          operator delete((void *)v50);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v48)
      {
        if (v47)
        {
          if (v46 < 0)
            operator delete(v45);
          if (v44 < 0)
            operator delete(v43);
        }
        if (v42 && v41 < 0)
          operator delete(v40[0]);
      }
    }
    if (v62 && (char)v61 < 0)
      operator delete(v60[0]);
    if (v64 < 0)
      operator delete(v63);
    if (v78 || !v77)
      goto LABEL_50;
    if (!v76)
      goto LABEL_47;
LABEL_43:
    if (SHIBYTE(v75) < 0)
      operator delete((void *)v74);
    if (SHIBYTE(v72) < 0)
      operator delete((void *)v71);
LABEL_47:
    if (v70 && SHIBYTE(v69) < 0)
      operator delete((void *)v68);
    goto LABEL_50;
  }
  *(_BYTE *)(a1 + 120) = 0;
  *(_OWORD *)a1 = v67;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v77)
  {
    *(_BYTE *)(a1 + 40) = 0;
    if (v70)
    {
      *(_OWORD *)(a1 + 16) = v68;
      *(_QWORD *)(a1 + 32) = v69;
      v69 = 0;
      v68 = 0uLL;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v76)
    {
      v23 = v73;
      *(_QWORD *)(a1 + 64) = v72;
      *(_OWORD *)(a1 + 48) = v71;
      v71 = 0uLL;
      *(_QWORD *)(a1 + 72) = v23;
      *(_OWORD *)(a1 + 80) = v74;
      *(_QWORD *)(a1 + 96) = v75;
      v72 = 0;
      v74 = 0uLL;
      v75 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    if (!v76)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_50:
  *(_QWORD *)&v79 = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)&v79 + *(_QWORD *)(v79 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  *((_QWORD *)&v79 + 1) = v20 + 16;
  if (SHIBYTE(v85[2]) < 0)
    operator delete(v85[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v87);
  if (v28[0])
  {
    v28[1] = v28[0];
    operator delete(v28[0]);
  }
  if (SHIBYTE(v27[2]) < 0)
    operator delete((void *)v27[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)&v89[*(_QWORD *)(v88 - 24) - 8], *(_DWORD *)&v89[*(_QWORD *)(v88 - 24) + 24] | 4);
LABEL_58:
  v88 = *v9;
  *(_QWORD *)&v89[*(_QWORD *)(v88 - 24) - 8] = v9[3];
  MEMORY[0x23B83DC8C](v89);
  std::ostream::~ostream();
  return MEMORY[0x23B83E250](v90);
}

void sub_239B9946C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a70;
  char a71;
  void *a72;
  char a73;
  char a74;

  sub_239523188((uint64_t)&a37);
  if (a71 && a70 < 0)
    operator delete(__p);
  if (a73 < 0)
    operator delete(a72);
  sub_239522F50((uint64_t)&a74);
  sub_239A90B68((uint64_t)&STACK[0x278]);
  if (a17)
    operator delete(a17);
  if (a16 < 0)
    operator delete(a11);
  sub_23955C978(&STACK[0x380]);
  _Unwind_Resume(a1);
}

void sub_239B99564(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B9958C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9E30;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B995C8(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9E30;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B99614(uint64_t a1)
{
  char *v2;
  _BYTE *v3;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = off_250AF9E30;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v2 + 6) = *(_QWORD *)(a1 + 48);
  return v2;
}

void sub_239B99684(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B99698(uint64_t a1, __n128 *a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __n128 result;

  a2->n128_u64[0] = (unint64_t)off_250AF9E30;
  v4 = &a2->n128_u8[8];
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    a2[1].n128_u64[1] = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  a2[3].n128_u64[0] = *(_QWORD *)(a1 + 48);
  a2[2] = result;
  return result;
}

void sub_239B99700(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B99714(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

void sub_239B99744(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  std::string *v5;
  std::string::size_type v6;
  char v7;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  std::__fs::filesystem::path __dst;
  std::__fs::filesystem::path __p;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  std::string v22;
  std::__fs::filesystem::path v23;
  std::string v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  std::to_string(&v22, *a2);
  v5 = std::string::append(&v22, ".jpg");
  v6 = v5->__r_.__value_.__r.__words[0];
  v24.__r_.__value_.__r.__words[0] = v5->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v24.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v5->__r_.__value_.__r.__words[1] + 7);
  v7 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&__p.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v24.__r_.__value_.__r.__words + 7);
  __p.__pn_.__r_.__value_.__r.__words[0] = v6;
  __p.__pn_.__r_.__value_.__l.__size_ = v24.__r_.__value_.__r.__words[0];
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v7;
  sub_239498A04(&__p, a1 + 8, &v23);
  if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_6:
    operator delete(v22.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v23.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_4;
    goto LABEL_7;
  }
  operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_6;
LABEL_3:
  if ((SHIBYTE(v23.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_4:
    __dst = v23;
    goto LABEL_8;
  }
LABEL_7:
  sub_23941A7F8(&__dst, v23.__pn_.__r_.__value_.__l.__data_, v23.__pn_.__r_.__value_.__l.__size_);
LABEL_8:
  sub_2395ACAA8((uint64_t)&__dst, (char *)&v24);
  v22 = v24;
  memset(&v24, 0, sizeof(v24));
  v12 = *(_OWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 48);
  sub_239B99A4C((uint64_t)&__p, (uint64_t)&v22, &v12);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v22.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_10:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_11;
LABEL_15:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v21)
        goto LABEL_12;
      goto LABEL_16;
    }
  }
  else if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_10;
  }
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_15;
LABEL_11:
  if (v21)
  {
LABEL_12:
    sub_239B0F55C((uint64_t)&__p);
    v8 = operator new(0x70uLL);
    v8[1] = 0;
    v8[2] = 0;
    *v8 = &off_250ADB878;
    v8[3] = &off_250ADB628;
    v9 = *(_OWORD *)&__p.__pn_.__r_.__value_.__r.__words[1];
    *(_OWORD *)&__p.__pn_.__r_.__value_.__r.__words[1] = 0uLL;
    v10 = v16;
    *((_OWORD *)v8 + 2) = v9;
    *((_OWORD *)v8 + 3) = v10;
    v11 = v18;
    *((_OWORD *)v8 + 4) = v17;
    *((_OWORD *)v8 + 5) = v11;
    v8[12] = v19;
    *((_WORD *)v8 + 52) = v20;
    *a3 = v8 + 3;
    a3[1] = v8;
    goto LABEL_17;
  }
LABEL_16:
  *a3 = 0;
  a3[1] = 0;
LABEL_17:
  sub_239AA557C((uint64_t)&__p);
  if (SHIBYTE(v23.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__pn_.__r_.__value_.__l.__data_);
}

void sub_239B99970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  if (*(char *)(v25 - 65) < 0)
  {
    operator delete(*(void **)(v25 - 88));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B99A4C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  std::ios_base *v10;
  int v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  const void *v17[3];
  void *v18[3];
  __int128 v19;
  uint64_t v20;
  void *v21[2];
  char v22;
  char v23;
  void *v24;
  char v25;
  void *v26;
  char v27;
  char v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 __p;
  uint64_t v34;
  unsigned __int8 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  void *v45[2];
  unsigned __int8 v46;
  char v47;
  std::string v48;
  _QWORD v49[2];
  _BYTE v50[408];
  _QWORD v51[20];

  v51[19] = *MEMORY[0x24BDAC8D0];
  v5 = MEMORY[0x24BEDB838];
  v6 = MEMORY[0x24BEDB838] + 64;
  v7 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v8 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v9 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v51[0] = MEMORY[0x24BEDB838] + 64;
  v49[0] = v8;
  *(_QWORD *)((char *)v49 + *(_QWORD *)(v8 - 24)) = v9;
  v49[1] = 0;
  v10 = (std::ios_base *)((char *)v49 + *(_QWORD *)(v49[0] - 24));
  std::ios_base::init(v10, v50);
  v10[1].__vftable = 0;
  v10[1].__fmtflags_ = -1;
  v49[0] = v5 + 24;
  v51[0] = v6;
  MEMORY[0x23B83DC80](v50);
  std::ifstream::open();
  if ((v50[*(_QWORD *)(v49[0] - 24) + 16] & 5) != 0)
  {
    sub_239618F08(v21, "Failure during loading image file");
    v29 = 1;
    sub_239616578(5u, (__int128 *)v21, (uint64_t)&v32);
    *(_OWORD *)a1 = v32;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v43)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v11 = v35;
      if (v35)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v34;
        v34 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v41)
      {
        v12 = v38;
        *(_QWORD *)(a1 + 64) = v37;
        *(_OWORD *)(a1 + 48) = v36;
        v36 = 0uLL;
        *(_QWORD *)(a1 + 72) = v12;
        *(_OWORD *)(a1 + 80) = v39;
        *(_QWORD *)(a1 + 96) = v40;
        v37 = 0;
        v39 = 0uLL;
        v40 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v11 && SHIBYTE(v34) < 0)
        operator delete((void *)__p);
      if (!v29)
        goto LABEL_38;
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
      if (!v29)
        goto LABEL_38;
    }
    if (!v28)
      goto LABEL_35;
    if (v27 < 0)
    {
      operator delete(v26);
      if ((v25 & 0x80000000) == 0)
      {
LABEL_35:
        if (!v23)
          goto LABEL_38;
        goto LABEL_36;
      }
    }
    else if ((v25 & 0x80000000) == 0)
    {
      goto LABEL_35;
    }
    operator delete(v24);
    if (!v23)
      goto LABEL_38;
LABEL_36:
    if (v22 < 0)
      operator delete(v21[0]);
    goto LABEL_38;
  }
  v19 = *a3;
  v20 = *((_QWORD *)a3 + 2);
  HIBYTE(v17[2]) = 18;
  strcpy((char *)v17, "CorePhotogrammetry");
  sub_2395AC84C(v17, v18);
  sub_239A7D600(&v48, *(_QWORD **)&v50[*(_QWORD *)(v49[0] - 24) + 24]);
  sub_2395AC2E8((const void **)&v48.__r_.__value_.__l.__data_, (uint64_t)v18, (uint64_t)v45);
  sub_2394988CC((uint64_t)&v32);
  if ((v46 & 0x80u) == 0)
    v13 = v45;
  else
    v13 = (void **)v45[0];
  if ((v46 & 0x80u) == 0)
    v14 = v46;
  else
    v14 = (uint64_t)v45[1];
  sub_239458500(&__p, (uint64_t)v13, v14);
  v30 = v19;
  v31 = v20;
  sub_23961D248(&v32, 4, (uint64_t)&v30, a1);
  *(_QWORD *)&v32 = *MEMORY[0x24BEDB7F0];
  v15 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)&v32 + *(_QWORD *)(v32 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  *(_QWORD *)&__p = v15;
  *((_QWORD *)&__p + 1) = MEMORY[0x24BEDB848] + 16;
  if (v42 < 0)
    operator delete(*((void **)&v39 + 1));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v44);
  if (v47 && (char)v46 < 0)
    operator delete(v45[0]);
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v48.__r_.__value_.__l.__data_);
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  if (SHIBYTE(v17[2]) < 0)
    operator delete((void *)v17[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v49 + *(_QWORD *)(v49[0] - 24)), *(_DWORD *)&v50[*(_QWORD *)(v49[0] - 24) + 16] | 4);
LABEL_38:
  v49[0] = *v7;
  *(_QWORD *)((char *)v49 + *(_QWORD *)(v49[0] - 24)) = v7[3];
  MEMORY[0x23B83DC8C](v50);
  std::istream::~istream();
  return MEMORY[0x23B83E250](v51);
}

void sub_239B99E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a73;
  char a74;
  void *v75;

  if (a74)
  {
    if (a73 < 0)
      operator delete(__p);
  }
  if (SLOBYTE(STACK[0x217]) < 0)
  {
    operator delete((void *)STACK[0x200]);
    v75 = a15;
    if (!a15)
    {
LABEL_6:
      if ((a14 & 0x80000000) == 0)
      {
LABEL_11:
        sub_23955CB90(&STACK[0x218]);
        _Unwind_Resume(a1);
      }
LABEL_10:
      operator delete(a9);
      goto LABEL_11;
    }
  }
  else
  {
    v75 = a15;
    if (!a15)
      goto LABEL_6;
  }
  operator delete(v75);
  if ((a14 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239B99F68(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B99F90(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9D10;
  if (*(char *)(a1 + 79) < 0)
  {
    operator delete(*(void **)(a1 + 56));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
LABEL_5:
    operator delete(*(void **)(a1 + 8));
    return a1;
  }
  if (*(char *)(a1 + 31) < 0)
    goto LABEL_5;
  return a1;
}

void sub_239B99FE8(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9D10;
  if (*(char *)(a1 + 79) < 0)
  {
    operator delete(*(void **)(a1 + 56));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
LABEL_6:
      JUMPOUT(0x23B83E31CLL);
  }
  else if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 8));
  goto LABEL_6;
}

char *sub_239B9A050(uint64_t a1)
{
  char *v2;
  char *v3;
  _BYTE *v4;
  __int128 v5;

  v2 = (char *)operator new(0x78uLL);
  v3 = v2;
  *(_QWORD *)v2 = off_250AF9D10;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v2 + 8, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v3 + 6) = *(_QWORD *)(a1 + 48);
  v4 = v3 + 56;
  if (*(char *)(a1 + 79) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 56), *(_QWORD *)(a1 + 64));
  }
  else
  {
    *(_OWORD *)v4 = *(_OWORD *)(a1 + 56);
    *((_QWORD *)v3 + 9) = *(_QWORD *)(a1 + 72);
  }
  v5 = *(_OWORD *)(a1 + 96);
  *((_OWORD *)v3 + 5) = *(_OWORD *)(a1 + 80);
  *((_OWORD *)v3 + 6) = v5;
  *((_QWORD *)v3 + 14) = *(_QWORD *)(a1 + 112);
  return v3;
}

void sub_239B9A10C(_Unwind_Exception *a1)
{
  char *v1;
  void **v2;

  if (v1[31] < 0)
    operator delete(*v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B9A138(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __int128 v6;
  _BYTE *v7;
  __int128 v8;
  __n128 result;
  __int128 v10;

  *(_QWORD *)a2 = off_250AF9D10;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  v6 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = v6;
  v7 = (_BYTE *)(a2 + 56);
  if (*(char *)(a1 + 79) < 0)
  {
    sub_23941A7F8(v7, *(void **)(a1 + 56), *(_QWORD *)(a1 + 64));
  }
  else
  {
    v8 = *(_OWORD *)(a1 + 56);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a1 + 72);
    *(_OWORD *)v7 = v8;
  }
  result = *(__n128 *)(a1 + 80);
  v10 = *(_OWORD *)(a1 + 96);
  *(__n128 *)(a2 + 80) = result;
  *(_OWORD *)(a2 + 96) = v10;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a1 + 112);
  return result;
}

void sub_239B9A1E8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_239B9A204(uint64_t a1)
{
  if ((*(char *)(a1 + 79) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(*(void **)(a1 + 8));
    return;
  }
  operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 31) < 0)
    goto LABEL_5;
}

void sub_239B9A250(void **__p)
{
  if (*((char *)__p + 79) < 0)
  {
    operator delete(__p[7]);
    if ((*((char *)__p + 31) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_5:
    operator delete(__p[1]);
    goto LABEL_3;
  }
  if (*((char *)__p + 31) < 0)
    goto LABEL_5;
LABEL_3:
  operator delete(__p);
}

void sub_239B9A29C(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _BYTE *v14;
  __int128 v15;
  char *v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  void *__p[2];
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  void *__dst[2];
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  _QWORD *v43;
  _QWORD v44[3];
  _QWORD *v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v5 = *a2;
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(v6 + 56);
  v8 = *(std::__shared_weak_count **)(v6 + 64);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v31 = 0;
    v32 = v7;
    v33 = v8;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  else
  {
    v31 = 0;
    v32 = v7;
    v33 = 0;
  }
  v30 = v5;
  v31 = (int)std::thread::hardware_concurrency();
  v12 = operator new(0x1B0uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = &off_250AF7EE8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(__dst, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 8);
    v39 = *(_QWORD *)(a1 + 24);
  }
  v40 = *(_OWORD *)(a1 + 32);
  v41 = *(_QWORD *)(a1 + 48);
  v45 = 0;
  v13 = (char *)operator new(0x38uLL);
  *(_QWORD *)v13 = off_250AF9D58;
  v14 = v13 + 8;
  if (SHIBYTE(v39) < 0)
  {
    sub_23941A7F8(v14, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)__dst;
    *((_QWORD *)v13 + 3) = v39;
  }
  *((_OWORD *)v13 + 2) = v40;
  *((_QWORD *)v13 + 6) = v41;
  v45 = v13;
  if (*(char *)(a1 + 79) < 0)
  {
    sub_23941A7F8(__p, *(void **)(a1 + 56), *(_QWORD *)(a1 + 64));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a1 + 56);
    v35 = *(_QWORD *)(a1 + 72);
  }
  v15 = *(_OWORD *)(a1 + 96);
  v36 = *(_OWORD *)(a1 + 80);
  v37 = v15;
  v43 = 0;
  v16 = (char *)operator new(0x40uLL);
  *(_QWORD *)v16 = off_250AF9DA0;
  v17 = v16 + 8;
  if (SHIBYTE(v35) < 0)
  {
    sub_23941A7F8(v17, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)__p;
    *((_QWORD *)v16 + 3) = v35;
  }
  v18 = v37;
  *((_OWORD *)v16 + 2) = v36;
  *((_OWORD *)v16 + 3) = v18;
  v43 = v16;
  sub_239A7DBE8((uint64_t)(v12 + 3), &v30, v44, v42);
  v21 = v43;
  if (v43 == v42)
  {
    v22 = 4;
    v21 = v42;
  }
  else
  {
    if (!v43)
      goto LABEL_25;
    v22 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v21 + 8 * v22))(v21, v19, v20);
LABEL_25:
  if (SHIBYTE(v35) < 0)
    operator delete(__p[0]);
  v23 = v45;
  if (v45 == v44)
  {
    v24 = 4;
    v23 = v44;
  }
  else
  {
    if (!v45)
      goto LABEL_32;
    v24 = 5;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v23 + 8 * v24))(v23, v19, v20);
LABEL_32:
  if (SHIBYTE(v39) < 0)
    operator delete(__dst[0]);
  *a3 = v12 + 3;
  a3[1] = v12;
  v25 = v33;
  if (v33)
  {
    v26 = (unint64_t *)&v33->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  if (v8)
  {
    v28 = (unint64_t *)&v8->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239B9A5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;

  operator delete(v32);
  if (a18 < 0)
    operator delete(__p);
  v35 = *(_QWORD **)(v33 - 80);
  if (v35 == (_QWORD *)(v33 - 104))
  {
    v36 = 4;
    v35 = (_QWORD *)(v33 - 104);
  }
  else
  {
    if (!v35)
      goto LABEL_8;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_8:
  if (a29 < 0)
    operator delete(a24);
  std::__shared_weak_count::~__shared_weak_count(v30);
  operator delete(v37);
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v39 = __ldaxr(p_shared_owners);
    while (__stlxr(v39 - 1, p_shared_owners));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  if (v29)
  {
    v40 = (unint64_t *)&v29->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239B9A734(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9DA0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B9A770(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9DA0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B9A7BC(uint64_t a1)
{
  char *v2;
  _BYTE *v3;
  __int128 v4;

  v2 = (char *)operator new(0x40uLL);
  *(_QWORD *)v2 = off_250AF9DA0;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  v4 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v2 + 3) = v4;
  return v2;
}

void sub_239B9A824(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B9A838(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  *(_QWORD *)a2 = off_250AF9DA0;
  v4 = (_BYTE *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v7;
  return result;
}

void sub_239B9A898(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B9A8AC(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B9A8DC(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::string *v6;
  std::string::size_type v7;
  char v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  std::__fs::filesystem::path __dst;
  std::__fs::filesystem::path __p;
  char v17;
  char v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  char v25;
  std::string v26;
  std::__fs::filesystem::path v27;
  std::string v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  std::to_string(&v26, *a3);
  v6 = std::string::append(&v26, ".jpg");
  v7 = v6->__r_.__value_.__r.__words[0];
  v28.__r_.__value_.__r.__words[0] = v6->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v28.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v6->__r_.__value_.__r.__words[1] + 7);
  v8 = HIBYTE(v6->__r_.__value_.__r.__words[2]);
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&__p.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v28.__r_.__value_.__r.__words + 7);
  __p.__pn_.__r_.__value_.__r.__words[0] = v7;
  __p.__pn_.__r_.__value_.__l.__size_ = v28.__r_.__value_.__r.__words[0];
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v8;
  sub_239498A04(&__p, a1 + 8, &v27);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v26.__r_.__value_.__l.__data_);
LABEL_3:
  if (sub_239B207F0(*(_QWORD *)(a1 + 32), (uint64_t)&v27))
    goto LABEL_14;
  if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&__dst, v27.__pn_.__r_.__value_.__l.__data_, v27.__pn_.__r_.__value_.__l.__size_);
  else
    __dst = v27;
  sub_2395ACAA8((uint64_t)&__dst, (char *)&v28);
  v26 = v28;
  memset(&v28, 0, sizeof(v28));
  v13 = *(_OWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 56);
  sub_239B9ACEC((uint64_t)&__p, v5, (uint64_t)&v26, 4, &v13);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v26.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_11:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_12;
LABEL_24:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v25)
        goto LABEL_13;
LABEL_25:
      if (v24)
      {
        if (v23)
        {
          if (v22 < 0)
            operator delete(v21);
          if (v20 < 0)
            operator delete(v19);
        }
        if (v18 && v17 < 0)
          operator delete((void *)__p.__pn_.__r_.__value_.__r.__words[2]);
      }
      v9 = 0;
      if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_15;
      goto LABEL_16;
    }
  }
  else if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_11;
  }
  operator delete(v28.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_24;
LABEL_12:
  if (!v25)
    goto LABEL_25;
LABEL_13:
  sub_239B20A74(*(_QWORD *)(a1 + 32), (uint64_t)&v27);
  if (!v25 && v24)
  {
    if (v23)
    {
      if (v22 < 0)
        operator delete(v21);
      if (v20 < 0)
        operator delete(v19);
    }
    if (v18 && v17 < 0)
      operator delete((void *)__p.__pn_.__r_.__value_.__r.__words[2]);
  }
LABEL_14:
  v9 = 1;
  if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_15:
    operator delete(v27.__pn_.__r_.__value_.__l.__data_);
LABEL_16:
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v9;
}

void sub_239B9ABAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42,int a43,__int16 a44,char a45,char a46,int a47,__int16 a48,char a49,char a50)
{
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *p_shared_owners;
  unint64_t v54;

  if (*(char *)(v51 - 81) < 0)
    operator delete(*(void **)(v51 - 104));
  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v54 = __ldaxr(p_shared_owners);
    while (__stlxr(v54 - 1, p_shared_owners));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B9ACEC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, __int128 *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  std::ios_base *v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::ios_base *v21;
  uint64_t v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  int v27;
  uint64_t v28;
  const void *v29[3];
  void *v30[3];
  __int128 v31;
  uint64_t v32;
  void *v33[2];
  char v34;
  char v35;
  void *v36;
  char v37;
  void *v38;
  char v39;
  char v40;
  char v41;
  void *v42[2];
  char v43;
  char v44;
  void *v45;
  char v46;
  void *v47;
  char v48;
  char v49;
  char v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  unsigned __int8 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  char v60;
  char v61;
  void *v62[2];
  unsigned __int8 v63;
  char v64;
  void *v65;
  char v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  char v78;
  char v79;
  char v80;
  __int128 v81;
  __int128 __p;
  uint64_t v83;
  unsigned __int8 v84;
  __int128 v85;
  uint64_t v86;
  void *v87[4];
  int v88;
  uint64_t v89[19];
  uint64_t v90;
  _BYTE v91[408];
  _QWORD v92[22];

  v92[19] = *MEMORY[0x24BDAC8D0];
  v9 = MEMORY[0x24BEDB840];
  v10 = MEMORY[0x24BEDB840] + 64;
  v11 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v12 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v13 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v92[0] = MEMORY[0x24BEDB840] + 64;
  v90 = v12;
  *(_QWORD *)&v91[*(_QWORD *)(v12 - 24) - 8] = v13;
  v14 = (std::ios_base *)&v91[*(_QWORD *)(v90 - 24) - 8];
  std::ios_base::init(v14, v91);
  v14[1].__vftable = 0;
  v14[1].__fmtflags_ = -1;
  v90 = v9 + 24;
  v92[0] = v10;
  MEMORY[0x23B83DC80](v91);
  std::ofstream::open();
  if ((v91[*(_QWORD *)(v90 - 24) + 24] & 5) != 0)
  {
    sub_239618F08(v33, "Failure during saving image file");
    v41 = 1;
    sub_239616578(5u, (__int128 *)v33, (uint64_t)&v81);
    *(_OWORD *)a1 = v81;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (LOBYTE(v89[0]))
    {
      *(_BYTE *)(a1 + 40) = 0;
      v15 = v84;
      if (v84)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v83;
        v83 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if ((_BYTE)v88)
      {
        v16 = v87[0];
        *(_QWORD *)(a1 + 64) = v86;
        *(_OWORD *)(a1 + 48) = v85;
        v85 = 0uLL;
        *(_QWORD *)(a1 + 72) = v16;
        *(_OWORD *)(a1 + 80) = *(_OWORD *)&v87[1];
        *(void **)(a1 + 96) = v87[3];
        v86 = 0;
        memset(&v87[1], 0, 24);
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v15 && SHIBYTE(v83) < 0)
        operator delete((void *)__p);
      if (!v41)
        goto LABEL_58;
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
      if (!v41)
        goto LABEL_58;
    }
    if (!v40)
      goto LABEL_34;
    if (v39 < 0)
    {
      operator delete(v38);
      if ((v37 & 0x80000000) == 0)
      {
LABEL_34:
        if (!v35)
          goto LABEL_58;
        goto LABEL_35;
      }
    }
    else if ((v37 & 0x80000000) == 0)
    {
      goto LABEL_34;
    }
    operator delete(v36);
    if (!v35)
      goto LABEL_58;
LABEL_35:
    if (v34 < 0)
      operator delete(v33[0]);
    goto LABEL_58;
  }
  v31 = *a5;
  v32 = *((_QWORD *)a5 + 2);
  HIBYTE(v29[2]) = 18;
  strcpy((char *)v29, "CorePhotogrammetry");
  sub_2395AC84C(v29, v30);
  v17 = MEMORY[0x24BEDB870];
  v18 = MEMORY[0x24BEDB870] + 64;
  v19 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
  v20 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  v89[0] = MEMORY[0x24BEDB870] + 64;
  *(_QWORD *)&v81 = v19;
  *(_QWORD *)((char *)&v81 + *(_QWORD *)(v19 - 24)) = v20;
  v21 = (std::ios_base *)((char *)&v81 + *(_QWORD *)(v81 - 24));
  std::ios_base::init(v21, (char *)&v81 + 8);
  v21[1].__vftable = 0;
  v21[1].__fmtflags_ = -1;
  *(_QWORD *)&v81 = v17 + 24;
  v89[0] = v18;
  std::streambuf::basic_streambuf();
  v22 = MEMORY[0x24BEDB848];
  *((_QWORD *)&v81 + 1) = MEMORY[0x24BEDB848] + 16;
  memset(v87, 0, sizeof(v87));
  v88 = 16;
  v67 = v31;
  v68 = v32;
  sub_23961C874(a2, &v81, a4, (uint64_t)&v67, (uint64_t)&v69);
  if (v80)
  {
    std::stringbuf::str();
    sub_2395ABE70((const void **)&v65, (uint64_t)v30, (uint64_t)v62);
    if (v64)
    {
      if ((v63 & 0x80u) == 0)
        v23 = v62;
      else
        v23 = (void **)v62[0];
      if ((v63 & 0x80u) == 0)
        v24 = v63;
      else
        v24 = (uint64_t)v62[1];
      sub_239458500(&v90, (uint64_t)v23, v24);
      *(_BYTE *)(a1 + 120) = 1;
    }
    else
    {
      sub_239618F08(v42, "Failure during saving image file");
      v50 = 1;
      sub_239616578(5u, (__int128 *)v42, (uint64_t)&v51);
      *(_OWORD *)a1 = v51;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v61)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v27 = v54;
        if (v54)
        {
          *(_OWORD *)(a1 + 16) = v52;
          *(_QWORD *)(a1 + 32) = v53;
          v53 = 0;
          v52 = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v60)
        {
          v28 = v57;
          *(_QWORD *)(a1 + 64) = v56;
          *(_OWORD *)(a1 + 48) = v55;
          v55 = 0uLL;
          *(_QWORD *)(a1 + 72) = v28;
          *(_OWORD *)(a1 + 80) = v58;
          *(_QWORD *)(a1 + 96) = v59;
          v56 = 0;
          v58 = 0uLL;
          v59 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v27 && SHIBYTE(v53) < 0)
          operator delete((void *)v52);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v50)
      {
        if (v49)
        {
          if (v48 < 0)
            operator delete(v47);
          if (v46 < 0)
            operator delete(v45);
        }
        if (v44 && v43 < 0)
          operator delete(v42[0]);
      }
    }
    if (v64 && (char)v63 < 0)
      operator delete(v62[0]);
    if (v66 < 0)
      operator delete(v65);
    if (v80 || !v79)
      goto LABEL_50;
    if (!v78)
      goto LABEL_47;
LABEL_43:
    if (SHIBYTE(v77) < 0)
      operator delete((void *)v76);
    if (SHIBYTE(v74) < 0)
      operator delete((void *)v73);
LABEL_47:
    if (v72 && SHIBYTE(v71) < 0)
      operator delete((void *)v70);
    goto LABEL_50;
  }
  *(_BYTE *)(a1 + 120) = 0;
  *(_OWORD *)a1 = v69;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v79)
  {
    *(_BYTE *)(a1 + 40) = 0;
    if (v72)
    {
      *(_OWORD *)(a1 + 16) = v70;
      *(_QWORD *)(a1 + 32) = v71;
      v71 = 0;
      v70 = 0uLL;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v78)
    {
      v25 = v75;
      *(_QWORD *)(a1 + 64) = v74;
      *(_OWORD *)(a1 + 48) = v73;
      v73 = 0uLL;
      *(_QWORD *)(a1 + 72) = v25;
      *(_OWORD *)(a1 + 80) = v76;
      *(_QWORD *)(a1 + 96) = v77;
      v74 = 0;
      v76 = 0uLL;
      v77 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    if (!v78)
      goto LABEL_47;
    goto LABEL_43;
  }
LABEL_50:
  *(_QWORD *)&v81 = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)&v81 + *(_QWORD *)(v81 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  *((_QWORD *)&v81 + 1) = v22 + 16;
  if (SHIBYTE(v87[2]) < 0)
    operator delete(v87[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v89);
  if (v30[0])
  {
    v30[1] = v30[0];
    operator delete(v30[0]);
  }
  if (SHIBYTE(v29[2]) < 0)
    operator delete((void *)v29[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)&v91[*(_QWORD *)(v90 - 24) - 8], *(_DWORD *)&v91[*(_QWORD *)(v90 - 24) + 24] | 4);
LABEL_58:
  v90 = *v11;
  *(_QWORD *)&v91[*(_QWORD *)(v90 - 24) - 8] = v11[3];
  MEMORY[0x23B83DC8C](v91);
  std::ostream::~ostream();
  return MEMORY[0x23B83E250](v92);
}

void sub_239B9B418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a70;
  char a71;
  void *a72;
  char a73;
  char a74;

  sub_239523188((uint64_t)&a37);
  if (a71 && a70 < 0)
    operator delete(__p);
  if (a73 < 0)
    operator delete(a72);
  sub_239522F50((uint64_t)&a74);
  sub_239A90B68((uint64_t)&STACK[0x278]);
  if (a17)
    operator delete(a17);
  if (a16 < 0)
    operator delete(a11);
  sub_23955C978(&STACK[0x380]);
  _Unwind_Resume(a1);
}

void sub_239B9B510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::ostream::~ostream();
  MEMORY[0x23B83E250](a10);
  _Unwind_Resume(a1);
}

uint64_t sub_239B9B538(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9D58;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B9B574(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9D58;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B9B5C0(uint64_t a1)
{
  char *v2;
  _BYTE *v3;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = off_250AF9D58;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v2 + 6) = *(_QWORD *)(a1 + 48);
  return v2;
}

void sub_239B9B630(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B9B644(uint64_t a1, __n128 *a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __n128 result;

  a2->n128_u64[0] = (unint64_t)off_250AF9D58;
  v4 = &a2->n128_u8[8];
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    a2[1].n128_u64[1] = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  a2[3].n128_u64[0] = *(_QWORD *)(a1 + 48);
  a2[2] = result;
  return result;
}

void sub_239B9B6AC(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B9B6C0(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

void sub_239B9B6F0(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  std::string *v5;
  std::string::size_type v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  std::__fs::filesystem::path __dst;
  std::__fs::filesystem::path __p[5];
  char v19;
  std::string v20;
  std::__fs::filesystem::path v21;
  std::string v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  std::to_string(&v20, *a2);
  v5 = std::string::append(&v20, ".jpg");
  v6 = v5->__r_.__value_.__r.__words[0];
  v22.__r_.__value_.__r.__words[0] = v5->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v22.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v5->__r_.__value_.__r.__words[1] + 7);
  v7 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&__p[0].__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v22.__r_.__value_.__r.__words + 7);
  __p[0].__pn_.__r_.__value_.__r.__words[0] = v6;
  __p[0].__pn_.__r_.__value_.__l.__size_ = v22.__r_.__value_.__r.__words[0];
  *((_BYTE *)&__p[0].__pn_.__r_.__value_.__s + 23) = v7;
  sub_239498A04(__p, a1 + 8, &v21);
  if ((SHIBYTE(__p[0].__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v20.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_6:
    operator delete(v20.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_4;
    goto LABEL_7;
  }
  operator delete(__p[0].__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_6;
LABEL_3:
  if ((SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_4:
    __dst = v21;
    goto LABEL_8;
  }
LABEL_7:
  sub_23941A7F8(&__dst, v21.__pn_.__r_.__value_.__l.__data_, v21.__pn_.__r_.__value_.__l.__size_);
LABEL_8:
  sub_2395ACAA8((uint64_t)&__dst, (char *)&v22);
  v20 = v22;
  memset(&v22, 0, sizeof(v22));
  v15 = *(_OWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 48);
  sub_239B9BA18((uint64_t)__p, (uint64_t)&v20, 4, &v15);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v20.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_10:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_11;
LABEL_15:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v19)
        goto LABEL_12;
      goto LABEL_16;
    }
  }
  else if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_10;
  }
  operator delete(v22.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_15;
LABEL_11:
  if (v19)
  {
LABEL_12:
    v8 = sub_239620FD4((uint64_t)__p);
    v9 = operator new(0xA0uLL);
    v9[1] = 0;
    v9[2] = 0;
    *v9 = &off_250ADBE68;
    v9[3] = &off_250ADBEA0;
    *((_OWORD *)v9 + 2) = *(_OWORD *)(v8 + 8);
    *(_QWORD *)(v8 + 8) = 0;
    *(_QWORD *)(v8 + 16) = 0;
    v10 = *(_OWORD *)(v8 + 88);
    v11 = *(_OWORD *)(v8 + 104);
    v12 = *(_OWORD *)(v8 + 72);
    v9[18] = *(_QWORD *)(v8 + 120);
    *((_OWORD *)v9 + 7) = v10;
    *((_OWORD *)v9 + 8) = v11;
    *((_OWORD *)v9 + 6) = v12;
    v13 = *(_OWORD *)(v8 + 56);
    v14 = *(_OWORD *)(v8 + 24);
    *((_OWORD *)v9 + 4) = *(_OWORD *)(v8 + 40);
    *((_OWORD *)v9 + 5) = v13;
    *((_OWORD *)v9 + 3) = v14;
    *((_WORD *)v9 + 76) = *(_WORD *)(v8 + 128);
    *a3 = v9 + 3;
    a3[1] = v9;
    goto LABEL_17;
  }
LABEL_16:
  *a3 = 0;
  a3[1] = 0;
LABEL_17:
  sub_239621094((uint64_t)__p);
  if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__pn_.__r_.__value_.__l.__data_);
}

void sub_239B9B93C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  if (*(char *)(v25 - 65) < 0)
  {
    operator delete(*(void **)(v25 - 88));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B9BA18(uint64_t a1, uint64_t a2, int a3, __int128 *a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  std::ios_base *v12;
  int v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  const void *v19[3];
  void *v20[3];
  __int128 v21;
  uint64_t v22;
  void *v23[2];
  char v24;
  char v25;
  void *v26;
  char v27;
  void *v28;
  char v29;
  char v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 __p;
  uint64_t v36;
  unsigned __int8 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  void *v47[2];
  unsigned __int8 v48;
  char v49;
  std::string v50;
  _QWORD v51[2];
  _BYTE v52[408];
  _QWORD v53[22];

  v53[19] = *MEMORY[0x24BDAC8D0];
  v7 = MEMORY[0x24BEDB838];
  v8 = MEMORY[0x24BEDB838] + 64;
  v9 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v10 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v11 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v53[0] = MEMORY[0x24BEDB838] + 64;
  v51[0] = v10;
  *(_QWORD *)((char *)v51 + *(_QWORD *)(v10 - 24)) = v11;
  v51[1] = 0;
  v12 = (std::ios_base *)((char *)v51 + *(_QWORD *)(v51[0] - 24));
  std::ios_base::init(v12, v52);
  v12[1].__vftable = 0;
  v12[1].__fmtflags_ = -1;
  v51[0] = v7 + 24;
  v53[0] = v8;
  MEMORY[0x23B83DC80](v52);
  std::ifstream::open();
  if ((v52[*(_QWORD *)(v51[0] - 24) + 16] & 5) != 0)
  {
    sub_239618F08(v23, "Failure during loading image file");
    v31 = 1;
    sub_239616578(5u, (__int128 *)v23, (uint64_t)&v34);
    *(_OWORD *)a1 = v34;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v45)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v13 = v37;
      if (v37)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v36;
        v36 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v43)
      {
        v14 = v40;
        *(_QWORD *)(a1 + 64) = v39;
        *(_OWORD *)(a1 + 48) = v38;
        v38 = 0uLL;
        *(_QWORD *)(a1 + 72) = v14;
        *(_OWORD *)(a1 + 80) = v41;
        *(_QWORD *)(a1 + 96) = v42;
        v39 = 0;
        v41 = 0uLL;
        v42 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 136) = 0;
      if (v13 && SHIBYTE(v36) < 0)
        operator delete((void *)__p);
      if (!v31)
        goto LABEL_38;
    }
    else
    {
      *(_BYTE *)(a1 + 136) = 0;
      if (!v31)
        goto LABEL_38;
    }
    if (!v30)
      goto LABEL_35;
    if (v29 < 0)
    {
      operator delete(v28);
      if ((v27 & 0x80000000) == 0)
      {
LABEL_35:
        if (!v25)
          goto LABEL_38;
        goto LABEL_36;
      }
    }
    else if ((v27 & 0x80000000) == 0)
    {
      goto LABEL_35;
    }
    operator delete(v26);
    if (!v25)
      goto LABEL_38;
LABEL_36:
    if (v24 < 0)
      operator delete(v23[0]);
    goto LABEL_38;
  }
  v21 = *a4;
  v22 = *((_QWORD *)a4 + 2);
  HIBYTE(v19[2]) = 18;
  strcpy((char *)v19, "CorePhotogrammetry");
  sub_2395AC84C(v19, v20);
  sub_239A7D600(&v50, *(_QWORD **)&v52[*(_QWORD *)(v51[0] - 24) + 24]);
  sub_2395AC2E8((const void **)&v50.__r_.__value_.__l.__data_, (uint64_t)v20, (uint64_t)v47);
  sub_2394988CC((uint64_t)&v34);
  if ((v48 & 0x80u) == 0)
    v15 = v47;
  else
    v15 = (void **)v47[0];
  if ((v48 & 0x80u) == 0)
    v16 = v48;
  else
    v16 = (uint64_t)v47[1];
  sub_239458500(&__p, (uint64_t)v15, v16);
  v32 = v21;
  v33 = v22;
  sub_23961BD14(&v34, a3, (uint64_t)&v32, a1);
  *(_QWORD *)&v34 = *MEMORY[0x24BEDB7F0];
  v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)&v34 + *(_QWORD *)(v34 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  *(_QWORD *)&__p = v17;
  *((_QWORD *)&__p + 1) = MEMORY[0x24BEDB848] + 16;
  if (v44 < 0)
    operator delete(*((void **)&v41 + 1));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v46);
  if (v49 && (char)v48 < 0)
    operator delete(v47[0]);
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v50.__r_.__value_.__l.__data_);
  if (v20[0])
  {
    v20[1] = v20[0];
    operator delete(v20[0]);
  }
  if (SHIBYTE(v19[2]) < 0)
    operator delete((void *)v19[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v51 + *(_QWORD *)(v51[0] - 24)), *(_DWORD *)&v52[*(_QWORD *)(v51[0] - 24) + 16] | 4);
LABEL_38:
  v51[0] = *v9;
  *(_QWORD *)((char *)v51 + *(_QWORD *)(v51[0] - 24)) = v9[3];
  MEMORY[0x23B83DC8C](v52);
  std::istream::~istream();
  return MEMORY[0x23B83E250](v53);
}

void sub_239B9BE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a73;
  char a74;
  void *v75;

  if (a74)
  {
    if (a73 < 0)
      operator delete(__p);
  }
  if (SLOBYTE(STACK[0x217]) < 0)
  {
    operator delete((void *)STACK[0x200]);
    v75 = a15;
    if (!a15)
    {
LABEL_6:
      if ((a14 & 0x80000000) == 0)
      {
LABEL_11:
        sub_23955CB90(&STACK[0x218]);
        _Unwind_Resume(a1);
      }
LABEL_10:
      operator delete(a9);
      goto LABEL_11;
    }
  }
  else
  {
    v75 = a15;
    if (!a15)
      goto LABEL_6;
  }
  operator delete(v75);
  if ((a14 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239B9BF38(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239B9BF60(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9BD0;
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_239B9BF9C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF9BD0;
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B9BFE8(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  _BYTE *v4;

  v2 = (char *)operator new(0x30uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v2 = off_250AF9BD0;
  *((_QWORD *)v2 + 1) = v3;
  v4 = v2 + 16;
  if (*(char *)(a1 + 39) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    *(_OWORD *)v4 = *(_OWORD *)(a1 + 16);
    *((_QWORD *)v2 + 4) = *(_QWORD *)(a1 + 32);
  }
  v2[40] = *(_BYTE *)(a1 + 40);
  return v2;
}

void sub_239B9C054(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_BYTE *sub_239B9C068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE *result;
  __int128 v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a2 = off_250AF9BD0;
  *(_QWORD *)(a2 + 8) = v4;
  result = (_BYTE *)(a2 + 16);
  if (*(char *)(a1 + 39) < 0)
  {
    result = sub_23941A7F8(result, *(void **)(a1 + 16), *(_QWORD *)(a1 + 24));
  }
  else
  {
    v6 = *(_OWORD *)(a1 + 16);
    *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
    *(_OWORD *)result = v6;
  }
  *(_BYTE *)(a2 + 40) = *(_BYTE *)(a1 + 40);
  return result;
}

void sub_239B9C0CC(uint64_t a1)
{
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
}

void sub_239B9C0E0(void **__p)
{
  if (*((char *)__p + 39) < 0)
    operator delete(__p[2]);
  operator delete(__p);
}

uint64_t sub_239B9C110(uint64_t a1, unsigned int **a2, double a3, double a4, int16x8_t a5, double a6, int16x8_t a7)
{
  _QWORD *v9;
  unsigned int *v10;
  _BOOL4 v11;
  unsigned int v12;
  uint64_t v13;
  char *v14;
  const std::locale::facet *v15;
  std::string *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  uint64_t *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  uint64_t v27;
  uint64_t (***v28)();
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unsigned int *v35;
  unsigned int *v36;
  uint64_t v37;
  unsigned int *v38;
  unsigned int v39;
  BOOL v40;
  uint64_t *v41;
  unsigned int *v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unint64_t *v46;
  unint64_t v47;
  std::string *v48;
  std::string::size_type v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  std::string *v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  std::string::size_type v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  std::string::size_type v66;
  unint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  unint64_t *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  unsigned int *v92;
  unsigned int *v93;
  uint64_t v94;
  unsigned int *v95;
  unsigned int v96;
  BOOL v97;
  uint64_t *v98;
  unsigned int *v99;
  uint64_t v100;
  unsigned int *v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104[2];
  uint64_t v105[2];
  void *__p;
  char v107;
  _QWORD v108[2];
  _QWORD v109[11];
  char v110;
  uint64_t v111;
  __int128 v112;
  _BYTE v113[15];
  _BYTE *v114;
  std::string v115;
  std::string *v116;
  uint64_t (**v117)();
  int v118;
  uint64_t (***v119)();
  std::string v120;
  char v121;
  _BYTE v122[24];
  _BYTE *v123;
  _BYTE v124[256];
  uint64_t v125;

  v125 = *MEMORY[0x24BDAC8D0];
  v9 = *(_QWORD **)(a1 + 8);
  v10 = *a2;
  v11 = sub_239B29DD4(a3, a4, a5, a6, a7);
  v12 = v10[1];
  if (v12 != 2)
  {
    if (v12)
    {
      sub_239A444D4((uint64_t)"unknown file", 1172, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    sub_2394988CC((uint64_t)v108);
    v13 = v109[0];
    v14 = (char *)v109 + *(_QWORD *)(v109[0] - 24);
    if (*((_DWORD *)v14 + 36) == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)v109 + *(_QWORD *)(v109[0] - 24)));
      v15 = std::locale::use_facet((const std::locale *)v124, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v15->__vftable[2].~facet_0)(v15, 32);
      std::locale::~locale((std::locale *)v124);
      v13 = v109[0];
    }
    *((_DWORD *)v14 + 36) = 48;
    *(_QWORD *)((char *)&v109[3] + *(_QWORD *)(v13 - 24)) = 8;
    std::ostream::operator<<();
    std::stringbuf::str();
    v16 = std::string::append(&v120, ".bin");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(_QWORD *)&v124[16] = *((_QWORD *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)v124 = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    sub_2395ACAA8((uint64_t)v124, (char *)&__p);
    if ((v124[23] & 0x80000000) != 0)
    {
      operator delete(*(void **)v124);
      if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
    }
    else if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_7:
      v21 = *a2;
      if (!*((_QWORD *)*a2 + 3))
        goto LABEL_62;
      v22 = *(uint64_t **)(v9[3] + 432);
      if (!v22)
        goto LABEL_62;
      v23 = *v22;
      if (!*v22)
        goto LABEL_62;
      v24 = (std::__shared_weak_count *)*((_QWORD *)v21 + 4);
      v105[0] = *((_QWORD *)*a2 + 3);
      v105[1] = (uint64_t)v24;
      if (v24)
      {
        p_shared_owners = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(p_shared_owners);
        while (__stxr(v26 + 1, p_shared_owners));
      }
      v27 = *v10;
      v117 = &off_250AF9C18;
      v118 = v27;
      v119 = &v117;
      sub_239B2EBE8(v23, v105, v27, &v117);
      v28 = v119;
      if (v119 == &v117)
      {
        v29 = 4;
        v28 = &v117;
      }
      else
      {
        if (!v119)
          goto LABEL_44;
        v29 = 5;
      }
      (*v28)[v29]();
LABEL_44:
      if (v24)
      {
        v46 = (unint64_t *)&v24->__shared_owners_;
        do
          v47 = __ldaxr(v46);
        while (__stlxr(v47 - 1, v46));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      std::to_string(&v115, *v10);
      v48 = std::string::append(&v115, ".jpg");
      v49 = v48->__r_.__value_.__r.__words[0];
      *(_QWORD *)v113 = v48->__r_.__value_.__l.__size_;
      *(_QWORD *)&v113[7] = *(std::string::size_type *)((char *)&v48->__r_.__value_.__r.__words[1] + 7);
      v50 = HIBYTE(v48->__r_.__value_.__r.__words[2]);
      v48->__r_.__value_.__l.__size_ = 0;
      v48->__r_.__value_.__r.__words[2] = 0;
      v48->__r_.__value_.__r.__words[0] = 0;
      *(_QWORD *)&v124[15] = *(_QWORD *)&v113[7];
      *(_QWORD *)v124 = v49;
      *(_QWORD *)&v124[8] = *(_QWORD *)v113;
      v124[23] = v50;
      sub_239498A04((std::__fs::filesystem::path *)v124, a1 + 16, (std::__fs::filesystem::path *)&v120);
      if ((v124[23] & 0x80000000) != 0)
        operator delete(*(void **)v124);
      if (SHIBYTE(v115.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v115.__r_.__value_.__l.__data_);
      v51 = *(_QWORD *)(v9[3] + 192);
      if (v51)
      {
        *(_QWORD *)v124 = *v10;
        if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(&v124[8], v120.__r_.__value_.__l.__data_, v120.__r_.__value_.__l.__size_);
        else
          *(std::string *)&v124[8] = v120;
        sub_2395F833C(v51 + 496, (unint64_t *)v124, (uint64_t)v124);
        if ((v124[31] & 0x80000000) != 0)
          operator delete(*(void **)&v124[8]);
      }
      if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v120.__r_.__value_.__l.__data_);
      v21 = *a2;
LABEL_62:
      if (!*((_QWORD *)v21 + 5))
        goto LABEL_77;
      v52 = *(_QWORD *)(v9[3] + 32);
      if (!v52)
        goto LABEL_77;
      v53 = (std::__shared_weak_count *)*((_QWORD *)v21 + 6);
      v104[0] = *((_QWORD *)v21 + 5);
      v104[1] = (uint64_t)v53;
      if (v53)
      {
        v54 = (unint64_t *)&v53->__shared_owners_;
        do
          v55 = __ldxr(v54);
        while (__stxr(v55 + 1, v54));
      }
      v56 = *v10;
      v115.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF9C60;
      LODWORD(v115.__r_.__value_.__r.__words[1]) = v56;
      v116 = &v115;
      sub_239B678AC(v52, v104, v56, &v115);
      v57 = v116;
      if (v116 == &v115)
      {
        v58 = 4;
        v57 = &v115;
      }
      else
      {
        if (!v116)
        {
LABEL_72:
          if (v53)
          {
            v59 = (unint64_t *)&v53->__shared_owners_;
            do
              v60 = __ldaxr(v59);
            while (__stlxr(v60 - 1, v59));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
LABEL_77:
          v61 = *((_QWORD *)*a2 + 7);
          if (!v61)
            goto LABEL_117;
          v62 = *(_QWORD *)(v9[3] + 48);
          if (!v62)
            goto LABEL_117;
          v63 = (std::__shared_weak_count *)*((_QWORD *)*a2 + 8);
          if (v63)
          {
            v64 = (unint64_t *)&v63->__shared_owners_;
            do
              v65 = __ldxr(v64);
            while (__stxr(v65 + 1, v64));
          }
          v66 = *v10;
          *(_QWORD *)v113 = &off_250AF9CA8;
          *(_DWORD *)&v113[8] = v66;
          v114 = v113;
          if (!*(_QWORD *)(v62 + 288))
          {
            sub_239A444D4((uint64_t)"unknown file", 337, (uint64_t)"", (void (*)(void *))sub_239A4463C);
            sub_239A4475C();
            abort();
          }
          v120.__r_.__value_.__r.__words[0] = v66;
          v120.__r_.__value_.__l.__size_ = v61;
          v120.__r_.__value_.__r.__words[2] = (std::string::size_type)v63;
          if (v63)
          {
            v67 = (unint64_t *)&v63->__shared_owners_;
            do
              v68 = __ldxr(v67);
            while (__stxr(v68 + 1, v67));
            v69 = (uint64_t)v114;
            v121 = 0;
            v70 = v122;
            if (!v114)
              goto LABEL_89;
            if (v114 != v113)
            {
              v69 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v114 + 16))(v114, v18, v19, v20);
LABEL_89:
              v123 = (_BYTE *)v69;
              goto LABEL_92;
            }
          }
          else
          {
            v121 = 0;
            v70 = v122;
          }
          v123 = v122;
          sub_239B9CFD4((uint64_t)v113, (uint64_t)v122);
LABEL_92:
          sub_239B9CE48((uint64_t)v124, (uint64_t *)&v120);
          v71 = operator new(0x120uLL);
          v71[1] = 0;
          v71[2] = 0;
          *v71 = &off_250AF8F30;
          *(_QWORD *)&v112 = sub_239B05428((uint64_t)(v71 + 3), (uint64_t)v124);
          *((_QWORD *)&v112 + 1) = v71;
          sub_239A82E8C(v124);
          if (v123 == v122)
          {
            v72 = 4;
          }
          else
          {
            if (!v123)
            {
LABEL_97:
              v73 = (std::__shared_weak_count *)v120.__r_.__value_.__r.__words[2];
              if (v120.__r_.__value_.__r.__words[2])
              {
                v74 = (unint64_t *)(v120.__r_.__value_.__r.__words[2] + 8);
                do
                  v75 = __ldaxr(v74);
                while (__stlxr(v75 - 1, v74));
                if (!v75)
                {
                  ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
                  std::__shared_weak_count::__release_weak(v73);
                }
              }
              sub_239B05644(*(unsigned int **)(v62 + 288), &v112);
              v79 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
              if (*((_QWORD *)&v112 + 1))
              {
                v80 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
                do
                  v81 = __ldaxr(v80);
                while (__stlxr(v81 - 1, v80));
                if (!v81)
                {
                  ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
                  std::__shared_weak_count::__release_weak(v79);
                }
              }
              v82 = v114;
              if (v114 == v113)
              {
                v83 = 4;
                v82 = v113;
              }
              else
              {
                if (!v114)
                {
LABEL_112:
                  if (v63)
                  {
                    v84 = (unint64_t *)&v63->__shared_owners_;
                    do
                      v85 = __ldaxr(v84);
                    while (__stlxr(v85 - 1, v84));
                    if (!v85)
                    {
                      ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
                      std::__shared_weak_count::__release_weak(v63);
                    }
                  }
LABEL_117:
                  v86 = v9[12];
                  if (v86)
                  {
                    v87 = *((_QWORD *)*a2 + 9);
                    if (v87)
                    {
                      *(_DWORD *)v124 = (*a2)[30];
                      (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(_QWORD *)v86 + 48))(v86, v87, v124);
                    }
                  }
                  v88 = v9[16];
                  if (v11)
                  {
                    if (!v88)
                      goto LABEL_141;
                    v89 = *((_QWORD *)v10 + 11);
                    if (!v89)
                      goto LABEL_141;
                    v90 = *((unsigned int *)sub_2395D7BEC(v89, *v10) + 49);
                    v91 = (uint64_t *)*((_QWORD *)v10 + 11);
                    v92 = (unsigned int *)operator new(0x78uLL, MEMORY[0x24BEDB6B8]);
                    v93 = v92;
                    if (v92)
                    {
                      sub_239A6BEB4((uint64_t)(v92 + 2), v91, *(unsigned __int8 *)(a1 + 40), 0, 0, v90 | 0x100000000);
                      v93[28] = 1;
                      *(_QWORD *)v93 = &off_250AF9CF0;
                    }
                    *(_QWORD *)v124 = v93;
                    v94 = v9[16];
                    if (!v94)
                      sub_2394172E0();
                    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v94 + 48))(v94, v124);
                    if (!v93)
                      goto LABEL_141;
                    v95 = v93 + 28;
                    do
                    {
                      v96 = __ldaxr(v95);
                      v97 = --v96 == 0;
                    }
                    while (__stlxr(v96, v95));
                  }
                  else
                  {
                    if (!v88)
                      goto LABEL_141;
                    v98 = (uint64_t *)*((_QWORD *)v10 + 13);
                    if (!v98)
                      goto LABEL_141;
                    v99 = (unsigned int *)operator new(0x78uLL, MEMORY[0x24BEDB6B8]);
                    v93 = v99;
                    if (v99)
                    {
                      sub_239A6BEB4((uint64_t)(v99 + 2), v98, *(unsigned __int8 *)(a1 + 40), 0, 0, 0);
                      v93[28] = 1;
                      *(_QWORD *)v93 = &off_250AF9CF0;
                    }
                    *(_QWORD *)v124 = v93;
                    v100 = v9[16];
                    if (!v100)
                      sub_2394172E0();
                    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v100 + 48))(v100, v124);
                    if (!v93)
                      goto LABEL_141;
                    v101 = v93 + 28;
                    do
                    {
                      v102 = __ldaxr(v101);
                      v97 = --v102 == 0;
                    }
                    while (__stlxr(v102, v101));
                  }
                  if (v97)
                    (*(void (**)(unsigned int *))(*(_QWORD *)v93 + 8))(v93);
LABEL_141:
                  if (v107 < 0)
                    operator delete(__p);
                  v108[0] = *MEMORY[0x24BEDB7F0];
                  v103 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
                  *(_QWORD *)((char *)v108 + *(_QWORD *)(v108[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
                  v109[0] = v103;
                  v109[1] = MEMORY[0x24BEDB848] + 16;
                  if (v110 < 0)
                    operator delete((void *)v109[9]);
                  std::streambuf::~streambuf();
                  std::iostream::~basic_iostream();
                  return MEMORY[0x23B83E250](&v111);
                }
                v83 = 5;
              }
              (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v82 + 8 * v83))(v82, v76, v77, v78);
              goto LABEL_112;
            }
            v72 = 5;
            v70 = v123;
          }
          (*(void (**)(_QWORD *))(*v70 + 8 * v72))(v70);
          goto LABEL_97;
        }
        v58 = 5;
      }
      (*(void (**)(std::string *, uint64_t, uint64_t, uint64_t))(v57->__r_.__value_.__r.__words[0] + 8 * v58))(v57, v18, v19, v20);
      goto LABEL_72;
    }
    operator delete(v120.__r_.__value_.__l.__data_);
    goto LABEL_7;
  }
  result = v9[12];
  if (result)
  {
    v31 = *((_QWORD *)*a2 + 9);
    if (v31)
    {
      LODWORD(v108[0]) = (*a2)[30];
      result = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(*(_QWORD *)result + 48))(result, v31, v108);
    }
  }
  v32 = v9[16];
  if (v11)
  {
    if (v32)
    {
      result = *((_QWORD *)v10 + 11);
      if (result)
      {
        v33 = *((unsigned int *)sub_2395D7BEC(result, *v10) + 49);
        v34 = (uint64_t *)*((_QWORD *)v10 + 11);
        v35 = (unsigned int *)operator new(0x78uLL, MEMORY[0x24BEDB6B8]);
        v36 = v35;
        if (v35)
        {
          sub_239A6BEB4((uint64_t)(v35 + 2), v34, *(unsigned __int8 *)(a1 + 40), 0, 0, v33 | 0x100000000);
          v36[28] = 1;
          *(_QWORD *)v36 = &off_250AF9CF0;
        }
        v108[0] = v36;
        v37 = v9[16];
        if (!v37)
          sub_2394172E0();
        result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v37 + 48))(v37, v108);
        if (v36)
        {
          v38 = v36 + 28;
          do
          {
            v39 = __ldaxr(v38);
            v40 = --v39 == 0;
          }
          while (__stlxr(v39, v38));
          goto LABEL_37;
        }
      }
    }
  }
  else if (v32)
  {
    v41 = (uint64_t *)*((_QWORD *)v10 + 13);
    if (v41)
    {
      v42 = (unsigned int *)operator new(0x78uLL, MEMORY[0x24BEDB6B8]);
      v36 = v42;
      if (v42)
      {
        sub_239A6BEB4((uint64_t)(v42 + 2), v41, *(unsigned __int8 *)(a1 + 40), 0, 0, 0);
        v36[28] = 1;
        *(_QWORD *)v36 = &off_250AF9CF0;
      }
      v108[0] = v36;
      v43 = v9[16];
      if (!v43)
        sub_2394172E0();
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v43 + 48))(v43, v108);
      if (v36)
      {
        v44 = v36 + 28;
        do
        {
          v45 = __ldaxr(v44);
          v40 = --v45 == 0;
        }
        while (__stlxr(v45, v44));
LABEL_37:
        if (v40)
          return (*(uint64_t (**)(unsigned int *))(*(_QWORD *)v36 + 8))(v36);
      }
    }
  }
  return result;
}

void sub_239B9CAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,void *a63)
{
  void *__p;
  char a72;
  uint64_t v73;

  if (a72 < 0)
    operator delete(__p);
  if (a18 < 0)
    operator delete(a13);
  a19 = *MEMORY[0x24BEDB7F0];
  v73 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a19 + *(_QWORD *)(a19 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a21 = v73;
  a22 = MEMORY[0x24BEDB848] + 16;
  if (a35 < 0)
    operator delete(a30);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a38);
  _Unwind_Resume(a1);
}

uint64_t sub_239B9CE48(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = 1;
  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = a2[2];
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 24);
  v9 = a2[7];
  if (v9)
  {
    if ((uint64_t *)v9 == a2 + 4)
    {
      *(_QWORD *)(a1 + 104) = a1 + 80;
      (*(void (**)(uint64_t))(*(_QWORD *)a2[7] + 24))(a2[7]);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  *(_QWORD *)(a1 + 104) = v9;
LABEL_9:
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  v10 = *a2;
  *(_QWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 112) = v10;
  return a1;
}

void sub_239B9CF10(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = *(std::__shared_weak_count **)(v1 + 64);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = *(_QWORD **)(v1 + 40);
  if (v6 == (_QWORD *)(v1 + 16))
  {
    v7 = 4;
    v6 = (_QWORD *)(v1 + 16);
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  _Unwind_Resume(exception_object);
}

void sub_239B9CF88()
{
  JUMPOUT(0x23B83E31CLL);
}

_DWORD *sub_239B9CF9C(uint64_t a1)
{
  _DWORD *result;
  int v3;

  result = operator new(0x10uLL);
  v3 = *(_DWORD *)(a1 + 8);
  *(_QWORD *)result = &off_250AF9CA8;
  result[2] = v3;
  return result;
}

uint64_t sub_239B9CFD4(uint64_t result, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(result + 8);
  *(_QWORD *)a2 = &off_250AF9CA8;
  *(_DWORD *)(a2 + 8) = v2;
  return result;
}

void sub_239B9CFFC()
{
  JUMPOUT(0x23B83E31CLL);
}

_DWORD *sub_239B9D010(uint64_t a1)
{
  _DWORD *result;
  int v3;

  result = operator new(0x10uLL);
  v3 = *(_DWORD *)(a1 + 8);
  *(_QWORD *)result = &off_250AF9C60;
  result[2] = v3;
  return result;
}

uint64_t sub_239B9D048(uint64_t result, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(result + 8);
  *(_QWORD *)a2 = &off_250AF9C60;
  *(_DWORD *)(a2 + 8) = v2;
  return result;
}

void sub_239B9D070()
{
  JUMPOUT(0x23B83E31CLL);
}

_DWORD *sub_239B9D084(uint64_t a1)
{
  _DWORD *result;
  int v3;

  result = operator new(0x10uLL);
  v3 = *(_DWORD *)(a1 + 8);
  *(_QWORD *)result = &off_250AF9C18;
  result[2] = v3;
  return result;
}

uint64_t sub_239B9D0BC(uint64_t result, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(result + 8);
  *(_QWORD *)a2 = &off_250AF9C18;
  *(_DWORD *)(a2 + 8) = v2;
  return result;
}

_QWORD *sub_239B9D0E0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF9B40;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B9D144(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF9B40;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B9D1B8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF9B40;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B9D208(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF9B40;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B9D238(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B9D290(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B9D2E8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B61124;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B613A8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B9D38C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239B9D3D0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF9AB0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239B9D434(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF9AB0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B9D4A8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x18uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF9AB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_239B9D4F8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_250AF9AB0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_239B9D528(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239B9D580(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239B9D5D8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _QWORD v9[4];
  char v10;
  __int128 v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v11 = 0uLL;
  v10 = 0;
  v9[0] = sub_239B4D474;
  v9[1] = 0;
  v9[2] = v4;
  v9[3] = v5;
  sub_239B4D6F8((uint64_t)v9, (uint64_t)&v11, (uint64_t)&v10);
  if (v10)
  {
    *(_OWORD *)a3 = v11;
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_239B9D67C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 - 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239B9D6C4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B9D6D8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF9A68;
  result[1] = v3;
  return result;
}

uint64_t sub_239B9D70C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF9A68;
  a2[1] = v2;
  return result;
}

uint64_t sub_239B9D728@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  const std::ios_base *v6;
  const std::locale::facet *v7;
  std::string *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  std::string v16;
  void *v17[2];
  std::string::size_type v18;
  std::__fs::filesystem::path v19;
  std::__fs::filesystem::path v20;
  std::__fs::filesystem::path v21;
  _QWORD v22[2];
  _QWORD v23[11];
  char v24;
  uint64_t v25;

  sub_2394988CC((uint64_t)v22);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = v23[0];
  v6 = (const std::ios_base *)((char *)v23 + *(_QWORD *)(v23[0] - 24));
  if (v6[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v6);
    v7 = std::locale::use_facet((const std::locale *)&v21, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)&v21);
    v5 = v23[0];
  }
  v6[1].__fmtflags_ = 48;
  *(_QWORD *)((char *)&v23[3] + *(_QWORD *)(v5 - 24)) = 8;
  std::ostream::operator<<();
  std::stringbuf::str();
  v8 = std::string::append(&v16, ".bin");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v18 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)v17 = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v17, (char *)&v19);
  v20 = v19;
  memset(&v19, 0, sizeof(v19));
  sub_239498A04(&v20, v4 + 1744, &v21);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v18) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_22:
      operator delete(v17[0]);
      if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
LABEL_23:
      operator delete(v16.__r_.__value_.__l.__data_);
      goto LABEL_7;
    }
  }
  else if ((SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v19.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v18) < 0)
    goto LABEL_22;
LABEL_6:
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_23;
LABEL_7:
  v10 = (std::__shared_weak_count *)operator new(0x40uLL);
  v10->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  v10->__shared_weak_owners_ = 0;
  v10->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBF90;
  v10[1].std::__shared_count = 0u;
  v12 = &v10[1].__vftable;
  v10[2].__shared_owners_ = 0;
  *(_OWORD *)&v10[1].__shared_weak_owners_ = 0u;
  LODWORD(v10[2].__shared_owners_) = 1065353216;
  std::__fs::filesystem::__status(&v21, 0);
  if (v20.__pn_.__r_.__value_.__s.__data_[0]
    && v20.__pn_.__r_.__value_.__s.__data_[0] != 255
    && sub_239B044E4(v12))
  {
    *a2 = v12;
    a2[1] = v10;
    if ((SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_16;
  }
  *a2 = 0;
  a2[1] = 0;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (v13)
  {
    if ((SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_16;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_16:
    operator delete(v21.__pn_.__r_.__value_.__l.__data_);
LABEL_17:
  v22[0] = *MEMORY[0x24BEDB7F0];
  v14 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v22 + *(_QWORD *)(v22[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v23[0] = v14;
  v23[1] = MEMORY[0x24BEDB848] + 16;
  if (v24 < 0)
    operator delete((void *)v23[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v25);
}

void sub_239B9D9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,std::locale a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v61;

  a41 = *MEMORY[0x24BEDB7F0];
  v61 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a41 + *(_QWORD *)(a41 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a43 = v61;
  a44 = MEMORY[0x24BEDB848] + 16;
  if (a57 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a60);
  _Unwind_Resume(a1);
}

void sub_239B9DB3C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B9DB50(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF9A20;
  result[1] = v3;
  return result;
}

uint64_t sub_239B9DB84(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF9A20;
  a2[1] = v2;
  return result;
}

uint64_t sub_239B9DBA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  const std::ios_base *v6;
  const std::locale::facet *v7;
  std::string *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::string v16;
  void *v17[2];
  std::string::size_type v18;
  std::__fs::filesystem::path v19;
  std::__fs::filesystem::path v20;
  std::__fs::filesystem::path v21;
  _QWORD v22[2];
  _QWORD v23[11];
  char v24;
  uint64_t v25;

  sub_2394988CC((uint64_t)v22);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = v23[0];
  v6 = (const std::ios_base *)((char *)v23 + *(_QWORD *)(v23[0] - 24));
  if (v6[1].__fmtflags_ == -1)
  {
    std::ios_base::getloc(v6);
    v7 = std::locale::use_facet((const std::locale *)&v21, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)&v21);
    v5 = v23[0];
  }
  v6[1].__fmtflags_ = 48;
  *(_QWORD *)((char *)&v23[3] + *(_QWORD *)(v5 - 24)) = 8;
  std::ostream::operator<<();
  std::stringbuf::str();
  v8 = std::string::append(&v16, ".bin");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v18 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)v17 = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v17, (char *)&v19);
  v20 = v19;
  memset(&v19, 0, sizeof(v19));
  sub_239498A04(&v20, v4 + 1720, &v21);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v18) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_22:
      operator delete(v17[0]);
      if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
LABEL_23:
      operator delete(v16.__r_.__value_.__l.__data_);
      goto LABEL_7;
    }
  }
  else if ((SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v19.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v18) < 0)
    goto LABEL_22;
LABEL_6:
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_23;
LABEL_7:
  v10 = (std::__shared_weak_count *)operator new(0x78uLL);
  v10->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  v10->__shared_weak_owners_ = 0;
  v10->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB7B8;
  v10[1].std::__shared_count = (std::__shared_count)xmmword_239EC65B0;
  v12 = (uint64_t)&v10[1];
  *(_OWORD *)&v10[1].__shared_weak_owners_ = 0u;
  *(_OWORD *)&v10[2].__shared_owners_ = 0u;
  v10[3].std::__shared_count = 0u;
  *(_OWORD *)&v10[3].__shared_weak_owners_ = 0u;
  *(_OWORD *)&v10[4].__shared_owners_ = 0u;
  std::__fs::filesystem::__status(&v21, 0);
  if (v20.__pn_.__r_.__value_.__s.__data_[0]
    && v20.__pn_.__r_.__value_.__s.__data_[0] != 255
    && sub_239B02D38(v12))
  {
    *a2 = v12;
    a2[1] = (uint64_t)v10;
    if ((SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_16;
  }
  *a2 = 0;
  a2[1] = 0;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (v13)
  {
    if ((SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_16;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (SHIBYTE(v21.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_16:
    operator delete(v21.__pn_.__r_.__value_.__l.__data_);
LABEL_17:
  v22[0] = *MEMORY[0x24BEDB7F0];
  v14 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v22 + *(_QWORD *)(v22[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v23[0] = v14;
  v23[1] = MEMORY[0x24BEDB848] + 16;
  if (v24 < 0)
    operator delete((void *)v23[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v25);
}

void sub_239B9DE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,std::locale a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v61;

  a41 = *MEMORY[0x24BEDB7F0];
  v61 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a41 + *(_QWORD *)(a41 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a43 = v61;
  a44 = MEMORY[0x24BEDB848] + 16;
  if (a57 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a60);
  _Unwind_Resume(a1);
}

uint64_t sub_239B9DFBC(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF99D8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B9DFF8(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF99D8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239B9E044(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;

  v2 = operator new(0x28uLL);
  *v2 = off_250AF99D8;
  v3 = v2 + 1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    v2[3] = *(_QWORD *)(a1 + 24);
  }
  v2[4] = *(_QWORD *)(a1 + 32);
  return v2;
}

void sub_239B9E0AC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_BYTE *sub_239B9E0C0(uint64_t a1, _QWORD *a2)
{
  _BYTE *result;
  __int128 v5;

  *a2 = off_250AF99D8;
  result = a2 + 1;
  if (*(char *)(a1 + 31) < 0)
  {
    result = sub_23941A7F8(result, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    a2[3] = *(_QWORD *)(a1 + 24);
    *(_OWORD *)result = v5;
  }
  a2[4] = *(_QWORD *)(a1 + 32);
  return result;
}

void sub_239B9E120(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B9E134(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

void sub_239B9E164(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  std::string *v5;
  std::string::size_type v6;
  char v7;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  std::__fs::filesystem::path __p;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int16 v17;
  char v18;
  std::string v19;
  std::__fs::filesystem::path v20;
  _QWORD v21[3];

  v21[2] = *MEMORY[0x24BDAC8D0];
  std::to_string(&v19, *a2);
  v5 = std::string::append(&v19, ".jpg");
  v6 = v5->__r_.__value_.__r.__words[0];
  v21[0] = v5->__r_.__value_.__l.__size_;
  *(_QWORD *)((char *)v21 + 7) = *(std::string::size_type *)((char *)&v5->__r_.__value_.__r.__words[1] + 7);
  v7 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&__p.__pn_.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v21 + 7);
  __p.__pn_.__r_.__value_.__r.__words[0] = v6;
  __p.__pn_.__r_.__value_.__l.__size_ = v21[0];
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v7;
  sub_239498A04(&__p, a1 + 8, &v20);
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v19.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_9:
    operator delete(v19.__r_.__value_.__l.__data_);
    goto LABEL_3;
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_9;
LABEL_3:
  std::__fs::filesystem::__status(&v20, 0);
  if (!__p.__pn_.__r_.__value_.__s.__data_[0] || __p.__pn_.__r_.__value_.__s.__data_[0] == 255)
  {
    *a3 = 0;
    a3[1] = 0;
    if ((SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
    goto LABEL_6;
  }
  v19 = *(std::string *)*(_QWORD *)(a1 + 32);
  sub_239B99A4C((uint64_t)&__p, (uint64_t)&v20, (__int128 *)&v19);
  if (v18)
  {
    sub_239B0F55C((uint64_t)&__p);
    v8 = operator new(0x70uLL);
    v8[1] = 0;
    v8[2] = 0;
    *v8 = &off_250ADB878;
    v8[3] = &off_250ADB628;
    v9 = *(_OWORD *)&__p.__pn_.__r_.__value_.__r.__words[1];
    *(_OWORD *)&__p.__pn_.__r_.__value_.__r.__words[1] = 0uLL;
    v10 = v13;
    *((_OWORD *)v8 + 2) = v9;
    *((_OWORD *)v8 + 3) = v10;
    v11 = v15;
    *((_OWORD *)v8 + 4) = v14;
    *((_OWORD *)v8 + 5) = v11;
    v8[12] = v16;
    *((_WORD *)v8 + 52) = v17;
    *a3 = v8 + 3;
    a3[1] = v8;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  sub_239AA557C((uint64_t)&__p);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_6:
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
}

void sub_239B9E324(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  if (*(char *)(v14 - 41) < 0)
  {
    operator delete(*(void **)(v14 - 64));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239B9E38C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9968;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B9E39C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9968;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B9E3CC(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  sub_239A614AC((_QWORD *)(a1 + 2688));
  sub_239A615DC(a1 + 944);
  sub_239A6177C(a1 + 232);
  v2 = *(void **)(a1 + 144);
  if (v2)
  {
    *(_QWORD *)(a1 + 152) = v2;
    operator delete(v2);
  }
  sub_239421038(a1 + 80, *(_QWORD **)(a1 + 88));
  v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_239B9E460(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9930;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B9E470(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9930;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239B9E4A0(uint64_t a1)
{
  return sub_239B5FD30(a1 + 24);
}

uint64_t sub_239B9E4AC(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF98E8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B9E4E8(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF98E8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B9E534(uint64_t a1)
{
  char *v2;
  _BYTE *v3;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = off_250AF98E8;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v2 + 6) = *(_QWORD *)(a1 + 48);
  return v2;
}

void sub_239B9E5A4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B9E5B8(uint64_t a1, __n128 *a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __n128 result;

  a2->n128_u64[0] = (unint64_t)off_250AF98E8;
  v4 = &a2->n128_u8[8];
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    a2[1].n128_u64[1] = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  a2[3].n128_u64[0] = *(_QWORD *)(a1 + 48);
  a2[2] = result;
  return result;
}

void sub_239B9E620(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B9E634(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239B9E664(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::string *v6;
  std::string::size_type v7;
  char v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  std::__fs::filesystem::path v15;
  std::__fs::filesystem::path __p;
  char v17;
  char v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  char v25;
  std::string v26;
  std::__fs::filesystem::path v27;
  std::string __dst;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  std::to_string(&v26, *a3);
  v6 = std::string::append(&v26, ".jpg");
  v7 = v6->__r_.__value_.__r.__words[0];
  __dst.__r_.__value_.__r.__words[0] = v6->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)__dst.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v6->__r_.__value_.__r.__words[1] + 7);
  v8 = HIBYTE(v6->__r_.__value_.__r.__words[2]);
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&__p.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)__dst.__r_.__value_.__r.__words + 7);
  __p.__pn_.__r_.__value_.__r.__words[0] = v7;
  __p.__pn_.__r_.__value_.__l.__size_ = __dst.__r_.__value_.__r.__words[0];
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v8;
  sub_239498A04(&__p, a1 + 8, &v27);
  if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_6:
    operator delete(v26.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_4;
    goto LABEL_7;
  }
  operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_6;
LABEL_3:
  if ((SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_4:
    __dst = v27.__pn_;
    goto LABEL_8;
  }
LABEL_7:
  sub_23941A7F8(&__dst, v27.__pn_.__r_.__value_.__l.__data_, v27.__pn_.__r_.__value_.__l.__size_);
LABEL_8:
  sub_2395ACAA8((uint64_t)&__dst, (char *)&v26);
  __p.__pn_ = v26;
  memset(&v26, 0, sizeof(v26));
  std::__fs::filesystem::__status(&__p, 0);
  if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_10;
LABEL_16:
    operator delete(v26.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_11;
LABEL_17:
    operator delete(__dst.__r_.__value_.__l.__data_);
    goto LABEL_11;
  }
  operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_16;
LABEL_10:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_17;
LABEL_11:
  if (v15.__pn_.__r_.__value_.__s.__data_[0] != 255 && v15.__pn_.__r_.__value_.__s.__data_[0])
    goto LABEL_23;
  if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0)
    sub_23941A7F8(&v15, v27.__pn_.__r_.__value_.__l.__data_, v27.__pn_.__r_.__value_.__l.__size_);
  else
    v15 = v27;
  sub_2395ACAA8((uint64_t)&v15, (char *)&__dst);
  v26 = __dst;
  memset(&__dst, 0, sizeof(__dst));
  v13 = *(_OWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 48);
  sub_239B98D48((uint64_t)&__p, v5, (uint64_t)&v26, &v13);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_21;
LABEL_32:
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v15.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_22:
      if (v25)
        goto LABEL_23;
LABEL_34:
      if (v24)
      {
        if (v23)
        {
          if (v22 < 0)
            operator delete(v21);
          if (v20 < 0)
            operator delete(v19);
        }
        if (v18 && v17 < 0)
          operator delete((void *)__p.__pn_.__r_.__value_.__r.__words[2]);
      }
      v9 = 0;
      if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_24;
      goto LABEL_25;
    }
    goto LABEL_33;
  }
  operator delete(v26.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_32;
LABEL_21:
  if ((SHIBYTE(v15.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_22;
LABEL_33:
  operator delete(v15.__pn_.__r_.__value_.__l.__data_);
  if (!v25)
    goto LABEL_34;
LABEL_23:
  v9 = 1;
  if (SHIBYTE(v27.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_24:
    operator delete(v27.__pn_.__r_.__value_.__l.__data_);
LABEL_25:
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v9;
}

void sub_239B9E978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  std::__shared_weak_count *v25;
  uint64_t v26;
  unint64_t *p_shared_owners;
  unint64_t v29;

  if (*(char *)(v26 - 81) < 0)
    operator delete(*(void **)(v26 - 104));
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v29 = __ldaxr(p_shared_owners);
    while (__stlxr(v29 - 1, p_shared_owners));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239B9EAB8(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF98A0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239B9EAF4(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF98A0;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

char *sub_239B9EB40(uint64_t a1)
{
  char *v2;
  _BYTE *v3;

  v2 = (char *)operator new(0x38uLL);
  *(_QWORD *)v2 = off_250AF98A0;
  v3 = v2 + 8;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v2 + 6) = *(_QWORD *)(a1 + 48);
  return v2;
}

void sub_239B9EBB0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_239B9EBC4(uint64_t a1, __n128 *a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __n128 result;

  a2->n128_u64[0] = (unint64_t)off_250AF98A0;
  v4 = &a2->n128_u8[8];
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a1 + 8);
    a2[1].n128_u64[1] = *(_QWORD *)(a1 + 24);
    *(_OWORD *)v4 = v5;
  }
  result = *(__n128 *)(a1 + 32);
  a2[3].n128_u64[0] = *(_QWORD *)(a1 + 48);
  a2[2] = result;
  return result;
}

void sub_239B9EC2C(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239B9EC40(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

void sub_239B9EC70(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  std::string *v5;
  std::string::size_type v6;
  char v7;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  std::__fs::filesystem::path __dst;
  std::__fs::filesystem::path __p;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  std::string v22;
  std::__fs::filesystem::path v23;
  std::string v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  std::to_string(&v22, *a2);
  v5 = std::string::append(&v22, ".jpg");
  v6 = v5->__r_.__value_.__r.__words[0];
  v24.__r_.__value_.__r.__words[0] = v5->__r_.__value_.__l.__size_;
  *(std::string::size_type *)((char *)v24.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v5->__r_.__value_.__r.__words[1] + 7);
  v7 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  *(std::string::size_type *)((char *)&__p.__pn_.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v24.__r_.__value_.__r.__words + 7);
  __p.__pn_.__r_.__value_.__r.__words[0] = v6;
  __p.__pn_.__r_.__value_.__l.__size_ = v24.__r_.__value_.__r.__words[0];
  *((_BYTE *)&__p.__pn_.__r_.__value_.__s + 23) = v7;
  sub_239498A04(&__p, a1 + 8, &v23);
  if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_6:
    operator delete(v22.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v23.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_4;
    goto LABEL_7;
  }
  operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_6;
LABEL_3:
  if ((SHIBYTE(v23.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_4:
    __dst = v23;
    goto LABEL_8;
  }
LABEL_7:
  sub_23941A7F8(&__dst, v23.__pn_.__r_.__value_.__l.__data_, v23.__pn_.__r_.__value_.__l.__size_);
LABEL_8:
  sub_2395ACAA8((uint64_t)&__dst, (char *)&v24);
  v22 = v24;
  memset(&v24, 0, sizeof(v24));
  v12 = *(_OWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 48);
  sub_239B99A4C((uint64_t)&__p, (uint64_t)&v22, &v12);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v22.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_10:
      if ((SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_11;
LABEL_15:
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if (v21)
        goto LABEL_12;
      goto LABEL_16;
    }
  }
  else if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_10;
  }
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_15;
LABEL_11:
  if (v21)
  {
LABEL_12:
    sub_239B0F55C((uint64_t)&__p);
    v8 = operator new(0x70uLL);
    v8[1] = 0;
    v8[2] = 0;
    *v8 = &off_250ADB878;
    v8[3] = &off_250ADB628;
    v9 = *(_OWORD *)&__p.__pn_.__r_.__value_.__r.__words[1];
    *(_OWORD *)&__p.__pn_.__r_.__value_.__r.__words[1] = 0uLL;
    v10 = v16;
    *((_OWORD *)v8 + 2) = v9;
    *((_OWORD *)v8 + 3) = v10;
    v11 = v18;
    *((_OWORD *)v8 + 4) = v17;
    *((_OWORD *)v8 + 5) = v11;
    v8[12] = v19;
    *((_WORD *)v8 + 52) = v20;
    *a3 = v8 + 3;
    a3[1] = v8;
    goto LABEL_17;
  }
LABEL_16:
  *a3 = 0;
  a3[1] = 0;
LABEL_17:
  sub_239AA557C((uint64_t)&__p);
  if (SHIBYTE(v23.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__pn_.__r_.__value_.__l.__data_);
}

void sub_239B9EE9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  if (*(char *)(v25 - 65) < 0)
  {
    operator delete(*(void **)(v25 - 88));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239B9EF78(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9868;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B9EF88(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9868;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B9EFB8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 40);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v4)
    operator delete(v4);
}

void sub_239B9F008(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9830;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B9F018(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9830;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B9F048(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 40);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v4)
    operator delete(v4);
}

void sub_239B9F098(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF97F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B9F0A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF97F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B9F0D8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 40);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v4)
    operator delete(v4);
}

void sub_239B9F128(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF97C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B9F138(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF97C0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B9F168(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  void *v5;

  v2 = *(_QWORD **)(a1 + 40);
  if (v2)
  {
    do
    {
      v4 = (_QWORD *)*v2;
      v5 = (void *)v2[3];
      if (v5)
      {
        v2[4] = v5;
        operator delete(v5);
      }
      operator delete(v2);
      v2 = v4;
    }
    while (v4);
  }
  v3 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v3)
    operator delete(v3);
}

void sub_239B9F1DC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9750;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B9F1EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9750;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B9F21C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  sub_239A61848(a1 + 40);
  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
}

void sub_239B9F284(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9718;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239B9F294(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF9718;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239B9F2C4(_QWORD *a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;

  v2 = (void *)a1[19];
  if (v2)
  {
    a1[20] = v2;
    operator delete(v2);
  }
  v3 = (std::__shared_weak_count *)a1[16];
  if (!v3)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (!v5)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    v6 = (std::__shared_weak_count *)a1[14];
    if (!v6)
      goto LABEL_13;
  }
  else
  {
LABEL_7:
    v6 = (std::__shared_weak_count *)a1[14];
    if (!v6)
      goto LABEL_13;
  }
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_13:
  v9 = (std::__shared_weak_count *)a1[12];
  if (!v9)
    goto LABEL_17;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    v12 = (std::__shared_weak_count *)a1[10];
    if (!v12)
      goto LABEL_23;
  }
  else
  {
LABEL_17:
    v12 = (std::__shared_weak_count *)a1[10];
    if (!v12)
      goto LABEL_23;
  }
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
LABEL_23:
  v15 = (std::__shared_weak_count *)a1[8];
  if (!v15)
    goto LABEL_27;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    v18 = (std::__shared_weak_count *)a1[6];
    if (!v18)
      goto LABEL_33;
  }
  else
  {
LABEL_27:
    v18 = (std::__shared_weak_count *)a1[6];
    if (!v18)
      goto LABEL_33;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
LABEL_33:
  v21 = (std::__shared_weak_count *)a1[4];
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
}

void sub_239B9F4AC()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239B9F4C0(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_250AF9270;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_239B9F500(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF9270;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_239B9F528(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  std::__shared_weak_count *v4;
  _QWORD *v5;
  _QWORD *v6;
  int8x8_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void **v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  std::ios_base *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  std::ios_base *v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  void *__dst[2];
  void *v39;
  void *v40[2];
  uint64_t v41;
  void *v42[2];
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  void *v46;
  char v47;
  __int128 v48;
  void *v49;
  void *v50;
  void *v51[2];
  void *v52;
  char v53;
  char v54;
  char v55;
  const void *v56[4];
  void *v57[3];
  void *v58[2];
  char v59;
  char v60;
  void *v61;
  char v62;
  void *v63;
  char v64;
  char v65;
  char v66;
  __int128 v67;
  __int128 v68;
  void *v69;
  char v70;
  __int128 v71;
  void *v72;
  void *v73;
  __int128 v74;
  void *v75;
  char v76;
  char v77;
  void *v78[2];
  unsigned __int8 v79;
  char v80;
  void *v81;
  char v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  void *v87;
  char v88;
  __int128 v89;
  void *v90;
  void *v91;
  __int128 v92;
  void *v93;
  char v94;
  char v95;
  char v96;
  __int128 v97;
  __int128 __p;
  void *v99;
  char v100;
  __int128 v101;
  void *v102;
  void *v103[4];
  int v104;
  uint64_t v105[19];
  uint64_t v106;
  _BYTE v107[408];
  _QWORD v108[22];

  v108[19] = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD **)a2;
  v4 = *(std::__shared_weak_count **)(a2 + 8);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v6 = *(_QWORD **)(a1 + 8);
  v7 = (int8x8_t)v6[1];
  if (!*(_QWORD *)&v7)
    goto LABEL_21;
  v8 = *a3;
  v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = *a3;
    if (*(_QWORD *)&v7 <= v8)
      v10 = v8 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v8;
  }
  v11 = *(_QWORD **)(*v6 + 8 * v10);
  if (!v11 || (v12 = (_QWORD *)*v11) == 0)
  {
LABEL_21:
    v16 = 0;
    goto LABEL_22;
  }
  if (v9.u32[0] < 2uLL)
  {
    v13 = *(_QWORD *)&v7 - 1;
    while (1)
    {
      v15 = v12[1];
      if (v15 == v8)
      {
        if (v12[2] == v8)
          goto LABEL_28;
      }
      else if ((v15 & v13) != v10)
      {
        goto LABEL_21;
      }
      v12 = (_QWORD *)*v12;
      if (!v12)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v14 = v12[1];
    if (v14 == v8)
      break;
    if (v14 >= *(_QWORD *)&v7)
      v14 %= *(_QWORD *)&v7;
    if (v14 != v10)
      goto LABEL_21;
LABEL_11:
    v12 = (_QWORD *)*v12;
    if (!v12)
      goto LABEL_21;
  }
  if (v12[2] != v8)
    goto LABEL_11;
LABEL_28:
  v20 = (void **)sub_2396B8B20(v6, v8);
  if (*((char *)v20 + 23) < 0)
  {
    sub_23941A7F8(__dst, *v20, (unint64_t)v20[1]);
  }
  else
  {
    v21 = *(_OWORD *)v20;
    v39 = v20[2];
    *(_OWORD *)__dst = v21;
  }
  sub_2395ACAA8((uint64_t)__dst, (char *)v40);
  *(_OWORD *)v42 = *(_OWORD *)v40;
  v43 = v41;
  v40[1] = 0;
  v41 = 0;
  v40[0] = 0;
  v36 = *(_OWORD *)(a1 + 16);
  v37 = *(_QWORD *)(a1 + 32);
  v22 = MEMORY[0x24BEDB840];
  v23 = MEMORY[0x24BEDB840] + 64;
  v24 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v25 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v26 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v108[0] = MEMORY[0x24BEDB840] + 64;
  v106 = v25;
  *(_QWORD *)&v107[*(_QWORD *)(v25 - 24) - 8] = v26;
  v27 = (std::ios_base *)&v107[*(_QWORD *)(v106 - 24) - 8];
  std::ios_base::init(v27, v107);
  v27[1].__vftable = 0;
  v27[1].__fmtflags_ = -1;
  v106 = v22 + 24;
  v108[0] = v23;
  MEMORY[0x23B83DC80](v107);
  std::ofstream::open();
  if ((v107[*(_QWORD *)(v106 - 24) + 24] & 5) != 0)
  {
    sub_239618F08(&v85, "Failure during saving image file");
    LOBYTE(v93) = 1;
    sub_239616578(5u, &v85, (uint64_t)&v97);
    v44 = v97;
    LOBYTE(v45) = 0;
    v54 = 0;
    if (LOBYTE(v105[0]))
    {
      v47 = 0;
      if (v100)
      {
        v45 = __p;
        v46 = v99;
        v99 = 0;
        __p = 0uLL;
        v47 = 1;
      }
      LOBYTE(v48) = 0;
      v53 = 0;
      if ((_BYTE)v104)
      {
        v49 = v102;
        v48 = v101;
        v101 = 0uLL;
        v50 = v103[0];
        *(_OWORD *)v51 = *(_OWORD *)&v103[1];
        v52 = v103[3];
        v102 = 0;
        memset(&v103[1], 0, 24);
        v53 = 1;
      }
      v54 = 1;
      v55 = 0;
      if (v100 && SHIBYTE(v99) < 0)
        operator delete((void *)__p);
    }
    else
    {
      v55 = 0;
    }
    if ((_BYTE)v93)
    {
      if (BYTE8(v92))
      {
        if (SBYTE7(v92) < 0)
          operator delete(v90);
        if (SBYTE7(v89) < 0)
          operator delete(v87);
      }
      if (BYTE8(v86) && SBYTE7(v86) < 0)
        operator delete((void *)v85);
    }
    goto LABEL_89;
  }
  HIBYTE(v56[2]) = 18;
  strcpy((char *)v56, "CorePhotogrammetry");
  sub_2395AC84C(v56, v57);
  v28 = MEMORY[0x24BEDB870];
  v29 = MEMORY[0x24BEDB870] + 64;
  v30 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
  v31 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  v105[0] = MEMORY[0x24BEDB870] + 64;
  *(_QWORD *)&v97 = v30;
  *(_QWORD *)((char *)&v97 + *(_QWORD *)(v30 - 24)) = v31;
  v32 = (std::ios_base *)((char *)&v97 + *(_QWORD *)(v97 - 24));
  std::ios_base::init(v32, (char *)&v97 + 8);
  v32[1].__vftable = 0;
  v32[1].__fmtflags_ = -1;
  *(_QWORD *)&v97 = v28 + 24;
  v105[0] = v29;
  std::streambuf::basic_streambuf();
  v33 = MEMORY[0x24BEDB848];
  *((_QWORD *)&v97 + 1) = MEMORY[0x24BEDB848] + 16;
  memset(v103, 0, sizeof(v103));
  v104 = 16;
  v83 = v36;
  v84 = v37;
  sub_23961EC8C(v5, &v97, 5, (uint64_t)&v85);
  if (v96)
  {
    std::stringbuf::str();
    sub_2395ABE70((const void **)&v81, (uint64_t)v57, (uint64_t)v78);
    if (v80)
    {
      if ((v79 & 0x80u) == 0)
        v34 = v78;
      else
        v34 = (void **)v78[0];
      if ((v79 & 0x80u) == 0)
        v35 = v79;
      else
        v35 = (uint64_t)v78[1];
      sub_239458500(&v106, (uint64_t)v34, v35);
      v55 = 1;
    }
    else
    {
      sub_239618F08(v58, "Failure during saving image file");
      v66 = 1;
      sub_239616578(5u, (__int128 *)v58, (uint64_t)&v67);
      v44 = v67;
      LOBYTE(v45) = 0;
      v54 = 0;
      if (v77)
      {
        v47 = 0;
        if (v70)
        {
          v45 = v68;
          v46 = v69;
          v69 = 0;
          v68 = 0uLL;
          v47 = 1;
        }
        LOBYTE(v48) = 0;
        v53 = 0;
        if (v76)
        {
          v49 = v72;
          v48 = v71;
          v71 = 0uLL;
          v50 = v73;
          *(_OWORD *)v51 = v74;
          v52 = v75;
          v72 = 0;
          v74 = 0uLL;
          v75 = 0;
          v53 = 1;
        }
        v54 = 1;
        v55 = 0;
        if (v70 && SHIBYTE(v69) < 0)
          operator delete((void *)v68);
      }
      else
      {
        v55 = 0;
      }
      if (v66)
      {
        if (v65)
        {
          if (v64 < 0)
            operator delete(v63);
          if (v62 < 0)
            operator delete(v61);
        }
        if (v60 && v59 < 0)
          operator delete(v58[0]);
      }
    }
    if (v80 && (char)v79 < 0)
      operator delete(v78[0]);
    if (v82 < 0)
      operator delete(v81);
    if (v96 || !v95)
      goto LABEL_81;
LABEL_73:
    if (v94)
    {
      if (SHIBYTE(v93) < 0)
        operator delete((void *)v92);
      if (SHIBYTE(v90) < 0)
        operator delete((void *)v89);
    }
    if (v88 && SHIBYTE(v87) < 0)
      operator delete((void *)v86);
  }
  else
  {
    v55 = 0;
    v44 = v85;
    LOBYTE(v45) = 0;
    v54 = 0;
    if (v95)
    {
      v47 = 0;
      if (v88)
      {
        v45 = v86;
        v46 = v87;
        v87 = 0;
        v86 = 0uLL;
        v47 = 1;
      }
      LOBYTE(v48) = 0;
      v53 = 0;
      if (v94)
      {
        v49 = v90;
        v48 = v89;
        v89 = 0uLL;
        v50 = v91;
        *(_OWORD *)v51 = v92;
        v52 = v93;
        v90 = 0;
        v92 = 0uLL;
        v93 = 0;
        v53 = 1;
      }
      v54 = 1;
      goto LABEL_73;
    }
  }
LABEL_81:
  *(_QWORD *)&v97 = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)&v97 + *(_QWORD *)(v97 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  *((_QWORD *)&v97 + 1) = v33 + 16;
  if (SHIBYTE(v103[2]) < 0)
    operator delete(v103[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v105);
  if (v57[0])
  {
    v57[1] = v57[0];
    operator delete(v57[0]);
  }
  if (SHIBYTE(v56[2]) < 0)
    operator delete((void *)v56[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)&v107[*(_QWORD *)(v106 - 24) - 8], *(_DWORD *)&v107[*(_QWORD *)(v106 - 24) + 24] | 4);
LABEL_89:
  v106 = *v24;
  *(_QWORD *)&v107[*(_QWORD *)(v106 - 24) - 8] = v24[3];
  MEMORY[0x23B83DC8C](v107);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v108);
  if (SHIBYTE(v43) < 0)
  {
    operator delete(v42[0]);
    if (SHIBYTE(v41) < 0)
      goto LABEL_103;
LABEL_91:
    if (SHIBYTE(v39) < 0)
LABEL_104:
      operator delete(__dst[0]);
  }
  else
  {
    if ((SHIBYTE(v41) & 0x80000000) == 0)
      goto LABEL_91;
LABEL_103:
    operator delete(v40[0]);
    if (SHIBYTE(v39) < 0)
      goto LABEL_104;
  }
  v16 = v55 != 0;
  if (!v55 && v54)
  {
    if (v53)
    {
      if (SHIBYTE(v52) < 0)
        operator delete(v51[0]);
      if (SHIBYTE(v49) < 0)
        operator delete((void *)v48);
    }
    if (v47 && SHIBYTE(v46) < 0)
      operator delete((void *)v45);
  }
LABEL_22:
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v16;
}

void sub_239B9FE38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,char a60)
{
  std::__shared_weak_count *v60;
  unint64_t *p_shared_owners;
  unint64_t v63;

  sub_239523188((uint64_t)&a60);
  if (LOBYTE(STACK[0x230]) && SLOBYTE(STACK[0x22F]) < 0)
    operator delete((void *)STACK[0x218]);
  if (SLOBYTE(STACK[0x24F]) < 0)
    operator delete((void *)STACK[0x238]);
  sub_239522F50((uint64_t)&STACK[0x268]);
  sub_239A90B68((uint64_t)&STACK[0x2E8]);
  if (a57)
    operator delete(a57);
  if (a55 < 0)
    operator delete(a50);
  sub_23955C978(&STACK[0x3F0]);
  if (a32 < 0)
  {
    operator delete(a27);
    if ((a26 & 0x80000000) == 0)
      goto LABEL_12;
  }
  else if ((a26 & 0x80000000) == 0)
  {
LABEL_12:
    if (a20 < 0)
      goto LABEL_13;
    goto LABEL_17;
  }
  operator delete(a21);
  if (a20 < 0)
  {
LABEL_13:
    operator delete(a15);
    if (!v60)
      goto LABEL_22;
    goto LABEL_18;
  }
LABEL_17:
  if (!v60)
    goto LABEL_22;
LABEL_18:
  p_shared_owners = (unint64_t *)&v60->__shared_owners_;
  do
    v63 = __ldaxr(p_shared_owners);
  while (__stlxr(v63 - 1, p_shared_owners));
  if (!v63)
  {
    ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
    std::__shared_weak_count::__release_weak(v60);
    _Unwind_Resume(a1);
  }
LABEL_22:
  _Unwind_Resume(a1);
}

void sub_239B9FFF4()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239BA0008(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_250AF9228;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_239BA0048(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF9228;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239BA0070@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  uint64_t result;
  void **v7;
  __int128 v8;
  _QWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  void *__dst[2];
  void *v16;
  void *v17[2];
  uint64_t v18;
  void *__p[2];
  uint64_t v20;
  char v21[8];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int16 v27;
  char v28;

  v5 = *a2;
  result = sub_2396B8F48(*(_QWORD **)(a1 + 8), *a2);
  if ((result & 1) == 0)
  {
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  v7 = (void **)sub_2396B8B20(*(_QWORD **)(a1 + 8), v5);
  if (*((char *)v7 + 23) < 0)
  {
    sub_23941A7F8(__dst, *v7, (unint64_t)v7[1]);
  }
  else
  {
    v8 = *(_OWORD *)v7;
    v16 = v7[2];
    *(_OWORD *)__dst = v8;
  }
  sub_2395ACAA8((uint64_t)__dst, (char *)v17);
  *(_OWORD *)__p = *(_OWORD *)v17;
  v20 = v18;
  v17[1] = 0;
  v18 = 0;
  v17[0] = 0;
  v13 = *(_OWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 32);
  sub_239B928A0((uint64_t)v21, (uint64_t)__p, &v13);
  if (SHIBYTE(v20) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v16) & 0x80000000) == 0)
        goto LABEL_9;
LABEL_13:
      operator delete(__dst[0]);
      if (v28)
        goto LABEL_10;
LABEL_14:
      *a3 = 0;
      a3[1] = 0;
      return sub_239AA557C((uint64_t)v21);
    }
  }
  else if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  operator delete(v17[0]);
  if (SHIBYTE(v16) < 0)
    goto LABEL_13;
LABEL_9:
  if (!v28)
    goto LABEL_14;
LABEL_10:
  sub_239AA5614((uint64_t)v21);
  v9 = operator new(0x70uLL);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = &off_250B02130;
  v9[3] = &off_250ADD920;
  v10 = v22;
  v22 = 0uLL;
  v11 = v23;
  *((_OWORD *)v9 + 2) = v10;
  *((_OWORD *)v9 + 3) = v11;
  v12 = v25;
  *((_OWORD *)v9 + 4) = v24;
  *((_OWORD *)v9 + 5) = v12;
  v9[12] = v26;
  *((_WORD *)v9 + 52) = v27;
  *a3 = v9 + 3;
  a3[1] = v9;
  return sub_239AA557C((uint64_t)v21);
}

void sub_239BA01F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,char a32)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a18 & 0x80000000) == 0)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(a13);
      _Unwind_Resume(exception_object);
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a18 & 0x80000000) == 0)
    goto LABEL_8;
  goto LABEL_7;
}

_QWORD *sub_239BA026C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF9160;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239BA02C8(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF9160;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA0334(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF9160;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239BA03B0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239BA03C4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF9160;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239BA043C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239BA0470(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239BA04C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  _QWORD v8[3];
  _QWORD *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a1 + 32;
  v2 = *(_QWORD *)(a1 + 32);
  v4 = (_QWORD *)(*(_QWORD *)(v3 + 8) + 176);
  if (v2)
  {
    v5 = a1 + 8;
    if (v2 == v5)
    {
      v9 = v8;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v5 + 24))(v5, v8);
    }
    else
    {
      v9 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
    }
  }
  else
  {
    v9 = 0;
  }
  sub_239B6B4D8(v8, v4);
  result = v9;
  if (v9 == v8)
  {
    v7 = 4;
    result = v8;
  }
  else
  {
    if (!v9)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

_QWORD *sub_239BA059C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF9118;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239BA05F8(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF9118;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA0664(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF9118;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239BA06E0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239BA06F4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF9118;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239BA076C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239BA07A0(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239BA07F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  _QWORD v8[3];
  _QWORD *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a1 + 32;
  v2 = *(_QWORD *)(a1 + 32);
  v4 = (_QWORD *)(*(_QWORD *)(v3 + 8) + 144);
  if (v2)
  {
    v5 = a1 + 8;
    if (v2 == v5)
    {
      v9 = v8;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v5 + 24))(v5, v8);
    }
    else
    {
      v9 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
    }
  }
  else
  {
    v9 = 0;
  }
  sub_239B03E2C(v8, v4);
  result = v9;
  if (v9 == v8)
  {
    v7 = 4;
    result = v8;
  }
  else
  {
    if (!v9)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239BA08D0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239BA08F4(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  int *v3;
  BOOL v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  BOOL v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  int8x8_t v35;
  uint8x8_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  int8x8_t v43;
  uint8x8_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t *v79;
  __int128 v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  __int128 v90;
  char v91;
  __int128 v92;
  __int128 v93;
  char v94;
  _BYTE v95[24];
  _BYTE *v96;
  _BYTE v97[24];
  _BYTE *v98;
  _QWORD v99[3];
  _QWORD *v100;
  _BYTE v101[24];
  _BYTE *v102;
  _BYTE v103[24];
  _BYTE *v104;
  _BYTE v105[24];
  _BYTE *v106;
  uint64_t v107;

  v107 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned int **)(v1 + 288);
  if (v2)
  {
    sub_239BA1650((uint64_t)&v93, v2);
    v3 = (int *)v93;
    if ((_QWORD)v93)
      v4 = v94 == 0;
    else
      v4 = 1;
    if (!v4)
    {
      v8 = (_QWORD *)(v1 + 304);
      while (2)
      {
        v10 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
        *(_QWORD *)&v92 = v3;
        *((_QWORD *)&v92 + 1) = *((_QWORD *)&v93 + 1);
        if (*((_QWORD *)&v93 + 1))
        {
          v11 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        v13 = *v3;
        switch(*v3)
        {
          case 0:
            if (v10)
            {
              p_shared_owners = (unint64_t *)&v10->__shared_owners_;
              do
                v15 = __ldxr(p_shared_owners);
              while (__stxr(v15 + 1, p_shared_owners));
              v16 = *((_QWORD *)v3 + 1);
              do
                v17 = __ldxr(p_shared_owners);
              while (__stxr(v17 + 1, p_shared_owners));
            }
            else
            {
              v16 = *((_QWORD *)v3 + 1);
            }
            v106 = 0;
            v50 = operator new(0x20uLL);
            *v50 = &off_250AF8EA0;
            v50[1] = v3;
            v50[2] = v10;
            v50[3] = v1;
            v106 = v50;
            v51 = sub_239BA1848(v1, v16, (uint64_t)v105);
            v52 = v106;
            if (v106 == v105)
            {
              v52 = v105;
              v53 = 4;
            }
            else
            {
              if (!v106)
                goto LABEL_82;
              v53 = 5;
            }
            (*(void (**)(void))(*v52 + 8 * v53))();
LABEL_82:
            if ((v51 & 1) == 0)
              sub_239B05644(*(unsigned int **)(v1 + 288), &v92);
            if (v10)
            {
              v58 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v58);
              while (__stlxr(v59 - 1, v58));
              goto LABEL_166;
            }
            goto LABEL_168;
          case 1:
            if (v10)
            {
              v29 = (unint64_t *)&v10->__shared_owners_;
              do
                v30 = __ldxr(v29);
              while (__stxr(v30 + 1, v29));
              v31 = *((unsigned __int8 *)v3 + 72);
              v32 = *((_QWORD *)v3 + 6);
              do
                v33 = __ldxr(v29);
              while (__stxr(v33 + 1, v29));
              if (!v31)
              {
LABEL_77:
                v104 = 0;
                v54 = operator new(0x20uLL);
                *v54 = &off_250AF8F68;
                v54[1] = v3;
                v54[2] = v10;
                v54[3] = v1;
                v104 = v54;
                v55 = sub_239BA1848(v1, v32, (uint64_t)v103);
                v56 = v104;
                if (v104 == v103)
                {
                  v56 = v103;
                  v57 = 4;
LABEL_160:
                  (*(void (**)(void))(*v56 + 8 * v57))();
                }
                else if (v104)
                {
                  v57 = 5;
                  goto LABEL_160;
                }
                if ((v55 & 1) == 0)
                  sub_239B05644(*(unsigned int **)(v1 + 288), &v92);
                goto LABEL_163;
              }
            }
            else
            {
              v32 = *((_QWORD *)v3 + 6);
              if (!*((_BYTE *)v3 + 72))
                goto LABEL_77;
            }
            v102 = 0;
            v34 = operator new(0x20uLL);
            *v34 = &off_250AF8F68;
            v34[1] = v3;
            v34[2] = v10;
            v34[3] = v1;
            v102 = v34;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v35 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v35)
              goto LABEL_151;
            v36 = (uint8x8_t)vcnt_s8(v35);
            v36.i16[0] = vaddlv_u8(v36);
            if (v36.u32[0] > 1uLL)
            {
              v37 = v32;
              if (*(_QWORD *)&v35 <= v32)
                v37 = v32 % *(_QWORD *)&v35;
            }
            else
            {
              v37 = (*(_QWORD *)&v35 - 1) & v32;
            }
            v71 = *(_QWORD **)(*v8 + 8 * v37);
            if (!v71 || (v72 = (_QWORD *)*v71) == 0)
            {
LABEL_151:
              v76 = 0;
              goto LABEL_152;
            }
            if (v36.u32[0] < 2uLL)
            {
              v73 = *(_QWORD *)&v35 - 1;
              while (1)
              {
                v75 = v72[1];
                if (v75 == v32)
                {
                  if (v72[2] == v32)
                    goto LABEL_184;
                }
                else if ((v75 & v73) != v37)
                {
                  goto LABEL_151;
                }
                v72 = (_QWORD *)*v72;
                if (!v72)
                  goto LABEL_151;
              }
            }
            while (1)
            {
              v74 = v72[1];
              if (v74 == v32)
                break;
              if (v74 >= *(_QWORD *)&v35)
                v74 %= *(_QWORD *)&v35;
              if (v74 != v37)
                goto LABEL_151;
LABEL_141:
              v72 = (_QWORD *)*v72;
              if (!v72)
                goto LABEL_151;
            }
            if (v72[2] != v32)
              goto LABEL_141;
LABEL_184:
            if (!v102)
              sub_2394172E0();
            (*(void (**)(_BYTE *))(*(_QWORD *)v102 + 48))(v102);
            v76 = 1;
LABEL_152:
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v77 = v102;
            if (v102 == v101)
            {
              v77 = v101;
              v78 = 4;
LABEL_156:
              (*(void (**)(void))(*v77 + 8 * v78))();
            }
            else if (v102)
            {
              v78 = 5;
              goto LABEL_156;
            }
            if ((v76 & 1) == 0)
            {
              sub_239A444D4((uint64_t)"unknown file", 793, (uint64_t)"", (void (*)(void *))sub_239A4463C);
              sub_239A4475C();
              abort();
            }
LABEL_163:
            if (v10)
            {
              v79 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v79);
              while (__stlxr(v59 - 1, v79));
              goto LABEL_166;
            }
LABEL_168:
            sub_239BA1650((uint64_t)&v90, *(unsigned int **)(v1 + 288));
            v80 = v90;
            v90 = 0uLL;
            v81 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
            v93 = v80;
            if (v81)
            {
              v82 = (unint64_t *)&v81->__shared_owners_;
              do
                v83 = __ldaxr(v82);
              while (__stlxr(v83 - 1, v82));
              if (!v83)
              {
                ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                std::__shared_weak_count::__release_weak(v81);
              }
            }
            v94 = v91;
            v84 = (std::__shared_weak_count *)*((_QWORD *)&v90 + 1);
            if (!*((_QWORD *)&v90 + 1))
              goto LABEL_177;
            v85 = (unint64_t *)(*((_QWORD *)&v90 + 1) + 8);
            do
              v86 = __ldaxr(v85);
            while (__stlxr(v86 - 1, v85));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
              std::__shared_weak_count::__release_weak(v84);
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
              {
LABEL_178:
                v88 = (unint64_t *)&v87->__shared_owners_;
                do
                  v89 = __ldaxr(v88);
                while (__stlxr(v89 - 1, v88));
                if (!v89)
                {
                  ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                  std::__shared_weak_count::__release_weak(v87);
                }
              }
            }
            else
            {
LABEL_177:
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
                goto LABEL_178;
            }
            v3 = (int *)v93;
            if ((_QWORD)v93)
              v9 = v94 == 0;
            else
              v9 = 1;
            if (v9)
              break;
            continue;
          case 2:
            if (v10)
            {
              v24 = (unint64_t *)&v10->__shared_owners_;
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              v26 = *((_QWORD *)v3 + 14);
              do
                v27 = __ldxr(v24);
              while (__stxr(v27 + 1, v24));
            }
            else
            {
              v26 = *((_QWORD *)v3 + 14);
            }
            v100 = 0;
            v42 = operator new(0x20uLL);
            *v42 = &off_250AF8FF8;
            v42[1] = v3;
            v42[2] = v10;
            v42[3] = v1;
            v100 = v42;
            *(_QWORD *)&v90 = v26;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v43 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v43)
              goto LABEL_122;
            v44 = (uint8x8_t)vcnt_s8(v43);
            v44.i16[0] = vaddlv_u8(v44);
            if (v44.u32[0] > 1uLL)
            {
              v45 = v26;
              if (*(_QWORD *)&v43 <= v26)
                v45 = v26 % *(_QWORD *)&v43;
            }
            else
            {
              v45 = (*(_QWORD *)&v43 - 1) & v26;
            }
            v62 = *(_QWORD **)(*v8 + 8 * v45);
            if (!v62)
              goto LABEL_122;
            v63 = (_QWORD *)*v62;
            if (!v63)
              goto LABEL_122;
            if (v44.u32[0] < 2uLL)
            {
              v64 = *(_QWORD *)&v43 - 1;
              while (1)
              {
                v66 = v63[1];
                if (v66 == v26)
                {
                  if (v63[2] == v26)
                    goto LABEL_121;
                }
                else if ((v66 & v64) != v45)
                {
                  goto LABEL_122;
                }
                v63 = (_QWORD *)*v63;
                if (!v63)
                  goto LABEL_122;
              }
            }
            while (1)
            {
              v65 = v63[1];
              if (v65 == v26)
              {
                if (v63[2] == v26)
                {
LABEL_121:
                  v67 = 0;
                  goto LABEL_123;
                }
              }
              else
              {
                if (v65 >= *(_QWORD *)&v43)
                  v65 %= *(_QWORD *)&v43;
                if (v65 != v45)
                {
LABEL_122:
                  sub_239465800(v1 + 304, (unint64_t *)&v90, &v90);
                  sub_239A7798C(*(_QWORD *)(v1 + 272), v99);
                  v67 = 1;
LABEL_123:
                  sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
                  v68 = v100;
                  if (v100 == v99)
                  {
                    v68 = v99;
                    v69 = 4;
LABEL_127:
                    (*(void (**)(void))(*v68 + 8 * v69))();
                  }
                  else if (v100)
                  {
                    v69 = 5;
                    goto LABEL_127;
                  }
                  if ((v67 & 1) == 0)
                    sub_239B05644(*(unsigned int **)(v1 + 288), &v92);
                  if (v10)
                  {
                    v70 = (unint64_t *)&v10->__shared_owners_;
                    do
                      v59 = __ldaxr(v70);
                    while (__stlxr(v59 - 1, v70));
                    goto LABEL_166;
                  }
                  goto LABEL_168;
                }
              }
              v63 = (_QWORD *)*v63;
              if (!v63)
                goto LABEL_122;
            }
          case 3:
            v90 = *(_OWORD *)(v1 + 208);
            v28 = *((_QWORD *)v3 + 24);
            if (v28)
              (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v28 + 48))(v28, &v90);
            goto LABEL_168;
          default:
            if (v13 != 99)
            {
              if (v13 != 100)
                goto LABEL_168;
              if (v10)
              {
                v18 = (unint64_t *)&v10->__shared_owners_;
                do
                  v19 = __ldxr(v18);
                while (__stxr(v19 + 1, v18));
                do
                  v20 = __ldxr(v18);
                while (__stxr(v20 + 1, v18));
              }
              v96 = 0;
              v46 = operator new(0x20uLL);
              *v46 = &off_250AF9088;
              v46[1] = v3;
              v46[2] = v10;
              v46[3] = v1;
              v96 = v46;
              sub_2397A1694((pthread_mutex_t *)(v1 + 344));
              v47 = *(_QWORD *)(v1 + 328);
              if (!v47)
              {
                if (!v96)
                  sub_2394172E0();
                (*(void (**)(_BYTE *))(*(_QWORD *)v96 + 48))(v96);
              }
              sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
              v48 = v96;
              if (v96 == v95)
              {
                v48 = v95;
                v49 = 4;
              }
              else
              {
                if (!v96)
                {
LABEL_98:
                  if (v47)
                    sub_239B05644(*(unsigned int **)(v1 + 288), &v92);
                  if (!v10)
                    goto LABEL_168;
                  v61 = (unint64_t *)&v10->__shared_owners_;
                  do
                    v59 = __ldaxr(v61);
                  while (__stlxr(v59 - 1, v61));
                  goto LABEL_166;
                }
                v49 = 5;
              }
              (*(void (**)(void))(*v48 + 8 * v49))();
              goto LABEL_98;
            }
            if (v10)
            {
              v21 = (unint64_t *)&v10->__shared_owners_;
              do
                v22 = __ldxr(v21);
              while (__stxr(v22 + 1, v21));
              do
                v23 = __ldxr(v21);
              while (__stxr(v23 + 1, v21));
            }
            v98 = 0;
            v38 = operator new(0x20uLL);
            *v38 = &off_250AF9040;
            v38[1] = v3;
            v38[2] = v10;
            v38[3] = v1;
            v98 = v38;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v39 = *(_QWORD *)(v1 + 328);
            if (!v39)
            {
              if (!v98)
                sub_2394172E0();
              (*(void (**)(_BYTE *))(*(_QWORD *)v98 + 48))(v98);
            }
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v40 = v98;
            if (v98 == v97)
            {
              v40 = v97;
              v41 = 4;
            }
            else
            {
              if (!v98)
              {
LABEL_90:
                if (v39)
                  sub_239B05644(*(unsigned int **)(v1 + 288), &v92);
                if (!v10)
                  goto LABEL_168;
                v60 = (unint64_t *)&v10->__shared_owners_;
                do
                  v59 = __ldaxr(v60);
                while (__stlxr(v59 - 1, v60));
LABEL_166:
                if (!v59)
                {
                  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
                  std::__shared_weak_count::__release_weak(v10);
                }
                goto LABEL_168;
              }
              v41 = 5;
            }
            (*(void (**)(void))(*v40 + 8 * v41))();
            goto LABEL_90;
        }
        break;
      }
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
    if (*((_QWORD *)&v93 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
}

void sub_239BA1204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char *a34)
{
  std::__shared_weak_count *v34;
  pthread_mutex_t *v35;
  char *v37;
  uint64_t v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;

  sub_2397A16B4(v35);
  v37 = a34;
  if (a34 == &a31)
  {
    v38 = 4;
    v37 = &a31;
  }
  else
  {
    if (!a34)
    {
LABEL_6:
      if (v34)
      {
        p_shared_owners = (unint64_t *)&v34->__shared_owners_;
        do
          v40 = __ldaxr(p_shared_owners);
        while (__stlxr(v40 - 1, p_shared_owners));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      if (a14)
      {
        v41 = (unint64_t *)&a14->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
          std::__shared_weak_count::__release_weak(a14);
        }
      }
      if (a16)
      {
        v43 = (unint64_t *)&a16->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
          std::__shared_weak_count::__release_weak(a16);
        }
      }
      _Unwind_Resume(a1);
    }
    v38 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v37 + 8 * v38))();
  goto LABEL_6;
}

uint64_t sub_239BA1650(uint64_t a1, unsigned int *a2)
{
  pthread_mutex_t *v4;
  __int128 v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v17;

  v4 = (pthread_mutex_t *)(a2 + 44);
  sub_2397A1694((pthread_mutex_t *)(a2 + 44));
  if (*((_QWORD *)a2 + 6))
  {
LABEL_4:
    v5 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                   + 16 * *((_QWORD *)a2 + 5));
    v17 = v5;
    if (*((_QWORD *)&v5 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
      v8 = *(std::__shared_weak_count **)(*(_QWORD *)(*((_QWORD *)a2 + 2)
                                                    + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                                        + 16 * *((_QWORD *)a2 + 5)
                                        + 8);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }
    v11 = *((_QWORD *)a2 + 6) - 1;
    v12 = *((_QWORD *)a2 + 5) + 1;
    *((_QWORD *)a2 + 5) = v12;
    *((_QWORD *)a2 + 6) = v11;
    if (v12 >= 0x200)
    {
      operator delete(**((void ***)a2 + 2));
      *((_QWORD *)a2 + 2) += 8;
      v11 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a2 + 5) -= 256;
    }
    if (v11 < *a2)
      pthread_cond_signal((pthread_cond_t *)(a2 + 20));
    *(_OWORD *)a1 = v17;
    if (*((_QWORD *)&v17 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v17 + 1) + 16))(*((_QWORD *)&v17 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v17 + 1));
      }
    }
    else
    {
      *(_BYTE *)(a1 + 16) = 1;
    }
  }
  else
  {
    while (!*((_BYTE *)a2 + 56))
    {
      ++*((_QWORD *)a2 + 9);
      pthread_cond_wait((pthread_cond_t *)(a2 + 32), v4);
      --*((_QWORD *)a2 + 9);
      if (*((_QWORD *)a2 + 6))
        goto LABEL_4;
    }
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
  return sub_2397A16B4(v4);
}

void sub_239BA181C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pthread_mutex_t *v9;

  sub_239A4D7C0((uint64_t)&a9);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_239BA1848(uint64_t a1, unint64_t a2, uint64_t a3)
{
  pthread_mutex_t *v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v7 = *(int8x8_t *)(a1 + 312);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8(v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v9 = a2;
      if (*(_QWORD *)&v7 <= a2)
        v9 = a2 % *(_QWORD *)&v7;
    }
    else
    {
      v9 = (*(_QWORD *)&v7 - 1) & a2;
    }
    v10 = *(_QWORD **)(*(_QWORD *)(a1 + 304) + 8 * v9);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (v11)
      {
        if (v8.u32[0] < 2uLL)
        {
          v12 = *(_QWORD *)&v7 - 1;
          while (1)
          {
            v14 = v11[1];
            if (v14 == a2)
            {
              if (v11[2] == a2)
                goto LABEL_21;
            }
            else if ((v14 & v12) != v9)
            {
              goto LABEL_22;
            }
            v11 = (_QWORD *)*v11;
            if (!v11)
              goto LABEL_22;
          }
        }
        do
        {
          v13 = v11[1];
          if (v13 == a2)
          {
            if (v11[2] == a2)
            {
LABEL_21:
              v15 = 0;
              goto LABEL_24;
            }
          }
          else
          {
            if (v13 >= *(_QWORD *)&v7)
              v13 %= *(_QWORD *)&v7;
            if (v13 != v9)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_22:
  v16 = *(_QWORD *)(a3 + 24);
  if (!v16)
    sub_2394172E0();
  (*(void (**)(uint64_t))(*(_QWORD *)v16 + 48))(v16);
  v15 = 1;
LABEL_24:
  sub_2397A16B4(v6);
  return v15;
}

void sub_239BA1988(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239BA19A0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF9088;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239BA1A04(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF9088;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA1A78(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF9088;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239BA1AD0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF9088;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239BA1B08(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239BA1B60(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239BA1BB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned __int16 i;
  uint64_t v27;
  uint64_t v29;
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  pthread_cond_t v37;
  pthread_cond_t v38;
  pthread_mutex_t v39;
  _BYTE v40[24];
  _BYTE *v41;
  uint64_t v42;

  v1 = a1;
  v42 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD **)(a1 + 24);
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_2397A1618(&v39);
  v30 = 0x7FFFFFFF;
  pthread_cond_init(&v37, 0);
  pthread_cond_init(&v38, 0);
  v3 = (_QWORD *)v2[3];
  if (!v3)
    goto LABEL_44;
  v29 = v1;
  v4 = 0;
  do
  {
    v6 = v3[2];
    v5 = v3[3];
    v7 = (std::__shared_weak_count *)v3[4];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }
    if (!v5 || !v2[25])
    {
      if (!v7)
        goto LABEL_4;
      goto LABEL_36;
    }
    if (v7)
    {
      v10 = (unint64_t *)&v7->__shared_owners_;
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
      v12 = v2[34];
      if (!*(_QWORD *)(v12 + 272))
      {
LABEL_50:
        sub_239A444D4((uint64_t)"unknown file", 546, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v13 = (unint64_t *)&v7->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v15 = *(unsigned int **)(v12 + 272);
      do
        v16 = __ldxr(v13);
      while (__stxr(v16 + 1, v13));
    }
    else
    {
      v15 = *(unsigned int **)(v2[34] + 272);
      if (!v15)
        goto LABEL_50;
    }
    v41 = 0;
    v17 = operator new(0x38uLL);
    *v17 = &off_250AF90D0;
    v17[1] = v6;
    v17[2] = v5;
    v17[3] = v7;
    v17[4] = &v30;
    v17[5] = v2;
    v41 = v17;
    sub_2394D0CC4(v15, (uint64_t)v40);
    v18 = v41;
    if (v41 == v40)
    {
      v18 = v40;
      v19 = 4;
      goto LABEL_26;
    }
    if (v41)
    {
      v19 = 5;
LABEL_26:
      (*(void (**)(void))(*v18 + 8 * v19))();
    }
    if (!v7)
    {
      ++v4;
      goto LABEL_4;
    }
    v20 = (unint64_t *)&v7->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    ++v4;
    v22 = (unint64_t *)&v7->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_36:
    v24 = (unint64_t *)&v7->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_4:
    v3 = (_QWORD *)*v3;
  }
  while (v3);
  v1 = v29;
  if (v4 && (unsigned __int16)sub_2395BFB54(&v30) >= 0x100u)
  {
    do
      --v4;
    while (v4 && (unsigned __int16)sub_2395BFB54(&v30) > 0xFFu);
  }
LABEL_44:
  sub_2395C2A4C((uint64_t)&v30);
  for (i = sub_2395BFB54(&v30); i >= 0x100u; i = sub_2395BFB54(&v30))
    ;
  v27 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 256);
  if (v27)
  {
    v40[0] = 1;
    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v27 + 48))(v27, v40);
  }
  return sub_2395C29C4((uint64_t)&v30);
}

void sub_239BA1F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_2395C29C4((uint64_t)&a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_239BA2100(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF90D0;
  v2 = (std::__shared_weak_count *)a1[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239BA2164(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF90D0;
  v1 = (std::__shared_weak_count *)a1[3];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239BA21D8(__n128 *a1)
{
  __n128 *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  __n128 result;

  v2 = (__n128 *)operator new(0x38uLL);
  v3 = a1->n128_u64[1];
  v4 = a1[1].n128_u64[0];
  v2->n128_u64[0] = (unint64_t)&off_250AF90D0;
  v2->n128_u64[1] = v3;
  v5 = a1[1].n128_u64[1];
  v2[1].n128_u64[0] = v4;
  v2[1].n128_u64[1] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[2];
  v2[2] = result;
  return result;
}

__n128 sub_239BA2234(__n128 *a1, __n128 *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __n128 result;

  v2 = a1->n128_u64[1];
  v3 = a1[1].n128_u64[0];
  a2->n128_u64[0] = (unint64_t)&off_250AF90D0;
  a2->n128_u64[1] = v2;
  v4 = a1[1].n128_u64[1];
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = a1[2];
  a2[2] = result;
  return result;
}

void sub_239BA2270(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239BA22C8(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239BA2320(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v2 = a1[5];
  v3 = (std::__shared_weak_count *)a1[3];
  v12 = a1[2];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v14 = a1[1];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v12, &v14);
  v7 = v13;
  if (v13)
  {
    v8 = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)a1[4];
  LOBYTE(v14) = 1;
  return sub_2395BFE44(v10, &v14);
}

void sub_239BA23E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239BA2424(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF9040;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239BA2488(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF9040;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA24FC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF9040;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239BA2554(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF9040;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239BA258C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239BA25E4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239BA263C(uint64_t a1)
{
  uint64_t result;

  sub_239467C88(*(_QWORD *)(a1 + 24));
  result = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 224);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

_QWORD *sub_239BA2680(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8FF8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239BA26E4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8FF8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA2758(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8FF8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239BA27B0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8FF8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239BA27E8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239BA2840(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239BA2898(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  char v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 8);
  v4 = (std::__shared_weak_count *)v3[16];
  v15 = v3[15];
  v16 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v3 = *(_QWORD **)(a1 + 8);
  }
  v17 = v3[14];
  v7 = *(_QWORD *)(v2 + 200);
  if (!v7)
    sub_2394172E0();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v15, &v17);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(v12 + 160);
  if (v13)
  {
    LOBYTE(v17) = v8;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v13 + 48))(v13, &v17);
    v12 = *(_QWORD *)(a1 + 8);
  }
  return sub_239BA29CC(v2, *(_QWORD *)(v12 + 112));
}

void sub_239BA2988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239BA29CC(uint64_t a1, unint64_t a2)
{
  pthread_mutex_t *v4;
  int8x8_t v5;
  _QWORD *v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD **v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *__p;

  v4 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v5 = *(int8x8_t *)(a1 + 312);
  if (v5)
  {
    v6 = (_QWORD *)(a1 + 304);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = a2;
      if (*(_QWORD *)&v5 <= a2)
        v8 = a2 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*v6 + 8 * v8);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v13 == a2)
            {
              if (v10[2] == a2)
                goto LABEL_22;
            }
            else if ((v13 & v11) != v8)
            {
              return sub_2397A16B4(v4);
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              return sub_2397A16B4(v4);
          }
        }
        do
        {
          v12 = v10[1];
          if (v12 == a2)
          {
            if (v10[2] == a2)
            {
LABEL_22:
              sub_239A78378((uint64_t)&__p, v6, v10);
              if (__p)
                operator delete(__p);
              return sub_2397A16B4(v4);
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              return sub_2397A16B4(v4);
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  return sub_2397A16B4(v4);
}

_QWORD *sub_239BA2AFC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8F68;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239BA2B60(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8F68;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA2BD4(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8F68;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239BA2C2C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8F68;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239BA2C64(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239BA2CBC(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239BA2D14(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int8x8_t v9;
  _QWORD *v10;
  uint8x8_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD **v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  _QWORD *v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  __int128 v61;
  unint64_t v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unsigned __int8 v65;
  void *v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  _QWORD v69[3];
  _QWORD *v70;
  void *__p[9];
  char v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  std::__shared_weak_count *v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[3];
  _QWORD *v83;
  uint64_t v84;

  v84 = *MEMORY[0x24BDAC8D0];
  v3 = (unint64_t *)a1[1];
  v4 = (uint64_t *)(v3 + 7);
  if (!v3[7])
  {
    v13 = v3[13];
    if (v13)
    {
      LOBYTE(__p[0]) = 0;
      (*(void (**)(unint64_t, void **, uint64_t, uint64_t *))(*(_QWORD *)v13 + 48))(v13, __p, a3, v4);
    }
    return;
  }
  v6 = a1[3];
  sub_239B688E4((uint64_t)&v62, v6, v3 + 6, v4);
  v7 = a1[1];
  if (*(_BYTE *)(v7 + 72))
  {
    v8 = *(_QWORD *)(v7 + 48);
    if (sub_2397A1B98((pthread_mutex_t *)(v6 + 344)))
    {
      sub_2397A16B4((pthread_mutex_t *)(v6 + 344));
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v9 = *(int8x8_t *)(v6 + 312);
    if (v9)
    {
      v10 = (_QWORD *)(v6 + 304);
      v11 = (uint8x8_t)vcnt_s8(v9);
      v11.i16[0] = vaddlv_u8(v11);
      if (v11.u32[0] > 1uLL)
      {
        v12 = v8;
        if (*(_QWORD *)&v9 <= v8)
          v12 = v8 % *(_QWORD *)&v9;
      }
      else
      {
        v12 = (*(_QWORD *)&v9 - 1) & v8;
      }
      v14 = *(_QWORD ***)(*v10 + 8 * v12);
      if (v14)
      {
        v15 = *v14;
        if (*v14)
        {
          if (v11.u32[0] < 2uLL)
          {
            v16 = *(_QWORD *)&v9 - 1;
            while (1)
            {
              v18 = v15[1];
              if (v18 == v8)
              {
                if (v15[2] == v8)
                  goto LABEL_27;
              }
              else if ((v18 & v16) != v12)
              {
                goto LABEL_29;
              }
              v15 = (_QWORD *)*v15;
              if (!v15)
                goto LABEL_29;
            }
          }
          do
          {
            v17 = v15[1];
            if (v17 == v8)
            {
              if (v15[2] == v8)
              {
LABEL_27:
                sub_239A78378((uint64_t)__p, v10, v15);
                if (__p[0])
                  operator delete(__p[0]);
                break;
              }
            }
            else
            {
              if (v17 >= *(_QWORD *)&v9)
                v17 %= *(_QWORD *)&v9;
              if (v17 != v12)
                break;
            }
            v15 = (_QWORD *)*v15;
          }
          while (v15);
        }
      }
    }
  }
LABEL_29:
  v19 = v65;
  if (!v65)
  {
    v20 = a1[1];
    goto LABEL_49;
  }
  v20 = a1[1];
  if (!*(_QWORD *)(v6 + 200) || (v21 = v62, *(_QWORD *)(v20 + 48) == v62) && *(_BYTE *)(v20 + 72))
  {
LABEL_49:
    v37 = *(_QWORD *)(v20 + 104);
    if (v37)
    {
      LOBYTE(__p[0]) = 1;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)v37 + 48))(v37, __p);
    }
    if (v19)
      goto LABEL_98;
    return;
  }
  v22 = (std::__shared_weak_count *)a1[2];
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(p_shared_owners);
    while (__stxr(v24 + 1, p_shared_owners));
  }
  v26 = v63;
  v25 = v64;
  if (v64)
  {
    v27 = (unint64_t *)&v64->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  if (v22)
  {
    v29 = (unint64_t *)&v22->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
  }
  if (v25)
  {
    v31 = (unint64_t *)&v25->__shared_owners_;
    do
      v32 = __ldxr(v31);
    while (__stxr(v32 + 1, v31));
  }
  v83 = 0;
  v33 = operator new(0x40uLL);
  *v33 = &off_250AF8FB0;
  v33[1] = v20;
  v33[2] = v22;
  v33[3] = v21;
  v33[4] = v26;
  v33[5] = v25;
  *((_BYTE *)v33 + 48) = 1;
  v33[7] = v6;
  v83 = v33;
  v34 = sub_239A82B00(v6, v21, v82);
  v35 = v83;
  if (v83 == v82)
  {
    v36 = 4;
    v35 = v82;
  }
  else
  {
    if (!v83)
      goto LABEL_55;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_55:
  if ((v34 & 1) != 0)
    goto LABEL_87;
  v66 = (void *)v21;
  v67 = v63;
  v68 = v64;
  if (v64)
  {
    v38 = (unint64_t *)&v64->__shared_owners_;
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
  }
  v40 = v69;
  v41 = a1[1];
  v42 = *(_QWORD *)(v41 + 104);
  if (!v42)
    goto LABEL_62;
  if (v42 != v41 + 80)
  {
    v42 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v42 + 16))(v42);
LABEL_62:
    v70 = (_QWORD *)v42;
    goto LABEL_64;
  }
  v70 = v69;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v42 + 24))(v42, v69);
LABEL_64:
  LODWORD(__p[0]) = 2;
  __p[7] = 0;
  __p[8] = 0;
  __p[5] = 0;
  v72 = 0;
  v73 = 0;
  v74 = v66;
  v75 = v67;
  v76 = v68;
  if (v68)
  {
    v43 = (unint64_t *)&v68->__shared_owners_;
    do
      v44 = __ldxr(v43);
    while (__stxr(v44 + 1, v43));
  }
  v45 = (uint64_t)v70;
  if (!v70)
    goto LABEL_70;
  if (v70 != v69)
  {
    v45 = (*(uint64_t (**)(void))(*v70 + 16))();
LABEL_70:
    v78 = (uint64_t *)v45;
    goto LABEL_72;
  }
  v78 = &v77;
  (*(void (**)(_QWORD *))(v69[0] + 24))(v69);
LABEL_72:
  v80 = 0;
  v81 = 0;
  __p[1] = v66;
  __p[6] = v66;
  v79 = 0;
  v74 = v66;
  v46 = operator new(0x120uLL);
  v46[1] = 0;
  v46[2] = 0;
  *v46 = &off_250AF8F30;
  *(_QWORD *)&v61 = sub_239B05428((uint64_t)(v46 + 3), (uint64_t)__p);
  *((_QWORD *)&v61 + 1) = v46;
  sub_239A82E8C(__p);
  if (v70 == v69)
  {
    v47 = 4;
  }
  else
  {
    if (!v70)
      goto LABEL_77;
    v47 = 5;
    v40 = v70;
  }
  (*(void (**)(_QWORD *))(*v40 + 8 * v47))(v40);
LABEL_77:
  v48 = v68;
  if (v68)
  {
    v49 = (unint64_t *)&v68->__shared_owners_;
    do
      v50 = __ldaxr(v49);
    while (__stlxr(v50 - 1, v49));
    if (!v50)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
  }
  sub_239B05644(*(unsigned int **)(v6 + 288), &v61);
  v51 = (std::__shared_weak_count *)*((_QWORD *)&v61 + 1);
  if (*((_QWORD *)&v61 + 1))
  {
    v52 = (unint64_t *)(*((_QWORD *)&v61 + 1) + 8);
    do
      v53 = __ldaxr(v52);
    while (__stlxr(v53 - 1, v52));
    if (!v53)
    {
      ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
      std::__shared_weak_count::__release_weak(v51);
    }
  }
LABEL_87:
  if (v25)
  {
    v54 = (unint64_t *)&v25->__shared_owners_;
    do
      v55 = __ldaxr(v54);
    while (__stlxr(v55 - 1, v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  if (v22)
  {
    v56 = (unint64_t *)&v22->__shared_owners_;
    do
      v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  if (v65)
  {
LABEL_98:
    v58 = v64;
    if (v64)
    {
      v59 = (unint64_t *)&v64->__shared_owners_;
      do
        v60 = __ldaxr(v59);
      while (__stlxr(v60 - 1, v59));
      if (!v60)
      {
        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
        std::__shared_weak_count::__release_weak(v58);
      }
    }
  }
}

void sub_239BA32BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, char a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t *a28,uint64_t a29,uint64_t a30,std::__shared_weak_count *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t *a36,uint64_t a37,uint64_t a38,std::__shared_weak_count *a39)
{
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  _QWORD *v41;
  std::__shared_weak_count *v43;
  unint64_t *p_shared_owners;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t v61;

  v43 = a39;
  if (a39)
  {
    p_shared_owners = (unint64_t *)&a39->__shared_owners_;
    do
      v45 = __ldaxr(p_shared_owners);
    while (__stlxr(v45 - 1, p_shared_owners));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  v46 = a36;
  if (a36 == &a33)
  {
    v47 = 4;
    v46 = &a33;
  }
  else
  {
    if (!a36)
    {
LABEL_11:
      v48 = a31;
      if (a31)
      {
        v49 = (unint64_t *)&a31->__shared_owners_;
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      v51 = a28;
      if (a28 == &a25)
      {
        v52 = 4;
        v51 = &a25;
      }
      else
      {
        if (!a28)
          goto LABEL_21;
        v52 = 5;
      }
      (*(void (**)(void))(*v51 + 8 * v52))();
LABEL_21:
      if (a22 == v41)
      {
        v53 = 4;
      }
      else
      {
        if (!a22)
        {
LABEL_26:
          if (a18)
          {
            v54 = (unint64_t *)&a18->__shared_owners_;
            do
              v55 = __ldaxr(v54);
            while (__stlxr(v55 - 1, v54));
            if (!v55)
            {
              ((void (*)(std::__shared_weak_count *))a18->__on_zero_shared)(a18);
              std::__shared_weak_count::__release_weak(a18);
            }
          }
          if (v40)
          {
            v56 = (unint64_t *)&v40->__shared_owners_;
            do
              v57 = __ldaxr(v56);
            while (__stlxr(v57 - 1, v56));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
              std::__shared_weak_count::__release_weak(v40);
            }
          }
          if (v39)
          {
            v58 = (unint64_t *)&v39->__shared_owners_;
            do
              v59 = __ldaxr(v58);
            while (__stlxr(v59 - 1, v58));
            if (!v59)
            {
              ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
          if (a15 && a14)
          {
            v60 = (unint64_t *)&a14->__shared_owners_;
            do
              v61 = __ldaxr(v60);
            while (__stlxr(v61 - 1, v60));
            if (!v61)
            {
              ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
              std::__shared_weak_count::__release_weak(a14);
              _Unwind_Resume(exception_object);
            }
          }
          _Unwind_Resume(exception_object);
        }
        v53 = 5;
        v41 = a22;
      }
      (*(void (**)(_QWORD *))(*v41 + 8 * v53))(v41);
      goto LABEL_26;
    }
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
  goto LABEL_11;
}

uint64_t sub_239BA35C4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF8FB0;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_239BA3668(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF8FB0;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA371C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  result = operator new(0x40uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF8FB0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *((_BYTE *)result + 24) = 0;
  *((_BYTE *)result + 48) = 0;
  if (*(_BYTE *)(a1 + 48))
  {
    v7 = *(_QWORD *)(a1 + 32);
    result[3] = *(_QWORD *)(a1 + 24);
    result[4] = v7;
    v8 = *(_QWORD *)(a1 + 40);
    result[5] = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    *((_BYTE *)result + 48) = 1;
  }
  result[7] = *(_QWORD *)(a1 + 56);
  return result;
}

uint64_t sub_239BA37B4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *(_QWORD *)a2 = &off_250AF8FB0;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  if (*(_BYTE *)(result + 48))
  {
    v6 = *(_QWORD *)(result + 32);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(result + 24);
    *(_QWORD *)(a2 + 32) = v6;
    v7 = *(_QWORD *)(result + 40);
    *(_QWORD *)(a2 + 40) = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    *(_BYTE *)(a2 + 48) = 1;
  }
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(result + 56);
  return result;
}

void sub_239BA382C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (!*(_BYTE *)(a1 + 48))
    goto LABEL_6;
  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  else
  {
LABEL_6:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239BA38D4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (*((_BYTE *)__p + 48))
  {
    v2 = (std::__shared_weak_count *)__p[5];
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  operator delete(__p);
}

uint64_t sub_239BA396C(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  char v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  v2 = a1[7];
  v3 = (std::__shared_weak_count *)a1[5];
  v13 = a1[4];
  v14 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v15 = a1[3];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v13, &v15);
  v8 = v14;
  if (v14)
  {
    v9 = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = *(_QWORD *)(a1[1] + 104);
  if (v11)
  {
    LOBYTE(v15) = v7;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v11 + 48))(v11, &v15);
  }
  return sub_239BA29CC(v2, a1[3]);
}

void sub_239BA3A50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239BA3A94(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8EA0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239BA3AF8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8EA0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA3B6C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8EA0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239BA3BC4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8EA0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239BA3BFC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239BA3C54(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239BA3CAC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  uint64_t *v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  char v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v2 = a1[3];
  ++*(_QWORD *)(v2 + 208);
  v4 = a1 + 1;
  v3 = a1[1];
  v27 = 0;
  v28 = 0;
  if (sub_23946A940(v2, (unint64_t *)(v3 + 8), &v27))
  {
    ++*(_QWORD *)(v2 + 216);
    v5 = *(_QWORD *)v4;
    v6 = *(_QWORD *)(*(_QWORD *)v4 + 40);
    if (v6)
    {
      v30 = v27;
      v31 = v28;
      if (v28)
      {
        p_shared_owners = (unint64_t *)&v28->__shared_owners_;
        do
          v8 = __ldxr(p_shared_owners);
        while (__stxr(v8 + 1, p_shared_owners));
        v6 = *(_QWORD *)(v5 + 40);
        v29 = 1;
        if (!v6)
          sub_2394172E0();
      }
      else
      {
        v29 = 1;
      }
      (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v6 + 48))(v6, &v30, &v29);
      v10 = v31;
      if (v31)
      {
        v18 = (unint64_t *)&v31->__shared_owners_;
        do
          v17 = __ldaxr(v18);
        while (__stlxr(v17 - 1, v18));
        goto LABEL_36;
      }
    }
    goto LABEL_38;
  }
  v9 = *(_QWORD *)v4;
  if (!*(_QWORD *)(v2 + 168))
  {
    v15 = *(_QWORD *)(v9 + 40);
    if (!v15)
      goto LABEL_38;
    v30 = 0;
    v31 = 0;
    v29 = 1;
    (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v15 + 48))(v15, &v30, &v29);
    v10 = v31;
    if (!v31)
      goto LABEL_38;
    v16 = (unint64_t *)&v31->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    goto LABEL_36;
  }
  v10 = (std::__shared_weak_count *)a1[2];
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    v13 = *(_QWORD *)(*(_QWORD *)v4 + 8);
    do
      v14 = __ldxr(v11);
    while (__stxr(v14 + 1, v11));
  }
  else
  {
    v13 = *(_QWORD *)(v9 + 8);
  }
  v32 = 0;
  v19 = (uint64_t *)operator new(0x20uLL);
  *v19 = (uint64_t)&off_250AF8EE8;
  v19[1] = v9;
  v19[2] = (uint64_t)v10;
  v19[3] = v2;
  v32 = v19;
  v20 = sub_239A82B00(v2, v13, &v30);
  v21 = v32;
  if (v32 == &v30)
  {
    v22 = 4;
    v21 = &v30;
  }
  else
  {
    if (!v32)
      goto LABEL_31;
    v22 = 5;
  }
  (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_31:
  if ((v20 & 1) == 0)
  {
    sub_239B05644(*(unsigned int **)(v2 + 288), v4);
    --*(_QWORD *)(v2 + 208);
  }
  if (v10)
  {
    v23 = (unint64_t *)&v10->__shared_owners_;
    do
      v17 = __ldaxr(v23);
    while (__stlxr(v17 - 1, v23));
LABEL_36:
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_38:
  v24 = v28;
  if (v28)
  {
    v25 = (unint64_t *)&v28->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_239BA3F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, char a12, std::__shared_weak_count *a13, uint64_t a14, uint64_t a15)
{
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a13)
  {
    p_shared_owners = (unint64_t *)&a13->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))a13->__on_zero_shared)(a13);
      std::__shared_weak_count::__release_weak(a13);
    }
  }
  if (a10)
  {
    v18 = (unint64_t *)&a10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239BA4084(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8EE8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239BA40E8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8EE8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA415C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8EE8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239BA41B4(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8EE8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239BA41EC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239BA4244(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239BA429C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t v32[2];
  std::__shared_weak_count *v33;
  char v34;
  _BYTE v35[24];
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 24);
  v37 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  v3 = *(_QWORD *)(v2 + 168);
  if (!v3)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(&v30, v3, &v37);
  v4 = *(_QWORD *)(a1 + 8);
  if (v30)
  {
    v5 = *(_QWORD *)(v4 + 40);
    if (v5)
    {
      v37 = v30;
      v38 = v31;
      if (v31)
      {
        p_shared_owners = (unint64_t *)&v31->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        v5 = *(_QWORD *)(v4 + 40);
        LOBYTE(v32[0]) = 1;
        if (!v5)
          sub_2394172E0();
      }
      else
      {
        LOBYTE(v32[0]) = 1;
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v5 + 48))(v5, &v37, v32);
      v12 = v38;
      if (v38)
      {
        v13 = (unint64_t *)&v38->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
    }
    v32[0] = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    v32[1] = v30;
    v33 = v31;
    if (v31)
    {
      v15 = (unint64_t *)&v31->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    v34 = 1;
    v17 = v35;
    v36 = 0;
    sub_239B9CE48((uint64_t)&v37, v32);
    v18 = operator new(0x120uLL);
    v18[1] = 0;
    v18[2] = 0;
    *v18 = &off_250AF8F30;
    *(_QWORD *)&v29 = sub_239B05428((uint64_t)(v18 + 3), (uint64_t)&v37);
    *((_QWORD *)&v29 + 1) = v18;
    sub_239A82E8C(&v37);
    if (v36 == v35)
    {
      v19 = 4;
    }
    else
    {
      if (!v36)
        goto LABEL_30;
      v19 = 5;
      v17 = v36;
    }
    (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
LABEL_30:
    v20 = v33;
    if (v33)
    {
      v21 = (unint64_t *)&v33->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    sub_239B05644(*(unsigned int **)(v2 + 288), &v29);
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
    if (*((_QWORD *)&v29 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    goto LABEL_40;
  }
  v8 = *(_QWORD *)(v4 + 40);
  if (v8)
  {
    v37 = 0;
    v38 = 0;
    LOBYTE(v32[0]) = 1;
    (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v8 + 48))(v8, &v37, v32);
    v9 = v38;
    if (v38)
    {
      v10 = (unint64_t *)&v38->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  sub_239BA29CC(v2, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8));
LABEL_40:
  v26 = v31;
  if (v31)
  {
    v27 = (unint64_t *)&v31->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_239BA4598(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,std::__shared_weak_count *a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;

  if (a22)
  {
    p_shared_owners = (unint64_t *)&a22->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
      std::__shared_weak_count::__release_weak(a22);
    }
  }
  if (a12)
  {
    v25 = (unint64_t *)&a12->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239BA46D4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8E40;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239BA46E4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8E40;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239BA4714(uint64_t a1)
{
  pthread_mutex_t *v2;
  int v3;

  v2 = (pthread_mutex_t *)(a1 + 200);
  sub_2397A1694((pthread_mutex_t *)(a1 + 200));
  v3 = *(unsigned __int8 *)(a1 + 80);
  sub_2397A16B4(v2);
  if (!v3)
    sub_239BA4798(a1 + 24);
  sub_2397A1694(v2);
  sub_2397A16B4(v2);
  pthread_cond_destroy((pthread_cond_t *)(a1 + 104));
  pthread_cond_destroy((pthread_cond_t *)(a1 + 152));
  sub_2397A163C(v2);
  return sub_239A7BCF8(a1 + 32);
}

uint64_t sub_239BA4798(uint64_t a1)
{
  pthread_mutex_t *v2;
  uint64_t v4;

  v2 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  *(_BYTE *)(a1 + 56) = 1;
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 64) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 80)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 64) <= 0)
        goto LABEL_4;
    }
    v4 = 261;
LABEL_15:
    sub_239A444D4((uint64_t)"unknown file", v4, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
LABEL_4:
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  while (*(_QWORD *)(a1 + 48) && *(uint64_t *)(a1 + 72) >= 1)
  {
    if (pthread_cond_wait((pthread_cond_t *)(a1 + 80), v2))
    {
      sub_239A444D4((uint64_t)"unknown file", 277, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 72) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 128)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 72) <= 0)
        return sub_2397A16B4(v2);
    }
    v4 = 287;
    goto LABEL_15;
  }
  return sub_2397A16B4(v2);
}

void sub_239BA4918(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

void sub_239BA4938(uint64_t a1)
{
  sub_239BA495C(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239BA495C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  uint64_t v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t i;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &off_250AF8E00;
  if (*(_QWORD *)(a1 + 272))
  {
    v3 = *(_QWORD *)(a1 + 240);
    v2 = *(std::__shared_weak_count **)(a1 + 248);
    if (!v2)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (v6)
    {
LABEL_7:
      if (v3)
        goto LABEL_10;
      goto LABEL_8;
    }
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (!v3)
LABEL_8:
      sub_2397A3758(*(_QWORD *)(a1 + 272));
  }
LABEL_10:
  v7 = *(_QWORD *)(a1 + 288);
  if (v7)
    sub_239BA4798(v7);
  while (1)
  {
    v42[0] = &off_250AF91A8;
    v43 = v42;
    sub_2397A1694((pthread_mutex_t *)(a1 + 344));
    v8 = *(_QWORD *)(a1 + 328);
    if (!v8)
    {
      if (!v43)
        sub_2394172E0();
      (*(void (**)(_QWORD *))(*v43 + 48))(v43);
    }
    sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
    v9 = v43;
    if (v43 == v42)
    {
      v9 = v42;
      v10 = 4;
    }
    else
    {
      if (!v43)
        goto LABEL_20;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_20:
    if (!v8)
      break;
    sub_2397A186C(1);
  }
  v11 = *(_QWORD *)(a1 + 256);
  if (v11)
  {
    sub_2397A195C(v11);
    v12 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  if (*(_QWORD *)(a1 + 288))
  {
    v15 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_QWORD *)(a1 + 328))
  {
    v18 = *(_QWORD **)(a1 + 320);
    if (v18)
    {
      do
      {
        v19 = (_QWORD *)*v18;
        operator delete(v18);
        v18 = v19;
      }
      while (v19);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v20 = *(_QWORD *)(a1 + 312);
    if (v20)
    {
      for (i = 0; i != v20; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 304) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  sub_2397A163C((pthread_mutex_t *)(a1 + 344));
  v22 = *(_QWORD **)(a1 + 320);
  if (v22)
  {
    do
    {
      v23 = (_QWORD *)*v22;
      operator delete(v22);
      v22 = v23;
    }
    while (v23);
  }
  v24 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = 0;
  if (v24)
    operator delete(v24);
  v25 = *(std::__shared_weak_count **)(a1 + 296);
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = *(std::__shared_weak_count **)(a1 + 280);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = *(std::__shared_weak_count **)(a1 + 264);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = *(std::__shared_weak_count **)(a1 + 248);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = *(_QWORD **)(a1 + 200);
  if (v37 == (_QWORD *)(a1 + 176))
  {
    v38 = 4;
    v37 = (_QWORD *)(a1 + 176);
LABEL_69:
    (*(void (**)(void))(*v37 + 8 * v38))();
  }
  else if (v37)
  {
    v38 = 5;
    goto LABEL_69;
  }
  v39 = *(_QWORD **)(a1 + 168);
  if (v39 == (_QWORD *)(a1 + 144))
  {
    v40 = 4;
    v39 = (_QWORD *)(a1 + 144);
LABEL_74:
    (*(void (**)(void))(*v39 + 8 * v40))();
  }
  else if (v39)
  {
    v40 = 5;
    goto LABEL_74;
  }
  return sub_239B6B270(a1);
}

void sub_239BA4D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_239416A48(exception_object);
}

void sub_239BA4D88()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA4D9C()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF91A8;
  return result;
}

void sub_239BA4DC0(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF91A8;
}

uint64_t sub_239BA4DDC(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF8DB8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239BA4E18(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF8DB8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA4E64(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;

  v2 = operator new(0x20uLL);
  *v2 = off_250AF8DB8;
  v3 = v2 + 1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    v2[3] = *(_QWORD *)(a1 + 24);
  }
  return v2;
}

void sub_239BA4EC4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_239BA4ED8(char *result, _QWORD *a2)
{
  _QWORD *v2;
  __int128 v3;

  *a2 = off_250AF8DB8;
  v2 = a2 + 1;
  if (result[31] < 0)
    return (char *)sub_23941A7F8(v2, *((void **)result + 1), *((_QWORD *)result + 2));
  v3 = *(_OWORD *)(result + 8);
  v2[2] = *((_QWORD *)result + 3);
  *(_OWORD *)v2 = v3;
  return result;
}

void sub_239BA4F14(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239BA4F28(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

BOOL sub_239BA4F58(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  size_t *v4;
  uint64_t v5;
  char *v6;
  const std::locale::facet *v7;
  std::string *v8;
  __int128 v9;
  _BOOL8 v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::string v15;
  void *v16[2];
  std::string::size_type v17;
  std::__fs::filesystem::path v18;
  std::__fs::filesystem::path v19;
  std::__fs::filesystem::path v20;
  _QWORD v21[2];
  _QWORD v22[11];
  char v23;
  uint64_t v24;

  v4 = *(size_t **)a2;
  v3 = *(std::__shared_weak_count **)(a2 + 8);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  sub_2394988CC((uint64_t)v21);
  v5 = v22[0];
  v6 = (char *)v22 + *(_QWORD *)(v22[0] - 24);
  if (*((_DWORD *)v6 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(_QWORD *)(v22[0] - 24)));
    v7 = std::locale::use_facet((const std::locale *)&v20, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)&v20);
    v5 = v22[0];
  }
  *((_DWORD *)v6 + 36) = 48;
  *(_QWORD *)((char *)&v22[3] + *(_QWORD *)(v5 - 24)) = 8;
  std::ostream::operator<<();
  std::stringbuf::str();
  v8 = std::string::append(&v15, ".bin");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v17 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)v16 = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v16, (char *)&v18);
  v19 = v18;
  memset(&v18, 0, sizeof(v18));
  sub_239498A04(&v19, a1 + 8, &v20);
  if (SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v19.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v18.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v17) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_19:
      operator delete(v16[0]);
      if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
      goto LABEL_20;
    }
  }
  else if ((SHIBYTE(v18.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v18.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v17) < 0)
    goto LABEL_19;
LABEL_6:
  if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_7;
LABEL_20:
  operator delete(v15.__r_.__value_.__l.__data_);
LABEL_7:
  v10 = sub_239B6BA60(v4);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
  v21[0] = *MEMORY[0x24BEDB7F0];
  v11 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v21 + *(_QWORD *)(v21[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v22[0] = v11;
  v22[1] = MEMORY[0x24BEDB848] + 16;
  if (v23 < 0)
    operator delete((void *)v22[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v10;
}

void sub_239BA51A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,std::locale a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  std::__shared_weak_count *v60;
  uint64_t v62;
  unint64_t *p_shared_owners;
  unint64_t v64;

  a41 = *MEMORY[0x24BEDB7F0];
  v62 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a41 + *(_QWORD *)(a41 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a43 = v62;
  a44 = MEMORY[0x24BEDB848] + 16;
  if (a57 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a60);
  if (v60)
  {
    p_shared_owners = (unint64_t *)&v60->__shared_owners_;
    do
      v64 = __ldaxr(p_shared_owners);
    while (__stlxr(v64 - 1, p_shared_owners));
    if (!v64)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239BA52F4()
{
  uint64_t v0;

  if (!v0)
    JUMPOUT(0x239BA52ECLL);
  JUMPOUT(0x239BA52BCLL);
}

uint64_t sub_239BA5300(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF8D70;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239BA533C(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF8D70;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA5388(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;

  v2 = operator new(0x20uLL);
  *v2 = off_250AF8D70;
  v3 = v2 + 1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    v2[3] = *(_QWORD *)(a1 + 24);
  }
  return v2;
}

void sub_239BA53E8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_239BA53FC(char *result, _QWORD *a2)
{
  _QWORD *v2;
  __int128 v3;

  *a2 = off_250AF8D70;
  v2 = a2 + 1;
  if (result[31] < 0)
    return (char *)sub_23941A7F8(v2, *((void **)result + 1), *((_QWORD *)result + 2));
  v3 = *(_OWORD *)(result + 8);
  v2[2] = *((_QWORD *)result + 3);
  *(_OWORD *)v2 = v3;
  return result;
}

void sub_239BA5438(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239BA544C(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239BA547C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  const std::locale::facet *v6;
  std::string *v7;
  __int128 v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  void *v12;
  _QWORD *v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  void *__p[2];
  void *v24[2];
  int v25;
  std::string v26;
  void *v27[2];
  std::string::size_type v28;
  void *v29[2];
  void *v30;
  std::__fs::filesystem::path v31;
  _QWORD v32[2];
  _QWORD v33[11];
  char v34;
  uint64_t v35;

  sub_2394988CC((uint64_t)v32);
  v4 = v33[0];
  v5 = (char *)v33 + *(_QWORD *)(v33[0] - 24);
  if (*((_DWORD *)v5 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v33 + *(_QWORD *)(v33[0] - 24)));
    v6 = std::locale::use_facet((const std::locale *)__p, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale((std::locale *)__p);
    v4 = v33[0];
  }
  *((_DWORD *)v5 + 36) = 48;
  *(_QWORD *)((char *)&v33[3] + *(_QWORD *)(v4 - 24)) = 8;
  std::ostream::operator<<();
  std::stringbuf::str();
  v7 = std::string::append(&v26, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v28 = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)v27 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v27, (char *)v29);
  *(_OWORD *)__p = *(_OWORD *)v29;
  v24[0] = v30;
  v29[1] = 0;
  v30 = 0;
  v29[0] = 0;
  sub_239498A04((std::__fs::filesystem::path *)__p, a1 + 8, &v31);
  if (SHIBYTE(v24[0]) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v30) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v28) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_23:
      operator delete(v27[0]);
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
LABEL_24:
      operator delete(v26.__r_.__value_.__l.__data_);
      goto LABEL_7;
    }
  }
  else if ((SHIBYTE(v30) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v29[0]);
  if (SHIBYTE(v28) < 0)
    goto LABEL_23;
LABEL_6:
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_24;
LABEL_7:
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v24 = 0u;
  v25 = 1065353216;
  std::__fs::filesystem::__status(&v31, 0);
  if (!LOBYTE(v29[0]) || LOBYTE(v29[0]) == 255 || !sub_239B044E4(__p))
  {
    *a2 = 0;
    a2[1] = 0;
    v13 = v24[0];
    if (!v24[0])
      goto LABEL_14;
    goto LABEL_31;
  }
  v9 = operator new(0x40uLL);
  v9[1] = 0;
  v9[2] = 0;
  v10 = __p[0];
  v11 = (unint64_t)__p[1];
  v9[3] = __p[0];
  *v9 = &off_250ADBF90;
  __p[0] = 0;
  __p[1] = 0;
  v9[4] = v11;
  v13 = v24[0];
  v12 = v24[1];
  v9[5] = v24[0];
  v9[6] = v12;
  *((_DWORD *)v9 + 14) = v25;
  if (v12)
  {
    v14 = v13[1];
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v14 >= v11)
        v14 %= v11;
    }
    else
    {
      v14 &= v11 - 1;
    }
    v13 = 0;
    v10[v14] = v9 + 5;
    v24[0] = 0;
    v24[1] = 0;
  }
  *a2 = v9 + 3;
  a2[1] = v9;
  if (v13)
  {
    do
    {
LABEL_31:
      v18 = (_QWORD *)*v13;
      v19 = (_QWORD *)v13[5];
      if (v19)
      {
        do
        {
          v21 = (_QWORD *)*v19;
          v22 = (void *)v19[3];
          if (v22)
          {
            v19[4] = v22;
            operator delete(v22);
          }
          operator delete(v19);
          v19 = v21;
        }
        while (v21);
      }
      v20 = (void *)v13[3];
      v13[3] = 0;
      if (v20)
        operator delete(v20);
      operator delete(v13);
      v13 = v18;
    }
    while (v18);
  }
LABEL_14:
  v15 = __p[0];
  __p[0] = 0;
  if (v15)
    operator delete(v15);
  if (SHIBYTE(v31.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v31.__pn_.__r_.__value_.__l.__data_);
  v32[0] = *MEMORY[0x24BEDB7F0];
  v16 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v32 + *(_QWORD *)(v32[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v33[0] = v16;
  v33[1] = MEMORY[0x24BEDB848] + 16;
  if (v34 < 0)
    operator delete((void *)v33[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v35);
}

void sub_239BA57B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v61;

  a41 = *MEMORY[0x24BEDB7F0];
  v61 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a41 + *(_QWORD *)(a41 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a43 = v61;
  a44 = MEMORY[0x24BEDB848] + 16;
  if (a57 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a60);
  _Unwind_Resume(a1);
}

void sub_239BA5944(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8D38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239BA5954(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8D38;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239BA5984(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_239BA5994(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF8920;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239BA59D0(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF8920;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA5A1C(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;

  v2 = operator new(0x20uLL);
  *v2 = off_250AF8920;
  v3 = v2 + 1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    v2[3] = *(_QWORD *)(a1 + 24);
  }
  return v2;
}

void sub_239BA5A7C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_239BA5A90(char *result, _QWORD *a2)
{
  _QWORD *v2;
  __int128 v3;

  *a2 = off_250AF8920;
  v2 = a2 + 1;
  if (result[31] < 0)
    return (char *)sub_23941A7F8(v2, *((void **)result + 1), *((_QWORD *)result + 2));
  v3 = *(_OWORD *)(result + 8);
  v2[2] = *((_QWORD *)result + 3);
  *(_OWORD *)v2 = v3;
  return result;
}

void sub_239BA5ACC(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239BA5AE0(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

BOOL sub_239BA5B10(uint64_t a1, uint64_t *a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  const std::locale::facet *v7;
  std::string *v8;
  __int128 v9;
  _BOOL8 v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::string v15;
  void *v16[2];
  std::string::size_type v17;
  std::__fs::filesystem::path v18;
  std::__fs::filesystem::path v19;
  std::__fs::filesystem::path v20;
  _QWORD v21[2];
  _QWORD v22[11];
  char v23;
  uint64_t v24;

  v4 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  sub_2394988CC((uint64_t)v21);
  v5 = v22[0];
  v6 = (char *)v22 + *(_QWORD *)(v22[0] - 24);
  if (*((_DWORD *)v6 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(_QWORD *)(v22[0] - 24)));
    v7 = std::locale::use_facet((const std::locale *)&v20, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v7->__vftable[2].~facet_0)(v7, 32);
    std::locale::~locale((std::locale *)&v20);
    v5 = v22[0];
  }
  *((_DWORD *)v6 + 36) = 48;
  *(_QWORD *)((char *)&v22[3] + *(_QWORD *)(v5 - 24)) = 8;
  std::ostream::operator<<();
  std::stringbuf::str();
  v8 = std::string::append(&v15, ".bin");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v17 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)v16 = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v16, (char *)&v18);
  v19 = v18;
  memset(&v18, 0, sizeof(v18));
  sub_239498A04(&v19, a1 + 8, &v20);
  if (SHIBYTE(v19.__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v19.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v18.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v17) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_19:
      operator delete(v16[0]);
      if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
      goto LABEL_20;
    }
  }
  else if ((SHIBYTE(v18.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v18.__pn_.__r_.__value_.__l.__data_);
  if (SHIBYTE(v17) < 0)
    goto LABEL_19;
LABEL_6:
  if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_7;
LABEL_20:
  operator delete(v15.__r_.__value_.__l.__data_);
LABEL_7:
  v10 = sub_239B6C80C(v4);
  if (SHIBYTE(v20.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__pn_.__r_.__value_.__l.__data_);
  v21[0] = *MEMORY[0x24BEDB7F0];
  v11 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v21 + *(_QWORD *)(v21[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v22[0] = v11;
  v22[1] = MEMORY[0x24BEDB848] + 16;
  if (v23 < 0)
    operator delete((void *)v22[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  return v10;
}

void sub_239BA5D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,std::locale a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  std::__shared_weak_count *v60;
  uint64_t v62;
  unint64_t *p_shared_owners;
  unint64_t v64;

  a41 = *MEMORY[0x24BEDB7F0];
  v62 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a41 + *(_QWORD *)(a41 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a43 = v62;
  a44 = MEMORY[0x24BEDB848] + 16;
  if (a57 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a60);
  if (v60)
  {
    p_shared_owners = (unint64_t *)&v60->__shared_owners_;
    do
      v64 = __ldaxr(p_shared_owners);
    while (__stlxr(v64 - 1, p_shared_owners));
    if (!v64)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  _Unwind_Resume(a1);
}

void sub_239BA5EAC()
{
  uint64_t v0;

  if (!v0)
    JUMPOUT(0x239BA5EA4);
  JUMPOUT(0x239BA5E74);
}

uint64_t sub_239BA5EB8(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF88D8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_239BA5EF4(uint64_t a1)
{
  *(_QWORD *)a1 = off_250AF88D8;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA5F40(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;

  v2 = operator new(0x20uLL);
  *v2 = off_250AF88D8;
  v3 = v2 + 1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v3, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v3 = *(_OWORD *)(a1 + 8);
    v2[3] = *(_QWORD *)(a1 + 24);
  }
  return v2;
}

void sub_239BA5FA0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_239BA5FB4(char *result, _QWORD *a2)
{
  _QWORD *v2;
  __int128 v3;

  *a2 = off_250AF88D8;
  v2 = a2 + 1;
  if (result[31] < 0)
    return (char *)sub_23941A7F8(v2, *((void **)result + 1), *((_QWORD *)result + 2));
  v3 = *(_OWORD *)(result + 8);
  v2[2] = *((_QWORD *)result + 3);
  *(_OWORD *)v2 = v3;
  return result;
}

void sub_239BA5FF0(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

void sub_239BA6004(void **__p)
{
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_239BA6034@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  const std::locale::facet *v6;
  std::string *v7;
  __int128 v8;
  char *v9;
  __int128 v10;
  void *v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v18[2];
  void *v19[2];
  __int128 v20;
  void *v21[2];
  void *__p[4];
  std::string v23;
  void *v24[2];
  std::string::size_type v25;
  void *v26[2];
  void *v27;
  std::__fs::filesystem::path v28;
  _QWORD v29[2];
  _QWORD v30[11];
  char v31;
  uint64_t v32;

  sub_2394988CC((uint64_t)v29);
  v4 = v30[0];
  v5 = (char *)v30 + *(_QWORD *)(v30[0] - 24);
  if (*((_DWORD *)v5 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v30 + *(_QWORD *)(v30[0] - 24)));
    v6 = std::locale::use_facet((const std::locale *)v18, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale((std::locale *)v18);
    v4 = v30[0];
  }
  *((_DWORD *)v5 + 36) = 48;
  *(_QWORD *)((char *)&v30[3] + *(_QWORD *)(v4 - 24)) = 8;
  std::ostream::operator<<();
  std::stringbuf::str();
  v7 = std::string::append(&v23, ".bin");
  v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v25 = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)v24 = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  sub_2395ACAA8((uint64_t)v24, (char *)v26);
  *(_OWORD *)v18 = *(_OWORD *)v26;
  v19[0] = v27;
  v26[1] = 0;
  v27 = 0;
  v26[0] = 0;
  sub_239498A04((std::__fs::filesystem::path *)v18, a1 + 8, &v28);
  if (SHIBYTE(v19[0]) < 0)
  {
    operator delete(v18[0]);
    if ((SHIBYTE(v27) & 0x80000000) == 0)
    {
LABEL_5:
      if ((SHIBYTE(v25) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_27:
      operator delete(v24[0]);
      if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_7;
LABEL_28:
      operator delete(v23.__r_.__value_.__l.__data_);
      goto LABEL_7;
    }
  }
  else if ((SHIBYTE(v27) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v26[0]);
  if (SHIBYTE(v25) < 0)
    goto LABEL_27;
LABEL_6:
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_28;
LABEL_7:
  *(_OWORD *)v18 = xmmword_239EC65B0;
  *(_OWORD *)v19 = 0u;
  v20 = 0u;
  *(_OWORD *)v21 = 0u;
  memset(__p, 0, sizeof(__p));
  std::__fs::filesystem::__status(&v28, 0);
  if (LOBYTE(v26[0]) && LOBYTE(v26[0]) != 255 && sub_239B02D38((uint64_t)v18))
  {
    v9 = (char *)operator new(0x78uLL);
    *(_OWORD *)(v9 + 24) = *(_OWORD *)v18;
    v10 = *(_OWORD *)v21;
    *(_OWORD *)(v9 + 56) = v20;
    *((_QWORD *)v9 + 1) = 0;
    *((_QWORD *)v9 + 2) = 0;
    *(_QWORD *)v9 = &off_250ADB7B8;
    v11 = v19[1];
    *((void **)v9 + 5) = v19[0];
    *((_QWORD *)v9 + 6) = v11;
    v19[1] = 0;
    *(_QWORD *)&v20 = 0;
    *(_OWORD *)(v9 + 72) = v10;
    *((void **)v9 + 11) = __p[0];
    v21[1] = 0;
    __p[0] = 0;
    *((_QWORD *)&v20 + 1) = 0;
    v21[0] = 0;
    *((_OWORD *)v9 + 6) = *(_OWORD *)&__p[1];
    *((void **)v9 + 14) = __p[3];
    memset(&__p[1], 0, 24);
    *a2 = v9 + 24;
    a2[1] = v9;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    v12 = (char *)__p[1];
    if (__p[1])
    {
      v13 = (char *)__p[2];
      v14 = __p[1];
      if (__p[2] != __p[1])
      {
        do
        {
          v15 = (void *)*((_QWORD *)v13 - 3);
          v13 -= 24;
          free(v15);
        }
        while (v13 != v12);
        v14 = __p[1];
      }
      __p[2] = v12;
      operator delete(v14);
    }
  }
  if (v21[0])
  {
    v21[1] = v21[0];
    operator delete(v21[0]);
  }
  if (v19[1])
    operator delete(v19[1]);
  if (SHIBYTE(v28.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__pn_.__r_.__value_.__l.__data_);
  v29[0] = *MEMORY[0x24BEDB7F0];
  v16 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v29 + *(_QWORD *)(v29[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v30[0] = v16;
  v30[1] = MEMORY[0x24BEDB848] + 16;
  if (v31 < 0)
    operator delete((void *)v30[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](&v32);
}

void sub_239BA6334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v54;

  a34 = *MEMORY[0x24BEDB7F0];
  v54 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(uint64_t *)((char *)&a34 + *(_QWORD *)(a34 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  a36 = v54;
  a37 = MEMORY[0x24BEDB848] + 16;
  if (a50 < 0)
    operator delete(__p);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&a53);
  _Unwind_Resume(a1);
}

void sub_239BA64C0()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239BA64D4(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_250AF8468;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_239BA6514(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF8468;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_239BA653C(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  int8x8_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void **v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *__dst[2];
  void *v25;
  void *v26[2];
  uint64_t v27;
  void *v28[2];
  uint64_t v29;
  char v30[16];
  void *v31;
  char v32;
  char v33;
  void *v34;
  char v35;
  void *__p;
  char v37;
  char v38;
  char v39;
  char v40;

  v5 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *(_QWORD **)(a1 + 8);
  v7 = (int8x8_t)v6[1];
  if (!*(_QWORD *)&v7)
    goto LABEL_21;
  v8 = *a3;
  v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = *a3;
    if (*(_QWORD *)&v7 <= v8)
      v10 = v8 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v8;
  }
  v11 = *(_QWORD **)(*v6 + 8 * v10);
  if (!v11 || (v12 = (_QWORD *)*v11) == 0)
  {
LABEL_21:
    v16 = 0;
    goto LABEL_22;
  }
  if (v9.u32[0] < 2uLL)
  {
    v13 = *(_QWORD *)&v7 - 1;
    while (1)
    {
      v15 = v12[1];
      if (v15 == v8)
      {
        if (v12[2] == v8)
          goto LABEL_28;
      }
      else if ((v15 & v13) != v10)
      {
        goto LABEL_21;
      }
      v12 = (_QWORD *)*v12;
      if (!v12)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v14 = v12[1];
    if (v14 == v8)
      break;
    if (v14 >= *(_QWORD *)&v7)
      v14 %= *(_QWORD *)&v7;
    if (v14 != v10)
      goto LABEL_21;
LABEL_11:
    v12 = (_QWORD *)*v12;
    if (!v12)
      goto LABEL_21;
  }
  if (v12[2] != v8)
    goto LABEL_11;
LABEL_28:
  v20 = (void **)sub_2396B8B20(v6, v8);
  if (*((char *)v20 + 23) < 0)
  {
    sub_23941A7F8(__dst, *v20, (unint64_t)v20[1]);
  }
  else
  {
    v21 = *(_OWORD *)v20;
    v25 = v20[2];
    *(_OWORD *)__dst = v21;
  }
  sub_2395ACAA8((uint64_t)__dst, (char *)v26);
  *(_OWORD *)v28 = *(_OWORD *)v26;
  v29 = v27;
  v26[1] = 0;
  v27 = 0;
  v26[0] = 0;
  v22 = *(_OWORD *)(a1 + 16);
  v23 = *(_QWORD *)(a1 + 32);
  sub_239B98D48((uint64_t)v30, v5, (uint64_t)v28, &v22);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(v28[0]);
    if (SHIBYTE(v27) < 0)
      goto LABEL_45;
LABEL_33:
    if (SHIBYTE(v25) < 0)
LABEL_46:
      operator delete(__dst[0]);
  }
  else
  {
    if ((SHIBYTE(v27) & 0x80000000) == 0)
      goto LABEL_33;
LABEL_45:
    operator delete(v26[0]);
    if (SHIBYTE(v25) < 0)
      goto LABEL_46;
  }
  v16 = v40 != 0;
  if (!v40 && v39)
  {
    if (v38)
    {
      if (v37 < 0)
        operator delete(__p);
      if (v35 < 0)
        operator delete(v34);
    }
    if (v33 && v32 < 0)
      operator delete(v31);
  }
LABEL_22:
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v16;
}

void sub_239BA6794(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v33;

  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a18 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_4:
    if (!v30)
      goto LABEL_13;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(a13);
  if (!v30)
    goto LABEL_13;
LABEL_9:
  p_shared_owners = (unint64_t *)&v30->__shared_owners_;
  do
    v33 = __ldaxr(p_shared_owners);
  while (__stlxr(v33 - 1, p_shared_owners));
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
  }
LABEL_13:
  _Unwind_Resume(exception_object);
}

void sub_239BA683C()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239BA6850(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_250AF8420;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_239BA6890(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF8420;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239BA68B8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  uint64_t result;
  void **v7;
  __int128 v8;
  _QWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  void *__dst[2];
  void *v16;
  void *v17[2];
  uint64_t v18;
  void *__p[2];
  uint64_t v20;
  char v21[8];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int16 v27;
  char v28;

  v5 = *a2;
  result = sub_2396B8F48(*(_QWORD **)(a1 + 8), *a2);
  if ((result & 1) == 0)
  {
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  v7 = (void **)sub_2396B8B20(*(_QWORD **)(a1 + 8), v5);
  if (*((char *)v7 + 23) < 0)
  {
    sub_23941A7F8(__dst, *v7, (unint64_t)v7[1]);
  }
  else
  {
    v8 = *(_OWORD *)v7;
    v16 = v7[2];
    *(_OWORD *)__dst = v8;
  }
  sub_2395ACAA8((uint64_t)__dst, (char *)v17);
  *(_OWORD *)__p = *(_OWORD *)v17;
  v20 = v18;
  v17[1] = 0;
  v18 = 0;
  v17[0] = 0;
  v13 = *(_OWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 32);
  sub_239B99A4C((uint64_t)v21, (uint64_t)__p, &v13);
  if (SHIBYTE(v20) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v16) & 0x80000000) == 0)
        goto LABEL_9;
LABEL_13:
      operator delete(__dst[0]);
      if (v28)
        goto LABEL_10;
LABEL_14:
      *a3 = 0;
      a3[1] = 0;
      return sub_239AA557C((uint64_t)v21);
    }
  }
  else if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  operator delete(v17[0]);
  if (SHIBYTE(v16) < 0)
    goto LABEL_13;
LABEL_9:
  if (!v28)
    goto LABEL_14;
LABEL_10:
  sub_239B0F55C((uint64_t)v21);
  v9 = operator new(0x70uLL);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = &off_250ADB878;
  v9[3] = &off_250ADB628;
  v10 = v22;
  v22 = 0uLL;
  v11 = v23;
  *((_OWORD *)v9 + 2) = v10;
  *((_OWORD *)v9 + 3) = v11;
  v12 = v25;
  *((_OWORD *)v9 + 4) = v24;
  *((_OWORD *)v9 + 5) = v12;
  v9[12] = v26;
  *((_WORD *)v9 + 52) = v27;
  *a3 = v9 + 3;
  a3[1] = v9;
  return sub_239AA557C((uint64_t)v21);
}

void sub_239BA6A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,char a32)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a18 & 0x80000000) == 0)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(a13);
      _Unwind_Resume(exception_object);
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a18 & 0x80000000) == 0)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_239BA6AB8()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239BA6ACC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_250AF7F68;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_239BA6B0C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7F68;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_239BA6B34(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  int8x8_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void **v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *__dst[2];
  void *v25;
  void *v26[2];
  uint64_t v27;
  void *v28[2];
  uint64_t v29;
  char v30[16];
  void *v31;
  char v32;
  char v33;
  void *v34;
  char v35;
  void *__p;
  char v37;
  char v38;
  char v39;
  char v40;

  v5 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  *a2 = 0;
  a2[1] = 0;
  v6 = *(_QWORD **)(a1 + 8);
  v7 = (int8x8_t)v6[1];
  if (!*(_QWORD *)&v7)
    goto LABEL_21;
  v8 = *a3;
  v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = *a3;
    if (*(_QWORD *)&v7 <= v8)
      v10 = v8 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v8;
  }
  v11 = *(_QWORD **)(*v6 + 8 * v10);
  if (!v11 || (v12 = (_QWORD *)*v11) == 0)
  {
LABEL_21:
    v16 = 0;
    goto LABEL_22;
  }
  if (v9.u32[0] < 2uLL)
  {
    v13 = *(_QWORD *)&v7 - 1;
    while (1)
    {
      v15 = v12[1];
      if (v15 == v8)
      {
        if (v12[2] == v8)
          goto LABEL_28;
      }
      else if ((v15 & v13) != v10)
      {
        goto LABEL_21;
      }
      v12 = (_QWORD *)*v12;
      if (!v12)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v14 = v12[1];
    if (v14 == v8)
      break;
    if (v14 >= *(_QWORD *)&v7)
      v14 %= *(_QWORD *)&v7;
    if (v14 != v10)
      goto LABEL_21;
LABEL_11:
    v12 = (_QWORD *)*v12;
    if (!v12)
      goto LABEL_21;
  }
  if (v12[2] != v8)
    goto LABEL_11;
LABEL_28:
  v20 = (void **)sub_2396B8B20(v6, v8);
  if (*((char *)v20 + 23) < 0)
  {
    sub_23941A7F8(__dst, *v20, (unint64_t)v20[1]);
  }
  else
  {
    v21 = *(_OWORD *)v20;
    v25 = v20[2];
    *(_OWORD *)__dst = v21;
  }
  sub_2395ACAA8((uint64_t)__dst, (char *)v26);
  *(_OWORD *)v28 = *(_OWORD *)v26;
  v29 = v27;
  v26[1] = 0;
  v27 = 0;
  v26[0] = 0;
  v22 = *(_OWORD *)(a1 + 16);
  v23 = *(_QWORD *)(a1 + 32);
  sub_239B9ACEC((uint64_t)v30, v5, (uint64_t)v28, 3, &v22);
  if (SHIBYTE(v29) < 0)
  {
    operator delete(v28[0]);
    if (SHIBYTE(v27) < 0)
      goto LABEL_45;
LABEL_33:
    if (SHIBYTE(v25) < 0)
LABEL_46:
      operator delete(__dst[0]);
  }
  else
  {
    if ((SHIBYTE(v27) & 0x80000000) == 0)
      goto LABEL_33;
LABEL_45:
    operator delete(v26[0]);
    if (SHIBYTE(v25) < 0)
      goto LABEL_46;
  }
  v16 = v40 != 0;
  if (!v40 && v39)
  {
    if (v38)
    {
      if (v37 < 0)
        operator delete(__p);
      if (v35 < 0)
        operator delete(v34);
    }
    if (v33 && v32 < 0)
      operator delete(v31);
  }
LABEL_22:
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return v16;
}

void sub_239BA6D90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v33;

  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a18 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_4:
    if (!v30)
      goto LABEL_13;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(a13);
  if (!v30)
    goto LABEL_13;
LABEL_9:
  p_shared_owners = (unint64_t *)&v30->__shared_owners_;
  do
    v33 = __ldaxr(p_shared_owners);
  while (__stlxr(v33 - 1, p_shared_owners));
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
  }
LABEL_13:
  _Unwind_Resume(exception_object);
}

void sub_239BA6E38()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239BA6E4C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_250AF7F20;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_239BA6E8C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF7F20;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239BA6EB4@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  uint64_t result;
  void **v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void *__dst[2];
  void *v19;
  void *v20[2];
  uint64_t v21;
  void *__p[2];
  uint64_t v23;
  _BYTE v24[136];
  char v25;

  v5 = *a2;
  result = sub_2396B8F48(*(_QWORD **)(a1 + 8), *a2);
  if ((result & 1) == 0)
  {
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  v7 = (void **)sub_2396B8B20(*(_QWORD **)(a1 + 8), v5);
  if (*((char *)v7 + 23) < 0)
  {
    sub_23941A7F8(__dst, *v7, (unint64_t)v7[1]);
  }
  else
  {
    v8 = *(_OWORD *)v7;
    v19 = v7[2];
    *(_OWORD *)__dst = v8;
  }
  sub_2395ACAA8((uint64_t)__dst, (char *)v20);
  *(_OWORD *)__p = *(_OWORD *)v20;
  v23 = v21;
  v20[1] = 0;
  v21 = 0;
  v20[0] = 0;
  v16 = *(_OWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 32);
  sub_239B9BA18((uint64_t)v24, (uint64_t)__p, 3, &v16);
  if (SHIBYTE(v23) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v21) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v19) & 0x80000000) == 0)
        goto LABEL_9;
LABEL_13:
      operator delete(__dst[0]);
      if (v25)
        goto LABEL_10;
LABEL_14:
      *a3 = 0;
      a3[1] = 0;
      return sub_239621094((uint64_t)v24);
    }
  }
  else if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  operator delete(v20[0]);
  if (SHIBYTE(v19) < 0)
    goto LABEL_13;
LABEL_9:
  if (!v25)
    goto LABEL_14;
LABEL_10:
  v9 = sub_239620FD4((uint64_t)v24);
  v10 = operator new(0xA0uLL);
  v10[1] = 0;
  v10[2] = 0;
  *v10 = &off_250ADD758;
  v10[3] = &off_250ADBEA0;
  *((_OWORD *)v10 + 2) = *(_OWORD *)(v9 + 8);
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  v11 = *(_OWORD *)(v9 + 88);
  v12 = *(_OWORD *)(v9 + 104);
  v13 = *(_OWORD *)(v9 + 72);
  v10[18] = *(_QWORD *)(v9 + 120);
  *((_OWORD *)v10 + 7) = v11;
  *((_OWORD *)v10 + 8) = v12;
  *((_OWORD *)v10 + 6) = v13;
  v14 = *(_OWORD *)(v9 + 56);
  v15 = *(_OWORD *)(v9 + 24);
  *((_OWORD *)v10 + 4) = *(_OWORD *)(v9 + 40);
  *((_OWORD *)v10 + 5) = v14;
  *((_OWORD *)v10 + 3) = v15;
  *((_WORD *)v10 + 76) = *(_WORD *)(v9 + 128);
  *a3 = v10 + 3;
  a3[1] = v10;
  return sub_239621094((uint64_t)v24);
}

void sub_239BA7058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,char a32)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a18 & 0x80000000) == 0)
LABEL_8:
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(a13);
      _Unwind_Resume(exception_object);
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a18 & 0x80000000) == 0)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_239BA70CC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF7EB0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239BA70DC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF7EB0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239BA710C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  void *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;

  v2 = *(std::__shared_weak_count **)(a1 + 2360);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 2344);
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 2344);
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  if (*(_BYTE *)(a1 + 2328))
  {
    v8 = *(void **)(a1 + 2288);
    if (v8)
    {
      *(_QWORD *)(a1 + 2296) = v8;
      operator delete(v8);
    }
  }
  sub_239A72DB4(a1 + 2120);
  sub_239A72F40(a1 + 1880);
  v9 = *(std::__shared_weak_count **)(a1 + 1872);
  if (!v9)
    goto LABEL_18;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    v12 = *(std::__shared_weak_count **)(a1 + 1856);
    if (!v12)
      goto LABEL_24;
  }
  else
  {
LABEL_18:
    v12 = *(std::__shared_weak_count **)(a1 + 1856);
    if (!v12)
      goto LABEL_24;
  }
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
LABEL_24:
  v15 = *(std::__shared_weak_count **)(a1 + 1840);
  if (!v15)
    goto LABEL_28;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    v18 = *(std::__shared_weak_count **)(a1 + 1824);
    if (!v18)
      goto LABEL_34;
  }
  else
  {
LABEL_28:
    v18 = *(std::__shared_weak_count **)(a1 + 1824);
    if (!v18)
      goto LABEL_34;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
LABEL_34:
  sub_239A73240(a1 + 920);
  sub_239A73AEC((void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
}

void sub_239BA72F4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA7308(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF7E68;
  result[1] = v3;
  return result;
}

uint64_t sub_239BA733C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF7E68;
  a2[1] = v2;
  return result;
}

uint64_t sub_239BA7358(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

void sub_239BA7364()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA7378()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AFAEB0;
  return result;
}

void sub_239BA739C(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AFAEB0;
}

void sub_239BA73B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  int v15;

  v2 = *a2;
  v3 = (std::__shared_weak_count *)operator new(0x38uLL);
  v3->__shared_owners_ = 0;
  v3->__shared_weak_owners_ = 0;
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF1A18;
  LODWORD(v11) = 63;
  sub_239A0406C(&v13, &v11);
  v13 = sub_239A04D98((uint64_t)&v3[1], &v13);
  v14 = v3;
  sub_239A025C0(v2, &v13);
  v4 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = (std::__shared_weak_count *)operator new(0x48uLL);
  v7->__shared_owners_ = 0;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF1598;
  v15 = 63;
  sub_239A0406C(&v11, &v15);
  v11 = sub_2399FF5A4((uint64_t)&v7[1], &v11);
  v12 = v7;
  sub_239A025C0(v2, &v11);
  v8 = v12;
  if (v12)
  {
    v9 = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239BA74E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13)
{
  unint64_t *p_shared_owners;
  unint64_t v15;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239BA7548(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_239BA7568()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BA757C()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AFAE68;
  return result;
}

void sub_239BA75A0(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AFAE68;
}

void sub_239BA75B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  int v15;

  v2 = *a2;
  v3 = (std::__shared_weak_count *)operator new(0x48uLL);
  v3->__shared_owners_ = 0;
  v3->__shared_weak_owners_ = 0;
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF1598;
  LODWORD(v11) = 63;
  sub_239A0406C(&v13, &v11);
  v13 = sub_2399FF5A4((uint64_t)&v3[1], &v13);
  v14 = v3;
  sub_239A025C0(v2, &v13);
  v4 = v14;
  if (!v14)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (!sub_2399FE3FC())
      return;
  }
  else
  {
LABEL_5:
    if (!sub_2399FE3FC())
      return;
  }
  v7 = (std::__shared_weak_count *)operator new(0x38uLL);
  v7->__shared_owners_ = 0;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF1A18;
  v15 = 63;
  sub_239A0406C(&v11, &v15);
  v11 = sub_239A04D98((uint64_t)&v7[1], &v11);
  v12 = v7;
  sub_239A025C0(v2, &v11);
  v8 = v12;
  if (v12)
  {
    v9 = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_239BA76F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13)
{
  unint64_t *p_shared_owners;
  unint64_t v15;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239BA777C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF7E30;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239BA778C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF7E30;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239BA77C4(uint64_t a1)
{
  void **v2;
  void *v3;
  void **v4;
  void *v5;
  void **v6;
  void *v7;
  void **v9;
  void **v10;
  void **v11;

  v2 = *(void ***)(a1 + 96);
  if (v2)
  {
    do
    {
      v9 = (void **)*v2;
      if (*((char *)v2 + 47) < 0)
        operator delete(v2[3]);
      operator delete(v2);
      v2 = v9;
    }
    while (v9);
  }
  v3 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = 0;
  if (v3)
    operator delete(v3);
  v4 = *(void ***)(a1 + 56);
  if (v4)
  {
    do
    {
      v10 = (void **)*v4;
      if (*((char *)v4 + 47) < 0)
        operator delete(v4[3]);
      operator delete(v4);
      v4 = v10;
    }
    while (v10);
  }
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0;
  if (v5)
    operator delete(v5);
  v6 = *(void ***)(a1 + 16);
  if (v6)
  {
    do
    {
      v11 = (void **)*v6;
      if (*((char *)v6 + 47) < 0)
        operator delete(v6[3]);
      operator delete(v6);
      v6 = v11;
    }
    while (v11);
  }
  v7 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v7)
    operator delete(v7);
  return a1;
}

void sub_239BA78AC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF7DF8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239BA78BC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF7DF8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239BA78EC(uint64_t a1)
{
  void **v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  void **v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  void *v47;
  void *v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;

  sub_2397A163C((pthread_mutex_t *)(a1 + 2064));
  v2 = *(void ***)(a1 + 2040);
  if (v2)
  {
    do
    {
      v14 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v14;
    }
    while (v14);
  }
  v3 = *(void **)(a1 + 2024);
  *(_QWORD *)(a1 + 2024) = 0;
  if (v3)
    operator delete(v3);
  sub_239BA77C4(a1 + 1904);
  if (*(char *)(a1 + 1879) < 0)
  {
    operator delete(*(void **)(a1 + 1856));
    if ((*(char *)(a1 + 1847) & 0x80000000) == 0)
    {
LABEL_6:
      v4 = *(void **)(a1 + 1800);
      if (!v4)
        goto LABEL_8;
      goto LABEL_7;
    }
  }
  else if ((*(char *)(a1 + 1847) & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(*(void **)(a1 + 1824));
  v4 = *(void **)(a1 + 1800);
  if (v4)
  {
LABEL_7:
    *(_QWORD *)(a1 + 1808) = v4;
    operator delete(v4);
  }
LABEL_8:
  sub_239586EB4(a1 + 1400);
  v5 = *(void **)(a1 + 1280);
  if (v5)
  {
    *(_QWORD *)(a1 + 1288) = v5;
    operator delete(v5);
  }
  if (*(char *)(a1 + 1279) < 0)
  {
    operator delete(*(void **)(a1 + 1256));
    if ((*(char *)(a1 + 1167) & 0x80000000) == 0)
    {
LABEL_12:
      v6 = *(void **)(a1 + 1120);
      if (!v6)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  else if ((*(char *)(a1 + 1167) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(*(void **)(a1 + 1144));
  v6 = *(void **)(a1 + 1120);
  if (v6)
  {
LABEL_13:
    *(_QWORD *)(a1 + 1128) = v6;
    operator delete(v6);
  }
LABEL_14:
  if ((*(char *)(a1 + 1031) & 0x80000000) == 0)
  {
    v7 = *(void **)(a1 + 616);
    if (!v7)
      goto LABEL_17;
    goto LABEL_16;
  }
  operator delete(*(void **)(a1 + 1008));
  v7 = *(void **)(a1 + 616);
  if (v7)
  {
LABEL_16:
    *(_QWORD *)(a1 + 624) = v7;
    operator delete(v7);
  }
LABEL_17:
  if (*(char *)(a1 + 615) < 0)
    operator delete(*(void **)(a1 + 592));
  sub_23979BCF4((_QWORD *)(a1 + 520));
  v8 = *(std::__shared_weak_count **)(a1 + 512);
  if (!v8)
    goto LABEL_23;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = *(std::__shared_weak_count **)(a1 + 496);
    if (!v11)
      goto LABEL_40;
  }
  else
  {
LABEL_23:
    v11 = *(std::__shared_weak_count **)(a1 + 496);
    if (!v11)
      goto LABEL_40;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
LABEL_40:
  v15 = *(std::__shared_weak_count **)(a1 + 480);
  if (!v15)
    goto LABEL_44;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    v18 = *(std::__shared_weak_count **)(a1 + 464);
    if (!v18)
      goto LABEL_50;
  }
  else
  {
LABEL_44:
    v18 = *(std::__shared_weak_count **)(a1 + 464);
    if (!v18)
      goto LABEL_50;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
LABEL_50:
  v21 = *(std::__shared_weak_count **)(a1 + 448);
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = *(_QWORD **)(a1 + 432);
  if (v24 == (_QWORD *)(a1 + 408))
  {
    v25 = 4;
    v24 = (_QWORD *)(a1 + 408);
  }
  else
  {
    if (!v24)
      goto LABEL_60;
    v25 = 5;
  }
  (*(void (**)(void))(*v24 + 8 * v25))();
LABEL_60:
  v26 = *(_QWORD **)(a1 + 400);
  if (v26 == (_QWORD *)(a1 + 376))
  {
    v27 = 4;
    v26 = (_QWORD *)(a1 + 376);
  }
  else
  {
    if (!v26)
      goto LABEL_65;
    v27 = 5;
  }
  (*(void (**)(void))(*v26 + 8 * v27))();
LABEL_65:
  v28 = *(_QWORD **)(a1 + 368);
  if (v28 == (_QWORD *)(a1 + 344))
  {
    v29 = 4;
    v28 = (_QWORD *)(a1 + 344);
  }
  else
  {
    if (!v28)
      goto LABEL_70;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_70:
  v30 = *(_QWORD **)(a1 + 336);
  if (v30 == (_QWORD *)(a1 + 312))
  {
    v31 = 4;
    v30 = (_QWORD *)(a1 + 312);
  }
  else
  {
    if (!v30)
      goto LABEL_75;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_75:
  v32 = *(_QWORD **)(a1 + 304);
  if (v32 == (_QWORD *)(a1 + 280))
  {
    v33 = 4;
    v32 = (_QWORD *)(a1 + 280);
  }
  else
  {
    if (!v32)
      goto LABEL_80;
    v33 = 5;
  }
  (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_80:
  v34 = *(_QWORD **)(a1 + 272);
  if (v34 == (_QWORD *)(a1 + 248))
  {
    v35 = 4;
    v34 = (_QWORD *)(a1 + 248);
    goto LABEL_84;
  }
  if (v34)
  {
    v35 = 5;
LABEL_84:
    (*(void (**)(void))(*v34 + 8 * v35))();
  }
  v36 = *(std::__shared_weak_count **)(a1 + 240);
  if (!v36)
    goto LABEL_89;
  v37 = (unint64_t *)&v36->__shared_owners_;
  do
    v38 = __ldaxr(v37);
  while (__stlxr(v38 - 1, v37));
  if (!v38)
  {
    ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
    std::__shared_weak_count::__release_weak(v36);
    v39 = *(std::__shared_weak_count **)(a1 + 224);
    if (!v39)
      goto LABEL_95;
  }
  else
  {
LABEL_89:
    v39 = *(std::__shared_weak_count **)(a1 + 224);
    if (!v39)
      goto LABEL_95;
  }
  v40 = (unint64_t *)&v39->__shared_owners_;
  do
    v41 = __ldaxr(v40);
  while (__stlxr(v41 - 1, v40));
  if (!v41)
  {
    ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
    std::__shared_weak_count::__release_weak(v39);
  }
LABEL_95:
  v42 = *(std::__shared_weak_count **)(a1 + 208);
  if (!v42)
    goto LABEL_99;
  v43 = (unint64_t *)&v42->__shared_owners_;
  do
    v44 = __ldaxr(v43);
  while (__stlxr(v44 - 1, v43));
  if (!v44)
  {
    ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
    std::__shared_weak_count::__release_weak(v42);
    v45 = *(_QWORD **)(a1 + 176);
    if (!v45)
      goto LABEL_101;
  }
  else
  {
LABEL_99:
    v45 = *(_QWORD **)(a1 + 176);
    if (!v45)
      goto LABEL_101;
  }
  do
  {
    v46 = (_QWORD *)*v45;
    operator delete(v45);
    v45 = v46;
  }
  while (v46);
LABEL_101:
  v47 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = 0;
  if (v47)
    operator delete(v47);
  v48 = *(void **)(a1 + 136);
  if (v48)
  {
    *(_QWORD *)(a1 + 144) = v48;
    operator delete(v48);
  }
  v49 = *(std::__shared_weak_count **)(a1 + 128);
  if (!v49)
    goto LABEL_109;
  v50 = (unint64_t *)&v49->__shared_owners_;
  do
    v51 = __ldaxr(v50);
  while (__stlxr(v51 - 1, v50));
  if (!v51)
  {
    ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
    std::__shared_weak_count::__release_weak(v49);
    v52 = *(std::__shared_weak_count **)(a1 + 112);
    if (!v52)
      goto LABEL_117;
  }
  else
  {
LABEL_109:
    v52 = *(std::__shared_weak_count **)(a1 + 112);
    if (!v52)
      goto LABEL_117;
  }
  v53 = (unint64_t *)&v52->__shared_owners_;
  do
    v54 = __ldaxr(v53);
  while (__stlxr(v54 - 1, v53));
  if (!v54)
  {
    ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
    std::__shared_weak_count::__release_weak(v52);
  }
LABEL_117:
  v55 = *(std::__shared_weak_count **)(a1 + 96);
  if (!v55)
    goto LABEL_121;
  v56 = (unint64_t *)&v55->__shared_owners_;
  do
    v57 = __ldaxr(v56);
  while (__stlxr(v57 - 1, v56));
  if (!v57)
  {
    ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
    std::__shared_weak_count::__release_weak(v55);
    v58 = *(std::__shared_weak_count **)(a1 + 80);
    if (!v58)
      goto LABEL_127;
  }
  else
  {
LABEL_121:
    v58 = *(std::__shared_weak_count **)(a1 + 80);
    if (!v58)
      goto LABEL_127;
  }
  v59 = (unint64_t *)&v58->__shared_owners_;
  do
    v60 = __ldaxr(v59);
  while (__stlxr(v60 - 1, v59));
  if (!v60)
  {
    ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
    std::__shared_weak_count::__release_weak(v58);
  }
LABEL_127:
  v61 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v61)
    goto LABEL_131;
  v62 = (unint64_t *)&v61->__shared_owners_;
  do
    v63 = __ldaxr(v62);
  while (__stlxr(v63 - 1, v62));
  if (!v63)
  {
    ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
    std::__shared_weak_count::__release_weak(v61);
    v64 = *(std::__shared_weak_count **)(a1 + 48);
    if (!v64)
      goto LABEL_137;
  }
  else
  {
LABEL_131:
    v64 = *(std::__shared_weak_count **)(a1 + 48);
    if (!v64)
      goto LABEL_137;
  }
  v65 = (unint64_t *)&v64->__shared_owners_;
  do
    v66 = __ldaxr(v65);
  while (__stlxr(v66 - 1, v65));
  if (!v66)
  {
    ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
    std::__shared_weak_count::__release_weak(v64);
  }
LABEL_137:
  v67 = *(std::__shared_weak_count **)(a1 + 32);
  if (v67)
  {
    v68 = (unint64_t *)&v67->__shared_owners_;
    do
      v69 = __ldaxr(v68);
    while (__stlxr(v69 - 1, v68));
    if (!v69)
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
    }
  }
}

uint64_t sub_239BA7F48(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  NSObject *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v16;
  uint64_t **rep;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v18;
  int v19;
  const char *v20;
  int v21;
  const char *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  _QWORD block[7];
  _BYTE v27[24];
  _BYTE *v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a1 + 24);
  if (v6 && *(_QWORD *)(v6 + 176) || !a3[3])
  {
    sub_239B71020(&v25);
    if (**(int **)(v25 + 56) <= 3)
    {
      if (*(_BYTE *)(v25 + 72))
      {
        v16 = &v25;
        rep = (uint64_t **)std::chrono::steady_clock::now().__d_.__rep_;
        v18 = std::chrono::system_clock::now().__d_.__rep_;
        v19 = 3;
        v20 = "unknown file";
        v21 = 1707;
        v23 = 0;
        v24 = 0;
        v22 = "unknown function";
        sub_239A002AC((uint64_t)&v16, "Adding sample, id=%llu", *a2);
        sub_239A47720((uint64_t)&v16);
        sub_239A47720((uint64_t)&v16);
        v8 = v24;
        if (v24)
        {
          p_shared_owners = (unint64_t *)&v24->__shared_owners_;
          do
            v10 = __ldaxr(p_shared_owners);
          while (__stlxr(v10 - 1, p_shared_owners));
          if (!v10)
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
        }
      }
    }
    dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 136));
    dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 144));
    dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 152));
    dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a1 + 160));
    v16 = 0;
    rep = &v16;
    v18 = 0x2000000000;
    v19 = -1;
    v11 = *(NSObject **)(a1 + 136);
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 1174405120;
    block[2] = sub_239BA81E8;
    block[3] = &unk_250AF7A88;
    block[4] = &v16;
    block[5] = a1;
    block[6] = a2;
    v12 = v27;
    v13 = a3[3];
    if (v13)
    {
      if ((_QWORD *)v13 == a3)
      {
        v28 = v27;
        (*(void (**)(_QWORD *, _BYTE *))(*a3 + 24))(a3, v27);
LABEL_17:
        dispatch_sync(v11, block);
        v7 = *((unsigned int *)rep + 6);
        if (v28 == v27)
        {
          v14 = 4;
        }
        else
        {
          if (!v28)
          {
LABEL_22:
            _Block_object_dispose(&v16, 8);
            return v7;
          }
          v14 = 5;
          v12 = v28;
        }
        (*(void (**)(_QWORD *))(*v12 + 8 * v14))(v12);
        goto LABEL_22;
      }
      v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 16))(v13);
    }
    v28 = (_BYTE *)v13;
    goto LABEL_17;
  }
  return 4294967294;
}

void sub_239BA81A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_239BA81E8(_QWORD *a1)
{
  _QWORD *v1;
  NSObject *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD v6[7];
  _BYTE v7[24];
  _BYTE *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v1 = (_QWORD *)a1[5];
  if (v1[21] != v1[22])
  {
    *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = -4;
    return;
  }
  v2 = v1[19];
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1174405120;
  v6[2] = sub_239BA83C8;
  v6[3] = &unk_250AF7A50;
  v6[4] = a1[4];
  v6[5] = v1;
  v6[6] = a1[6];
  v3 = v7;
  v4 = (_QWORD *)a1[10];
  if (v4)
  {
    if (v4 == a1 + 7)
    {
      v8 = v7;
      (*(void (**)(_QWORD *, _BYTE *))(*v4 + 24))(v4, v7);
    }
    else
    {
      v8 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*v4 + 16))(a1[10]);
    }
  }
  else
  {
    v8 = 0;
  }
  dispatch_sync(v2, v6);
  if (v8 == v7)
  {
    v5 = 4;
  }
  else
  {
    if (!v8)
      return;
    v5 = 5;
    v3 = v8;
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v5))(v3);
}

uint64_t sub_239BA8328(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a2 + 80);
  if (result)
  {
    if (result == a2 + 56)
    {
      *(_QWORD *)(a1 + 80) = a1 + 56;
      return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 80) + 24))(*(_QWORD *)(a2 + 80), a1 + 56);
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
      *(_QWORD *)(a1 + 80) = result;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 80) = 0;
  }
  return result;
}

_QWORD *sub_239BA8394(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 56);
  result = *(_QWORD **)(a1 + 80);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

_QWORD *sub_239BA83C8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v2 = a1[5];
  v3 = (unint64_t *)a1[6];
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(uint64_t **)(v2 + 24);
  v6 = (_QWORD *)a1[10];
  if (v6)
  {
    if (v6 == a1 + 7)
    {
      v10 = v9;
      (*(void (**)(_QWORD *, _QWORD *))(*v6 + 24))(v6, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v6 + 16))(v6);
    }
  }
  else
  {
    v10 = 0;
  }
  *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = sub_239B2AE68(v3, v4, v5, v9);
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239BA84CC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239BA84D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      _Unwind_Resume(exception_object);
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
  _Unwind_Resume(exception_object);
}

void sub_239BA8518(_QWORD *a1)
{
  _QWORD *v1;
  NSObject *v2;
  _QWORD block[7];

  v1 = (_QWORD *)a1[5];
  if (v1[21] == v1[22])
  {
    v2 = v1[19];
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = sub_239BA85A0;
    block[3] = &unk_250AF7AC0;
    block[4] = a1[4];
    block[5] = v1;
    block[6] = a1[6];
    dispatch_sync(v2, block);
  }
  else
  {
    *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = -4;
  }
}

void sub_239BA85A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _BYTE *v37;
  char *v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _BYTE *v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _BYTE *v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  __int128 *v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  _OWORD *v66;
  __int128 *v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  _OWORD *v71;
  __int128 *v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t i;
  char *v79;
  uint64_t v80;
  char *v81;
  int64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  _BYTE *v86;
  char *v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  _OWORD *v92;
  char *v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  __int128 v114;
  _QWORD *v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t (**v124)();
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  int64x2_t v131;
  void **v132;
  __int128 **v133;
  uint64_t *v134;
  uint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *p_shared_owners;
  unint64_t v138;
  uint64_t (***v139)();
  uint64_t v140;
  unint64_t *v141;
  unint64_t v142;
  _QWORD *v143;
  std::__shared_weak_count *v144;
  unint64_t *v145;
  unint64_t v146;
  void **v147;
  char *v148;
  char *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  char *v158;
  char *v159;
  char *v160;
  unint64_t v161;
  _QWORD *v162;
  char *v163;
  __int128 v164;
  char *v165;
  void *v166;
  unint64_t *v167;
  unint64_t v168;
  uint64_t v169;
  __int128 **v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  int8x16_t v177;
  int8x16_t v178;
  int8x16_t v179;
  int8x16_t v180;
  int8x16_t v181;
  int8x16_t v182;
  _OWORD v183[2];
  _OWORD v184[2];
  _OWORD v185[2];
  __int128 v186;
  void *__p;
  char *v188;
  char *v189;
  void *v190;
  char *v191;
  char *v192;
  void *v193;
  char *v194;
  char *v195;
  _OWORD v196[8];
  _OWORD v197[8];
  void *v198;
  char *v199;
  char *v200;
  char v201;
  __int128 __dst;
  uint64_t v203;
  __int128 v204;
  uint64_t v205;
  uint64_t v206[2];
  uint64_t (**v207)();
  int64x2_t v208;
  void **v209;
  _QWORD *v210;
  uint64_t v211;

  v211 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v172 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 24);
  if (*(char *)(v3 + 23) < 0)
  {
    sub_23941A7F8(&__dst, *(void **)v3, *(_QWORD *)(v3 + 8));
  }
  else
  {
    v5 = *(_OWORD *)v3;
    v203 = *(_QWORD *)(v3 + 16);
    __dst = v5;
  }
  v175 = *(_OWORD *)(v3 + 80);
  v176 = *(_OWORD *)(v3 + 48);
  v179 = *(int8x16_t *)(v3 + 64);
  v181 = *(int8x16_t *)(v3 + 32);
  v174 = *(_OWORD *)(v3 + 112);
  v177 = *(int8x16_t *)(v3 + 96);
  v6 = *(_QWORD *)(v3 + 256);
  v198 = 0;
  v199 = 0;
  v200 = 0;
  v7 = *(_QWORD *)(v3 + 272);
  v8 = *(_QWORD *)(v3 + 280);
  v9 = v8 - v7;
  v169 = a1;
  if (v8 != v7)
  {
    v10 = 0xCCCCCCCCCCCCCCCDLL * (v9 >> 3);
    if (v10 >= 0x666666666666667)
      sub_2394189F8();
    v11 = (char *)operator new(v9);
    v12 = 0;
    v198 = v11;
    v200 = &v11[40 * v10];
    do
    {
      v13 = v7 + v12;
      v14 = &v11[v12];
      v15 = *(_OWORD *)(v7 + v12);
      *((_DWORD *)v14 + 4) = *(_DWORD *)(v7 + v12 + 16);
      *(_OWORD *)v14 = v15;
      *(_QWORD *)(v14 + 20) = *(_QWORD *)(v7 + v12 + 20);
      v16 = *(_QWORD *)(v7 + v12 + 28);
      *((_DWORD *)v14 + 9) = *(_DWORD *)(v7 + v12 + 36);
      *(_QWORD *)(v14 + 28) = v16;
      v12 += 40;
    }
    while (v13 + 40 != v8);
    v199 = &v11[v12];
  }
  v173 = v4;
  v201 = *(_BYTE *)(v3 + 296);
  v17 = *(_OWORD *)(v3 + 384);
  v197[4] = *(_OWORD *)(v3 + 368);
  v197[5] = v17;
  v18 = *(_OWORD *)(v3 + 416);
  v197[6] = *(_OWORD *)(v3 + 400);
  v197[7] = v18;
  v19 = *(_OWORD *)(v3 + 320);
  v197[0] = *(_OWORD *)(v3 + 304);
  v197[1] = v19;
  v20 = *(_OWORD *)(v3 + 352);
  v197[2] = *(_OWORD *)(v3 + 336);
  v197[3] = v20;
  v21 = *(_OWORD *)(v3 + 208);
  v196[4] = *(_OWORD *)(v3 + 192);
  v196[5] = v21;
  v22 = *(_OWORD *)(v3 + 240);
  v196[6] = *(_OWORD *)(v3 + 224);
  v196[7] = v22;
  v23 = *(_OWORD *)(v3 + 144);
  v196[0] = *(_OWORD *)(v3 + 128);
  v196[1] = v23;
  v24 = *(_OWORD *)(v3 + 176);
  v196[2] = *(_OWORD *)(v3 + 160);
  v196[3] = v24;
  v25 = (char *)operator new(0x48uLL);
  v26 = v25 + 72;
  v193 = v25;
  v194 = v25;
  v195 = v25 + 72;
  v190 = operator new(0x80uLL);
  v191 = (char *)v190;
  v192 = (char *)v190 + 128;
  v27 = 0;
  v170 = (__int128 **)(v3 + 272);
  v171 = v3;
  __p = operator new(0x80uLL);
  v188 = (char *)__p;
  v189 = (char *)__p + 128;
  v29 = v179;
  v28 = v181;
  v30 = v177;
  v28.i64[1] = vextq_s8(v28, v28, 8uLL).u64[0];
  v29.i64[1] = vextq_s8(v29, v29, 8uLL).u64[0];
  v180 = v29;
  v182 = v28;
  v30.i64[1] = vextq_s8(v30, v30, 8uLL).u64[0];
  v178 = v30;
  v31 = v25;
  do
  {
    v185[0] = v182;
    v185[1] = v176;
    v32 = *((_QWORD *)v185 + (v27 & 3));
    if (v31 < v26)
    {
      *(_QWORD *)v31 = v32;
      v33 = v31 + 8;
      goto LABEL_31;
    }
    v34 = (v31 - v25) >> 3;
    v35 = v34 + 1;
    if ((unint64_t)(v34 + 1) >> 61)
      goto LABEL_234;
    if ((v26 - v25) >> 2 > v35)
      v35 = (v26 - v25) >> 2;
    if ((unint64_t)(v26 - v25) >= 0x7FFFFFFFFFFFFFF8)
      v36 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v36 = v35;
    if (v36)
    {
      if (v36 >> 61)
        goto LABEL_235;
      v37 = operator new(8 * v36);
    }
    else
    {
      v37 = 0;
    }
    v38 = &v37[8 * v34];
    *(_QWORD *)v38 = v32;
    v33 = v38 + 8;
    if (v31 != v25)
    {
      v39 = v31 - 8 - v25;
      if (v39 >= 0x168)
      {
        if (&v37[v31 - v25 - 8 - (v39 & 0xFFFFFFFFFFFFFFF8)] > &v37[v31 - v25 - 8])
        {
          v40 = v31;
        }
        else if (&v31[-(v39 & 0xFFFFFFFFFFFFFFF8) - 8] > v31 - 8)
        {
          v40 = v31;
        }
        else if ((unint64_t)(v25 - v37) >= 0x20)
        {
          v60 = (v39 >> 3) + 1;
          v40 = &v31[-8 * (v60 & 0x3FFFFFFFFFFFFFFCLL)];
          v61 = &v37[8 * v34 - 16];
          v62 = (__int128 *)(v31 - 16);
          v63 = v60 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v64 = *v62;
            *(v61 - 1) = *(v62 - 1);
            *v61 = v64;
            v61 -= 2;
            v62 -= 2;
            v63 -= 4;
          }
          while (v63);
          v38 -= 8 * (v60 & 0x3FFFFFFFFFFFFFFCLL);
          if (v60 == (v60 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_28;
        }
        else
        {
          v40 = v31;
        }
      }
      else
      {
        v40 = v31;
      }
      do
      {
        v41 = *((_QWORD *)v40 - 1);
        v40 -= 8;
        *((_QWORD *)v38 - 1) = v41;
        v38 -= 8;
      }
      while (v40 != v25);
    }
LABEL_28:
    v26 = &v37[8 * v36];
    v193 = v38;
    v194 = v33;
    v195 = v26;
    if (v25)
    {
      operator delete(v25);
      v26 = v195;
    }
    v25 = v38;
LABEL_31:
    v194 = v33;
    v184[0] = v180;
    v184[1] = v175;
    v42 = *((_QWORD *)v184 + (v27 & 3));
    if (v33 < v26)
    {
      *(_QWORD *)v33 = v42;
      v43 = v25;
      v44 = v33 + 8;
      goto LABEL_49;
    }
    v45 = (v33 - v25) >> 3;
    v46 = v45 + 1;
    if ((unint64_t)(v45 + 1) >> 61)
      goto LABEL_234;
    if ((v26 - v25) >> 2 > v46)
      v46 = (v26 - v25) >> 2;
    if ((unint64_t)(v26 - v25) >= 0x7FFFFFFFFFFFFFF8)
      v47 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v47 = v46;
    if (v47)
    {
      if (v47 >> 61)
        goto LABEL_235;
      v48 = operator new(8 * v47);
    }
    else
    {
      v48 = 0;
    }
    v43 = &v48[8 * v45];
    *(_QWORD *)v43 = v42;
    v44 = v43 + 8;
    if (v33 != v25)
    {
      v49 = v33 - 8 - v25;
      if (v49 < 0x168)
      {
        v50 = v33;
        goto LABEL_46;
      }
      if (&v48[v33 - v25 - 8 - (v49 & 0xFFFFFFFFFFFFFFF8)] > &v48[v33 - v25 - 8])
      {
        v50 = v33;
        do
        {
LABEL_46:
          v51 = *((_QWORD *)v50 - 1);
          v50 -= 8;
          *((_QWORD *)v43 - 1) = v51;
          v43 -= 8;
        }
        while (v50 != v25);
        goto LABEL_47;
      }
      if (&v33[-(v49 & 0xFFFFFFFFFFFFFFF8) - 8] > v33 - 8)
      {
        v50 = v33;
        goto LABEL_46;
      }
      if ((unint64_t)(v25 - v48) < 0x20)
      {
        v50 = v33;
        goto LABEL_46;
      }
      v65 = (v49 >> 3) + 1;
      v50 = &v33[-8 * (v65 & 0x3FFFFFFFFFFFFFFCLL)];
      v66 = &v48[8 * v45 - 16];
      v67 = (__int128 *)(v33 - 16);
      v68 = v65 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v69 = *v67;
        *(v66 - 1) = *(v67 - 1);
        *v66 = v69;
        v66 -= 2;
        v67 -= 2;
        v68 -= 4;
      }
      while (v68);
      v43 -= 8 * (v65 & 0x3FFFFFFFFFFFFFFCLL);
      if (v65 != (v65 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_46;
    }
LABEL_47:
    v26 = &v48[8 * v47];
    v193 = v43;
    v194 = v44;
    v195 = v26;
    if (v25)
    {
      operator delete(v25);
      v26 = v195;
    }
LABEL_49:
    v194 = v44;
    v183[0] = v178;
    v183[1] = v174;
    v52 = *((_QWORD *)v183 + (v27 & 3));
    if (v44 < v26)
    {
      *(_QWORD *)v44 = v52;
      v25 = v43;
      v31 = v44 + 8;
      goto LABEL_11;
    }
    v53 = (v44 - v43) >> 3;
    v54 = v53 + 1;
    if ((unint64_t)(v53 + 1) >> 61)
LABEL_234:
      sub_2394189F8();
    if ((v26 - v43) >> 2 > v54)
      v54 = (v26 - v43) >> 2;
    if ((unint64_t)(v26 - v43) >= 0x7FFFFFFFFFFFFFF8)
      v55 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v55 = v54;
    if (v55)
    {
      if (v55 >> 61)
LABEL_235:
        sub_239418A80();
      v56 = operator new(8 * v55);
    }
    else
    {
      v56 = 0;
    }
    v25 = &v56[8 * v53];
    *(_QWORD *)v25 = v52;
    v31 = v25 + 8;
    if (v44 != v43)
    {
      v57 = v44 - 8 - v43;
      if (v57 < 0x168)
      {
        v58 = v44;
        goto LABEL_63;
      }
      if (&v56[v44 - v43 - 8 - (v57 & 0xFFFFFFFFFFFFFFF8)] > &v56[v44 - v43 - 8])
      {
        v58 = v44;
        do
        {
LABEL_63:
          v59 = *((_QWORD *)v58 - 1);
          v58 -= 8;
          *((_QWORD *)v25 - 1) = v59;
          v25 -= 8;
        }
        while (v58 != v43);
        goto LABEL_64;
      }
      if (&v44[-(v57 & 0xFFFFFFFFFFFFFFF8) - 8] > v44 - 8)
      {
        v58 = v44;
        goto LABEL_63;
      }
      if ((unint64_t)(v43 - v56) < 0x20)
      {
        v58 = v44;
        goto LABEL_63;
      }
      v70 = (v57 >> 3) + 1;
      v58 = &v44[-8 * (v70 & 0x3FFFFFFFFFFFFFFCLL)];
      v71 = &v56[8 * v53 - 16];
      v72 = (__int128 *)(v44 - 16);
      v73 = v70 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v74 = *v72;
        *(v71 - 1) = *(v72 - 1);
        *v71 = v74;
        v71 -= 2;
        v72 -= 2;
        v73 -= 4;
      }
      while (v73);
      v25 -= 8 * (v70 & 0x3FFFFFFFFFFFFFFCLL);
      if (v70 != (v70 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_63;
    }
LABEL_64:
    v26 = &v56[8 * v55];
    v193 = v25;
    v194 = v31;
    v195 = v26;
    if (v43)
      operator delete(v43);
LABEL_11:
    v194 = v31;
    ++v27;
  }
  while (v27 != 3);
  v75 = 0;
  v77 = v191;
  v76 = v192;
  do
  {
    for (i = 0; i != 4; ++i)
    {
      v80 = *((_QWORD *)&v196[2 * i] + (v75 & 3));
      if (v77 < v76)
      {
        *(_QWORD *)v77 = v80;
        v77 += 8;
        goto LABEL_125;
      }
      v81 = (char *)v190;
      v82 = v77 - (_BYTE *)v190;
      v83 = (v77 - (_BYTE *)v190) >> 3;
      v84 = v83 + 1;
      if ((unint64_t)(v83 + 1) >> 61)
        sub_2394189F8();
      if ((v76 - (_BYTE *)v190) >> 2 > v84)
        v84 = (v76 - (_BYTE *)v190) >> 2;
      if ((unint64_t)(v76 - (_BYTE *)v190) >= 0x7FFFFFFFFFFFFFF8)
        v85 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v85 = v84;
      if (v85)
      {
        if (v85 >> 61)
          sub_239418A80();
        v86 = operator new(8 * v85);
      }
      else
      {
        v86 = 0;
      }
      v87 = &v86[8 * v83];
      *(_QWORD *)v87 = v80;
      v88 = v87 + 8;
      if (v77 != v81)
      {
        v89 = v77 - 8 - v81;
        if (v89 >= 0x58)
        {
          if ((unint64_t)(v77 - &v86[v82]) >= 0x20)
          {
            v91 = (v89 >> 3) + 1;
            v90 = &v77[-8 * (v91 & 0x3FFFFFFFFFFFFFFCLL)];
            v92 = &v86[8 * v83 - 16];
            v93 = v77 - 16;
            v94 = v91 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v95 = *(_OWORD *)v93;
              *(v92 - 1) = *((_OWORD *)v93 - 1);
              *v92 = v95;
              v92 -= 2;
              v93 -= 32;
              v94 -= 4;
            }
            while (v94);
            v87 -= 8 * (v91 & 0x3FFFFFFFFFFFFFFCLL);
            if (v91 == (v91 & 0x3FFFFFFFFFFFFFFCLL))
              goto LABEL_122;
          }
          else
          {
            v90 = v77;
          }
        }
        else
        {
          v90 = v77;
        }
        do
        {
          v96 = *((_QWORD *)v90 - 1);
          v90 -= 8;
          *((_QWORD *)v87 - 1) = v96;
          v87 -= 8;
        }
        while (v90 != v81);
      }
LABEL_122:
      v76 = &v86[8 * v85];
      v190 = v87;
      v192 = v76;
      if (v81)
        operator delete(v81);
      v77 = v88;
LABEL_125:
      v191 = v77;
      v97 = *((_QWORD *)&v197[2 * i] + (v75 & 3));
      v98 = v188;
      if (v188 < v189)
      {
        *(_QWORD *)v188 = v97;
        v79 = v98 + 8;
      }
      else
      {
        v99 = (char *)__p;
        v100 = v188 - (_BYTE *)__p;
        v101 = (v188 - (_BYTE *)__p) >> 3;
        v102 = v101 + 1;
        if ((unint64_t)(v101 + 1) >> 61)
          sub_2394189F8();
        v103 = v189 - (_BYTE *)__p;
        if ((v189 - (_BYTE *)__p) >> 2 > v102)
          v102 = v103 >> 2;
        if ((unint64_t)v103 >= 0x7FFFFFFFFFFFFFF8)
          v104 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v104 = v102;
        if (v104)
        {
          if (v104 >> 61)
            sub_239418A80();
          v105 = (char *)operator new(8 * v104);
        }
        else
        {
          v105 = 0;
        }
        v106 = &v105[8 * v101];
        *(_QWORD *)v106 = v97;
        v79 = v106 + 8;
        if (v98 != v99)
        {
          v107 = v98 - 8 - v99;
          if (v107 < 0x58)
            goto LABEL_243;
          if ((unint64_t)(v98 - &v105[v100]) < 0x20)
            goto LABEL_243;
          v108 = (v107 >> 3) + 1;
          v109 = &v105[8 * v101 - 16];
          v110 = v98 - 16;
          v111 = v108 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v112 = *(_OWORD *)v110;
            *((_OWORD *)v109 - 1) = *((_OWORD *)v110 - 1);
            *(_OWORD *)v109 = v112;
            v109 -= 32;
            v110 -= 32;
            v111 -= 4;
          }
          while (v111);
          v106 -= 8 * (v108 & 0x3FFFFFFFFFFFFFFCLL);
          v98 -= 8 * (v108 & 0x3FFFFFFFFFFFFFFCLL);
          if (v108 != (v108 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_243:
            do
            {
              v113 = *((_QWORD *)v98 - 1);
              v98 -= 8;
              *((_QWORD *)v106 - 1) = v113;
              v106 -= 8;
            }
            while (v98 != v99);
          }
        }
        __p = v106;
        v189 = &v105[8 * v104];
        if (v99)
          operator delete(v99);
      }
      v188 = v79;
    }
    ++v75;
  }
  while (v75 != 4);
  *(_QWORD *)&v114 = v6;
  *((_QWORD *)&v114 + 1) = HIDWORD(v6);
  v186 = v114;
  v115 = *(_QWORD **)(v173 + 80);
  v116 = v115[26];
  v117 = v115[27];
  if (v116 >= v117)
  {
    v119 = v115[25];
    v120 = 0x8E38E38E38E38E39 * ((uint64_t)(v116 - v119) >> 4);
    if (v120 + 1 > 0x1C71C71C71C71C7)
      sub_2394189F8();
    v121 = 0x8E38E38E38E38E39 * ((uint64_t)(v117 - v119) >> 4);
    v122 = 2 * v121;
    if (2 * v121 <= v120 + 1)
      v122 = v120 + 1;
    if (v121 >= 0xE38E38E38E38E3)
      v123 = 0x1C71C71C71C71C7;
    else
      v123 = v122;
    v210 = v115 + 27;
    if (v123)
    {
      if (v123 > 0x1C71C71C71C71C7)
        sub_239418A80();
      v124 = (uint64_t (**)())operator new(144 * v123);
    }
    else
    {
      v124 = 0;
    }
    v207 = v124;
    v208.i64[0] = (uint64_t)&v124[18 * v120];
    v208.i64[1] = v208.i64[0];
    v209 = (void **)&v124[18 * v123];
    sub_239B315DC(v208.i64[0], &__dst, (uint64_t)&v193, (uint64_t)&v190, (uint64_t)&__p, &v186, *(_DWORD *)(v171 + 432));
    v125 = v208.i64[0];
    v118 = v208.i64[1] + 144;
    v208.i64[1] += 144;
    v127 = v115[25];
    v126 = v115[26];
    if (v126 == v127)
    {
      v131 = vdupq_n_s64(v126);
    }
    else
    {
      do
      {
        v128 = *(_OWORD *)(v126 - 144);
        *(_QWORD *)(v125 - 128) = *(_QWORD *)(v126 - 128);
        *(_OWORD *)(v125 - 144) = v128;
        *(_QWORD *)(v126 - 136) = 0;
        *(_QWORD *)(v126 - 128) = 0;
        *(_QWORD *)(v126 - 144) = 0;
        v129 = *(_OWORD *)(v126 - 120);
        *(_QWORD *)(v125 - 104) = *(_QWORD *)(v126 - 104);
        *(_OWORD *)(v125 - 120) = v129;
        *(_QWORD *)(v126 - 112) = 0;
        *(_QWORD *)(v126 - 104) = 0;
        *(_QWORD *)(v126 - 120) = 0;
        *(_QWORD *)(v125 - 96) = 0;
        *(_QWORD *)(v125 - 88) = 0;
        *(_QWORD *)(v125 - 80) = 0;
        *(_OWORD *)(v125 - 96) = *(_OWORD *)(v126 - 96);
        *(_QWORD *)(v125 - 80) = *(_QWORD *)(v126 - 80);
        *(_QWORD *)(v126 - 96) = 0;
        *(_QWORD *)(v126 - 88) = 0;
        *(_QWORD *)(v126 - 80) = 0;
        *(_QWORD *)(v125 - 72) = 0;
        *(_QWORD *)(v125 - 64) = 0;
        *(_QWORD *)(v125 - 56) = 0;
        *(_OWORD *)(v125 - 72) = *(_OWORD *)(v126 - 72);
        *(_QWORD *)(v125 - 56) = *(_QWORD *)(v126 - 56);
        *(_QWORD *)(v126 - 72) = 0;
        *(_QWORD *)(v126 - 64) = 0;
        *(_QWORD *)(v126 - 56) = 0;
        *(_QWORD *)(v125 - 48) = 0;
        *(_QWORD *)(v125 - 40) = 0;
        *(_QWORD *)(v125 - 32) = 0;
        *(_OWORD *)(v125 - 48) = *(_OWORD *)(v126 - 48);
        *(_QWORD *)(v125 - 32) = *(_QWORD *)(v126 - 32);
        *(_QWORD *)(v126 - 48) = 0;
        *(_QWORD *)(v126 - 40) = 0;
        *(_QWORD *)(v126 - 32) = 0;
        v130 = *(_OWORD *)(v126 - 24);
        *(_DWORD *)(v125 - 8) = *(_DWORD *)(v126 - 8);
        *(_OWORD *)(v125 - 24) = v130;
        v125 -= 144;
        v126 -= 144;
      }
      while (v126 != v127);
      v131 = *(int64x2_t *)(v115 + 25);
      v118 = v208.i64[1];
    }
    v115[25] = v125;
    v115[26] = v118;
    v208 = v131;
    v132 = (void **)v115[27];
    v115[27] = v209;
    v209 = v132;
    v207 = (uint64_t (**)())v131.i64[0];
    sub_2395FEB00((uint64_t)&v207, v131.i64[0]);
    if (v207)
      operator delete(v207);
  }
  else
  {
    sub_239B315DC(v115[26], &__dst, (uint64_t)&v193, (uint64_t)&v190, (uint64_t)&__p, &v186, *(_DWORD *)(v171 + 432));
    v118 = v116 + 144;
    v115[26] = v116 + 144;
  }
  v115[26] = v118;
  v133 = (__int128 **)operator new(0x38uLL);
  sub_239B1DDEC((uint64_t)v133, v170);
  v134 = *(uint64_t **)(v172 + 1840);
  if (0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(v134[2] + 8) - *(_QWORD *)v134[2]) >> 3) == v134[9])
  {
    sub_239A6EB88(*(_QWORD *)(v172 + 1840), (const void **)&__dst);
    v135 = *v134;
    v136 = (std::__shared_weak_count *)v134[3];
    v206[0] = v134[2];
    v206[1] = (uint64_t)v136;
    if (v136)
    {
      p_shared_owners = (unint64_t *)&v136->__shared_owners_;
      do
        v138 = __ldxr(p_shared_owners);
      while (__stxr(v138 + 1, p_shared_owners));
    }
    if (SHIBYTE(v203) < 0)
    {
      sub_23941A7F8(&v204, (void *)__dst, *((unint64_t *)&__dst + 1));
    }
    else
    {
      v204 = __dst;
      v205 = v203;
    }
    v207 = &off_250AF2C50;
    v209 = (void **)&v207;
    sub_239A6ED78(v135, v206, (uint64_t)&v204, &v207);
    v139 = (uint64_t (***)())v209;
    if (v209 == (void **)&v207)
    {
      v140 = 4;
      v139 = &v207;
LABEL_177:
      ((void (*)(uint64_t (***)()))(*v139)[v140])(v139);
    }
    else if (v209)
    {
      v140 = 5;
      goto LABEL_177;
    }
    if (SHIBYTE(v205) < 0)
      operator delete((void *)v204);
    if (v136)
    {
      v141 = (unint64_t *)&v136->__shared_owners_;
      do
        v142 = __ldaxr(v141);
      while (__stlxr(v142 - 1, v141));
      if (!v142)
      {
        ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
        std::__shared_weak_count::__release_weak(v136);
      }
    }
    v143 = operator new(0x30uLL);
    v143[1] = 0;
    v143[2] = 0;
    *v143 = &off_250AF2C18;
    v143[4] = 0;
    v143[5] = 0;
    v143[3] = 0;
    v144 = (std::__shared_weak_count *)v134[3];
    v134[2] = (uint64_t)(v143 + 3);
    v134[3] = (uint64_t)v143;
    if (v144)
    {
      v145 = (unint64_t *)&v144->__shared_owners_;
      do
        v146 = __ldaxr(v145);
      while (__stlxr(v146 - 1, v145));
      if (!v146)
      {
        ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
        std::__shared_weak_count::__release_weak(v144);
      }
    }
  }
  v147 = (void **)v134[2];
  v149 = (char *)v147[1];
  v148 = (char *)v147[2];
  if (v149 >= v148)
  {
    v152 = 0x6DB6DB6DB6DB6DB7 * ((v149 - (_BYTE *)*v147) >> 3);
    if ((unint64_t)(v152 + 1) > 0x492492492492492)
      sub_2394189F8();
    v153 = 0x6DB6DB6DB6DB6DB7 * ((v148 - (_BYTE *)*v147) >> 3);
    v154 = 2 * v153;
    if (2 * v153 <= v152 + 1)
      v154 = v152 + 1;
    if (v153 >= 0x249249249249249)
      v155 = 0x492492492492492;
    else
      v155 = v154;
    if (v155)
    {
      if (v155 > 0x492492492492492)
        sub_239418A80();
      v156 = operator new(56 * v155);
    }
    else
    {
      v156 = 0;
    }
    v157 = sub_239A6F040(&v156[7 * v152], &__dst, v133 + 3);
    v158 = (char *)&v156[7 * v155];
    v150 = v157 + 7;
    v159 = (char *)*v147;
    v160 = (char *)v147[1];
    if (v160 == *v147)
    {
      *v147 = v157;
      v147[1] = v150;
      v147[2] = v158;
      v151 = v169;
    }
    else
    {
      v161 = 0;
      v151 = v169;
      do
      {
        v162 = &v157[v161 / 8];
        v163 = &v160[v161];
        v164 = *(_OWORD *)&v160[v161 - 56];
        *(v162 - 5) = *(_QWORD *)&v160[v161 - 40];
        *(_OWORD *)(v162 - 7) = v164;
        *((_QWORD *)v163 - 6) = 0;
        *((_QWORD *)v163 - 5) = 0;
        *((_QWORD *)v163 - 7) = 0;
        *(v162 - 4) = 0;
        *(v162 - 3) = 0;
        *(v162 - 2) = 0;
        *((_OWORD *)v162 - 2) = *(_OWORD *)&v160[v161 - 32];
        *(v162 - 2) = *(_QWORD *)&v160[v161 - 16];
        *((_QWORD *)v163 - 4) = 0;
        *((_QWORD *)v163 - 3) = 0;
        *((_QWORD *)v163 - 2) = 0;
        *((_BYTE *)v162 - 8) = v160[v161 - 8];
        v161 -= 56;
      }
      while (&v160[v161] != v159);
      v160 = (char *)*v147;
      v165 = (char *)v147[1];
      *v147 = &v157[v161 / 8];
      v147[1] = v150;
      v147[2] = v158;
      while (v165 != v160)
      {
        v166 = (void *)*((_QWORD *)v165 - 4);
        if (v166)
        {
          *((_QWORD *)v165 - 3) = v166;
          operator delete(v166);
        }
        if (*(v165 - 33) < 0)
          operator delete(*((void **)v165 - 7));
        v165 -= 56;
      }
    }
    if (v160)
      operator delete(v160);
  }
  else
  {
    sub_239A6F040(v147[1], &__dst, v133 + 3);
    v150 = v149 + 56;
    v147[1] = v149 + 56;
    v151 = v169;
  }
  v147[1] = v150;
  v167 = (unint64_t *)(v133 + 1);
  do
    v168 = __ldaxr(v167);
  while (__stlxr(v168 - 1, v167));
  if (!v168)
  {
    (*((void (**)(__int128 **))*v133 + 2))(v133);
    std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v133);
  }
  if (__p)
    operator delete(__p);
  if (v190)
    operator delete(v190);
  if (v193)
    operator delete(v193);
  if (v198)
    operator delete(v198);
  if (SHIBYTE(v203) < 0)
    operator delete((void *)__dst);
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v151 + 32) + 8) + 24) = 0;
}

void sub_239BA9584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49)
{
  std::__shared_weak_count *v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *p_shared_owners;
  unint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  void *v57;
  void *v58;

  if (v50)
  {
    p_shared_owners = (unint64_t *)&v50->__shared_owners_;
    do
      v54 = __ldaxr(p_shared_owners);
    while (__stlxr(v54 - 1, p_shared_owners));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  v55 = (unint64_t *)&v49->__shared_owners_;
  do
    v56 = __ldaxr(v55);
  while (__stlxr(v56 - 1, v55));
  if (!v56)
  {
    ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
    std::__shared_weak_count::__release_weak(v49);
  }
  if (a42)
  {
    operator delete(a42);
    v57 = a45;
    if (!a45)
    {
LABEL_12:
      v58 = a48;
      if (!a48)
        goto LABEL_13;
      goto LABEL_20;
    }
  }
  else
  {
    v57 = a45;
    if (!a45)
      goto LABEL_12;
  }
  operator delete(v57);
  v58 = a48;
  if (!a48)
  {
LABEL_13:
    if (!__p)
      goto LABEL_15;
    goto LABEL_14;
  }
LABEL_20:
  operator delete(v58);
  if (!__p)
  {
LABEL_15:
    if (*(char *)(v51 - 201) < 0)
      operator delete(*(void **)(v51 - 224));
    _Unwind_Resume(exception_object);
  }
LABEL_14:
  operator delete(__p);
  goto LABEL_15;
}

void sub_239BA9764(_QWORD *a1)
{
  _QWORD *v1;
  NSObject *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD v6[7];
  _BYTE v7[24];
  _BYTE *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v1 = (_QWORD *)a1[5];
  if (v1[21] != v1[22])
  {
    *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = -4;
    return;
  }
  v2 = v1[19];
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1174405120;
  v6[2] = sub_239BA98A4;
  v6[3] = &unk_250AF7B10;
  v6[4] = a1[4];
  v6[5] = v1;
  v6[6] = a1[6];
  v3 = v7;
  v4 = (_QWORD *)a1[10];
  if (v4)
  {
    if (v4 == a1 + 7)
    {
      v8 = v7;
      (*(void (**)(_QWORD *, _BYTE *))(*v4 + 24))(v4, v7);
    }
    else
    {
      v8 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*v4 + 16))(a1[10]);
    }
  }
  else
  {
    v8 = 0;
  }
  dispatch_sync(v2, v6);
  if (v8 == v7)
  {
    v5 = 4;
  }
  else
  {
    if (!v8)
      return;
    v5 = 5;
    v3 = v8;
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v5))(v3);
}

_QWORD *sub_239BA98A4(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  std::__shared_weak_count *v5;
  _QWORD *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  task_name_t *v11;
  uint64_t v12;
  unint64_t v14;
  unint64_t *v15;
  void (***v17)(uint64_t (***__return_ptr)());
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  __n128 v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  __n128 v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  __n128 v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unint64_t v36;
  _BOOL4 v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  void (***v42)(uint64_t (***__return_ptr)());
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  __n128 v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  __n128 v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  __n128 v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unsigned int v62;
  unsigned int v63;
  unint64_t v64;
  unsigned int v65;
  _BOOL4 v67;
  std::__shared_weak_count *v68;
  int v69;
  uint64_t (**v70)();
  unsigned int v71;
  unsigned int v72;
  unint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t *v76;
  unint64_t v77;
  std::__shared_weak_count *v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  __n128 v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  __n128 v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  _QWORD *v90;
  __n128 v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  unsigned int v95;
  unsigned int v96;
  unint64_t v97;
  unsigned int v98;
  unsigned int v100;
  unsigned int v101;
  void (***v102)(uint64_t (***__return_ptr)());
  uint64_t v103;
  unint64_t *v104;
  unint64_t v105;
  _QWORD *v106;
  __int128 v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  __n128 v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  __n128 v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  __n128 v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  BOOL v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  char v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  std::__shared_weak_count *v132;
  uint64_t v133;
  unint64_t *v134;
  unint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  uint64_t v145;
  std::__shared_weak_count *v146;
  unint64_t *v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  std::__shared_weak_count *v151;
  std::__shared_weak_count *v152;
  unint64_t *v153;
  unint64_t v154;
  __n128 v155;
  std::__shared_weak_count *v156;
  unint64_t *v157;
  unint64_t v158;
  __n128 v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t *v163;
  __int128 v164;
  std::__shared_weak_count *v165;
  unint64_t *v166;
  unint64_t v167;
  int v168;
  std::__shared_weak_count *v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  __n128 v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  __n128 v178;
  __int128 v179;
  unint64_t *v180;
  unint64_t v181;
  uint64_t v182;
  int v183;
  __int16 v184;
  unint64_t v185;
  unint64_t *v186;
  unint64_t v187;
  std::__shared_weak_count *v188;
  std::__shared_weak_count *v189;
  unint64_t *v190;
  unint64_t v191;
  __n128 v192;
  std::__shared_weak_count *v193;
  unint64_t *v194;
  unint64_t v195;
  __n128 v196;
  std::__shared_weak_count *v197;
  unint64_t *v198;
  unint64_t v199;
  __n128 v200;
  std::__shared_weak_count *v201;
  unint64_t *v202;
  unint64_t v203;
  uint64_t v204;
  size_t v205;
  size_t v206;
  unint64_t *v207;
  unint64_t *v208;
  unint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  _QWORD *v213;
  std::__shared_weak_count *v214;
  unint64_t *v215;
  unint64_t v216;
  std::__shared_weak_count *v217;
  unint64_t *v218;
  unint64_t v219;
  std::__shared_weak_count *v220;
  unint64_t *v221;
  unint64_t v222;
  _QWORD *v223;
  std::__shared_weak_count *v224;
  unint64_t *v225;
  unint64_t v226;
  uint64_t v227;
  std::__shared_weak_count *v228;
  unint64_t *v229;
  unint64_t v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  std::__shared_weak_count *v234;
  unint64_t *v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  std::__shared_weak_count *v241;
  unint64_t *v242;
  unint64_t v243;
  uint64_t v244;
  integer_t *v245;
  uint64_t v246;
  std::__shared_weak_count *v247;
  unint64_t *v248;
  unint64_t v249;
  std::__shared_weak_count *v250;
  unint64_t *v251;
  unint64_t v252;
  std::__shared_weak_count *v253;
  unint64_t *v254;
  unint64_t v255;
  std::__shared_weak_count *v256;
  unint64_t *v257;
  unint64_t v258;
  std::__shared_weak_count *v259;
  unint64_t *v260;
  unint64_t v261;
  std::__shared_weak_count *v262;
  unint64_t *v263;
  unint64_t v264;
  std::__shared_weak_count *v265;
  unint64_t *v266;
  unint64_t v267;
  std::__shared_weak_count *v268;
  unint64_t *v269;
  unint64_t v270;
  _QWORD *result;
  uint64_t v272;
  uint64_t (**v273)();
  std::__shared_weak_count *v274;
  uint64_t v275;
  uint64_t (**v276)();
  __int128 v277;
  _BYTE v278[30];
  uint64_t (**v279)();
  __int128 v280;
  uint64_t v281;
  int v282;
  uint64_t v283;
  int v284;
  __int16 v285;
  uint64_t v286;
  std::__shared_weak_count *v287;
  _QWORD *v288;
  std::__shared_weak_count *v289;
  __int128 v290;
  _QWORD *v291;
  std::__shared_weak_count *v292;
  _QWORD *v293;
  std::__shared_weak_count *v294;
  _QWORD *v295;
  std::__shared_weak_count *v296;
  _QWORD *v297;
  std::__shared_weak_count *v298;
  _BYTE v299[104];
  void *__p;
  unint64_t *v301;
  _QWORD *v302;
  _QWORD *v303;
  std::__shared_weak_count *v304;
  mach_msg_type_number_t task_info_outCnt[2];
  __int128 v306;
  _BYTE v307[30];
  _QWORD v308[3];
  _QWORD *v309;
  integer_t task_info_out[2];
  __int128 v311;
  integer_t *v312;
  _QWORD v313[16];
  char v314;
  uint64_t v315;

  v315 = *MEMORY[0x24BDAC8D0];
  v2 = (_QWORD *)a1[6];
  v3 = *(_QWORD **)(a1[5] + 24);
  v4 = (_QWORD *)a1[10];
  if (v4)
  {
    if (v4 == a1 + 7)
    {
      v309 = v308;
      (*(void (**)(_QWORD *, _QWORD *))(*v4 + 24))(v4, v308);
    }
    else
    {
      v309 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v4 + 16))(v4);
    }
  }
  else
  {
    v309 = 0;
  }
  v6 = (_QWORD *)v2[3];
  v5 = (std::__shared_weak_count *)v2[4];
  v303 = v6;
  v304 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v9 = sub_2395A7198((uint64_t)v299, (uint64_t)v6);
  v297 = 0;
  v298 = 0;
  v295 = 0;
  v296 = 0;
  v293 = 0;
  v294 = 0;
  v291 = 0;
  v292 = 0;
  v290 = 0uLL;
  v10 = MEMORY[0x23B83EE44](v9);
  task_info_outCnt[0] = 93;
  v11 = (task_name_t *)MEMORY[0x24BDAEC58];
  v12 = task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, task_info_outCnt);
  if ((unint64_t)(v313[14] + v10) > 0x147D356FFLL && (_DWORD)v12 == 0)
    v14 = 0x4000;
  else
    v14 = 0x2000;
  MEMORY[0x23B83EE44](v12);
  task_info_outCnt[0] = 93;
  task_info(*v11, 0x16u, task_info_out, task_info_outCnt);
  v15 = (unint64_t *)__p;
  if (__p == v301)
  {
LABEL_22:
    v17 = (void (***)(uint64_t (***__return_ptr)()))v6[48];
    if (!v17)
      goto LABEL_58;
    v18 = v6[49];
    v279 = (uint64_t (**)())v6[48];
    *(_QWORD *)&v280 = v18;
    if (v18)
    {
      v19 = (unint64_t *)(v18 + 8);
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
    }
    (**v17)(&v276);
    *(_QWORD *)task_info_outCnt = &off_250ADB210;
    sub_23955C704((uint64_t)v276, (uint64_t)&v306);
    sub_2397078F8((uint64_t)task_info_outCnt, 1, task_info_out);
    v21 = (std::__shared_weak_count *)operator new(0x70uLL);
    v21->__shared_owners_ = 0;
    v21->__shared_weak_owners_ = 0;
    v21->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBE30;
    v21[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB628;
    sub_239423E50((uint64_t)task_info_out, (uint64_t)&v21[1].__shared_owners_);
    v295 = &v21[1].__vftable;
    v296 = v21;
    v22 = nullsub_4(v313);
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v311 + 1);
    if (*((_QWORD *)&v311 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v311 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v23->__on_zero_shared)(v23, v22);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    j_nullsub_4_89(task_info_out);
    v26 = nullsub_4(v307);
    v27 = (std::__shared_weak_count *)*((_QWORD *)&v306 + 1);
    if (*((_QWORD *)&v306 + 1))
    {
      v28 = (unint64_t *)(*((_QWORD *)&v306 + 1) + 8);
      do
        v29 = __ldaxr(v28);
      while (__stlxr(v29 - 1, v28));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v27->__on_zero_shared)(v27, v26);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
    v30 = nullsub_4(task_info_outCnt);
    v31 = (std::__shared_weak_count *)v277;
    if ((_QWORD)v277)
    {
      v32 = (unint64_t *)(v277 + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v31->__on_zero_shared)(v31, v30);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    v35 = *((_DWORD *)v295 + 16);
    v34 = *((_DWORD *)v295 + 17);
    if (v35 <= v34)
      v36 = v34;
    else
      v36 = v35;
    if (v34 >= v35)
      v34 = *((_DWORD *)v295 + 16);
    v38 = v14 >= v36 && v34 > 2;
    v39 = (std::__shared_weak_count *)v280;
    if (!(_QWORD)v280)
      goto LABEL_56;
    v40 = (unint64_t *)(v280 + 8);
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v30);
      std::__shared_weak_count::__release_weak(v39);
      if (v38)
        goto LABEL_57;
    }
    else
    {
LABEL_56:
      if (v38)
      {
LABEL_57:
        v6 = v303;
LABEL_58:
        v42 = (void (***)(uint64_t (***__return_ptr)()))v6[50];
        if (!v42)
        {
          v69 = -7;
          v70 = (uint64_t (**)())v6[52];
          if (!v70)
            goto LABEL_187;
          goto LABEL_107;
        }
        v43 = v6[51];
        v279 = (uint64_t (**)())v6[50];
        *(_QWORD *)&v280 = v43;
        if (v43)
        {
          v44 = (unint64_t *)(v43 + 8);
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
        }
        (**v42)(&v276);
        *(_QWORD *)task_info_outCnt = &off_250ADB210;
        sub_23955C704((uint64_t)v276, (uint64_t)&v306);
        sub_2397078F8((uint64_t)task_info_outCnt, 4, task_info_out);
        v46 = (std::__shared_weak_count *)operator new(0x70uLL);
        v46->__shared_owners_ = 0;
        v46->__shared_weak_owners_ = 0;
        v46->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5880;
        v46[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADD920;
        sub_239541EE0((uint64_t)task_info_out, (uint64_t)&v46[1].__shared_owners_);
        v47 = v294;
        v293 = &v46[1].__vftable;
        v294 = v46;
        if (v47)
        {
          v48 = (unint64_t *)&v47->__shared_owners_;
          do
            v49 = __ldaxr(v48);
          while (__stlxr(v49 - 1, v48));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
            std::__shared_weak_count::__release_weak(v47);
          }
        }
        v50 = nullsub_4(v313);
        v51 = (std::__shared_weak_count *)*((_QWORD *)&v311 + 1);
        if (*((_QWORD *)&v311 + 1))
        {
          v52 = (unint64_t *)(*((_QWORD *)&v311 + 1) + 8);
          do
            v53 = __ldaxr(v52);
          while (__stlxr(v53 - 1, v52));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v51->__on_zero_shared)(v51, v50);
            std::__shared_weak_count::__release_weak(v51);
          }
        }
        j_nullsub_4_89(task_info_out);
        v54 = nullsub_4(v307);
        v55 = (std::__shared_weak_count *)*((_QWORD *)&v306 + 1);
        if (*((_QWORD *)&v306 + 1))
        {
          v56 = (unint64_t *)(*((_QWORD *)&v306 + 1) + 8);
          do
            v57 = __ldaxr(v56);
          while (__stlxr(v57 - 1, v56));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v55->__on_zero_shared)(v55, v54);
            std::__shared_weak_count::__release_weak(v55);
          }
        }
        v58 = nullsub_4(task_info_outCnt);
        v59 = (std::__shared_weak_count *)v277;
        if ((_QWORD)v277)
        {
          v60 = (unint64_t *)(v277 + 8);
          do
            v61 = __ldaxr(v60);
          while (__stlxr(v61 - 1, v60));
          if (!v61)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v59->__on_zero_shared)(v59, v58);
            std::__shared_weak_count::__release_weak(v59);
          }
        }
        v63 = *((_DWORD *)v293 + 16);
        v62 = *((_DWORD *)v293 + 17);
        if (v63 <= v62)
          v64 = v62;
        else
          v64 = v63;
        if (v62 >= v63)
          v65 = *((_DWORD *)v293 + 16);
        else
          v65 = *((_DWORD *)v293 + 17);
        v69 = -14;
        if (v14 >= v64 && v65 >= 3)
        {
          v71 = *((_DWORD *)__p + 2);
          v58.n128_u32[0] = *(_DWORD *)__p;
          v58.n128_f64[0] = (double)v58.n128_u64[0] / (double)v63 * (double)v62;
          v72 = v58.n128_f64[0] - v71;
          if (v58.n128_f64[0] <= v71)
            v72 = v71 - v58.n128_f64[0];
          v67 = v72 > 5;
          if (v72 <= 5)
            v69 = -7;
          else
            v69 = -14;
          v68 = (std::__shared_weak_count *)v280;
          if (!(_QWORD)v280)
            goto LABEL_105;
        }
        else
        {
          v67 = 1;
          v68 = (std::__shared_weak_count *)v280;
          if (!(_QWORD)v280)
            goto LABEL_105;
        }
        v73 = (unint64_t *)&v68->__shared_owners_;
        do
          v74 = __ldaxr(v73);
        while (__stlxr(v74 - 1, v73));
        if (!v74)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v68->__on_zero_shared)(v68, v58);
          std::__shared_weak_count::__release_weak(v68);
          if (v67)
            goto LABEL_369;
          goto LABEL_106;
        }
LABEL_105:
        if (v67)
          goto LABEL_369;
LABEL_106:
        v6 = v303;
        v70 = (uint64_t (**)())v303[52];
        if (!v70)
          goto LABEL_187;
LABEL_107:
        v75 = v6[53];
        v279 = v70;
        *(_QWORD *)&v280 = v75;
        if (v75)
        {
          v76 = (unint64_t *)(v75 + 8);
          do
            v77 = __ldxr(v76);
          while (__stxr(v77 + 1, v76));
        }
        (*(void (**)(uint64_t (***__return_ptr)()))*v70)(&v276);
        *(_QWORD *)task_info_outCnt = &off_250ADB210;
        sub_23955C704((uint64_t)v276, (uint64_t)&v306);
        sub_2397078F8((uint64_t)task_info_outCnt, 4, task_info_out);
        v78 = (std::__shared_weak_count *)operator new(0x70uLL);
        v78->__shared_owners_ = 0;
        v78->__shared_weak_owners_ = 0;
        v78->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5880;
        v78[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADD920;
        sub_239541EE0((uint64_t)task_info_out, (uint64_t)&v78[1].__shared_owners_);
        v79 = v292;
        v291 = &v78[1].__vftable;
        v292 = v78;
        if (v79)
        {
          v80 = (unint64_t *)&v79->__shared_owners_;
          do
            v81 = __ldaxr(v80);
          while (__stlxr(v81 - 1, v80));
          if (!v81)
          {
            ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
            std::__shared_weak_count::__release_weak(v79);
          }
        }
        v82 = nullsub_4(v313);
        v83 = (std::__shared_weak_count *)*((_QWORD *)&v311 + 1);
        if (*((_QWORD *)&v311 + 1))
        {
          v84 = (unint64_t *)(*((_QWORD *)&v311 + 1) + 8);
          do
            v85 = __ldaxr(v84);
          while (__stlxr(v85 - 1, v84));
          if (!v85)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v83->__on_zero_shared)(v83, v82);
            std::__shared_weak_count::__release_weak(v83);
          }
        }
        j_nullsub_4_89(task_info_out);
        v86 = nullsub_4(v307);
        v87 = (std::__shared_weak_count *)*((_QWORD *)&v306 + 1);
        if (*((_QWORD *)&v306 + 1))
        {
          v88 = (unint64_t *)(*((_QWORD *)&v306 + 1) + 8);
          do
            v89 = __ldaxr(v88);
          while (__stlxr(v89 - 1, v88));
          if (!v89)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v87->__on_zero_shared)(v87, v86);
            std::__shared_weak_count::__release_weak(v87);
          }
        }
        v90 = v3;
        v91 = nullsub_4(task_info_outCnt);
        v92 = (std::__shared_weak_count *)v277;
        if ((_QWORD)v277)
        {
          v93 = (unint64_t *)(v277 + 8);
          do
            v94 = __ldaxr(v93);
          while (__stlxr(v94 - 1, v93));
          if (!v94)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v92->__on_zero_shared)(v92, v91);
            std::__shared_weak_count::__release_weak(v92);
          }
        }
        v95 = *((_DWORD *)v291 + 16);
        v96 = *((_DWORD *)v291 + 17);
        if (v95 <= v96)
          v97 = v96;
        else
          v97 = v95;
        if (v96 >= v95)
          v98 = *((_DWORD *)v291 + 16);
        else
          v98 = *((_DWORD *)v291 + 17);
        if (v14 < v97 || v98 < 3)
          goto LABEL_181;
        v100 = *((_DWORD *)__p + 2);
        v91.n128_u32[0] = *(_DWORD *)__p;
        v91.n128_f64[0] = (double)v91.n128_u64[0] / (double)v95 * (double)v96;
        v101 = v91.n128_f64[0] - v100;
        if (v91.n128_f64[0] <= v100)
          v101 = v100 - v91.n128_f64[0];
        if (v101 <= 5)
        {
          v102 = (void (***)(uint64_t (***__return_ptr)()))v303[54];
          if (!v102)
            goto LABEL_180;
          v103 = v303[55];
          v276 = (uint64_t (**)())v303[54];
          *(_QWORD *)&v277 = v103;
          if (v103)
          {
            v104 = (unint64_t *)(v103 + 8);
            do
              v105 = __ldxr(v104);
            while (__stxr(v105 + 1, v104));
          }
          (**v102)(&v273);
          *(_QWORD *)task_info_outCnt = &off_250ADB210;
          sub_23955C704((uint64_t)v273, (uint64_t)&v306);
          sub_2397078F8((uint64_t)task_info_outCnt, 4, task_info_out);
          v106 = operator new(0x70uLL);
          v106[1] = 0;
          v106[2] = 0;
          *v106 = &off_250AF5880;
          v106[3] = &off_250ADD920;
          sub_239541EE0((uint64_t)task_info_out, (uint64_t)(v106 + 4));
          *(_QWORD *)&v107 = v106 + 3;
          *((_QWORD *)&v107 + 1) = v106;
          v108 = (std::__shared_weak_count *)*((_QWORD *)&v290 + 1);
          v290 = v107;
          if (v108)
          {
            v109 = (unint64_t *)&v108->__shared_owners_;
            do
              v110 = __ldaxr(v109);
            while (__stlxr(v110 - 1, v109));
            if (!v110)
            {
              ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
              std::__shared_weak_count::__release_weak(v108);
            }
          }
          v111 = nullsub_4(v313);
          v112 = (std::__shared_weak_count *)*((_QWORD *)&v311 + 1);
          if (*((_QWORD *)&v311 + 1))
          {
            v113 = (unint64_t *)(*((_QWORD *)&v311 + 1) + 8);
            do
              v114 = __ldaxr(v113);
            while (__stlxr(v114 - 1, v113));
            if (!v114)
            {
              ((void (*)(std::__shared_weak_count *, __n128))v112->__on_zero_shared)(v112, v111);
              std::__shared_weak_count::__release_weak(v112);
            }
          }
          j_nullsub_4_89(task_info_out);
          v115 = nullsub_4(v307);
          v116 = (std::__shared_weak_count *)*((_QWORD *)&v306 + 1);
          if (*((_QWORD *)&v306 + 1))
          {
            v117 = (unint64_t *)(*((_QWORD *)&v306 + 1) + 8);
            do
              v118 = __ldaxr(v117);
            while (__stlxr(v118 - 1, v117));
            if (!v118)
            {
              ((void (*)(std::__shared_weak_count *, __n128))v116->__on_zero_shared)(v116, v115);
              std::__shared_weak_count::__release_weak(v116);
            }
          }
          v119 = nullsub_4(task_info_outCnt);
          v120 = v274;
          if (v274)
          {
            v121 = (unint64_t *)&v274->__shared_owners_;
            do
              v122 = __ldaxr(v121);
            while (__stlxr(v122 - 1, v121));
            if (!v122)
            {
              ((void (*)(std::__shared_weak_count *, __n128))v120->__on_zero_shared)(v120, v119);
              std::__shared_weak_count::__release_weak(v120);
            }
          }
          v124 = *(_DWORD *)(v290 + 64) == v95 && *(_DWORD *)(v290 + 68) == v96;
          v125 = (std::__shared_weak_count *)v277;
          if ((_QWORD)v277)
          {
            v126 = (unint64_t *)(v277 + 8);
            do
              v127 = __ldaxr(v126);
            while (__stlxr(v127 - 1, v126));
            if (!v127)
            {
              ((void (*)(std::__shared_weak_count *, __n128))v125->__on_zero_shared)(v125, v119);
              std::__shared_weak_count::__release_weak(v125);
            }
          }
          if (!v124)
          {
            v128 = 0;
            v69 = -29;
          }
          else
          {
LABEL_180:
            v128 = 1;
          }
        }
        else
        {
LABEL_181:
          v128 = 0;
          v69 = -28;
        }
        v129 = (std::__shared_weak_count *)v280;
        v3 = v90;
        if (!(_QWORD)v280)
          goto LABEL_186;
        v130 = (unint64_t *)(v280 + 8);
        do
          v131 = __ldaxr(v130);
        while (__stlxr(v131 - 1, v130));
        if (!v131)
        {
          ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
          std::__shared_weak_count::__release_weak(v129);
          if ((v128 & 1) == 0)
            goto LABEL_369;
        }
        else
        {
LABEL_186:
          if ((v128 & 1) == 0)
            goto LABEL_369;
        }
LABEL_187:
        v288 = 0;
        v289 = 0;
        v133 = v2[1];
        v132 = (std::__shared_weak_count *)v2[2];
        v286 = v133;
        v287 = v132;
        if (v132)
        {
          v134 = (unint64_t *)&v132->__shared_owners_;
          do
            v135 = __ldxr(v134);
          while (__stxr(v135 + 1, v134));
        }
        if (!v133)
        {
          sub_239A444D4((uint64_t)"unknown file", 970, (uint64_t)"", (void (*)(void *))sub_239A4463C);
          sub_239A4475C();
          abort();
        }
        (*(void (**)(integer_t *__return_ptr, uint64_t))(*(_QWORD *)v133 + 24))(task_info_out, v133);
        v136 = operator new(0x30uLL);
        v136[1] = 0;
        v136[2] = 0;
        *v136 = &off_250AF58B8;
        v136[3] = &off_250AE94F0;
        v137 = (uint64_t)(v136 + 3);
        *((_OWORD *)v136 + 2) = v311;
        v311 = 0uLL;
        v288 = v136 + 3;
        v289 = (std::__shared_weak_count *)v136;
        sub_23979BCF4(task_info_out);
        if (sub_23979A918(v137) != 875704422 && sub_23979A918(v137) != 875704438)
        {
          (**(void (***)(uint64_t (***__return_ptr)(), uint64_t))v133)(&v279, v133);
          *(_QWORD *)task_info_outCnt = &off_250ADB210;
          sub_23955C704((uint64_t)v279, (uint64_t)&v306);
          sub_2397078F8((uint64_t)task_info_outCnt, 21, task_info_out);
          v151 = (std::__shared_weak_count *)operator new(0xA0uLL);
          v151->__shared_owners_ = 0;
          v151->__shared_weak_owners_ = 0;
          v151->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBE68;
          v151[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBEA0;
          sub_239469644((uint64_t)task_info_out, (uint64_t)&v151[1].__shared_owners_);
          v152 = v298;
          v297 = &v151[1].__vftable;
          v298 = v151;
          if (v152)
          {
            v153 = (unint64_t *)&v152->__shared_owners_;
            do
              v154 = __ldaxr(v153);
            while (__stlxr(v154 - 1, v153));
            if (!v154)
            {
              ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
              std::__shared_weak_count::__release_weak(v152);
            }
          }
          v155 = nullsub_4(v313);
          v156 = (std::__shared_weak_count *)*((_QWORD *)&v311 + 1);
          if (*((_QWORD *)&v311 + 1))
          {
            v157 = (unint64_t *)(*((_QWORD *)&v311 + 1) + 8);
            do
              v158 = __ldaxr(v157);
            while (__stlxr(v158 - 1, v157));
            if (!v158)
            {
              ((void (*)(std::__shared_weak_count *, __n128))v156->__on_zero_shared)(v156, v155);
              std::__shared_weak_count::__release_weak(v156);
            }
          }
          j_nullsub_4_89(task_info_out);
          v159 = nullsub_4(v307);
          v160 = (std::__shared_weak_count *)*((_QWORD *)&v306 + 1);
          if (*((_QWORD *)&v306 + 1))
          {
            v161 = (unint64_t *)(*((_QWORD *)&v306 + 1) + 8);
            do
              v162 = __ldaxr(v161);
            while (__stlxr(v162 - 1, v161));
            if (!v162)
            {
              ((void (*)(std::__shared_weak_count *, __n128))v160->__on_zero_shared)(v160, v159);
              std::__shared_weak_count::__release_weak(v160);
            }
          }
          nullsub_4(task_info_outCnt);
          v142 = (std::__shared_weak_count *)v280;
          if ((_QWORD)v280)
          {
            v163 = (unint64_t *)(v280 + 8);
            do
              v144 = __ldaxr(v163);
            while (__stlxr(v144 - 1, v163));
LABEL_234:
            if (!v144)
            {
              ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
              std::__shared_weak_count::__release_weak(v142);
            }
          }
LABEL_292:
          if (__p == v301)
          {
            v204 = (uint64_t)v288;
            v205 = sub_23979C8D0((uint64_t)v288);
            v206 = sub_23979CAD8(v204);
            v207 = (unint64_t *)operator new(0x10uLL);
            *v207 = v205;
            v207[1] = v206;
            if (__p)
            {
              v301 = (unint64_t *)__p;
              operator delete(__p);
            }
            __p = v207;
            v301 = v207 + 2;
            v168 = 1;
            v302 = v207 + 2;
            v169 = v287;
            if (!v287)
              goto LABEL_301;
          }
          else
          {
            v168 = 1;
            v169 = v287;
            if (!v287)
              goto LABEL_301;
          }
LABEL_298:
          v208 = (unint64_t *)&v169->__shared_owners_;
          do
            v209 = __ldaxr(v208);
          while (__stlxr(v209 - 1, v208));
          if (!v209)
          {
            ((void (*)(std::__shared_weak_count *))v169->__on_zero_shared)(v169);
            std::__shared_weak_count::__release_weak(v169);
            if (!v168)
              goto LABEL_362;
            goto LABEL_302;
          }
LABEL_301:
          if (!v168)
            goto LABEL_362;
LABEL_302:
          if (v3[22])
          {
            v210 = (char *)operator new(0xA8uLL);
            v211 = v210;
            *((_QWORD *)v210 + 1) = 0;
            *((_QWORD *)v210 + 2) = 0;
            *(_QWORD *)v210 = &off_250AFAC20;
            *(_OWORD *)(v210 + 56) = 0u;
            *(_OWORD *)(v210 + 72) = 0u;
            *(_OWORD *)(v210 + 88) = 0u;
            *(_OWORD *)(v210 + 104) = 0u;
            *(_OWORD *)(v210 + 120) = 0u;
            *(_OWORD *)(v210 + 136) = 0u;
            *(_OWORD *)(v210 + 152) = 0u;
            *(_OWORD *)(v210 + 40) = 0u;
            v212 = (uint64_t)(v210 + 40);
            *(_OWORD *)(v210 + 24) = 0u;
            *(_QWORD *)task_info_outCnt = v210 + 24;
            *(_QWORD *)&v306 = v210;
            *((_DWORD *)v210 + 6) = *v2;
            *((_DWORD *)v210 + 8) = 1;
            v213 = v297;
            if (v297)
            {
              v214 = v298;
              if (v298)
              {
                v215 = (unint64_t *)&v298->__shared_owners_;
                do
                  v216 = __ldxr(v215);
                while (__stxr(v216 + 1, v215));
                v217 = (std::__shared_weak_count *)*((_QWORD *)v210 + 6);
                *((_QWORD *)v210 + 5) = v213;
                *((_QWORD *)v210 + 6) = v214;
                if (v217)
                {
                  v218 = (unint64_t *)&v217->__shared_owners_;
                  do
                    v219 = __ldaxr(v218);
                  while (__stlxr(v219 - 1, v218));
                  if (!v219)
                  {
                    ((void (*)(std::__shared_weak_count *, uint64_t))v217->__on_zero_shared)(v217, v212);
                    std::__shared_weak_count::__release_weak(v217);
                  }
                }
              }
              else
              {
                *((_QWORD *)v210 + 5) = v297;
                *((_QWORD *)v210 + 6) = 0;
              }
            }
            else
            {
              sub_239B29A70((uint64_t)task_info_out, v212);
              *((_DWORD *)v211 + 14) = -1;
              v220 = v289;
              *((_QWORD *)v211 + 5) = v288;
              *((_QWORD *)v211 + 6) = v220;
              if (v220)
              {
                v221 = (unint64_t *)&v220->__shared_owners_;
                do
                  v222 = __ldxr(v221);
                while (__stxr(v222 + 1, v221));
              }
              *((_DWORD *)v211 + 14) = 1;
            }
            if (*(_BYTE *)(v3[56] + 1664))
            {
              v223 = v295;
              v224 = v296;
              if (v296)
              {
                v225 = (unint64_t *)&v296->__shared_owners_;
                do
                  v226 = __ldxr(v225);
                while (__stxr(v226 + 1, v225));
              }
            }
            else
            {
              v223 = 0;
              v224 = 0;
            }
            v227 = *(_QWORD *)task_info_outCnt;
            v228 = *(std::__shared_weak_count **)(*(_QWORD *)task_info_outCnt + 48);
            *(_QWORD *)(*(_QWORD *)task_info_outCnt + 40) = v223;
            *(_QWORD *)(v227 + 48) = v224;
            if (v228)
            {
              v229 = (unint64_t *)&v228->__shared_owners_;
              do
                v230 = __ldaxr(v229);
              while (__stlxr(v230 - 1, v229));
              if (!v230)
              {
                ((void (*)(std::__shared_weak_count *, uint64_t))v228->__on_zero_shared)(v228, v212);
                std::__shared_weak_count::__release_weak(v228);
              }
            }
            v231 = operator new(0x178uLL);
            v231[1] = 0;
            v231[2] = 0;
            *v231 = &off_250AF6F30;
            v232 = sub_2395A7198((uint64_t)(v231 + 3), (uint64_t)v299);
            v233 = *(_QWORD *)task_info_outCnt;
            v234 = *(std::__shared_weak_count **)(*(_QWORD *)task_info_outCnt + 80);
            *(_QWORD *)(*(_QWORD *)task_info_outCnt + 72) = v232;
            *(_QWORD *)(v233 + 80) = v231;
            if (v234)
            {
              v235 = (unint64_t *)&v234->__shared_owners_;
              do
                v236 = __ldaxr(v235);
              while (__stlxr(v236 - 1, v235));
              if (!v236)
              {
                ((void (*)(std::__shared_weak_count *))v234->__on_zero_shared)(v234);
                std::__shared_weak_count::__release_weak(v234);
              }
            }
            v237 = v3[22];
            if (!v237)
            {
              LOBYTE(task_info_out[0]) = 0;
              v314 = 0;
              v238 = v3[52];
              if (v238)
                sub_239B31818((uint64_t)task_info_out, v238 + 112);
              v239 = v3[56];
              v240 = operator new(0x50uLL);
              v240[1] = 0;
              v240[2] = 0;
              *v240 = &off_250AF99A0;
              sub_239B31970((uint64_t)(v240 + 3), (_OWORD *)(v239 + 72), v239 + 120, v239 + 456, v239 + 1536, (__int128 *)task_info_out);
              v241 = (std::__shared_weak_count *)v3[23];
              v3[22] = v240 + 3;
              v3[23] = v240;
              if (v241)
              {
                v242 = (unint64_t *)&v241->__shared_owners_;
                do
                  v243 = __ldaxr(v242);
                while (__stlxr(v243 - 1, v242));
                if (!v243)
                {
                  ((void (*)(std::__shared_weak_count *))v241->__on_zero_shared)(v241);
                  std::__shared_weak_count::__release_weak(v241);
                }
              }
              if (v314 && *((_QWORD *)&v311 + 1))
              {
                v312 = (integer_t *)*((_QWORD *)&v311 + 1);
                operator delete(*((void **)&v311 + 1));
              }
              v237 = v3[22];
            }
            v244 = (uint64_t)v309;
            if (v309)
            {
              if (v309 == v308)
              {
                v312 = task_info_out;
                (*(void (**)(_QWORD *, integer_t *))(v308[0] + 24))(v308, task_info_out);
LABEL_352:
                (*(void (**)(uint64_t, mach_msg_type_number_t *, integer_t *))(*(_QWORD *)v237 + 16))(v237, task_info_outCnt, task_info_out);
                v245 = v312;
                if (v312 == task_info_out)
                {
                  v246 = 4;
                  v245 = task_info_out;
                }
                else
                {
                  if (!v312)
                  {
LABEL_357:
                    v247 = (std::__shared_weak_count *)v306;
                    if ((_QWORD)v306)
                    {
                      v248 = (unint64_t *)(v306 + 8);
                      do
                        v249 = __ldaxr(v248);
                      while (__stlxr(v249 - 1, v248));
                      if (!v249)
                      {
                        ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
                        std::__shared_weak_count::__release_weak(v247);
                      }
                    }
                    goto LABEL_362;
                  }
                  v246 = 5;
                }
                (*(void (**)(void))(*(_QWORD *)v245 + 8 * v246))();
                goto LABEL_357;
              }
              v244 = (*(uint64_t (**)(void))(*v309 + 16))();
            }
            v312 = (integer_t *)v244;
            goto LABEL_352;
          }
LABEL_362:
          v250 = v289;
          if (v289)
          {
            v251 = (unint64_t *)&v289->__shared_owners_;
            do
              v252 = __ldaxr(v251);
            while (__stlxr(v252 - 1, v251));
            if (!v252)
            {
              ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
              std::__shared_weak_count::__release_weak(v250);
            }
          }
          if (v168)
            v69 = 0;
          goto LABEL_369;
        }
        if (v3[22])
        {
          sub_23979D000(v137, task_info_out);
          sub_23979D0F0((uint64_t)task_info_out, task_info_outCnt);
          v138 = *(_QWORD *)task_info_outCnt;
          v139 = (std::__shared_weak_count *)v306;
          if ((_QWORD)v306)
          {
            v140 = (unint64_t *)(v306 + 8);
            do
              v141 = __ldaxr(v140);
            while (__stlxr(v141 - 1, v140));
            if (!v141)
            {
              ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
              std::__shared_weak_count::__release_weak(v139);
            }
          }
          sub_2399107E4(task_info_out);
          if (v138)
          {
            v142 = v298;
            v297 = 0;
            v298 = 0;
            if (!v142)
              goto LABEL_292;
            v143 = (unint64_t *)&v142->__shared_owners_;
            do
              v144 = __ldaxr(v143);
            while (__stlxr(v144 - 1, v143));
            goto LABEL_234;
          }
        }
        sub_23979D0F0((uint64_t)(v3 + 62), task_info_out);
        v145 = *(_QWORD *)task_info_out;
        v146 = (std::__shared_weak_count *)v311;
        if ((_QWORD)v311)
        {
          v147 = (unint64_t *)(v311 + 8);
          do
            v148 = __ldaxr(v147);
          while (__stlxr(v148 - 1, v147));
          if (!v148)
          {
            ((void (*)(std::__shared_weak_count *))v146->__on_zero_shared)(v146);
            std::__shared_weak_count::__release_weak(v146);
          }
        }
        if (v145)
        {
          v149 = sub_23979C610((uint64_t)(v3 + 62));
          v150 = (uint64_t)v288;
          if (v149 == sub_23979C610((uint64_t)v288))
          {
LABEL_247:
            if ((sub_239710484(v3[60], v150, (uint64_t)(v3 + 62)) & 0xFF00000000) != 0)
            {
              v168 = 0;
              v69 = -18;
              v169 = v287;
              if (!v287)
                goto LABEL_301;
              goto LABEL_298;
            }
            v171 = (std::__shared_weak_count *)v3[63];
            v170 = v3[64];
            v273 = &off_250AE94F0;
            v274 = v171;
            v275 = v170;
            if (v170)
            {
              v172 = (unint64_t *)(v170 + 8);
              do
                v173 = __ldxr(v172);
              while (__stxr(v173 + 1, v172));
            }
            sub_239785B2C((uint64_t)&v273, (uint64_t)task_info_outCnt);
            v276 = &off_250ADB1D0;
            v277 = v306;
            v306 = 0uLL;
            *(_OWORD *)v278 = *(_OWORD *)v307;
            *(_OWORD *)&v278[14] = *(_OWORD *)&v307[14];
            v174 = nullsub_4(v307);
            v175 = (std::__shared_weak_count *)*((_QWORD *)&v306 + 1);
            if (*((_QWORD *)&v306 + 1))
            {
              v176 = (unint64_t *)(*((_QWORD *)&v306 + 1) + 8);
              do
                v177 = __ldaxr(v176);
              while (__stlxr(v177 - 1, v176));
              if (!v177)
              {
                ((void (*)(std::__shared_weak_count *, __n128))v175->__on_zero_shared)(v175, v174);
                std::__shared_weak_count::__release_weak(v175);
              }
            }
            v178 = nullsub_4(task_info_outCnt);
            v279 = &off_250ADB210;
            v179 = v277;
            if (*((_QWORD *)&v277 + 1))
            {
              v180 = (unint64_t *)(*((_QWORD *)&v277 + 1) + 8);
              do
                v181 = __ldxr(v180);
              while (__stxr(v181 + 1, v180));
              v182 = *(_QWORD *)&v278[16];
              v183 = *(_DWORD *)&v278[24];
              v184 = *(_WORD *)&v278[28];
              do
                v185 = __ldxr(v180);
              while (__stxr(v185 + 1, v180));
            }
            else
            {
              v182 = *(_QWORD *)&v278[16];
              v183 = *(_DWORD *)&v278[24];
              v184 = *(_WORD *)&v278[28];
            }
            v280 = v179;
            v281 = *(_QWORD *)v278;
            v282 = *(_DWORD *)&v278[8];
            v283 = v182;
            v284 = v183;
            v285 = v184;
            if (*((_QWORD *)&v179 + 1))
            {
              v186 = (unint64_t *)(*((_QWORD *)&v179 + 1) + 8);
              do
                v187 = __ldaxr(v186);
              while (__stlxr(v187 - 1, v186));
              if (!v187)
              {
                (*(void (**)(_QWORD, __n128))(**((_QWORD **)&v179 + 1) + 16))(*((_QWORD *)&v179 + 1), v178);
                std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v179 + 1));
              }
            }
            sub_2397078F8((uint64_t)&v279, 21, task_info_out);
            v188 = (std::__shared_weak_count *)operator new(0xA0uLL);
            v188->__shared_owners_ = 0;
            v188->__shared_weak_owners_ = 0;
            v188->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBE68;
            v188[1].__vftable = (std::__shared_weak_count_vtbl *)&off_250ADBEA0;
            sub_239469644((uint64_t)task_info_out, (uint64_t)&v188[1].__shared_owners_);
            v189 = v298;
            v297 = &v188[1].__vftable;
            v298 = v188;
            if (v189)
            {
              v190 = (unint64_t *)&v189->__shared_owners_;
              do
                v191 = __ldaxr(v190);
              while (__stlxr(v191 - 1, v190));
              if (!v191)
              {
                ((void (*)(std::__shared_weak_count *))v189->__on_zero_shared)(v189);
                std::__shared_weak_count::__release_weak(v189);
              }
            }
            v192 = nullsub_4(v313);
            v193 = (std::__shared_weak_count *)*((_QWORD *)&v311 + 1);
            if (*((_QWORD *)&v311 + 1))
            {
              v194 = (unint64_t *)(*((_QWORD *)&v311 + 1) + 8);
              do
                v195 = __ldaxr(v194);
              while (__stlxr(v195 - 1, v194));
              if (!v195)
              {
                ((void (*)(std::__shared_weak_count *, __n128))v193->__on_zero_shared)(v193, v192);
                std::__shared_weak_count::__release_weak(v193);
              }
            }
            j_nullsub_4_89(task_info_out);
            v196 = nullsub_4(&v281);
            v197 = (std::__shared_weak_count *)*((_QWORD *)&v280 + 1);
            if (*((_QWORD *)&v280 + 1))
            {
              v198 = (unint64_t *)(*((_QWORD *)&v280 + 1) + 8);
              do
                v199 = __ldaxr(v198);
              while (__stlxr(v199 - 1, v198));
              if (!v199)
              {
                ((void (*)(std::__shared_weak_count *, __n128))v197->__on_zero_shared)(v197, v196);
                std::__shared_weak_count::__release_weak(v197);
              }
            }
            nullsub_4(&v279);
            v200 = nullsub_4(v278);
            v201 = (std::__shared_weak_count *)*((_QWORD *)&v277 + 1);
            if (*((_QWORD *)&v277 + 1))
            {
              v202 = (unint64_t *)(*((_QWORD *)&v277 + 1) + 8);
              do
                v203 = __ldaxr(v202);
              while (__stlxr(v203 - 1, v202));
              if (!v203)
              {
                ((void (*)(std::__shared_weak_count *, __n128))v201->__on_zero_shared)(v201, v200);
                std::__shared_weak_count::__release_weak(v201);
              }
            }
            nullsub_4(&v276);
            sub_23979BCF4(&v273);
            goto LABEL_292;
          }
        }
        else
        {
          v150 = (uint64_t)v288;
        }
        v279 = (uint64_t (**)())sub_23979C610(v150);
        *(_QWORD *)task_info_outCnt = operator new(0xA0uLL);
        v306 = xmmword_239EC64A0;
        strcpy(*(char **)task_info_outCnt, "/Library/Caches/com.apple.xbs/Sources/CorePhotogrammetry/aspenbase/third-party/cpg-applecmake/src/Kit/CoreVideo/include/Kit/CoreVideo/PixelBufferRef.h:216");
        sub_23979BD68((uint64_t)task_info_out, (unsigned int *)&v279, 0x20u, (uint64_t)task_info_outCnt, 1u);
        v164 = v311;
        v311 = 0uLL;
        v165 = (std::__shared_weak_count *)v3[64];
        *(_OWORD *)(v3 + 63) = v164;
        if (v165)
        {
          v166 = (unint64_t *)&v165->__shared_owners_;
          do
            v167 = __ldaxr(v166);
          while (__stlxr(v167 - 1, v166));
          if (!v167)
          {
            ((void (*)(std::__shared_weak_count *))v165->__on_zero_shared)(v165);
            std::__shared_weak_count::__release_weak(v165);
          }
        }
        sub_23979BCF4(task_info_out);
        if (SHIBYTE(v306) < 0)
          operator delete(*(void **)task_info_outCnt);
        v150 = (uint64_t)v288;
        goto LABEL_247;
      }
    }
    v69 = -13;
    goto LABEL_369;
  }
  while (*v15 <= v14 && *v15 > 2)
  {
    if (++v15 == v301)
      goto LABEL_22;
  }
  v69 = -7;
LABEL_369:
  v253 = (std::__shared_weak_count *)*((_QWORD *)&v290 + 1);
  if (*((_QWORD *)&v290 + 1))
  {
    v254 = (unint64_t *)(*((_QWORD *)&v290 + 1) + 8);
    do
      v255 = __ldaxr(v254);
    while (__stlxr(v255 - 1, v254));
    if (!v255)
    {
      ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
      std::__shared_weak_count::__release_weak(v253);
    }
  }
  v256 = v292;
  if (v292)
  {
    v257 = (unint64_t *)&v292->__shared_owners_;
    do
      v258 = __ldaxr(v257);
    while (__stlxr(v258 - 1, v257));
    if (!v258)
    {
      ((void (*)(std::__shared_weak_count *))v256->__on_zero_shared)(v256);
      std::__shared_weak_count::__release_weak(v256);
    }
  }
  v259 = v294;
  if (v294)
  {
    v260 = (unint64_t *)&v294->__shared_owners_;
    do
      v261 = __ldaxr(v260);
    while (__stlxr(v261 - 1, v260));
    if (!v261)
    {
      ((void (*)(std::__shared_weak_count *))v259->__on_zero_shared)(v259);
      std::__shared_weak_count::__release_weak(v259);
    }
  }
  v262 = v296;
  if (v296)
  {
    v263 = (unint64_t *)&v296->__shared_owners_;
    do
      v264 = __ldaxr(v263);
    while (__stlxr(v264 - 1, v263));
    if (!v264)
    {
      ((void (*)(std::__shared_weak_count *))v262->__on_zero_shared)(v262);
      std::__shared_weak_count::__release_weak(v262);
    }
  }
  v265 = v298;
  if (v298)
  {
    v266 = (unint64_t *)&v298->__shared_owners_;
    do
      v267 = __ldaxr(v266);
    while (__stlxr(v267 - 1, v266));
    if (!v267)
    {
      ((void (*)(std::__shared_weak_count *))v265->__on_zero_shared)(v265);
      std::__shared_weak_count::__release_weak(v265);
    }
  }
  sub_2395A0DF8((uint64_t)v299);
  v268 = v304;
  if (v304)
  {
    v269 = (unint64_t *)&v304->__shared_owners_;
    do
      v270 = __ldaxr(v269);
    while (__stlxr(v270 - 1, v269));
    if (!v270)
    {
      ((void (*)(std::__shared_weak_count *))v268->__on_zero_shared)(v268);
      std::__shared_weak_count::__release_weak(v268);
    }
  }
  *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = v69;
  result = v309;
  if (v309 == v308)
  {
    v272 = 4;
    result = v308;
  }
  else
  {
    if (!v309)
      return result;
    v272 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v272))();
}

void sub_239BAB024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,char a42)
{
  void *v43;
  unint64_t *v44;
  uint64_t v45;

  if (LOBYTE(STACK[0x370]))
  {
    v43 = (void *)STACK[0x2E0];
    if (STACK[0x2E0])
    {
      STACK[0x2E8] = (unint64_t)v43;
      operator delete(v43);
    }
  }
  sub_239A4D7C0((uint64_t)&STACK[0x278]);
  sub_239A4D7C0((uint64_t)&a29);
  sub_239416DA0((uint64_t)&a31);
  sub_239416DA0((uint64_t)&a33);
  sub_239416DA0((uint64_t)&a35);
  sub_239416DA0((uint64_t)&a37);
  sub_239416DA0((uint64_t)&a39);
  sub_2395A0DF8((uint64_t)&a42);
  sub_239A4D7C0((uint64_t)&STACK[0x268]);
  v44 = (unint64_t *)STACK[0x2C8];
  if ((unint64_t *)STACK[0x2C8] == &STACK[0x2B0])
  {
    v45 = 4;
    v44 = &STACK[0x2B0];
  }
  else
  {
    if (!v44)
      _Unwind_Resume(a1);
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
  _Unwind_Resume(a1);
}

void sub_239BAB384(uint64_t a1)
{
  NSObject *v1;
  _QWORD block[5];
  __int128 v3;

  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = sub_239BAB3EC;
  block[3] = &unk_250AF7B80;
  v3 = *(_OWORD *)(a1 + 40);
  v1 = *(NSObject **)(v3 + 152);
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_sync(v1, block);
}

void sub_239BAB3EC(_QWORD *a1)
{
  unint64_t v1;
  uint64_t v3;
  _QWORD *i;
  unint64_t v5;
  unint64_t v6;
  uint8x8_t v7;
  void **v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  float v12;
  _BOOL8 v13;
  unint64_t v14;
  unint64_t v15;
  size_t prime;
  unint64_t v17;
  uint8x8_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  void *v47;
  _OWORD v48[8];
  void *v49[2];
  void *__p[2];
  float v51;
  _BYTE v52[24];
  _BYTE *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;

  v62 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)v49 = 0u;
  *(_OWORD *)__p = 0u;
  v51 = 1.0;
  v3 = a1[5];
  for (i = *(_QWORD **)(a1[6] + 24); i; i = (_QWORD *)*i)
  {
    sub_23962EC90((uint64_t)(i + 4), (uint64_t)v48);
    v58 = v48[4];
    v59 = v48[5];
    v60 = v48[6];
    v61 = v48[7];
    v54 = v48[0];
    v55 = v48[1];
    v56 = v48[2];
    v57 = v48[3];
    v5 = i[2];
    v6 = (unint64_t)v49[1];
    if (v49[1])
    {
      v7 = (uint8x8_t)vcnt_s8((int8x8_t)v49[1]);
      v7.i16[0] = vaddlv_u8(v7);
      if (v7.u32[0] > 1uLL)
      {
        v1 = i[2];
        if ((void *)v5 >= v49[1])
          v1 = v5 % (unint64_t)v49[1];
      }
      else
      {
        v1 = ((unint64_t)v49[1] - 1) & v5;
      }
      v8 = (void **)*((_QWORD *)v49[0] + v1);
      if (v8)
      {
        v9 = (char *)*v8;
        if (*v8)
        {
          if (v7.u32[0] < 2uLL)
          {
            while (1)
            {
              v11 = *((_QWORD *)v9 + 1);
              if (v11 == v5)
              {
                if (*((_QWORD *)v9 + 2) == v5)
                  goto LABEL_61;
              }
              else if ((v11 & ((unint64_t)v49[1] - 1)) != v1)
              {
                goto LABEL_22;
              }
              v9 = *(char **)v9;
              if (!v9)
                goto LABEL_22;
            }
          }
          do
          {
            v10 = *((_QWORD *)v9 + 1);
            if (v10 == v5)
            {
              if (*((_QWORD *)v9 + 2) == v5)
                goto LABEL_61;
            }
            else
            {
              if ((void *)v10 >= v49[1])
                v10 %= (unint64_t)v49[1];
              if (v10 != v1)
                break;
            }
            v9 = *(char **)v9;
          }
          while (v9);
        }
      }
    }
LABEL_22:
    v9 = (char *)operator new(0x98uLL);
    *(_QWORD *)v9 = 0;
    *((_QWORD *)v9 + 1) = v5;
    *((_QWORD *)v9 + 2) = v5;
    *(_OWORD *)(v9 + 88) = xmmword_239F13AC0;
    *(_OWORD *)(v9 + 104) = unk_239F13AD0;
    *(_OWORD *)(v9 + 120) = xmmword_239F13AE0;
    *(_OWORD *)(v9 + 136) = unk_239F13AF0;
    *(_OWORD *)(v9 + 24) = xmmword_239F13A80;
    *(_OWORD *)(v9 + 40) = *(_OWORD *)algn_239F13A90;
    *(_OWORD *)(v9 + 56) = xmmword_239F13AA0;
    *(float64x2_t *)(v9 + 72) = xmmword_239F13AB0;
    v12 = (float)((unint64_t)__p[1] + 1);
    if (!v6 || (float)(v51 * (float)v6) < v12)
    {
      v13 = v6 < 3 || (v6 & (v6 - 1)) != 0;
      v14 = v13 | (2 * v6);
      v15 = vcvtps_u32_f32(v12 / v51);
      if (v14 <= v15)
        prime = v15;
      else
        prime = v14;
      if (prime == 1)
      {
        prime = 2;
      }
      else if ((prime & (prime - 1)) != 0)
      {
        prime = std::__next_prime(prime);
        v6 = (unint64_t)v49[1];
      }
      if (prime > v6)
        goto LABEL_35;
      if (prime < v6)
      {
        v17 = vcvtps_u32_f32((float)(unint64_t)__p[1] / v51);
        if (v6 < 3 || (v18 = (uint8x8_t)vcnt_s8((int8x8_t)v6), v18.i16[0] = vaddlv_u8(v18), v18.u32[0] > 1uLL))
        {
          v17 = std::__next_prime(v17);
        }
        else
        {
          v19 = 1 << -(char)__clz(v17 - 1);
          if (v17 >= 2)
            v17 = v19;
        }
        if (prime <= v17)
          prime = v17;
        if (prime < v6)
LABEL_35:
          sub_239A501C8((uint64_t)v49, prime);
      }
      v6 = (unint64_t)v49[1];
      if (((unint64_t)v49[1] & ((unint64_t)v49[1] - 1)) != 0)
      {
        if ((void *)v5 >= v49[1])
          v1 = v5 % (unint64_t)v49[1];
        else
          v1 = v5;
      }
      else
      {
        v1 = ((unint64_t)v49[1] - 1) & v5;
      }
    }
    v20 = v49[0];
    v21 = (_QWORD *)*((_QWORD *)v49[0] + v1);
    if (v21)
    {
      *(_QWORD *)v9 = *v21;
    }
    else
    {
      *(void **)v9 = __p[0];
      __p[0] = v9;
      v20[v1] = __p;
      if (!*(_QWORD *)v9)
        goto LABEL_60;
      v22 = *(_QWORD *)(*(_QWORD *)v9 + 8);
      if ((v6 & (v6 - 1)) != 0)
      {
        if (v22 >= v6)
          v22 %= v6;
      }
      else
      {
        v22 &= v6 - 1;
      }
      v21 = (char *)v49[0] + 8 * v22;
    }
    *v21 = v9;
LABEL_60:
    ++__p[1];
LABEL_61:
    v24 = v60;
    v23 = v61;
    v25 = v59;
    *(_OWORD *)(v9 + 88) = v58;
    *(_OWORD *)(v9 + 104) = v25;
    *(_OWORD *)(v9 + 120) = v24;
    *(_OWORD *)(v9 + 136) = v23;
    v27 = v56;
    v26 = v57;
    v28 = v55;
    *(_OWORD *)(v9 + 24) = v54;
    *(_OWORD *)(v9 + 40) = v28;
    *(_OWORD *)(v9 + 56) = v27;
    *(_OWORD *)(v9 + 72) = v26;
  }
  v29 = (char *)operator new(0xA8uLL);
  *((_QWORD *)v29 + 1) = 0;
  *((_QWORD *)v29 + 2) = 0;
  *(_QWORD *)v29 = &off_250AFAC20;
  *(_OWORD *)(v29 + 40) = 0u;
  *(_OWORD *)(v29 + 56) = 0u;
  *(_OWORD *)(v29 + 72) = 0u;
  *(_OWORD *)(v29 + 88) = 0u;
  *(_OWORD *)(v29 + 104) = 0u;
  *(_OWORD *)(v29 + 120) = 0u;
  *(_OWORD *)(v29 + 136) = 0u;
  *(_OWORD *)(v29 + 152) = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  *(_QWORD *)&v54 = v29 + 24;
  *((_QWORD *)&v54 + 1) = v29;
  *((_DWORD *)v29 + 6) = -1;
  *((_DWORD *)v29 + 8) = 2;
  v30 = operator new(0x40uLL);
  v30[1] = 0;
  v30[2] = 0;
  *v30 = &off_250AFAC58;
  v31 = sub_239BAB9F8((uint64_t)(v30 + 3), (uint64_t)v49);
  v32 = v54;
  v33 = *(std::__shared_weak_count **)(v54 + 112);
  *(_QWORD *)(v54 + 104) = v31;
  *(_QWORD *)(v32 + 112) = v30;
  if (v33)
  {
    p_shared_owners = (unint64_t *)&v33->__shared_owners_;
    do
      v35 = __ldaxr(p_shared_owners);
    while (__stlxr(v35 - 1, p_shared_owners));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  v36 = *(_QWORD *)(v3 + 24);
  v37 = *(_QWORD *)(v36 + 176);
  v38 = *(_QWORD *)(v36 + 448);
  if (!v38)
  {
    v39 = 0;
    goto LABEL_72;
  }
  v39 = *(_QWORD *)(v38 + 1696);
  if (!v39)
  {
LABEL_72:
    v53 = (_BYTE *)v39;
    goto LABEL_73;
  }
  if (v39 != v38 + 1672)
  {
    v39 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v39 + 16))(v39);
    goto LABEL_72;
  }
  v53 = v52;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v39 + 24))(v39, v52);
LABEL_73:
  (*(void (**)(uint64_t, __int128 *, _BYTE *))(*(_QWORD *)v37 + 16))(v37, &v54, v52);
  v40 = v53;
  if (v53 == v52)
  {
    v41 = 4;
    v40 = v52;
    goto LABEL_77;
  }
  if (v53)
  {
    v41 = 5;
LABEL_77:
    (*(void (**)(void))(*v40 + 8 * v41))();
  }
  *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = 0;
  v42 = (std::__shared_weak_count *)*((_QWORD *)&v54 + 1);
  if (*((_QWORD *)&v54 + 1))
  {
    v43 = (unint64_t *)(*((_QWORD *)&v54 + 1) + 8);
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
  }
  v45 = __p[0];
  if (__p[0])
  {
    do
    {
      v46 = (_QWORD *)*v45;
      operator delete(v45);
      v45 = v46;
    }
    while (v46);
  }
  v47 = v49[0];
  v49[0] = 0;
  if (v47)
    operator delete(v47);
}

void sub_239BAB96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  sub_239A4D7C0((uint64_t)&a35);
  sub_239420950((uint64_t)&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_239BAB9F8(uint64_t a1, uint64_t a2)
{
  unint64_t prime;
  int8x8_t v5;
  BOOL v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint8x8_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  float v26;
  float v27;
  _BOOL8 v28;
  unint64_t v29;
  unint64_t v30;
  size_t v31;
  unint64_t v32;
  uint8x8_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  prime = *(_QWORD *)(a2 + 8);
  if (prime == 1)
  {
    prime = 2;
LABEL_17:
    sub_239A501C8(a1, prime);
    goto LABEL_18;
  }
  if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(*(_QWORD *)(a2 + 8));
    v5 = *(int8x8_t *)(a1 + 8);
    v6 = prime >= *(_QWORD *)&v5;
    if (prime > *(_QWORD *)&v5)
      goto LABEL_17;
  }
  else
  {
    v5 = 0;
    v6 = 1;
    if (prime)
      goto LABEL_17;
  }
  if (!v6)
  {
    v7 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v5 < 3uLL || (v8 = (uint8x8_t)vcnt_s8(v5), v8.i16[0] = vaddlv_u8(v8), v8.u32[0] > 1uLL))
    {
      v7 = std::__next_prime(v7);
    }
    else
    {
      v9 = 1 << -(char)__clz(v7 - 1);
      if (v7 >= 2)
        v7 = v9;
    }
    if (prime <= v7)
      prime = v7;
    if (prime < *(_QWORD *)&v5)
      goto LABEL_17;
  }
LABEL_18:
  v10 = *(uint64_t **)(a2 + 16);
  if (v10)
  {
    v11 = (_QWORD *)(a1 + 16);
    v12 = *(_QWORD *)(a1 + 8);
    do
    {
      v13 = v10[2];
      if (v12)
      {
        v14 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
        v14.i16[0] = vaddlv_u8(v14);
        if (v14.u32[0] > 1uLL)
        {
          prime = v10[2];
          if (v13 >= v12)
            prime = v13 % v12;
        }
        else
        {
          prime = (v12 - 1) & v13;
        }
        v15 = *(_QWORD **)(*(_QWORD *)a1 + 8 * prime);
        if (v15)
        {
          v16 = (_QWORD *)*v15;
          if (v16)
          {
            if (v14.u32[0] < 2uLL)
            {
              while (1)
              {
                v18 = v16[1];
                if (v18 == v13)
                {
                  if (v16[2] == v13)
                    goto LABEL_79;
                }
                else if ((v18 & (v12 - 1)) != prime)
                {
                  goto LABEL_40;
                }
                v16 = (_QWORD *)*v16;
                if (!v16)
                  goto LABEL_40;
              }
            }
            do
            {
              v17 = v16[1];
              if (v17 == v13)
              {
                if (v16[2] == v13)
                  goto LABEL_79;
              }
              else
              {
                if (v17 >= v12)
                  v17 %= v12;
                if (v17 != prime)
                  break;
              }
              v16 = (_QWORD *)*v16;
            }
            while (v16);
          }
        }
      }
LABEL_40:
      v19 = (char *)operator new(0x98uLL);
      *(_QWORD *)v19 = 0;
      *((_QWORD *)v19 + 1) = v13;
      *((_QWORD *)v19 + 2) = v10[2];
      v20 = *(_OWORD *)(v10 + 3);
      v21 = *(_OWORD *)(v10 + 5);
      v22 = *(_OWORD *)(v10 + 7);
      *(_OWORD *)(v19 + 72) = *(_OWORD *)(v10 + 9);
      *(_OWORD *)(v19 + 56) = v22;
      *(_OWORD *)(v19 + 40) = v21;
      *(_OWORD *)(v19 + 24) = v20;
      v23 = *(_OWORD *)(v10 + 11);
      v24 = *(_OWORD *)(v10 + 13);
      v25 = *(_OWORD *)(v10 + 15);
      *(_OWORD *)(v19 + 136) = *(_OWORD *)(v10 + 17);
      *(_OWORD *)(v19 + 120) = v25;
      *(_OWORD *)(v19 + 104) = v24;
      *(_OWORD *)(v19 + 88) = v23;
      v26 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
      v27 = *(float *)(a1 + 32);
      if (!v12 || (float)(v27 * (float)v12) < v26)
      {
        v28 = v12 < 3 || (v12 & (v12 - 1)) != 0;
        v29 = v28 | (2 * v12);
        v30 = vcvtps_u32_f32(v26 / v27);
        if (v29 <= v30)
          v31 = v30;
        else
          v31 = v29;
        if (v31 == 1)
        {
          v31 = 2;
        }
        else if ((v31 & (v31 - 1)) != 0)
        {
          v31 = std::__next_prime(v31);
          v12 = *(_QWORD *)(a1 + 8);
        }
        if (v31 > v12)
          goto LABEL_53;
        if (v31 < v12)
        {
          v32 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
          if (v12 < 3 || (v33 = (uint8x8_t)vcnt_s8((int8x8_t)v12), v33.i16[0] = vaddlv_u8(v33), v33.u32[0] > 1uLL))
          {
            v32 = std::__next_prime(v32);
          }
          else
          {
            v34 = 1 << -(char)__clz(v32 - 1);
            if (v32 >= 2)
              v32 = v34;
          }
          if (v31 <= v32)
            v31 = v32;
          if (v31 < v12)
LABEL_53:
            sub_239A501C8(a1, v31);
        }
        v12 = *(_QWORD *)(a1 + 8);
        if ((v12 & (v12 - 1)) != 0)
        {
          if (v13 >= v12)
            prime = v13 % v12;
          else
            prime = v13;
        }
        else
        {
          prime = (v12 - 1) & v13;
        }
      }
      v35 = *(_QWORD *)a1;
      v36 = *(_QWORD **)(*(_QWORD *)a1 + 8 * prime);
      if (v36)
      {
        *(_QWORD *)v19 = *v36;
      }
      else
      {
        *(_QWORD *)v19 = *v11;
        *v11 = v19;
        *(_QWORD *)(v35 + 8 * prime) = v11;
        if (!*(_QWORD *)v19)
          goto LABEL_78;
        v37 = *(_QWORD *)(*(_QWORD *)v19 + 8);
        if ((v12 & (v12 - 1)) != 0)
        {
          if (v37 >= v12)
            v37 %= v12;
        }
        else
        {
          v37 &= v12 - 1;
        }
        v36 = (_QWORD *)(*(_QWORD *)a1 + 8 * v37);
      }
      *v36 = v19;
LABEL_78:
      ++*(_QWORD *)(a1 + 24);
LABEL_79:
      v10 = (uint64_t *)*v10;
    }
    while (v10);
  }
  return a1;
}

void sub_239BABDE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239420950(v1);
  _Unwind_Resume(a1);
}

void sub_239BABE08(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFAC58;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239BABE18(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFAC58;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239BABE48(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 40);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v4)
    operator delete(v4);
}

void sub_239BABE98(uint64_t a1)
{
  NSObject *v1;
  _QWORD v2[5];
  __int128 v3;
  int v4;

  v2[0] = MEMORY[0x24BDAC760];
  v2[1] = 0x40000000;
  v2[2] = sub_239BABF08;
  v2[3] = &unk_250AF7BD0;
  v4 = *(_DWORD *)(a1 + 56);
  v3 = *(_OWORD *)(a1 + 40);
  v1 = *(NSObject **)(v3 + 152);
  v2[4] = *(_QWORD *)(a1 + 32);
  dispatch_sync(v1, v2);
}

void sub_239BABF08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 24) + 80);
  v3 = *(_QWORD *)(v2 + 176);
  v4 = *(_QWORD *)(v2 + 184);
  if (v3 != v4)
  {
    v5 = v3 + 184;
    do
    {
      if (*(_DWORD *)(v5 + 156) == *(_DWORD *)(a1 + 56))
      {
        v8 = *(_QWORD **)(a1 + 48);
        v6 = *(_QWORD **)v5;
        v9 = *(_QWORD *)(v5 + 8) - *(_QWORD *)v5;
        if (v9 <= 0x7F)
        {
          sub_23945E108(v5, 16 - (v9 >> 3));
          v6 = *(_QWORD **)v5;
        }
        else if (v9 != 128)
        {
          *(_QWORD *)(v5 + 8) = v6 + 16;
        }
        *v6 = *v8;
        v6[1] = v8[4];
        v6[2] = v8[8];
        v6[3] = v8[12];
        v6[4] = v8[1];
        v6[5] = v8[5];
        v6[6] = v8[9];
        v6[7] = v8[13];
        v6[8] = v8[2];
        v6[9] = v8[6];
        v6[10] = v8[10];
        v6[11] = v8[14];
        v6[12] = v8[3];
        v6[13] = v8[7];
        v6[14] = v8[11];
        v6[15] = v8[15];
      }
      v7 = v5 + 168;
      v5 += 352;
    }
    while (v7 != v4);
  }
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
}

void sub_239BAC03C(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  _QWORD v5[8];

  v1 = (_QWORD *)a1[5];
  if (v1[21] == v1[22] && ((v2 = v1[1], *(_BYTE *)(v2 + 4)) || *(_DWORD *)v2) && !*(_BYTE *)(v1[3] + 2109))
  {
    v3 = v1[19];
    v5[0] = MEMORY[0x24BDAC760];
    v5[1] = 0x40000000;
    v5[2] = sub_239BAC0E4;
    v5[3] = &unk_250AF7C20;
    v5[4] = a1[4];
    v5[5] = v1;
    v4 = a1[7];
    v5[6] = a1[6];
    v5[7] = v4;
    dispatch_sync(v3, v5);
  }
  else
  {
    *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = -4;
  }
}

void sub_239BAC0E4(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  std::string *v7;
  uint64_t v8;
  uint64_t v9;
  std::string::size_type size;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  const char *v19;
  std::__fs::filesystem::path::__string_view v20;
  void *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v22;
  std::basic_string_view<_CharT, _Traits>::size_type v23;
  void *v24;
  int v25;
  BOOL v26;
  void **v27;
  std::string *v28;
  std::string *v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  std::__fs::filesystem::path::__string_view v33;
  void *v34;
  std::basic_string_view<_CharT, _Traits>::size_type v35;
  std::basic_string_view<_CharT, _Traits>::size_type v36;
  void *v37;
  int v38;
  void **v39;
  std::string *v40;
  std::string *v41;
  void *v42;
  std::string __s2;
  _DWORD v44[2];
  __int128 v45;
  _BYTE v46[7];
  char v47;
  void *__p;
  std::string *v49;
  std::string __dst;

  v2 = a1[5];
  v3 = *(_QWORD **)(v2 + 24);
  v5 = (_QWORD *)v3[14];
  v4 = (_QWORD *)v3[15];
  if (v5 != v4)
  {
    while (*v5 != a1[6])
    {
      if (++v5 == v4)
      {
        v5 = (_QWORD *)v3[15];
        break;
      }
    }
  }
  if (v5 == v4)
  {
    *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = -32;
    return;
  }
  v6 = v3[10];
  std::to_string(&__dst, a1[6]);
  v7 = std::string::append(&__dst, ".jpg");
  __s2 = *v7;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v9 = *(_QWORD *)(v6 + 176);
  v8 = *(_QWORD *)(v6 + 184);
  if (v9 != v8)
  {
    if ((__s2.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__s2.__r_.__value_.__r.__words[2]);
    else
      size = __s2.__r_.__value_.__l.__size_;
    if ((*((_BYTE *)&__s2.__r_.__value_.__s + 23) & 0x80) == 0)
    {
      while (1)
      {
        v11 = *(unsigned __int8 *)(v9 + 311);
        if ((v11 & 0x80u) == 0)
          v12 = *(unsigned __int8 *)(v9 + 311);
        else
          v12 = *(_QWORD *)(v9 + 296);
        if (v12 == size)
        {
          if ((v11 & 0x80) != 0)
          {
            if (!memcmp(*(const void **)(v9 + 288), &__s2, *(_QWORD *)(v9 + 296)))
              goto LABEL_39;
          }
          else
          {
            if (!*(_BYTE *)(v9 + 311))
              goto LABEL_39;
            v13 = 0;
            while (*(unsigned __int8 *)(v9 + v13 + 288) == __s2.__r_.__value_.__s.__data_[v13])
            {
              if (v11 == ++v13)
                goto LABEL_39;
            }
          }
        }
        v9 += 352;
        if (v9 == v8)
          goto LABEL_46;
      }
    }
    while (1)
    {
      v14 = *(unsigned __int8 *)(v9 + 311);
      if ((v14 & 0x80u) == 0)
        v15 = *(unsigned __int8 *)(v9 + 311);
      else
        v15 = *(_QWORD *)(v9 + 296);
      if (v15 == size)
      {
        if ((v14 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)(v9 + 288), __s2.__r_.__value_.__l.__data_, *(_QWORD *)(v9 + 296)))
            break;
        }
        else
        {
          if (!*(_BYTE *)(v9 + 311))
            break;
          v16 = 0;
          while (*(unsigned __int8 *)(v9 + v16 + 288) == *(unsigned __int8 *)(__s2.__r_.__value_.__r.__words[0] + v16))
          {
            if (v14 == ++v16)
              goto LABEL_39;
          }
        }
      }
      v9 += 352;
      if (v9 == v8)
        goto LABEL_46;
    }
  }
LABEL_39:
  if (v9 == v8)
  {
LABEL_46:
    *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = -18;
    goto LABEL_99;
  }
  v17 = *(_QWORD *)(v2 + 8);
  v18 = a1[6];
  v19 = (const char *)a1[7];
  if (!*(_BYTE *)(v17 + 4) && !*(_DWORD *)v17)
  {
    sub_239A444D4((uint64_t)"unknown file", 595, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = std::__fs::filesystem::path::__extension((const std::__fs::filesystem::path *)a1[7]);
  if (v20.__size_ > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v20.__size_ >= 0x17)
  {
    v22 = (v20.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20.__size_ | 7) != 0x17)
      v22 = v20.__size_ | 7;
    v23 = v22 + 1;
    p_dst = operator new(v22 + 1);
    __dst.__r_.__value_.__l.__size_ = v20.__size_;
    __dst.__r_.__value_.__r.__words[2] = v23 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_50;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v20.__size_;
  p_dst = &__dst;
  if (v20.__size_)
LABEL_50:
    memmove(p_dst, v20.__data_, v20.__size_);
  *((_BYTE *)p_dst + v20.__size_) = 0;
  v24 = (void *)__dst.__r_.__value_.__r.__words[0];
  v44[0] = __dst.__r_.__value_.__r.__words[2];
  *(_DWORD *)((char *)v44 + 3) = *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[2] + 3);
  v25 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&v45, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  }
  else
  {
    v45 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
    *(_DWORD *)v46 = v44[0];
    *(_DWORD *)&v46[3] = *(_DWORD *)((char *)v44 + 3);
    v47 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  }
  sub_239A9A408(&__p, v17, v18, (uint64_t)&v45, 1);
  if (v47 < 0)
  {
    operator delete((void *)v45);
    if ((v25 & 0x80000000) == 0)
      goto LABEL_56;
LABEL_77:
    operator delete(v24);
    goto LABEL_56;
  }
  if (v25 < 0)
    goto LABEL_77;
LABEL_56:
  sub_2396F295C((uint64_t *)&__p, v17 + 8, (uint64_t)&__dst);
  v26 = sub_2396FC5A0(v19, (const char *)&__dst);
  if (v26)
  {
    if (!*(_BYTE *)(v17 + 1032))
    {
      sub_239A444D4((uint64_t)"unknown file", 606, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    *(_QWORD *)&v45 = v18;
    v27 = (void **)(sub_239A9A754(v17 + 992, v18, &v45) + 3);
    if (v27 != &__p)
      sub_239A70694((uint64_t)v27, (std::string *)__p, v49, 0xAAAAAAAAAAAAAAABLL * (((char *)v49 - (_BYTE *)__p) >> 3));
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v28 = (std::string *)__p;
  if (__p)
  {
    v29 = v49;
    v30 = __p;
    if (v49 != __p)
    {
      do
      {
        if (SHIBYTE(v29[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v29[-1].__r_.__value_.__l.__data_);
        --v29;
      }
      while (v29 != v28);
      v30 = __p;
    }
    v49 = v28;
    operator delete(v30);
  }
  if (v26)
  {
    v31 = *(_QWORD *)(v2 + 8);
    v32 = a1[6];
    v33 = std::__fs::filesystem::path::__extension((const std::__fs::filesystem::path *)a1[7]);
    if (v33.__size_ > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    if (v33.__size_ >= 0x17)
    {
      v35 = (v33.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v33.__size_ | 7) != 0x17)
        v35 = v33.__size_ | 7;
      v36 = v35 + 1;
      v34 = operator new(v35 + 1);
      __dst.__r_.__value_.__l.__size_ = v33.__size_;
      __dst.__r_.__value_.__r.__words[2] = v36 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v34;
    }
    else
    {
      *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v33.__size_;
      v34 = &__dst;
      if (!v33.__size_)
        goto LABEL_82;
    }
    memmove(v34, v33.__data_, v33.__size_);
LABEL_82:
    *((_BYTE *)v34 + v33.__size_) = 0;
    v37 = (void *)__dst.__r_.__value_.__r.__words[0];
    v44[0] = __dst.__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v44 + 3) = *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[2] + 3);
    v38 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_23941A7F8(&v45, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else
    {
      v45 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(_DWORD *)v46 = v44[0];
      *(_DWORD *)&v46[3] = *(_DWORD *)((char *)v44 + 3);
      v47 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    sub_239A9A408(&__p, v31, v32, (uint64_t)&v45, 0);
    if (v47 < 0)
      operator delete((void *)v45);
    if (v38 < 0)
      operator delete(v37);
    sub_2396F280C(&__p, (uint64_t)&__dst);
    v39 = (void **)(v9 + 288);
    if (*(char *)(v9 + 311) < 0)
      operator delete(*v39);
    *(_OWORD *)v39 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
    *(_QWORD *)(v9 + 304) = *((_QWORD *)&__dst.__r_.__value_.__l + 2);
    *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = 0;
    v40 = (std::string *)__p;
    if (__p)
    {
      v41 = v49;
      v42 = __p;
      if (v49 != __p)
      {
        do
        {
          if (SHIBYTE(v41[-1].__r_.__value_.__r.__words[2]) < 0)
            operator delete(v41[-1].__r_.__value_.__l.__data_);
          --v41;
        }
        while (v41 != v40);
        v42 = __p;
      }
      v49 = v40;
      operator delete(v42);
    }
    goto LABEL_99;
  }
  *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = -12;
LABEL_99:
  if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__s2.__r_.__value_.__l.__data_);
}

void sub_239BAC6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  void *v31;

  operator delete(v31);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239BAC788(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];
  _BYTE v7[24];
  _BYTE *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(NSObject **)(v1 + 160);
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1174405120;
  v6[2] = sub_239BAC93C;
  v6[3] = &unk_250AF7C68;
  v6[4] = v1;
  v3 = v7;
  v4 = *(_QWORD *)(a1 + 64);
  if (v4)
  {
    if (v4 == a1 + 40)
    {
      v8 = v7;
      (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v4 + 24))(v4, v7);
    }
    else
    {
      v8 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v4 + 16))(*(_QWORD *)(a1 + 64));
    }
  }
  else
  {
    v8 = 0;
  }
  dispatch_async(v2, v6);
  if (v8 == v7)
  {
    v5 = 4;
  }
  else
  {
    if (!v8)
      return;
    v5 = 5;
    v3 = v8;
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v5))(v3);
}

uint64_t sub_239BAC89C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a2 + 64);
  if (result)
  {
    if (result == a2 + 40)
    {
      *(_QWORD *)(a1 + 64) = a1 + 40;
      return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 64) + 24))(*(_QWORD *)(a2 + 64), a1 + 40);
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
      *(_QWORD *)(a1 + 64) = result;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 64) = 0;
  }
  return result;
}

_QWORD *sub_239BAC908(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 40);
  result = *(_QWORD **)(a1 + 64);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

_QWORD *sub_239BAC93C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *result;
  uint64_t v21;
  _QWORD v22[3];
  int v23;
  const char *v24;
  int v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *__p;
  int *v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE *v34;
  _BYTE v35[24];
  _BYTE *v36;
  _QWORD v37[3];
  _QWORD *v38;
  _BYTE v39[256];
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[472];
  _BYTE v43[200];
  _BYTE v44[720];
  _BYTE v45[1752];
  _BYTE v46[592];
  _BYTE v47[112];
  _BYTE v48[872];
  _BYTE v49[400];
  _BYTE v50[368];
  _BYTE v51[1040];
  _QWORD v52[3];
  _QWORD *v53;
  _QWORD v54[3];
  _QWORD *v55;
  uint64_t v56;

  v1 = MEMORY[0x24BDAC7A8](a1);
  v56 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(v1 + 32);
  v55 = v54;
  v53 = v52;
  v54[0] = &off_250AFAC90;
  v52[0] = &off_250AFAC90;
  v39[0] = 0;
  v39[24] = 0;
  v39[32] = 0;
  v39[56] = 0;
  v39[64] = 0;
  v39[88] = 0;
  v39[96] = 0;
  v39[120] = 0;
  v39[128] = 0;
  v39[152] = 0;
  v39[160] = 0;
  v39[184] = 0;
  v39[192] = 0;
  v39[216] = 0;
  v39[224] = 0;
  v39[248] = 0;
  v42[464] = 0;
  v43[0] = 0;
  v43[192] = 0;
  v44[0] = 0;
  v44[712] = 0;
  v45[0] = 0;
  v45[1744] = 0;
  v46[0] = 0;
  v46[584] = 0;
  v47[0] = 0;
  v47[104] = 0;
  v48[864] = 0;
  v48[0] = 0;
  v49[0] = 0;
  v49[392] = 0;
  v50[0] = 0;
  v50[360] = 0;
  v51[0] = 0;
  v51[1032] = 0;
  v40 = 0;
  v41 = 0;
  v42[0] = 0;
  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 24);
  v36 = 0;
  v37[0] = &off_250AFACD8;
  v38 = v37;
  v34 = 0;
  v5 = sub_239B31CF4(0, 0, v3, v4, 1, (uint64_t)v52, (uint64_t)v37, (uint64_t)v35, (uint64_t)v33, (uint64_t)v39);
  v6 = v34;
  if (v34 == v33)
  {
    v7 = 4;
    v6 = v33;
  }
  else
  {
    if (!v34)
      goto LABEL_6;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_6:
  v8 = v36;
  if (v36 == v35)
  {
    v9 = 4;
    v8 = v35;
  }
  else
  {
    if (!v36)
      goto LABEL_11;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_11:
  v10 = v38;
  if (v38 == v37)
  {
    v11 = 4;
    v10 = v37;
  }
  else
  {
    if (!v38)
      goto LABEL_16;
    v11 = 5;
  }
  (*(void (**)(void))(*v10 + 8 * v11))();
LABEL_16:
  v12 = *(_QWORD *)(v1 + 64);
  if (v12)
  {
    switch(v5)
    {
      case 1:
        break;
      case 2:
        __p = 0;
        v31 = 0;
        v32 = 0;
        sub_239BC9D74((uint64_t)v42, (uint64_t)v43, (uint64_t)v44, (uint64_t)v45, (uint64_t)v46, (uint64_t)v47, (uint64_t)v48, (uint64_t)v49, (uint64_t)v50, (uint64_t)v51, (char **)&__p);
        if (__p == v31)
        {
          sub_239B71020(&v29);
          if (**(int **)(v29 + 56) <= 5 && *(_BYTE *)(v29 + 72))
          {
            v22[0] = &v29;
            v22[1] = std::chrono::steady_clock::now().__d_.__rep_;
            v22[2] = std::chrono::system_clock::now().__d_.__rep_;
            v23 = 5;
            v24 = "unknown file";
            v25 = 1971;
            v27 = 0;
            v28 = 0;
            v26 = "unknown function";
            sub_239BACEE0((uint64_t)v22);
            sub_239A47720((uint64_t)v22);
            sub_239A478B4((uint64_t)v22);
          }
          v16 = 0x100000000;
          v15 = -256;
          v14 = -1;
          v17 = (int *)__p;
          if (!__p)
            goto LABEL_21;
        }
        else
        {
          v13 = sub_239BC9B5C((int *)__p, v31);
          v14 = v13;
          v15 = v13 & 0xFFFFFF00;
          v16 = v13 & 0x100000000;
          v17 = (int *)__p;
          if (!__p)
          {
LABEL_21:
            v12 = *(_QWORD *)(v1 + 64);
            goto LABEL_29;
          }
        }
        v31 = v17;
        operator delete(v17);
        goto LABEL_21;
      case 3:
        v16 = 0x100000000;
        v15 = -256;
        v14 = -1;
        goto LABEL_29;
      case 4:
        v16 = 0x100000000;
        v15 = -256;
        v14 = -12;
        goto LABEL_29;
      case 5:
        v16 = 0x100000000;
        v15 = -256;
        v14 = -19;
        goto LABEL_29;
      case 6:
        v16 = 0x100000000;
        v15 = -256;
        v14 = -20;
        goto LABEL_29;
      case 7:
        v16 = 0x100000000;
        v15 = -256;
        v14 = -26;
        goto LABEL_29;
      case 8:
        v16 = 0x100000000;
        v15 = -256;
        v14 = -32;
        goto LABEL_29;
      default:
        v16 = 0;
        v14 = 0;
        v15 = 0;
LABEL_29:
        v22[0] = v16 & 0x100000000 | v14 | v15 & 0xFFFFFF00;
        if (!v12)
          sub_2394172E0();
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v12 + 48))(v12, v22);
        break;
    }
  }
  sub_239BACFF4((uint64_t)v39);
  v18 = v53;
  if (v53 == v52)
  {
    v19 = 4;
    v18 = v52;
  }
  else
  {
    if (!v53)
      goto LABEL_36;
    v19 = 5;
  }
  (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_36:
  result = v55;
  if (v55 == v54)
  {
    v21 = 4;
    result = v54;
  }
  else
  {
    if (!v55)
      return result;
    v21 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v21))();
}

void sub_239BACDA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;

  sub_239A478B4((uint64_t)&a13);
  if (__p)
  {
    a24 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_239BACFF4((uint64_t)&a38);
  v40 = *(_QWORD **)(v38 - 128);
  if (v40 == (_QWORD *)(v38 - 152))
  {
    v41 = 4;
    v40 = (_QWORD *)(v38 - 152);
  }
  else
  {
    if (!v40)
      goto LABEL_8;
    v41 = 5;
  }
  (*(void (**)(void))(*v40 + 8 * v41))();
LABEL_8:
  v42 = *(_QWORD **)(v38 - 96);
  if (v42 == (_QWORD *)(v38 - 120))
  {
    v43 = 4;
    v42 = (_QWORD *)(v38 - 120);
  }
  else
  {
    if (!v42)
      goto LABEL_13;
    v43 = 5;
  }
  (*(void (**)(void))(*v42 + 8 * v43))();
LABEL_13:
  _Unwind_Resume(a1);
}

uint64_t sub_239BACEE0(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  if (!*(_QWORD *)(a1 + 56))
  {
    v3 = operator new();
    sub_2394988CC(v3);
    v4 = (_QWORD *)operator new();
    *v4 = &unk_250AF1978;
    v4[1] = 0;
    v4[2] = 0;
    v4[3] = v3;
    v5 = *(std::__shared_weak_count **)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v3;
    *(_QWORD *)(a1 + 64) = v4;
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
  sub_239458500((_QWORD *)(*(_QWORD *)(a1 + 56) + 16), (uint64_t)"Processing failed without internal error code", 45);
  return a1;
}

void sub_239BACFB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239BACFD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C40EED050F3);
  _Unwind_Resume(a1);
}

uint64_t sub_239BACFF4(uint64_t a1)
{
  _BYTE *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;

  v2 = (_BYTE *)(a1 + 4112);
  if (!*(_BYTE *)(a1 + 6792))
    goto LABEL_8;
  if (*(char *)(a1 + 6711) < 0)
  {
    operator delete(*(void **)(a1 + 6688));
    if (((char)v2[2567] & 0x80000000) == 0)
    {
LABEL_4:
      v3 = *(void **)(a1 + 6632);
      if (!v3)
        goto LABEL_6;
      goto LABEL_5;
    }
  }
  else if ((*(char *)(a1 + 6679) & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(*(void **)(a1 + 6656));
  v3 = *(void **)(a1 + 6632);
  if (v3)
  {
LABEL_5:
    *(_QWORD *)(a1 + 6640) = v3;
    operator delete(v3);
  }
LABEL_6:
  sub_239586EB4(a1 + 6232);
  v4 = *(void **)(a1 + 6144);
  if (v4)
  {
    *(_QWORD *)(a1 + 6152) = v4;
    operator delete(v4);
  }
LABEL_8:
  if (v2[1640])
    sub_239B3F8AC(a1 + 5392);
  if (v2[1272])
  {
    if ((char)v2[1207] < 0)
    {
      operator delete(*(void **)(a1 + 5296));
      v5 = *(void **)(a1 + 5272);
      if (!v5)
      {
LABEL_14:
        v6 = *(void **)(a1 + 5152);
        if (v6)
        {
          *(_QWORD *)(a1 + 5160) = v6;
          operator delete(v6);
        }
        goto LABEL_16;
      }
    }
    else
    {
      v5 = *(void **)(a1 + 5272);
      if (!v5)
        goto LABEL_14;
    }
    *(_QWORD *)(a1 + 5280) = v5;
    operator delete(v5);
    goto LABEL_14;
  }
LABEL_16:
  if (v2[872])
    sub_239A613DC(a1 + 4120);
  if (*v2)
  {
    v7 = *(void **)(a1 + 4080);
    if (v7)
    {
      *(_QWORD *)(a1 + 4088) = v7;
      operator delete(v7);
    }
  }
  if (*(_BYTE *)(a1 + 4000))
    sub_239A614AC((_QWORD *)(a1 + 3416));
  if (*(_BYTE *)(a1 + 3408))
    sub_239A615DC(a1 + 1664);
  if (*(_BYTE *)(a1 + 1656))
    sub_239A6177C(a1 + 944);
  if (*(_BYTE *)(a1 + 936))
  {
    v8 = *(void **)(a1 + 848);
    if (v8)
    {
      *(_QWORD *)(a1 + 856) = v8;
      operator delete(v8);
    }
    sub_239421038(a1 + 784, *(_QWORD **)(a1 + 792));
  }
  if (*(_BYTE *)(a1 + 736))
    sub_239A61848(a1 + 272);
  v9 = *(std::__shared_weak_count **)(a1 + 264);
  if (!v9)
    goto LABEL_37;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (!*(_BYTE *)(a1 + 248))
      goto LABEL_46;
  }
  else
  {
LABEL_37:
    if (!*(_BYTE *)(a1 + 248))
      goto LABEL_46;
  }
  if (*(char *)(a1 + 247) < 0)
    operator delete(*(void **)(a1 + 224));
LABEL_46:
  if (*(_BYTE *)(a1 + 216))
  {
    v12 = *(_QWORD *)(a1 + 192);
    if (v12)
    {
      v13 = *(_QWORD *)(a1 + 200);
      v14 = *(void **)(a1 + 192);
      if (v13 != v12)
      {
        do
        {
          if (*(char *)(v13 - 1) < 0)
            operator delete(*(void **)(v13 - 24));
          v13 -= 24;
        }
        while (v13 != v12);
        v14 = *(void **)(a1 + 192);
      }
      *(_QWORD *)(a1 + 200) = v12;
      operator delete(v14);
    }
  }
  if (*(_BYTE *)(a1 + 184))
  {
    v15 = *(_QWORD *)(a1 + 160);
    if (v15)
    {
      v16 = *(_QWORD *)(a1 + 168);
      v17 = *(void **)(a1 + 160);
      if (v16 != v15)
      {
        do
        {
          if (*(char *)(v16 - 1) < 0)
            operator delete(*(void **)(v16 - 24));
          v16 -= 24;
        }
        while (v16 != v15);
        v17 = *(void **)(a1 + 160);
      }
      *(_QWORD *)(a1 + 168) = v15;
      operator delete(v17);
    }
  }
  if (*(_BYTE *)(a1 + 152) && *(char *)(a1 + 151) < 0)
  {
    operator delete(*(void **)(a1 + 128));
    if (!*(_BYTE *)(a1 + 120))
      goto LABEL_77;
  }
  else if (!*(_BYTE *)(a1 + 120))
  {
    goto LABEL_77;
  }
  v18 = *(_QWORD *)(a1 + 96);
  if (v18)
  {
    v19 = *(_QWORD *)(a1 + 104);
    v20 = *(void **)(a1 + 96);
    if (v19 != v18)
    {
      do
      {
        if (*(char *)(v19 - 1) < 0)
          operator delete(*(void **)(v19 - 24));
        v19 -= 24;
      }
      while (v19 != v18);
      v20 = *(void **)(a1 + 96);
    }
    *(_QWORD *)(a1 + 104) = v18;
    operator delete(v20);
  }
LABEL_77:
  if (*(_BYTE *)(a1 + 88))
  {
    v21 = *(_QWORD *)(a1 + 64);
    if (v21)
    {
      v22 = *(_QWORD *)(a1 + 72);
      v23 = *(void **)(a1 + 64);
      if (v22 != v21)
      {
        do
        {
          if (*(char *)(v22 - 1) < 0)
            operator delete(*(void **)(v22 - 24));
          v22 -= 24;
        }
        while (v22 != v21);
        v23 = *(void **)(a1 + 64);
      }
      *(_QWORD *)(a1 + 72) = v21;
      operator delete(v23);
    }
  }
  if (*(_BYTE *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    if (!*(_BYTE *)(a1 + 24))
      return a1;
  }
  else if (!*(_BYTE *)(a1 + 24))
  {
    return a1;
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_239BAD374()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BAD388()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AFACD8;
  return result;
}

void sub_239BAD3AC(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AFACD8;
}

void sub_239BAD3CC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BAD3E0()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AFAC90;
  return result;
}

void sub_239BAD404(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AFAC90;
}

uint64_t sub_239BAD41C()
{
  return 0;
}

void sub_239BAD424(_QWORD *a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  char *v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void *v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  int **v42;
  std::__shared_weak_count *v43;
  void *v44;
  char *rep;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v46;
  int v47;
  const char *v48;
  int v49;
  const char *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  _QWORD block[6];
  std::__shared_weak_count *v54;
  _QWORD v55[3];
  _QWORD *v56;
  _BYTE v57[24];
  _BYTE *v58;
  _BYTE v59[24];
  _BYTE *v60;
  _BYTE v61[24];
  _BYTE *v62;
  _BYTE v63[24];
  _BYTE *v64;
  void *__p;
  void *v66;
  uint64_t v67;
  uint64_t v68;

  v68 = *MEMORY[0x24BDAC8D0];
  sub_239B71020(&v42);
  if (*v42[7] <= 3)
  {
    if (*((_BYTE *)v42 + 72))
    {
      v44 = &v42;
      rep = (char *)std::chrono::steady_clock::now().__d_.__rep_;
      v46 = std::chrono::system_clock::now().__d_.__rep_;
      v47 = 3;
      v48 = "unknown file";
      v49 = 1988;
      v51 = 0;
      v52 = 0;
      v50 = "unknown function";
      sub_239B3CE64((uint64_t)&v44, "Scheduling processing tasks");
      sub_239A47720((uint64_t)&v44);
      sub_239A47720((uint64_t)&v44);
      v8 = v52;
      if (v52)
      {
        p_shared_owners = (unint64_t *)&v52->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }
  }
  dispatch_assert_queue_not_V2(*(dispatch_queue_t *)(a2 + 136));
  v11 = (char *)operator new(0x60uLL);
  *((_QWORD *)v11 + 1) = 0;
  v12 = (unint64_t *)(v11 + 8);
  *((_QWORD *)v11 + 2) = 0;
  *(_QWORD *)v11 = &off_250AFAD20;
  *(_OWORD *)(v11 + 24) = xmmword_239EC69E0;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 72) = 0u;
  *((_QWORD *)v11 + 11) = 0;
  v42 = (int **)(v11 + 24);
  v43 = (std::__shared_weak_count *)v11;
  v13 = *a3;
  v14 = a3[1];
  v15 = (v14 - *a3) >> 3;
  v44 = 0;
  rep = 0;
  v46 = 0;
  sub_239BAD924(&v44, v13, v14, 0x86BCA1AF286BCA1BLL * v15);
  v16 = *(NSObject **)(a2 + 136);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 1174405120;
  block[2] = sub_239BADA20;
  block[3] = &unk_250AF7CF8;
  block[4] = a2;
  block[5] = v11 + 24;
  v54 = (std::__shared_weak_count *)v11;
  do
    v17 = __ldxr(v12);
  while (__stxr(v17 + 1, v12));
  v18 = v55;
  sub_239BADD04(v55, a4);
  __p = 0;
  v66 = 0;
  v67 = 0;
  sub_239BAD924(&__p, (uint64_t)v44, (uint64_t)rep, 0x86BCA1AF286BCA1BLL * ((rep - (_BYTE *)v44) >> 3));
  dispatch_sync(v16, block);
  v19 = operator new(0x30uLL);
  v19[1] = 0;
  v19[2] = 0;
  *v19 = &off_250AFAE30;
  do
    v20 = __ldxr(v12);
  while (__stxr(v20 + 1, v12));
  v19[3] = off_250AF79F8;
  v19[4] = v11 + 24;
  v19[5] = v11;
  *a1 = v19 + 3;
  a1[1] = v19;
  v21 = __p;
  if (__p)
  {
    v22 = (uint64_t)v66;
    v23 = __p;
    if (v66 != __p)
    {
      do
      {
        v22 -= 152;
        sub_239A5C550(v22);
      }
      while ((void *)v22 != v21);
      v23 = __p;
    }
    v66 = v21;
    operator delete(v23);
  }
  v24 = v64;
  if (v64 == v63)
  {
    v25 = 4;
    v24 = v63;
  }
  else
  {
    if (!v64)
      goto LABEL_22;
    v25 = 5;
  }
  (*(void (**)(void))(*v24 + 8 * v25))();
LABEL_22:
  v26 = v62;
  if (v62 == v61)
  {
    v27 = 4;
    v26 = v61;
  }
  else
  {
    if (!v62)
      goto LABEL_27;
    v27 = 5;
  }
  (*(void (**)(void))(*v26 + 8 * v27))();
LABEL_27:
  v28 = v60;
  if (v60 == v59)
  {
    v29 = 4;
    v28 = v59;
  }
  else
  {
    if (!v60)
      goto LABEL_32;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_32:
  v30 = v58;
  if (v58 == v57)
  {
    v31 = 4;
    v30 = v57;
  }
  else
  {
    if (!v58)
      goto LABEL_37;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_37:
  if (v56 == v55)
  {
    v32 = 4;
    goto LABEL_41;
  }
  if (v56)
  {
    v32 = 5;
    v18 = v56;
LABEL_41:
    (*(void (**)(_QWORD *))(*v18 + 8 * v32))(v18);
  }
  v33 = v54;
  if (v54)
  {
    v34 = (unint64_t *)&v54->__shared_owners_;
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  v36 = (char *)v44;
  if (v44)
  {
    v37 = rep;
    v38 = v44;
    if (rep != v44)
    {
      do
      {
        v37 -= 152;
        sub_239A5C550((uint64_t)v37);
      }
      while (v37 != v36);
      v38 = v44;
    }
    rep = v36;
    operator delete(v38);
  }
  v39 = v43;
  if (v43)
  {
    v40 = (unint64_t *)&v43->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
}

void sub_239BAD8A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239BAD924(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;

  if (a4)
  {
    if (a4 >= 0x1AF286BCA1AF287)
      sub_2394189F8();
    v7 = result;
    result = operator new(152 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[19 * a4];
    if (a2 != a3)
    {
      v9 = 0;
      do
      {
        result = sub_239A5C364(&v8[v9 / 8], (__int128 *)(a2 + v9));
        v9 += 152;
      }
      while (a2 + v9 != a3);
      v8 = (_QWORD *)((char *)v8 + v9);
    }
    v7[1] = v8;
  }
  return result;
}

void sub_239BAD9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_239BB0C2C(&a9);
  _Unwind_Resume(a1);
}

void sub_239BADA20(uint64_t a1)
{
  _QWORD *v2;
  __n128 *v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __n128 *v7;
  NSObject *v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD block[6];
  std::__shared_weak_count *v30;
  _QWORD v31[3];
  _QWORD *v32;
  _BYTE v33[24];
  _BYTE *v34;
  _BYTE v35[24];
  _BYTE *v36;
  _BYTE v37[24];
  _BYTE *v38;
  _BYTE v39[24];
  _BYTE *v40;
  void *__p;
  void *v42;
  uint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD **)(a1 + 32);
  v3 = (__n128 *)v2[22];
  if ((unint64_t)v3 >= v2[23])
  {
    v7 = sub_239BAE1FC((uint64_t)(v2 + 21), *(__n128 *)(a1 + 40));
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 48);
    v3->n128_u64[0] = *(_QWORD *)(a1 + 40);
    v3->n128_u64[1] = v4;
    if (v4)
    {
      v5 = (unint64_t *)(v4 + 8);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
    v7 = v3 + 1;
  }
  v2[22] = v7;
  v8 = v2[20];
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 1174405120;
  block[2] = sub_239BAE34C;
  block[3] = &unk_250AF7CC8;
  v10 = *(_QWORD *)(a1 + 40);
  v9 = *(std::__shared_weak_count **)(a1 + 48);
  block[4] = v2;
  block[5] = v10;
  v30 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  v13 = v31;
  sub_239BADD04(v31, (_QWORD *)(a1 + 56));
  __p = 0;
  v42 = 0;
  v43 = 0;
  sub_239BAD924(&__p, *(_QWORD *)(a1 + 216), *(_QWORD *)(a1 + 224), 0x86BCA1AF286BCA1BLL * ((uint64_t)(*(_QWORD *)(a1 + 224) - *(_QWORD *)(a1 + 216)) >> 3));
  dispatch_async(v8, block);
  v14 = __p;
  if (__p)
  {
    v15 = (uint64_t)v42;
    v16 = __p;
    if (v42 != __p)
    {
      do
      {
        v15 -= 152;
        sub_239A5C550(v15);
      }
      while ((void *)v15 != v14);
      v16 = __p;
    }
    v42 = v14;
    operator delete(v16);
  }
  v17 = v40;
  if (v40 == v39)
  {
    v18 = 4;
    v17 = v39;
  }
  else
  {
    if (!v40)
      goto LABEL_20;
    v18 = 5;
  }
  (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_20:
  v19 = v38;
  if (v38 == v37)
  {
    v20 = 4;
    v19 = v37;
  }
  else
  {
    if (!v38)
      goto LABEL_25;
    v20 = 5;
  }
  (*(void (**)(void))(*v19 + 8 * v20))();
LABEL_25:
  v21 = v36;
  if (v36 == v35)
  {
    v22 = 4;
    v21 = v35;
  }
  else
  {
    if (!v36)
      goto LABEL_30;
    v22 = 5;
  }
  (*(void (**)(void))(*v21 + 8 * v22))();
LABEL_30:
  v23 = v34;
  if (v34 == v33)
  {
    v24 = 4;
    v23 = v33;
  }
  else
  {
    if (!v34)
      goto LABEL_35;
    v24 = 5;
  }
  (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_35:
  if (v32 == v31)
  {
    v25 = 4;
  }
  else
  {
    if (!v32)
      goto LABEL_40;
    v25 = 5;
    v13 = v32;
  }
  (*(void (**)(_QWORD *))(*v13 + 8 * v25))(v13);
LABEL_40:
  v26 = v30;
  if (v30)
  {
    v27 = (unint64_t *)&v30->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_239BADCE0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;

  sub_239584310(v1);
  sub_239A4D7C0(v2 + 40);
  _Unwind_Resume(a1);
}

_QWORD *sub_239BADD04(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (_QWORD *)a2[3];
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], a1);
    }
    else
    {
      a1[3] = (*(uint64_t (**)(_QWORD *))(*v4 + 16))(v4);
    }
  }
  else
  {
    a1[3] = 0;
  }
  v5 = a2[7];
  if (!v5)
    goto LABEL_9;
  if ((_QWORD *)v5 != a2 + 4)
  {
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
LABEL_9:
    a1[7] = v5;
    goto LABEL_11;
  }
  a1[7] = a1 + 4;
  (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[7] + 24))(a2[7], a1 + 4);
LABEL_11:
  v6 = a2[11];
  if (!v6)
  {
LABEL_14:
    a1[11] = v6;
    goto LABEL_16;
  }
  if ((_QWORD *)v6 != a2 + 8)
  {
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
    goto LABEL_14;
  }
  a1[11] = a1 + 8;
  (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[11] + 24))(a2[11], a1 + 8);
LABEL_16:
  v7 = a2[15];
  if (!v7)
  {
LABEL_19:
    a1[15] = v7;
    goto LABEL_21;
  }
  if ((_QWORD *)v7 != a2 + 12)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    goto LABEL_19;
  }
  a1[15] = a1 + 12;
  (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[15] + 24))(a2[15], a1 + 12);
LABEL_21:
  v8 = a2[19];
  if (v8)
  {
    if ((_QWORD *)v8 == a2 + 16)
    {
      a1[19] = a1 + 16;
      (*(void (**)(_QWORD))(*(_QWORD *)a2[19] + 24))(a2[19]);
      return a1;
    }
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
  }
  a1[19] = v8;
  return a1;
}

void sub_239BADE88(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = (_QWORD *)v1[15];
  if (v6 == v4)
  {
    v7 = 4;
  }
  else
  {
    if (!v6)
      goto LABEL_6;
    v7 = 5;
    v4 = (_QWORD *)v1[15];
  }
  (*(void (**)(_QWORD *))(*v4 + 8 * v7))(v4);
LABEL_6:
  v8 = (_QWORD *)v1[11];
  if (v8 == v3)
  {
    v9 = 4;
  }
  else
  {
    if (!v8)
      goto LABEL_11;
    v9 = 5;
    v3 = (_QWORD *)v1[11];
  }
  (*(void (**)(_QWORD *))(*v3 + 8 * v9))(v3);
LABEL_11:
  v10 = (_QWORD *)v1[7];
  if (v10 == v2)
  {
    v11 = 4;
  }
  else
  {
    if (!v10)
      goto LABEL_16;
    v11 = 5;
    v2 = (_QWORD *)v1[7];
  }
  (*(void (**)(_QWORD *))(*v2 + 8 * v11))(v2);
LABEL_16:
  v12 = (_QWORD *)v1[3];
  if (v12 == v1)
  {
    v13 = 4;
  }
  else
  {
    if (!v12)
      goto LABEL_21;
    v13 = 5;
    v1 = (_QWORD *)v1[3];
  }
  (*(void (**)(_QWORD *))(*v1 + 8 * v13))(v1);
LABEL_21:
  _Unwind_Resume(exception_object);
}

void sub_239BADF6C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFAE30;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239BADF7C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFAE30;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239BADFAC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 8))(a1 + 24);
}

_QWORD *sub_239BADFBC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;

  v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_239BADD04(a1 + 7, a2 + 7);
  a1[27] = 0;
  a1[28] = 0;
  v7 = a1 + 27;
  v7[2] = 0;
  return sub_239BAD924(v7, a2[27], a2[28], 0x86BCA1AF286BCA1BLL * ((uint64_t)(a2[28] - a2[27]) >> 3));
}

void sub_239BAE048(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;

  sub_239584310(v2);
  sub_239A4D7C0(v1);
  _Unwind_Resume(a1);
}

void sub_239BAE06C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;

  v2 = a1[27];
  if (v2)
  {
    v3 = a1[28];
    v4 = (void *)a1[27];
    if (v3 != v2)
    {
      do
      {
        v3 -= 152;
        sub_239A5C550(v3);
      }
      while (v3 != v2);
      v4 = (void *)a1[27];
    }
    a1[28] = v2;
    operator delete(v4);
  }
  v5 = (_QWORD *)a1[26];
  if (v5 == a1 + 23)
  {
    v6 = 4;
    v5 = a1 + 23;
  }
  else
  {
    if (!v5)
      goto LABEL_11;
    v6 = 5;
  }
  (*(void (**)(void))(*v5 + 8 * v6))();
LABEL_11:
  v7 = (_QWORD *)a1[22];
  if (v7 == a1 + 19)
  {
    v8 = 4;
    v7 = a1 + 19;
  }
  else
  {
    if (!v7)
      goto LABEL_16;
    v8 = 5;
  }
  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_16:
  v9 = (_QWORD *)a1[18];
  if (v9 == a1 + 15)
  {
    v10 = 4;
    v9 = a1 + 15;
  }
  else
  {
    if (!v9)
      goto LABEL_21;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_21:
  v11 = (_QWORD *)a1[14];
  if (v11 == a1 + 11)
  {
    v12 = 4;
    v11 = a1 + 11;
  }
  else
  {
    if (!v11)
      goto LABEL_26;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_26:
  v13 = (_QWORD *)a1[10];
  if (v13 == a1 + 7)
  {
    v14 = 4;
    v13 = a1 + 7;
  }
  else
  {
    if (!v13)
      goto LABEL_31;
    v14 = 5;
  }
  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_31:
  v15 = (std::__shared_weak_count *)a1[6];
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

__n128 *sub_239BAE1FC(uint64_t a1, __n128 a2)
{
  __n128 *v2;
  __n128 *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 *v10;
  unint64_t *v11;
  unint64_t v12;
  char *v13;
  __n128 *v14;
  __n128 v15;
  __n128 *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;

  v2 = *(__n128 **)a1;
  v3 = *(__n128 **)(a1 + 8);
  v4 = ((uint64_t)v3 - *(_QWORD *)a1) >> 4;
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60)
    sub_2394189F8();
  v7 = *(_QWORD *)(a1 + 16) - (_QWORD)v2;
  if (v7 >> 3 > v5)
    v5 = v7 >> 3;
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF0)
    v5 = 0xFFFFFFFFFFFFFFFLL;
  if (v5 >> 60)
    sub_239418A80();
  v8 = 16 * v5;
  v9 = (char *)operator new(16 * v5);
  v10 = (__n128 *)&v9[16 * v4];
  *v10 = a2;
  if (a2.n128_u64[1])
  {
    v11 = (unint64_t *)(a2.n128_u64[1] + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    v2 = *(__n128 **)a1;
    v3 = *(__n128 **)(a1 + 8);
  }
  v13 = &v9[v8];
  v14 = v10 + 1;
  if (v3 == v2)
  {
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v14;
    *(_QWORD *)(a1 + 16) = v13;
  }
  else
  {
    do
    {
      v15 = v3[-1];
      --v3;
      v10[-1] = v15;
      --v10;
      v3->n128_u64[0] = 0;
      v3->n128_u64[1] = 0;
    }
    while (v3 != v2);
    v2 = *(__n128 **)a1;
    v16 = *(__n128 **)(a1 + 8);
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v14;
    *(_QWORD *)(a1 + 16) = v13;
    while (v16 != v2)
    {
      v17 = (std::__shared_weak_count *)v16[-1].n128_u64[1];
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      --v16;
    }
  }
  if (v2)
    operator delete(v2);
  return v14;
}

void sub_239BAE34C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  std::mutex *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  void **v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  _DWORD *v50;
  std::mutex *v51;
  _DWORD *v52;
  _DWORD *v53;
  char *v54;
  char *v55;
  char *v56;
  int *v57;
  char *v58;
  char *v59;
  int64_t v60;
  int64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _BYTE *v69;
  int *v70;
  unint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  int v77;
  char *v78;
  unint64_t v79;
  char *v80;
  int v81;
  uint64_t v82;
  _OWORD *v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  char *v87;
  char *v88;
  char *v89;
  _QWORD *v90;
  void **v91;
  std::__shared_weak_count *v92;
  unint64_t *p_shared_owners;
  unint64_t v94;
  char *v95;
  char *v96;
  _QWORD *v97;
  void **v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  _DWORD *v102;
  std::mutex *v103;
  _DWORD *v104;
  std::mutex *v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  uint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t *v118;
  unint64_t v119;
  const void *v120;
  int64_t v121;
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  int v137;
  _QWORD *v138;
  _QWORD *v139;
  _DWORD **v140;
  char *v141;
  unint64_t v142;
  void *__p[2];
  char v144;
  uint64_t *v145;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v146;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v147;
  int v148;
  const char *v149;
  int v150;
  const char *v151;
  uint64_t v152;
  std::__shared_weak_count *v153;
  uint64_t v154;
  void *v155;
  char *v156;
  char *v157;
  void *v158;
  char *v159;
  unint64_t v160;
  void *v161;
  _DWORD *v162;
  uint64_t v163;
  __int128 __dst;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  __int128 *p_dst;
  __int128 v167;
  const char *v168;
  uint64_t v169;
  _QWORD v170[3];
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  __int128 v176;
  uint64_t v177;
  char v178;
  _QWORD v179[3];
  char v180;
  _QWORD v181[3];
  char v182;
  __int128 v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  char v188[464];
  char v189;
  char v190[192];
  char v191;
  char v192[712];
  char v193;
  char v194[1744];
  char v195;
  char v196[584];
  char v197;
  _OWORD v198[4];
  int v199;
  char *v200;
  char *v201;
  char *v202;
  char v203;
  char v204;
  char v205[864];
  char v206;
  char v207[392];
  char v208;
  char v209[360];
  char v210;
  char v211[1032];
  char v212;
  int v213;
  char v214;
  _BYTE v215[24];
  _BYTE *v216;
  _BYTE v217[24];
  _BYTE *v218;
  _BYTE v219[24];
  _BYTE *v220;
  void *__src[2];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v222;
  void **v223;
  __int128 v224;
  const char *v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  __int128 v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  __int128 v242;
  uint64_t v243;
  char v244;
  uint64_t v245;
  uint64_t v246;
  _BYTE v247[464];
  char v248;
  __int128 v249[12];
  char v250;
  __int128 v251[44];
  char v252;
  __int128 v253[109];
  char v254;
  __int128 v255[36];
  char v256;
  _OWORD v257[4];
  int v258;
  _BYTE *v259;
  _BYTE *v260;
  char v261;
  char v262;
  uint64_t v263[108];
  char v264;
  __int128 v265[24];
  char v266;
  __int128 v267[22];
  char v268;
  _BYTE v269[1032];
  char v270;
  _QWORD v271[3];
  _QWORD *v272;
  _QWORD v273[3];
  _QWORD *v274;
  _QWORD v275[3];
  _QWORD *v276;
  unint64_t v277;
  _BYTE v278[24];
  _BYTE *v279;
  uint64_t v280;

  v1 = (_QWORD *)MEMORY[0x24BDAC7A8](a1);
  v280 = *MEMORY[0x24BDAC8D0];
  v2 = v1[4];
  sub_239B71020(__src);
  if (**((int **)__src[0] + 7) <= 3)
  {
    if (*((_BYTE *)__src[0] + 72))
    {
      *(_QWORD *)&__dst = __src;
      *((std::chrono::steady_clock::time_point *)&__dst + 1) = std::chrono::steady_clock::now();
      rep = std::chrono::system_clock::now().__d_.__rep_;
      LODWORD(p_dst) = 3;
      *(_QWORD *)&v167 = "unknown file";
      DWORD2(v167) = 2001;
      v168 = "unknown function";
      v3 = operator new();
      sub_2394988CC(v3);
      v4 = (_QWORD *)operator new();
      *v4 = &unk_250AF1978;
      v4[1] = 0;
      v4[2] = 0;
      v4[3] = v3;
      v169 = v3;
      v170[0] = v4;
      sub_239458500((_QWORD *)(v3 + 16), (uint64_t)"Processing task scheduled", 25);
      sub_239A47720((uint64_t)&__dst);
      sub_239A47720((uint64_t)&__dst);
      v5 = (std::__shared_weak_count *)v170[0];
      if (v170[0])
      {
        v6 = (unint64_t *)(v170[0] + 8);
        do
          v7 = __ldaxr(v6);
        while (__stlxr(v7 - 1, v6));
        if (!v7)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
    }
  }
  v8 = v1[5];
  v140 = (_DWORD **)(v1 + 5);
  std::mutex::lock((std::mutex *)(v8 + 8));
  if (*(_DWORD *)v8)
  {
    std::mutex::unlock((std::mutex *)(v8 + 8));
    sub_239B71020(__src);
    if (**((int **)__src[0] + 7) <= 5)
    {
      if (*((_BYTE *)__src[0] + 72))
      {
        *(_QWORD *)&__dst = __src;
        *((std::chrono::steady_clock::time_point *)&__dst + 1) = std::chrono::steady_clock::now();
        rep = std::chrono::system_clock::now().__d_.__rep_;
        LODWORD(p_dst) = 5;
        *(_QWORD *)&v167 = "unknown file";
        DWORD2(v167) = 2006;
        v170[0] = 0;
        v168 = "unknown function";
        v169 = 0;
        v9 = *v140;
        v10 = (std::mutex *)(*v140 + 2);
        std::mutex::lock(v10);
        LODWORD(v9) = *v9;
        std::mutex::unlock(v10);
        sub_239A002AC((uint64_t)&__dst, "State transition failure: %u -> %u", (_DWORD)v9, 1);
        sub_239A47720((uint64_t)&__dst);
        sub_239A47720((uint64_t)&__dst);
        v11 = (std::__shared_weak_count *)v170[0];
        if (v170[0])
        {
          v12 = (unint64_t *)(v170[0] + 8);
          do
            v13 = __ldaxr(v12);
          while (__stlxr(v13 - 1, v12));
          if (!v13)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
    }
  }
  else
  {
    *(_DWORD *)v8 = 1;
    std::mutex::unlock((std::mutex *)(v8 + 8));
  }
  if (v1[28] != v1[27])
  {
    v142 = 0;
    v138 = v1 + 19;
    v139 = v1 + 7;
    v134 = v1 + 11;
    v135 = v1 + 23;
    v133 = *MEMORY[0x24BEDB7F0];
    v131 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    v132 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
    v128 = MEMORY[0x24BEDB848] + 16;
    v129 = v2;
    v130 = v1;
    while (1)
    {
      v16 = (_QWORD *)v1[26];
      if (!v16)
        break;
      if (v16 == v135)
      {
        v276 = v275;
        (*(void (**)(_QWORD *, _QWORD *))(*v135 + 24))(v135, v275);
        v17 = v276;
      }
      else
      {
        v17 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v16 + 16))(v16);
        v276 = v17;
      }
      v18 = v142;
      v277 = v142;
      if (!v17)
        goto LABEL_30;
      if (v17 == v275)
      {
        v223 = __src;
        (*(void (**)(_QWORD *, void **))(v275[0] + 24))(v275, __src);
        v19 = v223;
      }
      else
      {
        v19 = (void **)(*(uint64_t (**)(_QWORD *))(*v17 + 16))(v17);
        v223 = v19;
      }
      *(_QWORD *)&v224 = v277;
      if (!v19)
        goto LABEL_35;
      if (v19 != __src)
      {
        v19 = (void **)(*((uint64_t (**)(void **))*v19 + 2))(v19);
        goto LABEL_35;
      }
      p_dst = &__dst;
      (*((void (**)(void **, __int128 *))__src[0] + 3))(__src, &__dst);
LABEL_36:
      *(_QWORD *)&v167 = v224;
      v279 = 0;
      v20 = operator new(0x38uLL);
      *v20 = &off_250AFAD58;
      v21 = (uint64_t)p_dst;
      if (!p_dst)
        goto LABEL_39;
      if (p_dst != &__dst)
      {
        v21 = (*(uint64_t (**)(void))(*(_QWORD *)p_dst + 16))();
LABEL_39:
        v20[4] = v21;
        goto LABEL_41;
      }
      v20[4] = v20 + 1;
      (*(void (**)(__int128 *))(__dst + 24))(&__dst);
LABEL_41:
      v22 = p_dst;
      v20[5] = v167;
      v279 = v20;
      if (v22 == &__dst)
      {
        v22 = &__dst;
        v23 = 4;
      }
      else
      {
        if (!v22)
          goto LABEL_46;
        v23 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v22 + 8 * v23))();
LABEL_46:
      v24 = v223;
      if (v223 == __src)
      {
        v24 = __src;
        v25 = 4;
      }
      else
      {
        if (!v223)
          goto LABEL_51;
        v25 = 5;
      }
      (*((void (**)(void))*v24 + v25))();
LABEL_51:
      v26 = v276;
      if (v276 == v275)
      {
        v26 = v275;
        v27 = 4;
        goto LABEL_55;
      }
      if (v276)
      {
        v27 = 5;
LABEL_55:
        (*(void (**)(void))(*v26 + 8 * v27))();
      }
      v28 = v1[27];
      v273[0] = &off_250AFADA0;
      v273[1] = v140;
      v274 = v273;
      v272 = v271;
      v271[0] = &off_250AFADA0;
      v271[1] = v140;
      sub_239B71020(__src);
      v29 = v28 + 152 * v142;
      if (**((int **)__src[0] + 7) <= 3 && *((_BYTE *)__src[0] + 72))
      {
        *(_QWORD *)&__dst = __src;
        *((std::chrono::steady_clock::time_point *)&__dst + 1) = std::chrono::steady_clock::now();
        rep = std::chrono::system_clock::now().__d_.__rep_;
        LODWORD(p_dst) = 3;
        *(_QWORD *)&v167 = "unknown file";
        DWORD2(v167) = 2050;
        v168 = "unknown function";
        v169 = 0;
        v170[0] = 0;
        v30 = (const char *)(v28 + 152 * v142);
        if (*(char *)(v29 + 23) < 0)
          v30 = *(const char **)v29;
        sub_239A002AC((uint64_t)&__dst, "Start handling request #%zu, identifier=%s, detail=%d", v142, v30, *(_DWORD *)(v28 + 152 * v142 + 24));
        sub_239A47720((uint64_t)&__dst);
        sub_239A47720((uint64_t)&__dst);
        v31 = (std::__shared_weak_count *)v170[0];
        if (v170[0])
        {
          v32 = (unint64_t *)(v170[0] + 8);
          do
            v33 = __ldaxr(v32);
          while (__stlxr(v33 - 1, v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
      }
      LOBYTE(__src[0]) = 0;
      LOBYTE(v223) = 0;
      LOBYTE(v224) = 0;
      v226 = 0;
      LOBYTE(v227) = 0;
      v229 = 0;
      LOBYTE(v230) = 0;
      v232 = 0;
      LOBYTE(v233) = 0;
      v235 = 0;
      LOBYTE(v236) = 0;
      v238 = 0;
      LOBYTE(v239) = 0;
      v241 = 0;
      LOBYTE(v242) = 0;
      v244 = 0;
      v248 = 0;
      LOBYTE(v249[0]) = 0;
      v250 = 0;
      LOBYTE(v251[0]) = 0;
      v252 = 0;
      LOBYTE(v253[0]) = 0;
      v254 = 0;
      LOBYTE(v255[0]) = 0;
      v256 = 0;
      LOBYTE(v257[0]) = 0;
      v262 = 0;
      LOBYTE(v263[0]) = 0;
      v264 = 0;
      LOBYTE(v265[0]) = 0;
      v266 = 0;
      LOBYTE(v267[0]) = 0;
      v268 = 0;
      v269[0] = 0;
      v270 = 0;
      v245 = 0;
      v246 = 0;
      v247[0] = 0;
      v34 = *(_QWORD *)(v2 + 8);
      v35 = *(_QWORD *)(v2 + 24);
      v220 = 0;
      v36 = operator new(0x20uLL);
      *v36 = &off_250AFADE8;
      v36[1] = v139;
      v36[2] = v142;
      v36[3] = v140;
      v220 = v36;
      v37 = v1[14];
      if (!v37)
      {
        v38 = v138;
        goto LABEL_69;
      }
      if ((_QWORD *)v37 != v134)
      {
        v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 16))(v37);
        v38 = v138;
LABEL_69:
        v218 = (_BYTE *)v37;
        goto LABEL_71;
      }
      v218 = v217;
      (*(void (**)(_QWORD *, _BYTE *))(*v134 + 24))(v134, v217);
      v38 = v138;
LABEL_71:
      v39 = v1[22];
      if (!v39)
        goto LABEL_74;
      if ((_QWORD *)v39 != v38)
      {
        v39 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v39 + 16))(v39);
LABEL_74:
        v216 = (_BYTE *)v39;
        goto LABEL_76;
      }
      v216 = v215;
      (*(void (**)(_QWORD *, _BYTE *))(*v38 + 24))(v38, v215);
LABEL_76:
      v40 = sub_239B31CF4(v29, 1, v34, v35, 0, (uint64_t)v271, (uint64_t)v219, (uint64_t)v217, (uint64_t)v215, (uint64_t)__src);
      v41 = v216;
      if (v216 == v215)
      {
        v41 = v215;
        v42 = 4;
      }
      else
      {
        if (!v216)
          goto LABEL_81;
        v42 = 5;
      }
      (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_81:
      v43 = v218;
      if (v218 == v217)
      {
        v43 = v217;
        v44 = 4;
      }
      else
      {
        if (!v218)
          goto LABEL_86;
        v44 = 5;
      }
      (*(void (**)(void))(*v43 + 8 * v44))();
LABEL_86:
      v45 = v220;
      if (v220 == v219)
      {
        v45 = v219;
        v46 = 4;
      }
      else
      {
        if (!v220)
          goto LABEL_91;
        v46 = 5;
      }
      (*(void (**)(void))(*v45 + 8 * v46))();
LABEL_91:
      sub_239B71020(&v145);
      if (*(int *)v145[7] <= 3)
      {
        if (*((_BYTE *)v145 + 72))
        {
          *(_QWORD *)&__dst = &v145;
          *((std::chrono::steady_clock::time_point *)&__dst + 1) = std::chrono::steady_clock::now();
          rep = std::chrono::system_clock::now().__d_.__rep_;
          LODWORD(p_dst) = 3;
          *(_QWORD *)&v167 = "unknown file";
          DWORD2(v167) = 2058;
          v168 = "unknown function";
          v169 = 0;
          v170[0] = 0;
          sub_239A002AC((uint64_t)&__dst, "Finish handling request %zu", v142);
          sub_239A47720((uint64_t)&__dst);
          sub_239A47720((uint64_t)&__dst);
          v47 = (std::__shared_weak_count *)v170[0];
          if (v170[0])
          {
            v48 = (unint64_t *)(v170[0] + 8);
            do
              v49 = __ldaxr(v48);
            while (__stlxr(v49 - 1, v48));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
        }
      }
      v50 = *v140;
      v51 = (std::mutex *)(*v140 + 2);
      std::mutex::lock(v51);
      LODWORD(v50) = *v50;
      std::mutex::unlock(v51);
      if ((_DWORD)v50 == 3)
        goto LABEL_291;
      v137 = v40;
      v162 = 0;
      v161 = 0;
      v163 = 0;
      sub_239BC9D74((uint64_t)v247, (uint64_t)v249, (uint64_t)v251, (uint64_t)v253, (uint64_t)v255, (uint64_t)v257, (uint64_t)v263, (uint64_t)v265, (uint64_t)v267, (uint64_t)v269, (char **)&v161);
      v159 = 0;
      v158 = 0;
      v160 = 0;
      v156 = 0;
      v155 = 0;
      v157 = 0;
      v52 = v161;
      v53 = v162;
      if (v161 == v162)
      {
        v55 = 0;
        goto LABEL_174;
      }
      v54 = 0;
      v141 = 0;
      v55 = 0;
      do
      {
        LODWORD(__dst) = 0;
        LODWORD(__dst) = *v52;
        if (!sub_2396F1DB0((int *)&__dst))
        {
          if (!sub_2396F1F28((int *)&__dst))
            goto LABEL_101;
          if (v55 < v141)
          {
            *(_DWORD *)v55 = __dst;
            v58 = v55 + 4;
LABEL_145:
            v156 = v58;
            v55 = v58;
            goto LABEL_101;
          }
          v66 = (v55 - v54) >> 2;
          v67 = v66 + 1;
          if ((unint64_t)(v66 + 1) >> 62)
LABEL_308:
            sub_2394189F8();
          if ((v141 - v54) >> 1 > v67)
            v67 = (v141 - v54) >> 1;
          if ((unint64_t)(v141 - v54) >= 0x7FFFFFFFFFFFFFFCLL)
            v68 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v68 = v67;
          if (v68)
          {
            if (v68 >> 62)
LABEL_307:
              sub_239418A80();
            v69 = operator new(4 * v68);
          }
          else
          {
            v69 = 0;
          }
          v78 = &v69[4 * v66];
          *(_DWORD *)v78 = __dst;
          v58 = v78 + 4;
          if (v55 != v54)
          {
            v79 = v55 - 4 - v54;
            if (v79 < 0xBC)
            {
              v80 = v55;
              goto LABEL_141;
            }
            if (&v69[v55 - v54 - 4 - (v79 & 0xFFFFFFFFFFFFFFFCLL)] > &v69[v55 - v54 - 4])
            {
              v80 = v55;
              goto LABEL_141;
            }
            if (&v55[-(v79 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v55 - 4)
            {
              v80 = v55;
              goto LABEL_141;
            }
            if ((unint64_t)(v54 - v69) < 0x20)
            {
              v80 = v55;
              goto LABEL_141;
            }
            v82 = (v79 >> 2) + 1;
            v80 = &v55[-4 * (v82 & 0x7FFFFFFFFFFFFFF8)];
            v83 = &v69[4 * v66 - 16];
            v84 = v55 - 16;
            v85 = v82 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v86 = *(_OWORD *)v84;
              *(v83 - 1) = *((_OWORD *)v84 - 1);
              *v83 = v86;
              v83 -= 2;
              v84 -= 32;
              v85 -= 8;
            }
            while (v85);
            v78 -= 4 * (v82 & 0x7FFFFFFFFFFFFFF8);
            if (v82 != (v82 & 0x7FFFFFFFFFFFFFF8))
            {
              do
              {
LABEL_141:
                v81 = *((_DWORD *)v80 - 1);
                v80 -= 4;
                *((_DWORD *)v78 - 1) = v81;
                v78 -= 4;
              }
              while (v80 != v54);
            }
          }
          v155 = v78;
          v156 = v58;
          v141 = &v69[4 * v68];
          v157 = v141;
          if (v54)
            operator delete(v54);
          v54 = v78;
          goto LABEL_145;
        }
        v56 = v159;
        if ((unint64_t)v159 >= v160)
        {
          v59 = (char *)v158;
          v60 = v159 - (_BYTE *)v158;
          v61 = (v159 - (_BYTE *)v158) >> 2;
          v62 = v61 + 1;
          if ((unint64_t)(v61 + 1) >> 62)
            goto LABEL_308;
          v63 = v160 - (_QWORD)v158;
          if ((uint64_t)(v160 - (_QWORD)v158) >> 1 > v62)
            v62 = v63 >> 1;
          if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL)
            v64 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v64 = v62;
          if (v64)
          {
            if (v64 >> 62)
              goto LABEL_307;
            v65 = operator new(4 * v64);
          }
          else
          {
            v65 = 0;
          }
          v70 = (int *)&v65[4 * v61];
          *v70 = __dst;
          v57 = v70 + 1;
          if (v56 != v59)
          {
            v71 = v56 - 4 - v59;
            if (v71 < 0x2C)
              goto LABEL_314;
            if ((unint64_t)(v56 - &v65[v60]) < 0x20)
              goto LABEL_314;
            v72 = (v71 >> 2) + 1;
            v73 = &v65[4 * v61 - 16];
            v74 = v56 - 16;
            v75 = v72 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v76 = *(_OWORD *)v74;
              *(v73 - 1) = *((_OWORD *)v74 - 1);
              *v73 = v76;
              v73 -= 2;
              v74 -= 32;
              v75 -= 8;
            }
            while (v75);
            v70 -= v72 & 0x7FFFFFFFFFFFFFF8;
            v56 -= 4 * (v72 & 0x7FFFFFFFFFFFFFF8);
            if (v72 != (v72 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_314:
              do
              {
                v77 = *((_DWORD *)v56 - 1);
                v56 -= 4;
                *--v70 = v77;
              }
              while (v56 != v59);
            }
          }
          v158 = v70;
          v160 = (unint64_t)&v65[4 * v64];
          if (v59)
            operator delete(v59);
        }
        else
        {
          *(_DWORD *)v159 = __dst;
          v57 = (int *)(v56 + 4);
        }
        v159 = (char *)v57;
LABEL_101:
        ++v52;
      }
      while (v52 != v53);
      v87 = (char *)v158;
      v88 = v159;
      v2 = v129;
      v1 = v130;
      if (v158 != v159)
      {
        sub_2394988CC((uint64_t)&__dst);
        v89 = v87;
        do
        {
          v90 = (_QWORD *)std::ostream::operator<<();
          sub_239458500(v90, (uint64_t)" ", 1);
          v89 += 4;
        }
        while (v89 != v88);
        sub_239B71020(&v154);
        if (**(int **)(v154 + 56) <= 5 && *(_BYTE *)(v154 + 72))
        {
          v145 = &v154;
          v146 = std::chrono::steady_clock::now().__d_.__rep_;
          v147 = std::chrono::system_clock::now().__d_.__rep_;
          v148 = 5;
          v149 = "unknown file";
          v150 = 2087;
          v151 = "unknown function";
          v152 = 0;
          v153 = 0;
          std::stringbuf::str();
          v91 = __p;
          if (v144 < 0)
            v91 = (void **)__p[0];
          sub_239A002AC((uint64_t)&v145, "Internal error codes (%zu): %s", (v88 - v87) >> 2, (const char *)v91);
          if (v144 < 0)
            operator delete(__p[0]);
          sub_239A47720((uint64_t)&v145);
          sub_239A47720((uint64_t)&v145);
          v92 = v153;
          if (v153)
          {
            p_shared_owners = (unint64_t *)&v153->__shared_owners_;
            do
              v94 = __ldaxr(p_shared_owners);
            while (__stlxr(v94 - 1, p_shared_owners));
            if (!v94)
            {
              ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
              std::__shared_weak_count::__release_weak(v92);
            }
          }
        }
        *(_QWORD *)&__dst = v133;
        *(_QWORD *)((char *)&__dst + *(_QWORD *)(v133 - 24)) = v132;
        rep = v131;
        p_dst = (__int128 *)(MEMORY[0x24BEDB848] + 16);
        if (SHIBYTE(v173) < 0)
          operator delete(v171);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](&v176);
        v55 = v156;
      }
LABEL_174:
      v95 = (char *)v155;
      if (v155 != v55)
      {
        sub_2394988CC((uint64_t)&__dst);
        v96 = v95;
        do
        {
          v97 = (_QWORD *)std::ostream::operator<<();
          sub_239458500(v97, (uint64_t)" ", 1);
          v96 += 4;
        }
        while (v96 != v55);
        sub_239B71020(&v154);
        if (**(int **)(v154 + 56) <= 4 && *(_BYTE *)(v154 + 72))
        {
          v145 = &v154;
          v146 = std::chrono::steady_clock::now().__d_.__rep_;
          v147 = std::chrono::system_clock::now().__d_.__rep_;
          v148 = 4;
          v149 = "unknown file";
          v150 = 2096;
          v151 = "unknown function";
          v152 = 0;
          v153 = 0;
          std::stringbuf::str();
          v98 = __p;
          if (v144 < 0)
            v98 = (void **)__p[0];
          sub_239A002AC((uint64_t)&v145, "Internal warning codes (%zu): %s", (v55 - v95) >> 2, (const char *)v98);
          if (v144 < 0)
            operator delete(__p[0]);
          sub_239A47720((uint64_t)&v145);
          sub_239A47720((uint64_t)&v145);
          v99 = v153;
          if (v153)
          {
            v100 = (unint64_t *)&v153->__shared_owners_;
            do
              v101 = __ldaxr(v100);
            while (__stlxr(v101 - 1, v100));
            if (!v101)
            {
              ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
              std::__shared_weak_count::__release_weak(v99);
            }
          }
        }
        *(_QWORD *)&__dst = v133;
        *(_QWORD *)((char *)&__dst + *(_QWORD *)(v133 - 24)) = v132;
        rep = v131;
        p_dst = (__int128 *)v128;
        if (SHIBYTE(v173) < 0)
          operator delete(v171);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](&v176);
      }
      if (v142 == -1 - 0x79435E50D79435E5 * ((uint64_t)(v1[28] - v1[27]) >> 3))
      {
        v102 = *v140;
        v103 = (std::mutex *)(*v140 + 2);
        std::mutex::lock(v103);
        if (*v102 == 1)
        {
          *v102 = 2;
          std::mutex::unlock(v103);
        }
        else
        {
          std::mutex::unlock(v103);
          sub_239B71020(&v145);
          if (*(int *)v145[7] <= 5)
          {
            if (*((_BYTE *)v145 + 72))
            {
              *(_QWORD *)&__dst = &v145;
              *((std::chrono::steady_clock::time_point *)&__dst + 1) = std::chrono::steady_clock::now();
              rep = std::chrono::system_clock::now().__d_.__rep_;
              LODWORD(p_dst) = 5;
              *(_QWORD *)&v167 = "unknown file";
              DWORD2(v167) = 2103;
              v168 = "unknown function";
              v169 = 0;
              v170[0] = 0;
              v104 = *v140;
              v105 = (std::mutex *)(*v140 + 2);
              std::mutex::lock(v105);
              LODWORD(v104) = *v104;
              std::mutex::unlock(v105);
              sub_239A002AC((uint64_t)&__dst, "State transition failure: %u -> %u", (_DWORD)v104, 2);
              sub_239A47720((uint64_t)&__dst);
              sub_239A47720((uint64_t)&__dst);
              v106 = (std::__shared_weak_count *)v170[0];
              if (v170[0])
              {
                v107 = (unint64_t *)(v170[0] + 8);
                do
                  v108 = __ldaxr(v107);
                while (__stlxr(v108 - 1, v107));
                if (!v108)
                {
                  ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
                  std::__shared_weak_count::__release_weak(v106);
                }
              }
            }
          }
        }
      }
      sub_239B71020(&v145);
      if (*(int *)v145[7] > 3)
        goto LABEL_315;
      if (!*((_BYTE *)v145 + 72))
        goto LABEL_315;
      *(_QWORD *)&__dst = &v145;
      *((std::chrono::steady_clock::time_point *)&__dst + 1) = std::chrono::steady_clock::now();
      rep = std::chrono::system_clock::now().__d_.__rep_;
      LODWORD(p_dst) = 3;
      *(_QWORD *)&v167 = "unknown file";
      DWORD2(v167) = 2107;
      v168 = "unknown function";
      v169 = 0;
      v170[0] = 0;
      v109 = operator new();
      sub_2394988CC(v109);
      v110 = (_QWORD *)operator new();
      *v110 = &unk_250AF1978;
      v110[1] = 0;
      v110[2] = 0;
      v110[3] = v109;
      v169 = v109;
      v170[0] = v110;
      sub_239458500((_QWORD *)(v109 + 16), (uint64_t)"Send output to caller", 21);
      sub_239A47720((uint64_t)&__dst);
      sub_239A47720((uint64_t)&__dst);
      v111 = (std::__shared_weak_count *)v170[0];
      if (!v170[0])
        goto LABEL_315;
      v112 = (unint64_t *)(v170[0] + 8);
      do
        v113 = __ldaxr(v112);
      while (__stlxr(v113 - 1, v112));
      if (!v113)
      {
        ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
        std::__shared_weak_count::__release_weak(v111);
        if (v1[18])
        {
LABEL_208:
          switch(v137)
          {
            case 2:
              if (v158 == v159)
              {
                sub_239B71020(&v145);
                if (*(int *)v145[7] <= 5)
                {
                  if (*((_BYTE *)v145 + 72))
                  {
                    *(_QWORD *)&__dst = &v145;
                    *((std::chrono::steady_clock::time_point *)&__dst + 1) = std::chrono::steady_clock::now();
                    rep = std::chrono::system_clock::now().__d_.__rep_;
                    LODWORD(p_dst) = 5;
                    *(_QWORD *)&v167 = "unknown file";
                    DWORD2(v167) = 2139;
                    v168 = "unknown function";
                    v169 = 0;
                    v170[0] = 0;
                    sub_239BACEE0((uint64_t)&__dst);
                    sub_239A47720((uint64_t)&__dst);
                    sub_239A47720((uint64_t)&__dst);
                    v115 = (std::__shared_weak_count *)v170[0];
                    if (v170[0])
                    {
                      v116 = (unint64_t *)(v170[0] + 8);
                      do
                        v117 = __ldaxr(v116);
                      while (__stlxr(v117 - 1, v116));
                      if (!v117)
                      {
                        ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
                        std::__shared_weak_count::__release_weak(v115);
                      }
                    }
                  }
                }
                goto LABEL_227;
              }
              v136 = sub_239BC9B5C((int *)v158, (int *)v159);
              break;
            case 3:
LABEL_227:
              v114 = 0x1FFFFFFFFLL;
              goto LABEL_228;
            case 4:
              v114 = 0x1FFFFFFF4;
              goto LABEL_228;
            case 5:
              v114 = 0x1FFFFFFEDLL;
              goto LABEL_228;
            case 6:
              v114 = 0x1FFFFFFECLL;
              goto LABEL_228;
            case 7:
              v114 = 0x1FFFFFFE6;
              goto LABEL_228;
            case 8:
              v114 = 0x1FFFFFFE0;
LABEL_228:
              v136 = v114;
              break;
            default:
              v136 = v136 & 0xFFFFFF00;
              break;
          }
          LOBYTE(__dst) = 0;
          LOBYTE(p_dst) = 0;
          if ((_BYTE)v223)
          {
            if (SHIBYTE(v222) < 0)
            {
              sub_23941A7F8(&__dst, __src[0], (unint64_t)__src[1]);
            }
            else
            {
              __dst = *(_OWORD *)__src;
              rep = v222;
            }
            LOBYTE(p_dst) = 1;
          }
          LOBYTE(v167) = 0;
          LOBYTE(v169) = 0;
          if (v226)
          {
            if (SHIBYTE(v225) < 0)
            {
              sub_23941A7F8(&v167, (void *)v224, *((unint64_t *)&v224 + 1));
            }
            else
            {
              v167 = v224;
              v168 = v225;
            }
            LOBYTE(v169) = 1;
          }
          LOBYTE(v170[0]) = 0;
          LOBYTE(v171) = 0;
          if (v229)
          {
            memset(v170, 0, sizeof(v170));
            sub_239A49624(v170, v227, v228, 0xAAAAAAAAAAAAAAABLL * ((v228 - v227) >> 3));
            LOBYTE(v171) = 1;
          }
          LOBYTE(v172) = 0;
          v175 = 0;
          if (v232)
          {
            v172 = 0;
            v173 = 0;
            v174 = 0;
            sub_239A49624(&v172, v230, v231, 0xAAAAAAAAAAAAAAABLL * ((v231 - v230) >> 3));
            v175 = 1;
          }
          LOBYTE(v176) = 0;
          v178 = 0;
          if (v235)
          {
            if (SHIBYTE(v234) < 0)
            {
              sub_23941A7F8(&v176, (void *)v233, *((unint64_t *)&v233 + 1));
            }
            else
            {
              v176 = v233;
              v177 = v234;
            }
            v178 = 1;
          }
          LOBYTE(v179[0]) = 0;
          v180 = 0;
          if (v238)
          {
            memset(v179, 0, sizeof(v179));
            sub_239A49624(v179, v236, v237, 0xAAAAAAAAAAAAAAABLL * ((v237 - v236) >> 3));
            v180 = 1;
          }
          LOBYTE(v181[0]) = 0;
          v182 = 0;
          if (v241)
          {
            memset(v181, 0, sizeof(v181));
            sub_239A49624(v181, v239, v240, 0xAAAAAAAAAAAAAAABLL * ((v240 - v239) >> 3));
            v182 = 1;
          }
          LOBYTE(v183) = 0;
          v185 = 0;
          if (v244)
          {
            if (SHIBYTE(v243) < 0)
            {
              sub_23941A7F8(&v183, (void *)v242, *((unint64_t *)&v242 + 1));
            }
            else
            {
              v183 = v242;
              v184 = v243;
            }
            v185 = 1;
          }
          v186 = v245;
          v187 = v246;
          if (v246)
          {
            v118 = (unint64_t *)(v246 + 8);
            do
              v119 = __ldxr(v118);
            while (__stxr(v119 + 1, v118));
          }
          v188[0] = 0;
          v189 = 0;
          if (v248)
          {
            sub_239A5E664((uint64_t)v188, (uint64_t)v247);
            v189 = 1;
          }
          v190[0] = 0;
          v191 = 0;
          if (v250)
          {
            sub_239B42898((uint64_t)v190, v249);
            v191 = 1;
          }
          v192[0] = 0;
          v193 = 0;
          if (v252)
          {
            sub_239A5EC2C((uint64_t)v192, v251);
            v193 = 1;
          }
          v194[0] = 0;
          v195 = 0;
          if (v254)
          {
            sub_239A5F6A8((uint64_t)v194, v253);
            v195 = 1;
          }
          v196[0] = 0;
          v197 = 0;
          if (v256)
          {
            sub_239A5FE90((uint64_t)v196, v255);
            v197 = 1;
          }
          LOBYTE(v198[0]) = 0;
          v204 = 0;
          if (v262)
          {
            v198[0] = v257[0];
            *(_OWORD *)((char *)v198 + 12) = *(_OWORD *)((char *)v257 + 12);
            v198[2] = v257[2];
            v198[3] = v257[3];
            v199 = v258;
            v201 = 0;
            v202 = 0;
            v200 = 0;
            v120 = v259;
            v121 = v260 - v259;
            if (v260 != v259)
            {
              if (v121 < 0)
                sub_2394189F8();
              v200 = (char *)operator new(v260 - v259);
              v201 = v200;
              v122 = &v200[4 * (v121 >> 2)];
              v202 = v122;
              memcpy(v200, v120, v121);
              v201 = v122;
            }
            v203 = v261;
            v204 = 1;
          }
          v205[0] = 0;
          v206 = 0;
          if (v264)
          {
            sub_239A6064C((uint64_t)v205, v263);
            v206 = 1;
          }
          v207[0] = 0;
          v208 = 0;
          if (v266)
          {
            sub_239A60CB0((uint64_t)v207, v265);
            v208 = 1;
          }
          v209[0] = 0;
          v210 = 0;
          if (v268)
          {
            sub_239A60E98((uint64_t)v209, v267);
            v210 = 1;
          }
          v211[0] = 0;
          v212 = 0;
          if (v270)
          {
            sub_239B40018((uint64_t)v211, (uint64_t)v269);
            v212 = 1;
          }
          v213 = v136;
          v214 = BYTE4(v136);
          v145 = (uint64_t *)v142;
          v123 = v1[18];
          if (!v123)
            sub_2394172E0();
          (*(void (**)(uint64_t, __int128 *, uint64_t **))(*(_QWORD *)v123 + 48))(v123, &__dst, &v145);
          sub_239BACFF4((uint64_t)&__dst);
        }
      }
      else
      {
LABEL_315:
        if (v1[18])
          goto LABEL_208;
      }
      if (v155)
        operator delete(v155);
      if (v158)
        operator delete(v158);
      if (v161)
      {
        v162 = v161;
        operator delete(v161);
      }
LABEL_291:
      sub_239BACFF4((uint64_t)__src);
      v124 = v272;
      if (v272 == v271)
      {
        v124 = v271;
        v125 = 4;
LABEL_295:
        (*(void (**)(void))(*v124 + 8 * v125))();
      }
      else if (v272)
      {
        v125 = 5;
        goto LABEL_295;
      }
      v126 = v274;
      if (v274 == v273)
      {
        v126 = v273;
        v127 = 4;
LABEL_300:
        (*(void (**)(void))(*v126 + 8 * v127))();
      }
      else if (v274)
      {
        v127 = 5;
        goto LABEL_300;
      }
      if (!v279)
        sub_2394172E0();
      (*(void (**)(_BYTE *))(*(_QWORD *)v279 + 48))(v279);
      v14 = v279;
      if (v279 == v278)
      {
        v14 = v278;
        v15 = 4;
        goto LABEL_20;
      }
      if (v279)
      {
        v15 = 5;
LABEL_20:
        (*(void (**)(void))(*v14 + 8 * v15))();
      }
      if (++v142 >= 0x86BCA1AF286BCA1BLL * ((uint64_t)(v1[28] - v1[27]) >> 3))
        return;
    }
    v18 = v142;
    v276 = 0;
    v277 = v142;
LABEL_30:
    v19 = 0;
    v223 = 0;
    *(_QWORD *)&v224 = v18;
LABEL_35:
    p_dst = (__int128 *)v19;
    goto LABEL_36;
  }
}

void sub_239BAFF04(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

void sub_239BB0574()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;

  v0 = (unint64_t *)STACK[0x1D58];
  if ((unint64_t *)STACK[0x1D58] == &STACK[0x1D40])
  {
    v1 = 4;
    v0 = &STACK[0x1D40];
  }
  else
  {
    if (!v0)
      goto LABEL_6;
    v1 = 5;
  }
  (*(void (**)(void))(*v0 + 8 * v1))();
LABEL_6:
  v2 = (unint64_t *)STACK[0x1D78];
  if ((unint64_t *)STACK[0x1D78] == &STACK[0x1D60])
  {
    v3 = 4;
    v2 = &STACK[0x1D60];
  }
  else
  {
    if (!v2)
      goto LABEL_11;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_11:
  v4 = (unint64_t *)STACK[0x1D98];
  if ((unint64_t *)STACK[0x1D98] == &STACK[0x1D80])
  {
    v5 = 4;
    v4 = &STACK[0x1D80];
  }
  else
  {
    if (!v4)
      goto LABEL_16;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_16:
  JUMPOUT(0x239BB066CLL);
}

void sub_239BB0624()
{
  JUMPOUT(0x239BB066CLL);
}

void sub_239BB0638(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = (void *)STACK[0x258];
  if (STACK[0x258])
  {
    STACK[0x260] = (unint64_t)v3;
    operator delete(v3);
    v4 = (void *)STACK[0x270];
    if (!STACK[0x270])
    {
LABEL_3:
      v5 = (void *)STACK[0x288];
      if (!STACK[0x288])
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else
  {
    v4 = (void *)STACK[0x270];
    if (!STACK[0x270])
      goto LABEL_3;
  }
  STACK[0x278] = (unint64_t)v4;
  operator delete(v4);
  v5 = (void *)STACK[0x288];
  if (!STACK[0x288])
  {
LABEL_5:
    sub_239BACFF4((uint64_t)&STACK[0x1DA0]);
    v6 = *(_QWORD **)(v1 - 216);
    if (v6 == (_QWORD *)(v1 - 240))
    {
      v7 = 4;
      v6 = (_QWORD *)(v1 - 240);
    }
    else
    {
      if (!v6)
        goto LABEL_10;
      v7 = 5;
    }
    (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_10:
    v8 = *(_QWORD **)(v1 - 184);
    if (v8 == (_QWORD *)(v1 - 208))
    {
      v9 = 4;
      v8 = (_QWORD *)(v1 - 208);
    }
    else
    {
      if (!v8)
        goto LABEL_15;
      v9 = 5;
    }
    (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_15:
    sub_239416834((_QWORD *)(v1 - 136));
    _Unwind_Resume(a1);
  }
LABEL_4:
  STACK[0x290] = (unint64_t)v5;
  operator delete(v5);
  goto LABEL_5;
}

uint64_t sub_239BB070C(uint64_t a1)
{
  void *v2;
  void *v3;

  if (!*(_BYTE *)(a1 + 392))
    return a1;
  if ((*(char *)(a1 + 327) & 0x80000000) == 0)
  {
    v2 = *(void **)(a1 + 280);
    if (!v2)
      goto LABEL_5;
    goto LABEL_4;
  }
  operator delete(*(void **)(a1 + 304));
  v2 = *(void **)(a1 + 280);
  if (v2)
  {
LABEL_4:
    *(_QWORD *)(a1 + 288) = v2;
    operator delete(v2);
  }
LABEL_5:
  v3 = *(void **)(a1 + 160);
  if (v3)
  {
    *(_QWORD *)(a1 + 168) = v3;
    operator delete(v3);
  }
  return a1;
}

uint64_t sub_239BB0770(uint64_t a1)
{
  void *v2;

  if (*(_BYTE *)(a1 + 192))
  {
    v2 = *(void **)(a1 + 104);
    if (v2)
    {
      *(_QWORD *)(a1 + 112) = v2;
      operator delete(v2);
    }
    sub_239421038(a1 + 40, *(_QWORD **)(a1 + 48));
  }
  return a1;
}

void sub_239BB07B8()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239BB07CC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AFADE8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239BB080C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AFADE8;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_239BB0834(uint64_t a1, int *a2, uint64_t a3, int *a4, uint64_t a5)
{
  int v8;
  int v9;
  uint64_t v10;
  std::mutex *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;

  if (*(_QWORD *)(*(_QWORD *)(a1 + 8) + 24))
  {
    v8 = *a2;
    v9 = *a4;
    v10 = **(_QWORD **)(a1 + 24);
    v11 = (std::mutex *)(v10 + 8);
    std::mutex::lock((std::mutex *)(v10 + 8));
    LODWORD(v10) = *(_DWORD *)v10;
    std::mutex::unlock(v11);
    if ((_DWORD)v10 != 3)
    {
      v12 = *(_QWORD *)(a1 + 8);
      v13 = *(_QWORD *)(a1 + 16);
      v17 = v8;
      v16 = v9;
      v15 = v13;
      v14 = *(_QWORD *)(v12 + 24);
      if (!v14)
        sub_2394172E0();
      (*(void (**)(uint64_t, int *, uint64_t, int *, uint64_t, uint64_t *))(*(_QWORD *)v14 + 48))(v14, &v17, a3, &v16, a5, &v15);
    }
  }
}

void sub_239BB08F4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BB0908(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AFADA0;
  result[1] = v3;
  return result;
}

uint64_t sub_239BB093C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AFADA0;
  a2[1] = v2;
  return result;
}

BOOL sub_239BB0958(uint64_t a1)
{
  uint64_t v1;
  std::mutex *v2;
  _BOOL8 v3;

  v1 = **(_QWORD **)(a1 + 8);
  v2 = (std::mutex *)(v1 + 8);
  std::mutex::lock((std::mutex *)(v1 + 8));
  v3 = *(_DWORD *)v1 == 3;
  std::mutex::unlock(v2);
  return v3;
}

_QWORD *sub_239BB099C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AFAD58;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239BB09F8(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AFAD58;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239BB0A64(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x38uLL);
  *v2 = &off_250AFAD58;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239BB0AE0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239BB0AF4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AFAD58;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239BB0B6C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239BB0BA0(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

uint64_t sub_239BB0BF0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 40);
    return (*(uint64_t (**)(uint64_t, uint64_t *))(*(_QWORD *)result + 48))(result, &v3);
  }
  return result;
}

void ***sub_239BB0C2C(void ***a1)
{
  void **v2;
  void *v3;
  uint64_t v4;
  void *v5;

  if (!*((_BYTE *)a1 + 8))
  {
    v2 = *a1;
    v3 = **a1;
    if (v3)
    {
      v4 = (uint64_t)v2[1];
      v5 = **a1;
      if ((void *)v4 != v3)
      {
        do
        {
          v4 -= 152;
          sub_239A5C550(v4);
        }
        while ((void *)v4 != v3);
        v5 = **a1;
      }
      v2[1] = v3;
      operator delete(v5);
    }
  }
  return a1;
}

void sub_239BB0C9C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFAD20;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239BB0CAC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AFAD20;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239BB0CDC(uint64_t a1)
{
  std::mutex::~mutex((std::mutex *)(a1 + 32));
}

void sub_239BB0CE8(uint64_t a1)
{
  _QWORD *v2;
  __n128 *v3;
  __n128 *v4;
  __n128 *v5;
  _DWORD *v6;
  std::mutex *v7;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  NSObject *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void *v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  __n128 *v22;
  __n128 *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  void *v27;
  __n128 *v28;
  unint64_t v29;
  _QWORD block[5];
  void *__p;
  char *v32;
  _BYTE v33[24];
  _BYTE *v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD **)(a1 + 32);
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v3 = (__n128 *)v2[21];
  v4 = (__n128 *)v2[22];
  if (v3 != v4)
  {
    v5 = 0;
    do
    {
      v6 = (_DWORD *)v3->n128_u64[0];
      v7 = (std::mutex *)(v3->n128_u64[0] + 8);
      std::mutex::lock(v7);
      if (*v6 > 3u || *v6 == 2)
      {
        std::mutex::unlock(v7);
      }
      else
      {
        *v6 = 3;
        std::mutex::unlock(v7);
        if ((unint64_t)v5 >= v29)
        {
          v5 = sub_239BAE1FC((uint64_t)&v27, *v3);
        }
        else
        {
          v5->n128_u64[0] = v3->n128_u64[0];
          v9 = v3->n128_u64[1];
          v5->n128_u64[1] = v9;
          if (v9)
          {
            v10 = (unint64_t *)(v9 + 8);
            do
              v11 = __ldxr(v10);
            while (__stxr(v11 + 1, v10));
          }
          ++v5;
        }
        v28 = v5;
      }
      ++v3;
    }
    while (v3 != v4);
  }
  v12 = v2[18];
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 1174405120;
  block[2] = sub_239BB1074;
  block[3] = &unk_250AF7D28;
  block[4] = v2;
  sub_239BB1380(&__p, (uint64_t)&v27);
  v13 = v33;
  v14 = *(_QWORD *)(a1 + 64);
  if (!v14)
    goto LABEL_20;
  if (v14 != a1 + 40)
  {
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
LABEL_20:
    v34 = (_BYTE *)v14;
    goto LABEL_22;
  }
  v34 = v33;
  (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v14 + 24))(v14, v33);
LABEL_22:
  dispatch_async(v12, block);
  if (v34 == v33)
  {
    v15 = 4;
  }
  else
  {
    if (!v34)
      goto LABEL_27;
    v15 = 5;
    v13 = v34;
  }
  (*(void (**)(_QWORD *))(*v13 + 8 * v15))(v13);
LABEL_27:
  v16 = (char *)__p;
  if (__p)
  {
    v17 = v32;
    v18 = __p;
    if (v32 != __p)
    {
      do
      {
        v19 = (std::__shared_weak_count *)*((_QWORD *)v17 - 1);
        if (v19)
        {
          p_shared_owners = (unint64_t *)&v19->__shared_owners_;
          do
            v21 = __ldaxr(p_shared_owners);
          while (__stlxr(v21 - 1, p_shared_owners));
          if (!v21)
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }
        v17 -= 16;
      }
      while (v17 != v16);
      v18 = __p;
    }
    v32 = v16;
    operator delete(v18);
  }
  v22 = (__n128 *)v27;
  if (v27)
  {
    v23 = v28;
    if (v28 != v27)
    {
      do
      {
        v24 = (std::__shared_weak_count *)v23[-1].n128_u64[1];
        if (v24)
        {
          v25 = (unint64_t *)&v24->__shared_owners_;
          do
            v26 = __ldaxr(v25);
          while (__stlxr(v26 - 1, v25));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
        --v23;
      }
      while (v23 != v22);
      v22 = (__n128 *)v27;
    }
    operator delete(v22);
  }
}

void sub_239BB0FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void **v9;

  sub_2394631DC(v9);
  sub_2394631DC(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239BB0FD4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a2 + 64);
  if (result)
  {
    if (result == a2 + 40)
    {
      *(_QWORD *)(a1 + 64) = a1 + 40;
      return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 64) + 24))(*(_QWORD *)(a2 + 64), a1 + 40);
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
      *(_QWORD *)(a1 + 64) = result;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 64) = 0;
  }
  return result;
}

_QWORD *sub_239BB1040(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 40);
  result = *(_QWORD **)(a1 + 64);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

uint64_t sub_239BB1074(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _DWORD **v6;
  _DWORD **i;
  _DWORD *v8;
  std::mutex *v9;
  _DWORD *v10;
  std::mutex *v11;
  _DWORD *v12;
  std::mutex *v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t result;
  uint64_t *v24;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v26;
  int v27;
  const char *v28;
  int v29;
  const char *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  uint64_t v33;

  v2 = a1[4];
  sub_239B71020(&v33);
  if (**(int **)(v33 + 56) <= 3)
  {
    if (*(_BYTE *)(v33 + 72))
    {
      v24 = &v33;
      rep = std::chrono::steady_clock::now().__d_.__rep_;
      v26 = std::chrono::system_clock::now().__d_.__rep_;
      v27 = 3;
      v28 = "unknown file";
      v29 = 2184;
      v31 = 0;
      v32 = 0;
      v30 = "unknown function";
      sub_239B710F0((uint64_t)&v24, "Tasks have been canceled");
      sub_239A47720((uint64_t)&v24);
      sub_239A47720((uint64_t)&v24);
      v3 = v32;
      if (v32)
      {
        p_shared_owners = (unint64_t *)&v32->__shared_owners_;
        do
          v5 = __ldaxr(p_shared_owners);
        while (__stlxr(v5 - 1, p_shared_owners));
        if (!v5)
        {
          ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
          std::__shared_weak_count::__release_weak(v3);
        }
      }
    }
  }
  v6 = (_DWORD **)a1[5];
  for (i = (_DWORD **)a1[6]; v6 != i; v6 += 2)
  {
    v8 = *v6;
    v9 = (std::mutex *)(*v6 + 2);
    std::mutex::lock(v9);
    if (*v8 == 3)
    {
      *v8 = 4;
      std::mutex::unlock(v9);
    }
    else
    {
      std::mutex::unlock(v9);
      v10 = *v6;
      v11 = (std::mutex *)(*v6 + 2);
      std::mutex::lock(v11);
      LODWORD(v10) = *v10;
      std::mutex::unlock(v11);
      if ((_DWORD)v10 != 4)
      {
        sub_239B71020(&v33);
        if (**(int **)(v33 + 56) <= 5)
        {
          if (*(_BYTE *)(v33 + 72))
          {
            v24 = &v33;
            rep = std::chrono::steady_clock::now().__d_.__rep_;
            v26 = std::chrono::system_clock::now().__d_.__rep_;
            v27 = 5;
            v28 = "unknown file";
            v29 = 2191;
            v30 = "unknown function";
            v31 = 0;
            v32 = 0;
            v12 = *v6;
            v13 = (std::mutex *)(*v6 + 2);
            std::mutex::lock(v13);
            LODWORD(v12) = *v12;
            std::mutex::unlock(v13);
            sub_239A002AC((uint64_t)&v24, "State transition failure: %u -> %u", (_DWORD)v12, 4);
            sub_239A47720((uint64_t)&v24);
            sub_239A47720((uint64_t)&v24);
            v14 = v32;
            if (v32)
            {
              v15 = (unint64_t *)&v32->__shared_owners_;
              do
                v16 = __ldaxr(v15);
              while (__stlxr(v16 - 1, v15));
              if (!v16)
              {
                ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
                std::__shared_weak_count::__release_weak(v14);
              }
            }
          }
        }
      }
    }
  }
  v17 = *(_QWORD *)(v2 + 24);
  if (v17)
  {
    v18 = *(_QWORD **)(v17 + 176);
    if (v18)
    {
      atomic_store(1u, (unsigned __int8 *)(v18[1] + 1056));
      (*(void (**)(_QWORD *))(*v18 + 24))(v18);
      v19 = *(_QWORD *)(v2 + 24);
      v20 = *(std::__shared_weak_count **)(v19 + 184);
      *(_QWORD *)(v19 + 176) = 0;
      *(_QWORD *)(v19 + 184) = 0;
      if (v20)
      {
        v21 = (unint64_t *)&v20->__shared_owners_;
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
    }
  }
  result = a1[11];
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

void sub_239BB1364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_239A478B4((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239BB1380(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v3 = *(_QWORD **)a2;
  v4 = *(_QWORD **)(a2 + 8);
  v5 = (uint64_t)v4 - *(_QWORD *)a2;
  if (v4 != *(_QWORD **)a2)
  {
    if (v5 < 0)
      sub_2394189F8();
    v6 = operator new((size_t)v4 - *(_QWORD *)a2);
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[2 * (v5 >> 4)];
    do
    {
      v7 = v3[1];
      *v6 = *v3;
      v6[1] = v7;
      if (v7)
      {
        v8 = (unint64_t *)(v7 + 8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 1, v8));
      }
      v3 += 2;
      v6 += 2;
    }
    while (v3 != v4);
    a1[1] = v6;
  }
  return a1;
}

void sub_239BB1424(_Unwind_Exception *exception_object)
{
  void **v1;
  char *v3;
  char *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  v3 = (char *)*v1;
  if (*v1)
  {
    v4 = (char *)v1[1];
    v5 = *v1;
    if (v4 != v3)
    {
      do
      {
        v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 16;
      }
      while (v4 != v3);
      v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239BB14A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  sub_239BB1380((_QWORD *)(a1 + 40), a2 + 40);
  result = *(_QWORD *)(a2 + 88);
  if (!result)
    goto LABEL_4;
  if (result != a2 + 64)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
LABEL_4:
    *(_QWORD *)(a1 + 88) = result;
    return result;
  }
  *(_QWORD *)(a1 + 88) = a1 + 64;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 88) + 24))(*(_QWORD *)(a2 + 88));
}

void sub_239BB1518(_Unwind_Exception *a1)
{
  void **v1;

  sub_2394631DC(v1);
  _Unwind_Resume(a1);
}

void sub_239BB152C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = a1 + 8;
  v3 = (_QWORD *)a1[11];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
  }
  else
  {
    if (!v3)
      goto LABEL_6;
    v4 = 5;
  }
  (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_6:
  v5 = a1[5];
  if (v5)
  {
    v6 = a1[6];
    v7 = (void *)a1[5];
    if (v6 != v5)
    {
      do
      {
        v8 = *(std::__shared_weak_count **)(v6 - 8);
        if (v8)
        {
          p_shared_owners = (unint64_t *)&v8->__shared_owners_;
          do
            v10 = __ldaxr(p_shared_owners);
          while (__stlxr(v10 - 1, p_shared_owners));
          if (!v10)
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
        }
        v6 -= 16;
      }
      while (v6 != v5);
      v7 = (void *)a1[5];
    }
    a1[6] = v5;
    operator delete(v7);
  }
}

uint64_t sub_239BB15FC(uint64_t a1)
{
  void *v2;
  void *v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char v7;
  unsigned __int8 v8;
  char v9;
  char v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void *v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  std::__shared_weak_count *v26;
  void *__p;
  char *v28;

  v2 = (void *)MEMORY[0x23B83EC40]();
  objc_msgSend(MEMORY[0x24BDD1760], "processInfo");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "physicalMemory");

  objc_autoreleasePoolPop(v2);
  if (v4 >> 30 < 3)
  {
    v14 = 0x100000000;
    v15 = 4294967040;
    v16 = 231;
  }
  else
  {
    sub_2397A98A4(&__p);
    v5 = *(_QWORD **)(a1 + 40);
    v6 = *(_QWORD **)(a1 + 48);
    if (v5 == v6)
    {
      v9 = 0;
      v8 = 0;
      v7 = 0;
    }
    else
    {
      v7 = 0;
      v8 = 0;
      v9 = 0;
      do
      {
        if (*v5 < (unint64_t)((v28 - (_BYTE *)__p) >> 4))
        {
          sub_23946D5E0(&v25, (uint64_t)__p + 16 * *v5);
          v10 = sub_2397A9524((uint64_t)&v25);
          sub_2397A95E0((uint64_t)&v25);
          v11 = v26;
          if (v26)
          {
            p_shared_owners = (unint64_t *)&v26->__shared_owners_;
            do
              v13 = __ldaxr(p_shared_owners);
            while (__stlxr(v13 - 1, p_shared_owners));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v8 |= v10;
          v9 = 1;
          v7 = 1;
        }
        ++v5;
      }
      while (v5 != v6);
    }
    v17 = (char *)__p;
    if (__p)
    {
      v18 = v28;
      v19 = __p;
      if (v28 != __p)
      {
        do
        {
          v20 = (std::__shared_weak_count *)*((_QWORD *)v18 - 1);
          if (v20)
          {
            v21 = (unint64_t *)&v20->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          v18 -= 16;
        }
        while (v18 != v17);
        v19 = __p;
      }
      v28 = v17;
      operator delete(v19);
    }
    v23 = 234;
    if ((v8 & 1) != 0)
      v23 = 0;
    if ((v9 & 1) == 0)
      v23 = 235;
    if ((v7 & 1) == 0)
      v23 = 232;
    if (((v7 & v9) & v8 & 1) != 0)
      v14 = 0;
    else
      v14 = 0x100000000;
    if (((v7 & v9) & v8 & 1) != 0)
      v16 = 0;
    else
      v16 = v23;
    if (((v7 & v9) & v8 & 1) != 0)
      v15 = 0;
    else
      v15 = 4294967040;
  }
  return v14 | v16 | v15;
}

void sub_239BB17F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_239BB1800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, char *__p, char *a13)
{
  unint64_t *p_shared_owners;
  unint64_t v15;
  char *v16;
  char *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  if (!__p)
    _Unwind_Resume(exception_object);
  v16 = a13;
  v17 = __p;
  if (a13 != __p)
  {
    do
    {
      v18 = (std::__shared_weak_count *)*((_QWORD *)v16 - 1);
      if (v18)
      {
        v19 = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldaxr(v19);
        while (__stlxr(v20 - 1, v19));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      v16 -= 16;
    }
    while (v16 != __p);
    v17 = __p;
  }
  operator delete(v17);
  _Unwind_Resume(exception_object);
}

void sub_239BB18C8(uint64_t *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void **v4;
  void **v5;
  void **v6;
  void **v7;
  void **v8;
  void **v9;
  void **v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void *v16;
  void **v17;
  void **v18;
  void *v19;
  void **v20;
  void **v21;
  void *v22;
  void **v23;
  void **v24;
  void *v25;
  void **v26;
  void **v27;
  void *v28;
  void **v29;
  void **v30;
  void *v31;
  void **v32;
  void **v33;
  void *v34;
  void **v35;
  void **v36;
  void *v37;
  void **v38;
  void **v39;
  void *v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _OWORD *v45;
  void **v46;
  void **v47;
  void *v48;
  _OWORD *v49;
  void **v50;
  void **v51;
  void *v52;
  void **v53;
  void **v54;
  void *v55;
  _OWORD *v56;
  void **v57;
  void **v58;
  void *v59;
  void **v60;
  void **v61;
  void *v62;
  _OWORD *v63;
  void **v64;
  void **v65;
  void *v66;
  _OWORD *v67;
  void **v68;
  void **v69;
  void *v70;
  void **v71;
  void **v72;
  void *v73;
  _OWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void **v78;
  void **v79;
  void *v80;
  _OWORD *v81;
  void **v82;
  void **v83;
  void *v84;
  void **v85;
  void **v86;
  void *v87;
  void **v88;
  void **v89;
  void *v90;
  void **v91;
  void **v92;
  void *v93;
  void **v94;
  void **v95;
  void *v96;
  void **v97;
  void **v98;
  void *v99;
  void **v100;
  void **v101;
  void *v102;
  void **v103;
  void **v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  void **v109;
  void **v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  void **v127;
  void **v128;
  void **v129;
  void **v130;
  void **v131;
  void **v132;
  void **v133;
  void **v134;
  void **v135;
  _QWORD *v136;
  void **v137;
  void **v138;
  void **v139;
  void **v140;
  void **v141;
  void **v142;
  void **v143;
  void **v144;
  _QWORD *v145;
  void **v146;
  void **v147;
  void *v148[2];
  char v149;
  void *__p[2];
  char v151;
  _OWORD v152[2];
  void *v153[4];
  _OWORD v154[2];
  _OWORD v155[2];
  _OWORD v156[2];
  __int128 v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;

  v2 = a1 + 69;
  v3 = a1 + 33;
  v4 = (void **)(sub_2396F2654(a1) + 3);
  sub_2396F2654(v4);
  v5 = (void **)(a1 + 6);
  sub_2396F2654(a1 + 6);
  v6 = (void **)(a1 + 9);
  sub_2396F2654(a1 + 9);
  v7 = (void **)(a1 + 12);
  sub_2396F2654(a1 + 12);
  sub_2396F2654(a1 + 15);
  v8 = (void **)(a1 + 18);
  sub_2396F2654(a1 + 18);
  v9 = (void **)(a1 + 21);
  sub_2396F2654(a1 + 21);
  v10 = (void **)(a1 + 24);
  sub_2396F2654(a1 + 24);
  v147 = (void **)(a1 + 27);
  sub_2396F2654(a1 + 27);
  v146 = (void **)(a1 + 30);
  sub_2396F2654(a1 + 30);
  v145 = v3;
  sub_2396F2654(v3);
  sub_2396F2654(a1 + 36);
  v144 = (void **)(a1 + 39);
  sub_2396F2654(a1 + 39);
  sub_2396F2654(a1 + 42);
  v143 = (void **)(a1 + 45);
  sub_2396F2654(a1 + 45);
  v142 = (void **)(a1 + 48);
  sub_2396F2654(a1 + 48);
  v141 = (void **)(a1 + 51);
  sub_2396F2654(a1 + 51);
  v140 = (void **)(a1 + 54);
  sub_2396F2654(a1 + 54);
  v139 = (void **)(a1 + 57);
  sub_2396F2654(a1 + 57);
  sub_2396F2654(a1 + 60);
  v138 = (void **)(a1 + 63);
  sub_2396F2654(a1 + 63);
  v137 = (void **)(a1 + 66);
  sub_2396F2654(a1 + 66);
  v136 = v2;
  sub_2396F2654(v2);
  v135 = (void **)(a1 + 72);
  sub_2396F2654(a1 + 72);
  v134 = (void **)(a1 + 75);
  sub_2396F2654(a1 + 75);
  v133 = (void **)(a1 + 78);
  sub_2396F2654(a1 + 78);
  v128 = (void **)(a1 + 81);
  sub_2396F2654(a1 + 81);
  v129 = (void **)(a1 + 84);
  sub_2396F2654(a1 + 84);
  v130 = (void **)(a1 + 87);
  sub_2396F2654(a1 + 87);
  sub_2396F2654(a1 + 90);
  v131 = (void **)(a1 + 93);
  sub_2396F2654(a1 + 93);
  v132 = (void **)(a1 + 96);
  sub_2396F2654(a1 + 96);
  sub_2396F2654(a1 + 99);
  v127 = (void **)(a1 + 102);
  sub_2396F2654(a1 + 102);
  sub_2396F2654(a1 + 105);
  sub_2396F2654(&v159);
  v11 = (void **)*a1;
  if (*a1)
  {
    v12 = (void **)a1[1];
    v13 = (void **)*a1;
    if (v12 != v11)
    {
      do
      {
        if (*((char *)v12 - 1) < 0)
          operator delete(*(v12 - 3));
        v12 -= 3;
      }
      while (v12 != v11);
      v13 = (void **)*a1;
    }
    a1[1] = (uint64_t)v11;
    operator delete(v13);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  *(_OWORD *)a1 = v159;
  a1[2] = v160;
  BYTE7(v156[1]) = 20;
  strcpy((char *)v156, "session_options.json");
  sub_2395ACAA8((uint64_t)v156, (char *)&v157);
  sub_2396F2684((uint64_t)&v159, (uint64_t)&v157);
  v14 = (void **)*v4;
  if (*v4)
  {
    v15 = (void **)a1[4];
    v16 = *v4;
    if (v15 != v14)
    {
      do
      {
        if (*((char *)v15 - 1) < 0)
          operator delete(*(v15 - 3));
        v15 -= 3;
      }
      while (v15 != v14);
      v16 = *v4;
    }
    a1[4] = (uint64_t)v14;
    operator delete(v16);
    *v4 = 0;
    v4[1] = 0;
    v4[2] = 0;
  }
  *(_OWORD *)(a1 + 3) = v159;
  a1[5] = v160;
  v160 = 0;
  v159 = 0uLL;
  if (SHIBYTE(v158) < 0)
  {
    operator delete((void *)v157);
    if ((SBYTE7(v156[1]) & 0x80000000) == 0)
      goto LABEL_19;
  }
  else if ((SBYTE7(v156[1]) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(*(void **)&v156[0]);
LABEL_19:
  BYTE7(v156[1]) = 12;
  strcpy((char *)v156, "request.json");
  sub_2395ACAA8((uint64_t)v156, (char *)&v157);
  sub_2396F2684((uint64_t)&v159, (uint64_t)&v157);
  v17 = (void **)*v5;
  if (*v5)
  {
    v18 = (void **)a1[7];
    v19 = *v5;
    if (v18 != v17)
    {
      do
      {
        if (*((char *)v18 - 1) < 0)
          operator delete(*(v18 - 3));
        v18 -= 3;
      }
      while (v18 != v17);
      v19 = *v5;
    }
    a1[7] = (uint64_t)v17;
    operator delete(v19);
    *v5 = 0;
    a1[7] = 0;
    a1[8] = 0;
  }
  *((_OWORD *)a1 + 3) = v159;
  a1[8] = v160;
  v160 = 0;
  v159 = 0uLL;
  if (SHIBYTE(v158) < 0)
  {
    operator delete((void *)v157);
    if ((SBYTE7(v156[1]) & 0x80000000) == 0)
      goto LABEL_29;
  }
  else if ((SBYTE7(v156[1]) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete(*(void **)&v156[0]);
LABEL_29:
  *(_QWORD *)&v156[0] = operator new(0x20uLL);
  *(_OWORD *)((char *)v156 + 8) = xmmword_239F0C1E0;
  strcpy(*(char **)&v156[0], "snapshot_file_record.json");
  sub_2395ACAA8((uint64_t)v156, (char *)&v157);
  sub_2396F2684((uint64_t)&v159, (uint64_t)&v157);
  v20 = (void **)*v6;
  if (*v6)
  {
    v21 = (void **)a1[10];
    v22 = *v6;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v21 - 1) < 0)
          operator delete(*(v21 - 3));
        v21 -= 3;
      }
      while (v21 != v20);
      v22 = *v6;
    }
    a1[10] = (uint64_t)v20;
    operator delete(v22);
    *v6 = 0;
    a1[10] = 0;
    a1[11] = 0;
  }
  *(_OWORD *)(a1 + 9) = v159;
  a1[11] = v160;
  v160 = 0;
  v159 = 0uLL;
  if (SHIBYTE(v158) < 0)
  {
    operator delete((void *)v157);
    if ((SBYTE7(v156[1]) & 0x80000000) == 0)
      goto LABEL_39;
  }
  else if ((SBYTE7(v156[1]) & 0x80000000) == 0)
  {
    goto LABEL_39;
  }
  operator delete(*(void **)&v156[0]);
LABEL_39:
  BYTE7(v156[1]) = 18;
  strcpy((char *)v156, "snapshot_info.json");
  sub_2395ACAA8((uint64_t)v156, (char *)&v157);
  sub_2396F2684((uint64_t)&v159, (uint64_t)&v157);
  v23 = (void **)*v7;
  if (*v7)
  {
    v24 = (void **)a1[13];
    v25 = *v7;
    if (v24 != v23)
    {
      do
      {
        if (*((char *)v24 - 1) < 0)
          operator delete(*(v24 - 3));
        v24 -= 3;
      }
      while (v24 != v23);
      v25 = *v7;
    }
    a1[13] = (uint64_t)v23;
    operator delete(v25);
    *v7 = 0;
    a1[13] = 0;
    a1[14] = 0;
  }
  *((_OWORD *)a1 + 6) = v159;
  a1[14] = v160;
  v160 = 0;
  v159 = 0uLL;
  if (SHIBYTE(v158) < 0)
    operator delete((void *)v157);
  if (SBYTE7(v156[1]) < 0)
    operator delete(*(void **)&v156[0]);
  BYTE7(v156[1]) = 8;
  strcpy((char *)v156, "ocbundle");
  sub_2395AD05C((const void **)v156, (uint64_t)&v157);
  sub_2396F2684((uint64_t)&v159, (uint64_t)&v157);
  if (SHIBYTE(v158) < 0)
  {
    operator delete((void *)v157);
    if ((SBYTE7(v156[1]) & 0x80000000) == 0)
      goto LABEL_53;
  }
  else if ((SBYTE7(v156[1]) & 0x80000000) == 0)
  {
    goto LABEL_53;
  }
  operator delete(*(void **)&v156[0]);
LABEL_53:
  if (a1 + 15 != (uint64_t *)&v159)
    sub_239A70694((uint64_t)(a1 + 15), (std::string *)v159, *((std::string **)&v159 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v159 + 1) - v159) >> 3));
  BYTE7(v155[1]) = 13;
  strcpy((char *)v155, "metadata.json");
  sub_2395ACAA8((uint64_t)v155, (char *)v156);
  sub_2396F2748(&v157, (uint64_t *)&v159, (uint64_t)v156);
  v26 = (void **)*v8;
  if (*v8)
  {
    v27 = (void **)a1[19];
    v28 = *v8;
    if (v27 != v26)
    {
      do
      {
        if (*((char *)v27 - 1) < 0)
          operator delete(*(v27 - 3));
        v27 -= 3;
      }
      while (v27 != v26);
      v28 = *v8;
    }
    a1[19] = (uint64_t)v26;
    operator delete(v28);
    *v8 = 0;
    a1[19] = 0;
    a1[20] = 0;
  }
  *((_OWORD *)a1 + 9) = v157;
  a1[20] = v158;
  v158 = 0;
  v157 = 0uLL;
  if (SBYTE7(v156[1]) < 0)
  {
    operator delete(*(void **)&v156[0]);
    if ((SBYTE7(v155[1]) & 0x80000000) == 0)
      goto LABEL_65;
  }
  else if ((SBYTE7(v155[1]) & 0x80000000) == 0)
  {
    goto LABEL_65;
  }
  operator delete(*(void **)&v155[0]);
LABEL_65:
  BYTE7(v155[1]) = 6;
  strcpy((char *)v155, "images");
  sub_2395AD05C((const void **)v155, (uint64_t)v156);
  sub_2396F2748(&v157, (uint64_t *)&v159, (uint64_t)v156);
  v29 = (void **)*v9;
  if (*v9)
  {
    v30 = (void **)a1[22];
    v31 = *v9;
    if (v30 != v29)
    {
      do
      {
        if (*((char *)v30 - 1) < 0)
          operator delete(*(v30 - 3));
        v30 -= 3;
      }
      while (v30 != v29);
      v31 = *v9;
    }
    a1[22] = (uint64_t)v29;
    operator delete(v31);
    *v9 = 0;
    a1[22] = 0;
    a1[23] = 0;
  }
  *(_OWORD *)(a1 + 21) = v157;
  a1[23] = v158;
  v158 = 0;
  v157 = 0uLL;
  if (SBYTE7(v156[1]) < 0)
  {
    operator delete(*(void **)&v156[0]);
    if ((SBYTE7(v155[1]) & 0x80000000) == 0)
      goto LABEL_75;
  }
  else if ((SBYTE7(v155[1]) & 0x80000000) == 0)
  {
    goto LABEL_75;
  }
  operator delete(*(void **)&v155[0]);
LABEL_75:
  BYTE7(v155[1]) = 10;
  strcpy((char *)v155, "images_320");
  sub_2395AD05C((const void **)v155, (uint64_t)v156);
  sub_2396F2748(&v157, (uint64_t *)&v159, (uint64_t)v156);
  v32 = (void **)*v10;
  if (*v10)
  {
    v33 = (void **)a1[25];
    v34 = *v10;
    if (v33 != v32)
    {
      do
      {
        if (*((char *)v33 - 1) < 0)
          operator delete(*(v33 - 3));
        v33 -= 3;
      }
      while (v33 != v32);
      v34 = *v10;
    }
    a1[25] = (uint64_t)v32;
    operator delete(v34);
    *v10 = 0;
    a1[25] = 0;
    a1[26] = 0;
  }
  *((_OWORD *)a1 + 12) = v157;
  a1[26] = v158;
  v158 = 0;
  v157 = 0uLL;
  if (SBYTE7(v156[1]) < 0)
    operator delete(*(void **)&v156[0]);
  if (SBYTE7(v155[1]) < 0)
    operator delete(*(void **)&v155[0]);
  BYTE7(v155[1]) = 5;
  strcpy((char *)v155, "masks");
  sub_2395AD05C((const void **)v155, (uint64_t)v156);
  sub_2396F2748(&v157, (uint64_t *)&v159, (uint64_t)v156);
  v35 = (void **)*v147;
  if (*v147)
  {
    v36 = (void **)a1[28];
    v37 = *v147;
    if (v36 != v35)
    {
      do
      {
        if (*((char *)v36 - 1) < 0)
          operator delete(*(v36 - 3));
        v36 -= 3;
      }
      while (v36 != v35);
      v37 = *v147;
    }
    a1[28] = (uint64_t)v35;
    operator delete(v37);
    *v147 = 0;
    a1[28] = 0;
    a1[29] = 0;
  }
  *(_OWORD *)(a1 + 27) = v157;
  a1[29] = v158;
  v158 = 0;
  v157 = 0uLL;
  if (SBYTE7(v156[1]) < 0)
  {
    operator delete(*(void **)&v156[0]);
    if ((SBYTE7(v155[1]) & 0x80000000) == 0)
      goto LABEL_97;
  }
  else if ((SBYTE7(v155[1]) & 0x80000000) == 0)
  {
    goto LABEL_97;
  }
  operator delete(*(void **)&v155[0]);
LABEL_97:
  BYTE7(v155[1]) = 14;
  strcpy((char *)v155, "portrait_depth");
  sub_2395AD05C((const void **)v155, (uint64_t)v156);
  sub_2396F2748(&v157, (uint64_t *)&v159, (uint64_t)v156);
  v38 = (void **)*v146;
  if (*v146)
  {
    v39 = (void **)a1[31];
    v40 = *v146;
    if (v39 != v38)
    {
      do
      {
        if (*((char *)v39 - 1) < 0)
          operator delete(*(v39 - 3));
        v39 -= 3;
      }
      while (v39 != v38);
      v40 = *v146;
    }
    a1[31] = (uint64_t)v38;
    operator delete(v40);
    *v146 = 0;
    a1[31] = 0;
    a1[32] = 0;
  }
  *((_OWORD *)a1 + 15) = v157;
  a1[32] = v158;
  v158 = 0;
  v157 = 0uLL;
  if (SBYTE7(v156[1]) < 0)
  {
    operator delete(*(void **)&v156[0]);
    if ((SBYTE7(v155[1]) & 0x80000000) == 0)
      goto LABEL_107;
  }
  else if ((SBYTE7(v155[1]) & 0x80000000) == 0)
  {
    goto LABEL_107;
  }
  operator delete(*(void **)&v155[0]);
LABEL_107:
  BYTE7(v155[1]) = 18;
  strcpy((char *)v155, "depth_point_clouds");
  sub_2395AD05C((const void **)v155, (uint64_t)v156);
  sub_2396F2748(&v157, (uint64_t *)&v159, (uint64_t)v156);
  v41 = v145;
  v42 = *v145;
  if (*v145)
  {
    v43 = a1[34];
    v44 = (void *)*v145;
    if (v43 != v42)
    {
      do
      {
        if (*(char *)(v43 - 1) < 0)
          operator delete(*(void **)(v43 - 24));
        v43 -= 24;
      }
      while (v43 != v42);
      v44 = (void *)*v145;
    }
    a1[34] = v42;
    operator delete(v44);
    v41 = v145;
    *v145 = 0;
    v145[1] = 0;
    v145[2] = 0;
  }
  *v41 = v157;
  a1[35] = v158;
  v158 = 0;
  v157 = 0uLL;
  if (SBYTE7(v156[1]) < 0)
  {
    operator delete(*(void **)&v156[0]);
    if ((SBYTE7(v155[1]) & 0x80000000) == 0)
      goto LABEL_117;
  }
  else if ((SBYTE7(v155[1]) & 0x80000000) == 0)
  {
    goto LABEL_117;
  }
  operator delete(*(void **)&v155[0]);
LABEL_117:
  BYTE7(v155[1]) = 10;
  strcpy((char *)v155, "all_frames");
  sub_2395AD05C((const void **)v155, (uint64_t)v156);
  sub_2396F2748(&v157, (uint64_t *)&v159, (uint64_t)v156);
  if (SBYTE7(v156[1]) < 0)
  {
    operator delete(*(void **)&v156[0]);
    if ((SBYTE7(v155[1]) & 0x80000000) == 0)
      goto LABEL_119;
  }
  else if ((SBYTE7(v155[1]) & 0x80000000) == 0)
  {
    goto LABEL_119;
  }
  operator delete(*(void **)&v155[0]);
LABEL_119:
  if (a1 + 36 != (uint64_t *)&v157)
    sub_239A70694((uint64_t)(a1 + 36), (std::string *)v157, *((std::string **)&v157 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v157 + 1) - v157) >> 3));
  BYTE7(v154[1]) = 18;
  strcpy((char *)v154, "depth_point_clouds");
  sub_2395AD05C((const void **)v154, (uint64_t)v155);
  sub_2396F2748(v156, (uint64_t *)&v157, (uint64_t)v155);
  v45 = a1 + 39;
  v46 = (void **)*v144;
  if (*v144)
  {
    v47 = (void **)a1[40];
    v48 = *v144;
    if (v47 != v46)
    {
      do
      {
        if (*((char *)v47 - 1) < 0)
          operator delete(*(v47 - 3));
        v47 -= 3;
      }
      while (v47 != v46);
      v48 = *v144;
    }
    a1[40] = (uint64_t)v46;
    operator delete(v48);
    v45 = a1 + 39;
    *v144 = 0;
    a1[40] = 0;
    a1[41] = 0;
  }
  *v45 = v156[0];
  a1[41] = *(_QWORD *)&v156[1];
  memset(v156, 0, 24);
  if (SBYTE7(v155[1]) < 0)
  {
    operator delete(*(void **)&v155[0]);
    if ((SBYTE7(v154[1]) & 0x80000000) == 0)
      goto LABEL_131;
  }
  else if ((SBYTE7(v154[1]) & 0x80000000) == 0)
  {
    goto LABEL_131;
  }
  operator delete(*(void **)&v154[0]);
LABEL_131:
  BYTE7(v154[1]) = 3;
  strcpy((char *)v154, "sfm");
  sub_2395AD05C((const void **)v154, (uint64_t)v155);
  sub_2396F2684((uint64_t)v156, (uint64_t)v155);
  if (SBYTE7(v155[1]) < 0)
  {
    operator delete(*(void **)&v155[0]);
    if ((SBYTE7(v154[1]) & 0x80000000) == 0)
      goto LABEL_133;
  }
  else if ((SBYTE7(v154[1]) & 0x80000000) == 0)
  {
    goto LABEL_133;
  }
  operator delete(*(void **)&v154[0]);
LABEL_133:
  if (a1 + 42 != (uint64_t *)v156)
    sub_239A70694((uint64_t)(a1 + 42), *(std::string **)&v156[0], *((std::string **)&v156[0] + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v156[0] + 1) - *(_QWORD *)&v156[0]) >> 3));
  HIBYTE(v153[2]) = 7;
  strcpy((char *)v153, "feature");
  sub_2395AD05C((const void **)v153, (uint64_t)v154);
  sub_2396F2748(v155, (uint64_t *)v156, (uint64_t)v154);
  v49 = a1 + 45;
  v50 = (void **)*v143;
  if (*v143)
  {
    v51 = (void **)a1[46];
    v52 = *v143;
    if (v51 != v50)
    {
      do
      {
        if (*((char *)v51 - 1) < 0)
          operator delete(*(v51 - 3));
        v51 -= 3;
      }
      while (v51 != v50);
      v52 = *v143;
    }
    a1[46] = (uint64_t)v50;
    operator delete(v52);
    v49 = a1 + 45;
    *v143 = 0;
    a1[46] = 0;
    a1[47] = 0;
  }
  *v49 = v155[0];
  a1[47] = *(_QWORD *)&v155[1];
  memset(v155, 0, 24);
  if (SBYTE7(v154[1]) < 0)
  {
    operator delete(*(void **)&v154[0]);
    if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
      goto LABEL_145;
  }
  else if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
  {
    goto LABEL_145;
  }
  operator delete(v153[0]);
LABEL_145:
  HIBYTE(v153[2]) = 5;
  strcpy((char *)v153, "match");
  sub_2395AD05C((const void **)v153, (uint64_t)v154);
  sub_2396F2748(v155, (uint64_t *)v156, (uint64_t)v154);
  v53 = (void **)*v142;
  if (*v142)
  {
    v54 = (void **)a1[49];
    v55 = *v142;
    if (v54 != v53)
    {
      do
      {
        if (*((char *)v54 - 1) < 0)
          operator delete(*(v54 - 3));
        v54 -= 3;
      }
      while (v54 != v53);
      v55 = *v142;
    }
    a1[49] = (uint64_t)v53;
    operator delete(v55);
    *v142 = 0;
    a1[49] = 0;
    a1[50] = 0;
  }
  *((_OWORD *)a1 + 24) = v155[0];
  a1[50] = *(_QWORD *)&v155[1];
  memset(v155, 0, 24);
  if (SBYTE7(v154[1]) < 0)
  {
    operator delete(*(void **)&v154[0]);
    if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
      goto LABEL_155;
  }
  else if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
  {
    goto LABEL_155;
  }
  operator delete(v153[0]);
LABEL_155:
  HIBYTE(v153[2]) = 14;
  strcpy((char *)v153, "sfm_scene.json");
  sub_2395ACAA8((uint64_t)v153, (char *)v154);
  sub_2396F2748(v155, (uint64_t *)v156, (uint64_t)v154);
  v56 = a1 + 51;
  v57 = (void **)*v141;
  if (*v141)
  {
    v58 = (void **)a1[52];
    v59 = *v141;
    if (v58 != v57)
    {
      do
      {
        if (*((char *)v58 - 1) < 0)
          operator delete(*(v58 - 3));
        v58 -= 3;
      }
      while (v58 != v57);
      v59 = *v141;
    }
    a1[52] = (uint64_t)v57;
    operator delete(v59);
    v56 = a1 + 51;
    *v141 = 0;
    a1[52] = 0;
    a1[53] = 0;
  }
  *v56 = v155[0];
  a1[53] = *(_QWORD *)&v155[1];
  memset(v155, 0, 24);
  if (SBYTE7(v154[1]) < 0)
  {
    operator delete(*(void **)&v154[0]);
    if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
      goto LABEL_165;
  }
  else if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
  {
    goto LABEL_165;
  }
  operator delete(v153[0]);
LABEL_165:
  v153[0] = operator new(0x20uLL);
  *(_OWORD *)&v153[1] = xmmword_239EC77A0;
  strcpy((char *)v153[0], "sfm_scene_reference.json");
  sub_2395ACAA8((uint64_t)v153, (char *)v154);
  sub_2396F2748(v155, (uint64_t *)v156, (uint64_t)v154);
  v60 = (void **)*v140;
  if (*v140)
  {
    v61 = (void **)a1[55];
    v62 = *v140;
    if (v61 != v60)
    {
      do
      {
        if (*((char *)v61 - 1) < 0)
          operator delete(*(v61 - 3));
        v61 -= 3;
      }
      while (v61 != v60);
      v62 = *v140;
    }
    a1[55] = (uint64_t)v60;
    operator delete(v62);
    *v140 = 0;
    a1[55] = 0;
    a1[56] = 0;
  }
  *((_OWORD *)a1 + 27) = v155[0];
  a1[56] = *(_QWORD *)&v155[1];
  memset(v155, 0, 24);
  if (SBYTE7(v154[1]) < 0)
  {
    operator delete(*(void **)&v154[0]);
    if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
      goto LABEL_175;
  }
  else if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
  {
    goto LABEL_175;
  }
  operator delete(v153[0]);
LABEL_175:
  v153[0] = operator new(0x20uLL);
  *(_OWORD *)&v153[1] = xmmword_239F0C1E0;
  strcpy((char *)v153[0], "mobilesfm_checkpoint.json");
  sub_2395ACAA8((uint64_t)v153, (char *)v154);
  sub_2396F2748(v155, (uint64_t *)v156, (uint64_t)v154);
  v63 = a1 + 57;
  v64 = (void **)*v139;
  if (*v139)
  {
    v65 = (void **)a1[58];
    v66 = *v139;
    if (v65 != v64)
    {
      do
      {
        if (*((char *)v65 - 1) < 0)
          operator delete(*(v65 - 3));
        v65 -= 3;
      }
      while (v65 != v64);
      v66 = *v139;
    }
    a1[58] = (uint64_t)v64;
    operator delete(v66);
    v63 = a1 + 57;
    *v139 = 0;
    a1[58] = 0;
    a1[59] = 0;
  }
  *v63 = v155[0];
  a1[59] = *(_QWORD *)&v155[1];
  memset(v155, 0, 24);
  if (SBYTE7(v154[1]) < 0)
  {
    operator delete(*(void **)&v154[0]);
    if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
      goto LABEL_185;
  }
  else if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
  {
    goto LABEL_185;
  }
  operator delete(v153[0]);
LABEL_185:
  HIBYTE(v153[2]) = 3;
  strcpy((char *)v153, "mvs");
  sub_2395AD05C((const void **)v153, (uint64_t)v154);
  sub_2396F2684((uint64_t)v155, (uint64_t)v154);
  if (SBYTE7(v154[1]) < 0)
  {
    operator delete(*(void **)&v154[0]);
    if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
      goto LABEL_187;
  }
  else if ((SHIBYTE(v153[2]) & 0x80000000) == 0)
  {
    goto LABEL_187;
  }
  operator delete(v153[0]);
LABEL_187:
  if (a1 + 60 != (uint64_t *)v155)
    sub_239A70694((uint64_t)(a1 + 60), *(std::string **)&v155[0], *((std::string **)&v155[0] + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v155[0] + 1) - *(_QWORD *)&v155[0]) >> 3));
  BYTE7(v152[1]) = 8;
  strcpy((char *)v152, "depthmap");
  sub_2395AD05C((const void **)v152, (uint64_t)v153);
  sub_2396F2748(v154, (uint64_t *)v155, (uint64_t)v153);
  v67 = a1 + 63;
  v68 = (void **)*v138;
  if (*v138)
  {
    v69 = (void **)a1[64];
    v70 = *v138;
    if (v69 != v68)
    {
      do
      {
        if (*((char *)v69 - 1) < 0)
          operator delete(*(v69 - 3));
        v69 -= 3;
      }
      while (v69 != v68);
      v70 = *v138;
    }
    a1[64] = (uint64_t)v68;
    operator delete(v70);
    v67 = a1 + 63;
    *v138 = 0;
    a1[64] = 0;
    a1[65] = 0;
  }
  *v67 = v154[0];
  a1[65] = *(_QWORD *)&v154[1];
  memset(v154, 0, 24);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_199;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_199;
  }
  operator delete(*(void **)&v152[0]);
LABEL_199:
  *(_QWORD *)&v152[0] = operator new(0x20uLL);
  *(_OWORD *)((char *)v152 + 8) = xmmword_239F0C1E0;
  strcpy(*(char **)&v152[0], "sfm_scene_undistorted.bin");
  sub_2395ACAA8((uint64_t)v152, (char *)v153);
  sub_2396F2748(v154, (uint64_t *)v155, (uint64_t)v153);
  v71 = (void **)*v137;
  if (*v137)
  {
    v72 = (void **)a1[67];
    v73 = *v137;
    if (v72 != v71)
    {
      do
      {
        if (*((char *)v72 - 1) < 0)
          operator delete(*(v72 - 3));
        v72 -= 3;
      }
      while (v72 != v71);
      v73 = *v137;
    }
    a1[67] = (uint64_t)v71;
    operator delete(v73);
    *v137 = 0;
    a1[67] = 0;
    a1[68] = 0;
  }
  *((_OWORD *)a1 + 33) = v154[0];
  a1[68] = *(_QWORD *)&v154[1];
  memset(v154, 0, 24);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_209;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_209;
  }
  operator delete(*(void **)&v152[0]);
LABEL_209:
  BYTE7(v152[1]) = 18;
  strcpy((char *)v152, "images_undistorted");
  sub_2395AD05C((const void **)v152, (uint64_t)v153);
  sub_2396F2748(v154, (uint64_t *)v155, (uint64_t)v153);
  v74 = v136;
  v75 = *v136;
  if (*v136)
  {
    v76 = a1[70];
    v77 = (void *)*v136;
    if (v76 != v75)
    {
      do
      {
        if (*(char *)(v76 - 1) < 0)
          operator delete(*(void **)(v76 - 24));
        v76 -= 24;
      }
      while (v76 != v75);
      v77 = (void *)*v136;
    }
    a1[70] = v75;
    operator delete(v77);
    v74 = v136;
    *v136 = 0;
    v136[1] = 0;
    v136[2] = 0;
  }
  *v74 = v154[0];
  a1[71] = *(_QWORD *)&v154[1];
  memset(v154, 0, 24);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_219;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_219;
  }
  operator delete(*(void **)&v152[0]);
LABEL_219:
  BYTE7(v152[1]) = 17;
  strcpy((char *)v152, "masks_undistorted");
  sub_2395AD05C((const void **)v152, (uint64_t)v153);
  sub_2396F2748(v154, (uint64_t *)v155, (uint64_t)v153);
  v78 = (void **)*v135;
  if (*v135)
  {
    v79 = (void **)a1[73];
    v80 = *v135;
    if (v79 != v78)
    {
      do
      {
        if (*((char *)v79 - 1) < 0)
          operator delete(*(v79 - 3));
        v79 -= 3;
      }
      while (v79 != v78);
      v80 = *v135;
    }
    a1[73] = (uint64_t)v78;
    operator delete(v80);
    *v135 = 0;
    a1[73] = 0;
    a1[74] = 0;
  }
  *((_OWORD *)a1 + 36) = v154[0];
  a1[74] = *(_QWORD *)&v154[1];
  memset(v154, 0, 24);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_229;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_229;
  }
  operator delete(*(void **)&v152[0]);
LABEL_229:
  BYTE7(v152[1]) = 15;
  strcpy((char *)v152, "point_cloud.bin");
  sub_2395ACAA8((uint64_t)v152, (char *)v153);
  sub_2396F2748(v154, (uint64_t *)v155, (uint64_t)v153);
  v81 = a1 + 75;
  v82 = (void **)*v134;
  if (*v134)
  {
    v83 = (void **)a1[76];
    v84 = *v134;
    if (v83 != v82)
    {
      do
      {
        if (*((char *)v83 - 1) < 0)
          operator delete(*(v83 - 3));
        v83 -= 3;
      }
      while (v83 != v82);
      v84 = *v134;
    }
    a1[76] = (uint64_t)v82;
    operator delete(v84);
    v81 = a1 + 75;
    *v134 = 0;
    a1[76] = 0;
    a1[77] = 0;
  }
  *v81 = v154[0];
  a1[77] = *(_QWORD *)&v154[1];
  memset(v154, 0, 24);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_239;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_239;
  }
  operator delete(*(void **)&v152[0]);
LABEL_239:
  strcpy((char *)v152, "output_point_cloud.bin");
  BYTE7(v152[1]) = 22;
  sub_2395ACAA8((uint64_t)v152, (char *)v153);
  sub_2396F2748(v154, (uint64_t *)v155, (uint64_t)v153);
  v85 = (void **)*v133;
  if (*v133)
  {
    v86 = (void **)a1[79];
    v87 = *v133;
    if (v86 != v85)
    {
      do
      {
        if (*((char *)v86 - 1) < 0)
          operator delete(*(v86 - 3));
        v86 -= 3;
      }
      while (v86 != v85);
      v87 = *v133;
    }
    a1[79] = (uint64_t)v85;
    operator delete(v87);
    *v133 = 0;
    a1[79] = 0;
    a1[80] = 0;
  }
  *((_OWORD *)a1 + 39) = v154[0];
  a1[80] = *(_QWORD *)&v154[1];
  memset(v154, 0, 24);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_249;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_249;
  }
  operator delete(*(void **)&v152[0]);
LABEL_249:
  *(_QWORD *)&v152[0] = operator new(0x20uLL);
  *(_OWORD *)((char *)v152 + 8) = xmmword_239EC77A0;
  strcpy(*(char **)&v152[0], "point_cloud_filtered.bin");
  sub_2395ACAA8((uint64_t)v152, (char *)v153);
  sub_2396F2748(v154, (uint64_t *)v155, (uint64_t)v153);
  v88 = (void **)*v128;
  if (*v128)
  {
    v89 = (void **)a1[82];
    v90 = *v128;
    if (v89 != v88)
    {
      do
      {
        if (*((char *)v89 - 1) < 0)
          operator delete(*(v89 - 3));
        v89 -= 3;
      }
      while (v89 != v88);
      v90 = *v128;
    }
    a1[82] = (uint64_t)v88;
    operator delete(v90);
    *v128 = 0;
    a1[82] = 0;
    a1[83] = 0;
  }
  *(_OWORD *)v128 = v154[0];
  a1[83] = *(_QWORD *)&v154[1];
  memset(v154, 0, 24);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_259;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_259;
  }
  operator delete(*(void **)&v152[0]);
LABEL_259:
  *(_QWORD *)&v152[0] = operator new(0x28uLL);
  *(_OWORD *)((char *)v152 + 8) = xmmword_239F0C1B0;
  strcpy(*(char **)&v152[0], "all_frame_sfm_scene_undistorted.bin");
  sub_2395ACAA8((uint64_t)v152, (char *)v153);
  sub_2396F2748(v154, (uint64_t *)v155, (uint64_t)v153);
  v91 = (void **)*v129;
  if (*v129)
  {
    v92 = (void **)a1[85];
    v93 = *v129;
    if (v92 != v91)
    {
      do
      {
        if (*((char *)v92 - 1) < 0)
          operator delete(*(v92 - 3));
        v92 -= 3;
      }
      while (v92 != v91);
      v93 = *v129;
    }
    a1[85] = (uint64_t)v91;
    operator delete(v93);
    *v129 = 0;
    a1[85] = 0;
    a1[86] = 0;
  }
  *((_OWORD *)a1 + 42) = v154[0];
  a1[86] = *(_QWORD *)&v154[1];
  memset(v154, 0, 24);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_269;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_269;
  }
  operator delete(*(void **)&v152[0]);
LABEL_269:
  *(_QWORD *)&v152[0] = operator new(0x28uLL);
  *(_OWORD *)((char *)v152 + 8) = xmmword_239F0C1F0;
  strcpy(*(char **)&v152[0], "all_frame_sfm_scene_reference.bin");
  sub_2395ACAA8((uint64_t)v152, (char *)v153);
  sub_2396F2748(v154, (uint64_t *)v155, (uint64_t)v153);
  v94 = (void **)*v130;
  if (*v130)
  {
    v95 = (void **)a1[88];
    v96 = *v130;
    if (v95 != v94)
    {
      do
      {
        if (*((char *)v95 - 1) < 0)
          operator delete(*(v95 - 3));
        v95 -= 3;
      }
      while (v95 != v94);
      v96 = *v130;
    }
    a1[88] = (uint64_t)v94;
    operator delete(v96);
    *v130 = 0;
    a1[88] = 0;
    a1[89] = 0;
  }
  *(_OWORD *)v130 = v154[0];
  a1[89] = *(_QWORD *)&v154[1];
  memset(v154, 0, 24);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_279;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_279;
  }
  operator delete(*(void **)&v152[0]);
LABEL_279:
  BYTE7(v152[1]) = 7;
  strcpy((char *)v152, "meshing");
  sub_2395AD05C((const void **)v152, (uint64_t)v153);
  sub_2396F2684((uint64_t)v154, (uint64_t)v153);
  if (SHIBYTE(v153[2]) < 0)
  {
    operator delete(v153[0]);
    if ((SBYTE7(v152[1]) & 0x80000000) == 0)
      goto LABEL_281;
  }
  else if ((SBYTE7(v152[1]) & 0x80000000) == 0)
  {
    goto LABEL_281;
  }
  operator delete(*(void **)&v152[0]);
LABEL_281:
  if (a1 + 90 != (uint64_t *)v154)
    sub_239A70694((uint64_t)(a1 + 90), *(std::string **)&v154[0], *((std::string **)&v154[0] + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v154[0] + 1) - *(_QWORD *)&v154[0]) >> 3));
  v151 = 13;
  strcpy((char *)__p, "high_mesh.obj");
  sub_2395ACAA8((uint64_t)__p, (char *)v152);
  sub_2396F2748(v153, (uint64_t *)v154, (uint64_t)v152);
  v97 = (void **)*v131;
  if (*v131)
  {
    v98 = (void **)a1[94];
    v99 = *v131;
    if (v98 != v97)
    {
      do
      {
        if (*((char *)v98 - 1) < 0)
          operator delete(*(v98 - 3));
        v98 -= 3;
      }
      while (v98 != v97);
      v99 = *v131;
    }
    a1[94] = (uint64_t)v97;
    operator delete(v99);
    *v131 = 0;
    a1[94] = 0;
    a1[95] = 0;
  }
  *(_OWORD *)v131 = *(_OWORD *)v153;
  a1[95] = (uint64_t)v153[2];
  memset(v153, 0, 24);
  if (SBYTE7(v152[1]) < 0)
  {
    operator delete(*(void **)&v152[0]);
    if ((v151 & 0x80000000) == 0)
      goto LABEL_293;
  }
  else if ((v151 & 0x80000000) == 0)
  {
    goto LABEL_293;
  }
  operator delete(__p[0]);
LABEL_293:
  v151 = 12;
  strcpy((char *)__p, "low_mesh.obj");
  sub_2395ACAA8((uint64_t)__p, (char *)v152);
  sub_2396F2748(v153, (uint64_t *)v154, (uint64_t)v152);
  v100 = (void **)*v132;
  if (*v132)
  {
    v101 = (void **)a1[97];
    v102 = *v132;
    if (v101 != v100)
    {
      do
      {
        if (*((char *)v101 - 1) < 0)
          operator delete(*(v101 - 3));
        v101 -= 3;
      }
      while (v101 != v100);
      v102 = *v132;
    }
    a1[97] = (uint64_t)v100;
    operator delete(v102);
    *v132 = 0;
    a1[97] = 0;
    a1[98] = 0;
  }
  *((_OWORD *)a1 + 48) = *(_OWORD *)v153;
  a1[98] = (uint64_t)v153[2];
  memset(v153, 0, 24);
  if (SBYTE7(v152[1]) < 0)
  {
    operator delete(*(void **)&v152[0]);
    if ((v151 & 0x80000000) == 0)
      goto LABEL_303;
  }
  else if ((v151 & 0x80000000) == 0)
  {
    goto LABEL_303;
  }
  operator delete(__p[0]);
LABEL_303:
  v151 = 9;
  strcpy((char *)__p, "texturing");
  sub_2395AD05C((const void **)__p, (uint64_t)v152);
  sub_2396F2684((uint64_t)v153, (uint64_t)v152);
  if (SBYTE7(v152[1]) < 0)
  {
    operator delete(*(void **)&v152[0]);
    if ((v151 & 0x80000000) == 0)
      goto LABEL_305;
  }
  else if ((v151 & 0x80000000) == 0)
  {
    goto LABEL_305;
  }
  operator delete(__p[0]);
LABEL_305:
  if (a1 + 99 != (uint64_t *)v153)
    sub_239A70694((uint64_t)(a1 + 99), (std::string *)v153[0], (std::string *)v153[1], 0xAAAAAAAAAAAAAAABLL * (((char *)v153[1] - (char *)v153[0]) >> 3));
  v151 = 8;
  strcpy((char *)__p, "mesh.obj");
  sub_2396F2748(v152, (uint64_t *)v153, (uint64_t)__p);
  v103 = (void **)*v127;
  if (*v127)
  {
    v104 = (void **)a1[103];
    v105 = *v127;
    if (v104 != v103)
    {
      do
      {
        if (*((char *)v104 - 1) < 0)
          operator delete(*(v104 - 3));
        v104 -= 3;
      }
      while (v104 != v103);
      v105 = *v127;
    }
    a1[103] = (uint64_t)v103;
    operator delete(v105);
    *v127 = 0;
    a1[103] = 0;
    a1[104] = 0;
  }
  *((_OWORD *)a1 + 51) = v152[0];
  a1[104] = *(_QWORD *)&v152[1];
  memset(v152, 0, 24);
  if (v151 < 0)
    operator delete(__p[0]);
  v149 = 6;
  strcpy((char *)v148, "baking");
  sub_2395AD05C((const void **)v148, (uint64_t)__p);
  sub_2396F2684((uint64_t)v152, (uint64_t)__p);
  if (v151 < 0)
  {
    operator delete(__p[0]);
    if ((v149 & 0x80000000) == 0)
      goto LABEL_319;
  }
  else if ((v149 & 0x80000000) == 0)
  {
    goto LABEL_319;
  }
  operator delete(v148[0]);
LABEL_319:
  if (a1 + 105 != (uint64_t *)v152)
    sub_239A70694((uint64_t)(a1 + 105), *(std::string **)&v152[0], *((std::string **)&v152[0] + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v152[0] + 1) - *(_QWORD *)&v152[0]) >> 3));
  v106 = *(_QWORD *)&v152[0];
  if (*(_QWORD *)&v152[0])
  {
    v107 = *((_QWORD *)&v152[0] + 1);
    v108 = *(void **)&v152[0];
    if (*((_QWORD *)&v152[0] + 1) != *(_QWORD *)&v152[0])
    {
      do
      {
        if (*(char *)(v107 - 1) < 0)
          operator delete(*(void **)(v107 - 24));
        v107 -= 24;
      }
      while (v107 != v106);
      v108 = *(void **)&v152[0];
    }
    *((_QWORD *)&v152[0] + 1) = v106;
    operator delete(v108);
  }
  v109 = (void **)v153[0];
  if (v153[0])
  {
    v110 = (void **)v153[1];
    v111 = v153[0];
    if (v153[1] != v153[0])
    {
      do
      {
        if (*((char *)v110 - 1) < 0)
          operator delete(*(v110 - 3));
        v110 -= 3;
      }
      while (v110 != v109);
      v111 = v153[0];
    }
    v153[1] = v109;
    operator delete(v111);
  }
  v112 = *(_QWORD *)&v154[0];
  if (*(_QWORD *)&v154[0])
  {
    v113 = *((_QWORD *)&v154[0] + 1);
    v114 = *(void **)&v154[0];
    if (*((_QWORD *)&v154[0] + 1) != *(_QWORD *)&v154[0])
    {
      do
      {
        if (*(char *)(v113 - 1) < 0)
          operator delete(*(void **)(v113 - 24));
        v113 -= 24;
      }
      while (v113 != v112);
      v114 = *(void **)&v154[0];
    }
    *((_QWORD *)&v154[0] + 1) = v112;
    operator delete(v114);
  }
  v115 = *(_QWORD *)&v155[0];
  if (*(_QWORD *)&v155[0])
  {
    v116 = *((_QWORD *)&v155[0] + 1);
    v117 = *(void **)&v155[0];
    if (*((_QWORD *)&v155[0] + 1) != *(_QWORD *)&v155[0])
    {
      do
      {
        if (*(char *)(v116 - 1) < 0)
          operator delete(*(void **)(v116 - 24));
        v116 -= 24;
      }
      while (v116 != v115);
      v117 = *(void **)&v155[0];
    }
    *((_QWORD *)&v155[0] + 1) = v115;
    operator delete(v117);
  }
  v118 = *(_QWORD *)&v156[0];
  if (*(_QWORD *)&v156[0])
  {
    v119 = *((_QWORD *)&v156[0] + 1);
    v120 = *(void **)&v156[0];
    if (*((_QWORD *)&v156[0] + 1) != *(_QWORD *)&v156[0])
    {
      do
      {
        if (*(char *)(v119 - 1) < 0)
          operator delete(*(void **)(v119 - 24));
        v119 -= 24;
      }
      while (v119 != v118);
      v120 = *(void **)&v156[0];
    }
    *((_QWORD *)&v156[0] + 1) = v118;
    operator delete(v120);
  }
  v121 = v157;
  if ((_QWORD)v157)
  {
    v122 = *((_QWORD *)&v157 + 1);
    v123 = (void *)v157;
    if (*((_QWORD *)&v157 + 1) != (_QWORD)v157)
    {
      do
      {
        if (*(char *)(v122 - 1) < 0)
          operator delete(*(void **)(v122 - 24));
        v122 -= 24;
      }
      while (v122 != v121);
      v123 = (void *)v157;
    }
    *((_QWORD *)&v157 + 1) = v121;
    operator delete(v123);
  }
  v124 = v159;
  if ((_QWORD)v159)
  {
    v125 = *((_QWORD *)&v159 + 1);
    v126 = (void *)v159;
    if (*((_QWORD *)&v159 + 1) != (_QWORD)v159)
    {
      do
      {
        if (*(char *)(v125 - 1) < 0)
          operator delete(*(void **)(v125 - 24));
        v125 -= 24;
      }
      while (v125 != v124);
      v126 = (void *)v159;
    }
    *((_QWORD *)&v159 + 1) = v124;
    operator delete(v126);
  }
}

void sub_239BB3920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60)
{
  void **v60;
  uint64_t v61;

  sub_23941A260(&a53);
  sub_23941A260(&a60);
  sub_23941A260((void **)(v61 - 256));
  sub_23941A260((void **)(v61 - 224));
  sub_23941A260((void **)(v61 - 192));
  sub_23941A260((void **)(v61 - 160));
  sub_23941A260((void **)(v61 - 128));
  sub_239A73AEC(v60);
  _Unwind_Resume(a1);
}

void sub_239BB3A30(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (a56 < 0)
    operator delete(__p);
  JUMPOUT(0x239BB3A08);
}

void sub_239BB3A6C()
{
  uint64_t v0;

  if (*(char *)(v0 - 233) < 0)
    operator delete(*(void **)(v0 - 256));
  JUMPOUT(0x239BB3A10);
}

void sub_239BB3A88()
{
  uint64_t v0;

  if (*(char *)(v0 - 201) < 0)
    operator delete(*(void **)(v0 - 224));
  JUMPOUT(0x239BB3A18);
}

void sub_239BB3AB8()
{
  uint64_t v0;

  if (*(char *)(v0 - 169) < 0)
    operator delete(*(void **)(v0 - 192));
  JUMPOUT(0x239BB3A20);
}

BOOL sub_239BB3AE8(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4;
  _BOOL8 result;
  unsigned __int8 v6;
  unsigned __int8 v7;
  _QWORD *v8;
  unsigned __int8 v9;
  _QWORD *v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  _QWORD *v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  _QWORD *v16;
  unsigned __int8 v17;
  _QWORD *v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  _QWORD *v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  _QWORD *v24;
  unsigned __int8 v25;
  _QWORD *v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  _QWORD *v30;
  unsigned __int8 v31;
  _QWORD *v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  uint64_t v37;
  std::__fs::filesystem::path __p;
  uint64_t v40;

  if (!*(_BYTE *)(a1 + 24))
    goto LABEL_15;
  sub_2396F295C((uint64_t *)a1, a2, (uint64_t)&__p);
  std::__fs::filesystem::__status(&__p, 0);
  v4 = v40;
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
  result = 0;
  if (v4)
  {
    if (v4 != 255)
    {
LABEL_15:
      if (!*(_BYTE *)(a1 + 56))
        goto LABEL_154;
      sub_2396F295C((uint64_t *)(a1 + 32), a2, (uint64_t)&__p);
      std::__fs::filesystem::__status(&__p, 0);
      v6 = v40;
      if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__pn_.__r_.__value_.__l.__data_);
      result = 0;
      if (v6)
      {
        if (v6 != 255)
        {
LABEL_154:
          if (!*(_BYTE *)(a1 + 88))
            goto LABEL_155;
          sub_2396F295C((uint64_t *)(a1 + 64), a2, (uint64_t)&__p);
          std::__fs::filesystem::__status(&__p, 0);
          v7 = v40;
          if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__pn_.__r_.__value_.__l.__data_);
          result = 0;
          if (v7)
          {
            if (v7 != 255)
            {
LABEL_155:
              if (*(_BYTE *)(a1 + 136))
              {
                v8 = (_QWORD *)(a1 + 112);
                while (1)
                {
                  v8 = (_QWORD *)*v8;
                  if (!v8)
                    break;
                  sub_2396F295C(v8 + 3, a2, (uint64_t)&__p);
                  std::__fs::filesystem::__status(&__p, 0);
                  v9 = v40;
                  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                  if (!v9 || v9 == 255)
                    return 0;
                }
              }
              if (*(_BYTE *)(a1 + 184))
              {
                v10 = (_QWORD *)(a1 + 160);
                while (1)
                {
                  v10 = (_QWORD *)*v10;
                  if (!v10)
                    break;
                  sub_2396F295C(v10 + 3, a2, (uint64_t)&__p);
                  std::__fs::filesystem::__status(&__p, 0);
                  v11 = v40;
                  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                  if (!v11 || v11 == 255)
                    return 0;
                }
              }
              if (!*(_BYTE *)(a1 + 216))
                goto LABEL_156;
              sub_2396F295C((uint64_t *)(a1 + 192), a2, (uint64_t)&__p);
              std::__fs::filesystem::__status(&__p, 0);
              v12 = v40;
              if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__pn_.__r_.__value_.__l.__data_);
              result = 0;
              if (v12)
              {
                if (v12 != 255)
                {
LABEL_156:
                  if (*(_BYTE *)(a1 + 264))
                  {
                    v13 = (_QWORD *)(a1 + 240);
                    while (1)
                    {
                      v13 = (_QWORD *)*v13;
                      if (!v13)
                        break;
                      sub_2396F295C(v13 + 3, a2, (uint64_t)&__p);
                      std::__fs::filesystem::__status(&__p, 0);
                      v14 = v40;
                      if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                        operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                      if (!v14 || v14 == 255)
                        return 0;
                    }
                  }
                  if (!*(_BYTE *)(a1 + 296))
                    goto LABEL_157;
                  sub_2396F295C((uint64_t *)(a1 + 272), a2, (uint64_t)&__p);
                  std::__fs::filesystem::__status(&__p, 0);
                  v15 = v40;
                  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                  result = 0;
                  if (v15)
                  {
                    if (v15 != 255)
                    {
LABEL_157:
                      if (*(_BYTE *)(a1 + 344))
                      {
                        v16 = (_QWORD *)(a1 + 320);
                        while (1)
                        {
                          v16 = (_QWORD *)*v16;
                          if (!v16)
                            break;
                          sub_2396F295C(v16 + 3, a2, (uint64_t)&__p);
                          std::__fs::filesystem::__status(&__p, 0);
                          v17 = v40;
                          if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                            operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                          if (!v17 || v17 == 255)
                            return 0;
                        }
                      }
                      if (*(_BYTE *)(a1 + 392))
                      {
                        v18 = (_QWORD *)(a1 + 368);
                        while (1)
                        {
                          v18 = (_QWORD *)*v18;
                          if (!v18)
                            break;
                          sub_2396F295C(v18 + 3, a2, (uint64_t)&__p);
                          std::__fs::filesystem::__status(&__p, 0);
                          v19 = v40;
                          if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                            operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                          if (!v19 || v19 == 255)
                            return 0;
                        }
                      }
                      if (!*(_BYTE *)(a1 + 424))
                        goto LABEL_158;
                      sub_2396F295C((uint64_t *)(a1 + 400), a2, (uint64_t)&__p);
                      std::__fs::filesystem::__status(&__p, 0);
                      v20 = v40;
                      if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                        operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                      result = 0;
                      if (v20)
                      {
                        if (v20 != 255)
                        {
LABEL_158:
                          if (*(_BYTE *)(a1 + 472))
                          {
                            v21 = (_QWORD *)(a1 + 448);
                            while (1)
                            {
                              v21 = (_QWORD *)*v21;
                              if (!v21)
                                break;
                              sub_2396F295C(v21 + 3, a2, (uint64_t)&__p);
                              std::__fs::filesystem::__status(&__p, 0);
                              v22 = v40;
                              if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                              if (!v22 || v22 == 255)
                                return 0;
                            }
                          }
                          if (!*(_BYTE *)(a1 + 504))
                            goto LABEL_159;
                          sub_2396F295C((uint64_t *)(a1 + 480), a2, (uint64_t)&__p);
                          std::__fs::filesystem::__status(&__p, 0);
                          v23 = v40;
                          if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                            operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                          result = 0;
                          if (v23)
                          {
                            if (v23 != 255)
                            {
LABEL_159:
                              if (*(_BYTE *)(a1 + 552))
                              {
                                v24 = (_QWORD *)(a1 + 528);
                                while (1)
                                {
                                  v24 = (_QWORD *)*v24;
                                  if (!v24)
                                    break;
                                  sub_2396F295C(v24 + 3, a2, (uint64_t)&__p);
                                  std::__fs::filesystem::__status(&__p, 0);
                                  v25 = v40;
                                  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                                  if (!v25 || v25 == 255)
                                    return 0;
                                }
                              }
                              if (*(_BYTE *)(a1 + 600))
                              {
                                v26 = (_QWORD *)(a1 + 576);
                                while (1)
                                {
                                  v26 = (_QWORD *)*v26;
                                  if (!v26)
                                    break;
                                  sub_2396F295C(v26 + 3, a2, (uint64_t)&__p);
                                  std::__fs::filesystem::__status(&__p, 0);
                                  v27 = v40;
                                  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                                  if (!v27 || v27 == 255)
                                    return 0;
                                }
                              }
                              if (!*(_BYTE *)(a1 + 632))
                                goto LABEL_110;
                              sub_2396F295C((uint64_t *)(a1 + 608), a2, (uint64_t)&__p);
                              std::__fs::filesystem::__status(&__p, 0);
                              v28 = v40;
                              if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                              result = 0;
                              if (v28)
                              {
                                if (v28 != 255)
                                {
LABEL_110:
                                  if (!*(_BYTE *)(a1 + 664))
                                    goto LABEL_160;
                                  sub_2396F295C((uint64_t *)(a1 + 640), a2, (uint64_t)&__p);
                                  std::__fs::filesystem::__status(&__p, 0);
                                  v29 = v40;
                                  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                                  result = 0;
                                  if (v29)
                                  {
                                    if (v29 != 255)
                                    {
LABEL_160:
                                      if (*(_BYTE *)(a1 + 712))
                                      {
                                        v30 = (_QWORD *)(a1 + 688);
                                        while (1)
                                        {
                                          v30 = (_QWORD *)*v30;
                                          if (!v30)
                                            break;
                                          sub_2396F295C(v30 + 3, a2, (uint64_t)&__p);
                                          std::__fs::filesystem::__status(&__p, 0);
                                          v31 = v40;
                                          if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                            operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                                          if (!v31 || v31 == 255)
                                            return 0;
                                        }
                                      }
                                      if (*(_BYTE *)(a1 + 760))
                                      {
                                        v32 = (_QWORD *)(a1 + 736);
                                        while (1)
                                        {
                                          v32 = (_QWORD *)*v32;
                                          if (!v32)
                                            break;
                                          sub_2396F295C(v32 + 5, a2, (uint64_t)&__p);
                                          std::__fs::filesystem::__status(&__p, 0);
                                          v33 = v40;
                                          if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                            operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                                          if (!v33 || v33 == 255)
                                            return 0;
                                        }
                                      }
                                      if (!*(_BYTE *)(a1 + 792))
                                        goto LABEL_136;
                                      sub_2396F295C((uint64_t *)(a1 + 768), a2, (uint64_t)&__p);
                                      std::__fs::filesystem::__status(&__p, 0);
                                      v34 = v40;
                                      if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                        operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                                      result = 0;
                                      if (v34)
                                      {
                                        if (v34 != 255)
                                        {
LABEL_136:
                                          if (!*(_BYTE *)(a1 + 824))
                                            goto LABEL_141;
                                          sub_2396F295C((uint64_t *)(a1 + 800), a2, (uint64_t)&__p);
                                          std::__fs::filesystem::__status(&__p, 0);
                                          v35 = v40;
                                          if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                            operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                                          result = 0;
                                          if (v35)
                                          {
                                            if (v35 != 255)
                                            {
LABEL_141:
                                              if (!*(_BYTE *)(a1 + 856))
                                                goto LABEL_161;
                                              sub_2396F295C((uint64_t *)(a1 + 832), a2, (uint64_t)&__p);
                                              std::__fs::filesystem::__status(&__p, 0);
                                              v36 = v40;
                                              if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                                operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                                              result = 0;
                                              if (v36)
                                              {
                                                if (v36 != 255)
                                                {
LABEL_161:
                                                  if (*(_BYTE *)(a1 + 888))
                                                  {
                                                    sub_2396F295C((uint64_t *)(a1 + 864), a2, (uint64_t)&__p);
                                                    std::__fs::filesystem::__status(&__p, 0);
                                                    v37 = v40;
                                                    if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                                      operator delete(__p.__pn_.__r_.__value_.__l.__data_);
                                                    return v37 != 255 && v37 != 0;
                                                  }
                                                  else
                                                  {
                                                    return 1;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_239BB42C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239BB4338(uint64_t a1, const void *a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  const __CFDictionary *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  void *value;
  std::__shared_weak_count *v20;

  v7 = *(const __CFDictionary **)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, a2))
    return;
  sub_239629634(&value, a3);
  v12 = value;
  v11 = v20;
  if (!v20)
    goto LABEL_13;
  v13 = (unint64_t *)&v20->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_13:
    if (!v12)
      goto LABEL_15;
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (v12)
LABEL_14:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, a2, value);
LABEL_15:
  v16 = v20;
  if (v20)
  {
    v17 = (unint64_t *)&v20->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
}

void sub_239BB4480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239BB4494(uint64_t a1, const void *a2, uint64_t *a3)
{
  std::__shared_weak_count *v6;
  CFMutableDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  CFMutableArrayRef v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  void *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  _QWORD *v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  void *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  void *v38[2];
  void *value;
  std::__shared_weak_count *v40;
  CFMutableArrayRef theArray[2];

  v7 = *(CFMutableDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  if (!sub_23962C8DC(*(const __CFDictionary **)a1, a2))
  {
    sub_23962BDF8((std::__shared_weak_count_vtbl **)theArray);
    v12 = theArray[0];
    v11 = (std::__shared_weak_count *)theArray[1];
    if (!theArray[1])
      goto LABEL_13;
    v13 = (unint64_t *)((char *)theArray[1] + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      if (v12)
        goto LABEL_14;
    }
    else
    {
LABEL_13:
      if (v12)
      {
LABEL_14:
        v16 = *a3;
        v17 = a3[1];
        if (*a3 != v17)
        {
          do
          {
            sub_2396299CC(&value, v16);
            v19 = value;
            v18 = v40;
            if (!v40)
              goto LABEL_20;
            v20 = (unint64_t *)&v40->__shared_owners_;
            do
              v21 = __ldxr(v20);
            while (__stxr(v21 + 1, v20));
            do
              v22 = __ldaxr(v20);
            while (__stlxr(v22 - 1, v20));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
              std::__shared_weak_count::__release_weak(v18);
              if (v19)
              {
LABEL_21:
                j__CFArrayAppendValue(theArray[0], value);
                v23 = v40;
                if (v40)
                  goto LABEL_25;
                goto LABEL_29;
              }
            }
            else
            {
LABEL_20:
              if (v19)
                goto LABEL_21;
            }
            v38[0] = 0;
            v38[1] = 0;
            v23 = v40;
            if (v40)
            {
LABEL_25:
              v24 = (unint64_t *)&v23->__shared_owners_;
              do
                v25 = __ldaxr(v24);
              while (__stlxr(v25 - 1, v24));
              if (!v25)
              {
                ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
                std::__shared_weak_count::__release_weak(v23);
              }
            }
LABEL_29:
            if (!v19)
              goto LABEL_37;
            v16 += 8;
          }
          while (v16 != v17);
        }
        *(_OWORD *)v38 = *(_OWORD *)theArray;
        v26 = theArray;
LABEL_36:
        *v26 = 0;
        v26[1] = 0;
LABEL_37:
        v27 = (std::__shared_weak_count *)theArray[1];
        if (theArray[1])
        {
          v28 = (unint64_t *)((char *)theArray[1] + 8);
          do
            v29 = __ldaxr(v28);
          while (__stlxr(v29 - 1, v28));
          if (!v29)
          {
            ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
            std::__shared_weak_count::__release_weak(v27);
          }
        }
        v31 = v38[0];
        v30 = (std::__shared_weak_count *)v38[1];
        if (!v38[1])
          goto LABEL_47;
        v32 = (unint64_t *)((char *)v38[1] + 8);
        do
          v33 = __ldxr(v32);
        while (__stxr(v33 + 1, v32));
        do
          v34 = __ldaxr(v32);
        while (__stlxr(v34 - 1, v32));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
          if (!v31)
          {
LABEL_49:
            v35 = (std::__shared_weak_count *)v38[1];
            if (v38[1])
            {
              v36 = (unint64_t *)((char *)v38[1] + 8);
              do
                v37 = __ldaxr(v36);
              while (__stlxr(v37 - 1, v36));
              if (!v37)
              {
                ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                std::__shared_weak_count::__release_weak(v35);
              }
            }
            return;
          }
        }
        else
        {
LABEL_47:
          if (!v31)
            goto LABEL_49;
        }
        j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, a2, v38[0]);
        goto LABEL_49;
      }
    }
    v26 = v38;
    goto LABEL_36;
  }
}

void sub_239BB4744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239BB4758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;

  if (a12)
  {
    p_shared_owners = (unint64_t *)&a12->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  if (a14)
  {
    v17 = (unint64_t *)&a14->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239BB47DC(uint64_t a1, const void *a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  const __CFDictionary *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  void *value;
  std::__shared_weak_count *v20;

  v7 = *(const __CFDictionary **)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, a2))
    return;
  sub_239629B4C(&value, a3);
  v12 = value;
  v11 = v20;
  if (!v20)
    goto LABEL_13;
  v13 = (unint64_t *)&v20->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_13:
    if (!v12)
      goto LABEL_15;
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (v12)
LABEL_14:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, a2, value);
LABEL_15:
  v16 = v20;
  if (v20)
  {
    v17 = (unint64_t *)&v20->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
}

void sub_239BB4924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239BB4938(uint64_t a1, const void *a2, int *a3)
{
  std::__shared_weak_count *v6;
  const __CFDictionary *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  void *value;
  std::__shared_weak_count *v20;
  int v21;

  v7 = *(const __CFDictionary **)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, a2))
    return;
  v21 = *a3;
  sub_239629634(&value, &v21);
  v12 = value;
  v11 = v20;
  if (!v20)
    goto LABEL_13;
  v13 = (unint64_t *)&v20->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_13:
    if (!v12)
      goto LABEL_15;
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (v12)
LABEL_14:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, a2, value);
LABEL_15:
  v16 = v20;
  if (v20)
  {
    v17 = (unint64_t *)&v20->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
}

void sub_239BB4A88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239BB4A9C(uint64_t a1, const void *a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  const __CFDictionary *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  void *value;
  std::__shared_weak_count *v20;

  v7 = *(const __CFDictionary **)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, a2))
    return;
  sub_2396299CC(&value, a3);
  v12 = value;
  v11 = v20;
  if (!v20)
    goto LABEL_13;
  v13 = (unint64_t *)&v20->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_13:
    if (!v12)
      goto LABEL_15;
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (v12)
LABEL_14:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, a2, value);
LABEL_15:
  v16 = v20;
  if (v20)
  {
    v17 = (unint64_t *)&v20->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
}

void sub_239BB4BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239BB4BF8(uint64_t a1, uint64_t a2)
{
  const char *v4;
  const char *v5;
  size_t v6;
  size_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  int32x4_t v11;
  double v12;
  int32x4_t v13;
  const void *v14;
  std::__shared_weak_count *v15;
  const __CFDictionary *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  void *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unsigned __int8 *v31;
  size_t v32;
  size_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  const void *v37;
  std::__shared_weak_count *v38;
  const __CFDictionary *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  const char *v54;
  size_t v55;
  size_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  const char *v63;
  size_t v64;
  size_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  const char *v72;
  size_t v73;
  size_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  int8x16_t v78;
  double v79;
  int32x4_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  const char *v84;
  const char *v85;
  size_t v86;
  size_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  int8x16_t v91;
  double v92;
  int32x4_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  const char *v97;
  const char *v98;
  size_t v99;
  size_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  double v105;
  int16x8_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  const char *v110;
  const char *v111;
  size_t v112;
  void *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  int8x16_t v117;
  double v118;
  int32x4_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  const char *v123;
  const char *v124;
  size_t v125;
  void *v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  const char *v133;
  size_t v134;
  size_t v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  const char *v142;
  size_t v143;
  void *v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  int8x16_t v148;
  double v149;
  int32x4_t v150;
  const char *v151;
  const char *v152;
  size_t v153;
  size_t v154;
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  int16x8_t v158;
  const void *v159;
  std::__shared_weak_count *v160;
  CFMutableDictionaryRef v161;
  unint64_t *v162;
  unint64_t v163;
  unint64_t v164;
  std::__shared_weak_count *v165;
  void *v166;
  unint64_t *v167;
  unint64_t v168;
  unint64_t v169;
  std::__shared_weak_count *v170;
  unint64_t *v171;
  unint64_t v172;
  std::__shared_weak_count *v173;
  unint64_t *v174;
  unint64_t v175;
  const char *v176;
  const char *v177;
  size_t v178;
  size_t v179;
  _BYTE *v180;
  uint64_t v181;
  uint64_t v182;
  const void *v183;
  std::__shared_weak_count *v184;
  CFMutableDictionaryRef v185;
  unint64_t *v186;
  unint64_t v187;
  unint64_t v188;
  std::__shared_weak_count *v189;
  uint64_t v190;
  unint64_t *v191;
  unint64_t v192;
  unint64_t v193;
  std::__shared_weak_count *v194;
  unint64_t *v195;
  unint64_t v196;
  std::__shared_weak_count *v197;
  unint64_t *v198;
  unint64_t v199;
  const char *v200;
  const char *v201;
  size_t v202;
  size_t v203;
  _BYTE *v204;
  uint64_t v205;
  uint64_t v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  const char *v210;
  size_t v211;
  size_t v212;
  _BYTE *v213;
  uint64_t v214;
  uint64_t v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  const char *v219;
  size_t v220;
  size_t v221;
  _BYTE *v222;
  uint64_t v223;
  uint64_t v224;
  std::__shared_weak_count *v225;
  unint64_t *v226;
  unint64_t v227;
  int8x16_t v228;
  double v229;
  int32x4_t v230;
  std::__shared_weak_count *v231;
  unint64_t *v232;
  unint64_t v233;
  std::__shared_weak_count *v234;
  unint64_t *v235;
  unint64_t v236;
  const char *v237;
  const char *v238;
  size_t v239;
  void *v240;
  void *v241;
  uint64_t v242;
  uint64_t v243;
  const char *v244;
  size_t v245;
  void *v246;
  void *v247;
  uint64_t v248;
  uint64_t v249;
  int8x16_t v250;
  double v251;
  int32x4_t v252;
  std::__shared_weak_count *v253;
  unint64_t *v254;
  unint64_t v255;
  const char *v256;
  const char *v257;
  size_t v258;
  size_t v259;
  _BYTE *v260;
  uint64_t v261;
  uint64_t v262;
  std::__shared_weak_count *v263;
  unint64_t *v264;
  unint64_t v265;
  int8x16_t v266;
  double v267;
  int32x4_t v268;
  std::__shared_weak_count *v269;
  unint64_t *v270;
  unint64_t v271;
  std::__shared_weak_count *v272;
  unint64_t *v273;
  unint64_t v274;
  const char *v275;
  const char *v276;
  size_t v277;
  void *v278;
  void *v279;
  uint64_t v280;
  uint64_t v281;
  int8x8_t *v282;
  size_t v283;
  size_t v284;
  _BYTE *v285;
  uint64_t v286;
  uint64_t v287;
  std::__shared_weak_count *v288;
  unint64_t *v289;
  unint64_t v290;
  const char *v291;
  size_t v292;
  size_t v293;
  _BYTE *v294;
  uint64_t v295;
  uint64_t v296;
  int8x16_t v297;
  double v298;
  int32x4_t v299;
  std::__shared_weak_count *v300;
  unint64_t *v301;
  unint64_t v302;
  const char *v303;
  const char *v304;
  size_t v305;
  size_t v306;
  _BYTE *v307;
  uint64_t v308;
  uint64_t v309;
  int8x16_t v310;
  double v311;
  int32x4_t v312;
  std::__shared_weak_count *v313;
  unint64_t *v314;
  unint64_t v315;
  const char *v316;
  const char *v317;
  size_t v318;
  size_t v319;
  _BYTE *v320;
  uint64_t v321;
  uint64_t v322;
  double v323;
  double v324;
  int16x8_t v325;
  std::__shared_weak_count *v326;
  unint64_t *v327;
  unint64_t v328;
  const char *v329;
  const char *v330;
  size_t v331;
  size_t v332;
  _BYTE *v333;
  uint64_t v334;
  uint64_t v335;
  double v336;
  double v337;
  int16x8_t v338;
  std::__shared_weak_count *v339;
  unint64_t *v340;
  unint64_t v341;
  const char *v342;
  const char *v343;
  size_t v344;
  size_t v345;
  _BYTE *v346;
  uint64_t v347;
  uint64_t v348;
  std::__shared_weak_count *v349;
  unint64_t *v350;
  unint64_t v351;
  std::__shared_weak_count *v352;
  unint64_t *v353;
  unint64_t v354;
  std::__shared_weak_count *v355;
  unint64_t *v356;
  unint64_t v357;
  CFMutableDictionaryRef theDict[2];
  int v359;
  void *__p[2];
  unint64_t v361;
  uint64_t v362;
  int v363;
  char v364;
  void *value[4];
  _BYTE __dst[32];
  uint64_t v367;
  _BYTE v368[24];
  int8x8_t v369[3];

  v369[2] = *(int8x8_t *)MEMORY[0x24BDAC8D0];
  sub_23962C714((_OWORD *)a1);
  *(_OWORD *)__p = xmmword_239F0C200;
  sub_23950F8E4((uint64_t)__p);
  v5 = v4;
  v6 = strlen(v4);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = operator new(v9 + 1);
    *(_QWORD *)&__dst[8] = v7;
    *(_QWORD *)&__dst[16] = v10 | 0x8000000000000000;
    *(_QWORD *)__dst = v8;
  }
  else
  {
    __dst[23] = v6;
    v8 = __dst;
    if (!v6)
      goto LABEL_9;
  }
  memmove(v8, v5, v7);
LABEL_9:
  v8[v7] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v368);
  v14 = *(const void **)v368;
  v16 = *(const __CFDictionary **)a1;
  v15 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v15)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v15->__shared_owners_;
  do
    v18 = __ldxr(p_shared_owners);
  while (__stxr(v18 + 1, p_shared_owners));
  do
    v19 = __ldaxr(p_shared_owners);
  while (__stlxr(v19 - 1, p_shared_owners));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    if (!v16)
      goto LABEL_29;
  }
  else
  {
LABEL_14:
    if (!v16)
      goto LABEL_29;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, v14))
    goto LABEL_29;
  v369[0].i32[0] = *(_DWORD *)(a2 + 4);
  sub_239629634(value, v369);
  v21 = value[0];
  v20 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v22 = (unint64_t *)((char *)value[1] + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!v21)
        goto LABEL_23;
      goto LABEL_22;
    }
  }
  if (v21)
LABEL_22:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, v14, value[0]);
LABEL_23:
  v25 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v26 = (unint64_t *)((char *)value[1] + 8);
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
LABEL_29:
  v28 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_33;
  v29 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v30 = __ldaxr(v29);
  while (__stlxr(v30 - 1, v29));
  if (v30)
  {
LABEL_33:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_35;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
  std::__shared_weak_count::__release_weak(v28);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_34:
    operator delete(*(void **)__dst);
LABEL_35:
  strcpy((char *)value, "+XJF[GNtDYONYBELtFDON");
  v31 = sub_239A90BEC((unsigned __int8 *)value, *(int8x16_t *)"+XJF[GNtDYONYBELtFDON", v11, v12, v13);
  v32 = strlen((const char *)v31);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    *(_QWORD *)&__dst[8] = v33;
    *(_QWORD *)&__dst[16] = v36 | 0x8000000000000000;
    *(_QWORD *)__dst = v34;
  }
  else
  {
    __dst[23] = v32;
    v34 = __dst;
    if (!v32)
      goto LABEL_43;
  }
  memmove(v34, v31, v33);
LABEL_43:
  v34[v33] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  v37 = __p[0];
  v39 = *(const __CFDictionary **)a1;
  v38 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v38)
    goto LABEL_48;
  v40 = (unint64_t *)&v38->__shared_owners_;
  do
    v41 = __ldxr(v40);
  while (__stxr(v41 + 1, v40));
  do
    v42 = __ldaxr(v40);
  while (__stlxr(v42 - 1, v40));
  if (!v42)
  {
    ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
    std::__shared_weak_count::__release_weak(v38);
    if (!v39)
      goto LABEL_65;
  }
  else
  {
LABEL_48:
    if (!v39)
      goto LABEL_65;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, v37))
    goto LABEL_65;
  v369[0].i32[0] = *(_DWORD *)a2;
  sub_239629634(v368, v369);
  v44 = *(_QWORD *)v368;
  v43 = *(std::__shared_weak_count **)&v368[8];
  if (*(_QWORD *)&v368[8])
  {
    v45 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
    do
      v46 = __ldxr(v45);
    while (__stxr(v46 + 1, v45));
    do
      v47 = __ldaxr(v45);
    while (__stlxr(v47 - 1, v45));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
      if (!v44)
        goto LABEL_57;
      goto LABEL_56;
    }
  }
  if (v44)
LABEL_56:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, v37, *(const void **)v368);
LABEL_57:
  v48 = *(std::__shared_weak_count **)&v368[8];
  if (*(_QWORD *)&v368[8])
  {
    v49 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
    do
      v50 = __ldaxr(v49);
    while (__stlxr(v50 - 1, v49));
    if (!v50)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
  }
LABEL_65:
  v51 = (std::__shared_weak_count *)__p[1];
  if (!__p[1])
    goto LABEL_69;
  v52 = (unint64_t *)((char *)__p[1] + 8);
  do
    v53 = __ldaxr(v52);
  while (__stlxr(v53 - 1, v52));
  if (v53)
  {
LABEL_69:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_70;
  }
  ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
  std::__shared_weak_count::__release_weak(v51);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_70:
    operator delete(*(void **)__dst);
LABEL_71:
  *(_QWORD *)v368 = 0x100A163D0F170C62;
  v368[12] = 0;
  *(_DWORD *)&v368[8] = 285606663;
  v54 = sub_239510ECC((uint64_t)v368);
  v55 = strlen(v54);
  if (v55 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v56 = v55;
  if (v55 >= 0x17)
  {
    v58 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v55 | 7) != 0x17)
      v58 = v55 | 7;
    v59 = v58 + 1;
    v57 = operator new(v58 + 1);
    *(_QWORD *)&__dst[8] = v56;
    *(_QWORD *)&__dst[16] = v59 | 0x8000000000000000;
    *(_QWORD *)__dst = v57;
  }
  else
  {
    __dst[23] = v55;
    v57 = __dst;
    if (!v55)
      goto LABEL_79;
  }
  memmove(v57, v54, v56);
LABEL_79:
  v57[v56] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  sub_2396B4148(a1, value[0], a2 + 8);
  v60 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_83;
  v61 = (unint64_t *)((char *)value[1] + 8);
  do
    v62 = __ldaxr(v61);
  while (__stlxr(v62 - 1, v61));
  if (v62)
  {
LABEL_83:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_85;
    goto LABEL_84;
  }
  ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
  std::__shared_weak_count::__release_weak(v60);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_84:
    operator delete(*(void **)__dst);
LABEL_85:
  *(_QWORD *)v368 = 0x636F7D51637B600ELL;
  strcpy(&v368[8], "~bk}");
  v63 = sub_239510ECC((uint64_t)v368);
  v64 = strlen(v63);
  if (v64 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v65 = v64;
  if (v64 >= 0x17)
  {
    v67 = (v64 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v64 | 7) != 0x17)
      v67 = v64 | 7;
    v68 = v67 + 1;
    v66 = operator new(v67 + 1);
    *(_QWORD *)&__dst[8] = v65;
    *(_QWORD *)&__dst[16] = v68 | 0x8000000000000000;
    *(_QWORD *)__dst = v66;
  }
  else
  {
    __dst[23] = v64;
    v66 = __dst;
    if (!v64)
      goto LABEL_93;
  }
  memmove(v66, v63, v65);
LABEL_93:
  v66[v65] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  sub_239BB4338(a1, value[0], a2 + 108);
  v69 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_97;
  v70 = (unint64_t *)((char *)value[1] + 8);
  do
    v71 = __ldaxr(v70);
  while (__stlxr(v71 - 1, v70));
  if (v71)
  {
LABEL_97:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_99;
    goto LABEL_98;
  }
  ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
  std::__shared_weak_count::__release_weak(v69);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_98:
    operator delete(*(void **)__dst);
LABEL_99:
  *(_QWORD *)v368 = 0x2F3A3604362E355BLL;
  strcpy(&v368[8], "83>(");
  v72 = sub_239510ECC((uint64_t)v368);
  v73 = strlen(v72);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    *(_QWORD *)&__dst[8] = v74;
    *(_QWORD *)&__dst[16] = v77 | 0x8000000000000000;
    *(_QWORD *)__dst = v75;
  }
  else
  {
    __dst[23] = v73;
    v75 = __dst;
    if (!v73)
      goto LABEL_107;
  }
  memmove(v75, v72, v74);
LABEL_107:
  v75[v74] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  sub_239BB4338(a1, value[0], a2 + 112);
  v81 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_111;
  v82 = (unint64_t *)((char *)value[1] + 8);
  do
    v83 = __ldaxr(v82);
  while (__stlxr(v83 - 1, v82));
  if (v83)
  {
LABEL_111:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_113;
    goto LABEL_112;
  }
  ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
  std::__shared_weak_count::__release_weak(v81);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_112:
    operator delete(*(void **)__dst);
LABEL_113:
  *(_OWORD *)value = xmmword_239F10D5B;
  *(void **)((char *)&value[1] + 5) = (void *)0x7E7143656E7371;
  sub_2396EFB50((uint64_t)value, (int32x4_t)xmmword_239F10D5B, v78, v79, v80);
  v85 = v84;
  v86 = strlen(v84);
  if (v86 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v87 = v86;
  if (v86 >= 0x17)
  {
    v89 = (v86 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v86 | 7) != 0x17)
      v89 = v86 | 7;
    v90 = v89 + 1;
    v88 = operator new(v89 + 1);
    *(_QWORD *)&__dst[8] = v87;
    *(_QWORD *)&__dst[16] = v90 | 0x8000000000000000;
    *(_QWORD *)__dst = v88;
  }
  else
  {
    __dst[23] = v86;
    v88 = __dst;
    if (!v86)
      goto LABEL_121;
  }
  memmove(v88, v85, v87);
LABEL_121:
  v88[v87] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v368);
  sub_239BB47DC(a1, *(const void **)v368, a2 + 104);
  v94 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_125;
  v95 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v96 = __ldaxr(v95);
  while (__stlxr(v96 - 1, v95));
  if (v96)
  {
LABEL_125:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_127;
    goto LABEL_126;
  }
  ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
  std::__shared_weak_count::__release_weak(v94);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_126:
    operator delete(*(void **)__dst);
LABEL_127:
  strcpy((char *)value, "+XJ]NtM^GGtYJE@tGBX_");
  sub_2396EFB50((uint64_t)value, *(int32x4_t *)"+XJ]NtM^GGtYJE@tGBX_", v91, v92, v93);
  v98 = v97;
  v99 = strlen(v97);
  if (v99 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v100 = v99;
  if (v99 >= 0x17)
  {
    v102 = (v99 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v99 | 7) != 0x17)
      v102 = v99 | 7;
    v103 = v102 + 1;
    v101 = operator new(v102 + 1);
    *(_QWORD *)&__dst[8] = v100;
    *(_QWORD *)&__dst[16] = v103 | 0x8000000000000000;
    *(_QWORD *)__dst = v101;
  }
  else
  {
    __dst[23] = v99;
    v101 = __dst;
    if (!v99)
      goto LABEL_135;
  }
  memmove(v101, v98, v100);
LABEL_135:
  v101[v100] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v368);
  sub_2396B4EAC(a1, *(const void **)v368, (_BYTE *)(a2 + 116));
  v107 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_139;
  v108 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v109 = __ldaxr(v108);
  while (__stlxr(v109 - 1, v108));
  if (v109)
  {
LABEL_139:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_141;
    goto LABEL_140;
  }
  ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
  std::__shared_weak_count::__release_weak(v107);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_140:
    operator delete(*(void **)__dst);
LABEL_141:
  *(_OWORD *)__dst = xmmword_239F10D85;
  *(int16x8_t *)&__dst[16] = xmmword_239F10D95;
  v367 = 0x1D100714180305;
  sub_2396F02A0(__dst, 1.01694926e-173, xmmword_239F10D95, v104, v105, v106);
  v111 = v110;
  v112 = strlen(v110);
  if (v112 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v113 = (void *)v112;
  if (v112 >= 0x17)
  {
    v115 = (v112 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v112 | 7) != 0x17)
      v115 = v112 | 7;
    v116 = v115 + 1;
    v114 = operator new(v115 + 1);
    value[1] = v113;
    value[2] = (void *)(v116 | 0x8000000000000000);
    value[0] = v114;
  }
  else
  {
    HIBYTE(value[2]) = v112;
    v114 = value;
    if (!v112)
      goto LABEL_149;
  }
  memmove(v114, v111, (size_t)v113);
LABEL_149:
  *((_BYTE *)v113 + (_QWORD)v114) = 0;
  sub_239629EF4((uint64_t)value, (CFStringRef *)v368);
  sub_239BB4A9C(a1, *(const void **)v368, a2 + 120);
  v120 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_153;
  v121 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v122 = __ldaxr(v121);
  while (__stlxr(v122 - 1, v121));
  if (v122)
  {
LABEL_153:
    if ((SHIBYTE(value[2]) & 0x80000000) == 0)
      goto LABEL_155;
    goto LABEL_154;
  }
  ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
  std::__shared_weak_count::__release_weak(v120);
  if (SHIBYTE(value[2]) < 0)
LABEL_154:
    operator delete(value[0]);
LABEL_155:
  *(_OWORD *)__dst = xmmword_239F10DAD;
  *(_OWORD *)&__dst[9] = *(__int128 *)((char *)&xmmword_239F10DAD + 9);
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F10DAD + 9), v117, v118, v119);
  v124 = v123;
  v125 = strlen(v123);
  if (v125 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v126 = (void *)v125;
  if (v125 >= 0x17)
  {
    v128 = (v125 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v125 | 7) != 0x17)
      v128 = v125 | 7;
    v129 = v128 + 1;
    v127 = operator new(v128 + 1);
    value[1] = v126;
    value[2] = (void *)(v129 | 0x8000000000000000);
    value[0] = v127;
  }
  else
  {
    HIBYTE(value[2]) = v125;
    v127 = value;
    if (!v125)
      goto LABEL_163;
  }
  memmove(v127, v124, (size_t)v126);
LABEL_163:
  *((_BYTE *)v126 + (_QWORD)v127) = 0;
  sub_239629EF4((uint64_t)value, (CFStringRef *)v368);
  sub_2396B4EAC(a1, *(const void **)v368, (_BYTE *)(a2 + 117));
  v130 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_167;
  v131 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v132 = __ldaxr(v131);
  while (__stlxr(v132 - 1, v131));
  if (v132)
  {
LABEL_167:
    if ((SHIBYTE(value[2]) & 0x80000000) == 0)
      goto LABEL_169;
    goto LABEL_168;
  }
  ((void (*)(std::__shared_weak_count *))v130->__on_zero_shared)(v130);
  std::__shared_weak_count::__release_weak(v130);
  if (SHIBYTE(value[2]) < 0)
LABEL_168:
    operator delete(value[0]);
LABEL_169:
  strcpy(v368, "5FTCPjXZQPY");
  v133 = sub_23958E4C8((uint64_t)v368);
  v134 = strlen(v133);
  if (v134 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v135 = v134;
  if (v134 >= 0x17)
  {
    v137 = (v134 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v134 | 7) != 0x17)
      v137 = v134 | 7;
    v138 = v137 + 1;
    v136 = operator new(v137 + 1);
    *(_QWORD *)&__dst[8] = v135;
    *(_QWORD *)&__dst[16] = v138 | 0x8000000000000000;
    *(_QWORD *)__dst = v136;
  }
  else
  {
    __dst[23] = v134;
    v136 = __dst;
    if (!v134)
      goto LABEL_177;
  }
  memmove(v136, v133, v135);
LABEL_177:
  v136[v135] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  sub_2396B4EAC(a1, value[0], (_BYTE *)(a2 + 152));
  v139 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_181;
  v140 = (unint64_t *)((char *)value[1] + 8);
  do
    v141 = __ldaxr(v140);
  while (__stlxr(v141 - 1, v140));
  if (v141)
  {
LABEL_181:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_183;
    goto LABEL_182;
  }
  ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
  std::__shared_weak_count::__release_weak(v139);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_182:
    operator delete(*(void **)__dst);
LABEL_183:
  v362 = 0x340C020D0504086BLL;
  v364 = 0;
  v363 = 252315421;
  v142 = sub_239510ECC((uint64_t)&v362);
  v143 = strlen(v142);
  if (v143 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v144 = (void *)v143;
  if (v143 >= 0x17)
  {
    v146 = (v143 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v143 | 7) != 0x17)
      v146 = v143 | 7;
    v147 = v146 + 1;
    v145 = operator new(v146 + 1);
    value[1] = v144;
    value[2] = (void *)(v147 | 0x8000000000000000);
    value[0] = v145;
    goto LABEL_190;
  }
  HIBYTE(value[2]) = v143;
  v145 = value;
  if (v143)
LABEL_190:
    memmove(v145, v142, (size_t)v144);
  *((_BYTE *)v144 + (_QWORD)v145) = 0;
  sub_23962C714(theDict);
  *(_OWORD *)v368 = xmmword_239F10C9A;
  strcpy(&v368[16], "}{z");
  sub_23958E55C((uint64_t)v368, (int32x4_t)xmmword_239F10C9A, v148, v149, v150);
  v152 = v151;
  v153 = strlen(v151);
  if (v153 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v154 = v153;
  if (v153 >= 0x17)
  {
    v156 = (v153 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v153 | 7) != 0x17)
      v156 = v153 | 7;
    v157 = v156 + 1;
    v155 = operator new(v156 + 1);
    *(_QWORD *)&__dst[8] = v154;
    *(_QWORD *)&__dst[16] = v157 | 0x8000000000000000;
    *(_QWORD *)__dst = v155;
  }
  else
  {
    __dst[23] = v153;
    v155 = __dst;
    if (!v153)
      goto LABEL_199;
  }
  memmove(v155, v152, v154);
LABEL_199:
  v155[v154] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v369);
  v159 = (const void *)v369[0];
  v161 = theDict[0];
  v160 = (std::__shared_weak_count *)theDict[1];
  if (!theDict[1])
    goto LABEL_204;
  v162 = (unint64_t *)((char *)theDict[1] + 8);
  do
    v163 = __ldxr(v162);
  while (__stxr(v163 + 1, v162));
  do
    v164 = __ldaxr(v162);
  while (__stlxr(v164 - 1, v162));
  if (!v164)
  {
    ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
    std::__shared_weak_count::__release_weak(v160);
    if (!v161)
      goto LABEL_237;
  }
  else
  {
LABEL_204:
    if (!v161)
      goto LABEL_237;
  }
  if (sub_23962C8DC(theDict[0], v159))
    goto LABEL_237;
  v359 = *(_DWORD *)(a2 + 12);
  sub_239629634(__p, &v359);
  v166 = __p[0];
  v165 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    v167 = (unint64_t *)((char *)__p[1] + 8);
    do
      v168 = __ldxr(v167);
    while (__stxr(v168 + 1, v167));
    do
      v169 = __ldaxr(v167);
    while (__stlxr(v169 - 1, v167));
    if (!v169)
    {
      ((void (*)(std::__shared_weak_count *))v165->__on_zero_shared)(v165);
      std::__shared_weak_count::__release_weak(v165);
      if (!v166)
        goto LABEL_213;
      goto LABEL_212;
    }
  }
  if (v166)
LABEL_212:
    j__CFDictionaryAddValue(theDict[0], v159, __p[0]);
LABEL_213:
  v170 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    v171 = (unint64_t *)((char *)__p[1] + 8);
    do
      v172 = __ldaxr(v171);
    while (__stlxr(v172 - 1, v171));
    if (!v172)
    {
      ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
      std::__shared_weak_count::__release_weak(v170);
    }
  }
LABEL_237:
  v173 = (std::__shared_weak_count *)v369[1];
  if (!*(_QWORD *)&v369[1])
    goto LABEL_241;
  v174 = (unint64_t *)(*(_QWORD *)&v369[1] + 8);
  do
    v175 = __ldaxr(v174);
  while (__stlxr(v175 - 1, v174));
  if (v175)
  {
LABEL_241:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_243;
    goto LABEL_242;
  }
  ((void (*)(std::__shared_weak_count *))v173->__on_zero_shared)(v173);
  std::__shared_weak_count::__release_weak(v173);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_242:
    operator delete(*(void **)__dst);
LABEL_243:
  v369[0] = (int8x8_t)0x23331F24212C3640;
  strcpy((char *)&v369[1], "/2).'");
  sub_23971A32C((uint64_t)v369, v158);
  v177 = v176;
  v178 = strlen(v176);
  if (v178 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v179 = v178;
  if (v178 >= 0x17)
  {
    v181 = (v178 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v178 | 7) != 0x17)
      v181 = v178 | 7;
    v182 = v181 + 1;
    v180 = operator new(v181 + 1);
    *(_QWORD *)&__dst[8] = v179;
    *(_QWORD *)&__dst[16] = v182 | 0x8000000000000000;
    *(_QWORD *)__dst = v180;
  }
  else
  {
    __dst[23] = v178;
    v180 = __dst;
    if (!v178)
      goto LABEL_251;
  }
  memmove(v180, v177, v179);
LABEL_251:
  v180[v179] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  v183 = __p[0];
  v185 = theDict[0];
  v184 = (std::__shared_weak_count *)theDict[1];
  if (!theDict[1])
    goto LABEL_256;
  v186 = (unint64_t *)((char *)theDict[1] + 8);
  do
    v187 = __ldxr(v186);
  while (__stxr(v187 + 1, v186));
  do
    v188 = __ldaxr(v186);
  while (__stlxr(v188 - 1, v186));
  if (!v188)
  {
    ((void (*)(std::__shared_weak_count *))v184->__on_zero_shared)(v184);
    std::__shared_weak_count::__release_weak(v184);
    if (!v185)
      goto LABEL_273;
  }
  else
  {
LABEL_256:
    if (!v185)
      goto LABEL_273;
  }
  if (sub_23962C8DC(theDict[0], v183))
    goto LABEL_273;
  v359 = *(_DWORD *)(a2 + 16);
  sub_239629634(v368, &v359);
  v190 = *(_QWORD *)v368;
  v189 = *(std::__shared_weak_count **)&v368[8];
  if (*(_QWORD *)&v368[8])
  {
    v191 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
    do
      v192 = __ldxr(v191);
    while (__stxr(v192 + 1, v191));
    do
      v193 = __ldaxr(v191);
    while (__stlxr(v193 - 1, v191));
    if (!v193)
    {
      ((void (*)(std::__shared_weak_count *))v189->__on_zero_shared)(v189);
      std::__shared_weak_count::__release_weak(v189);
      if (!v190)
        goto LABEL_265;
      goto LABEL_264;
    }
  }
  if (v190)
LABEL_264:
    j__CFDictionaryAddValue(theDict[0], v183, *(const void **)v368);
LABEL_265:
  v194 = *(std::__shared_weak_count **)&v368[8];
  if (*(_QWORD *)&v368[8])
  {
    v195 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
    do
      v196 = __ldaxr(v195);
    while (__stlxr(v196 - 1, v195));
    if (!v196)
    {
      ((void (*)(std::__shared_weak_count *))v194->__on_zero_shared)(v194);
      std::__shared_weak_count::__release_weak(v194);
    }
  }
LABEL_273:
  v197 = (std::__shared_weak_count *)__p[1];
  if (!__p[1])
    goto LABEL_277;
  v198 = (unint64_t *)((char *)__p[1] + 8);
  do
    v199 = __ldaxr(v198);
  while (__stlxr(v199 - 1, v198));
  if (v199)
  {
LABEL_277:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_279;
    goto LABEL_278;
  }
  ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
  std::__shared_weak_count::__release_weak(v197);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_278:
    operator delete(*(void **)__dst);
LABEL_279:
  __p[0] = (void *)0x9130F241016087BLL;
  BYTE6(__p[1]) = 0;
  WORD2(__p[1]) = 7959;
  LODWORD(__p[1]) = 336791582;
  sub_23958E5E0((uint64_t)__p);
  v201 = v200;
  v202 = strlen(v200);
  if (v202 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v203 = v202;
  if (v202 >= 0x17)
  {
    v205 = (v202 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v202 | 7) != 0x17)
      v205 = v202 | 7;
    v206 = v205 + 1;
    v204 = operator new(v205 + 1);
    *(_QWORD *)&__dst[8] = v203;
    *(_QWORD *)&__dst[16] = v206 | 0x8000000000000000;
    *(_QWORD *)__dst = v204;
  }
  else
  {
    __dst[23] = v202;
    v204 = __dst;
    if (!v202)
      goto LABEL_287;
  }
  memmove(v204, v201, v203);
LABEL_287:
  v204[v203] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v368);
  sub_239BB47DC((uint64_t)theDict, *(const void **)v368, a2 + 20);
  v207 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_291;
  v208 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v209 = __ldaxr(v208);
  while (__stlxr(v209 - 1, v208));
  if (v209)
  {
LABEL_291:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_293;
    goto LABEL_292;
  }
  ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
  std::__shared_weak_count::__release_weak(v207);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_292:
    operator delete(*(void **)__dst);
LABEL_293:
  __p[0] = (void *)0x7A627D5266607E0DLL;
  BYTE2(__p[1]) = 0;
  LOWORD(__p[1]) = 32616;
  v210 = (const char *)sub_23958E518((uint64_t)__p);
  v211 = strlen(v210);
  if (v211 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v212 = v211;
  if (v211 >= 0x17)
  {
    v214 = (v211 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v211 | 7) != 0x17)
      v214 = v211 | 7;
    v215 = v214 + 1;
    v213 = operator new(v214 + 1);
    *(_QWORD *)&__dst[8] = v212;
    *(_QWORD *)&__dst[16] = v215 | 0x8000000000000000;
    *(_QWORD *)__dst = v213;
  }
  else
  {
    __dst[23] = v211;
    v213 = __dst;
    if (!v211)
      goto LABEL_301;
  }
  memmove(v213, v210, v212);
LABEL_301:
  v213[v212] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v368);
  sub_239BB47DC((uint64_t)theDict, *(const void **)v368, a2 + 24);
  v216 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_305;
  v217 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v218 = __ldaxr(v217);
  while (__stlxr(v218 - 1, v217));
  if (v218)
  {
LABEL_305:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_307;
    goto LABEL_306;
  }
  ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
  std::__shared_weak_count::__release_weak(v216);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_306:
    operator delete(*(void **)__dst);
LABEL_307:
  strcpy((char *)__p, "\"CRRN[}RAC");
  v219 = (const char *)sub_23958E518((uint64_t)__p);
  v220 = strlen(v219);
  if (v220 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v221 = v220;
  if (v220 >= 0x17)
  {
    v223 = (v220 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v220 | 7) != 0x17)
      v223 = v220 | 7;
    v224 = v223 + 1;
    v222 = operator new(v223 + 1);
    *(_QWORD *)&__dst[8] = v221;
    *(_QWORD *)&__dst[16] = v224 | 0x8000000000000000;
    *(_QWORD *)__dst = v222;
  }
  else
  {
    __dst[23] = v220;
    v222 = __dst;
    if (!v220)
      goto LABEL_315;
  }
  memmove(v222, v219, v221);
LABEL_315:
  v222[v221] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v368);
  sub_2396B4EAC((uint64_t)theDict, *(const void **)v368, (_BYTE *)(a2 + 28));
  v225 = *(std::__shared_weak_count **)&v368[8];
  if (*(_QWORD *)&v368[8])
  {
    v226 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
    do
      v227 = __ldaxr(v226);
    while (__stlxr(v227 - 1, v226));
    if (!v227)
    {
      ((void (*)(std::__shared_weak_count *))v225->__on_zero_shared)(v225);
      std::__shared_weak_count::__release_weak(v225);
      if ((__dst[23] & 0x80000000) == 0)
        goto LABEL_321;
      goto LABEL_320;
    }
  }
  if ((__dst[23] & 0x80000000) != 0)
LABEL_320:
    operator delete(*(void **)__dst);
LABEL_321:
  sub_239629EF4((uint64_t)value, (CFStringRef *)__dst);
  sub_239BB7018(a1, *(const void **)__dst, (uint64_t)theDict);
  v231 = *(std::__shared_weak_count **)&__dst[8];
  if (*(_QWORD *)&__dst[8])
  {
    v232 = (unint64_t *)(*(_QWORD *)&__dst[8] + 8);
    do
      v233 = __ldaxr(v232);
    while (__stlxr(v233 - 1, v232));
    if (!v233)
    {
      ((void (*)(std::__shared_weak_count *))v231->__on_zero_shared)(v231);
      std::__shared_weak_count::__release_weak(v231);
    }
  }
  v234 = (std::__shared_weak_count *)theDict[1];
  if (!theDict[1])
    goto LABEL_330;
  v235 = (unint64_t *)((char *)theDict[1] + 8);
  do
    v236 = __ldaxr(v235);
  while (__stlxr(v236 - 1, v235));
  if (v236)
  {
LABEL_330:
    if ((SHIBYTE(value[2]) & 0x80000000) == 0)
      goto LABEL_332;
    goto LABEL_331;
  }
  ((void (*)(std::__shared_weak_count *))v234->__on_zero_shared)(v234);
  std::__shared_weak_count::__release_weak(v234);
  if (SHIBYTE(value[2]) < 0)
LABEL_331:
    operator delete(value[0]);
LABEL_332:
  *(_OWORD *)__dst = xmmword_239F10DC6;
  *(_OWORD *)&__dst[13] = *(__int128 *)((char *)&xmmword_239F10DC6 + 13);
  sub_2396EFD48((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F10DC6 + 13), v228, v229, v230);
  v238 = v237;
  v239 = strlen(v237);
  if (v239 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v240 = (void *)v239;
  if (v239 >= 0x17)
  {
    v242 = (v239 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v239 | 7) != 0x17)
      v242 = v239 | 7;
    v243 = v242 + 1;
    v241 = operator new(v242 + 1);
    __p[1] = v240;
    v361 = v243 | 0x8000000000000000;
    __p[0] = v241;
    goto LABEL_339;
  }
  HIBYTE(v361) = v239;
  v241 = __p;
  if (v239)
LABEL_339:
    memmove(v241, v238, (size_t)v240);
  *((_BYTE *)v240 + (_QWORD)v241) = 0;
  sub_23962C714(theDict);
  v369[0] = (int8x8_t)0x12070B390B130866;
  v369[1].i8[4] = 0;
  v369[1].i32[0] = 352521733;
  v244 = sub_239510ECC((uint64_t)v369);
  v245 = strlen(v244);
  if (v245 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v246 = (void *)v245;
  if (v245 >= 0x17)
  {
    v248 = (v245 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v245 | 7) != 0x17)
      v248 = v245 | 7;
    v249 = v248 + 1;
    v247 = operator new(v248 + 1);
    value[1] = v246;
    value[2] = (void *)(v249 | 0x8000000000000000);
    value[0] = v247;
  }
  else
  {
    HIBYTE(value[2]) = v245;
    v247 = value;
    if (!v245)
      goto LABEL_348;
  }
  memmove(v247, v244, (size_t)v246);
LABEL_348:
  *((_BYTE *)v246 + (_QWORD)v247) = 0;
  sub_239629EF4((uint64_t)value, (CFStringRef *)v368);
  sub_239BB4A9C((uint64_t)theDict, *(const void **)v368, a2 + 48);
  v253 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_352;
  v254 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v255 = __ldaxr(v254);
  while (__stlxr(v255 - 1, v254));
  if (v255)
  {
LABEL_352:
    if ((SHIBYTE(value[2]) & 0x80000000) == 0)
      goto LABEL_354;
    goto LABEL_353;
  }
  ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
  std::__shared_weak_count::__release_weak(v253);
  if (SHIBYTE(value[2]) < 0)
LABEL_353:
    operator delete(value[0]);
LABEL_354:
  strcpy((char *)value, "(F]EwDGGXwLM\\MK\\AGFwEI\\K@M[");
  sub_2396B946C((uint64_t)value, *(int32x4_t *)"\\MK\\AGFwEI\\K@M[", v250, v251, v252);
  v257 = v256;
  v258 = strlen(v256);
  if (v258 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v259 = v258;
  if (v258 >= 0x17)
  {
    v261 = (v258 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v258 | 7) != 0x17)
      v261 = v258 | 7;
    v262 = v261 + 1;
    v260 = operator new(v261 + 1);
    *(_QWORD *)&v368[8] = v259;
    *(_QWORD *)&v368[16] = v262 | 0x8000000000000000;
    *(_QWORD *)v368 = v260;
  }
  else
  {
    v368[23] = v258;
    v260 = v368;
    if (!v258)
      goto LABEL_362;
  }
  memmove(v260, v257, v259);
LABEL_362:
  v260[v259] = 0;
  sub_239629EF4((uint64_t)v368, (CFStringRef *)v369);
  sub_239BB4A9C((uint64_t)theDict, *(const void **)v369, a2 + 56);
  v263 = (std::__shared_weak_count *)v369[1];
  if (v369[1])
  {
    v264 = (unint64_t *)(*(_QWORD *)&v369[1] + 8);
    do
      v265 = __ldaxr(v264);
    while (__stlxr(v265 - 1, v264));
    if (!v265)
    {
      ((void (*)(std::__shared_weak_count *))v263->__on_zero_shared)(v263);
      std::__shared_weak_count::__release_weak(v263);
      if ((v368[23] & 0x80000000) == 0)
        goto LABEL_368;
      goto LABEL_367;
    }
  }
  if ((v368[23] & 0x80000000) != 0)
LABEL_367:
    operator delete(*(void **)v368);
LABEL_368:
  sub_239629EF4((uint64_t)__p, (CFStringRef *)value);
  sub_239BB7018(a1, value[0], (uint64_t)theDict);
  v269 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v270 = (unint64_t *)((char *)value[1] + 8);
    do
      v271 = __ldaxr(v270);
    while (__stlxr(v271 - 1, v270));
    if (!v271)
    {
      ((void (*)(std::__shared_weak_count *))v269->__on_zero_shared)(v269);
      std::__shared_weak_count::__release_weak(v269);
    }
  }
  v272 = (std::__shared_weak_count *)theDict[1];
  if (!theDict[1])
    goto LABEL_377;
  v273 = (unint64_t *)((char *)theDict[1] + 8);
  do
    v274 = __ldaxr(v273);
  while (__stlxr(v274 - 1, v273));
  if (v274)
  {
LABEL_377:
    if ((SHIBYTE(v361) & 0x80000000) == 0)
      goto LABEL_379;
    goto LABEL_378;
  }
  ((void (*)(std::__shared_weak_count *))v272->__on_zero_shared)(v272);
  std::__shared_weak_count::__release_weak(v272);
  if (SHIBYTE(v361) < 0)
LABEL_378:
    operator delete(__p[0]);
LABEL_379:
  *(_OWORD *)value = xmmword_239F10DE3;
  *(_OWORD *)((char *)&value[1] + 1) = *(__int128 *)((char *)&xmmword_239F10DE3 + 9);
  sub_2396EFC88((uint64_t)value, *(int32x4_t *)((char *)&xmmword_239F10DE3 + 9), v266, v267, v268);
  v276 = v275;
  v277 = strlen(v275);
  if (v277 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v278 = (void *)v277;
  if (v277 >= 0x17)
  {
    v280 = (v277 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v277 | 7) != 0x17)
      v280 = v277 | 7;
    v281 = v280 + 1;
    v279 = operator new(v280 + 1);
    __p[1] = v278;
    v361 = v281 | 0x8000000000000000;
    __p[0] = v279;
    goto LABEL_386;
  }
  HIBYTE(v361) = v277;
  v279 = __p;
  if (v277)
LABEL_386:
    memmove(v279, v276, (size_t)v278);
  *((_BYTE *)v278 + (_QWORD)v279) = 0;
  sub_23962C714(theDict);
  strcpy((char *)v369, "=_DbIO\\^V");
  v282 = sub_23950FF84(v369);
  v283 = strlen((const char *)v282);
  if (v283 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v284 = v283;
  if (v283 >= 0x17)
  {
    v286 = (v283 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v283 | 7) != 0x17)
      v286 = v283 | 7;
    v287 = v286 + 1;
    v285 = operator new(v286 + 1);
    *(_QWORD *)&__dst[8] = v284;
    *(_QWORD *)&__dst[16] = v287 | 0x8000000000000000;
    *(_QWORD *)__dst = v285;
  }
  else
  {
    __dst[23] = v283;
    v285 = __dst;
    if (!v283)
      goto LABEL_395;
  }
  memmove(v285, v282, v284);
LABEL_395:
  v285[v284] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v368);
  sub_2396B4EAC((uint64_t)theDict, *(const void **)v368, (_BYTE *)(a2 + 64));
  v288 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_399;
  v289 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v290 = __ldaxr(v289);
  while (__stlxr(v290 - 1, v289));
  if (v290)
  {
LABEL_399:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_401;
    goto LABEL_400;
  }
  ((void (*)(std::__shared_weak_count *))v288->__on_zero_shared)(v288);
  std::__shared_weak_count::__release_weak(v288);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_400:
    operator delete(*(void **)__dst);
LABEL_401:
  v369[0] = (int8x8_t)0x786E726D42647F1DLL;
  v369[1].i8[0] = 0;
  v291 = sub_239513718((char *)v369);
  v292 = strlen(v291);
  if (v292 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v293 = v292;
  if (v292 >= 0x17)
  {
    v295 = (v292 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v292 | 7) != 0x17)
      v295 = v292 | 7;
    v296 = v295 + 1;
    v294 = operator new(v295 + 1);
    *(_QWORD *)&__dst[8] = v293;
    *(_QWORD *)&__dst[16] = v296 | 0x8000000000000000;
    *(_QWORD *)__dst = v294;
  }
  else
  {
    __dst[23] = v292;
    v294 = __dst;
    if (!v292)
      goto LABEL_409;
  }
  memmove(v294, v291, v293);
LABEL_409:
  v294[v293] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v368);
  sub_2396B4EAC((uint64_t)theDict, *(const void **)v368, (_BYTE *)(a2 + 65));
  v300 = *(std::__shared_weak_count **)&v368[8];
  if (!*(_QWORD *)&v368[8])
    goto LABEL_413;
  v301 = (unint64_t *)(*(_QWORD *)&v368[8] + 8);
  do
    v302 = __ldaxr(v301);
  while (__stlxr(v302 - 1, v301));
  if (v302)
  {
LABEL_413:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_415;
    goto LABEL_414;
  }
  ((void (*)(std::__shared_weak_count *))v300->__on_zero_shared)(v300);
  std::__shared_weak_count::__release_weak(v300);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_414:
    operator delete(*(void **)__dst);
LABEL_415:
  strcpy(v368, "\"OKL}LWO}AMOOML}VPCAIQ");
  sub_2396EFBE0((uint64_t)v368, *(int32x4_t *)"\"OKL}LWO}AMOOML}VPCAIQ", v297, v298, v299);
  v304 = v303;
  v305 = strlen(v303);
  if (v305 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v306 = v305;
  if (v305 >= 0x17)
  {
    v308 = (v305 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v305 | 7) != 0x17)
      v308 = v305 | 7;
    v309 = v308 + 1;
    v307 = operator new(v308 + 1);
    *(_QWORD *)&__dst[8] = v306;
    *(_QWORD *)&__dst[16] = v309 | 0x8000000000000000;
    *(_QWORD *)__dst = v307;
  }
  else
  {
    __dst[23] = v305;
    v307 = __dst;
    if (!v305)
      goto LABEL_423;
  }
  memmove(v307, v304, v306);
LABEL_423:
  v307[v306] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v369);
  sub_239BB4A9C((uint64_t)theDict, *(const void **)v369, a2 + 72);
  v313 = (std::__shared_weak_count *)v369[1];
  if (!*(_QWORD *)&v369[1])
    goto LABEL_427;
  v314 = (unint64_t *)(*(_QWORD *)&v369[1] + 8);
  do
    v315 = __ldaxr(v314);
  while (__stlxr(v315 - 1, v314));
  if (v315)
  {
LABEL_427:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_429;
    goto LABEL_428;
  }
  ((void (*)(std::__shared_weak_count *))v313->__on_zero_shared)(v313);
  std::__shared_weak_count::__release_weak(v313);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_428:
    operator delete(*(void **)__dst);
LABEL_429:
  *(_OWORD *)v368 = xmmword_239F10CE1;
  *(_DWORD *)&v368[16] = 1120275;
  sub_23958E55C((uint64_t)v368, (int32x4_t)xmmword_239F10CE1, v310, v311, v312);
  v317 = v316;
  v318 = strlen(v316);
  if (v318 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v319 = v318;
  if (v318 >= 0x17)
  {
    v321 = (v318 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v318 | 7) != 0x17)
      v321 = v318 | 7;
    v322 = v321 + 1;
    v320 = operator new(v321 + 1);
    *(_QWORD *)&__dst[8] = v319;
    *(_QWORD *)&__dst[16] = v322 | 0x8000000000000000;
    *(_QWORD *)__dst = v320;
  }
  else
  {
    __dst[23] = v318;
    v320 = __dst;
    if (!v318)
      goto LABEL_437;
  }
  memmove(v320, v317, v319);
LABEL_437:
  v320[v319] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v369);
  sub_2397373B0((uint64_t)theDict, *(const void **)v369, a2 + 80);
  v326 = (std::__shared_weak_count *)v369[1];
  if (!*(_QWORD *)&v369[1])
    goto LABEL_441;
  v327 = (unint64_t *)(*(_QWORD *)&v369[1] + 8);
  do
    v328 = __ldaxr(v327);
  while (__stlxr(v328 - 1, v327));
  if (v328)
  {
LABEL_441:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_443;
    goto LABEL_442;
  }
  ((void (*)(std::__shared_weak_count *))v326->__on_zero_shared)(v326);
  std::__shared_weak_count::__release_weak(v326);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_442:
    operator delete(*(void **)__dst);
LABEL_443:
  *(_OWORD *)__dst = xmmword_239F10CF5;
  *(int16x8_t *)&__dst[16] = xmmword_239F10D05;
  v367 = 0x2524223F283E2FLL;
  sub_2396F02A0(__dst, 8.08225793e-144, xmmword_239F10D05, v323, v324, v325);
  v330 = v329;
  v331 = strlen(v329);
  if (v331 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v332 = v331;
  if (v331 >= 0x17)
  {
    v334 = (v331 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v331 | 7) != 0x17)
      v334 = v331 | 7;
    v335 = v334 + 1;
    v333 = operator new(v334 + 1);
    *(_QWORD *)&v368[8] = v332;
    *(_QWORD *)&v368[16] = v335 | 0x8000000000000000;
    *(_QWORD *)v368 = v333;
  }
  else
  {
    v368[23] = v331;
    v333 = v368;
    if (!v331)
      goto LABEL_451;
  }
  memmove(v333, v330, v332);
LABEL_451:
  v333[v332] = 0;
  sub_239629EF4((uint64_t)v368, (CFStringRef *)v369);
  sub_2397373B0((uint64_t)theDict, *(const void **)v369, a2 + 88);
  v339 = (std::__shared_weak_count *)v369[1];
  if (!*(_QWORD *)&v369[1])
    goto LABEL_455;
  v340 = (unint64_t *)(*(_QWORD *)&v369[1] + 8);
  do
    v341 = __ldaxr(v340);
  while (__stlxr(v341 - 1, v340));
  if (v341)
  {
LABEL_455:
    if ((v368[23] & 0x80000000) == 0)
      goto LABEL_457;
    goto LABEL_456;
  }
  ((void (*)(std::__shared_weak_count *))v339->__on_zero_shared)(v339);
  std::__shared_weak_count::__release_weak(v339);
  if ((v368[23] & 0x80000000) != 0)
LABEL_456:
    operator delete(*(void **)v368);
LABEL_457:
  *(_OWORD *)__dst = xmmword_239F10D1D;
  *(int16x8_t *)&__dst[16] = xmmword_239F10D2D;
  v367 = 0x25242238252A3BLL;
  sub_2396F02A0(__dst, 8.08225793e-144, xmmword_239F10D2D, v336, v337, v338);
  v343 = v342;
  v344 = strlen(v342);
  if (v344 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v345 = v344;
  if (v344 >= 0x17)
  {
    v347 = (v344 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v344 | 7) != 0x17)
      v347 = v344 | 7;
    v348 = v347 + 1;
    v346 = operator new(v347 + 1);
    *(_QWORD *)&v368[8] = v345;
    *(_QWORD *)&v368[16] = v348 | 0x8000000000000000;
    *(_QWORD *)v368 = v346;
  }
  else
  {
    v368[23] = v344;
    v346 = v368;
    if (!v344)
      goto LABEL_465;
  }
  memmove(v346, v343, v345);
LABEL_465:
  v346[v345] = 0;
  sub_239629EF4((uint64_t)v368, (CFStringRef *)v369);
  sub_2397373B0((uint64_t)theDict, *(const void **)v369, a2 + 96);
  v349 = (std::__shared_weak_count *)v369[1];
  if (v369[1])
  {
    v350 = (unint64_t *)(*(_QWORD *)&v369[1] + 8);
    do
      v351 = __ldaxr(v350);
    while (__stlxr(v351 - 1, v350));
    if (!v351)
    {
      ((void (*)(std::__shared_weak_count *))v349->__on_zero_shared)(v349);
      std::__shared_weak_count::__release_weak(v349);
      if ((v368[23] & 0x80000000) == 0)
        goto LABEL_471;
      goto LABEL_470;
    }
  }
  if ((v368[23] & 0x80000000) != 0)
LABEL_470:
    operator delete(*(void **)v368);
LABEL_471:
  sub_239629EF4((uint64_t)__p, (CFStringRef *)__dst);
  sub_239BB7018(a1, *(const void **)__dst, (uint64_t)theDict);
  v352 = *(std::__shared_weak_count **)&__dst[8];
  if (*(_QWORD *)&__dst[8])
  {
    v353 = (unint64_t *)(*(_QWORD *)&__dst[8] + 8);
    do
      v354 = __ldaxr(v353);
    while (__stlxr(v354 - 1, v353));
    if (!v354)
    {
      ((void (*)(std::__shared_weak_count *))v352->__on_zero_shared)(v352);
      std::__shared_weak_count::__release_weak(v352);
    }
  }
  v355 = (std::__shared_weak_count *)theDict[1];
  if (!theDict[1])
    goto LABEL_480;
  v356 = (unint64_t *)((char *)theDict[1] + 8);
  do
    v357 = __ldaxr(v356);
  while (__stlxr(v357 - 1, v356));
  if (v357)
  {
LABEL_480:
    if ((SHIBYTE(v361) & 0x80000000) == 0)
      return;
    goto LABEL_481;
  }
  ((void (*)(std::__shared_weak_count *))v355->__on_zero_shared)(v355);
  std::__shared_weak_count::__release_weak(v355);
  if (SHIBYTE(v361) < 0)
LABEL_481:
    operator delete(__p[0]);
}

void sub_239BB6D0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  uint64_t v34;
  uint64_t v35;

  sub_239416DA0(v35 - 128);
  sub_239416DA0((uint64_t)&a13);
  if (a34 < 0)
    operator delete(__p);
  sub_239416DA0((uint64_t)&a10);
  if (a27 < 0)
    operator delete(a22);
  sub_239416DA0(v34);
  _Unwind_Resume(a1);
}

void sub_239BB6FB8()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB6FC0()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB6FC8()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB6FD0()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB6FD8()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB6FE0()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB6FE8()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB6FF0()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB6FF8()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB7000()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB7008()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB7010()
{
  JUMPOUT(0x239BB6FA8);
}

void sub_239BB7018(uint64_t a1, const void *a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CFMutableDictionaryRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  const void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  void *value;
  std::__shared_weak_count *v25;
  CFTypeRef v26;

  v7 = *(CFMutableDictionaryRef *)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  if (!sub_23962C8DC(*(const __CFDictionary **)a1, a2))
  {
    v12 = *(const void **)a3;
    v11 = *(std::__shared_weak_count **)(a3 + 8);
    if (v11)
    {
      v13 = (unint64_t *)&v11->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
    }
    v26 = v12;
    if (sub_23962BB30(&v26))
    {
      value = (void *)v12;
      v25 = v11;
      if (!v11)
      {
LABEL_29:
        if (v12)
          j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, a2, value);
        goto LABEL_31;
      }
      v15 = (unint64_t *)&v11->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    else
    {
      value = 0;
      v25 = 0;
      if (!v11)
      {
LABEL_31:
        if (v25)
        {
          v22 = (unint64_t *)&v25->__shared_owners_;
          do
            v23 = __ldaxr(v22);
          while (__stlxr(v23 - 1, v22));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
            std::__shared_weak_count::__release_weak(v25);
          }
        }
        return;
      }
    }
    v17 = (unint64_t *)&v11->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v12 = value;
    if (v25)
    {
      v19 = (unint64_t *)&v25->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
    goto LABEL_29;
  }
}

void sub_239BB71DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239BB71F0(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239BB7230(uint64_t a1, uint64_t a2)
{
  const char *v4;
  size_t v5;
  size_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int8x16_t *v13;
  size_t v14;
  size_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  int16x8_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  const char *v24;
  const char *v25;
  size_t v26;
  size_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  int16x8_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  const char *v37;
  const char *v38;
  size_t v39;
  size_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  int32x4_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  size_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  int16x8_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  const char *v61;
  const char *v62;
  size_t v63;
  size_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  int8x16_t v68;
  double v69;
  int32x4_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  const char *v74;
  const char *v75;
  size_t v76;
  size_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  const char *v84;
  const char *v85;
  size_t v86;
  size_t v87;
  _OWORD *v88;
  uint64_t v89;
  uint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  const char *v94;
  const char *v95;
  size_t v96;
  size_t v97;
  _OWORD *v98;
  uint64_t v99;
  uint64_t v100;
  int16x8_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  const char *v105;
  const char *v106;
  size_t v107;
  size_t v108;
  _OWORD *v109;
  uint64_t v110;
  uint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  const char *v115;
  const char *v116;
  size_t v117;
  size_t v118;
  _OWORD *v119;
  uint64_t v120;
  uint64_t v121;
  int8x16_t v122;
  double v123;
  int32x4_t v124;
  const void *v125;
  std::__shared_weak_count *v126;
  const __CFDictionary *v127;
  unint64_t *p_shared_owners;
  unint64_t v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  void *v132;
  unint64_t *v133;
  unint64_t v134;
  unint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  const char *v142;
  const char *v143;
  size_t v144;
  size_t v145;
  _OWORD *v146;
  uint64_t v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  const char *v152;
  size_t v153;
  size_t v154;
  _OWORD *v155;
  uint64_t v156;
  uint64_t v157;
  std::__shared_weak_count *v158;
  unint64_t *v159;
  unint64_t v160;
  const char *v161;
  const char *v162;
  size_t v163;
  size_t v164;
  _OWORD *v165;
  uint64_t v166;
  uint64_t v167;
  int8x16_t v168;
  double v169;
  int32x4_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  const char *v174;
  const char *v175;
  size_t v176;
  size_t v177;
  _OWORD *v178;
  uint64_t v179;
  uint64_t v180;
  double v181;
  int16x8_t v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  const char *v186;
  const char *v187;
  size_t v188;
  size_t v189;
  _BYTE *v190;
  uint64_t v191;
  uint64_t v192;
  int16x8_t v193;
  std::__shared_weak_count *v194;
  unint64_t *v195;
  unint64_t v196;
  const char *v197;
  const char *v198;
  size_t v199;
  size_t v200;
  _OWORD *v201;
  uint64_t v202;
  uint64_t v203;
  double v204;
  int32x4_t v205;
  const void *v206;
  std::__shared_weak_count *v207;
  const __CFDictionary *v208;
  unint64_t *v209;
  unint64_t v210;
  unint64_t v211;
  __int128 v212;
  unint64_t *v213;
  unint64_t v214;
  unint64_t v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  std::__shared_weak_count *v219;
  unint64_t *v220;
  unint64_t v221;
  const char *v222;
  const char *v223;
  size_t v224;
  size_t v225;
  _BYTE *v226;
  uint64_t v227;
  uint64_t v228;
  std::__shared_weak_count *v229;
  unint64_t *v230;
  unint64_t v231;
  const char *v232;
  size_t v233;
  size_t v234;
  _OWORD *v235;
  uint64_t v236;
  uint64_t v237;
  std::__shared_weak_count *v238;
  unint64_t *v239;
  unint64_t v240;
  int8x16_t *v241;
  size_t v242;
  size_t v243;
  _OWORD *v244;
  uint64_t v245;
  uint64_t v246;
  int8x16_t v247;
  double v248;
  int32x4_t v249;
  std::__shared_weak_count *v250;
  unint64_t *v251;
  unint64_t v252;
  std::__shared_weak_count *v253;
  unint64_t *v254;
  unint64_t v255;
  const char *v256;
  const char *v257;
  size_t v258;
  void *v259;
  void *v260;
  uint64_t v261;
  uint64_t v262;
  int8x16_t v263;
  double v264;
  int32x4_t v265;
  const char *v266;
  const char *v267;
  size_t v268;
  size_t v269;
  _OWORD *v270;
  uint64_t v271;
  uint64_t v272;
  int8x16_t v273;
  double v274;
  int32x4_t v275;
  std::__shared_weak_count *v276;
  unint64_t *v277;
  unint64_t v278;
  const char *v279;
  const char *v280;
  size_t v281;
  size_t v282;
  _BYTE *v283;
  uint64_t v284;
  uint64_t v285;
  double v286;
  int32x4_t v287;
  std::__shared_weak_count *v288;
  unint64_t *v289;
  unint64_t v290;
  const char *v291;
  const char *v292;
  size_t v293;
  size_t v294;
  _BYTE *v295;
  uint64_t v296;
  uint64_t v297;
  int8x16_t v298;
  double v299;
  int32x4_t v300;
  std::__shared_weak_count *v301;
  unint64_t *v302;
  unint64_t v303;
  const char *v304;
  const char *v305;
  size_t v306;
  size_t v307;
  _BYTE *v308;
  uint64_t v309;
  uint64_t v310;
  int8x16_t v311;
  double v312;
  int32x4_t v313;
  std::__shared_weak_count *v314;
  unint64_t *v315;
  unint64_t v316;
  const char *v317;
  const char *v318;
  size_t v319;
  size_t v320;
  _BYTE *v321;
  uint64_t v322;
  uint64_t v323;
  std::__shared_weak_count *v324;
  unint64_t *v325;
  unint64_t v326;
  std::__shared_weak_count *v327;
  unint64_t *v328;
  unint64_t v329;
  std::__shared_weak_count *v330;
  unint64_t *v331;
  unint64_t v332;
  __int128 v333;
  CFStringRef v334;
  std::__shared_weak_count *v335;
  __int128 v336;
  uint64_t v337;
  void *value[2];
  unint64_t v339;
  _OWORD __dst[3];
  _BYTE v341[24];
  uint64_t v342;

  v342 = *MEMORY[0x24BDAC8D0];
  sub_23962C714((_OWORD *)a1);
  strcpy((char *)value, "W9\":\b#?%263$");
  v4 = sub_239510ECC((uint64_t)value);
  v5 = strlen(v4);
  if (v5 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)&__dst[0] + 1) = v6;
    *(_QWORD *)&__dst[1] = v9 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v7;
  }
  else
  {
    BYTE7(__dst[1]) = v5;
    v7 = __dst;
    if (!v5)
      goto LABEL_9;
  }
  memmove(v7, v4, v6);
LABEL_9:
  *((_BYTE *)v7 + v6) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v341);
  sub_239BB4338(a1, *(const void **)v341, a2);
  v10 = *(std::__shared_weak_count **)&v341[8];
  if (!*(_QWORD *)&v341[8])
    goto LABEL_13;
  v11 = (unint64_t *)(*(_QWORD *)&v341[8] + 8);
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
  {
LABEL_13:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (SBYTE7(__dst[1]) < 0)
LABEL_14:
    operator delete(*(void **)&__dst[0]);
LABEL_15:
  *(_OWORD *)v341 = xmmword_239F10E87;
  strcpy(&v341[16], "b");
  v13 = sub_239A91B18((int8x16_t *)v341);
  v14 = strlen(v13->i8);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v15 = v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    *((_QWORD *)&__dst[0] + 1) = v15;
    *(_QWORD *)&__dst[1] = v18 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v16;
  }
  else
  {
    BYTE7(__dst[1]) = v14;
    v16 = __dst;
    if (!v14)
      goto LABEL_23;
  }
  memmove(v16, v13, v15);
LABEL_23:
  *((_BYTE *)v16 + v15) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  sub_2397373B0(a1, value[0], a2 + 8);
  v21 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_27;
  v22 = (unint64_t *)((char *)value[1] + 8);
  do
    v23 = __ldaxr(v22);
  while (__stlxr(v23 - 1, v22));
  if (v23)
  {
LABEL_27:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
  std::__shared_weak_count::__release_weak(v21);
  if (SBYTE7(__dst[1]) < 0)
LABEL_28:
    operator delete(*(void **)&__dst[0]);
LABEL_29:
  strcpy((char *)__dst, ":WSTeH[TI[YeTOWeSTVS_HIe_BJ[T^eH[NSU");
  sub_2396F11DC((unsigned __int8 *)__dst, *(int16x8_t *)":WSTeH[TI[YeTOWeSTVS_HIe_BJ[T^eH[NSU", *(double *)"STVS_HIe_BJ[T^eH[NSU", v19, v20);
  v25 = v24;
  v26 = strlen(v24);
  if (v26 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v27 = v26;
  if (v26 >= 0x17)
  {
    v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v29 = v26 | 7;
    v30 = v29 + 1;
    v28 = operator new(v29 + 1);
    *(_QWORD *)&v341[8] = v27;
    *(_QWORD *)&v341[16] = v30 | 0x8000000000000000;
    *(_QWORD *)v341 = v28;
  }
  else
  {
    v341[23] = v26;
    v28 = v341;
    if (!v26)
      goto LABEL_37;
  }
  memmove(v28, v25, v27);
LABEL_37:
  v28[v27] = 0;
  sub_239629EF4((uint64_t)v341, (CFStringRef *)value);
  sub_2397373B0(a1, value[0], a2 + 16);
  v34 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_41;
  v35 = (unint64_t *)((char *)value[1] + 8);
  do
    v36 = __ldaxr(v35);
  while (__stlxr(v36 - 1, v35));
  if (v36)
  {
LABEL_41:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_43;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
  std::__shared_weak_count::__release_weak(v34);
  if ((v341[23] & 0x80000000) != 0)
LABEL_42:
    operator delete(*(void **)v341);
LABEL_43:
  __dst[0] = xmmword_239F10EBE;
  __dst[1] = *(_OWORD *)dbl_239F10ECE;
  strcpy((char *)&__dst[2], "E");
  sub_2396F0120((unsigned __int8 *)__dst, (int16x8_t)xmmword_239F10EBE, dbl_239F10ECE[0], v31, v32, v33);
  v38 = v37;
  v39 = strlen(v37);
  if (v39 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v40 = v39;
  if (v39 >= 0x17)
  {
    v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v39 | 7) != 0x17)
      v42 = v39 | 7;
    v43 = v42 + 1;
    v41 = operator new(v42 + 1);
    *(_QWORD *)&v341[8] = v40;
    *(_QWORD *)&v341[16] = v43 | 0x8000000000000000;
    *(_QWORD *)v341 = v41;
  }
  else
  {
    v341[23] = v39;
    v41 = v341;
    if (!v39)
      goto LABEL_51;
  }
  memmove(v41, v38, v40);
LABEL_51:
  v41[v40] = 0;
  sub_239629EF4((uint64_t)v341, (CFStringRef *)value);
  sub_2396B4EAC(a1, value[0], (_BYTE *)(a2 + 24));
  v46 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_55;
  v47 = (unint64_t *)((char *)value[1] + 8);
  do
    v48 = __ldaxr(v47);
  while (__stlxr(v48 - 1, v47));
  if (v48)
  {
LABEL_55:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_57;
    goto LABEL_56;
  }
  ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
  std::__shared_weak_count::__release_weak(v46);
  if ((v341[23] & 0x80000000) != 0)
LABEL_56:
    operator delete(*(void **)v341);
LABEL_57:
  strcpy((char *)__dst, "/Z\\Jp_]F@]p\\JHBJA[pFIpNYNFCNMCJ");
  sub_2396F06F0((uint64_t)__dst, *(int32x4_t *)"/Z\\Jp_]F@]p\\JHBJA[pFIpNYNFCNMCJ", *(int8x16_t *)"A[pFIpNYNFCNMCJ", v44, v45);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    *(_QWORD *)&v341[8] = v52;
    *(_QWORD *)&v341[16] = v55 | 0x8000000000000000;
    *(_QWORD *)v341 = v53;
  }
  else
  {
    v341[23] = v51;
    v53 = v341;
    if (!v51)
      goto LABEL_65;
  }
  memmove(v53, v50, v52);
LABEL_65:
  v53[v52] = 0;
  sub_239629EF4((uint64_t)v341, (CFStringRef *)value);
  sub_2396B4EAC(a1, value[0], (_BYTE *)(a2 + 25));
  v58 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_69;
  v59 = (unint64_t *)((char *)value[1] + 8);
  do
    v60 = __ldaxr(v59);
  while (__stlxr(v60 - 1, v59));
  if (v60)
  {
LABEL_69:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_70;
  }
  ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
  std::__shared_weak_count::__release_weak(v58);
  if ((v341[23] & 0x80000000) != 0)
LABEL_70:
    operator delete(*(void **)v341);
LABEL_71:
  __dst[0] = xmmword_239F10F00;
  __dst[1] = *(_OWORD *)dbl_239F10F10;
  strcpy((char *)&__dst[1] + 15, "{u|");
  sub_2396F0060((unsigned __int8 *)__dst, (int16x8_t)xmmword_239F10F00, dbl_239F10F10[0], v56, v57);
  v62 = v61;
  v63 = strlen(v61);
  if (v63 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v64 = v63;
  if (v63 >= 0x17)
  {
    v66 = (v63 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v63 | 7) != 0x17)
      v66 = v63 | 7;
    v67 = v66 + 1;
    v65 = operator new(v66 + 1);
    *(_QWORD *)&v341[8] = v64;
    *(_QWORD *)&v341[16] = v67 | 0x8000000000000000;
    *(_QWORD *)v341 = v65;
  }
  else
  {
    v341[23] = v63;
    v65 = v341;
    if (!v63)
      goto LABEL_79;
  }
  memmove(v65, v62, v64);
LABEL_79:
  v65[v64] = 0;
  sub_239629EF4((uint64_t)v341, (CFStringRef *)value);
  sub_2396B4EAC(a1, value[0], (_BYTE *)(a2 + 26));
  v71 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_83;
  v72 = (unint64_t *)((char *)value[1] + 8);
  do
    v73 = __ldaxr(v72);
  while (__stlxr(v73 - 1, v72));
  if (v73)
  {
LABEL_83:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_85;
    goto LABEL_84;
  }
  ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
  std::__shared_weak_count::__release_weak(v71);
  if ((v341[23] & 0x80000000) != 0)
LABEL_84:
    operator delete(*(void **)v341);
LABEL_85:
  strcpy((char *)__dst, "5@FPjXTF^PQjZ@AjSPTA@GPF");
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)"PQjZ@AjSPTA@GPF", v68, v69, v70);
  v75 = v74;
  v76 = strlen(v74);
  if (v76 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v77 = v76;
  if (v76 >= 0x17)
  {
    v79 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v76 | 7) != 0x17)
      v79 = v76 | 7;
    v80 = v79 + 1;
    v78 = operator new(v79 + 1);
    *(_QWORD *)&v341[8] = v77;
    *(_QWORD *)&v341[16] = v80 | 0x8000000000000000;
    *(_QWORD *)v341 = v78;
  }
  else
  {
    v341[23] = v76;
    v78 = v341;
    if (!v76)
      goto LABEL_93;
  }
  memmove(v78, v75, v77);
LABEL_93:
  v78[v77] = 0;
  sub_239629EF4((uint64_t)v341, (CFStringRef *)value);
  sub_2396B4EAC(a1, value[0], (_BYTE *)(a2 + 27));
  v81 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_97;
  v82 = (unint64_t *)((char *)value[1] + 8);
  do
    v83 = __ldaxr(v82);
  while (__stlxr(v83 - 1, v82));
  if (v83)
  {
LABEL_97:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_99;
    goto LABEL_98;
  }
  ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
  std::__shared_weak_count::__release_weak(v81);
  if ((v341[23] & 0x80000000) != 0)
LABEL_98:
    operator delete(*(void **)v341);
LABEL_99:
  *(_OWORD *)value = xmmword_239F0C210;
  sub_23950F8E4((uint64_t)value);
  v85 = v84;
  v86 = strlen(v84);
  if (v86 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v87 = v86;
  if (v86 >= 0x17)
  {
    v89 = (v86 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v86 | 7) != 0x17)
      v89 = v86 | 7;
    v90 = v89 + 1;
    v88 = operator new(v89 + 1);
    *((_QWORD *)&__dst[0] + 1) = v87;
    *(_QWORD *)&__dst[1] = v90 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v88;
  }
  else
  {
    BYTE7(__dst[1]) = v86;
    v88 = __dst;
    if (!v86)
      goto LABEL_107;
  }
  memmove(v88, v85, v87);
LABEL_107:
  *((_BYTE *)v88 + v87) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v341);
  sub_239BB47DC(a1, *(const void **)v341, a2 + 80);
  v91 = *(std::__shared_weak_count **)&v341[8];
  if (!*(_QWORD *)&v341[8])
    goto LABEL_111;
  v92 = (unint64_t *)(*(_QWORD *)&v341[8] + 8);
  do
    v93 = __ldaxr(v92);
  while (__stlxr(v93 - 1, v92));
  if (v93)
  {
LABEL_111:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_113;
    goto LABEL_112;
  }
  ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
  std::__shared_weak_count::__release_weak(v91);
  if (SBYTE7(__dst[1]) < 0)
LABEL_112:
    operator delete(*(void **)&__dst[0]);
LABEL_113:
  strcpy((char *)value, "0TYVVoSBYDUBYQ");
  sub_23958E5E0((uint64_t)value);
  v95 = v94;
  v96 = strlen(v94);
  if (v96 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v97 = v96;
  if (v96 >= 0x17)
  {
    v99 = (v96 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v96 | 7) != 0x17)
      v99 = v96 | 7;
    v100 = v99 + 1;
    v98 = operator new(v99 + 1);
    *((_QWORD *)&__dst[0] + 1) = v97;
    *(_QWORD *)&__dst[1] = v100 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v98;
  }
  else
  {
    BYTE7(__dst[1]) = v96;
    v98 = __dst;
    if (!v96)
      goto LABEL_121;
  }
  memmove(v98, v95, v97);
LABEL_121:
  *((_BYTE *)v98 + v97) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v341);
  sub_239BB47DC(a1, *(const void **)v341, a2 + 84);
  v102 = *(std::__shared_weak_count **)&v341[8];
  if (!*(_QWORD *)&v341[8])
    goto LABEL_125;
  v103 = (unint64_t *)(*(_QWORD *)&v341[8] + 8);
  do
    v104 = __ldaxr(v103);
  while (__stlxr(v104 - 1, v103));
  if (v104)
  {
LABEL_125:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_127;
    goto LABEL_126;
  }
  ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
  std::__shared_weak_count::__release_weak(v102);
  if (SBYTE7(__dst[1]) < 0)
LABEL_126:
    operator delete(*(void **)&__dst[0]);
LABEL_127:
  strcpy((char *)value, "2_GFGS^mQZWQY");
  sub_23971A32C((uint64_t)value, v101);
  v106 = v105;
  v107 = strlen(v105);
  if (v107 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v108 = v107;
  if (v107 >= 0x17)
  {
    v110 = (v107 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v107 | 7) != 0x17)
      v110 = v107 | 7;
    v111 = v110 + 1;
    v109 = operator new(v110 + 1);
    *((_QWORD *)&__dst[0] + 1) = v108;
    *(_QWORD *)&__dst[1] = v111 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v109;
  }
  else
  {
    BYTE7(__dst[1]) = v107;
    v109 = __dst;
    if (!v107)
      goto LABEL_135;
  }
  memmove(v109, v106, v108);
LABEL_135:
  *((_BYTE *)v109 + v108) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v341);
  sub_2396B4EAC(a1, *(const void **)v341, (_BYTE *)(a2 + 88));
  v112 = *(std::__shared_weak_count **)&v341[8];
  if (!*(_QWORD *)&v341[8])
    goto LABEL_139;
  v113 = (unint64_t *)(*(_QWORD *)&v341[8] + 8);
  do
    v114 = __ldaxr(v113);
  while (__stlxr(v114 - 1, v113));
  if (v114)
  {
LABEL_139:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_141;
    goto LABEL_140;
  }
  ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
  std::__shared_weak_count::__release_weak(v112);
  if (SBYTE7(__dst[1]) < 0)
LABEL_140:
    operator delete(*(void **)&__dst[0]);
LABEL_141:
  *(_OWORD *)v341 = xmmword_239F10F3C;
  v341[16] = 0;
  sub_2396EFA24((uint64_t)v341);
  v116 = v115;
  v117 = strlen(v115);
  if (v117 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v118 = v117;
  if (v117 >= 0x17)
  {
    v120 = (v117 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v117 | 7) != 0x17)
      v120 = v117 | 7;
    v121 = v120 + 1;
    v119 = operator new(v120 + 1);
    *((_QWORD *)&__dst[0] + 1) = v118;
    *(_QWORD *)&__dst[1] = v121 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v119;
  }
  else
  {
    BYTE7(__dst[1]) = v117;
    v119 = __dst;
    if (!v117)
      goto LABEL_149;
  }
  memmove(v119, v116, v118);
LABEL_149:
  *((_BYTE *)v119 + v118) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v336);
  v125 = (const void *)v336;
  v127 = *(const __CFDictionary **)a1;
  v126 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v126)
    goto LABEL_154;
  p_shared_owners = (unint64_t *)&v126->__shared_owners_;
  do
    v129 = __ldxr(p_shared_owners);
  while (__stxr(v129 + 1, p_shared_owners));
  do
    v130 = __ldaxr(p_shared_owners);
  while (__stlxr(v130 - 1, p_shared_owners));
  if (!v130)
  {
    ((void (*)(std::__shared_weak_count *))v126->__on_zero_shared)(v126);
    std::__shared_weak_count::__release_weak(v126);
    if (!v127)
      goto LABEL_189;
  }
  else
  {
LABEL_154:
    if (!v127)
      goto LABEL_189;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, v125))
    goto LABEL_189;
  LOBYTE(v334) = *(_BYTE *)(a2 + 96);
  sub_2396297BC(value, &v334);
  v132 = value[0];
  v131 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v133 = (unint64_t *)((char *)value[1] + 8);
    do
      v134 = __ldxr(v133);
    while (__stxr(v134 + 1, v133));
    do
      v135 = __ldaxr(v133);
    while (__stlxr(v135 - 1, v133));
    if (!v135)
    {
      ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
      std::__shared_weak_count::__release_weak(v131);
      if (!v132)
        goto LABEL_163;
      goto LABEL_162;
    }
  }
  if (v132)
LABEL_162:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, v125, value[0]);
LABEL_163:
  v136 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v137 = (unint64_t *)((char *)value[1] + 8);
    do
      v138 = __ldaxr(v137);
    while (__stlxr(v138 - 1, v137));
    if (!v138)
    {
      ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
      std::__shared_weak_count::__release_weak(v136);
    }
  }
LABEL_189:
  v139 = (std::__shared_weak_count *)*((_QWORD *)&v336 + 1);
  if (!*((_QWORD *)&v336 + 1))
    goto LABEL_193;
  v140 = (unint64_t *)(*((_QWORD *)&v336 + 1) + 8);
  do
    v141 = __ldaxr(v140);
  while (__stlxr(v141 - 1, v140));
  if (v141)
  {
LABEL_193:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_195;
    goto LABEL_194;
  }
  ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
  std::__shared_weak_count::__release_weak(v139);
  if (SBYTE7(__dst[1]) < 0)
LABEL_194:
    operator delete(*(void **)&__dst[0]);
LABEL_195:
  *(_OWORD *)v341 = xmmword_239F10F4D;
  *(_QWORD *)&v341[16] = 0x697F686F6E7B7FLL;
  sub_2396F1A4C((uint64_t)v341, (int32x4_t)xmmword_239F10F4D, v122, v123, v124);
  v143 = v142;
  v144 = strlen(v142);
  if (v144 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v145 = v144;
  if (v144 >= 0x17)
  {
    v147 = (v144 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v144 | 7) != 0x17)
      v147 = v144 | 7;
    v148 = v147 + 1;
    v146 = operator new(v147 + 1);
    *((_QWORD *)&__dst[0] + 1) = v145;
    *(_QWORD *)&__dst[1] = v148 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v146;
  }
  else
  {
    BYTE7(__dst[1]) = v144;
    v146 = __dst;
    if (!v144)
      goto LABEL_203;
  }
  memmove(v146, v143, v145);
LABEL_203:
  *((_BYTE *)v146 + v145) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  sub_2396B4148(a1, value[0], a2 + 92);
  v149 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_207;
  v150 = (unint64_t *)((char *)value[1] + 8);
  do
    v151 = __ldaxr(v150);
  while (__stlxr(v151 - 1, v150));
  if (v151)
  {
LABEL_207:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_209;
    goto LABEL_208;
  }
  ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
  std::__shared_weak_count::__release_weak(v149);
  if (SBYTE7(__dst[1]) < 0)
LABEL_208:
    operator delete(*(void **)&__dst[0]);
LABEL_209:
  value[0] = (void *)0x1B0C01371D180F68;
  LOBYTE(value[1]) = 0;
  v152 = sub_239513718((char *)value);
  v153 = strlen(v152);
  if (v153 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v154 = v153;
  if (v153 >= 0x17)
  {
    v156 = (v153 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v153 | 7) != 0x17)
      v156 = v153 | 7;
    v157 = v156 + 1;
    v155 = operator new(v156 + 1);
    *((_QWORD *)&__dst[0] + 1) = v154;
    *(_QWORD *)&__dst[1] = v157 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v155;
  }
  else
  {
    BYTE7(__dst[1]) = v153;
    v155 = __dst;
    if (!v153)
      goto LABEL_217;
  }
  memmove(v155, v152, v154);
LABEL_217:
  *((_BYTE *)v155 + v154) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v341);
  sub_239BB4494(a1, *(const void **)v341, (uint64_t *)(a2 + 32));
  v158 = *(std::__shared_weak_count **)&v341[8];
  if (!*(_QWORD *)&v341[8])
    goto LABEL_221;
  v159 = (unint64_t *)(*(_QWORD *)&v341[8] + 8);
  do
    v160 = __ldaxr(v159);
  while (__stlxr(v160 - 1, v159));
  if (v160)
  {
LABEL_221:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_223;
    goto LABEL_222;
  }
  ((void (*)(std::__shared_weak_count *))v158->__on_zero_shared)(v158);
  std::__shared_weak_count::__release_weak(v158);
  if (SBYTE7(__dst[1]) < 0)
LABEL_222:
    operator delete(*(void **)&__dst[0]);
LABEL_223:
  strcpy(v341, "3C\\@VlAVUZ]V^V]G");
  sub_2396EFA24((uint64_t)v341);
  v162 = v161;
  v163 = strlen(v161);
  if (v163 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v164 = v163;
  if (v163 >= 0x17)
  {
    v166 = (v163 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v163 | 7) != 0x17)
      v166 = v163 | 7;
    v167 = v166 + 1;
    v165 = operator new(v166 + 1);
    *((_QWORD *)&__dst[0] + 1) = v164;
    *(_QWORD *)&__dst[1] = v167 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v165;
  }
  else
  {
    BYTE7(__dst[1]) = v163;
    v165 = __dst;
    if (!v163)
      goto LABEL_231;
  }
  memmove(v165, v162, v164);
LABEL_231:
  *((_BYTE *)v165 + v164) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  sub_2396B4EAC(a1, value[0], (_BYTE *)(a2 + 97));
  v171 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_235;
  v172 = (unint64_t *)((char *)value[1] + 8);
  do
    v173 = __ldaxr(v172);
  while (__stlxr(v173 - 1, v172));
  if (v173)
  {
LABEL_235:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_237;
    goto LABEL_236;
  }
  ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
  std::__shared_weak_count::__release_weak(v171);
  if (SBYTE7(__dst[1]) < 0)
LABEL_236:
    operator delete(*(void **)&__dst[0]);
LABEL_237:
  *(_OWORD *)v341 = xmmword_239F10F76;
  strcpy(&v341[15], "/24");
  sub_23958E450((uint64_t)v341, (int32x4_t)xmmword_239F10F76, v168, v169, v170);
  v175 = v174;
  v176 = strlen(v174);
  if (v176 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v177 = v176;
  if (v176 >= 0x17)
  {
    v179 = (v176 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v176 | 7) != 0x17)
      v179 = v176 | 7;
    v180 = v179 + 1;
    v178 = operator new(v179 + 1);
    *((_QWORD *)&__dst[0] + 1) = v177;
    *(_QWORD *)&__dst[1] = v180 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v178;
  }
  else
  {
    BYTE7(__dst[1]) = v176;
    v178 = __dst;
    if (!v176)
      goto LABEL_245;
  }
  memmove(v178, v175, v177);
LABEL_245:
  *((_BYTE *)v178 + v177) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  sub_2397373B0(a1, value[0], a2 + 112);
  v183 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_249;
  v184 = (unint64_t *)((char *)value[1] + 8);
  do
    v185 = __ldaxr(v184);
  while (__stlxr(v185 - 1, v184));
  if (v185)
  {
LABEL_249:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_251;
    goto LABEL_250;
  }
  ((void (*)(std::__shared_weak_count *))v183->__on_zero_shared)(v183);
  std::__shared_weak_count::__release_weak(v183);
  if (SBYTE7(__dst[1]) < 0)
LABEL_250:
    operator delete(*(void **)&__dst[0]);
LABEL_251:
  __dst[0] = xmmword_239F10F89;
  __dst[1] = *(_OWORD *)dbl_239F10F99;
  *(_DWORD *)((char *)&__dst[1] + 15) = 1249797;
  sub_2396F0060((unsigned __int8 *)__dst, (int16x8_t)xmmword_239F10F89, dbl_239F10F99[0], v181, v182);
  v187 = v186;
  v188 = strlen(v186);
  if (v188 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v189 = v188;
  if (v188 >= 0x17)
  {
    v191 = (v188 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v188 | 7) != 0x17)
      v191 = v188 | 7;
    v192 = v191 + 1;
    v190 = operator new(v191 + 1);
    *(_QWORD *)&v341[8] = v189;
    *(_QWORD *)&v341[16] = v192 | 0x8000000000000000;
    *(_QWORD *)v341 = v190;
  }
  else
  {
    v341[23] = v188;
    v190 = v341;
    if (!v188)
      goto LABEL_259;
  }
  memmove(v190, v187, v189);
LABEL_259:
  v190[v189] = 0;
  sub_239629EF4((uint64_t)v341, (CFStringRef *)value);
  sub_239BB4A9C(a1, value[0], a2 + 120);
  v194 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_263;
  v195 = (unint64_t *)((char *)value[1] + 8);
  do
    v196 = __ldaxr(v195);
  while (__stlxr(v196 - 1, v195));
  if (v196)
  {
LABEL_263:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_265;
    goto LABEL_264;
  }
  ((void (*)(std::__shared_weak_count *))v194->__on_zero_shared)(v194);
  std::__shared_weak_count::__release_weak(v194);
  if ((v341[23] & 0x80000000) != 0)
LABEL_264:
    operator delete(*(void **)v341);
LABEL_265:
  *(_QWORD *)&v336 = 0x1205080314010D60;
  WORD6(v336) = 5;
  DWORD2(v336) = 270079039;
  sub_23971A32C((uint64_t)&v336, v193);
  v198 = v197;
  v199 = strlen(v197);
  if (v199 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v200 = v199;
  if (v199 >= 0x17)
  {
    v202 = (v199 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v199 | 7) != 0x17)
      v202 = v199 | 7;
    v203 = v202 + 1;
    v201 = operator new(v202 + 1);
    *((_QWORD *)&__dst[0] + 1) = v200;
    *(_QWORD *)&__dst[1] = v203 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v201;
  }
  else
  {
    BYTE7(__dst[1]) = v199;
    v201 = __dst;
    if (!v199)
      goto LABEL_273;
  }
  memmove(v201, v198, v200);
LABEL_273:
  *((_BYTE *)v201 + v200) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  v206 = value[0];
  v208 = *(const __CFDictionary **)a1;
  v207 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v207)
    goto LABEL_278;
  v209 = (unint64_t *)&v207->__shared_owners_;
  do
    v210 = __ldxr(v209);
  while (__stxr(v210 + 1, v209));
  do
    v211 = __ldaxr(v209);
  while (__stlxr(v211 - 1, v209));
  if (!v211)
  {
    ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
    std::__shared_weak_count::__release_weak(v207);
    if (!v208)
      goto LABEL_305;
  }
  else
  {
LABEL_278:
    if (!v208)
      goto LABEL_305;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, v206))
    goto LABEL_305;
  LOBYTE(v334) = *(_BYTE *)(a2 + 128);
  sub_2396297BC(v341, &v334);
  v212 = *(_OWORD *)v341;
  if (*(_QWORD *)&v341[8])
  {
    v213 = (unint64_t *)(*(_QWORD *)&v341[8] + 8);
    do
      v214 = __ldxr(v213);
    while (__stxr(v214 + 1, v213));
    do
      v215 = __ldaxr(v213);
    while (__stlxr(v215 - 1, v213));
    if (!v215)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v212 + 1) + 16))(*((_QWORD *)&v212 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v212 + 1));
      if (!(_QWORD)v212)
        goto LABEL_287;
      goto LABEL_286;
    }
  }
  if ((_QWORD)v212)
LABEL_286:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, v206, *(const void **)v341);
LABEL_287:
  v216 = *(std::__shared_weak_count **)&v341[8];
  if (*(_QWORD *)&v341[8])
  {
    v217 = (unint64_t *)(*(_QWORD *)&v341[8] + 8);
    do
      v218 = __ldaxr(v217);
    while (__stlxr(v218 - 1, v217));
    if (!v218)
    {
      ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
      std::__shared_weak_count::__release_weak(v216);
    }
  }
LABEL_305:
  v219 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_309;
  v220 = (unint64_t *)((char *)value[1] + 8);
  do
    v221 = __ldaxr(v220);
  while (__stlxr(v221 - 1, v220));
  if (v221)
  {
LABEL_309:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_311;
    goto LABEL_310;
  }
  ((void (*)(std::__shared_weak_count *))v219->__on_zero_shared)(v219);
  std::__shared_weak_count::__release_weak(v219);
  if (SBYTE7(__dst[1]) < 0)
LABEL_310:
    operator delete(*(void **)&__dst[0]);
LABEL_311:
  __dst[0] = xmmword_239F10FAC;
  __dst[1] = xmmword_239F10FBC;
  LOBYTE(__dst[2]) = 0;
  sub_2396EFE38((uint64_t)__dst, (int32x4_t)xmmword_239F10FAC, xmmword_239F10FBC, v204, v205);
  v223 = v222;
  v224 = strlen(v222);
  if (v224 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v225 = v224;
  if (v224 >= 0x17)
  {
    v227 = (v224 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v224 | 7) != 0x17)
      v227 = v224 | 7;
    v228 = v227 + 1;
    v226 = operator new(v227 + 1);
    *(_QWORD *)&v341[8] = v225;
    *(_QWORD *)&v341[16] = v228 | 0x8000000000000000;
    *(_QWORD *)v341 = v226;
  }
  else
  {
    v341[23] = v224;
    v226 = v341;
    if (!v224)
      goto LABEL_319;
  }
  memmove(v226, v223, v225);
LABEL_319:
  v226[v225] = 0;
  sub_239629EF4((uint64_t)v341, (CFStringRef *)value);
  sub_239BB47DC(a1, value[0], a2 + 132);
  v229 = (std::__shared_weak_count *)value[1];
  if (!value[1])
    goto LABEL_323;
  v230 = (unint64_t *)((char *)value[1] + 8);
  do
    v231 = __ldaxr(v230);
  while (__stlxr(v231 - 1, v230));
  if (v231)
  {
LABEL_323:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_325;
    goto LABEL_324;
  }
  ((void (*)(std::__shared_weak_count *))v229->__on_zero_shared)(v229);
  std::__shared_weak_count::__release_weak(v229);
  if ((v341[23] & 0x80000000) != 0)
LABEL_324:
    operator delete(*(void **)v341);
LABEL_325:
  value[0] = (void *)0x7559636E65676506;
  LODWORD(value[1]) = 6519919;
  v232 = sub_23958E4C8((uint64_t)value);
  v233 = strlen(v232);
  if (v233 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v234 = v233;
  if (v233 >= 0x17)
  {
    v236 = (v233 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v233 | 7) != 0x17)
      v236 = v233 | 7;
    v237 = v236 + 1;
    v235 = operator new(v236 + 1);
    *((_QWORD *)&__dst[0] + 1) = v234;
    *(_QWORD *)&__dst[1] = v237 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v235;
  }
  else
  {
    BYTE7(__dst[1]) = v233;
    v235 = __dst;
    if (!v233)
      goto LABEL_333;
  }
  memmove(v235, v232, v234);
LABEL_333:
  *((_BYTE *)v235 + v234) = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v341);
  sub_239BB4338(a1, *(const void **)v341, a2 + 332);
  v238 = *(std::__shared_weak_count **)&v341[8];
  if (!*(_QWORD *)&v341[8])
    goto LABEL_337;
  v239 = (unint64_t *)(*(_QWORD *)&v341[8] + 8);
  do
    v240 = __ldaxr(v239);
  while (__stlxr(v240 - 1, v239));
  if (v240)
  {
LABEL_337:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_339;
    goto LABEL_338;
  }
  ((void (*)(std::__shared_weak_count *))v238->__on_zero_shared)(v238);
  std::__shared_weak_count::__release_weak(v238);
  if (SBYTE7(__dst[1]) < 0)
LABEL_338:
    operator delete(*(void **)&__dst[0]);
LABEL_339:
  *(_OWORD *)v341 = xmmword_239F10FCD;
  strcpy(&v341[16], "2");
  v241 = sub_239A91B18((int8x16_t *)v341);
  v242 = strlen(v241->i8);
  if (v242 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v243 = v242;
  if (v242 >= 0x17)
  {
    v245 = (v242 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v242 | 7) != 0x17)
      v245 = v242 | 7;
    v246 = v245 + 1;
    v244 = operator new(v245 + 1);
    *((_QWORD *)&__dst[0] + 1) = v243;
    *(_QWORD *)&__dst[1] = v246 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v244;
  }
  else
  {
    BYTE7(__dst[1]) = v242;
    v244 = __dst;
    if (!v242)
      goto LABEL_347;
  }
  memmove(v244, v241, v243);
LABEL_347:
  *((_BYTE *)v244 + v243) = 0;
  sub_239BB4BF8((uint64_t)&v336, a2 + 136);
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)value);
  sub_239BB7018(a1, value[0], (uint64_t)&v336);
  v250 = (std::__shared_weak_count *)value[1];
  if (value[1])
  {
    v251 = (unint64_t *)((char *)value[1] + 8);
    do
      v252 = __ldaxr(v251);
    while (__stlxr(v252 - 1, v251));
    if (!v252)
    {
      ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
      std::__shared_weak_count::__release_weak(v250);
    }
  }
  v253 = (std::__shared_weak_count *)*((_QWORD *)&v336 + 1);
  if (!*((_QWORD *)&v336 + 1))
    goto LABEL_356;
  v254 = (unint64_t *)(*((_QWORD *)&v336 + 1) + 8);
  do
    v255 = __ldaxr(v254);
  while (__stlxr(v255 - 1, v254));
  if (v255)
  {
LABEL_356:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_358;
    goto LABEL_357;
  }
  ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
  std::__shared_weak_count::__release_weak(v253);
  if (SBYTE7(__dst[1]) < 0)
LABEL_357:
    operator delete(*(void **)&__dst[0]);
LABEL_358:
  v336 = xmmword_239F10FDF;
  v337 = 0x6D646362697E6BLL;
  sub_2396F1A4C((uint64_t)&v336, (int32x4_t)xmmword_239F10FDF, v247, v248, v249);
  v257 = v256;
  v258 = strlen(v256);
  if (v258 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v259 = (void *)v258;
  if (v258 >= 0x17)
  {
    v261 = (v258 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v258 | 7) != 0x17)
      v261 = v258 | 7;
    v262 = v261 + 1;
    v260 = operator new(v261 + 1);
    value[1] = v259;
    v339 = v262 | 0x8000000000000000;
    value[0] = v260;
    goto LABEL_365;
  }
  HIBYTE(v339) = v258;
  v260 = value;
  if (v258)
LABEL_365:
    memmove(v260, v257, (size_t)v259);
  *((_BYTE *)v259 + (_QWORD)v260) = 0;
  sub_23962C714(&v333);
  *(_OWORD *)v341 = xmmword_239F10DFC;
  *(_QWORD *)&v341[16] = 0x1E04030B181E19;
  sub_2396F1A4C((uint64_t)v341, (int32x4_t)xmmword_239F10DFC, v263, v264, v265);
  v267 = v266;
  v268 = strlen(v266);
  if (v268 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v269 = v268;
  if (v268 >= 0x17)
  {
    v271 = (v268 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v268 | 7) != 0x17)
      v271 = v268 | 7;
    v272 = v271 + 1;
    v270 = operator new(v271 + 1);
    *((_QWORD *)&__dst[0] + 1) = v269;
    *(_QWORD *)&__dst[1] = v272 | 0x8000000000000000;
    *(_QWORD *)&__dst[0] = v270;
  }
  else
  {
    BYTE7(__dst[1]) = v268;
    v270 = __dst;
    if (!v268)
      goto LABEL_374;
  }
  memmove(v270, v267, v269);
LABEL_374:
  *((_BYTE *)v270 + v269) = 0;
  sub_239629EF4((uint64_t)__dst, &v334);
  sub_2396B4EAC((uint64_t)&v333, v334, (_BYTE *)(a2 + 296));
  v276 = v335;
  if (!v335)
    goto LABEL_378;
  v277 = (unint64_t *)&v335->__shared_owners_;
  do
    v278 = __ldaxr(v277);
  while (__stlxr(v278 - 1, v277));
  if (v278)
  {
LABEL_378:
    if ((SBYTE7(__dst[1]) & 0x80000000) == 0)
      goto LABEL_380;
    goto LABEL_379;
  }
  ((void (*)(std::__shared_weak_count *))v276->__on_zero_shared)(v276);
  std::__shared_weak_count::__release_weak(v276);
  if (SBYTE7(__dst[1]) < 0)
LABEL_379:
    operator delete(*(void **)&__dst[0]);
LABEL_380:
  __dst[0] = xmmword_239F10E14;
  *(_OWORD *)((char *)__dst + 12) = *(__int128 *)((char *)&xmmword_239F10E14 + 12);
  sub_2396B946C((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F10E14 + 12), v273, v274, v275);
  v280 = v279;
  v281 = strlen(v279);
  if (v281 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v282 = v281;
  if (v281 >= 0x17)
  {
    v284 = (v281 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v281 | 7) != 0x17)
      v284 = v281 | 7;
    v285 = v284 + 1;
    v283 = operator new(v284 + 1);
    *(_QWORD *)&v341[8] = v282;
    *(_QWORD *)&v341[16] = v285 | 0x8000000000000000;
    *(_QWORD *)v341 = v283;
  }
  else
  {
    v341[23] = v281;
    v283 = v341;
    if (!v281)
      goto LABEL_388;
  }
  memmove(v283, v280, v282);
LABEL_388:
  v283[v282] = 0;
  sub_239629EF4((uint64_t)v341, &v334);
  sub_2396B4EAC((uint64_t)&v333, v334, (_BYTE *)(a2 + 297));
  v288 = v335;
  if (!v335)
    goto LABEL_392;
  v289 = (unint64_t *)&v335->__shared_owners_;
  do
    v290 = __ldaxr(v289);
  while (__stlxr(v290 - 1, v289));
  if (v290)
  {
LABEL_392:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_394;
    goto LABEL_393;
  }
  ((void (*)(std::__shared_weak_count *))v288->__on_zero_shared)(v288);
  std::__shared_weak_count::__release_weak(v288);
  if ((v341[23] & 0x80000000) != 0)
LABEL_393:
    operator delete(*(void **)v341);
LABEL_394:
  __dst[0] = xmmword_239F10E30;
  v292 = v291;
  v293 = strlen(v291);
  if (v293 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v294 = v293;
  if (v293 >= 0x17)
  {
    v296 = (v293 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v293 | 7) != 0x17)
      v296 = v293 | 7;
    v297 = v296 + 1;
    v295 = operator new(v296 + 1);
    *(_QWORD *)&v341[8] = v294;
    *(_QWORD *)&v341[16] = v297 | 0x8000000000000000;
    *(_QWORD *)v341 = v295;
  }
  else
  {
    v341[23] = v293;
    v295 = v341;
    if (!v293)
      goto LABEL_402;
  }
  memmove(v295, v292, v294);
LABEL_402:
  v295[v294] = 0;
  sub_239629EF4((uint64_t)v341, &v334);
  sub_2396B4EAC((uint64_t)&v333, v334, (_BYTE *)(a2 + 298));
  v301 = v335;
  if (!v335)
    goto LABEL_406;
  v302 = (unint64_t *)&v335->__shared_owners_;
  do
    v303 = __ldaxr(v302);
  while (__stlxr(v303 - 1, v302));
  if (v303)
  {
LABEL_406:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_408;
    goto LABEL_407;
  }
  ((void (*)(std::__shared_weak_count *))v301->__on_zero_shared)(v301);
  std::__shared_weak_count::__release_weak(v301);
  if ((v341[23] & 0x80000000) != 0)
LABEL_407:
    operator delete(*(void **)v341);
LABEL_408:
  __dst[0] = xmmword_239F10E51;
  *(_OWORD *)((char *)__dst + 13) = *(__int128 *)((char *)&xmmword_239F10E51 + 13);
  sub_2396EFD48((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F10E51 + 13), v298, v299, v300);
  v305 = v304;
  v306 = strlen(v304);
  if (v306 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v307 = v306;
  if (v306 >= 0x17)
  {
    v309 = (v306 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v306 | 7) != 0x17)
      v309 = v306 | 7;
    v310 = v309 + 1;
    v308 = operator new(v309 + 1);
    *(_QWORD *)&v341[8] = v307;
    *(_QWORD *)&v341[16] = v310 | 0x8000000000000000;
    *(_QWORD *)v341 = v308;
  }
  else
  {
    v341[23] = v306;
    v308 = v341;
    if (!v306)
      goto LABEL_416;
  }
  memmove(v308, v305, v307);
LABEL_416:
  v308[v307] = 0;
  sub_239629EF4((uint64_t)v341, &v334);
  sub_2397373B0((uint64_t)&v333, v334, a2 + 304);
  v314 = v335;
  if (!v335)
    goto LABEL_420;
  v315 = (unint64_t *)&v335->__shared_owners_;
  do
    v316 = __ldaxr(v315);
  while (__stlxr(v316 - 1, v315));
  if (v316)
  {
LABEL_420:
    if ((v341[23] & 0x80000000) == 0)
      goto LABEL_422;
    goto LABEL_421;
  }
  ((void (*)(std::__shared_weak_count *))v314->__on_zero_shared)(v314);
  std::__shared_weak_count::__release_weak(v314);
  if ((v341[23] & 0x80000000) != 0)
LABEL_421:
    operator delete(*(void **)v341);
LABEL_422:
  __dst[0] = xmmword_239F10E6E;
  *(_OWORD *)((char *)__dst + 9) = *(__int128 *)((char *)&xmmword_239F10E6E + 9);
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F10E6E + 9), v311, v312, v313);
  v318 = v317;
  v319 = strlen(v317);
  if (v319 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v320 = v319;
  if (v319 >= 0x17)
  {
    v322 = (v319 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v319 | 7) != 0x17)
      v322 = v319 | 7;
    v323 = v322 + 1;
    v321 = operator new(v322 + 1);
    *(_QWORD *)&v341[8] = v320;
    *(_QWORD *)&v341[16] = v323 | 0x8000000000000000;
    *(_QWORD *)v341 = v321;
  }
  else
  {
    v341[23] = v319;
    v321 = v341;
    if (!v319)
      goto LABEL_430;
  }
  memmove(v321, v318, v320);
LABEL_430:
  v321[v320] = 0;
  sub_239629EF4((uint64_t)v341, &v334);
  sub_2397373B0((uint64_t)&v333, v334, a2 + 312);
  v324 = v335;
  if (v335)
  {
    v325 = (unint64_t *)&v335->__shared_owners_;
    do
      v326 = __ldaxr(v325);
    while (__stlxr(v326 - 1, v325));
    if (!v326)
    {
      ((void (*)(std::__shared_weak_count *))v324->__on_zero_shared)(v324);
      std::__shared_weak_count::__release_weak(v324);
      if ((v341[23] & 0x80000000) == 0)
        goto LABEL_436;
      goto LABEL_435;
    }
  }
  if ((v341[23] & 0x80000000) != 0)
LABEL_435:
    operator delete(*(void **)v341);
LABEL_436:
  sub_239629EF4((uint64_t)value, (CFStringRef *)__dst);
  sub_239BB7018(a1, *(const void **)&__dst[0], (uint64_t)&v333);
  v327 = (std::__shared_weak_count *)*((_QWORD *)&__dst[0] + 1);
  if (*((_QWORD *)&__dst[0] + 1))
  {
    v328 = (unint64_t *)(*((_QWORD *)&__dst[0] + 1) + 8);
    do
      v329 = __ldaxr(v328);
    while (__stlxr(v329 - 1, v328));
    if (!v329)
    {
      ((void (*)(std::__shared_weak_count *))v327->__on_zero_shared)(v327);
      std::__shared_weak_count::__release_weak(v327);
    }
  }
  v330 = (std::__shared_weak_count *)*((_QWORD *)&v333 + 1);
  if (!*((_QWORD *)&v333 + 1))
    goto LABEL_445;
  v331 = (unint64_t *)(*((_QWORD *)&v333 + 1) + 8);
  do
    v332 = __ldaxr(v331);
  while (__stlxr(v332 - 1, v331));
  if (v332)
  {
LABEL_445:
    if ((SHIBYTE(v339) & 0x80000000) == 0)
      return;
    goto LABEL_446;
  }
  ((void (*)(std::__shared_weak_count *))v330->__on_zero_shared)(v330);
  std::__shared_weak_count::__release_weak(v330);
  if (SHIBYTE(v339) < 0)
LABEL_446:
    operator delete(value[0]);
}

void sub_239BB90A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;
  uint64_t v30;

  sub_239416DA0(v30 - 96);
  sub_239416DA0((uint64_t)&a17);
  if (a29 < 0)
    operator delete(__p);
  sub_239416DA0(v29);
  _Unwind_Resume(a1);
}

void sub_239BB9290()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB9298()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92A0()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92A8()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92B0()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92B8()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92C0()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92C8()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92D0()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92D8()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92E0()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92E8()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92F0()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB92F8()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB9300()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB9308()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB9310()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB9318()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB9320()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB9328()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB9330()
{
  JUMPOUT(0x239BB9280);
}

void sub_239BB9338(_OWORD *a1, uint64_t a2)
{
  int8x8_t *v4;
  size_t v5;
  size_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  int16x8_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  const char *v16;
  const char *v17;
  size_t v18;
  size_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  int32x4_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  const char *v28;
  const char *v29;
  size_t v30;
  size_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  int16x8_t v36;
  int16x8_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  const char *v41;
  const char *v42;
  size_t v43;
  size_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int8x16_t v48;
  double v49;
  int32x4_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  const char *v54;
  const char *v55;
  size_t v56;
  size_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  int32x4_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  const char *v66;
  const char *v67;
  size_t v68;
  size_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  int32x4_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  const char *v78;
  const char *v79;
  size_t v80;
  size_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  int8x16_t *v88;
  size_t v89;
  size_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  double v95;
  int16x8_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  const char *v100;
  const char *v101;
  size_t v102;
  size_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  int32x4_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  const char *v112;
  const char *v113;
  size_t v114;
  size_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  int8x16_t v119;
  double v120;
  int32x4_t v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  const char *v125;
  const char *v126;
  size_t v127;
  size_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  const char *v135;
  size_t v136;
  size_t v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  int8x16_t v141;
  double v142;
  int32x4_t v143;
  std::__shared_weak_count *v144;
  unint64_t *v145;
  unint64_t v146;
  const char *v147;
  const char *v148;
  size_t v149;
  size_t v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  const char *v157;
  const char *v158;
  size_t v159;
  size_t v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  int8x16_t v164;
  double v165;
  int32x4_t v166;
  std::__shared_weak_count *v167;
  unint64_t *v168;
  unint64_t v169;
  std::__shared_weak_count *v170;
  unint64_t *p_shared_owners;
  unint64_t v172;
  const char *v173;
  const char *v174;
  size_t v175;
  size_t v176;
  _BYTE *v177;
  uint64_t v178;
  uint64_t v179;
  std::__shared_weak_count *v180;
  unint64_t *v181;
  unint64_t v182;
  const char *v183;
  const char *v184;
  size_t v185;
  size_t v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  int8x16_t v190;
  double v191;
  int32x4_t v192;
  std::__shared_weak_count *v193;
  unint64_t *v194;
  unint64_t v195;
  const char *v196;
  const char *v197;
  size_t v198;
  size_t v199;
  _BYTE *v200;
  uint64_t v201;
  uint64_t v202;
  int8x16_t v203;
  double v204;
  int32x4_t v205;
  std::__shared_weak_count *v206;
  unint64_t *v207;
  unint64_t v208;
  const char *v209;
  const char *v210;
  size_t v211;
  size_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  int8x16_t v216;
  double v217;
  int32x4_t v218;
  std::__shared_weak_count *v219;
  unint64_t *v220;
  unint64_t v221;
  const char *v222;
  const char *v223;
  size_t v224;
  size_t v225;
  _BYTE *v226;
  uint64_t v227;
  uint64_t v228;
  int8x16_t v229;
  double v230;
  int32x4_t v231;
  std::__shared_weak_count *v232;
  unint64_t *v233;
  unint64_t v234;
  const char *v235;
  const char *v236;
  size_t v237;
  size_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  std::__shared_weak_count *v242;
  unint64_t *v243;
  unint64_t v244;
  int8x16_t *v245;
  size_t v246;
  size_t v247;
  _BYTE *v248;
  uint64_t v249;
  uint64_t v250;
  int8x16_t v251;
  double v252;
  int32x4_t v253;
  std::__shared_weak_count *v254;
  unint64_t *v255;
  unint64_t v256;
  const char *v257;
  const char *v258;
  size_t v259;
  size_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  int32x4_t v264;
  double v265;
  int32x4_t v266;
  std::__shared_weak_count *v267;
  unint64_t *v268;
  unint64_t v269;
  unsigned __int8 *v270;
  size_t v271;
  size_t v272;
  _BYTE *v273;
  uint64_t v274;
  uint64_t v275;
  double v276;
  int32x4_t v277;
  std::__shared_weak_count *v278;
  unint64_t *v279;
  unint64_t v280;
  const char *v281;
  const char *v282;
  size_t v283;
  size_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  std::__shared_weak_count *v288;
  unint64_t *v289;
  unint64_t v290;
  int8x16_t *v291;
  size_t v292;
  size_t v293;
  _BYTE *v294;
  uint64_t v295;
  uint64_t v296;
  double v297;
  int32x4_t v298;
  std::__shared_weak_count *v299;
  unint64_t *v300;
  unint64_t v301;
  const char *v302;
  const char *v303;
  size_t v304;
  size_t v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  int16x8_t v309;
  int16x8_t v310;
  std::__shared_weak_count *v311;
  unint64_t *v312;
  unint64_t v313;
  const char *v314;
  const char *v315;
  size_t v316;
  size_t v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  int8x16_t v321;
  double v322;
  int32x4_t v323;
  std::__shared_weak_count *v324;
  unint64_t *v325;
  unint64_t v326;
  const char *v327;
  const char *v328;
  size_t v329;
  size_t v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  int16x8_t v334;
  std::__shared_weak_count *v335;
  unint64_t *v336;
  unint64_t v337;
  const char *v338;
  const char *v339;
  size_t v340;
  size_t v341;
  __int128 *p_p;
  uint64_t v343;
  uint64_t v344;
  const char *v345;
  size_t v346;
  size_t v347;
  _BYTE *v348;
  uint64_t v349;
  uint64_t v350;
  int32x4_t v351;
  double v352;
  int32x4_t v353;
  const void *v354;
  __int128 v355;
  unint64_t *v356;
  unint64_t v357;
  unint64_t v358;
  std::__shared_weak_count *v359;
  uint64_t v360;
  unint64_t *v361;
  unint64_t v362;
  unint64_t v363;
  std::__shared_weak_count *v364;
  unint64_t *v365;
  unint64_t v366;
  std::__shared_weak_count *v367;
  unint64_t *v368;
  unint64_t v369;
  unsigned __int8 *v370;
  size_t v371;
  size_t v372;
  _BYTE *v373;
  uint64_t v374;
  uint64_t v375;
  int8x16_t v376;
  double v377;
  int32x4_t v378;
  std::__shared_weak_count *v379;
  unint64_t *v380;
  unint64_t v381;
  const char *v382;
  const char *v383;
  size_t v384;
  size_t v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  int8x16_t v389;
  double v390;
  int32x4_t v391;
  std::__shared_weak_count *v392;
  unint64_t *v393;
  unint64_t v394;
  const char *v395;
  const char *v396;
  size_t v397;
  size_t v398;
  _BYTE *v399;
  uint64_t v400;
  uint64_t v401;
  int8x16_t v402;
  double v403;
  int32x4_t v404;
  std::__shared_weak_count *v405;
  unint64_t *v406;
  unint64_t v407;
  const char *v408;
  const char *v409;
  size_t v410;
  size_t v411;
  char *v412;
  uint64_t v413;
  uint64_t v414;
  std::__shared_weak_count *v415;
  unint64_t *v416;
  unint64_t v417;
  int8x16_t v418;
  double v419;
  int32x4_t v420;
  std::__shared_weak_count *v421;
  unint64_t *v422;
  unint64_t v423;
  std::__shared_weak_count *v424;
  unint64_t *v425;
  unint64_t v426;
  const char *v427;
  const char *v428;
  size_t v429;
  size_t v430;
  char *v431;
  uint64_t v432;
  uint64_t v433;
  double v434;
  int16x8_t v435;
  std::__shared_weak_count *v436;
  unint64_t *v437;
  unint64_t v438;
  const char *v439;
  const char *v440;
  size_t v441;
  size_t v442;
  char *v443;
  uint64_t v444;
  uint64_t v445;
  std::__shared_weak_count *v446;
  unint64_t *v447;
  unint64_t v448;
  const char *v449;
  const char *v450;
  size_t v451;
  size_t v452;
  _BYTE *v453;
  uint64_t v454;
  uint64_t v455;
  int8x16_t v456;
  double v457;
  int32x4_t v458;
  std::__shared_weak_count *v459;
  unint64_t *v460;
  unint64_t v461;
  std::__shared_weak_count *v462;
  unint64_t *v463;
  unint64_t v464;
  const char *v465;
  const char *v466;
  size_t v467;
  size_t v468;
  char *v469;
  uint64_t v470;
  uint64_t v471;
  int8x16_t v472;
  double v473;
  int32x4_t v474;
  std::__shared_weak_count *v475;
  unint64_t *v476;
  unint64_t v477;
  const char *v478;
  const char *v479;
  size_t v480;
  size_t v481;
  _BYTE *v482;
  uint64_t v483;
  uint64_t v484;
  int8x16_t v485;
  double v486;
  int32x4_t v487;
  std::__shared_weak_count *v488;
  unint64_t *v489;
  unint64_t v490;
  const char *v491;
  const char *v492;
  size_t v493;
  size_t v494;
  _BYTE *v495;
  uint64_t v496;
  uint64_t v497;
  int8x16_t v498;
  double v499;
  int32x4_t v500;
  std::__shared_weak_count *v501;
  unint64_t *v502;
  unint64_t v503;
  const char *v504;
  const char *v505;
  size_t v506;
  size_t v507;
  char *v508;
  uint64_t v509;
  uint64_t v510;
  int8x16_t v511;
  double v512;
  int32x4_t v513;
  std::__shared_weak_count *v514;
  unint64_t *v515;
  unint64_t v516;
  const char *v517;
  const char *v518;
  size_t v519;
  size_t v520;
  _BYTE *v521;
  uint64_t v522;
  uint64_t v523;
  int8x16_t v524;
  double v525;
  int32x4_t v526;
  std::__shared_weak_count *v527;
  unint64_t *v528;
  unint64_t v529;
  const char *v530;
  const char *v531;
  size_t v532;
  size_t v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  std::__shared_weak_count *v537;
  unint64_t *v538;
  unint64_t v539;
  int8x16_t *v540;
  size_t v541;
  size_t v542;
  __int128 *v543;
  uint64_t v544;
  uint64_t v545;
  int8x16_t v546;
  double v547;
  int32x4_t v548;
  const char *v549;
  const char *v550;
  size_t v551;
  size_t v552;
  _BYTE *v553;
  uint64_t v554;
  uint64_t v555;
  std::__shared_weak_count *v556;
  unint64_t *v557;
  unint64_t v558;
  int8x16_t v559;
  double v560;
  int32x4_t v561;
  std::__shared_weak_count *v562;
  unint64_t *v563;
  unint64_t v564;
  std::__shared_weak_count *v565;
  unint64_t *v566;
  unint64_t v567;
  const char *v568;
  const char *v569;
  size_t v570;
  size_t v571;
  __int128 *v572;
  uint64_t v573;
  uint64_t v574;
  int8x16_t v575;
  double v576;
  int32x4_t v577;
  const char *v578;
  const char *v579;
  size_t v580;
  size_t v581;
  _BYTE *v582;
  uint64_t v583;
  uint64_t v584;
  std::__shared_weak_count *v585;
  unint64_t *v586;
  unint64_t v587;
  const char *v588;
  const char *v589;
  size_t v590;
  size_t v591;
  _BYTE *v592;
  uint64_t v593;
  uint64_t v594;
  std::__shared_weak_count *v595;
  unint64_t *v596;
  unint64_t v597;
  const char *v598;
  const char *v599;
  size_t v600;
  size_t v601;
  _BYTE *v602;
  uint64_t v603;
  uint64_t v604;
  int8x16_t v605;
  double v606;
  int32x4_t v607;
  std::__shared_weak_count *v608;
  unint64_t *v609;
  unint64_t v610;
  const char *v611;
  const char *v612;
  size_t v613;
  size_t v614;
  char *v615;
  uint64_t v616;
  uint64_t v617;
  std::__shared_weak_count *v618;
  unint64_t *v619;
  unint64_t v620;
  int8x16_t *v621;
  size_t v622;
  size_t v623;
  _BYTE *v624;
  uint64_t v625;
  uint64_t v626;
  std::__shared_weak_count *v627;
  unint64_t *v628;
  unint64_t v629;
  const char *v630;
  size_t v631;
  size_t v632;
  _BYTE *v633;
  uint64_t v634;
  uint64_t v635;
  std::__shared_weak_count *v636;
  unint64_t *v637;
  unint64_t v638;
  double v639;
  double v640;
  int16x8_t v641;
  std::__shared_weak_count *v642;
  unint64_t *v643;
  unint64_t v644;
  std::__shared_weak_count *v645;
  unint64_t *v646;
  unint64_t v647;
  const char *v648;
  const char *v649;
  size_t v650;
  size_t v651;
  char *v652;
  uint64_t v653;
  uint64_t v654;
  int8x16_t v655;
  double v656;
  int32x4_t v657;
  std::__shared_weak_count *v658;
  unint64_t *v659;
  unint64_t v660;
  const char *v661;
  const char *v662;
  size_t v663;
  size_t v664;
  char *v665;
  uint64_t v666;
  uint64_t v667;
  int8x16_t v668;
  double v669;
  int32x4_t v670;
  std::__shared_weak_count *v671;
  unint64_t *v672;
  unint64_t v673;
  const char *v674;
  const char *v675;
  size_t v676;
  size_t v677;
  char *v678;
  uint64_t v679;
  uint64_t v680;
  std::__shared_weak_count *v681;
  unint64_t *v682;
  unint64_t v683;
  int v684;
  _BYTE v685[24];
  __int128 v686;
  __int128 __p;
  unint64_t v688;
  _BYTE __dst[44];
  char v690[16];
  char v691[24];
  __int128 v692;
  uint64_t v693;

  v693 = *MEMORY[0x24BDAC8D0];
  sub_23962C714(a1);
  *(_QWORD *)&__p = 0x232A270C3E352053;
  WORD4(__p) = 54;
  v4 = sub_23950FF84((int8x8_t *)&__p);
  v5 = strlen((const char *)v4);
  if (v5 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *(_QWORD *)&__dst[8] = v6;
    *(_QWORD *)&__dst[16] = v9 | 0x8000000000000000;
    *(_QWORD *)__dst = v7;
  }
  else
  {
    __dst[23] = v5;
    v7 = __dst;
    if (!v5)
      goto LABEL_9;
  }
  memmove(v7, v4, v6);
LABEL_9:
  v7[v6] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v691);
  sub_239BBD4C4((uint64_t)a1, *(const void **)v691, (int *)a2);
  v13 = *(std::__shared_weak_count **)&v691[8];
  if (!*(_QWORD *)&v691[8])
    goto LABEL_13;
  v14 = (unint64_t *)(*(_QWORD *)&v691[8] + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_13:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_14:
    operator delete(*(void **)__dst);
LABEL_15:
  strcpy(__dst, "W:6/\b92 \b#%64<\b%2'%8=24#>89\b2%%8%");
  sub_2396F0120(__dst, *(int16x8_t *)"W:6/\b92 \b#%64<\b%2'%8=24#>89\b2%%8%", *(double *)"2'%8=24#>89\b2%%8%", v10, v11, v12);
  v17 = v16;
  v18 = strlen(v16);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    v20 = (char *)operator new(v21 + 1);
    *(_QWORD *)&v691[8] = v19;
    *(_QWORD *)&v691[16] = v22 | 0x8000000000000000;
    *(_QWORD *)v691 = v20;
  }
  else
  {
    v691[23] = v18;
    v20 = v691;
    if (!v18)
      goto LABEL_23;
  }
  memmove(v20, v17, v19);
LABEL_23:
  v20[v19] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 152);
  v25 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_27;
  v26 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v27 = __ldaxr(v26);
  while (__stlxr(v27 - 1, v26));
  if (v27)
  {
LABEL_27:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
  std::__shared_weak_count::__release_weak(v25);
  if (v691[23] < 0)
LABEL_28:
    operator delete(*(void **)v691);
LABEL_29:
  *(_OWORD *)__dst = xmmword_239F11019;
  strcpy(&__dst[16], "XeftbknibXufsnh");
  sub_2396F06F0((uint64_t)__dst, (int32x4_t)xmmword_239F11019, *(int8x16_t *)"XeftbknibXufsnh", v23, v24);
  v29 = v28;
  v30 = strlen(v28);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v31 = v30;
  if (v30 >= 0x17)
  {
    v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v33 = v30 | 7;
    v34 = v33 + 1;
    v32 = (char *)operator new(v33 + 1);
    *(_QWORD *)&v691[8] = v31;
    *(_QWORD *)&v691[16] = v34 | 0x8000000000000000;
    *(_QWORD *)v691 = v32;
  }
  else
  {
    v691[23] = v30;
    v32 = v691;
    if (!v30)
      goto LABEL_37;
  }
  memmove(v32, v29, v31);
LABEL_37:
  v32[v31] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 160);
  v38 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_41;
  v39 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v40 = __ldaxr(v39);
  while (__stlxr(v40 - 1, v39));
  if (v40)
  {
LABEL_41:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_43;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  if (v691[23] < 0)
LABEL_42:
    operator delete(*(void **)v691);
LABEL_43:
  *(_OWORD *)__dst = xmmword_239F11039;
  *(_OWORD *)&__dst[16] = *(_OWORD *)dbl_239F11049;
  *(_OWORD *)&__dst[28] = *(_OWORD *)((char *)&dbl_239F11049[1] + 4);
  sub_2396F0FE4(__dst, *(double *)((char *)&dbl_239F11049[1] + 4), dbl_239F11049[0], v35, v36, v37);
  v42 = v41;
  v43 = strlen(v41);
  if (v43 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v44 = v43;
  if (v43 >= 0x17)
  {
    v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v43 | 7) != 0x17)
      v46 = v43 | 7;
    v47 = v46 + 1;
    v45 = (char *)operator new(v46 + 1);
    *(_QWORD *)&v691[8] = v44;
    *(_QWORD *)&v691[16] = v47 | 0x8000000000000000;
    *(_QWORD *)v691 = v45;
  }
  else
  {
    v691[23] = v43;
    v45 = v691;
    if (!v43)
      goto LABEL_51;
  }
  memmove(v45, v42, v44);
LABEL_51:
  v45[v44] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 648);
  v51 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_55;
  v52 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v53 = __ldaxr(v52);
  while (__stlxr(v53 - 1, v52));
  if (v53)
  {
LABEL_55:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_57;
    goto LABEL_56;
  }
  ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
  std::__shared_weak_count::__release_weak(v51);
  if (v691[23] < 0)
LABEL_56:
    operator delete(*(void **)v691);
LABEL_57:
  strcpy(__dst, "*_YOuZXCEXuZEYOYuCLuK\\KCFKHFO");
  sub_2396F0EE8((uint64_t)__dst, *(int32x4_t *)"OYuCLuK\\KCFKHFO", v48, v49, v50);
  v55 = v54;
  v56 = strlen(v54);
  if (v56 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v57 = v56;
  if (v56 >= 0x17)
  {
    v59 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v56 | 7) != 0x17)
      v59 = v56 | 7;
    v60 = v59 + 1;
    v58 = (char *)operator new(v59 + 1);
    *(_QWORD *)&v691[8] = v57;
    *(_QWORD *)&v691[16] = v60 | 0x8000000000000000;
    *(_QWORD *)v691 = v58;
  }
  else
  {
    v691[23] = v56;
    v58 = v691;
    if (!v56)
      goto LABEL_65;
  }
  memmove(v58, v55, v57);
LABEL_65:
  v58[v57] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 40));
  v63 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_69;
  v64 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v65 = __ldaxr(v64);
  while (__stlxr(v65 - 1, v64));
  if (v65)
  {
LABEL_69:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_70;
  }
  ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
  std::__shared_weak_count::__release_weak(v63);
  if (v691[23] < 0)
LABEL_70:
    operator delete(*(void **)v691);
LABEL_71:
  *(_OWORD *)__dst = xmmword_239F11083;
  *(int8x16_t *)&__dst[16] = xmmword_239F11093;
  sub_2396F06F0((uint64_t)__dst, (int32x4_t)xmmword_239F11083, xmmword_239F11093, v61, v62);
  v67 = v66;
  v68 = strlen(v66);
  if (v68 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v69 = v68;
  if (v68 >= 0x17)
  {
    v71 = (v68 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v68 | 7) != 0x17)
      v71 = v68 | 7;
    v72 = v71 + 1;
    v70 = (char *)operator new(v71 + 1);
    *(_QWORD *)&v691[8] = v69;
    *(_QWORD *)&v691[16] = v72 | 0x8000000000000000;
    *(_QWORD *)v691 = v70;
  }
  else
  {
    v691[23] = v68;
    v70 = v691;
    if (!v68)
      goto LABEL_79;
  }
  memmove(v70, v67, v69);
LABEL_79:
  v70[v69] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 48);
  v75 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_83;
  v76 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v77 = __ldaxr(v76);
  while (__stlxr(v77 - 1, v76));
  if (v77)
  {
LABEL_83:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_85;
    goto LABEL_84;
  }
  ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
  std::__shared_weak_count::__release_weak(v75);
  if (v691[23] < 0)
LABEL_84:
    operator delete(*(void **)v691);
LABEL_85:
  *(_OWORD *)__dst = xmmword_239F110A3;
  *(int8x16_t *)&__dst[16] = xmmword_239F110B3;
  sub_2396F06F0((uint64_t)__dst, (int32x4_t)xmmword_239F110A3, xmmword_239F110B3, v73, v74);
  v79 = v78;
  v80 = strlen(v78);
  if (v80 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v81 = v80;
  if (v80 >= 0x17)
  {
    v83 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17)
      v83 = v80 | 7;
    v84 = v83 + 1;
    v82 = (char *)operator new(v83 + 1);
    *(_QWORD *)&v691[8] = v81;
    *(_QWORD *)&v691[16] = v84 | 0x8000000000000000;
    *(_QWORD *)v691 = v82;
  }
  else
  {
    v691[23] = v80;
    v82 = v691;
    if (!v80)
      goto LABEL_93;
  }
  memmove(v82, v79, v81);
LABEL_93:
  v82[v81] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 56);
  v85 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_97;
  v86 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v87 = __ldaxr(v86);
  while (__stlxr(v87 - 1, v86));
  if (v87)
  {
LABEL_97:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_99;
    goto LABEL_98;
  }
  ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
  std::__shared_weak_count::__release_weak(v85);
  if (v691[23] < 0)
LABEL_98:
    operator delete(*(void **)v691);
LABEL_99:
  *(_OWORD *)v691 = xmmword_239F110C3;
  strcpy(&v691[16], "(");
  v88 = sub_239A91B18((int8x16_t *)v691);
  v89 = strlen(v88->i8);
  if (v89 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v90 = v89;
  if (v89 >= 0x17)
  {
    v92 = (v89 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v89 | 7) != 0x17)
      v92 = v89 | 7;
    v93 = v92 + 1;
    v91 = operator new(v92 + 1);
    *(_QWORD *)&__dst[8] = v90;
    *(_QWORD *)&__dst[16] = v93 | 0x8000000000000000;
    *(_QWORD *)__dst = v91;
  }
  else
  {
    __dst[23] = v89;
    v91 = __dst;
    if (!v89)
      goto LABEL_107;
  }
  memmove(v91, v88, v90);
LABEL_107:
  v91[v90] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 41));
  v97 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_111;
  v98 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v99 = __ldaxr(v98);
  while (__stlxr(v99 - 1, v98));
  if (v99)
  {
LABEL_111:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_113;
    goto LABEL_112;
  }
  ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
  std::__shared_weak_count::__release_weak(v97);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_112:
    operator delete(*(void **)__dst);
LABEL_113:
  strcpy(__dst, "+FJStMBEJGt_YJH@tYN[YDANH_BDEtNYYDY");
  sub_2396F01D4(__dst, *(int16x8_t *)"+FJStMBEJGt_YJH@tYN[YDANH_BDEtNYYDY", *(double *)"tYN[YDANH_BDEtNYYDY", v94, v95, v96);
  v101 = v100;
  v102 = strlen(v100);
  if (v102 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v103 = v102;
  if (v102 >= 0x17)
  {
    v105 = (v102 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v102 | 7) != 0x17)
      v105 = v102 | 7;
    v106 = v105 + 1;
    v104 = (char *)operator new(v105 + 1);
    *(_QWORD *)&v691[8] = v103;
    *(_QWORD *)&v691[16] = v106 | 0x8000000000000000;
    *(_QWORD *)v691 = v104;
  }
  else
  {
    v691[23] = v102;
    v104 = v691;
    if (!v102)
      goto LABEL_121;
  }
  memmove(v104, v101, v103);
LABEL_121:
  v104[v103] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 224);
  v109 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_125;
  v110 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v111 = __ldaxr(v110);
  while (__stlxr(v111 - 1, v110));
  if (v111)
  {
LABEL_125:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_127;
    goto LABEL_126;
  }
  ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
  std::__shared_weak_count::__release_weak(v109);
  if (v691[23] < 0)
LABEL_126:
    operator delete(*(void **)v691);
LABEL_127:
  strcpy(__dst, "!LHO~HOBSDRGL~HL@FD~HOMHDS~S@UHN");
  sub_2396EFE38((uint64_t)__dst, *(int32x4_t *)"!LHO~HOBSDRGL~HL@FD~HOMHDS~S@UHN", *(int8x16_t *)"@FD~HOMHDS~S@UHN", v107, v108);
  v113 = v112;
  v114 = strlen(v112);
  if (v114 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v115 = v114;
  if (v114 >= 0x17)
  {
    v117 = (v114 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v114 | 7) != 0x17)
      v117 = v114 | 7;
    v118 = v117 + 1;
    v116 = (char *)operator new(v117 + 1);
    *(_QWORD *)&v691[8] = v115;
    *(_QWORD *)&v691[16] = v118 | 0x8000000000000000;
    *(_QWORD *)v691 = v116;
  }
  else
  {
    v691[23] = v114;
    v116 = v691;
    if (!v114)
      goto LABEL_135;
  }
  memmove(v116, v113, v115);
LABEL_135:
  v116[v115] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 16);
  v122 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_139;
  v123 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v124 = __ldaxr(v123);
  while (__stlxr(v124 - 1, v123));
  if (v124)
  {
LABEL_139:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_141;
    goto LABEL_140;
  }
  ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
  std::__shared_weak_count::__release_weak(v122);
  if (v691[23] < 0)
LABEL_140:
    operator delete(*(void **)v691);
LABEL_141:
  *(_OWORD *)__dst = xmmword_239F1111A;
  sub_2396EFF58((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F1111A + 15), v119, v120, v121);
  v126 = v125;
  v127 = strlen(v125);
  if (v127 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v128 = v127;
  if (v127 >= 0x17)
  {
    v130 = (v127 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v127 | 7) != 0x17)
      v130 = v127 | 7;
    v131 = v130 + 1;
    v129 = (char *)operator new(v130 + 1);
    *(_QWORD *)&v691[8] = v128;
    *(_QWORD *)&v691[16] = v131 | 0x8000000000000000;
    *(_QWORD *)v691 = v129;
  }
  else
  {
    v691[23] = v127;
    v129 = v691;
    if (!v127)
      goto LABEL_149;
  }
  memmove(v129, v126, v128);
LABEL_149:
  v129[v128] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 24);
  v132 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_153;
  v133 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v134 = __ldaxr(v133);
  while (__stlxr(v134 - 1, v133));
  if (v134)
  {
LABEL_153:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_155;
    goto LABEL_154;
  }
  ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
  std::__shared_weak_count::__release_weak(v132);
  if (v691[23] < 0)
LABEL_154:
    operator delete(*(void **)v691);
LABEL_155:
  *(_QWORD *)&__p = 0x1E0418330119026CLL;
  BYTE12(__p) = 0;
  DWORD2(__p) = 520621321;
  v135 = sub_239510ECC((uint64_t)&__p);
  v136 = strlen(v135);
  if (v136 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v137 = v136;
  if (v136 >= 0x17)
  {
    v139 = (v136 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v136 | 7) != 0x17)
      v139 = v136 | 7;
    v140 = v139 + 1;
    v138 = operator new(v139 + 1);
    *(_QWORD *)&__dst[8] = v137;
    *(_QWORD *)&__dst[16] = v140 | 0x8000000000000000;
    *(_QWORD *)__dst = v138;
  }
  else
  {
    __dst[23] = v136;
    v138 = __dst;
    if (!v136)
      goto LABEL_163;
  }
  memmove(v138, v135, v137);
LABEL_163:
  v138[v137] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v691);
  sub_239BB4A9C((uint64_t)a1, *(const void **)v691, a2 + 8);
  v144 = *(std::__shared_weak_count **)&v691[8];
  if (!*(_QWORD *)&v691[8])
    goto LABEL_167;
  v145 = (unint64_t *)(*(_QWORD *)&v691[8] + 8);
  do
    v146 = __ldaxr(v145);
  while (__stlxr(v146 - 1, v145));
  if (v146)
  {
LABEL_167:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_169;
    goto LABEL_168;
  }
  ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
  std::__shared_weak_count::__release_weak(v144);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_168:
    operator delete(*(void **)__dst);
LABEL_169:
  *(_OWORD *)v691 = xmmword_239F11139;
  strcpy(&v691[16], "usqKzay");
  sub_2396F1A4C((uint64_t)v691, (int32x4_t)xmmword_239F11139, v141, v142, v143);
  v148 = v147;
  v149 = strlen(v147);
  if (v149 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v150 = v149;
  if (v149 >= 0x17)
  {
    v152 = (v149 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v149 | 7) != 0x17)
      v152 = v149 | 7;
    v153 = v152 + 1;
    v151 = operator new(v152 + 1);
    *(_QWORD *)&__dst[8] = v150;
    *(_QWORD *)&__dst[16] = v153 | 0x8000000000000000;
    *(_QWORD *)__dst = v151;
  }
  else
  {
    __dst[23] = v149;
    v151 = __dst;
    if (!v149)
      goto LABEL_177;
  }
  memmove(v151, v148, v150);
LABEL_177:
  v151[v150] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_239BB4A9C((uint64_t)a1, (const void *)__p, a2 + 232);
  v154 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_181;
  v155 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v156 = __ldaxr(v155);
  while (__stlxr(v156 - 1, v155));
  if (v156)
  {
LABEL_181:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_183;
    goto LABEL_182;
  }
  ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
  std::__shared_weak_count::__release_weak(v154);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_182:
    operator delete(*(void **)__dst);
LABEL_183:
  *(_QWORD *)v685 = 0x3A020C030B0A0665;
  v685[14] = 0;
  strcpy(&v685[12], "\t");
  *(_DWORD *)&v685[8] = 17502215;
  sub_23958E5E0((uint64_t)v685);
  v158 = v157;
  v159 = strlen(v157);
  if (v159 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v160 = v159;
  if (v159 >= 0x17)
  {
    v162 = (v159 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v159 | 7) != 0x17)
      v162 = v159 | 7;
    v163 = v162 + 1;
    v161 = operator new(v162 + 1);
    *(_QWORD *)&__dst[8] = v160;
    *(_QWORD *)&__dst[16] = v163 | 0x8000000000000000;
    *(_QWORD *)__dst = v161;
  }
  else
  {
    __dst[23] = v159;
    v161 = __dst;
    if (!v159)
      goto LABEL_191;
  }
  memmove(v161, v158, v160);
LABEL_191:
  v161[v160] = 0;
  sub_239BBD628((uint64_t)&__p, a2 + 240);
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v691);
  sub_239BB7018((uint64_t)a1, *(const void **)v691, (uint64_t)&__p);
  v167 = *(std::__shared_weak_count **)&v691[8];
  if (!*(_QWORD *)&v691[8])
    goto LABEL_195;
  v168 = (unint64_t *)(*(_QWORD *)&v691[8] + 8);
  do
    v169 = __ldaxr(v168);
  while (__stlxr(v169 - 1, v168));
  if (!v169)
  {
    ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
    std::__shared_weak_count::__release_weak(v167);
    v170 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
    if (!*((_QWORD *)&__p + 1))
      goto LABEL_199;
  }
  else
  {
LABEL_195:
    v170 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
    if (!*((_QWORD *)&__p + 1))
      goto LABEL_199;
  }
  p_shared_owners = (unint64_t *)&v170->__shared_owners_;
  do
    v172 = __ldaxr(p_shared_owners);
  while (__stlxr(v172 - 1, p_shared_owners));
  if (v172)
  {
LABEL_199:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_201;
    goto LABEL_200;
  }
  ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
  std::__shared_weak_count::__release_weak(v170);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_200:
    operator delete(*(void **)__dst);
LABEL_201:
  strcpy(v691, "R3>;5<\r0+\r =0'!&\r!=>$7 ");
  sub_2396F1A4C((uint64_t)v691, *(int32x4_t *)"R3>;5<\r0+\r =0'!&\r!=>$7 ", v164, v165, v166);
  v174 = v173;
  v175 = strlen(v173);
  if (v175 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v176 = v175;
  if (v175 >= 0x17)
  {
    v178 = (v175 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v175 | 7) != 0x17)
      v178 = v175 | 7;
    v179 = v178 + 1;
    v177 = operator new(v178 + 1);
    *(_QWORD *)&__dst[8] = v176;
    *(_QWORD *)&__dst[16] = v179 | 0x8000000000000000;
    *(_QWORD *)__dst = v177;
  }
  else
  {
    __dst[23] = v175;
    v177 = __dst;
    if (!v175)
      goto LABEL_209;
  }
  memmove(v177, v174, v176);
LABEL_209:
  v177[v176] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 504));
  v180 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_213;
  v181 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v182 = __ldaxr(v181);
  while (__stlxr(v182 - 1, v181));
  if (v182)
  {
LABEL_213:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_215;
    goto LABEL_214;
  }
  ((void (*)(std::__shared_weak_count *))v180->__on_zero_shared)(v180);
  std::__shared_weak_count::__release_weak(v180);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_214:
    operator delete(*(void **)__dst);
LABEL_215:
  *(_OWORD *)v691 = xmmword_239F11293;
  v691[16] = 0;
  sub_2396EFA24((uint64_t)v691);
  v184 = v183;
  v185 = strlen(v183);
  if (v185 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v186 = v185;
  if (v185 >= 0x17)
  {
    v188 = (v185 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v185 | 7) != 0x17)
      v188 = v185 | 7;
    v189 = v188 + 1;
    v187 = operator new(v188 + 1);
    *(_QWORD *)&__dst[8] = v186;
    *(_QWORD *)&__dst[16] = v189 | 0x8000000000000000;
    *(_QWORD *)__dst = v187;
  }
  else
  {
    __dst[23] = v185;
    v187 = __dst;
    if (!v185)
      goto LABEL_223;
  }
  memmove(v187, v184, v186);
LABEL_223:
  v187[v186] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 505));
  v193 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_227;
  v194 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v195 = __ldaxr(v194);
  while (__stlxr(v195 - 1, v194));
  if (v195)
  {
LABEL_227:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_229;
    goto LABEL_228;
  }
  ((void (*)(std::__shared_weak_count *))v193->__on_zero_shared)(v193);
  std::__shared_weak_count::__release_weak(v193);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_228:
    operator delete(*(void **)__dst);
LABEL_229:
  strcpy(v691, ":[VS]TeI\\WeS\\e[L[SV[XV_");
  sub_2396F1A4C((uint64_t)v691, *(int32x4_t *)":[VS]TeI\\WeS\\e[L[SV[XV_", v190, v191, v192);
  v197 = v196;
  v198 = strlen(v196);
  if (v198 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v199 = v198;
  if (v198 >= 0x17)
  {
    v201 = (v198 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v198 | 7) != 0x17)
      v201 = v198 | 7;
    v202 = v201 + 1;
    v200 = operator new(v201 + 1);
    *(_QWORD *)&__dst[8] = v199;
    *(_QWORD *)&__dst[16] = v202 | 0x8000000000000000;
    *(_QWORD *)__dst = v200;
  }
  else
  {
    __dst[23] = v198;
    v200 = __dst;
    if (!v198)
      goto LABEL_237;
  }
  memmove(v200, v197, v199);
LABEL_237:
  v200[v199] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 506));
  v206 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_241;
  v207 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v208 = __ldaxr(v207);
  while (__stlxr(v208 - 1, v207));
  if (v208)
  {
LABEL_241:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_243;
    goto LABEL_242;
  }
  ((void (*)(std::__shared_weak_count *))v206->__on_zero_shared)(v206);
  std::__shared_weak_count::__release_weak(v206);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_242:
    operator delete(*(void **)__dst);
LABEL_243:
  *(_OWORD *)__dst = xmmword_239F112BC;
  *(_OWORD *)&__dst[15] = *(__int128 *)((char *)&xmmword_239F112BC + 15);
  sub_2396EFF58((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F112BC + 15), v203, v204, v205);
  v210 = v209;
  v211 = strlen(v209);
  if (v211 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v212 = v211;
  if (v211 >= 0x17)
  {
    v214 = (v211 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v211 | 7) != 0x17)
      v214 = v211 | 7;
    v215 = v214 + 1;
    v213 = (char *)operator new(v214 + 1);
    *(_QWORD *)&v691[8] = v212;
    *(_QWORD *)&v691[16] = v215 | 0x8000000000000000;
    *(_QWORD *)v691 = v213;
  }
  else
  {
    v691[23] = v211;
    v213 = v691;
    if (!v211)
      goto LABEL_251;
  }
  memmove(v213, v210, v212);
LABEL_251:
  v213[v212] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 507));
  v219 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_255;
  v220 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v221 = __ldaxr(v220);
  while (__stlxr(v221 - 1, v220));
  if (v221)
  {
LABEL_255:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_257;
    goto LABEL_256;
  }
  ((void (*)(std::__shared_weak_count *))v219->__on_zero_shared)(v219);
  std::__shared_weak_count::__release_weak(v219);
  if (v691[23] < 0)
LABEL_256:
    operator delete(*(void **)v691);
LABEL_257:
  *(_OWORD *)v691 = xmmword_239F112DB;
  strcpy(&v691[15], "!),!\",%");
  sub_2396EFBE0((uint64_t)v691, (int32x4_t)xmmword_239F112DB, v216, v217, v218);
  v223 = v222;
  v224 = strlen(v222);
  if (v224 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v225 = v224;
  if (v224 >= 0x17)
  {
    v227 = (v224 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v224 | 7) != 0x17)
      v227 = v224 | 7;
    v228 = v227 + 1;
    v226 = operator new(v227 + 1);
    *(_QWORD *)&__dst[8] = v225;
    *(_QWORD *)&__dst[16] = v228 | 0x8000000000000000;
    *(_QWORD *)__dst = v226;
  }
  else
  {
    __dst[23] = v224;
    v226 = __dst;
    if (!v224)
      goto LABEL_265;
  }
  memmove(v226, v223, v225);
LABEL_265:
  v226[v225] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 592));
  v232 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_269;
  v233 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v234 = __ldaxr(v233);
  while (__stlxr(v234 - 1, v233));
  if (v234)
  {
LABEL_269:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_271;
    goto LABEL_270;
  }
  ((void (*)(std::__shared_weak_count *))v232->__on_zero_shared)(v232);
  std::__shared_weak_count::__release_weak(v232);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_270:
    operator delete(*(void **)__dst);
LABEL_271:
  *(_OWORD *)__dst = xmmword_239F112F2;
  *(_OWORD *)&__dst[9] = *(__int128 *)((char *)&xmmword_239F112F2 + 9);
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F112F2 + 9), v229, v230, v231);
  v236 = v235;
  v237 = strlen(v235);
  if (v237 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v238 = v237;
  if (v237 >= 0x17)
  {
    v240 = (v237 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v237 | 7) != 0x17)
      v240 = v237 | 7;
    v241 = v240 + 1;
    v239 = (char *)operator new(v240 + 1);
    *(_QWORD *)&v691[8] = v238;
    *(_QWORD *)&v691[16] = v241 | 0x8000000000000000;
    *(_QWORD *)v691 = v239;
  }
  else
  {
    v691[23] = v237;
    v239 = v691;
    if (!v237)
      goto LABEL_279;
  }
  memmove(v239, v236, v238);
LABEL_279:
  v239[v238] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 600);
  v242 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_283;
  v243 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v244 = __ldaxr(v243);
  while (__stlxr(v244 - 1, v243));
  if (v244)
  {
LABEL_283:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_285;
    goto LABEL_284;
  }
  ((void (*)(std::__shared_weak_count *))v242->__on_zero_shared)(v242);
  std::__shared_weak_count::__release_weak(v242);
  if (v691[23] < 0)
LABEL_284:
    operator delete(*(void **)v691);
LABEL_285:
  *(_OWORD *)v691 = xmmword_239F1130B;
  *(_WORD *)&v691[16] = 19;
  v245 = sub_239A91B18((int8x16_t *)v691);
  v246 = strlen(v245->i8);
  if (v246 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v247 = v246;
  if (v246 >= 0x17)
  {
    v249 = (v246 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v246 | 7) != 0x17)
      v249 = v246 | 7;
    v250 = v249 + 1;
    v248 = operator new(v249 + 1);
    *(_QWORD *)&__dst[8] = v247;
    *(_QWORD *)&__dst[16] = v250 | 0x8000000000000000;
    *(_QWORD *)__dst = v248;
  }
  else
  {
    __dst[23] = v246;
    v248 = __dst;
    if (!v246)
      goto LABEL_293;
  }
  memmove(v248, v245, v247);
LABEL_293:
  v248[v247] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 608);
  v254 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_297;
  v255 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v256 = __ldaxr(v255);
  while (__stlxr(v256 - 1, v255));
  if (v256)
  {
LABEL_297:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_299;
    goto LABEL_298;
  }
  ((void (*)(std::__shared_weak_count *))v254->__on_zero_shared)(v254);
  std::__shared_weak_count::__release_weak(v254);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_298:
    operator delete(*(void **)__dst);
LABEL_299:
  *(_OWORD *)__dst = xmmword_239F1131D;
  strcpy(&__dst[10], "vBio|~vBlh|qtid");
  sub_239A93C04(__dst, *(int32x4_t *)((char *)&xmmword_239F1131D + 10), v251, v252, v253);
  v258 = v257;
  v259 = strlen(v257);
  if (v259 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v260 = v259;
  if (v259 >= 0x17)
  {
    v262 = (v259 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v259 | 7) != 0x17)
      v262 = v259 | 7;
    v263 = v262 + 1;
    v261 = (char *)operator new(v262 + 1);
    *(_QWORD *)&v691[8] = v260;
    *(_QWORD *)&v691[16] = v263 | 0x8000000000000000;
    *(_QWORD *)v691 = v261;
  }
  else
  {
    v691[23] = v259;
    v261 = v691;
    if (!v259)
      goto LABEL_307;
  }
  memmove(v261, v258, v260);
LABEL_307:
  v261[v260] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 616));
  v267 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_311;
  v268 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v269 = __ldaxr(v268);
  while (__stlxr(v269 - 1, v268));
  if (v269)
  {
LABEL_311:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_313;
    goto LABEL_312;
  }
  ((void (*)(std::__shared_weak_count *))v267->__on_zero_shared)(v267);
  std::__shared_weak_count::__release_weak(v267);
  if (v691[23] < 0)
LABEL_312:
    operator delete(*(void **)v691);
LABEL_313:
  *(_OWORD *)v691 = xmmword_239F11337;
  *(_QWORD *)&v691[14] = 0x1C0D18150C1E17;
  v270 = sub_239A90BEC((unsigned __int8 *)v691, (int8x16_t)xmmword_239F11337, v264, v265, v266);
  v271 = strlen((const char *)v270);
  if (v271 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v272 = v271;
  if (v271 >= 0x17)
  {
    v274 = (v271 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v271 | 7) != 0x17)
      v274 = v271 | 7;
    v275 = v274 + 1;
    v273 = operator new(v274 + 1);
    *(_QWORD *)&__dst[8] = v272;
    *(_QWORD *)&__dst[16] = v275 | 0x8000000000000000;
    *(_QWORD *)__dst = v273;
  }
  else
  {
    __dst[23] = v271;
    v273 = __dst;
    if (!v271)
      goto LABEL_321;
  }
  memmove(v273, v270, v272);
LABEL_321:
  v273[v272] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 656));
  v278 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_325;
  v279 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v280 = __ldaxr(v279);
  while (__stlxr(v280 - 1, v279));
  if (v280)
  {
LABEL_325:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_327;
    goto LABEL_326;
  }
  ((void (*)(std::__shared_weak_count *))v278->__on_zero_shared)(v278);
  std::__shared_weak_count::__release_weak(v278);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_326:
    operator delete(*(void **)__dst);
LABEL_327:
  v282 = v281;
  v283 = strlen(v281);
  if (v283 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v284 = v283;
  if (v283 >= 0x17)
  {
    v286 = (v283 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v283 | 7) != 0x17)
      v286 = v283 | 7;
    v287 = v286 + 1;
    v285 = (char *)operator new(v286 + 1);
    *(_QWORD *)&v691[8] = v284;
    *(_QWORD *)&v691[16] = v287 | 0x8000000000000000;
    *(_QWORD *)v691 = v285;
  }
  else
  {
    v691[23] = v283;
    v285 = v691;
    if (!v283)
      goto LABEL_335;
  }
  memmove(v285, v282, v284);
LABEL_335:
  v285[v284] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_239BB4A9C((uint64_t)a1, (const void *)__p, a2 + 416);
  v288 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_339;
  v289 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v290 = __ldaxr(v289);
  while (__stlxr(v290 - 1, v289));
  if (v290)
  {
LABEL_339:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_341;
    goto LABEL_340;
  }
  ((void (*)(std::__shared_weak_count *))v288->__on_zero_shared)(v288);
  std::__shared_weak_count::__release_weak(v288);
  if (v691[23] < 0)
LABEL_340:
    operator delete(*(void **)v691);
LABEL_341:
  *(_OWORD *)v691 = xmmword_239F1136D;
  *(_WORD *)&v691[16] = 28;
  v291 = sub_239A91B18((int8x16_t *)v691);
  v292 = strlen(v291->i8);
  if (v292 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v293 = v292;
  if (v292 >= 0x17)
  {
    v295 = (v292 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v292 | 7) != 0x17)
      v295 = v292 | 7;
    v296 = v295 + 1;
    v294 = operator new(v295 + 1);
    *(_QWORD *)&__dst[8] = v293;
    *(_QWORD *)&__dst[16] = v296 | 0x8000000000000000;
    *(_QWORD *)__dst = v294;
  }
  else
  {
    __dst[23] = v292;
    v294 = __dst;
    if (!v292)
      goto LABEL_349;
  }
  memmove(v294, v291, v293);
LABEL_349:
  v294[v293] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_239BB4A9C((uint64_t)a1, (const void *)__p, a2 + 32);
  v299 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_353;
  v300 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v301 = __ldaxr(v300);
  while (__stlxr(v301 - 1, v300));
  if (v301)
  {
LABEL_353:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_355;
    goto LABEL_354;
  }
  ((void (*)(std::__shared_weak_count *))v299->__on_zero_shared)(v299);
  std::__shared_weak_count::__release_weak(v299);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_354:
    operator delete(*(void **)__dst);
LABEL_355:
  *(_OWORD *)__dst = xmmword_239F1137F;
  *(int8x16_t *)&__dst[16] = xmmword_239F1138F;
  __dst[32] = 0;
  sub_2396EFE38((uint64_t)__dst, (int32x4_t)xmmword_239F1137F, xmmword_239F1138F, v297, v298);
  v303 = v302;
  v304 = strlen(v302);
  if (v304 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v305 = v304;
  if (v304 >= 0x17)
  {
    v307 = (v304 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v304 | 7) != 0x17)
      v307 = v304 | 7;
    v308 = v307 + 1;
    v306 = (char *)operator new(v307 + 1);
    *(_QWORD *)&v691[8] = v305;
    *(_QWORD *)&v691[16] = v308 | 0x8000000000000000;
    *(_QWORD *)v691 = v306;
  }
  else
  {
    v691[23] = v304;
    v306 = v691;
    if (!v304)
      goto LABEL_363;
  }
  memmove(v306, v303, v305);
LABEL_363:
  v306[v305] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 16);
  v311 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_367;
  v312 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v313 = __ldaxr(v312);
  while (__stlxr(v313 - 1, v312));
  if (v313)
  {
LABEL_367:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_369;
    goto LABEL_368;
  }
  ((void (*)(std::__shared_weak_count *))v311->__on_zero_shared)(v311);
  std::__shared_weak_count::__release_weak(v311);
  if (v691[23] < 0)
LABEL_368:
    operator delete(*(void **)v691);
LABEL_369:
  *(_OWORD *)__dst = xmmword_239F113A0;
  *(_OWORD *)&__dst[16] = *(_OWORD *)dbl_239F113B0;
  *(_OWORD *)&__dst[27] = *(_OWORD *)((char *)&dbl_239F113B0[1] + 3);
  sub_2396F0B4C(__dst, *(double *)((char *)&dbl_239F113B0[1] + 3), dbl_239F113B0[0], v309, v310);
  v315 = v314;
  v316 = strlen(v314);
  if (v316 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v317 = v316;
  if (v316 >= 0x17)
  {
    v319 = (v316 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v316 | 7) != 0x17)
      v319 = v316 | 7;
    v320 = v319 + 1;
    v318 = (char *)operator new(v319 + 1);
    *(_QWORD *)&v691[8] = v317;
    *(_QWORD *)&v691[16] = v320 | 0x8000000000000000;
    *(_QWORD *)v691 = v318;
  }
  else
  {
    v691[23] = v316;
    v318 = v691;
    if (!v316)
      goto LABEL_377;
  }
  memmove(v318, v315, v317);
LABEL_377:
  v318[v317] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 576);
  v324 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_381;
  v325 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v326 = __ldaxr(v325);
  while (__stlxr(v326 - 1, v325));
  if (v326)
  {
LABEL_381:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_383;
    goto LABEL_382;
  }
  ((void (*)(std::__shared_weak_count *))v324->__on_zero_shared)(v324);
  std::__shared_weak_count::__release_weak(v324);
  if (v691[23] < 0)
LABEL_382:
    operator delete(*(void **)v691);
LABEL_383:
  *(_OWORD *)__dst = xmmword_239F113CB;
  strcpy(&__dst[9], "~qxsz@kwmzlwps{");
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F113CB + 9), v321, v322, v323);
  v328 = v327;
  v329 = strlen(v327);
  if (v329 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v330 = v329;
  if (v329 >= 0x17)
  {
    v332 = (v329 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v329 | 7) != 0x17)
      v332 = v329 | 7;
    v333 = v332 + 1;
    v331 = (char *)operator new(v332 + 1);
    *(_QWORD *)&v691[8] = v330;
    *(_QWORD *)&v691[16] = v333 | 0x8000000000000000;
    *(_QWORD *)v691 = v331;
  }
  else
  {
    v691[23] = v329;
    v331 = v691;
    if (!v329)
      goto LABEL_391;
  }
  memmove(v331, v328, v330);
LABEL_391:
  v331[v330] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, a2 + 584);
  v335 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_395;
  v336 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v337 = __ldaxr(v336);
  while (__stlxr(v337 - 1, v336));
  if (v337)
  {
LABEL_395:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_397;
    goto LABEL_396;
  }
  ((void (*)(std::__shared_weak_count *))v335->__on_zero_shared)(v335);
  std::__shared_weak_count::__release_weak(v335);
  if (v691[23] < 0)
LABEL_396:
    operator delete(*(void **)v691);
LABEL_397:
  *(_QWORD *)&v686 = 0x4D757B747C7D7112;
  sub_23971A32C((uint64_t)&v686, v334);
  v339 = v338;
  v340 = strlen(v338);
  if (v340 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v341 = v340;
  if (v340 >= 0x17)
  {
    v343 = (v340 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v340 | 7) != 0x17)
      v343 = v340 | 7;
    v344 = v343 + 1;
    p_p = (__int128 *)operator new(v343 + 1);
    *((_QWORD *)&__p + 1) = v341;
    v688 = v344 | 0x8000000000000000;
    *(_QWORD *)&__p = p_p;
    goto LABEL_404;
  }
  HIBYTE(v688) = v340;
  p_p = &__p;
  if (v340)
LABEL_404:
    memmove(p_p, v339, v341);
  *((_BYTE *)p_p + v341) = 0;
  sub_23962C714(&v692);
  strcpy(v690, "$VAHKG{P]TA");
  v345 = sub_23958E4C8((uint64_t)v690);
  v346 = strlen(v345);
  if (v346 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v347 = v346;
  if (v346 >= 0x17)
  {
    v349 = (v346 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v346 | 7) != 0x17)
      v349 = v346 | 7;
    v350 = v349 + 1;
    v348 = operator new(v349 + 1);
    *(_QWORD *)&__dst[8] = v347;
    *(_QWORD *)&__dst[16] = v350 | 0x8000000000000000;
    *(_QWORD *)__dst = v348;
  }
  else
  {
    __dst[23] = v346;
    v348 = __dst;
    if (!v346)
      goto LABEL_413;
  }
  memmove(v348, v345, v347);
LABEL_413:
  v348[v347] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v685);
  v354 = *(const void **)v685;
  v355 = v692;
  if (!*((_QWORD *)&v692 + 1))
    goto LABEL_418;
  v356 = (unint64_t *)(*((_QWORD *)&v692 + 1) + 8);
  do
    v357 = __ldxr(v356);
  while (__stxr(v357 + 1, v356));
  do
    v358 = __ldaxr(v356);
  while (__stlxr(v358 - 1, v356));
  if (!v358)
  {
    (*(void (**)(_QWORD))(**((_QWORD **)&v355 + 1) + 16))(*((_QWORD *)&v355 + 1));
    std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v355 + 1));
    if (!(_QWORD)v355)
      goto LABEL_491;
  }
  else
  {
LABEL_418:
    if (!(_QWORD)v355)
      goto LABEL_491;
  }
  if (sub_23962C8DC((const __CFDictionary *)v692, v354))
    goto LABEL_491;
  v684 = *(_DWORD *)(a2 + 424);
  sub_239629634(v691, &v684);
  v360 = *(_QWORD *)v691;
  v359 = *(std::__shared_weak_count **)&v691[8];
  if (*(_QWORD *)&v691[8])
  {
    v361 = (unint64_t *)(*(_QWORD *)&v691[8] + 8);
    do
      v362 = __ldxr(v361);
    while (__stxr(v362 + 1, v361));
    do
      v363 = __ldaxr(v361);
    while (__stlxr(v363 - 1, v361));
    if (!v363)
    {
      ((void (*)(std::__shared_weak_count *))v359->__on_zero_shared)(v359);
      std::__shared_weak_count::__release_weak(v359);
      if (!v360)
        goto LABEL_427;
      goto LABEL_426;
    }
  }
  if (v360)
LABEL_426:
    j__CFDictionaryAddValue((CFMutableDictionaryRef)v692, v354, *(const void **)v691);
LABEL_427:
  v364 = *(std::__shared_weak_count **)&v691[8];
  if (*(_QWORD *)&v691[8])
  {
    v365 = (unint64_t *)(*(_QWORD *)&v691[8] + 8);
    do
      v366 = __ldaxr(v365);
    while (__stlxr(v366 - 1, v365));
    if (!v366)
    {
      ((void (*)(std::__shared_weak_count *))v364->__on_zero_shared)(v364);
      std::__shared_weak_count::__release_weak(v364);
    }
  }
LABEL_491:
  v367 = *(std::__shared_weak_count **)&v685[8];
  if (!*(_QWORD *)&v685[8])
    goto LABEL_495;
  v368 = (unint64_t *)(*(_QWORD *)&v685[8] + 8);
  do
    v369 = __ldaxr(v368);
  while (__stlxr(v369 - 1, v368));
  if (v369)
  {
LABEL_495:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_497;
    goto LABEL_496;
  }
  ((void (*)(std::__shared_weak_count *))v367->__on_zero_shared)(v367);
  std::__shared_weak_count::__release_weak(v367);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_496:
    operator delete(*(void **)__dst);
LABEL_497:
  strcpy(v691, ">PKSaS_J]V[MaWPJL_aZ\\");
  v370 = sub_239A90BEC((unsigned __int8 *)v691, *(int8x16_t *)">PKSaS_J]V[MaWPJL_aZ\\", v351, v352, v353);
  v371 = strlen((const char *)v370);
  if (v371 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v372 = v371;
  if (v371 >= 0x17)
  {
    v374 = (v371 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v371 | 7) != 0x17)
      v374 = v371 | 7;
    v375 = v374 + 1;
    v373 = operator new(v374 + 1);
    *(_QWORD *)&__dst[8] = v372;
    *(_QWORD *)&__dst[16] = v375 | 0x8000000000000000;
    *(_QWORD *)__dst = v373;
  }
  else
  {
    __dst[23] = v371;
    v373 = __dst;
    if (!v371)
      goto LABEL_505;
  }
  memmove(v373, v370, v372);
LABEL_505:
  v373[v372] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v685);
  sub_239BB4A9C((uint64_t)&v692, *(const void **)v685, a2 + 456);
  v379 = *(std::__shared_weak_count **)&v685[8];
  if (!*(_QWORD *)&v685[8])
    goto LABEL_509;
  v380 = (unint64_t *)(*(_QWORD *)&v685[8] + 8);
  do
    v381 = __ldaxr(v380);
  while (__stlxr(v381 - 1, v380));
  if (v381)
  {
LABEL_509:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_511;
    goto LABEL_510;
  }
  ((void (*)(std::__shared_weak_count *))v379->__on_zero_shared)(v379);
  std::__shared_weak_count::__release_weak(v379);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_510:
    operator delete(*(void **)__dst);
LABEL_511:
  *(_OWORD *)__dst = xmmword_239F113FA;
  strcpy(&__dst[9], "uxnBtsio|Blhxod");
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F113FA + 9), v376, v377, v378);
  v383 = v382;
  v384 = strlen(v382);
  if (v384 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v385 = v384;
  if (v384 >= 0x17)
  {
    v387 = (v384 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v384 | 7) != 0x17)
      v387 = v384 | 7;
    v388 = v387 + 1;
    v386 = (char *)operator new(v387 + 1);
    *(_QWORD *)&v691[8] = v385;
    *(_QWORD *)&v691[16] = v388 | 0x8000000000000000;
    *(_QWORD *)v691 = v386;
  }
  else
  {
    v691[23] = v384;
    v386 = v691;
    if (!v384)
      goto LABEL_519;
  }
  memmove(v386, v383, v385);
LABEL_519:
  v386[v385] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)v685);
  sub_239BB4A9C((uint64_t)&v692, *(const void **)v685, a2 + 464);
  v392 = *(std::__shared_weak_count **)&v685[8];
  if (!*(_QWORD *)&v685[8])
    goto LABEL_523;
  v393 = (unint64_t *)(*(_QWORD *)&v685[8] + 8);
  do
    v394 = __ldaxr(v393);
  while (__stlxr(v394 - 1, v393));
  if (v394)
  {
LABEL_523:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_525;
    goto LABEL_524;
  }
  ((void (*)(std::__shared_weak_count *))v392->__on_zero_shared)(v392);
  std::__shared_weak_count::__release_weak(v392);
  if (v691[23] < 0)
LABEL_524:
    operator delete(*(void **)v691);
LABEL_525:
  *(_OWORD *)v691 = xmmword_239F11413;
  *(_DWORD *)&v691[15] = 923912;
  sub_23958E450((uint64_t)v691, (int32x4_t)xmmword_239F11413, v389, v390, v391);
  v396 = v395;
  v397 = strlen(v395);
  if (v397 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v398 = v397;
  if (v397 >= 0x17)
  {
    v400 = (v397 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v397 | 7) != 0x17)
      v400 = v397 | 7;
    v401 = v400 + 1;
    v399 = operator new(v400 + 1);
    *(_QWORD *)&__dst[8] = v398;
    *(_QWORD *)&__dst[16] = v401 | 0x8000000000000000;
    *(_QWORD *)__dst = v399;
  }
  else
  {
    __dst[23] = v397;
    v399 = __dst;
    if (!v397)
      goto LABEL_533;
  }
  memmove(v399, v396, v398);
LABEL_533:
  v399[v398] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v685);
  sub_239BB4A9C((uint64_t)&v692, *(const void **)v685, a2 + 472);
  v405 = *(std::__shared_weak_count **)&v685[8];
  if (!*(_QWORD *)&v685[8])
    goto LABEL_537;
  v406 = (unint64_t *)(*(_QWORD *)&v685[8] + 8);
  do
    v407 = __ldaxr(v406);
  while (__stlxr(v407 - 1, v406));
  if (v407)
  {
LABEL_537:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_539;
    goto LABEL_538;
  }
  ((void (*)(std::__shared_weak_count *))v405->__on_zero_shared)(v405);
  std::__shared_weak_count::__release_weak(v405);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_538:
    operator delete(*(void **)__dst);
LABEL_539:
  *(_OWORD *)__dst = xmmword_239F11426;
  *(_OWORD *)&__dst[9] = *(__int128 *)((char *)&xmmword_239F11426 + 9);
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F11426 + 9), v402, v403, v404);
  v409 = v408;
  v410 = strlen(v408);
  if (v410 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v411 = v410;
  if (v410 >= 0x17)
  {
    v413 = (v410 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v410 | 7) != 0x17)
      v413 = v410 | 7;
    v414 = v413 + 1;
    v412 = (char *)operator new(v413 + 1);
    *(_QWORD *)&v691[8] = v411;
    *(_QWORD *)&v691[16] = v414 | 0x8000000000000000;
    *(_QWORD *)v691 = v412;
  }
  else
  {
    v691[23] = v410;
    v412 = v691;
    if (!v410)
      goto LABEL_547;
  }
  memmove(v412, v409, v411);
LABEL_547:
  v412[v411] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)v685);
  sub_2396B4EAC((uint64_t)&v692, *(const void **)v685, (_BYTE *)(a2 + 496));
  v415 = *(std::__shared_weak_count **)&v685[8];
  if (*(_QWORD *)&v685[8])
  {
    v416 = (unint64_t *)(*(_QWORD *)&v685[8] + 8);
    do
      v417 = __ldaxr(v416);
    while (__stlxr(v417 - 1, v416));
    if (!v417)
    {
      ((void (*)(std::__shared_weak_count *))v415->__on_zero_shared)(v415);
      std::__shared_weak_count::__release_weak(v415);
      if ((v691[23] & 0x80000000) == 0)
        goto LABEL_553;
      goto LABEL_552;
    }
  }
  if (v691[23] < 0)
LABEL_552:
    operator delete(*(void **)v691);
LABEL_553:
  sub_239629EF4((uint64_t)&__p, (CFStringRef *)__dst);
  sub_239BB7018((uint64_t)a1, *(const void **)__dst, (uint64_t)&v692);
  v421 = *(std::__shared_weak_count **)&__dst[8];
  if (!*(_QWORD *)&__dst[8])
    goto LABEL_557;
  v422 = (unint64_t *)(*(_QWORD *)&__dst[8] + 8);
  do
    v423 = __ldaxr(v422);
  while (__stlxr(v423 - 1, v422));
  if (!v423)
  {
    ((void (*)(std::__shared_weak_count *))v421->__on_zero_shared)(v421);
    std::__shared_weak_count::__release_weak(v421);
    v424 = (std::__shared_weak_count *)*((_QWORD *)&v692 + 1);
    if (!*((_QWORD *)&v692 + 1))
      goto LABEL_561;
  }
  else
  {
LABEL_557:
    v424 = (std::__shared_weak_count *)*((_QWORD *)&v692 + 1);
    if (!*((_QWORD *)&v692 + 1))
      goto LABEL_561;
  }
  v425 = (unint64_t *)&v424->__shared_owners_;
  do
    v426 = __ldaxr(v425);
  while (__stlxr(v426 - 1, v425));
  if (v426)
  {
LABEL_561:
    if ((SHIBYTE(v688) & 0x80000000) == 0)
      goto LABEL_563;
    goto LABEL_562;
  }
  ((void (*)(std::__shared_weak_count *))v424->__on_zero_shared)(v424);
  std::__shared_weak_count::__release_weak(v424);
  if (SHIBYTE(v688) < 0)
LABEL_562:
    operator delete((void *)__p);
LABEL_563:
  *(_OWORD *)__dst = xmmword_239F1143F;
  *(_OWORD *)&__dst[11] = *(__int128 *)((char *)&xmmword_239F1143F + 11);
  sub_2396F1974((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F1143F + 11), v418, v419, v420);
  v428 = v427;
  v429 = strlen(v427);
  if (v429 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v430 = v429;
  if (v429 >= 0x17)
  {
    v432 = (v429 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v429 | 7) != 0x17)
      v432 = v429 | 7;
    v433 = v432 + 1;
    v431 = (char *)operator new(v432 + 1);
    *(_QWORD *)&v691[8] = v430;
    *(_QWORD *)&v691[16] = v433 | 0x8000000000000000;
    *(_QWORD *)v691 = v431;
  }
  else
  {
    v691[23] = v429;
    v431 = v691;
    if (!v429)
      goto LABEL_571;
  }
  memmove(v431, v428, v430);
LABEL_571:
  v431[v430] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_239BB4A9C((uint64_t)a1, (const void *)__p, a2 + 64);
  v436 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_575;
  v437 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v438 = __ldaxr(v437);
  while (__stlxr(v438 - 1, v437));
  if (v438)
  {
LABEL_575:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_577;
    goto LABEL_576;
  }
  ((void (*)(std::__shared_weak_count *))v436->__on_zero_shared)(v436);
  std::__shared_weak_count::__release_weak(v436);
  if (v691[23] < 0)
LABEL_576:
    operator delete(*(void **)v691);
LABEL_577:
  *(_OWORD *)__dst = xmmword_239F1145A;
  v440 = v439;
  v441 = strlen(v439);
  if (v441 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v442 = v441;
  if (v441 >= 0x17)
  {
    v444 = (v441 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v441 | 7) != 0x17)
      v444 = v441 | 7;
    v445 = v444 + 1;
    v443 = (char *)operator new(v444 + 1);
    *(_QWORD *)&v691[8] = v442;
    *(_QWORD *)&v691[16] = v445 | 0x8000000000000000;
    *(_QWORD *)v691 = v443;
  }
  else
  {
    v691[23] = v441;
    v443 = v691;
    if (!v441)
      goto LABEL_585;
  }
  memmove(v443, v440, v442);
LABEL_585:
  v443[v442] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2397373B0((uint64_t)a1, (const void *)__p, (uint64_t)&unk_239F10BA8);
  v446 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_589;
  v447 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v448 = __ldaxr(v447);
  while (__stlxr(v448 - 1, v447));
  if (v448)
  {
LABEL_589:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_591;
    goto LABEL_590;
  }
  ((void (*)(std::__shared_weak_count *))v446->__on_zero_shared)(v446);
  std::__shared_weak_count::__release_weak(v446);
  if (v691[23] < 0)
LABEL_590:
    operator delete(*(void **)v691);
LABEL_591:
  *(_QWORD *)v685 = 0x1F2729262E2F2340;
  strcpy(&v685[8], "',\"3&-");
  sub_23958E5E0((uint64_t)v685);
  v450 = v449;
  v451 = strlen(v449);
  if (v451 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v452 = v451;
  if (v451 >= 0x17)
  {
    v454 = (v451 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v451 | 7) != 0x17)
      v454 = v451 | 7;
    v455 = v454 + 1;
    v453 = operator new(v454 + 1);
    *(_QWORD *)&__dst[8] = v452;
    *(_QWORD *)&__dst[16] = v455 | 0x8000000000000000;
    *(_QWORD *)__dst = v453;
  }
  else
  {
    __dst[23] = v451;
    v453 = __dst;
    if (!v451)
      goto LABEL_599;
  }
  memmove(v453, v450, v452);
LABEL_599:
  v453[v452] = 0;
  sub_239BBF1C4(&__p, (_BYTE *)(a2 + 712));
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v691);
  sub_239BB7018((uint64_t)a1, *(const void **)v691, (uint64_t)&__p);
  v459 = *(std::__shared_weak_count **)&v691[8];
  if (!*(_QWORD *)&v691[8])
    goto LABEL_603;
  v460 = (unint64_t *)(*(_QWORD *)&v691[8] + 8);
  do
    v461 = __ldaxr(v460);
  while (__stlxr(v461 - 1, v460));
  if (!v461)
  {
    ((void (*)(std::__shared_weak_count *))v459->__on_zero_shared)(v459);
    std::__shared_weak_count::__release_weak(v459);
    v462 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
    if (!*((_QWORD *)&__p + 1))
      goto LABEL_607;
  }
  else
  {
LABEL_603:
    v462 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
    if (!*((_QWORD *)&__p + 1))
      goto LABEL_607;
  }
  v463 = (unint64_t *)&v462->__shared_owners_;
  do
    v464 = __ldaxr(v463);
  while (__stlxr(v464 - 1, v463));
  if (v464)
  {
LABEL_607:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_609;
    goto LABEL_608;
  }
  ((void (*)(std::__shared_weak_count *))v462->__on_zero_shared)(v462);
  std::__shared_weak_count::__release_weak(v462);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_608:
    operator delete(*(void **)__dst);
LABEL_609:
  *(_OWORD *)__dst = xmmword_239F1171F;
  *(_OWORD *)&__dst[9] = *(__int128 *)((char *)&xmmword_239F1171F + 9);
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F1171F + 9), v456, v457, v458);
  v466 = v465;
  v467 = strlen(v465);
  if (v467 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v468 = v467;
  if (v467 >= 0x17)
  {
    v470 = (v467 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v467 | 7) != 0x17)
      v470 = v467 | 7;
    v471 = v470 + 1;
    v469 = (char *)operator new(v470 + 1);
    *(_QWORD *)&v691[8] = v468;
    *(_QWORD *)&v691[16] = v471 | 0x8000000000000000;
    *(_QWORD *)v691 = v469;
  }
  else
  {
    v691[23] = v467;
    v469 = v691;
    if (!v467)
      goto LABEL_617;
  }
  memmove(v469, v466, v468);
LABEL_617:
  v469[v468] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 657));
  v475 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_621;
  v476 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v477 = __ldaxr(v476);
  while (__stlxr(v477 - 1, v476));
  if (v477)
  {
LABEL_621:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_623;
    goto LABEL_622;
  }
  ((void (*)(std::__shared_weak_count *))v475->__on_zero_shared)(v475);
  std::__shared_weak_count::__release_weak(v475);
  if (v691[23] < 0)
LABEL_622:
    operator delete(*(void **)v691);
LABEL_623:
  *(_OWORD *)v691 = xmmword_239F11738;
  strcpy(&v691[15], "di~");
  sub_23958E450((uint64_t)v691, (int32x4_t)xmmword_239F11738, v472, v473, v474);
  v479 = v478;
  v480 = strlen(v478);
  if (v480 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v481 = v480;
  if (v480 >= 0x17)
  {
    v483 = (v480 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v480 | 7) != 0x17)
      v483 = v480 | 7;
    v484 = v483 + 1;
    v482 = operator new(v483 + 1);
    *(_QWORD *)&__dst[8] = v481;
    *(_QWORD *)&__dst[16] = v484 | 0x8000000000000000;
    *(_QWORD *)__dst = v482;
  }
  else
  {
    __dst[23] = v480;
    v482 = __dst;
    if (!v480)
      goto LABEL_631;
  }
  memmove(v482, v479, v481);
LABEL_631:
  v482[v481] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_239BB4494((uint64_t)a1, (const void *)__p, (uint64_t *)(a2 + 664));
  v488 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_635;
  v489 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v490 = __ldaxr(v489);
  while (__stlxr(v490 - 1, v489));
  if (v490)
  {
LABEL_635:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_637;
    goto LABEL_636;
  }
  ((void (*)(std::__shared_weak_count *))v488->__on_zero_shared)(v488);
  std::__shared_weak_count::__release_weak(v488);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_636:
    operator delete(*(void **)__dst);
LABEL_637:
  strcpy(v691, "\"OKL}QWAAGQQ}KOCEGQ}LWO");
  sub_2396F1A4C((uint64_t)v691, *(int32x4_t *)"\"OKL}QWAAGQQ}KOCEGQ}LWO", v485, v486, v487);
  v492 = v491;
  v493 = strlen(v491);
  if (v493 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v494 = v493;
  if (v493 >= 0x17)
  {
    v496 = (v493 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v493 | 7) != 0x17)
      v496 = v493 | 7;
    v497 = v496 + 1;
    v495 = operator new(v496 + 1);
    *(_QWORD *)&__dst[8] = v494;
    *(_QWORD *)&__dst[16] = v497 | 0x8000000000000000;
    *(_QWORD *)__dst = v495;
  }
  else
  {
    __dst[23] = v493;
    v495 = __dst;
    if (!v493)
      goto LABEL_645;
  }
  memmove(v495, v492, v494);
LABEL_645:
  v495[v494] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_239BB4A9C((uint64_t)a1, (const void *)__p, a2 + 688);
  v501 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_649;
  v502 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v503 = __ldaxr(v502);
  while (__stlxr(v503 - 1, v502));
  if (v503)
  {
LABEL_649:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_651;
    goto LABEL_650;
  }
  ((void (*)(std::__shared_weak_count *))v501->__on_zero_shared)(v501);
  std::__shared_weak_count::__release_weak(v501);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_650:
    operator delete(*(void **)__dst);
LABEL_651:
  strcpy(__dst, "%HD]zFJHUJK@KQzLHDB@VzKPH");
  sub_239A93C04(__dst, *(int32x4_t *)"K@KQzLHDB@VzKPH", v498, v499, v500);
  v505 = v504;
  v506 = strlen(v504);
  if (v506 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v507 = v506;
  if (v506 >= 0x17)
  {
    v509 = (v506 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v506 | 7) != 0x17)
      v509 = v506 | 7;
    v510 = v509 + 1;
    v508 = (char *)operator new(v509 + 1);
    *(_QWORD *)&v691[8] = v507;
    *(_QWORD *)&v691[16] = v510 | 0x8000000000000000;
    *(_QWORD *)v691 = v508;
  }
  else
  {
    v691[23] = v506;
    v508 = v691;
    if (!v506)
      goto LABEL_659;
  }
  memmove(v508, v505, v507);
LABEL_659:
  v508[v507] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_239BB4A9C((uint64_t)a1, (const void *)__p, a2 + 696);
  v514 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_663;
  v515 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v516 = __ldaxr(v515);
  while (__stlxr(v516 - 1, v515));
  if (v516)
  {
LABEL_663:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_665;
    goto LABEL_664;
  }
  ((void (*)(std::__shared_weak_count *))v514->__on_zero_shared)(v514);
  std::__shared_weak_count::__release_weak(v514);
  if (v691[23] < 0)
LABEL_664:
    operator delete(*(void **)v691);
LABEL_665:
  *(_OWORD *)v691 = xmmword_239F1177D;
  strcpy(&v691[16], "~v{Hybz");
  sub_2396F1A4C((uint64_t)v691, (int32x4_t)xmmword_239F1177D, v511, v512, v513);
  v518 = v517;
  v519 = strlen(v517);
  if (v519 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v520 = v519;
  if (v519 >= 0x17)
  {
    v522 = (v519 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v519 | 7) != 0x17)
      v522 = v519 | 7;
    v523 = v522 + 1;
    v521 = operator new(v522 + 1);
    *(_QWORD *)&__dst[8] = v520;
    *(_QWORD *)&__dst[16] = v523 | 0x8000000000000000;
    *(_QWORD *)__dst = v521;
  }
  else
  {
    __dst[23] = v519;
    v521 = __dst;
    if (!v519)
      goto LABEL_673;
  }
  memmove(v521, v518, v520);
LABEL_673:
  v521[v520] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&__p);
  sub_239BB4A9C((uint64_t)a1, (const void *)__p, a2 + 632);
  v527 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_677;
  v528 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v529 = __ldaxr(v528);
  while (__stlxr(v529 - 1, v528));
  if (v529)
  {
LABEL_677:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_679;
    goto LABEL_678;
  }
  ((void (*)(std::__shared_weak_count *))v527->__on_zero_shared)(v527);
  std::__shared_weak_count::__release_weak(v527);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_678:
    operator delete(*(void **)__dst);
LABEL_679:
  strcpy(__dst, ">YK_L_PJ[[aR_LY[MJa]QSNQP[PJ");
  sub_2396EFD48((uint64_t)__dst, *(int32x4_t *)"LY[MJa]QSNQP[PJ", v524, v525, v526);
  v531 = v530;
  v532 = strlen(v530);
  if (v532 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v533 = v532;
  if (v532 >= 0x17)
  {
    v535 = (v532 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v532 | 7) != 0x17)
      v535 = v532 | 7;
    v536 = v535 + 1;
    v534 = (char *)operator new(v535 + 1);
    *(_QWORD *)&v691[8] = v533;
    *(_QWORD *)&v691[16] = v536 | 0x8000000000000000;
    *(_QWORD *)v691 = v534;
  }
  else
  {
    v691[23] = v532;
    v534 = v691;
    if (!v532)
      goto LABEL_687;
  }
  memmove(v534, v531, v533);
LABEL_687:
  v534[v533] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 640));
  v537 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_691;
  v538 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v539 = __ldaxr(v538);
  while (__stlxr(v539 - 1, v538));
  if (v539)
  {
LABEL_691:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_693;
    goto LABEL_692;
  }
  ((void (*)(std::__shared_weak_count *))v537->__on_zero_shared)(v537);
  std::__shared_weak_count::__release_weak(v537);
  if (v691[23] < 0)
LABEL_692:
    operator delete(*(void **)v691);
LABEL_693:
  *(_OWORD *)v685 = xmmword_239F117B2;
  *(_WORD *)&v685[16] = 3;
  v540 = sub_239A91B18((int8x16_t *)v685);
  v541 = strlen(v540->i8);
  if (v541 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v542 = v541;
  if (v541 >= 0x17)
  {
    v544 = (v541 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v541 | 7) != 0x17)
      v544 = v541 | 7;
    v545 = v544 + 1;
    v543 = (__int128 *)operator new(v544 + 1);
    *((_QWORD *)&__p + 1) = v542;
    v688 = v545 | 0x8000000000000000;
    *(_QWORD *)&__p = v543;
    goto LABEL_700;
  }
  HIBYTE(v688) = v541;
  v543 = &__p;
  if (v541)
LABEL_700:
    memmove(v543, v540, v542);
  *((_BYTE *)v543 + v542) = 0;
  sub_23962C714(&v686);
  strcpy(v691, "*XKDYKIuOXXEXu^BXOYBEFN");
  sub_2396F1A4C((uint64_t)v691, *(int32x4_t *)"*XKDYKIuOXXEXu^BXOYBEFN", v546, v547, v548);
  v550 = v549;
  v551 = strlen(v549);
  if (v551 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v552 = v551;
  if (v551 >= 0x17)
  {
    v554 = (v551 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v551 | 7) != 0x17)
      v554 = v551 | 7;
    v555 = v554 + 1;
    v553 = operator new(v554 + 1);
    *(_QWORD *)&__dst[8] = v552;
    *(_QWORD *)&__dst[16] = v555 | 0x8000000000000000;
    *(_QWORD *)__dst = v553;
  }
  else
  {
    __dst[23] = v551;
    v553 = __dst;
    if (!v551)
      goto LABEL_709;
  }
  memmove(v553, v550, v552);
LABEL_709:
  v553[v552] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v692);
  sub_2397373B0((uint64_t)&v686, (const void *)v692, a2 + 536);
  v556 = (std::__shared_weak_count *)*((_QWORD *)&v692 + 1);
  if (*((_QWORD *)&v692 + 1))
  {
    v557 = (unint64_t *)(*((_QWORD *)&v692 + 1) + 8);
    do
      v558 = __ldaxr(v557);
    while (__stlxr(v558 - 1, v557));
    if (!v558)
    {
      ((void (*)(std::__shared_weak_count *))v556->__on_zero_shared)(v556);
      std::__shared_weak_count::__release_weak(v556);
      if ((__dst[23] & 0x80000000) == 0)
        goto LABEL_715;
      goto LABEL_714;
    }
  }
  if ((__dst[23] & 0x80000000) != 0)
LABEL_714:
    operator delete(*(void **)__dst);
LABEL_715:
  sub_239629EF4((uint64_t)&__p, (CFStringRef *)__dst);
  sub_239BB7018((uint64_t)a1, *(const void **)__dst, (uint64_t)&v686);
  v562 = *(std::__shared_weak_count **)&__dst[8];
  if (!*(_QWORD *)&__dst[8])
    goto LABEL_719;
  v563 = (unint64_t *)(*(_QWORD *)&__dst[8] + 8);
  do
    v564 = __ldaxr(v563);
  while (__stlxr(v564 - 1, v563));
  if (!v564)
  {
    ((void (*)(std::__shared_weak_count *))v562->__on_zero_shared)(v562);
    std::__shared_weak_count::__release_weak(v562);
    v565 = (std::__shared_weak_count *)*((_QWORD *)&v686 + 1);
    if (!*((_QWORD *)&v686 + 1))
      goto LABEL_723;
  }
  else
  {
LABEL_719:
    v565 = (std::__shared_weak_count *)*((_QWORD *)&v686 + 1);
    if (!*((_QWORD *)&v686 + 1))
      goto LABEL_723;
  }
  v566 = (unint64_t *)&v565->__shared_owners_;
  do
    v567 = __ldaxr(v566);
  while (__stlxr(v567 - 1, v566));
  if (v567)
  {
LABEL_723:
    if ((SHIBYTE(v688) & 0x80000000) == 0)
      goto LABEL_725;
    goto LABEL_724;
  }
  ((void (*)(std::__shared_weak_count *))v565->__on_zero_shared)(v565);
  std::__shared_weak_count::__release_weak(v565);
  if (SHIBYTE(v688) < 0)
LABEL_724:
    operator delete((void *)__p);
LABEL_725:
  strcpy(v685, "$GKJBMC{PVMEJCQHEPA");
  sub_23958E55C((uint64_t)v685, *(int32x4_t *)"$GKJBMC{PVMEJCQHEPA", v559, v560, v561);
  v569 = v568;
  v570 = strlen(v568);
  if (v570 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v571 = v570;
  if (v570 >= 0x17)
  {
    v573 = (v570 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v570 | 7) != 0x17)
      v573 = v570 | 7;
    v574 = v573 + 1;
    v572 = (__int128 *)operator new(v573 + 1);
    *((_QWORD *)&__p + 1) = v571;
    v688 = v574 | 0x8000000000000000;
    *(_QWORD *)&__p = v572;
    goto LABEL_732;
  }
  HIBYTE(v688) = v570;
  v572 = &__p;
  if (v570)
LABEL_732:
    memmove(v572, v569, v571);
  *((_BYTE *)v572 + v571) = 0;
  sub_23962C714(&v686);
  *(_OWORD *)v691 = xmmword_239F117F0;
  *(_QWORD *)&v691[16] = 0x11C0101162C1DLL;
  sub_2396F1A4C((uint64_t)v691, (int32x4_t)xmmword_239F117F0, v575, v576, v577);
  v579 = v578;
  v580 = strlen(v578);
  if (v580 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v581 = v580;
  if (v580 >= 0x17)
  {
    v583 = (v580 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v580 | 7) != 0x17)
      v583 = v580 | 7;
    v584 = v583 + 1;
    v582 = operator new(v583 + 1);
    *(_QWORD *)&__dst[8] = v581;
    *(_QWORD *)&__dst[16] = v584 | 0x8000000000000000;
    *(_QWORD *)__dst = v582;
  }
  else
  {
    __dst[23] = v580;
    v582 = __dst;
    if (!v580)
      goto LABEL_741;
  }
  memmove(v582, v579, v581);
LABEL_741:
  v582[v581] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v692);
  sub_2397373B0((uint64_t)&v686, (const void *)v692, a2 + 168);
  v585 = (std::__shared_weak_count *)*((_QWORD *)&v692 + 1);
  if (!*((_QWORD *)&v692 + 1))
    goto LABEL_745;
  v586 = (unint64_t *)(*((_QWORD *)&v692 + 1) + 8);
  do
    v587 = __ldaxr(v586);
  while (__stlxr(v587 - 1, v586));
  if (v587)
  {
LABEL_745:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_747;
    goto LABEL_746;
  }
  ((void (*)(std::__shared_weak_count *))v585->__on_zero_shared)(v585);
  std::__shared_weak_count::__release_weak(v585);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_746:
    operator delete(*(void **)__dst);
LABEL_747:
  sub_2396EFA24((uint64_t)v691);
  v589 = v588;
  v590 = strlen(v588);
  if (v590 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v591 = v590;
  if (v590 >= 0x17)
  {
    v593 = (v590 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v590 | 7) != 0x17)
      v593 = v590 | 7;
    v594 = v593 + 1;
    v592 = operator new(v593 + 1);
    *(_QWORD *)&__dst[8] = v591;
    *(_QWORD *)&__dst[16] = v594 | 0x8000000000000000;
    *(_QWORD *)__dst = v592;
  }
  else
  {
    __dst[23] = v590;
    v592 = __dst;
    if (!v590)
      goto LABEL_755;
  }
  memmove(v592, v589, v591);
LABEL_755:
  v592[v591] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v692);
  sub_2397373B0((uint64_t)&v686, (const void *)v692, a2 + 176);
  v595 = (std::__shared_weak_count *)*((_QWORD *)&v692 + 1);
  if (!*((_QWORD *)&v692 + 1))
    goto LABEL_759;
  v596 = (unint64_t *)(*((_QWORD *)&v692 + 1) + 8);
  do
    v597 = __ldaxr(v596);
  while (__stlxr(v597 - 1, v596));
  if (v597)
  {
LABEL_759:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_761;
    goto LABEL_760;
  }
  ((void (*)(std::__shared_weak_count *))v595->__on_zero_shared)(v595);
  std::__shared_weak_count::__release_weak(v595);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_760:
    operator delete(*(void **)__dst);
LABEL_761:
  strcpy(v691, "U8<;\n!'46>\n10%!=");
  sub_2396EFA24((uint64_t)v691);
  v599 = v598;
  v600 = strlen(v598);
  if (v600 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v601 = v600;
  if (v600 >= 0x17)
  {
    v603 = (v600 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v600 | 7) != 0x17)
      v603 = v600 | 7;
    v604 = v603 + 1;
    v602 = operator new(v603 + 1);
    *(_QWORD *)&__dst[8] = v601;
    *(_QWORD *)&__dst[16] = v604 | 0x8000000000000000;
    *(_QWORD *)__dst = v602;
  }
  else
  {
    __dst[23] = v600;
    v602 = __dst;
    if (!v600)
      goto LABEL_769;
  }
  memmove(v602, v599, v601);
LABEL_769:
  v602[v601] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v692);
  sub_2397373B0((uint64_t)&v686, (const void *)v692, a2 + 184);
  v608 = (std::__shared_weak_count *)*((_QWORD *)&v692 + 1);
  if (!*((_QWORD *)&v692 + 1))
    goto LABEL_773;
  v609 = (unint64_t *)(*((_QWORD *)&v692 + 1) + 8);
  do
    v610 = __ldaxr(v609);
  while (__stlxr(v610 - 1, v609));
  if (v610)
  {
LABEL_773:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_775;
    goto LABEL_774;
  }
  ((void (*)(std::__shared_weak_count *))v608->__on_zero_shared)(v608);
  std::__shared_weak_count::__release_weak(v608);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_774:
    operator delete(*(void **)__dst);
LABEL_775:
  strcpy(__dst, ":WSTeNHS[T]OV[NSUTe[T]V_");
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)"T]OV[NSUTe[T]V_", v605, v606, v607);
  v612 = v611;
  v613 = strlen(v611);
  if (v613 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v614 = v613;
  if (v613 >= 0x17)
  {
    v616 = (v613 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v613 | 7) != 0x17)
      v616 = v613 | 7;
    v617 = v616 + 1;
    v615 = (char *)operator new(v616 + 1);
    *(_QWORD *)&v691[8] = v614;
    *(_QWORD *)&v691[16] = v617 | 0x8000000000000000;
    *(_QWORD *)v691 = v615;
  }
  else
  {
    v691[23] = v613;
    v615 = v691;
    if (!v613)
      goto LABEL_783;
  }
  memmove(v615, v612, v614);
LABEL_783:
  v615[v614] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&v692);
  sub_2397373B0((uint64_t)&v686, (const void *)v692, a2 + 200);
  v618 = (std::__shared_weak_count *)*((_QWORD *)&v692 + 1);
  if (!*((_QWORD *)&v692 + 1))
    goto LABEL_787;
  v619 = (unint64_t *)(*((_QWORD *)&v692 + 1) + 8);
  do
    v620 = __ldaxr(v619);
  while (__stlxr(v620 - 1, v619));
  if (v620)
  {
LABEL_787:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_789;
    goto LABEL_788;
  }
  ((void (*)(std::__shared_weak_count *))v618->__on_zero_shared)(v618);
  std::__shared_weak_count::__release_weak(v618);
  if (v691[23] < 0)
LABEL_788:
    operator delete(*(void **)v691);
LABEL_789:
  *(_OWORD *)v691 = xmmword_239F11843;
  *(_WORD *)&v691[16] = 19;
  v621 = sub_239A91B18((int8x16_t *)v691);
  v622 = strlen(v621->i8);
  if (v622 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v623 = v622;
  if (v622 >= 0x17)
  {
    v625 = (v622 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v622 | 7) != 0x17)
      v625 = v622 | 7;
    v626 = v625 + 1;
    v624 = operator new(v625 + 1);
    *(_QWORD *)&__dst[8] = v623;
    *(_QWORD *)&__dst[16] = v626 | 0x8000000000000000;
    *(_QWORD *)__dst = v624;
  }
  else
  {
    __dst[23] = v622;
    v624 = __dst;
    if (!v622)
      goto LABEL_797;
  }
  memmove(v624, v621, v623);
LABEL_797:
  v624[v623] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v692);
  sub_239BB4A9C((uint64_t)&v686, (const void *)v692, a2 + 208);
  v627 = (std::__shared_weak_count *)*((_QWORD *)&v692 + 1);
  if (!*((_QWORD *)&v692 + 1))
    goto LABEL_801;
  v628 = (unint64_t *)(*((_QWORD *)&v692 + 1) + 8);
  do
    v629 = __ldaxr(v628);
  while (__stlxr(v629 - 1, v628));
  if (v629)
  {
LABEL_801:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_803;
    goto LABEL_802;
  }
  ((void (*)(std::__shared_weak_count *))v627->__on_zero_shared)(v627);
  std::__shared_weak_count::__release_weak(v627);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_802:
    operator delete(*(void **)__dst);
LABEL_803:
  *(_QWORD *)&v692 = 0x9130F24160E157BLL;
  BYTE12(v692) = 0;
  DWORD2(v692) = 136256030;
  v630 = sub_239510ECC((uint64_t)&v692);
  v631 = strlen(v630);
  if (v631 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v632 = v631;
  if (v631 >= 0x17)
  {
    v634 = (v631 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v631 | 7) != 0x17)
      v634 = v631 | 7;
    v635 = v634 + 1;
    v633 = operator new(v634 + 1);
    *(_QWORD *)&__dst[8] = v632;
    *(_QWORD *)&__dst[16] = v635 | 0x8000000000000000;
    *(_QWORD *)__dst = v633;
  }
  else
  {
    __dst[23] = v631;
    v633 = __dst;
    if (!v631)
      goto LABEL_811;
  }
  memmove(v633, v630, v632);
LABEL_811:
  v633[v632] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)v691);
  sub_239BB4A9C((uint64_t)&v686, *(const void **)v691, a2 + 216);
  v636 = *(std::__shared_weak_count **)&v691[8];
  if (*(_QWORD *)&v691[8])
  {
    v637 = (unint64_t *)(*(_QWORD *)&v691[8] + 8);
    do
      v638 = __ldaxr(v637);
    while (__stlxr(v638 - 1, v637));
    if (!v638)
    {
      ((void (*)(std::__shared_weak_count *))v636->__on_zero_shared)(v636);
      std::__shared_weak_count::__release_weak(v636);
      if ((__dst[23] & 0x80000000) == 0)
        goto LABEL_817;
      goto LABEL_816;
    }
  }
  if ((__dst[23] & 0x80000000) != 0)
LABEL_816:
    operator delete(*(void **)__dst);
LABEL_817:
  sub_239629EF4((uint64_t)&__p, (CFStringRef *)__dst);
  sub_239BB7018((uint64_t)a1, *(const void **)__dst, (uint64_t)&v686);
  v642 = *(std::__shared_weak_count **)&__dst[8];
  if (!*(_QWORD *)&__dst[8])
    goto LABEL_821;
  v643 = (unint64_t *)(*(_QWORD *)&__dst[8] + 8);
  do
    v644 = __ldaxr(v643);
  while (__stlxr(v644 - 1, v643));
  if (!v644)
  {
    ((void (*)(std::__shared_weak_count *))v642->__on_zero_shared)(v642);
    std::__shared_weak_count::__release_weak(v642);
    v645 = (std::__shared_weak_count *)*((_QWORD *)&v686 + 1);
    if (!*((_QWORD *)&v686 + 1))
      goto LABEL_825;
  }
  else
  {
LABEL_821:
    v645 = (std::__shared_weak_count *)*((_QWORD *)&v686 + 1);
    if (!*((_QWORD *)&v686 + 1))
      goto LABEL_825;
  }
  v646 = (unint64_t *)&v645->__shared_owners_;
  do
    v647 = __ldaxr(v646);
  while (__stlxr(v647 - 1, v646));
  if (v647)
  {
LABEL_825:
    if ((SHIBYTE(v688) & 0x80000000) == 0)
      goto LABEL_827;
    goto LABEL_826;
  }
  ((void (*)(std::__shared_weak_count *))v645->__on_zero_shared)(v645);
  std::__shared_weak_count::__release_weak(v645);
  if (SHIBYTE(v688) < 0)
LABEL_826:
    operator delete((void *)__p);
LABEL_827:
  *(_OWORD *)__dst = xmmword_239F11855;
  *(int16x8_t *)&__dst[16] = xmmword_239F11865;
  *(_QWORD *)&__dst[32] = 0x1208030B010315;
  sub_2396F02A0(__dst, 3.10279197e-264, xmmword_239F11865, v639, v640, v641);
  v649 = v648;
  v650 = strlen(v648);
  if (v650 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v651 = v650;
  if (v650 >= 0x17)
  {
    v653 = (v650 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v650 | 7) != 0x17)
      v653 = v650 | 7;
    v654 = v653 + 1;
    v652 = (char *)operator new(v653 + 1);
    *(_QWORD *)&v691[8] = v651;
    *(_QWORD *)&v691[16] = v654 | 0x8000000000000000;
    *(_QWORD *)v691 = v652;
  }
  else
  {
    v691[23] = v650;
    v652 = v691;
    if (!v650)
      goto LABEL_835;
  }
  memmove(v652, v649, v651);
LABEL_835:
  v652[v651] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 704));
  v658 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_839;
  v659 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v660 = __ldaxr(v659);
  while (__stlxr(v660 - 1, v659));
  if (v660)
  {
LABEL_839:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_841;
    goto LABEL_840;
  }
  ((void (*)(std::__shared_weak_count *))v658->__on_zero_shared)(v658);
  std::__shared_weak_count::__release_weak(v658);
  if (v691[23] < 0)
LABEL_840:
    operator delete(*(void **)v691);
LABEL_841:
  strcpy(__dst, "(GX\\AEARMwGJBMK\\w\\ZIF[NGZE");
  sub_2396F1974((uint64_t)__dst, *(int32x4_t *)"JBMK\\w\\ZIF[NGZE", v655, v656, v657);
  v662 = v661;
  v663 = strlen(v661);
  if (v663 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v664 = v663;
  if (v663 >= 0x17)
  {
    v666 = (v663 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v663 | 7) != 0x17)
      v666 = v663 | 7;
    v667 = v666 + 1;
    v665 = (char *)operator new(v666 + 1);
    *(_QWORD *)&v691[8] = v664;
    *(_QWORD *)&v691[16] = v667 | 0x8000000000000000;
    *(_QWORD *)v691 = v665;
  }
  else
  {
    v691[23] = v663;
    v665 = v691;
    if (!v663)
      goto LABEL_849;
  }
  memmove(v665, v662, v664);
LABEL_849:
  v665[v664] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 705));
  v671 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_853;
  v672 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v673 = __ldaxr(v672);
  while (__stlxr(v673 - 1, v672));
  if (v673)
  {
LABEL_853:
    if ((v691[23] & 0x80000000) == 0)
      goto LABEL_855;
    goto LABEL_854;
  }
  ((void (*)(std::__shared_weak_count *))v671->__on_zero_shared)(v671);
  std::__shared_weak_count::__release_weak(v671);
  if (v691[23] < 0)
LABEL_854:
    operator delete(*(void **)v691);
LABEL_855:
  *(_OWORD *)__dst = xmmword_239F11898;
  sub_2396F1974((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F11898 + 11), v668, v669, v670);
  v675 = v674;
  v676 = strlen(v674);
  if (v676 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v677 = v676;
  if (v676 >= 0x17)
  {
    v679 = (v676 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v676 | 7) != 0x17)
      v679 = v676 | 7;
    v680 = v679 + 1;
    v678 = (char *)operator new(v679 + 1);
    *(_QWORD *)&v691[8] = v677;
    *(_QWORD *)&v691[16] = v680 | 0x8000000000000000;
    *(_QWORD *)v691 = v678;
  }
  else
  {
    v691[23] = v676;
    v678 = v691;
    if (!v676)
      goto LABEL_863;
  }
  memmove(v678, v675, v677);
LABEL_863:
  v678[v677] = 0;
  sub_239629EF4((uint64_t)v691, (CFStringRef *)&__p);
  sub_2396B4EAC((uint64_t)a1, (const void *)__p, (_BYTE *)(a2 + 617));
  v681 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
  if (!*((_QWORD *)&__p + 1))
    goto LABEL_867;
  v682 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
  do
    v683 = __ldaxr(v682);
  while (__stlxr(v683 - 1, v682));
  if (v683)
  {
LABEL_867:
    if ((v691[23] & 0x80000000) == 0)
      return;
    goto LABEL_868;
  }
  ((void (*)(std::__shared_weak_count *))v681->__on_zero_shared)(v681);
  std::__shared_weak_count::__release_weak(v681);
  if (v691[23] < 0)
LABEL_868:
    operator delete(*(void **)v691);
}

void sub_239BBD020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;
  uint64_t v28;

  sub_239416DA0(v28 - 128);
  sub_239416DA0((uint64_t)&a11);
  if (a27 < 0)
    operator delete(__p);
  sub_239416DA0(v28 - 104);
  if (a21 < 0)
    operator delete(a16);
  sub_239416DA0(v27);
  _Unwind_Resume(a1);
}

void sub_239BBD3DC()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD3E4()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD3EC()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD3F4()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD3FC()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD404()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD40C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD414()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD41C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD424()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD42C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD434()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD43C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD444()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD44C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD454()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD45C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD464()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD46C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD474()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD47C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD484()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD48C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD494()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD49C()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD4A4()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD4AC()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD4B4()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD4BC()
{
  JUMPOUT(0x239BBD3CCLL);
}

void sub_239BBD4C4(uint64_t a1, const void *a2, int *a3)
{
  std::__shared_weak_count *v6;
  const __CFDictionary *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  void *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  void *value;
  std::__shared_weak_count *v20;
  int v21;

  v7 = *(const __CFDictionary **)a1;
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      return;
  }
  else
  {
LABEL_6:
    if (!v7)
      return;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, a2))
    return;
  v21 = *a3;
  sub_239629634(&value, &v21);
  v12 = value;
  v11 = v20;
  if (!v20)
    goto LABEL_13;
  v13 = (unint64_t *)&v20->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_13:
    if (!v12)
      goto LABEL_15;
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (v12)
LABEL_14:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, a2, value);
LABEL_15:
  v16 = v20;
  if (v20)
  {
    v17 = (unint64_t *)&v20->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
}

void sub_239BBD614(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239BBD628(uint64_t a1, uint64_t a2)
{
  int8x16_t v4;
  double v5;
  int32x4_t v6;
  const char *v7;
  const char *v8;
  size_t v9;
  size_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t v14;
  double v15;
  int32x4_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  const char *v20;
  const char *v21;
  size_t v22;
  size_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  const char *v33;
  const char *v34;
  size_t v35;
  size_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  int8x16_t v40;
  double v41;
  int32x4_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  const char *v46;
  const char *v47;
  size_t v48;
  size_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  int32x4_t v53;
  double v54;
  int32x4_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unsigned __int8 *v59;
  size_t v60;
  size_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  int8x16_t v65;
  double v66;
  int32x4_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  const char *v71;
  const char *v72;
  size_t v73;
  size_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  const char *v81;
  const char *v82;
  size_t v83;
  size_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  const char *v91;
  const char *v92;
  size_t v93;
  size_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  const char *v101;
  const char *v102;
  size_t v103;
  size_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  int32x4_t v108;
  double v109;
  int32x4_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unsigned __int8 *v114;
  size_t v115;
  size_t v116;
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  const char *v123;
  size_t v124;
  size_t v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  int8x16_t v129;
  double v130;
  int32x4_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  const char *v135;
  const char *v136;
  size_t v137;
  size_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  int8x16_t *v145;
  size_t v146;
  size_t v147;
  _BYTE *v148;
  uint64_t v149;
  uint64_t v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  const char *v154;
  size_t v155;
  size_t v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  int32x4_t v160;
  double v161;
  int32x4_t v162;
  std::__shared_weak_count *v163;
  unint64_t *v164;
  unint64_t v165;
  unsigned __int8 *v166;
  size_t v167;
  size_t v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  std::__shared_weak_count *v172;
  unint64_t *v173;
  unint64_t v174;
  const char *v175;
  const char *v176;
  size_t v177;
  size_t v178;
  _BYTE *v179;
  uint64_t v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  const char *v185;
  size_t v186;
  size_t v187;
  _BYTE *v188;
  uint64_t v189;
  uint64_t v190;
  std::__shared_weak_count *v191;
  unint64_t *v192;
  unint64_t v193;
  const char *v194;
  size_t v195;
  size_t v196;
  _BYTE *v197;
  uint64_t v198;
  uint64_t v199;
  std::__shared_weak_count *v200;
  unint64_t *v201;
  unint64_t v202;
  const char *v203;
  size_t v204;
  size_t v205;
  _BYTE *v206;
  uint64_t v207;
  uint64_t v208;
  std::__shared_weak_count *v209;
  unint64_t *v210;
  unint64_t v211;
  const char *v212;
  const char *v213;
  size_t v214;
  size_t v215;
  _BYTE *v216;
  uint64_t v217;
  uint64_t v218;
  int8x16_t v219;
  double v220;
  int32x4_t v221;
  std::__shared_weak_count *v222;
  unint64_t *v223;
  unint64_t v224;
  const char *v225;
  const char *v226;
  size_t v227;
  size_t v228;
  _BYTE *v229;
  uint64_t v230;
  uint64_t v231;
  int8x16_t v232;
  double v233;
  int32x4_t v234;
  std::__shared_weak_count *v235;
  unint64_t *v236;
  unint64_t v237;
  const char *v238;
  const char *v239;
  size_t v240;
  size_t v241;
  _BYTE *v242;
  uint64_t v243;
  uint64_t v244;
  std::__shared_weak_count *v245;
  unint64_t *v246;
  unint64_t v247;
  const char *v248;
  const char *v249;
  size_t v250;
  size_t v251;
  _BYTE *v252;
  uint64_t v253;
  uint64_t v254;
  const void *v255;
  std::__shared_weak_count *v256;
  const __CFDictionary *v257;
  unint64_t *p_shared_owners;
  unint64_t v259;
  unint64_t v260;
  int8x16_t v261;
  unint64_t *v262;
  unint64_t v263;
  unint64_t v264;
  std::__shared_weak_count *v265;
  unint64_t *v266;
  unint64_t v267;
  std::__shared_weak_count *v268;
  unint64_t *v269;
  unint64_t v270;
  int v271;
  char v272[16];
  _BYTE __dst[31];
  int8x16_t __p[2];
  __int128 v275;
  uint64_t v276;

  v276 = *MEMORY[0x24BDAC8D0];
  sub_23962C714((_OWORD *)a1);
  __p[0] = (int8x16_t)xmmword_239F11151;
  *(uint64_t *)((char *)&__p[0].i64[1] + 5) = 0x2B2A2C31243720;
  sub_2396EFB50((uint64_t)__p, (int32x4_t)xmmword_239F11151, v4, v5, v6);
  v8 = v7;
  v9 = strlen(v7);
  if (v9 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v12 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v12 = v9 | 7;
    v13 = v12 + 1;
    v11 = operator new(v12 + 1);
    *(_QWORD *)&__dst[8] = v10;
    *(_QWORD *)&__dst[16] = v13 | 0x8000000000000000;
    *(_QWORD *)__dst = v11;
  }
  else
  {
    __dst[23] = v9;
    v11 = __dst;
    if (!v9)
      goto LABEL_9;
  }
  memmove(v11, v8, v10);
LABEL_9:
  v11[v10] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_239BB4338(a1, (const void *)v275, a2);
  v17 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_13;
  v18 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_13:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_14:
    operator delete(*(void **)__dst);
LABEL_15:
  __p[0] = (int8x16_t)xmmword_239F11166;
  __p[1].i32[0] = 1184533;
  sub_23958E55C((uint64_t)__p, (int32x4_t)xmmword_239F11166, v14, v15, v16);
  v21 = v20;
  v22 = strlen(v20);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    *(_QWORD *)&__dst[8] = v23;
    *(_QWORD *)&__dst[16] = v26 | 0x8000000000000000;
    *(_QWORD *)__dst = v24;
  }
  else
  {
    __dst[23] = v22;
    v24 = __dst;
    if (!v22)
      goto LABEL_23;
  }
  memmove(v24, v21, v23);
LABEL_23:
  v24[v23] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_239BB4338(a1, (const void *)v275, a2 + 4);
  v30 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_27;
  v31 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v32 = __ldaxr(v31);
  while (__stlxr(v32 - 1, v31));
  if (v32)
  {
LABEL_27:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
  std::__shared_weak_count::__release_weak(v30);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_28:
    operator delete(*(void **)__dst);
LABEL_29:
  strcpy(__p[0].i8, "&KG^y@OHGJyORCTGROIH");
  sub_2396EFB50((uint64_t)__p, *(int32x4_t *)"&KG^y@OHGJyORCTGROIH", v27, v28, v29);
  v34 = v33;
  v35 = strlen(v33);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v36 = v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = operator new(v38 + 1);
    *(_QWORD *)&__dst[8] = v36;
    *(_QWORD *)&__dst[16] = v39 | 0x8000000000000000;
    *(_QWORD *)__dst = v37;
  }
  else
  {
    __dst[23] = v35;
    v37 = __dst;
    if (!v35)
      goto LABEL_37;
  }
  memmove(v37, v34, v36);
LABEL_37:
  v37[v36] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_239BB4338(a1, (const void *)v275, a2 + 8);
  v43 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_41;
  v44 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v45 = __ldaxr(v44);
  while (__stlxr(v45 - 1, v44));
  if (v45)
  {
LABEL_41:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_43;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
  std::__shared_weak_count::__release_weak(v43);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_42:
    operator delete(*(void **)__dst);
LABEL_43:
  __p[0] = (int8x16_t)xmmword_239F1118F;
  *(uint64_t *)((char *)&__p[0].i64[1] + 7) = 0x29282E33263532;
  sub_2396EFBE0((uint64_t)__p, (int32x4_t)xmmword_239F1118F, v40, v41, v42);
  v47 = v46;
  v48 = strlen(v46);
  if (v48 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v49 = v48;
  if (v48 >= 0x17)
  {
    v51 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v48 | 7) != 0x17)
      v51 = v48 | 7;
    v52 = v51 + 1;
    v50 = operator new(v51 + 1);
    *(_QWORD *)&__dst[8] = v49;
    *(_QWORD *)&__dst[16] = v52 | 0x8000000000000000;
    *(_QWORD *)__dst = v50;
  }
  else
  {
    __dst[23] = v48;
    v50 = __dst;
    if (!v48)
      goto LABEL_51;
  }
  memmove(v50, v47, v49);
LABEL_51:
  v50[v49] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_239BB47DC(a1, (const void *)v275, a2 + 16);
  v56 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_55;
  v57 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v58 = __ldaxr(v57);
  while (__stlxr(v58 - 1, v57));
  if (v58)
  {
LABEL_55:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_57;
    goto LABEL_56;
  }
  ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
  std::__shared_weak_count::__release_weak(v56);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_56:
    operator delete(*(void **)__dst);
LABEL_57:
  strcpy(__p[0].i8, ".COVqH[BBqloqJ[\\OZGA@");
  v59 = sub_239A90BEC((unsigned __int8 *)__p, *(int8x16_t *)".COVqH[BBqloqJ[\\OZGA@", v53, v54, v55);
  v60 = strlen((const char *)v59);
  if (v60 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v61 = v60;
  if (v60 >= 0x17)
  {
    v63 = (v60 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v60 | 7) != 0x17)
      v63 = v60 | 7;
    v64 = v63 + 1;
    v62 = operator new(v63 + 1);
    *(_QWORD *)&__dst[8] = v61;
    *(_QWORD *)&__dst[16] = v64 | 0x8000000000000000;
    *(_QWORD *)__dst = v62;
  }
  else
  {
    __dst[23] = v60;
    v62 = __dst;
    if (!v60)
      goto LABEL_65;
  }
  memmove(v62, v59, v61);
LABEL_65:
  v62[v61] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_239BB47DC(a1, (const void *)v275, a2 + 20);
  v68 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_69;
  v69 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v70 = __ldaxr(v69);
  while (__stlxr(v70 - 1, v69));
  if (v70)
  {
LABEL_69:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_70;
  }
  ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
  std::__shared_weak_count::__release_weak(v68);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_70:
    operator delete(*(void **)__dst);
LABEL_71:
  __p[0] = (int8x16_t)xmmword_239F111BC;
  *(uint64_t *)((char *)&__p[0].i64[1] + 7) = 0x7D7C7A67726166;
  sub_2396EFBE0((uint64_t)__p, (int32x4_t)xmmword_239F111BC, v65, v66, v67);
  v72 = v71;
  v73 = strlen(v71);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    *(_QWORD *)&__dst[8] = v74;
    *(_QWORD *)&__dst[16] = v77 | 0x8000000000000000;
    *(_QWORD *)__dst = v75;
  }
  else
  {
    __dst[23] = v73;
    v75 = __dst;
    if (!v73)
      goto LABEL_79;
  }
  memmove(v75, v72, v74);
LABEL_79:
  v75[v74] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_239BB47DC(a1, (const void *)v275, a2 + 24);
  v78 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_83;
  v79 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v80 = __ldaxr(v79);
  while (__stlxr(v80 - 1, v79));
  if (v80)
  {
LABEL_83:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_85;
    goto LABEL_84;
  }
  ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
  std::__shared_weak_count::__release_weak(v78);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_84:
    operator delete(*(void **)__dst);
LABEL_85:
  __p[0] = (int8x16_t)xmmword_239F111D3;
  __p[1].i8[0] = 0;
  sub_2396EFA24((uint64_t)__p);
  v82 = v81;
  v83 = strlen(v81);
  if (v83 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v84 = v83;
  if (v83 >= 0x17)
  {
    v86 = (v83 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v83 | 7) != 0x17)
      v86 = v83 | 7;
    v87 = v86 + 1;
    v85 = operator new(v86 + 1);
    *(_QWORD *)&__dst[8] = v84;
    *(_QWORD *)&__dst[16] = v87 | 0x8000000000000000;
    *(_QWORD *)__dst = v85;
  }
  else
  {
    __dst[23] = v83;
    v85 = __dst;
    if (!v83)
      goto LABEL_93;
  }
  memmove(v85, v82, v84);
LABEL_93:
  v85[v84] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_239BB47DC(a1, (const void *)v275, a2 + 28);
  v88 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_97;
  v89 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v90 = __ldaxr(v89);
  while (__stlxr(v90 - 1, v89));
  if (v90)
  {
LABEL_97:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_99;
    goto LABEL_98;
  }
  ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
  std::__shared_weak_count::__release_weak(v88);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_98:
    operator delete(*(void **)__dst);
LABEL_99:
  *(_QWORD *)&v275 = 0x7564794F68717D10;
  BYTE14(v275) = 0;
  WORD6(v275) = 32383;
  DWORD2(v275) = 2036625762;
  sub_23958E5E0((uint64_t)&v275);
  v92 = v91;
  v93 = strlen(v91);
  if (v93 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v94 = v93;
  if (v93 >= 0x17)
  {
    v96 = (v93 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v93 | 7) != 0x17)
      v96 = v93 | 7;
    v97 = v96 + 1;
    v95 = operator new(v96 + 1);
    *(_QWORD *)&__dst[8] = v94;
    *(_QWORD *)&__dst[16] = v97 | 0x8000000000000000;
    *(_QWORD *)__dst = v95;
  }
  else
  {
    __dst[23] = v93;
    v95 = __dst;
    if (!v93)
      goto LABEL_107;
  }
  memmove(v95, v92, v94);
LABEL_107:
  v95[v94] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_239BB4338(a1, (const void *)__p[0].i64[0], a2 + 12);
  v98 = (std::__shared_weak_count *)__p[0].i64[1];
  if (!__p[0].i64[1])
    goto LABEL_111;
  v99 = (unint64_t *)(__p[0].i64[1] + 8);
  do
    v100 = __ldaxr(v99);
  while (__stlxr(v100 - 1, v99));
  if (v100)
  {
LABEL_111:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_113;
    goto LABEL_112;
  }
  ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
  std::__shared_weak_count::__release_weak(v98);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_112:
    operator delete(*(void **)__dst);
LABEL_113:
  v275 = xmmword_239F0C220;
  sub_23950F8E4((uint64_t)&v275);
  v102 = v101;
  v103 = strlen(v101);
  if (v103 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v104 = v103;
  if (v103 >= 0x17)
  {
    v106 = (v103 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v103 | 7) != 0x17)
      v106 = v103 | 7;
    v107 = v106 + 1;
    v105 = operator new(v106 + 1);
    *(_QWORD *)&__dst[8] = v104;
    *(_QWORD *)&__dst[16] = v107 | 0x8000000000000000;
    *(_QWORD *)__dst = v105;
  }
  else
  {
    __dst[23] = v103;
    v105 = __dst;
    if (!v103)
      goto LABEL_121;
  }
  memmove(v105, v102, v104);
LABEL_121:
  v105[v104] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_2396B4EAC(a1, (const void *)__p[0].i64[0], (_BYTE *)(a2 + 56));
  v111 = (std::__shared_weak_count *)__p[0].i64[1];
  if (!__p[0].i64[1])
    goto LABEL_125;
  v112 = (unint64_t *)(__p[0].i64[1] + 8);
  do
    v113 = __ldaxr(v112);
  while (__stlxr(v113 - 1, v112));
  if (v113)
  {
LABEL_125:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_127;
    goto LABEL_126;
  }
  ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
  std::__shared_weak_count::__release_weak(v111);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_126:
    operator delete(*(void **)__dst);
LABEL_127:
  __p[0] = (int8x16_t)xmmword_239F111E4;
  *(uint64_t *)((char *)&__p[0].i64[1] + 6) = 0xE060502190F18;
  v114 = sub_239A90BEC((unsigned __int8 *)__p, (int8x16_t)xmmword_239F111E4, v108, v109, v110);
  v115 = strlen((const char *)v114);
  if (v115 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v116 = v115;
  if (v115 >= 0x17)
  {
    v118 = (v115 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v115 | 7) != 0x17)
      v118 = v115 | 7;
    v119 = v118 + 1;
    v117 = operator new(v118 + 1);
    *(_QWORD *)&__dst[8] = v116;
    *(_QWORD *)&__dst[16] = v119 | 0x8000000000000000;
    *(_QWORD *)__dst = v117;
  }
  else
  {
    __dst[23] = v115;
    v117 = __dst;
    if (!v115)
      goto LABEL_135;
  }
  memmove(v117, v114, v116);
LABEL_135:
  v117[v116] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_2397373B0(a1, (const void *)v275, a2 + 64);
  v120 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_139;
  v121 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v122 = __ldaxr(v121);
  while (__stlxr(v122 - 1, v121));
  if (v122)
  {
LABEL_139:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_141;
    goto LABEL_140;
  }
  ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
  std::__shared_weak_count::__release_weak(v120);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_140:
    operator delete(*(void **)__dst);
LABEL_141:
  *(_QWORD *)&v275 = 0x1E081419091E0D7BLL;
  BYTE8(v275) = 0;
  v123 = sub_239513718((char *)&v275);
  v124 = strlen(v123);
  if (v124 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v125 = v124;
  if (v124 >= 0x17)
  {
    v127 = (v124 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v124 | 7) != 0x17)
      v127 = v124 | 7;
    v128 = v127 + 1;
    v126 = operator new(v127 + 1);
    *(_QWORD *)&__dst[8] = v125;
    *(_QWORD *)&__dst[16] = v128 | 0x8000000000000000;
    *(_QWORD *)__dst = v126;
  }
  else
  {
    __dst[23] = v124;
    v126 = __dst;
    if (!v124)
      goto LABEL_149;
  }
  memmove(v126, v123, v125);
LABEL_149:
  v126[v125] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_2396B4EAC(a1, (const void *)__p[0].i64[0], (_BYTE *)(a2 + 72));
  v132 = (std::__shared_weak_count *)__p[0].i64[1];
  if (!__p[0].i64[1])
    goto LABEL_153;
  v133 = (unint64_t *)(__p[0].i64[1] + 8);
  do
    v134 = __ldaxr(v133);
  while (__stlxr(v134 - 1, v133));
  if (v134)
  {
LABEL_153:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_155;
    goto LABEL_154;
  }
  ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
  std::__shared_weak_count::__release_weak(v132);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_154:
    operator delete(*(void **)__dst);
LABEL_155:
  *(_OWORD *)__dst = xmmword_239F111FA;
  *(_OWORD *)&__dst[15] = *(__int128 *)((char *)&xmmword_239F111FA + 15);
  sub_2396EFF58((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F111FA + 15), v129, v130, v131);
  v136 = v135;
  v137 = strlen(v135);
  if (v137 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v138 = v137;
  if (v137 >= 0x17)
  {
    v140 = (v137 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v137 | 7) != 0x17)
      v140 = v137 | 7;
    v141 = v140 + 1;
    v139 = operator new(v140 + 1);
    __p[0].i64[1] = v138;
    __p[1].i64[0] = v141 | 0x8000000000000000;
    __p[0].i64[0] = (uint64_t)v139;
  }
  else
  {
    __p[1].i8[7] = v137;
    v139 = __p;
    if (!v137)
      goto LABEL_163;
  }
  memmove(v139, v136, v138);
LABEL_163:
  *((_BYTE *)v139 + v138) = 0;
  sub_239629EF4((uint64_t)__p, (CFStringRef *)&v275);
  sub_2396B4EAC(a1, (const void *)v275, (_BYTE *)(a2 + 144));
  v142 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_167;
  v143 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v144 = __ldaxr(v143);
  while (__stlxr(v144 - 1, v143));
  if (v144)
  {
LABEL_167:
    if ((__p[1].i8[7] & 0x80000000) == 0)
      goto LABEL_169;
    goto LABEL_168;
  }
  ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
  std::__shared_weak_count::__release_weak(v142);
  if (__p[1].i8[7] < 0)
LABEL_168:
    operator delete((void *)__p[0].i64[0]);
LABEL_169:
  v145 = sub_239A91B18(__p);
  v146 = strlen(v145->i8);
  if (v146 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v147 = v146;
  if (v146 >= 0x17)
  {
    v149 = (v146 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v146 | 7) != 0x17)
      v149 = v146 | 7;
    v150 = v149 + 1;
    v148 = operator new(v149 + 1);
    *(_QWORD *)&__dst[8] = v147;
    *(_QWORD *)&__dst[16] = v150 | 0x8000000000000000;
    *(_QWORD *)__dst = v148;
  }
  else
  {
    __dst[23] = v146;
    v148 = __dst;
    if (!v146)
      goto LABEL_177;
  }
  memmove(v148, v145, v147);
LABEL_177:
  v148[v147] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_2396B4EAC(a1, (const void *)v275, (_BYTE *)(a2 + 160));
  v151 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_181;
  v152 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v153 = __ldaxr(v152);
  while (__stlxr(v153 - 1, v152));
  if (v153)
  {
LABEL_181:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_183;
    goto LABEL_182;
  }
  ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
  std::__shared_weak_count::__release_weak(v151);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_182:
    operator delete(*(void **)__dst);
LABEL_183:
  *(_QWORD *)&v275 = 0x7644777A78747D1BLL;
  DWORD2(v275) = 8290164;
  v154 = sub_23958E4C8((uint64_t)&v275);
  v155 = strlen(v154);
  if (v155 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v156 = v155;
  if (v155 >= 0x17)
  {
    v158 = (v155 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v155 | 7) != 0x17)
      v158 = v155 | 7;
    v159 = v158 + 1;
    v157 = operator new(v158 + 1);
    *(_QWORD *)&__dst[8] = v156;
    *(_QWORD *)&__dst[16] = v159 | 0x8000000000000000;
    *(_QWORD *)__dst = v157;
  }
  else
  {
    __dst[23] = v155;
    v157 = __dst;
    if (!v155)
      goto LABEL_191;
  }
  memmove(v157, v154, v156);
LABEL_191:
  v157[v156] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_239BC1688(a1, (const void *)__p[0].i64[0], (char *)(a2 + 146));
  v163 = (std::__shared_weak_count *)__p[0].i64[1];
  if (!__p[0].i64[1])
    goto LABEL_195;
  v164 = (unint64_t *)(__p[0].i64[1] + 8);
  do
    v165 = __ldaxr(v164);
  while (__stlxr(v165 - 1, v164));
  if (v165)
  {
LABEL_195:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_197;
    goto LABEL_196;
  }
  ((void (*)(std::__shared_weak_count *))v163->__on_zero_shared)(v163);
  std::__shared_weak_count::__release_weak(v163);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_196:
    operator delete(*(void **)__dst);
LABEL_197:
  __p[0] = (int8x16_t)xmmword_239F1122B;
  *(uint64_t *)((char *)&__p[0].i64[1] + 6) = 0xB0A0103311A00;
  v166 = sub_239A90BEC((unsigned __int8 *)__p, (int8x16_t)xmmword_239F1122B, v160, v161, v162);
  v167 = strlen((const char *)v166);
  if (v167 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v168 = v167;
  if (v167 >= 0x17)
  {
    v170 = (v167 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v167 | 7) != 0x17)
      v170 = v167 | 7;
    v171 = v170 + 1;
    v169 = operator new(v170 + 1);
    *(_QWORD *)&__dst[8] = v168;
    *(_QWORD *)&__dst[16] = v171 | 0x8000000000000000;
    *(_QWORD *)__dst = v169;
  }
  else
  {
    __dst[23] = v167;
    v169 = __dst;
    if (!v167)
      goto LABEL_205;
  }
  memmove(v169, v166, v168);
LABEL_205:
  v169[v168] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_239BC1688(a1, (const void *)v275, (char *)(a2 + 147));
  v172 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_209;
  v173 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v174 = __ldaxr(v173);
  while (__stlxr(v174 - 1, v173));
  if (v174)
  {
LABEL_209:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_211;
    goto LABEL_210;
  }
  ((void (*)(std::__shared_weak_count *))v172->__on_zero_shared)(v172);
  std::__shared_weak_count::__release_weak(v172);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_210:
    operator delete(*(void **)__dst);
LABEL_211:
  __p[0] = (int8x16_t)xmmword_239F11241;
  __p[1].i8[0] = 0;
  sub_2396EFA24((uint64_t)__p);
  v176 = v175;
  v177 = strlen(v175);
  if (v177 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v178 = v177;
  if (v177 >= 0x17)
  {
    v180 = (v177 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v177 | 7) != 0x17)
      v180 = v177 | 7;
    v181 = v180 + 1;
    v179 = operator new(v180 + 1);
    *(_QWORD *)&__dst[8] = v178;
    *(_QWORD *)&__dst[16] = v181 | 0x8000000000000000;
    *(_QWORD *)__dst = v179;
  }
  else
  {
    __dst[23] = v177;
    v179 = __dst;
    if (!v177)
      goto LABEL_219;
  }
  memmove(v179, v176, v178);
LABEL_219:
  v179[v178] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_239BC1688(a1, (const void *)v275, (char *)(a2 + 148));
  v182 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_223;
  v183 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v184 = __ldaxr(v183);
  while (__stlxr(v184 - 1, v183));
  if (v184)
  {
LABEL_223:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_225;
    goto LABEL_224;
  }
  ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
  std::__shared_weak_count::__release_weak(v182);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_224:
    operator delete(*(void **)__dst);
LABEL_225:
  *(_QWORD *)&v275 = 0x6E6C5E64726E7101;
  BYTE10(v275) = 0;
  WORD4(v275) = 25701;
  v185 = (const char *)sub_23958E518((uint64_t)&v275);
  v186 = strlen(v185);
  if (v186 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v187 = v186;
  if (v186 >= 0x17)
  {
    v189 = (v186 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v186 | 7) != 0x17)
      v189 = v186 | 7;
    v190 = v189 + 1;
    v188 = operator new(v189 + 1);
    *(_QWORD *)&__dst[8] = v187;
    *(_QWORD *)&__dst[16] = v190 | 0x8000000000000000;
    *(_QWORD *)__dst = v188;
  }
  else
  {
    __dst[23] = v186;
    v188 = __dst;
    if (!v186)
      goto LABEL_233;
  }
  memmove(v188, v185, v187);
LABEL_233:
  v188[v187] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_239BC1688(a1, (const void *)__p[0].i64[0], (char *)(a2 + 149));
  v191 = (std::__shared_weak_count *)__p[0].i64[1];
  if (!__p[0].i64[1])
    goto LABEL_237;
  v192 = (unint64_t *)(__p[0].i64[1] + 8);
  do
    v193 = __ldaxr(v192);
  while (__stlxr(v193 - 1, v192));
  if (v193)
  {
LABEL_237:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_239;
    goto LABEL_238;
  }
  ((void (*)(std::__shared_weak_count *))v191->__on_zero_shared)(v191);
  std::__shared_weak_count::__release_weak(v191);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_238:
    operator delete(*(void **)__dst);
LABEL_239:
  strcpy((char *)&v275, "\asufdlXjhcb");
  v194 = sub_23958E4C8((uint64_t)&v275);
  v195 = strlen(v194);
  if (v195 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v196 = v195;
  if (v195 >= 0x17)
  {
    v198 = (v195 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v195 | 7) != 0x17)
      v198 = v195 | 7;
    v199 = v198 + 1;
    v197 = operator new(v198 + 1);
    *(_QWORD *)&__dst[8] = v196;
    *(_QWORD *)&__dst[16] = v199 | 0x8000000000000000;
    *(_QWORD *)__dst = v197;
  }
  else
  {
    __dst[23] = v195;
    v197 = __dst;
    if (!v195)
      goto LABEL_247;
  }
  memmove(v197, v194, v196);
LABEL_247:
  v197[v196] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_239BC1688(a1, (const void *)__p[0].i64[0], (char *)(a2 + 150));
  v200 = (std::__shared_weak_count *)__p[0].i64[1];
  if (!__p[0].i64[1])
    goto LABEL_251;
  v201 = (unint64_t *)(__p[0].i64[1] + 8);
  do
    v202 = __ldaxr(v201);
  while (__stlxr(v202 - 1, v201));
  if (v202)
  {
LABEL_251:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_253;
    goto LABEL_252;
  }
  ((void (*)(std::__shared_weak_count *))v200->__on_zero_shared)(v200);
  std::__shared_weak_count::__release_weak(v200);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_252:
    operator delete(*(void **)__dst);
LABEL_253:
  strcpy((char *)&v275, "1_D\\nEYCTPUB");
  v203 = sub_239510ECC((uint64_t)&v275);
  v204 = strlen(v203);
  if (v204 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v205 = v204;
  if (v204 >= 0x17)
  {
    v207 = (v204 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v204 | 7) != 0x17)
      v207 = v204 | 7;
    v208 = v207 + 1;
    v206 = operator new(v207 + 1);
    *(_QWORD *)&__dst[8] = v205;
    *(_QWORD *)&__dst[16] = v208 | 0x8000000000000000;
    *(_QWORD *)__dst = v206;
  }
  else
  {
    __dst[23] = v204;
    v206 = __dst;
    if (!v204)
      goto LABEL_261;
  }
  memmove(v206, v203, v205);
LABEL_261:
  v206[v205] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_239BB4A9C(a1, (const void *)__p[0].i64[0], a2 + 152);
  v209 = (std::__shared_weak_count *)__p[0].i64[1];
  if (!__p[0].i64[1])
    goto LABEL_265;
  v210 = (unint64_t *)(__p[0].i64[1] + 8);
  do
    v211 = __ldaxr(v210);
  while (__stlxr(v211 - 1, v210));
  if (v211)
  {
LABEL_265:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_267;
    goto LABEL_266;
  }
  ((void (*)(std::__shared_weak_count *))v209->__on_zero_shared)(v209);
  std::__shared_weak_count::__release_weak(v209);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_266:
    operator delete(*(void **)__dst);
LABEL_267:
  v275 = xmmword_239F0C230;
  sub_23950F8E4((uint64_t)&v275);
  v213 = v212;
  v214 = strlen(v212);
  if (v214 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v215 = v214;
  if (v214 >= 0x17)
  {
    v217 = (v214 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v214 | 7) != 0x17)
      v217 = v214 | 7;
    v218 = v217 + 1;
    v216 = operator new(v217 + 1);
    *(_QWORD *)&__dst[8] = v215;
    *(_QWORD *)&__dst[16] = v218 | 0x8000000000000000;
    *(_QWORD *)__dst = v216;
  }
  else
  {
    __dst[23] = v214;
    v216 = __dst;
    if (!v214)
      goto LABEL_275;
  }
  memmove(v216, v213, v215);
LABEL_275:
  v216[v215] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_2397373B0(a1, (const void *)__p[0].i64[0], a2 + 32);
  v222 = (std::__shared_weak_count *)__p[0].i64[1];
  if (!__p[0].i64[1])
    goto LABEL_279;
  v223 = (unint64_t *)(__p[0].i64[1] + 8);
  do
    v224 = __ldaxr(v223);
  while (__stlxr(v224 - 1, v223));
  if (v224)
  {
LABEL_279:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_281;
    goto LABEL_280;
  }
  ((void (*)(std::__shared_weak_count *))v222->__on_zero_shared)(v222);
  std::__shared_weak_count::__release_weak(v222);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_280:
    operator delete(*(void **)__dst);
LABEL_281:
  __p[0] = (int8x16_t)xmmword_239F11252;
  __p[1].i32[0] = 6974561;
  sub_23958E55C((uint64_t)__p, (int32x4_t)xmmword_239F11252, v219, v220, v221);
  v226 = v225;
  v227 = strlen(v225);
  if (v227 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v228 = v227;
  if (v227 >= 0x17)
  {
    v230 = (v227 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v227 | 7) != 0x17)
      v230 = v227 | 7;
    v231 = v230 + 1;
    v229 = operator new(v230 + 1);
    *(_QWORD *)&__dst[8] = v228;
    *(_QWORD *)&__dst[16] = v231 | 0x8000000000000000;
    *(_QWORD *)__dst = v229;
  }
  else
  {
    __dst[23] = v227;
    v229 = __dst;
    if (!v227)
      goto LABEL_289;
  }
  memmove(v229, v226, v228);
LABEL_289:
  v229[v228] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_2397373B0(a1, (const void *)v275, a2 + 40);
  v235 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_293;
  v236 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v237 = __ldaxr(v236);
  while (__stlxr(v237 - 1, v236));
  if (v237)
  {
LABEL_293:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_295;
    goto LABEL_294;
  }
  ((void (*)(std::__shared_weak_count *))v235->__on_zero_shared)(v235);
  std::__shared_weak_count::__release_weak(v235);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_294:
    operator delete(*(void **)__dst);
LABEL_295:
  __p[0] = (int8x16_t)xmmword_239F11266;
  *(uint64_t *)((char *)&__p[0].i64[1] + 5) = 0x1D1B16190A1D14;
  sub_2396EFB50((uint64_t)__p, (int32x4_t)xmmword_239F11266, v232, v233, v234);
  v239 = v238;
  v240 = strlen(v238);
  if (v240 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v241 = v240;
  if (v240 >= 0x17)
  {
    v243 = (v240 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v240 | 7) != 0x17)
      v243 = v240 | 7;
    v244 = v243 + 1;
    v242 = operator new(v243 + 1);
    *(_QWORD *)&__dst[8] = v241;
    *(_QWORD *)&__dst[16] = v244 | 0x8000000000000000;
    *(_QWORD *)__dst = v242;
  }
  else
  {
    __dst[23] = v240;
    v242 = __dst;
    if (!v240)
      goto LABEL_303;
  }
  memmove(v242, v239, v241);
LABEL_303:
  v242[v241] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  sub_2397373B0(a1, (const void *)v275, a2 + 48);
  v245 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_307;
  v246 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v247 = __ldaxr(v246);
  while (__stlxr(v247 - 1, v246));
  if (v247)
  {
LABEL_307:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_309;
    goto LABEL_308;
  }
  ((void (*)(std::__shared_weak_count *))v245->__on_zero_shared)(v245);
  std::__shared_weak_count::__release_weak(v245);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_308:
    operator delete(*(void **)__dst);
LABEL_309:
  strcpy(v272, "1SPnB^]GTCn]XS");
  sub_23958E5E0((uint64_t)v272);
  v249 = v248;
  v250 = strlen(v248);
  if (v250 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v251 = v250;
  if (v250 >= 0x17)
  {
    v253 = (v250 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v250 | 7) != 0x17)
      v253 = v250 | 7;
    v254 = v253 + 1;
    v252 = operator new(v253 + 1);
    *(_QWORD *)&__dst[8] = v251;
    *(_QWORD *)&__dst[16] = v254 | 0x8000000000000000;
    *(_QWORD *)__dst = v252;
  }
  else
  {
    __dst[23] = v250;
    v252 = __dst;
    if (!v250)
      goto LABEL_317;
  }
  memmove(v252, v249, v251);
LABEL_317:
  v252[v251] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v275);
  v255 = (const void *)v275;
  v257 = *(const __CFDictionary **)a1;
  v256 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v256)
    goto LABEL_322;
  p_shared_owners = (unint64_t *)&v256->__shared_owners_;
  do
    v259 = __ldxr(p_shared_owners);
  while (__stxr(v259 + 1, p_shared_owners));
  do
    v260 = __ldaxr(p_shared_owners);
  while (__stlxr(v260 - 1, p_shared_owners));
  if (!v260)
  {
    ((void (*)(std::__shared_weak_count *))v256->__on_zero_shared)(v256);
    std::__shared_weak_count::__release_weak(v256);
    if (!v257)
      goto LABEL_381;
  }
  else
  {
LABEL_322:
    if (!v257)
      goto LABEL_381;
  }
  if (sub_23962C8DC(*(const __CFDictionary **)a1, v255))
    goto LABEL_381;
  v271 = *(_DWORD *)(a2 + 164);
  sub_239629634(__p, &v271);
  v261 = __p[0];
  if (__p[0].i64[1])
  {
    v262 = (unint64_t *)(__p[0].i64[1] + 8);
    do
      v263 = __ldxr(v262);
    while (__stxr(v263 + 1, v262));
    do
      v264 = __ldaxr(v262);
    while (__stlxr(v264 - 1, v262));
    if (!v264)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v261.i64[1] + 16))(v261.i64[1]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v261.i64[1]);
      if (!v261.i64[0])
        goto LABEL_331;
      goto LABEL_330;
    }
  }
  if (v261.i64[0])
LABEL_330:
    j__CFDictionaryAddValue(*(CFMutableDictionaryRef *)a1, v255, (const void *)__p[0].i64[0]);
LABEL_331:
  v265 = (std::__shared_weak_count *)__p[0].i64[1];
  if (__p[0].i64[1])
  {
    v266 = (unint64_t *)(__p[0].i64[1] + 8);
    do
      v267 = __ldaxr(v266);
    while (__stlxr(v267 - 1, v266));
    if (!v267)
    {
      ((void (*)(std::__shared_weak_count *))v265->__on_zero_shared)(v265);
      std::__shared_weak_count::__release_weak(v265);
    }
  }
LABEL_381:
  v268 = (std::__shared_weak_count *)*((_QWORD *)&v275 + 1);
  if (!*((_QWORD *)&v275 + 1))
    goto LABEL_385;
  v269 = (unint64_t *)(*((_QWORD *)&v275 + 1) + 8);
  do
    v270 = __ldaxr(v269);
  while (__stlxr(v270 - 1, v269));
  if (v270)
  {
LABEL_385:
    if ((__dst[23] & 0x80000000) == 0)
      return;
    goto LABEL_386;
  }
  ((void (*)(std::__shared_weak_count *))v268->__on_zero_shared)(v268);
  std::__shared_weak_count::__release_weak(v268);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_386:
    operator delete(*(void **)__dst);
}

void sub_239BBEFF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,char a27)
{
  uint64_t v27;

  sub_239416DA0((uint64_t)&a20);
  sub_239416DA0((uint64_t)&a27);
  if (a18 < 0)
    operator delete(__p);
  sub_239416DA0(v27);
  _Unwind_Resume(a1);
}

void sub_239BBF10C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF114()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF11C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF124()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF12C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF134()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF13C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF144()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF14C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF154()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF15C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF164()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF16C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF174()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF17C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF184()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF18C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF194()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF19C()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF1A4()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF1AC()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF1B4()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF1BC()
{
  JUMPOUT(0x239BBF0FCLL);
}

void sub_239BBF1C4(_OWORD *a1, _BYTE *a2)
{
  const char *v4;
  size_t v5;
  size_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  int16x8_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  const char *v15;
  const char *v16;
  size_t v17;
  size_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  int16x8_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  const char *v27;
  const char *v28;
  size_t v29;
  size_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  int16x8_t v35;
  double v36;
  int16x8_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unsigned __int8 *v41;
  size_t v42;
  size_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  int16x8_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  const char *v53;
  const char *v54;
  size_t v55;
  size_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  int8x16_t v60;
  double v61;
  int32x4_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  const char *v66;
  const char *v67;
  size_t v68;
  size_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  int8x16_t v73;
  double v74;
  int32x4_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  const char *v79;
  const char *v80;
  size_t v81;
  size_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  const char *v89;
  const char *v90;
  size_t v91;
  size_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  const char *v99;
  size_t v100;
  size_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  const char *v106;
  size_t v107;
  size_t v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  int8x16_t v112;
  double v113;
  int32x4_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  const char *v118;
  const char *v119;
  size_t v120;
  size_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  int8x16_t v125;
  double v126;
  int32x4_t v127;
  std::__shared_weak_count *v128;
  uint64_t *p_info;
  unint64_t v130;
  const char *v131;
  const char *v132;
  size_t v133;
  size_t v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  int8x16_t v138;
  double v139;
  int32x4_t v140;
  std::__shared_weak_count *v141;
  uint64_t *v142;
  unint64_t v143;
  const char *v144;
  const char *v145;
  size_t v146;
  size_t v147;
  _BYTE *v148;
  uint64_t v149;
  uint64_t v150;
  int8x16_t v151;
  double v152;
  int32x4_t v153;
  std::__shared_weak_count *v154;
  uint64_t *v155;
  unint64_t v156;
  const char *v157;
  const char *v158;
  size_t v159;
  size_t v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  int8x16_t v164;
  double v165;
  int32x4_t v166;
  std::__shared_weak_count *v167;
  uint64_t *v168;
  unint64_t v169;
  const char *v170;
  const char *v171;
  size_t v172;
  size_t v173;
  _BYTE *v174;
  uint64_t v175;
  uint64_t v176;
  int8x16_t v177;
  double v178;
  int32x4_t v179;
  std::__shared_weak_count *v180;
  uint64_t *v181;
  unint64_t v182;
  const char *v183;
  const char *v184;
  size_t v185;
  size_t v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  std::__shared_weak_count *v190;
  uint64_t *v191;
  unint64_t v192;
  const char *v193;
  size_t v194;
  size_t v195;
  _BYTE *v196;
  uint64_t v197;
  uint64_t v198;
  int8x16_t v199;
  double v200;
  int32x4_t v201;
  std::__shared_weak_count *v202;
  unint64_t *v203;
  unint64_t v204;
  const char *v205;
  const char *v206;
  size_t v207;
  size_t v208;
  _BYTE *v209;
  uint64_t v210;
  uint64_t v211;
  std::__shared_weak_count *v212;
  uint64_t *v213;
  unint64_t v214;
  std::__shared_weak_count *v215;
  unint64_t *v216;
  unint64_t v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  const char *v221;
  size_t v222;
  size_t v223;
  void *v224;
  uint64_t v225;
  uint64_t v226;
  const char *v227;
  const char *v228;
  size_t v229;
  size_t v230;
  _BYTE *v231;
  uint64_t v232;
  uint64_t v233;
  int8x16_t v234;
  double v235;
  int32x4_t v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  const char *v240;
  const char *v241;
  size_t v242;
  size_t v243;
  _BYTE *v244;
  uint64_t v245;
  uint64_t v246;
  int8x16_t v247;
  double v248;
  int32x4_t v249;
  std::__shared_weak_count *v250;
  uint64_t *v251;
  unint64_t v252;
  const char *v253;
  const char *v254;
  size_t v255;
  size_t v256;
  _BYTE *v257;
  uint64_t v258;
  uint64_t v259;
  int8x16_t v260;
  double v261;
  int32x4_t v262;
  std::__shared_weak_count *v263;
  uint64_t *v264;
  unint64_t v265;
  const char *v266;
  const char *v267;
  size_t v268;
  size_t v269;
  _BYTE *v270;
  uint64_t v271;
  uint64_t v272;
  std::__shared_weak_count *v273;
  uint64_t *v274;
  unint64_t v275;
  const char *v276;
  size_t v277;
  size_t v278;
  _BYTE *v279;
  uint64_t v280;
  uint64_t v281;
  int8x16_t v282;
  double v283;
  int32x4_t v284;
  std::__shared_weak_count *v285;
  unint64_t *v286;
  unint64_t v287;
  const char *v288;
  const char *v289;
  size_t v290;
  size_t v291;
  _BYTE *v292;
  uint64_t v293;
  uint64_t v294;
  double v295;
  int32x4_t v296;
  std::__shared_weak_count *v297;
  uint64_t *v298;
  unint64_t v299;
  const char *v300;
  const char *v301;
  size_t v302;
  size_t v303;
  _BYTE *v304;
  uint64_t v305;
  uint64_t v306;
  std::__shared_weak_count *v307;
  uint64_t *v308;
  unint64_t v309;
  int8x16_t v310;
  double v311;
  int32x4_t v312;
  std::__shared_weak_count *v313;
  unint64_t *v314;
  unint64_t v315;
  std::__shared_weak_count *v316;
  unint64_t *v317;
  unint64_t v318;
  const char *v319;
  const char *v320;
  size_t v321;
  size_t v322;
  _BYTE *v323;
  uint64_t v324;
  uint64_t v325;
  int8x16_t v326;
  double v327;
  int32x4_t v328;
  std::__shared_weak_count *v329;
  unint64_t *v330;
  unint64_t v331;
  const char *v332;
  const char *v333;
  size_t v334;
  size_t v335;
  _BYTE *v336;
  uint64_t v337;
  uint64_t v338;
  double v339;
  int16x8_t v340;
  std::__shared_weak_count *v341;
  unint64_t *v342;
  unint64_t v343;
  const char *v344;
  const char *v345;
  size_t v346;
  size_t v347;
  _BYTE *v348;
  uint64_t v349;
  uint64_t v350;
  double v351;
  double v352;
  int16x8_t v353;
  std::__shared_weak_count *v354;
  unint64_t *v355;
  unint64_t v356;
  const char *v357;
  const char *v358;
  size_t v359;
  size_t v360;
  _BYTE *v361;
  uint64_t v362;
  uint64_t v363;
  std::__shared_weak_count *v364;
  unint64_t *v365;
  unint64_t v366;
  const char *v367;
  const char *v368;
  size_t v369;
  size_t v370;
  _BYTE *v371;
  uint64_t v372;
  uint64_t v373;
  std::__shared_weak_count *v374;
  unint64_t *v375;
  unint64_t v376;
  std::__shared_weak_count *v377;
  unint64_t *v378;
  unint64_t v379;
  __int128 v380;
  _BYTE __dst[40];
  char v382[16];
  void *v383;
  std::__shared_weak_count *v384;
  unint64_t v385;
  _BYTE __p[24];
  CFStringRef v387[3];

  v387[2] = *(CFStringRef *)MEMORY[0x24BDAC8D0];
  sub_23962C714(a1);
  v383 = (void *)0x61C002B19011A74;
  BYTE4(v384) = 0;
  LODWORD(v384) = 118494481;
  v4 = sub_239510ECC((uint64_t)&v383);
  v5 = strlen(v4);
  if (v5 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *(_QWORD *)&__dst[8] = v6;
    *(_QWORD *)&__dst[16] = v9 | 0x8000000000000000;
    *(_QWORD *)__dst = v7;
  }
  else
  {
    __dst[23] = v5;
    v7 = __dst;
    if (!v5)
      goto LABEL_9;
  }
  memmove(v7, v4, v6);
LABEL_9:
  v7[v6] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_239BB4A9C((uint64_t)a1, *(const void **)__p, (uint64_t)a2);
  v12 = *(std::__shared_weak_count **)&__p[8];
  if (!*(_QWORD *)&__p[8])
    goto LABEL_13;
  v13 = (unint64_t *)(*(_QWORD *)&__p[8] + 8);
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (v14)
  {
LABEL_13:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_14:
    operator delete(*(void **)__dst);
LABEL_15:
  strcpy(__dst, "6[WNiBD_FZSBiDYBWB_YXiR_PPSDiWXQZS");
  sub_2396F0060(__dst, *(int16x8_t *)"6[WNiBD_FZSBiDYBWB_YXiR_PPSDiWXQZS", *(double *)"WB_YXiR_PPSDiWXQZS", v10, v11);
  v16 = v15;
  v17 = strlen(v15);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v18 = v17;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    v19 = operator new(v20 + 1);
    *(_QWORD *)&__p[8] = v18;
    *(_QWORD *)&__p[16] = v21 | 0x8000000000000000;
    *(_QWORD *)__p = v19;
  }
  else
  {
    __p[23] = v17;
    v19 = __p;
    if (!v17)
      goto LABEL_23;
  }
  memmove(v19, v16, v18);
LABEL_23:
  v19[v18] = 0;
  sub_239629EF4((uint64_t)__p, (CFStringRef *)&v383);
  sub_2397373B0((uint64_t)a1, v383, (uint64_t)(a2 + 8));
  v24 = v384;
  if (!v384)
    goto LABEL_27;
  p_shared_owners = (unint64_t *)&v384->__shared_owners_;
  do
    v26 = __ldaxr(p_shared_owners);
  while (__stlxr(v26 - 1, p_shared_owners));
  if (v26)
  {
LABEL_27:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
  std::__shared_weak_count::__release_weak(v24);
  if ((__p[23] & 0x80000000) != 0)
LABEL_28:
    operator delete(*(void **)__p);
LABEL_29:
  *(_OWORD *)__dst = xmmword_239F114A0;
  *(_OWORD *)&__dst[16] = *(_OWORD *)dbl_239F114B0;
  strcpy(&__dst[31], "-.&");
  sub_2396F0060(__dst, (int16x8_t)xmmword_239F114A0, dbl_239F114B0[0], v22, v23);
  v28 = v27;
  v29 = strlen(v27);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    *(_QWORD *)&__p[8] = v30;
    *(_QWORD *)&__p[16] = v33 | 0x8000000000000000;
    *(_QWORD *)__p = v31;
  }
  else
  {
    __p[23] = v29;
    v31 = __p;
    if (!v29)
      goto LABEL_37;
  }
  memmove(v31, v28, v30);
LABEL_37:
  v31[v30] = 0;
  sub_239629EF4((uint64_t)__p, (CFStringRef *)&v383);
  sub_2397373B0((uint64_t)a1, v383, (uint64_t)(a2 + 16));
  v38 = v384;
  if (!v384)
    goto LABEL_41;
  v39 = (unint64_t *)&v384->__shared_owners_;
  do
    v40 = __ldaxr(v39);
  while (__stlxr(v40 - 1, v39));
  if (v40)
  {
LABEL_41:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_43;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  if ((__p[23] & 0x80000000) != 0)
LABEL_42:
    operator delete(*(void **)__p);
LABEL_43:
  strcpy(__dst, "U'094!<#0\n!'4;&94!<:;\n4;290\n!='0&=:91");
  v41 = sub_239ABB30C(__dst, *(int8x16_t *)"U'094!<#0\n!'4;&94!<:;\n4;290\n!='0&=:91",
          *(int8x16_t *)"4!<:;\n4;290\n!='0&=:91",
          v34,
          v35,
          v36,
          v37);
  v42 = strlen((const char *)v41);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    *(_QWORD *)&__p[8] = v43;
    *(_QWORD *)&__p[16] = v46 | 0x8000000000000000;
    *(_QWORD *)__p = v44;
  }
  else
  {
    __p[23] = v42;
    v44 = __p;
    if (!v42)
      goto LABEL_51;
  }
  memmove(v44, v41, v43);
LABEL_51:
  v44[v43] = 0;
  sub_239629EF4((uint64_t)__p, (CFStringRef *)&v383);
  sub_2397373B0((uint64_t)a1, v383, (uint64_t)(a2 + 24));
  v50 = v384;
  if (!v384)
    goto LABEL_55;
  v51 = (unint64_t *)&v384->__shared_owners_;
  do
    v52 = __ldaxr(v51);
  while (__stlxr(v52 - 1, v51));
  if (v52)
  {
LABEL_55:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_57;
    goto LABEL_56;
  }
  ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
  std::__shared_weak_count::__release_weak(v50);
  if ((__p[23] & 0x80000000) != 0)
LABEL_56:
    operator delete(*(void **)__p);
LABEL_57:
  *(_OWORD *)__dst = xmmword_239F114E9;
  *(_OWORD *)&__dst[16] = *(_OWORD *)dbl_239F114F9;
  *(_WORD *)&__dst[32] = 19;
  sub_2396F0120(__dst, (int16x8_t)xmmword_239F114E9, dbl_239F114F9[0], v47, v48, v49);
  v54 = v53;
  v55 = strlen(v53);
  if (v55 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v56 = v55;
  if (v55 >= 0x17)
  {
    v58 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v55 | 7) != 0x17)
      v58 = v55 | 7;
    v59 = v58 + 1;
    v57 = operator new(v58 + 1);
    *(_QWORD *)&__p[8] = v56;
    *(_QWORD *)&__p[16] = v59 | 0x8000000000000000;
    *(_QWORD *)__p = v57;
  }
  else
  {
    __p[23] = v55;
    v57 = __p;
    if (!v55)
      goto LABEL_65;
  }
  memmove(v57, v54, v56);
LABEL_65:
  v57[v56] = 0;
  sub_239629EF4((uint64_t)__p, (CFStringRef *)&v383);
  sub_2397373B0((uint64_t)a1, v383, (uint64_t)(a2 + 32));
  v63 = v384;
  if (!v384)
    goto LABEL_69;
  v64 = (unint64_t *)&v384->__shared_owners_;
  do
    v65 = __ldaxr(v64);
  while (__stlxr(v65 - 1, v64));
  if (v65)
  {
LABEL_69:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_70;
  }
  ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
  std::__shared_weak_count::__release_weak(v63);
  if ((__p[23] & 0x80000000) != 0)
LABEL_70:
    operator delete(*(void **)__p);
LABEL_71:
  strcpy(__p, "\x1B~uzyw~DoltDmr~lDYZ");
  sub_23958E55C((uint64_t)__p, *(int32x4_t *)"\x1B~uzyw~DoltDmr~lDYZ", v60, v61, v62);
  v67 = v66;
  v68 = strlen(v66);
  if (v68 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v69 = v68;
  if (v68 >= 0x17)
  {
    v71 = (v68 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v68 | 7) != 0x17)
      v71 = v68 | 7;
    v72 = v71 + 1;
    v70 = operator new(v71 + 1);
    *(_QWORD *)&__dst[8] = v69;
    *(_QWORD *)&__dst[16] = v72 | 0x8000000000000000;
    *(_QWORD *)__dst = v70;
  }
  else
  {
    __dst[23] = v68;
    v70 = __dst;
    if (!v68)
      goto LABEL_79;
  }
  memmove(v70, v67, v69);
LABEL_79:
  v70[v69] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v383);
  sub_2396B4EAC((uint64_t)a1, v383, a2 + 40);
  v76 = v384;
  if (!v384)
    goto LABEL_83;
  v77 = (unint64_t *)&v384->__shared_owners_;
  do
    v78 = __ldaxr(v77);
  while (__stlxr(v78 - 1, v77));
  if (v78)
  {
LABEL_83:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_85;
    goto LABEL_84;
  }
  ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
  std::__shared_weak_count::__release_weak(v76);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_84:
    operator delete(*(void **)__dst);
LABEL_85:
  *(_OWORD *)__p = xmmword_239F1151F;
  *(_QWORD *)&__p[15] = 0x80A0C1F081B0CLL;
  sub_2396EFBE0((uint64_t)__p, (int32x4_t)xmmword_239F1151F, v73, v74, v75);
  v80 = v79;
  v81 = strlen(v79);
  if (v81 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v82 = v81;
  if (v81 >= 0x17)
  {
    v84 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v81 | 7) != 0x17)
      v84 = v81 | 7;
    v85 = v84 + 1;
    v83 = operator new(v84 + 1);
    *(_QWORD *)&__dst[8] = v82;
    *(_QWORD *)&__dst[16] = v85 | 0x8000000000000000;
    *(_QWORD *)__dst = v83;
  }
  else
  {
    __dst[23] = v81;
    v83 = __dst;
    if (!v81)
      goto LABEL_93;
  }
  memmove(v83, v80, v82);
LABEL_93:
  v83[v82] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v383);
  sub_2396B4EAC((uint64_t)a1, v383, a2 + 41);
  v86 = v384;
  if (!v384)
    goto LABEL_97;
  v87 = (unint64_t *)&v384->__shared_owners_;
  do
    v88 = __ldaxr(v87);
  while (__stlxr(v88 - 1, v87));
  if (v88)
  {
LABEL_97:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_99;
    goto LABEL_98;
  }
  ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
  std::__shared_weak_count::__release_weak(v86);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_98:
    operator delete(*(void **)__dst);
LABEL_99:
  *(_OWORD *)__p = xmmword_239F11536;
  __p[16] = 0;
  sub_2396EFA24((uint64_t)__p);
  v90 = v89;
  v91 = strlen(v89);
  if (v91 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v92 = v91;
  if (v91 >= 0x17)
  {
    v94 = (v91 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v91 | 7) != 0x17)
      v94 = v91 | 7;
    v95 = v94 + 1;
    v93 = operator new(v94 + 1);
    *(_QWORD *)&__dst[8] = v92;
    *(_QWORD *)&__dst[16] = v95 | 0x8000000000000000;
    *(_QWORD *)__dst = v93;
  }
  else
  {
    __dst[23] = v91;
    v93 = __dst;
    if (!v91)
      goto LABEL_107;
  }
  memmove(v93, v90, v92);
LABEL_107:
  v93[v92] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v383);
  sub_2396B4EAC((uint64_t)a1, v383, a2 + 42);
  v96 = v384;
  if (!v384)
    goto LABEL_111;
  v97 = (unint64_t *)&v384->__shared_owners_;
  do
    v98 = __ldaxr(v97);
  while (__stlxr(v98 - 1, v97));
  if (v98)
  {
LABEL_111:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_113;
    goto LABEL_112;
  }
  ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
  std::__shared_weak_count::__release_weak(v96);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_112:
    operator delete(*(void **)__dst);
LABEL_113:
  strcpy(v382, "D'+*\"-#\x1B)%");
  v99 = (const char *)sub_23958E518((uint64_t)v382);
  v100 = strlen(v99);
  if (v100 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v101 = v100;
  if (v100 >= 0x17)
  {
    v103 = (v100 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v100 | 7) != 0x17)
      v103 = v100 | 7;
    v104 = v103 + 1;
    v102 = operator new(v103 + 1);
    v384 = (std::__shared_weak_count *)v101;
    v385 = v104 | 0x8000000000000000;
    v383 = v102;
    goto LABEL_120;
  }
  HIBYTE(v385) = v100;
  v102 = &v383;
  if (v100)
LABEL_120:
    memmove(v102, v99, v101);
  *((_BYTE *)v102 + v101) = 0;
  sub_23962C714(&v380);
  strcpy((char *)v387, "(EIPwA\\MZI\\AGF");
  sub_23958E5E0((uint64_t)v387);
  v106 = v105;
  v107 = strlen(v105);
  if (v107 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v108 = v107;
  if (v107 >= 0x17)
  {
    v110 = (v107 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v107 | 7) != 0x17)
      v110 = v107 | 7;
    v111 = v110 + 1;
    v109 = operator new(v110 + 1);
    *(_QWORD *)&__dst[8] = v108;
    *(_QWORD *)&__dst[16] = v111 | 0x8000000000000000;
    *(_QWORD *)__dst = v109;
  }
  else
  {
    __dst[23] = v107;
    v109 = __dst;
    if (!v107)
      goto LABEL_129;
  }
  memmove(v109, v106, v108);
LABEL_129:
  v109[v108] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_239BB4338((uint64_t)&v380, *(const void **)__p, (uint64_t)(a2 + 48));
  v115 = *(std::__shared_weak_count **)&__p[8];
  if (!*(_QWORD *)&__p[8])
    goto LABEL_133;
  v116 = (unint64_t *)(*(_QWORD *)&__p[8] + 8);
  do
    v117 = __ldaxr(v116);
  while (__stlxr(v117 - 1, v116));
  if (v117)
  {
LABEL_133:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_135;
    goto LABEL_134;
  }
  ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
  std::__shared_weak_count::__release_weak(v115);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_134:
    operator delete(*(void **)__dst);
LABEL_135:
  *(_OWORD *)__dst = xmmword_239F11547;
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F11547 + 9), v112, v113, v114);
  v119 = v118;
  v120 = strlen(v118);
  if (v120 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v121 = v120;
  if (v120 >= 0x17)
  {
    v123 = (v120 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v120 | 7) != 0x17)
      v123 = v120 | 7;
    v124 = v123 + 1;
    v122 = operator new(v123 + 1);
    *(_QWORD *)&__p[8] = v121;
    *(_QWORD *)&__p[16] = v124 | 0x8000000000000000;
    *(_QWORD *)__p = v122;
  }
  else
  {
    __p[23] = v120;
    v122 = __p;
    if (!v120)
      goto LABEL_143;
  }
  memmove(v122, v119, v121);
LABEL_143:
  v122[v121] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2397373B0((uint64_t)&v380, v387[0], (uint64_t)(a2 + 64));
  v128 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_147;
  p_info = &v387[1]->info;
  do
    v130 = __ldaxr((unint64_t *)p_info);
  while (__stlxr(v130 - 1, (unint64_t *)p_info));
  if (v130)
  {
LABEL_147:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_149;
    goto LABEL_148;
  }
  ((void (*)(std::__shared_weak_count *))v128->__on_zero_shared)(v128);
  std::__shared_weak_count::__release_weak(v128);
  if ((__p[23] & 0x80000000) != 0)
LABEL_148:
    operator delete(*(void **)__p);
LABEL_149:
  strcpy(__dst, "0DQoXERUBo\\_CCoDXBUCX_\\T");
  sub_2396EFC88((uint64_t)__dst, *(int32x4_t *)"o\\_CCoDXBUCX_\\T", v125, v126, v127);
  v132 = v131;
  v133 = strlen(v131);
  if (v133 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v134 = v133;
  if (v133 >= 0x17)
  {
    v136 = (v133 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v133 | 7) != 0x17)
      v136 = v133 | 7;
    v137 = v136 + 1;
    v135 = operator new(v136 + 1);
    *(_QWORD *)&__p[8] = v134;
    *(_QWORD *)&__p[16] = v137 | 0x8000000000000000;
    *(_QWORD *)__p = v135;
  }
  else
  {
    __p[23] = v133;
    v135 = __p;
    if (!v133)
      goto LABEL_157;
  }
  memmove(v135, v132, v134);
LABEL_157:
  v135[v134] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2397373B0((uint64_t)&v380, v387[0], (uint64_t)(a2 + 72));
  v141 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_161;
  v142 = &v387[1]->info;
  do
    v143 = __ldaxr((unint64_t *)v142);
  while (__stlxr(v143 - 1, (unint64_t *)v142));
  if (v143)
  {
LABEL_161:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_163;
    goto LABEL_162;
  }
  ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
  std::__shared_weak_count::__release_weak(v141);
  if ((__p[23] & 0x80000000) != 0)
LABEL_162:
    operator delete(*(void **)__p);
LABEL_163:
  *(_OWORD *)__dst = xmmword_239F11579;
  strcpy(&__dst[13], "JyzffJa}gpf}zyq");
  sub_2396EFD48((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F11579 + 13), v138, v139, v140);
  v145 = v144;
  v146 = strlen(v144);
  if (v146 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v147 = v146;
  if (v146 >= 0x17)
  {
    v149 = (v146 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v146 | 7) != 0x17)
      v149 = v146 | 7;
    v150 = v149 + 1;
    v148 = operator new(v149 + 1);
    *(_QWORD *)&__p[8] = v147;
    *(_QWORD *)&__p[16] = v150 | 0x8000000000000000;
    *(_QWORD *)__p = v148;
  }
  else
  {
    __p[23] = v146;
    v148 = __p;
    if (!v146)
      goto LABEL_171;
  }
  memmove(v148, v145, v147);
LABEL_171:
  v148[v147] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2397373B0((uint64_t)&v380, v387[0], (uint64_t)(a2 + 80));
  v154 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_175;
  v155 = &v387[1]->info;
  do
    v156 = __ldaxr((unint64_t *)v155);
  while (__stlxr(v156 - 1, (unint64_t *)v155));
  if (v156)
  {
LABEL_175:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_177;
    goto LABEL_176;
  }
  ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
  std::__shared_weak_count::__release_weak(v154);
  if ((__p[23] & 0x80000000) != 0)
LABEL_176:
    operator delete(*(void **)__p);
LABEL_177:
  strcpy(__dst, "=O\\b^\\H^UDbQRNNbIUOXNURQY");
  sub_239A93C04(__dst, *(int32x4_t *)"bQRNNbIUOXNURQY", v151, v152, v153);
  v158 = v157;
  v159 = strlen(v157);
  if (v159 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v160 = v159;
  if (v159 >= 0x17)
  {
    v162 = (v159 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v159 | 7) != 0x17)
      v162 = v159 | 7;
    v163 = v162 + 1;
    v161 = operator new(v162 + 1);
    *(_QWORD *)&__p[8] = v160;
    *(_QWORD *)&__p[16] = v163 | 0x8000000000000000;
    *(_QWORD *)__p = v161;
  }
  else
  {
    __p[23] = v159;
    v161 = __p;
    if (!v159)
      goto LABEL_185;
  }
  memmove(v161, v158, v160);
LABEL_185:
  v161[v160] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2397373B0((uint64_t)&v380, v387[0], (uint64_t)(a2 + 88));
  v167 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_189;
  v168 = &v387[1]->info;
  do
    v169 = __ldaxr((unint64_t *)v168);
  while (__stlxr(v169 - 1, (unint64_t *)v168));
  if (v169)
  {
LABEL_189:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_191;
    goto LABEL_190;
  }
  ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
  std::__shared_weak_count::__release_weak(v167);
  if ((__p[23] & 0x80000000) != 0)
LABEL_190:
    operator delete(*(void **)__p);
LABEL_191:
  *(_OWORD *)__dst = xmmword_239F115B0;
  *(_OWORD *)&__dst[10] = *(__int128 *)((char *)&xmmword_239F115B0 + 10);
  sub_239A93C04(__dst, *(int32x4_t *)((char *)&xmmword_239F115B0 + 10), v164, v165, v166);
  v171 = v170;
  v172 = strlen(v170);
  if (v172 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v173 = v172;
  if (v172 >= 0x17)
  {
    v175 = (v172 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v172 | 7) != 0x17)
      v175 = v172 | 7;
    v176 = v175 + 1;
    v174 = operator new(v175 + 1);
    *(_QWORD *)&__p[8] = v173;
    *(_QWORD *)&__p[16] = v176 | 0x8000000000000000;
    *(_QWORD *)__p = v174;
  }
  else
  {
    __p[23] = v172;
    v174 = __p;
    if (!v172)
      goto LABEL_199;
  }
  memmove(v174, v171, v173);
LABEL_199:
  v174[v173] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2397373B0((uint64_t)&v380, v387[0], (uint64_t)(a2 + 96));
  v180 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_203;
  v181 = &v387[1]->info;
  do
    v182 = __ldaxr((unint64_t *)v181);
  while (__stlxr(v182 - 1, (unint64_t *)v181));
  if (v182)
  {
LABEL_203:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_205;
    goto LABEL_204;
  }
  ((void (*)(std::__shared_weak_count *))v180->__on_zero_shared)(v180);
  std::__shared_weak_count::__release_weak(v180);
  if ((__p[23] & 0x80000000) != 0)
LABEL_204:
    operator delete(*(void **)__p);
LABEL_205:
  *(_OWORD *)__dst = xmmword_239F115CA;
  *(_OWORD *)&__dst[14] = *(__int128 *)((char *)&xmmword_239F115CA + 14);
  sub_2396F0EE8((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F115CA + 14), v177, v178, v179);
  v184 = v183;
  v185 = strlen(v183);
  if (v185 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v186 = v185;
  if (v185 >= 0x17)
  {
    v188 = (v185 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v185 | 7) != 0x17)
      v188 = v185 | 7;
    v189 = v188 + 1;
    v187 = operator new(v188 + 1);
    *(_QWORD *)&__p[8] = v186;
    *(_QWORD *)&__p[16] = v189 | 0x8000000000000000;
    *(_QWORD *)__p = v187;
  }
  else
  {
    __p[23] = v185;
    v187 = __p;
    if (!v185)
      goto LABEL_213;
  }
  memmove(v187, v184, v186);
LABEL_213:
  v187[v186] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2397373B0((uint64_t)&v380, v387[0], (uint64_t)(a2 + 104));
  v190 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_217;
  v191 = &v387[1]->info;
  do
    v192 = __ldaxr((unint64_t *)v191);
  while (__stlxr(v192 - 1, (unint64_t *)v191));
  if (v192)
  {
LABEL_217:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_219;
    goto LABEL_218;
  }
  ((void (*)(std::__shared_weak_count *))v190->__on_zero_shared)(v190);
  std::__shared_weak_count::__release_weak(v190);
  if ((__p[23] & 0x80000000) != 0)
LABEL_218:
    operator delete(*(void **)__p);
LABEL_219:
  v387[0] = (CFStringRef)0x74627E7363746711;
  LOBYTE(v387[1]) = 0;
  v193 = sub_239513718((char *)v387);
  v194 = strlen(v193);
  if (v194 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v195 = v194;
  if (v194 >= 0x17)
  {
    v197 = (v194 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v194 | 7) != 0x17)
      v197 = v194 | 7;
    v198 = v197 + 1;
    v196 = operator new(v197 + 1);
    *(_QWORD *)&__dst[8] = v195;
    *(_QWORD *)&__dst[16] = v198 | 0x8000000000000000;
    *(_QWORD *)__dst = v196;
  }
  else
  {
    __dst[23] = v194;
    v196 = __dst;
    if (!v194)
      goto LABEL_227;
  }
  memmove(v196, v193, v195);
LABEL_227:
  v196[v195] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_2396B4EAC((uint64_t)&v380, *(const void **)__p, a2 + 112);
  v202 = *(std::__shared_weak_count **)&__p[8];
  if (!*(_QWORD *)&__p[8])
    goto LABEL_231;
  v203 = (unint64_t *)(*(_QWORD *)&__p[8] + 8);
  do
    v204 = __ldaxr(v203);
  while (__stlxr(v204 - 1, v203));
  if (v204)
  {
LABEL_231:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_233;
    goto LABEL_232;
  }
  ((void (*)(std::__shared_weak_count *))v202->__on_zero_shared)(v202);
  std::__shared_weak_count::__release_weak(v202);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_232:
    operator delete(*(void **)__dst);
LABEL_233:
  strcpy(__dst, "W46;4\";6#2\b>9>#>6;\b4893>#>892%");
  sub_2396EFF58((uint64_t)__dst, *(int32x4_t *)">6;\b4893>#>892%", v199, v200, v201);
  v206 = v205;
  v207 = strlen(v205);
  if (v207 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v208 = v207;
  if (v207 >= 0x17)
  {
    v210 = (v207 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v207 | 7) != 0x17)
      v210 = v207 | 7;
    v211 = v210 + 1;
    v209 = operator new(v210 + 1);
    *(_QWORD *)&__p[8] = v208;
    *(_QWORD *)&__p[16] = v211 | 0x8000000000000000;
    *(_QWORD *)__p = v209;
  }
  else
  {
    __p[23] = v207;
    v209 = __p;
    if (!v207)
      goto LABEL_241;
  }
  memmove(v209, v206, v208);
LABEL_241:
  v209[v208] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2396B4EAC((uint64_t)&v380, v387[0], a2 + 113);
  v212 = (std::__shared_weak_count *)v387[1];
  if (v387[1])
  {
    v213 = &v387[1]->info;
    do
      v214 = __ldaxr((unint64_t *)v213);
    while (__stlxr(v214 - 1, (unint64_t *)v213));
    if (!v214)
    {
      ((void (*)(std::__shared_weak_count *))v212->__on_zero_shared)(v212);
      std::__shared_weak_count::__release_weak(v212);
      if ((__p[23] & 0x80000000) == 0)
        goto LABEL_247;
      goto LABEL_246;
    }
  }
  if ((__p[23] & 0x80000000) != 0)
LABEL_246:
    operator delete(*(void **)__p);
LABEL_247:
  sub_239629EF4((uint64_t)&v383, (CFStringRef *)__dst);
  sub_239BB7018((uint64_t)a1, *(const void **)__dst, (uint64_t)&v380);
  v215 = *(std::__shared_weak_count **)&__dst[8];
  if (!*(_QWORD *)&__dst[8])
    goto LABEL_251;
  v216 = (unint64_t *)(*(_QWORD *)&__dst[8] + 8);
  do
    v217 = __ldaxr(v216);
  while (__stlxr(v217 - 1, v216));
  if (!v217)
  {
    ((void (*)(std::__shared_weak_count *))v215->__on_zero_shared)(v215);
    std::__shared_weak_count::__release_weak(v215);
    v218 = (std::__shared_weak_count *)*((_QWORD *)&v380 + 1);
    if (!*((_QWORD *)&v380 + 1))
      goto LABEL_255;
  }
  else
  {
LABEL_251:
    v218 = (std::__shared_weak_count *)*((_QWORD *)&v380 + 1);
    if (!*((_QWORD *)&v380 + 1))
      goto LABEL_255;
  }
  v219 = (unint64_t *)&v218->__shared_owners_;
  do
    v220 = __ldaxr(v219);
  while (__stlxr(v220 - 1, v219));
  if (v220)
  {
LABEL_255:
    if ((SHIBYTE(v385) & 0x80000000) == 0)
      goto LABEL_257;
    goto LABEL_256;
  }
  ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
  std::__shared_weak_count::__release_weak(v218);
  if (SHIBYTE(v385) < 0)
LABEL_256:
    operator delete(v383);
LABEL_257:
  strcpy(v382, "/L@AIFHp_H@");
  v221 = sub_23958E4C8((uint64_t)v382);
  v222 = strlen(v221);
  if (v222 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v223 = v222;
  if (v222 >= 0x17)
  {
    v225 = (v222 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v222 | 7) != 0x17)
      v225 = v222 | 7;
    v226 = v225 + 1;
    v224 = operator new(v225 + 1);
    v384 = (std::__shared_weak_count *)v223;
    v385 = v226 | 0x8000000000000000;
    v383 = v224;
    goto LABEL_264;
  }
  HIBYTE(v385) = v222;
  v224 = &v383;
  if (v222)
LABEL_264:
    memmove(v224, v221, v223);
  *((_BYTE *)v224 + v223) = 0;
  sub_23962C714(&v380);
  v387[0] = (CFStringRef)0x69786553746D610CLL;
  strcpy((char *)&v387[1], "~mxecb");
  sub_23958E5E0((uint64_t)v387);
  v228 = v227;
  v229 = strlen(v227);
  if (v229 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v230 = v229;
  if (v229 >= 0x17)
  {
    v232 = (v229 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v229 | 7) != 0x17)
      v232 = v229 | 7;
    v233 = v232 + 1;
    v231 = operator new(v232 + 1);
    *(_QWORD *)&__dst[8] = v230;
    *(_QWORD *)&__dst[16] = v233 | 0x8000000000000000;
    *(_QWORD *)__dst = v231;
  }
  else
  {
    __dst[23] = v229;
    v231 = __dst;
    if (!v229)
      goto LABEL_273;
  }
  memmove(v231, v228, v230);
LABEL_273:
  v231[v230] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_239BB4338((uint64_t)&v380, *(const void **)__p, (uint64_t)(a2 + 120));
  v237 = *(std::__shared_weak_count **)&__p[8];
  if (!*(_QWORD *)&__p[8])
    goto LABEL_277;
  v238 = (unint64_t *)(*(_QWORD *)&__p[8] + 8);
  do
    v239 = __ldaxr(v238);
  while (__stlxr(v239 - 1, v238));
  if (v239)
  {
LABEL_277:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_279;
    goto LABEL_278;
  }
  ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
  std::__shared_weak_count::__release_weak(v237);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_278:
    operator delete(*(void **)__dst);
LABEL_279:
  strcpy(__dst, "D! #!\x1B,1&!6\x1B(+77\x1B0,6!7,+( ");
  sub_2396F1974((uint64_t)__dst, *(int32x4_t *)"\x1B(+77\x1B0,6!7,+( ", v234, v235, v236);
  v241 = v240;
  v242 = strlen(v240);
  if (v242 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v243 = v242;
  if (v242 >= 0x17)
  {
    v245 = (v242 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v242 | 7) != 0x17)
      v245 = v242 | 7;
    v246 = v245 + 1;
    v244 = operator new(v245 + 1);
    *(_QWORD *)&__p[8] = v243;
    *(_QWORD *)&__p[16] = v246 | 0x8000000000000000;
    *(_QWORD *)__p = v244;
  }
  else
  {
    __p[23] = v242;
    v244 = __p;
    if (!v242)
      goto LABEL_287;
  }
  memmove(v244, v241, v243);
LABEL_287:
  v244[v243] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2397373B0((uint64_t)&v380, v387[0], (uint64_t)(a2 + 128));
  v250 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_291;
  v251 = &v387[1]->info;
  do
    v252 = __ldaxr((unint64_t *)v251);
  while (__stlxr(v252 - 1, (unint64_t *)v251));
  if (v252)
  {
LABEL_291:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_293;
    goto LABEL_292;
  }
  ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
  std::__shared_weak_count::__release_weak(v250);
  if ((__p[23] & 0x80000000) != 0)
LABEL_292:
    operator delete(*(void **)__p);
LABEL_293:
  strcpy(__dst, "1CTAC^[nYDSTCn]^BBnEYCTBY^]U");
  sub_2396EFD48((uint64_t)__dst, *(int32x4_t *)"n]^BBnEYCTBY^]U", v247, v248, v249);
  v254 = v253;
  v255 = strlen(v253);
  if (v255 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v256 = v255;
  if (v255 >= 0x17)
  {
    v258 = (v255 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v255 | 7) != 0x17)
      v258 = v255 | 7;
    v259 = v258 + 1;
    v257 = operator new(v258 + 1);
    *(_QWORD *)&__p[8] = v256;
    *(_QWORD *)&__p[16] = v259 | 0x8000000000000000;
    *(_QWORD *)__p = v257;
  }
  else
  {
    __p[23] = v255;
    v257 = __p;
    if (!v255)
      goto LABEL_301;
  }
  memmove(v257, v254, v256);
LABEL_301:
  v257[v256] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2397373B0((uint64_t)&v380, v387[0], (uint64_t)(a2 + 136));
  v263 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_305;
  v264 = &v387[1]->info;
  do
    v265 = __ldaxr((unint64_t *)v264);
  while (__stlxr(v265 - 1, (unint64_t *)v264));
  if (v265)
  {
LABEL_305:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_307;
    goto LABEL_306;
  }
  ((void (*)(std::__shared_weak_count *))v263->__on_zero_shared)(v263);
  std::__shared_weak_count::__release_weak(v263);
  if ((__p[23] & 0x80000000) != 0)
LABEL_306:
    operator delete(*(void **)__p);
LABEL_307:
  *(_OWORD *)__dst = xmmword_239F1163F;
  *(_OWORD *)&__dst[13] = *(__int128 *)((char *)&xmmword_239F1163F + 13);
  sub_2396EFD48((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F1163F + 13), v260, v261, v262);
  v267 = v266;
  v268 = strlen(v266);
  if (v268 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v269 = v268;
  if (v268 >= 0x17)
  {
    v271 = (v268 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v268 | 7) != 0x17)
      v271 = v268 | 7;
    v272 = v271 + 1;
    v270 = operator new(v271 + 1);
    *(_QWORD *)&__p[8] = v269;
    *(_QWORD *)&__p[16] = v272 | 0x8000000000000000;
    *(_QWORD *)__p = v270;
  }
  else
  {
    __p[23] = v268;
    v270 = __p;
    if (!v268)
      goto LABEL_315;
  }
  memmove(v270, v267, v269);
LABEL_315:
  v270[v269] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2397373B0((uint64_t)&v380, v387[0], (uint64_t)(a2 + 144));
  v273 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_319;
  v274 = &v387[1]->info;
  do
    v275 = __ldaxr((unint64_t *)v274);
  while (__stlxr(v275 - 1, (unint64_t *)v274));
  if (v275)
  {
LABEL_319:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_321;
    goto LABEL_320;
  }
  ((void (*)(std::__shared_weak_count *))v273->__on_zero_shared)(v273);
  std::__shared_weak_count::__release_weak(v273);
  if ((__p[23] & 0x80000000) != 0)
LABEL_320:
    operator delete(*(void **)__p);
LABEL_321:
  strcpy((char *)v387, "4BQFV[GQ");
  v276 = sub_239513718((char *)v387);
  v277 = strlen(v276);
  if (v277 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v278 = v277;
  if (v277 >= 0x17)
  {
    v280 = (v277 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v277 | 7) != 0x17)
      v280 = v277 | 7;
    v281 = v280 + 1;
    v279 = operator new(v280 + 1);
    *(_QWORD *)&__dst[8] = v278;
    *(_QWORD *)&__dst[16] = v281 | 0x8000000000000000;
    *(_QWORD *)__dst = v279;
  }
  else
  {
    __dst[23] = v277;
    v279 = __dst;
    if (!v277)
      goto LABEL_329;
  }
  memmove(v279, v276, v278);
LABEL_329:
  v279[v278] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_2396B4EAC((uint64_t)&v380, *(const void **)__p, a2 + 152);
  v285 = *(std::__shared_weak_count **)&__p[8];
  if (!*(_QWORD *)&__p[8])
    goto LABEL_333;
  v286 = (unint64_t *)(*(_QWORD *)&__p[8] + 8);
  do
    v287 = __ldaxr(v286);
  while (__stlxr(v287 - 1, v286));
  if (v287)
  {
LABEL_333:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_335;
    goto LABEL_334;
  }
  ((void (*)(std::__shared_weak_count *))v285->__on_zero_shared)(v285);
  std::__shared_weak_count::__release_weak(v285);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_334:
    operator delete(*(void **)__dst);
LABEL_335:
  *(_OWORD *)__dst = xmmword_239F1165C;
  *(_OWORD *)&__dst[15] = *(__int128 *)((char *)&xmmword_239F1165C + 15);
  sub_2396EFF58((uint64_t)__dst, *(int32x4_t *)((char *)&xmmword_239F1165C + 15), v282, v283, v284);
  v289 = v288;
  v290 = strlen(v288);
  if (v290 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v291 = v290;
  if (v290 >= 0x17)
  {
    v293 = (v290 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v290 | 7) != 0x17)
      v293 = v290 | 7;
    v294 = v293 + 1;
    v292 = operator new(v293 + 1);
    *(_QWORD *)&__p[8] = v291;
    *(_QWORD *)&__p[16] = v294 | 0x8000000000000000;
    *(_QWORD *)__p = v292;
  }
  else
  {
    __p[23] = v290;
    v292 = __p;
    if (!v290)
      goto LABEL_343;
  }
  memmove(v292, v289, v291);
LABEL_343:
  v292[v291] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2396B4EAC((uint64_t)&v380, v387[0], a2 + 153);
  v297 = (std::__shared_weak_count *)v387[1];
  if (!v387[1])
    goto LABEL_347;
  v298 = &v387[1]->info;
  do
    v299 = __ldaxr((unint64_t *)v298);
  while (__stlxr(v299 - 1, (unint64_t *)v298));
  if (v299)
  {
LABEL_347:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_349;
    goto LABEL_348;
  }
  ((void (*)(std::__shared_weak_count *))v297->__on_zero_shared)(v297);
  std::__shared_weak_count::__release_weak(v297);
  if ((__p[23] & 0x80000000) != 0)
LABEL_348:
    operator delete(*(void **)__p);
LABEL_349:
  *(_OWORD *)__dst = xmmword_239F1167B;
  *(int8x16_t *)&__dst[16] = xmmword_239F1168B;
  __dst[32] = 0;
  sub_2396EFE38((uint64_t)__dst, (int32x4_t)xmmword_239F1167B, xmmword_239F1168B, v295, v296);
  v301 = v300;
  v302 = strlen(v300);
  if (v302 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v303 = v302;
  if (v302 >= 0x17)
  {
    v305 = (v302 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v302 | 7) != 0x17)
      v305 = v302 | 7;
    v306 = v305 + 1;
    v304 = operator new(v305 + 1);
    *(_QWORD *)&__p[8] = v303;
    *(_QWORD *)&__p[16] = v306 | 0x8000000000000000;
    *(_QWORD *)__p = v304;
  }
  else
  {
    __p[23] = v302;
    v304 = __p;
    if (!v302)
      goto LABEL_357;
  }
  memmove(v304, v301, v303);
LABEL_357:
  v304[v303] = 0;
  sub_239629EF4((uint64_t)__p, v387);
  sub_2396B4EAC((uint64_t)&v380, v387[0], a2 + 154);
  v307 = (std::__shared_weak_count *)v387[1];
  if (v387[1])
  {
    v308 = &v387[1]->info;
    do
      v309 = __ldaxr((unint64_t *)v308);
    while (__stlxr(v309 - 1, (unint64_t *)v308));
    if (!v309)
    {
      ((void (*)(std::__shared_weak_count *))v307->__on_zero_shared)(v307);
      std::__shared_weak_count::__release_weak(v307);
      if ((__p[23] & 0x80000000) == 0)
        goto LABEL_363;
      goto LABEL_362;
    }
  }
  if ((__p[23] & 0x80000000) != 0)
LABEL_362:
    operator delete(*(void **)__p);
LABEL_363:
  sub_239629EF4((uint64_t)&v383, (CFStringRef *)__dst);
  sub_239BB7018((uint64_t)a1, *(const void **)__dst, (uint64_t)&v380);
  v313 = *(std::__shared_weak_count **)&__dst[8];
  if (!*(_QWORD *)&__dst[8])
    goto LABEL_367;
  v314 = (unint64_t *)(*(_QWORD *)&__dst[8] + 8);
  do
    v315 = __ldaxr(v314);
  while (__stlxr(v315 - 1, v314));
  if (!v315)
  {
    ((void (*)(std::__shared_weak_count *))v313->__on_zero_shared)(v313);
    std::__shared_weak_count::__release_weak(v313);
    v316 = (std::__shared_weak_count *)*((_QWORD *)&v380 + 1);
    if (!*((_QWORD *)&v380 + 1))
      goto LABEL_371;
  }
  else
  {
LABEL_367:
    v316 = (std::__shared_weak_count *)*((_QWORD *)&v380 + 1);
    if (!*((_QWORD *)&v380 + 1))
      goto LABEL_371;
  }
  v317 = (unint64_t *)&v316->__shared_owners_;
  do
    v318 = __ldaxr(v317);
  while (__stlxr(v318 - 1, v317));
  if (v318)
  {
LABEL_371:
    if ((SHIBYTE(v385) & 0x80000000) == 0)
      goto LABEL_373;
    goto LABEL_372;
  }
  ((void (*)(std::__shared_weak_count *))v316->__on_zero_shared)(v316);
  std::__shared_weak_count::__release_weak(v316);
  if (SHIBYTE(v385) < 0)
LABEL_372:
    operator delete(v383);
LABEL_373:
  *(_OWORD *)__p = xmmword_239F1169C;
  strcpy(&__p[16], "KSBUNI@");
  sub_2396F1A4C((uint64_t)__p, (int32x4_t)xmmword_239F1169C, v310, v311, v312);
  v320 = v319;
  v321 = strlen(v319);
  if (v321 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v322 = v321;
  if (v321 >= 0x17)
  {
    v324 = (v321 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v321 | 7) != 0x17)
      v324 = v321 | 7;
    v325 = v324 + 1;
    v323 = operator new(v324 + 1);
    *(_QWORD *)&__dst[8] = v322;
    *(_QWORD *)&__dst[16] = v325 | 0x8000000000000000;
    *(_QWORD *)__dst = v323;
  }
  else
  {
    __dst[23] = v321;
    v323 = __dst;
    if (!v321)
      goto LABEL_381;
  }
  memmove(v323, v320, v322);
LABEL_381:
  v323[v322] = 0;
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)&v383);
  sub_2396B4EAC((uint64_t)a1, v383, a2 + 168);
  v329 = v384;
  if (!v384)
    goto LABEL_385;
  v330 = (unint64_t *)&v384->__shared_owners_;
  do
    v331 = __ldaxr(v330);
  while (__stlxr(v331 - 1, v330));
  if (v331)
  {
LABEL_385:
    if ((__dst[23] & 0x80000000) == 0)
      goto LABEL_387;
    goto LABEL_386;
  }
  ((void (*)(std::__shared_weak_count *))v329->__on_zero_shared)(v329);
  std::__shared_weak_count::__release_weak(v329);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_386:
    operator delete(*(void **)__dst);
LABEL_387:
  strcpy(__dst, ">KM[aJL_]UMaWPaSQJWQPa_H[L_Y[");
  sub_2396F0EE8((uint64_t)__dst, *(int32x4_t *)"aSQJWQPa_H[L_Y[", v326, v327, v328);
  v333 = v332;
  v334 = strlen(v332);
  if (v334 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v335 = v334;
  if (v334 >= 0x17)
  {
    v337 = (v334 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v334 | 7) != 0x17)
      v337 = v334 | 7;
    v338 = v337 + 1;
    v336 = operator new(v337 + 1);
    *(_QWORD *)&__p[8] = v335;
    *(_QWORD *)&__p[16] = v338 | 0x8000000000000000;
    *(_QWORD *)__p = v336;
  }
  else
  {
    __p[23] = v334;
    v336 = __p;
    if (!v334)
      goto LABEL_395;
  }
  memmove(v336, v333, v335);
LABEL_395:
  v336[v335] = 0;
  sub_239629EF4((uint64_t)__p, (CFStringRef *)&v383);
  sub_2396B4EAC((uint64_t)a1, v383, a2 + 169);
  v341 = v384;
  if (!v384)
    goto LABEL_399;
  v342 = (unint64_t *)&v384->__shared_owners_;
  do
    v343 = __ldaxr(v342);
  while (__stlxr(v343 - 1, v342));
  if (v343)
  {
LABEL_399:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_401;
    goto LABEL_400;
  }
  ((void (*)(std::__shared_weak_count *))v341->__on_zero_shared)(v341);
  std::__shared_weak_count::__release_weak(v341);
  if ((__p[23] & 0x80000000) != 0)
LABEL_400:
    operator delete(*(void **)__p);
LABEL_401:
  *(_OWORD *)__dst = xmmword_239F116D2;
  *(_OWORD *)&__dst[16] = *(_OWORD *)dbl_239F116E2;
  strcpy(&__dst[29], ";,?(;=?");
  sub_2396F11DC(__dst, (int16x8_t)xmmword_239F116D2, dbl_239F116E2[0], v339, v340);
  v345 = v344;
  v346 = strlen(v344);
  if (v346 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v347 = v346;
  if (v346 >= 0x17)
  {
    v349 = (v346 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v346 | 7) != 0x17)
      v349 = v346 | 7;
    v350 = v349 + 1;
    v348 = operator new(v349 + 1);
    *(_QWORD *)&__p[8] = v347;
    *(_QWORD *)&__p[16] = v350 | 0x8000000000000000;
    *(_QWORD *)__p = v348;
  }
  else
  {
    __p[23] = v346;
    v348 = __p;
    if (!v346)
      goto LABEL_409;
  }
  memmove(v348, v345, v347);
LABEL_409:
  v348[v347] = 0;
  sub_239629EF4((uint64_t)__p, (CFStringRef *)&v383);
  sub_239BB4A9C((uint64_t)a1, v383, (uint64_t)(a2 + 176));
  v354 = v384;
  if (!v384)
    goto LABEL_413;
  v355 = (unint64_t *)&v384->__shared_owners_;
  do
    v356 = __ldaxr(v355);
  while (__stlxr(v356 - 1, v355));
  if (v356)
  {
LABEL_413:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_415;
    goto LABEL_414;
  }
  ((void (*)(std::__shared_weak_count *))v354->__on_zero_shared)(v354);
  std::__shared_weak_count::__release_weak(v354);
  if ((__p[23] & 0x80000000) != 0)
LABEL_414:
    operator delete(*(void **)__p);
LABEL_415:
  *(_OWORD *)__dst = xmmword_239F116F7;
  *(int16x8_t *)&__dst[16] = xmmword_239F11707;
  sub_2396F02A0(__dst, 5.73324148e247, xmmword_239F11707, v351, v352, v353);
  v358 = v357;
  v359 = strlen(v357);
  if (v359 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v360 = v359;
  if (v359 >= 0x17)
  {
    v362 = (v359 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v359 | 7) != 0x17)
      v362 = v359 | 7;
    v363 = v362 + 1;
    v361 = operator new(v362 + 1);
    *(_QWORD *)&__p[8] = v360;
    *(_QWORD *)&__p[16] = v363 | 0x8000000000000000;
    *(_QWORD *)__p = v361;
  }
  else
  {
    __p[23] = v359;
    v361 = __p;
    if (!v359)
      goto LABEL_423;
  }
  memmove(v361, v358, v360);
LABEL_423:
  v361[v360] = 0;
  sub_239629EF4((uint64_t)__p, (CFStringRef *)&v383);
  sub_239BB4A9C((uint64_t)a1, v383, (uint64_t)(a2 + 184));
  v364 = v384;
  if (!v384)
    goto LABEL_427;
  v365 = (unint64_t *)&v384->__shared_owners_;
  do
    v366 = __ldaxr(v365);
  while (__stlxr(v366 - 1, v365));
  if (v366)
  {
LABEL_427:
    if ((__p[23] & 0x80000000) == 0)
      goto LABEL_429;
    goto LABEL_428;
  }
  ((void (*)(std::__shared_weak_count *))v364->__on_zero_shared)(v364);
  std::__shared_weak_count::__release_weak(v364);
  if ((__p[23] & 0x80000000) != 0)
LABEL_428:
    operator delete(*(void **)__p);
LABEL_429:
  v387[0] = (CFStringRef)0xE3638373F3E3251;
  strcpy((char *)&v387[1], "3$?5=4");
  sub_23958E5E0((uint64_t)v387);
  v368 = v367;
  v369 = strlen(v367);
  if (v369 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v370 = v369;
  if (v369 >= 0x17)
  {
    v372 = (v369 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v369 | 7) != 0x17)
      v372 = v369 | 7;
    v373 = v372 + 1;
    v371 = operator new(v372 + 1);
    *(_QWORD *)&__dst[8] = v370;
    *(_QWORD *)&__dst[16] = v373 | 0x8000000000000000;
    *(_QWORD *)__dst = v371;
  }
  else
  {
    __dst[23] = v369;
    v371 = __dst;
    if (!v369)
      goto LABEL_437;
  }
  memmove(v371, v368, v370);
LABEL_437:
  v371[v370] = 0;
  sub_239BBD628((uint64_t)&v383, (uint64_t)(a2 + 192));
  sub_239629EF4((uint64_t)__dst, (CFStringRef *)__p);
  sub_239BB7018((uint64_t)a1, *(const void **)__p, (uint64_t)&v383);
  v374 = *(std::__shared_weak_count **)&__p[8];
  if (!*(_QWORD *)&__p[8])
    goto LABEL_441;
  v375 = (unint64_t *)(*(_QWORD *)&__p[8] + 8);
  do
    v376 = __ldaxr(v375);
  while (__stlxr(v376 - 1, v375));
  if (!v376)
  {
    ((void (*)(std::__shared_weak_count *))v374->__on_zero_shared)(v374);
    std::__shared_weak_count::__release_weak(v374);
    v377 = v384;
    if (!v384)
      goto LABEL_445;
  }
  else
  {
LABEL_441:
    v377 = v384;
    if (!v384)
      goto LABEL_445;
  }
  v378 = (unint64_t *)&v377->__shared_owners_;
  do
    v379 = __ldaxr(v378);
  while (__stlxr(v379 - 1, v378));
  if (v379)
  {
LABEL_445:
    if ((__dst[23] & 0x80000000) == 0)
      return;
    goto LABEL_446;
  }
  ((void (*)(std::__shared_weak_count *))v377->__on_zero_shared)(v377);
  std::__shared_weak_count::__release_weak(v377);
  if ((__dst[23] & 0x80000000) != 0)
LABEL_446:
    operator delete(*(void **)__dst);
}

