void sub_239A90740(_Unwind_Exception *a1)
{
  if (SLOBYTE(STACK[0x28F]) < 0)
    operator delete((void *)STACK[0x278]);
  __cxa_guard_abort(&qword_25693D990);
  _Unwind_Resume(a1);
}

void sub_239A90774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a73;
  char a74;

  if (a74 && a73 < 0)
    operator delete(__p);
  sub_239A90B68((uint64_t)&a43);
  if (a40)
    operator delete(a40);
  if (a38 < 0)
    operator delete(a33);
  sub_23955C978(&STACK[0x278]);
  if (a31 < 0)
    operator delete(a26);
  if (a19 < 0)
    operator delete(a14);
  _Unwind_Resume(a1);
}

uint64_t sub_239A90B68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x24BEDB800];
  v3 = *MEMORY[0x24BEDB800];
  *(_QWORD *)a1 = *MEMORY[0x24BEDB800];
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BEDB848] + 16;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x23B83E250](a1 + 112);
  return a1;
}

unsigned __int8 *sub_239A90BEC(unsigned __int8 *a1, int8x16_t a2, int32x4_t a3, double a4, int32x4_t a5)
{
  int8x8_t v5;
  int8x16_t v6;
  int16x8_t v7;

  a2.i64[0] = *(_QWORD *)(a1 + 1);
  a3.i8[4] = a1[11];
  a2.i8[8] = *a1;
  v5 = (int8x8_t)vdup_n_s16(*a1);
  a5.i8[0] = *a1;
  a5.i8[1] = a1[9];
  a5.i8[2] = a1[10];
  a5.i8[3] = a3.i8[4];
  a3.i32[0] = *((_DWORD *)a1 + 3);
  a2.i8[15] = a1[16];
  v6 = veorq_s8(vqtbl1q_s8((int8x16_t)vzip1q_s32(a5, a3), (int8x16_t)xmmword_239EC65C0), vqtbl1q_s8(a2, (int8x16_t)xmmword_239EC65D0));
  *(int8x16_t *)(a1 + 1) = v6;
  v6.i32[0] = *(_DWORD *)(a1 + 17);
  v7 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v6.i8);
  *(int8x8_t *)v7.i8 = veor_s8(v5, *(int8x8_t *)v7.i8);
  *(_DWORD *)(a1 + 17) = vmovn_s16(v7).u32[0];
  a1[21] = 0;
  return a1 + 1;
}

_BYTE *sub_239A90C78(char *a1)
{
  char v1;
  _BYTE *result;
  char v3;

  v1 = *a1;
  a1[2] ^= *a1;
  a1[3] ^= v1;
  a1[4] ^= v1;
  a1[5] = 0;
  v3 = a1[1];
  result = a1 + 1;
  *result = v1 ^ v3;
  return result;
}

void sub_239A90CB8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A90CDC(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239A90D5C((uint64_t)&v5, (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A90D28()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

uint64_t sub_239A90D5C(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v5;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    if (*(_QWORD *)(*(_QWORD *)a1 + 24))
    {
      v7 = 0;
      v8 = *(uint64_t **)(*(_QWORD *)a1 + 16);
      do
      {
        if (v8)
        {
          v11 = 0;
          v9 = v8;
          do
          {
            v9 = (uint64_t *)*v9;
            v10 = v11 + 1;
          }
          while (v11++ <= 0x7FFFFFFD && v9 != 0);
        }
        else
        {
          v9 = 0;
          v10 = 0;
        }
        sub_239A90EB8(v8, v9, v10, a2, 1);
        v7 += 0x7FFFFFFFLL;
        v8 = v9;
      }
      while (v7 < *(_QWORD *)(*(_QWORD *)a1 + 24));
    }
  }
  else
  {
    sub_239A90EB8(*(uint64_t **)(*(_QWORD *)a1 + 16), 0, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239A90EB8(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t a4, int a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  int v27;
  unsigned __int8 v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  void *__p;
  char v33;
  _DWORD v34[40];
  void *v35;
  uint64_t v36;
  unsigned __int8 v37;
  int v38;

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v34[39] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v10 = *MEMORY[0x24BEDB7F0];
        v24 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v25 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v11 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v29);
          v12 = *((char *)a1 + 39);
          if (v12 >= 0)
            v13 = (uint64_t)(a1 + 2);
          else
            v13 = a1[2];
          if (v12 >= 0)
            v14 = *((unsigned __int8 *)a1 + 39);
          else
            v14 = a1[3];
          sub_239458500(&v30, v13, v14);
          std::stringbuf::str();
          std::ostream::put();
          v15 = v28;
          if ((v28 & 0x80u) != 0)
            v15 = v27;
          LODWORD(v35) = v15;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          sub_2396F2838(a1 + 5, (uint64_t)&v35);
          std::ostream::put();
          v16 = v37;
          if ((v37 & 0x80u) != 0)
            v16 = v36;
          v38 = v16;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if ((char)v37 < 0)
          {
            operator delete(v35);
            if ((char)v28 < 0)
LABEL_21:
              operator delete(v26);
          }
          else if ((char)v28 < 0)
          {
            goto LABEL_21;
          }
          v29[0] = v10;
          *(_QWORD *)((char *)v29 + *(_QWORD *)(v10 - 24)) = v25;
          v30 = v24;
          v31 = v11;
          if (v33 < 0)
            operator delete(__p);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v34);
          a1 = (uint64_t *)*a1;
        }
        while (a1 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v17 = *MEMORY[0x24BEDB7F0];
      v19 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v18 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v20 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v29);
        v21 = *((char *)a1 + 39);
        if (v21 >= 0)
          v22 = (uint64_t)(a1 + 2);
        else
          v22 = a1[2];
        if (v21 >= 0)
          v23 = *((unsigned __int8 *)a1 + 39);
        else
          v23 = a1[3];
        sub_239458500(&v30, v22, v23);
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        sub_2396F2838(a1 + 5, (uint64_t)&v35);
        sub_2395955F0((uint64_t)&v35, a4, 0);
        if ((char)v37 < 0)
          operator delete(v35);
        a1 = (uint64_t *)*a1;
        if (a1 != a2)
          std::ostream::put();
        if ((char)v28 < 0)
          operator delete(v26);
        v29[0] = v17;
        *(_QWORD *)((char *)v29 + *(_QWORD *)(v17 - 24)) = v19;
        v30 = v18;
        v31 = v20;
        if (v33 < 0)
          operator delete(__p);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v34);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239A9132C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  sub_239498ABC((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_239A91394(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A913B8(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239A91438((uint64_t)&v5, (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A91404()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

uint64_t sub_239A91438(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v5;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    if (*(_QWORD *)(*(_QWORD *)a1 + 24))
    {
      v7 = 0;
      v8 = *(_QWORD **)(*(_QWORD *)a1 + 16);
      do
      {
        if (v8)
        {
          v11 = 0;
          v9 = v8;
          do
          {
            v9 = (_QWORD *)*v9;
            v10 = v11 + 1;
          }
          while (v11++ <= 0x7FFFFFFD && v9 != 0);
        }
        else
        {
          v9 = 0;
          v10 = 0;
        }
        sub_239A91594(v8, v9, v10, a2, 1);
        v7 += 0x7FFFFFFFLL;
        v8 = v9;
      }
      while (v7 < *(_QWORD *)(*(_QWORD *)a1 + 24));
    }
  }
  else
  {
    sub_239A91594(*(_QWORD **)(*(_QWORD *)a1 + 16), 0, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239A91594(_QWORD *a1, _QWORD *a2, unint64_t a3, uint64_t a4, int a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int v21;
  unsigned __int8 v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  void *__p;
  char v27;
  _DWORD v28[40];
  void *v29;
  uint64_t v30;
  unsigned __int8 v31;
  int v32;

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v28[39] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v10 = *MEMORY[0x24BEDB7F0];
        v18 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v19 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v11 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v23);
          std::ostream::operator<<();
          std::stringbuf::str();
          std::ostream::put();
          v12 = v22;
          if ((v22 & 0x80u) != 0)
            v12 = v21;
          LODWORD(v29) = v12;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          sub_2396F2838(a1 + 3, (uint64_t)&v29);
          std::ostream::put();
          v13 = v31;
          if ((v31 & 0x80u) != 0)
            v13 = v30;
          v32 = v13;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if ((char)v31 < 0)
          {
            operator delete(v29);
            if ((char)v22 < 0)
LABEL_15:
              operator delete(v20);
          }
          else if ((char)v22 < 0)
          {
            goto LABEL_15;
          }
          v23[0] = v10;
          *(_QWORD *)((char *)v23 + *(_QWORD *)(v10 - 24)) = v19;
          v24 = v18;
          v25 = v11;
          if (v27 < 0)
            operator delete(__p);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v28);
          a1 = (_QWORD *)*a1;
        }
        while (a1 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v14 = *MEMORY[0x24BEDB7F0];
      v16 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v15 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v17 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v23);
        std::ostream::operator<<();
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        sub_2396F2838(a1 + 3, (uint64_t)&v29);
        sub_2395955F0((uint64_t)&v29, a4, 0);
        if ((char)v31 < 0)
          operator delete(v29);
        a1 = (_QWORD *)*a1;
        if (a1 != a2)
          std::ostream::put();
        if ((char)v22 < 0)
          operator delete(v20);
        v23[0] = v14;
        *(_QWORD *)((char *)v23 + *(_QWORD *)(v14 - 24)) = v16;
        v24 = v15;
        v25 = v17;
        if (v27 < 0)
          operator delete(__p);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v28);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239A919D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  sub_239498ABC((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_239A91A38(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A91A5C(uint64_t a1, _QWORD *a2, int a3)
{
  void *__p[2];
  char v7;

  sub_2396F2838(*(uint64_t **)(a1 + 8), (uint64_t)__p);
  sub_2395955F0((uint64_t)__p, (uint64_t)a2, a3);
  if (v7 < 0)
    operator delete(__p[0]);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A91AC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239A91AE4()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

int8x16_t *sub_239A91B18(int8x16_t *a1)
{
  int8x16_t *v1;
  int8x16_t v2;

  v1 = a1;
  v2 = vld1q_dup_s8(v1->i8);
  v1 = (int8x16_t *)((char *)v1 + 1);
  *v1 = veorq_s8(v2, *v1);
  a1[1].i8[1] = 0;
  return v1;
}

void sub_239A91B3C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A91B60(uint64_t a1, _QWORD *a2, int a3)
{
  sub_239A91BD0(*(_QWORD **)(a1 + 8), (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A91B9C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

uint64_t sub_239A91BD0(_QWORD *a1, uint64_t a2, int a3)
{
  unint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 __p;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  int v17;
  void *v18[2];
  char v19;
  int v20;
  int v21;

  if (a3)
  {
    if ((a1[1] - *a1) >> 32)
    {
      std::ostream::put();
      v5 = (uint64_t)(a1[1] - *a1) >> 3;
      if (v5 <= 0xFFFFFFF * (v5 / 0xFFFFFFF))
        v6 = v5 / 0xFFFFFFF;
      else
        v6 = v5 / 0xFFFFFFF + 1;
      v16 = 2;
      v17 = v6;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)&__p, "type");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)&__p, "vector_chunks");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      HIBYTE(v14) = 7;
      strcpy((char *)&__p, "content");
      std::ostream::put();
      LODWORD(v18[0]) = 7;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      v7 = a1[1] - *a1;
      if (v7)
      {
        v8 = 0;
        v9 = v7 >> 3;
        do
        {
          v14 = a1;
          v15 = 0;
          *(_QWORD *)&__p = v8;
          v8 += 0xFFFFFFFLL;
          if (v9 >= v8)
            v9 = v8;
          *((_QWORD *)&__p + 1) = v9;
          std::ostream::put();
          v20 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v19 = 5;
          strcpy((char *)v18, "start");
          std::ostream::put();
          v21 = 5;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v19 < 0)
            operator delete(v18[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v19 = 3;
          LODWORD(v18[0]) = 6581861;
          std::ostream::put();
          v21 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v19 < 0)
            operator delete(v18[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v19 = 7;
          strcpy((char *)v18, "content");
          std::ostream::put();
          v21 = 7;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v19 < 0)
            operator delete(v18[0]);
          std::ostream::put();
          LODWORD(v18[0]) = 8 * (DWORD2(__p) - __p);
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v9 = (uint64_t)(a1[1] - *a1) >> 3;
        }
        while (v8 < v9);
      }
    }
    else
    {
      std::ostream::put();
      LODWORD(__p) = (*((_DWORD *)a1 + 2) - *(_DWORD *)a1) & 0xFFFFFFF8;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
    }
  }
  else
  {
    v11 = *a1;
    v10 = a1[1];
    std::ostream::put();
    if (v11 != v10)
    {
      while (1)
      {
        v11 += 8;
        std::ostream::operator<<();
        if (v11 == v10)
          break;
        std::ostream::put();
      }
    }
    std::ostream::put();
  }
  return a2;
}

void sub_239A92430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a34 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239A92474(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A92498(uint64_t a1, _QWORD *a2, int a3)
{
  sub_2395D9BBC(*(_QWORD *)(a1 + 8), (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A924D4()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A9250C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A92530(uint64_t a1, _QWORD *a2, int a3)
{
  sub_2395E3808(*(_QWORD *)(a1 + 8), (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A9256C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A925A4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A925C8(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239A92638(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A92604()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

_QWORD *sub_239A92638(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  const char *v13;
  const char *v14;
  size_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int8x16_t v21;
  double v22;
  int32x4_t v23;
  const char *v24;
  const char *v25;
  size_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  const char *v32;
  const char *v33;
  size_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  const char *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int8x8_t *v48;
  size_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int16x8_t v55;
  const char *v56;
  const char *v57;
  size_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  const char *v64;
  size_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  const char *v71;
  size_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  const char *v78;
  const char *v79;
  size_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  void **v88;
  void *v89;
  void **v91;
  void *v92[2];
  unint64_t v93;
  void *v94[2];
  unint64_t v95;
  void *v96[2];
  unint64_t v97;
  void *v98[2];
  unint64_t v99;
  void *v100[2];
  unint64_t v101;
  void *v102[2];
  unint64_t v103;
  void *v104[2];
  unint64_t v105;
  void *v106[2];
  unint64_t v107;
  void *v108[2];
  unint64_t v109;
  void *__dst[2];
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *__p[2];
  void *v120;
  __int128 v121;
  uint64_t v122;
  char v123[8];
  uint64_t v124;
  int v125;
  uint64_t v126;
  int v127;
  __int16 v128;
  int8x8_t v129[2];
  uint64_t v130;
  char v131[8];
  char v132[32];
  _OWORD v133[2];
  __int128 v134;
  char v135[24];
  uint64_t v136;

  v136 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v117 = a1 + 4;
  v118 = a1;
  v115 = a1 + 12;
  v116 = a1 + 8;
  v113 = a1 + 20;
  v114 = a1 + 16;
  v112 = a1 + 24;
  strcpy(v135, "(XZGKM[[AFOwEGLM");
  sub_2396EFA24((uint64_t)v135);
  v6 = v5;
  v7 = strlen(v5);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v111 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v111) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250AF5558;
  v12[1] = &v118;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  v134 = xmmword_239F0BE50;
  sub_23950F8E4((uint64_t)&v134);
  v14 = v13;
  v15 = strlen(v13);
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v16 = (void *)v15;
  if (v15 >= 0x17)
  {
    v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v18 = v15 | 7;
    v19 = v18 + 1;
    v17 = operator new(v18 + 1);
    v108[1] = v16;
    v109 = v19 | 0x8000000000000000;
    v108[0] = v17;
    goto LABEL_16;
  }
  HIBYTE(v109) = v15;
  v17 = v108;
  if (v15)
LABEL_16:
    memmove(v17, v14, (size_t)v16);
  *((_BYTE *)v16 + (_QWORD)v17) = 0;
  v20 = (_QWORD *)operator new();
  *v20 = &off_250AF5588;
  v20[1] = &v117;
  sub_23961580C((uint64_t)__p, (uint64_t)v108, (uint64_t)v20);
  v133[0] = xmmword_239F0CF84;
  *(_QWORD *)((char *)v133 + 13) = 0x2429342B342934;
  sub_2396EFB50((uint64_t)v133, (int32x4_t)xmmword_239F0CF84, v21, v22, v23);
  v25 = v24;
  v26 = strlen(v24);
  if (v26 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v27 = (void *)v26;
  if (v26 >= 0x17)
  {
    v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v29 = v26 | 7;
    v30 = v29 + 1;
    v28 = operator new(v29 + 1);
    v106[1] = v27;
    v107 = v30 | 0x8000000000000000;
    v106[0] = v28;
    goto LABEL_24;
  }
  HIBYTE(v107) = v26;
  v28 = v106;
  if (v26)
LABEL_24:
    memmove(v28, v25, (size_t)v27);
  *((_BYTE *)v27 + (_QWORD)v28) = 0;
  v31 = (_QWORD *)operator new();
  *v31 = &off_250AF55B8;
  v31[1] = &v116;
  sub_23961580C((uint64_t)__p, (uint64_t)v106, (uint64_t)v31);
  strcpy(v132, "=N\\PMQXbROYXOTSZ");
  sub_2396EFA24((uint64_t)v132);
  v33 = v32;
  v34 = strlen(v32);
  if (v34 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v35 = (void *)v34;
  if (v34 >= 0x17)
  {
    v37 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v34 | 7) != 0x17)
      v37 = v34 | 7;
    v38 = v37 + 1;
    v36 = operator new(v37 + 1);
    v104[1] = v35;
    v105 = v38 | 0x8000000000000000;
    v104[0] = v36;
    goto LABEL_32;
  }
  HIBYTE(v105) = v34;
  v36 = v104;
  if (v34)
LABEL_32:
    memmove(v36, v33, (size_t)v35);
  *((_BYTE *)v35 + (_QWORD)v36) = 0;
  v39 = (_QWORD *)operator new();
  *v39 = &off_250AF55E8;
  v39[1] = &v115;
  sub_23961580C((uint64_t)__p, (uint64_t)v104, (uint64_t)v39);
  v130 = 0x6E426F786A726D1DLL;
  strcpy(v131, "xiitsz");
  sub_23958E5E0((uint64_t)&v130);
  v41 = v40;
  v42 = strlen(v40);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v102[1] = v43;
    v103 = v46 | 0x8000000000000000;
    v102[0] = v44;
    goto LABEL_40;
  }
  HIBYTE(v103) = v42;
  v44 = v102;
  if (v42)
LABEL_40:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250AF5618;
  v47[1] = &v114;
  sub_23961580C((uint64_t)__p, (uint64_t)v102, (uint64_t)v47);
  strcpy((char *)v129, "\"QDO}V[RG");
  v48 = sub_23950FF84(v129);
  v49 = strlen((const char *)v48);
  if (v49 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v50 = (void *)v49;
  if (v49 >= 0x17)
  {
    v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v49 | 7) != 0x17)
      v52 = v49 | 7;
    v53 = v52 + 1;
    v51 = operator new(v52 + 1);
    v100[1] = v50;
    v101 = v53 | 0x8000000000000000;
    v100[0] = v51;
    goto LABEL_48;
  }
  HIBYTE(v101) = v49;
  v51 = v100;
  if (v49)
LABEL_48:
    memmove(v51, v48, (size_t)v50);
  *((_BYTE *)v50 + (_QWORD)v51) = 0;
  v54 = (_QWORD *)operator new();
  *v54 = &off_250AF5648;
  v54[1] = &v113;
  sub_23961580C((uint64_t)__p, (uint64_t)v100, (uint64_t)v54);
  v126 = 0x6111C1700151974;
  v128 = 17;
  v127 = 67960875;
  sub_23971A32C((uint64_t)&v126, v55);
  v57 = v56;
  v58 = strlen(v56);
  if (v58 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v59 = (void *)v58;
  if (v58 >= 0x17)
  {
    v61 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v58 | 7) != 0x17)
      v61 = v58 | 7;
    v62 = v61 + 1;
    v60 = operator new(v61 + 1);
    v98[1] = v59;
    v99 = v62 | 0x8000000000000000;
    v98[0] = v60;
    goto LABEL_56;
  }
  HIBYTE(v99) = v58;
  v60 = v98;
  if (v58)
LABEL_56:
    memmove(v60, v57, (size_t)v59);
  *((_BYTE *)v59 + (_QWORD)v60) = 0;
  v63 = (_QWORD *)operator new();
  *v63 = &off_250AF5678;
  v63[1] = &v112;
  sub_23961580C((uint64_t)__p, (uint64_t)v98, (uint64_t)v63);
  v124 = 0x22393B142E383E4BLL;
  v125 = 3684644;
  v64 = sub_23958E4C8((uint64_t)&v124);
  v65 = strlen(v64);
  if (v65 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v66 = (void *)v65;
  if (v65 >= 0x17)
  {
    v68 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v65 | 7) != 0x17)
      v68 = v65 | 7;
    v69 = v68 + 1;
    v67 = operator new(v68 + 1);
    v96[1] = v66;
    v97 = v69 | 0x8000000000000000;
    v96[0] = v67;
    goto LABEL_64;
  }
  HIBYTE(v97) = v65;
  v67 = v96;
  if (v65)
LABEL_64:
    memmove(v67, v64, (size_t)v66);
  *((_BYTE *)v66 + (_QWORD)v67) = 0;
  v70 = (_QWORD *)operator new();
  *v70 = &off_250AFFEA8;
  v70[1] = a1 + 25;
  sub_23961580C((uint64_t)__p, (uint64_t)v96, (uint64_t)v70);
  v122 = 0x382A26142E383E4BLL;
  strcpy(v123, " 8");
  v71 = (const char *)sub_23958E518((uint64_t)&v122);
  v72 = strlen(v71);
  if (v72 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v73 = (void *)v72;
  if (v72 >= 0x17)
  {
    v75 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v72 | 7) != 0x17)
      v75 = v72 | 7;
    v76 = v75 + 1;
    v74 = operator new(v75 + 1);
    v94[1] = v73;
    v95 = v76 | 0x8000000000000000;
    v94[0] = v74;
    goto LABEL_72;
  }
  HIBYTE(v95) = v72;
  v74 = v94;
  if (v72)
LABEL_72:
    memmove(v74, v71, (size_t)v73);
  *((_BYTE *)v73 + (_QWORD)v74) = 0;
  v77 = (_QWORD *)operator new();
  *v77 = &off_250AFFEA8;
  v77[1] = a1 + 26;
  sub_23961580C((uint64_t)__p, (uint64_t)v94, (uint64_t)v77);
  v121 = xmmword_239F0BE60;
  sub_23950F8E4((uint64_t)&v121);
  v79 = v78;
  v80 = strlen(v78);
  if (v80 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v81 = (void *)v80;
  if (v80 >= 0x17)
  {
    v83 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17)
      v83 = v80 | 7;
    v84 = v83 + 1;
    v82 = operator new(v83 + 1);
    v92[1] = v81;
    v93 = v84 | 0x8000000000000000;
    v92[0] = v82;
    goto LABEL_80;
  }
  HIBYTE(v93) = v80;
  v82 = v92;
  if (v80)
LABEL_80:
    memmove(v82, v79, (size_t)v81);
  *((_BYTE *)v81 + (_QWORD)v82) = 0;
  v85 = (_QWORD *)operator new();
  *v85 = &off_250AFFEA8;
  v85[1] = a1 + 27;
  sub_23961580C((uint64_t)__p, (uint64_t)v92, (uint64_t)v85);
  if (SHIBYTE(v93) < 0)
  {
    operator delete(v92[0]);
    if ((SHIBYTE(v95) & 0x80000000) == 0)
    {
LABEL_83:
      if ((SHIBYTE(v97) & 0x80000000) == 0)
        goto LABEL_84;
      goto LABEL_105;
    }
  }
  else if ((SHIBYTE(v95) & 0x80000000) == 0)
  {
    goto LABEL_83;
  }
  operator delete(v94[0]);
  if ((SHIBYTE(v97) & 0x80000000) == 0)
  {
LABEL_84:
    if ((SHIBYTE(v99) & 0x80000000) == 0)
      goto LABEL_85;
    goto LABEL_106;
  }
LABEL_105:
  operator delete(v96[0]);
  if ((SHIBYTE(v99) & 0x80000000) == 0)
  {
LABEL_85:
    if ((SHIBYTE(v101) & 0x80000000) == 0)
      goto LABEL_86;
    goto LABEL_107;
  }
LABEL_106:
  operator delete(v98[0]);
  if ((SHIBYTE(v101) & 0x80000000) == 0)
  {
LABEL_86:
    if ((SHIBYTE(v103) & 0x80000000) == 0)
      goto LABEL_87;
    goto LABEL_108;
  }
LABEL_107:
  operator delete(v100[0]);
  if ((SHIBYTE(v103) & 0x80000000) == 0)
  {
LABEL_87:
    if ((SHIBYTE(v105) & 0x80000000) == 0)
      goto LABEL_88;
    goto LABEL_109;
  }
LABEL_108:
  operator delete(v102[0]);
  if ((SHIBYTE(v105) & 0x80000000) == 0)
  {
LABEL_88:
    if ((SHIBYTE(v107) & 0x80000000) == 0)
      goto LABEL_89;
    goto LABEL_110;
  }
LABEL_109:
  operator delete(v104[0]);
  if ((SHIBYTE(v107) & 0x80000000) == 0)
  {
LABEL_89:
    if ((SHIBYTE(v109) & 0x80000000) == 0)
      goto LABEL_90;
LABEL_111:
    operator delete(v108[0]);
    if ((SHIBYTE(v111) & 0x80000000) == 0)
      goto LABEL_91;
    goto LABEL_112;
  }
LABEL_110:
  operator delete(v106[0]);
  if (SHIBYTE(v109) < 0)
    goto LABEL_111;
LABEL_90:
  if ((SHIBYTE(v111) & 0x80000000) == 0)
    goto LABEL_91;
LABEL_112:
  operator delete(__dst[0]);
LABEL_91:
  sub_2395902F0((uint64_t)__p, a2);
  v86 = v120;
  if (v120)
  {
    do
    {
      v87 = v86[5];
      if (v87)
        (*(void (**)(uint64_t))(*(_QWORD *)v87 + 8))(v87);
      v86 = (_QWORD *)*v86;
    }
    while (v86);
    v88 = (void **)v120;
    if (v120)
    {
      do
      {
        v91 = (void **)*v88;
        if (*((char *)v88 + 39) < 0)
          operator delete(v88[2]);
        operator delete(v88);
        v88 = v91;
      }
      while (v91);
    }
  }
  v89 = __p[0];
  __p[0] = 0;
  if (v89)
    operator delete(v89);
  return a2;
}

void sub_239A930A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  sub_2395905C0((uint64_t)&a47);
  _Unwind_Resume(a1);
}

void sub_239A9326C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93290(uint64_t a1, _QWORD *a2, int a3)
{
  char v5;

  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
  }
  else
  {
    v5 = ***(_BYTE ***)(a1 + 8);
    sub_239458500(a2, (uint64_t)&v5, 1);
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A93314()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A9334C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93370(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A93418()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A93450(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93474(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A9351C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A93554(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93578(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A93620()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A93658(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A9367C(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A93724()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A9375C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93780(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A93828()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A93860(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93884(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A9392C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A93964(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93988(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239A939F8(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A939C4()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

_QWORD *sub_239A939F8(uint64_t a1, _QWORD *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void **v18;
  void *v19;
  void **v21;
  void *__p[2];
  unint64_t v23;
  uint64_t v24;
  void *v25[2];
  void *v26;
  unsigned __int8 v27[40];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)v25, a3);
  v24 = a1;
  *(_OWORD *)v27 = xmmword_239F0CF48;
  *(_OWORD *)&v27[10] = *(__int128 *)((char *)&xmmword_239F0CF48 + 10);
  sub_239A93C04(v27, *(int32x4_t *)((char *)&xmmword_239F0CF48 + 10), v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = operator new(v13 + 1);
    __p[1] = v11;
    v23 = v14 | 0x8000000000000000;
    __p[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v23) = v10;
  v12 = __p;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AF54C8;
  v15[1] = &v24;
  sub_23961580C((uint64_t)v25, (uint64_t)__p, (uint64_t)v15);
  if (SHIBYTE(v23) < 0)
    operator delete(__p[0]);
  sub_2395902F0((uint64_t)v25, a2);
  v16 = v26;
  if (v26)
  {
    do
    {
      v17 = v16[5];
      if (v17)
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
      v16 = (_QWORD *)*v16;
    }
    while (v16);
    v18 = (void **)v26;
    if (v26)
    {
      do
      {
        v21 = (void **)*v18;
        if (*((char *)v18 + 39) < 0)
          operator delete(v18[2]);
        operator delete(v18);
        v18 = v21;
      }
      while (v21);
    }
  }
  v19 = v25[0];
  v25[0] = 0;
  if (v19)
    operator delete(v19);
  return a2;
}

void sub_239A93BD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  sub_2395905C0((uint64_t)&a16);
  _Unwind_Resume(a1);
}

int8x16_t sub_239A93C04(unsigned __int8 *a1, int32x4_t a2, int8x16_t a3, double a4, int32x4_t a5)
{
  unsigned int v5;
  int8x16_t result;

  v5 = *a1;
  a2.i32[0] = *((_DWORD *)a1 + 3);
  *(int8x8_t *)(a1 + 17) = veor_s8(vdup_n_s8(v5), *(int8x8_t *)(a1 + 17));
  a1[25] = 0;
  a3.i64[0] = *(_QWORD *)(a1 + 1);
  a3.i8[8] = v5;
  a5.i8[0] = v5;
  a5.i8[1] = a1[9];
  a5.i8[2] = a1[10];
  a5.i8[3] = a1[11];
  a3.i8[15] = a1[16];
  result = veorq_s8(vqtbl1q_s8((int8x16_t)vzip1q_s32(a5, a2), (int8x16_t)xmmword_239EC65C0), vqtbl1q_s8(a3, (int8x16_t)xmmword_239EC65D0));
  *(int8x16_t *)(a1 + 1) = result;
  return result;
}

void sub_239A93C84(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93CA8(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A93D50()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A93D88(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93DAC(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A93E54()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A93E8C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93EB0(uint64_t a1, _QWORD *a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A93F58()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A93F90(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A93FB4(uint64_t a1, _QWORD *a2, int a3)
{
  const char *v4;
  _QWORD *v5;
  uint64_t v6;

  if (a3)
  {
    std::ostream::put();
  }
  else
  {
    if (**(_BYTE **)(a1 + 8))
    {
      v4 = "true";
      v5 = a2;
      v6 = 4;
    }
    else
    {
      v4 = "false";
      v5 = a2;
      v6 = 5;
    }
    sub_239458500(v5, (uint64_t)v4, v6);
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A94040()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

uint64_t sub_239A94074(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  std::ios_base *v9;
  std::string::size_type size;
  char v11;
  void **v12;
  uint64_t v13;
  const char *v14;
  size_t v15;
  void *v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  const char *v21;
  size_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int8x16_t v28;
  double v29;
  int32x4_t v30;
  const char *v31;
  const char *v32;
  size_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  int32x4_t v39;
  double v40;
  int32x4_t v41;
  unsigned __int8 *v42;
  size_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  int8x16_t v49;
  double v50;
  int32x4_t v51;
  const char *v52;
  const char *v53;
  size_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  void **v62;
  void *v63;
  uint64_t v64;
  void **v66;
  std::__fs::filesystem::path v67;
  const void *v68[3];
  void *v69[3];
  uint64_t v70[2];
  _QWORD v71[11];
  char v72;
  uint64_t v73;
  void *v74[2];
  unsigned __int8 v75;
  char v76;
  std::string v77;
  void *v78[2];
  unint64_t v79;
  void *v80[2];
  unint64_t v81;
  void *v82[2];
  unint64_t v83;
  uint64_t v84;
  void *v85[2];
  unint64_t v86;
  int v87;
  void *__dst[2];
  unint64_t v89;
  int v90;
  void *__p[2];
  void *v92;
  _QWORD v93[2];
  _BYTE v94[408];
  uint64_t v95[19];
  char v96[32];
  unsigned __int8 v97[32];
  _BYTE v98[23];
  uint64_t v99;

  v99 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a1 + 4))
  {
    sub_239A444D4((uint64_t)"unknown file", 462, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (!*(_BYTE *)(a1 + 952))
    return 1;
  sub_2396F295C((uint64_t *)(a1 + 928), a1 + 8, (uint64_t)&v67);
  std::__fs::filesystem::__status(&v67, 0);
  v3 = 0;
  if (LOBYTE(v93[0]) && LOBYTE(v93[0]) != 255)
  {
    kdebug_trace();
    v4 = MEMORY[0x24BEDB838];
    v5 = MEMORY[0x24BEDB838] + 64;
    v6 = (_QWORD *)MEMORY[0x24BEDB7E0];
    v7 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
    v8 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
    v95[0] = MEMORY[0x24BEDB838] + 64;
    v93[0] = v7;
    *(_QWORD *)((char *)v93 + *(_QWORD *)(v7 - 24)) = v8;
    v93[1] = 0;
    v9 = (std::ios_base *)((char *)v93 + *(_QWORD *)(v93[0] - 24));
    std::ios_base::init(v9, v94);
    v9[1].__vftable = 0;
    v9[1].__fmtflags_ = -1;
    v93[0] = v4 + 24;
    v95[0] = v5;
    MEMORY[0x23B83DC80](v94);
    std::ifstream::open();
    if ((v94[*(_QWORD *)(v93[0] - 24) + 16] & 5) != 0)
    {
      v3 = 0;
LABEL_88:
      v93[0] = *v6;
      *(_QWORD *)((char *)v93 + *(_QWORD *)(v93[0] - 24)) = v6[3];
      MEMORY[0x23B83DC8C](v94);
      std::istream::~istream();
      MEMORY[0x23B83E250](v95);
      kdebug_trace();
      goto LABEL_89;
    }
    HIBYTE(v68[2]) = 18;
    strcpy((char *)v68, "CorePhotogrammetry");
    sub_2395AC84C(v68, v69);
    sub_239A7D600(&v77, *(_QWORD **)&v94[*(_QWORD *)(v93[0] - 24) + 24]);
    size = HIBYTE(v77.__r_.__value_.__r.__words[2]);
    v11 = HIBYTE(v77.__r_.__value_.__r.__words[2]);
    if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v77.__r_.__value_.__l.__size_;
    if (!size)
    {
      v3 = 0;
LABEL_80:
      if (v11 < 0)
        operator delete(v77.__r_.__value_.__l.__data_);
      if (v69[0])
      {
        v69[1] = v69[0];
        operator delete(v69[0]);
      }
      if (SHIBYTE(v68[2]) < 0)
        operator delete((void *)v68[0]);
      if (!std::filebuf::close())
        std::ios_base::clear((std::ios_base *)((char *)v93 + *(_QWORD *)(v93[0] - 24)), *(_DWORD *)&v94[*(_QWORD *)(v93[0] - 24) + 16] | 4);
      goto LABEL_88;
    }
    sub_2395AC2E8((const void **)&v77.__r_.__value_.__l.__data_, (uint64_t)v69, (uint64_t)v74);
    v3 = v76 != 0;
    if (!v76)
    {
LABEL_79:
      v11 = HIBYTE(v77.__r_.__value_.__r.__words[2]);
      goto LABEL_80;
    }
    sub_2394988CC((uint64_t)v70);
    if ((v75 & 0x80u) == 0)
      v12 = v74;
    else
      v12 = (void **)v74[0];
    if ((v75 & 0x80u) == 0)
      v13 = v75;
    else
      v13 = (uint64_t)v74[1];
    sub_239458500(v71, (uint64_t)v12, v13);
    sub_2396157EC((uint64_t)__p, 1);
    v90 = 0;
    v87 = 200295;
    v14 = sub_239A94B5C((char *)&v87);
    v15 = strlen(v14);
    if (v15 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v16 = (void *)v15;
    if (v15 >= 0x17)
    {
      v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v15 | 7) != 0x17)
        v18 = v15 | 7;
      v19 = v18 + 1;
      v17 = (void **)operator new(v18 + 1);
      v89 = v19 | 0x8000000000000000;
      __dst[0] = v17;
      __dst[1] = v16;
    }
    else
    {
      HIBYTE(v89) = v15;
      v17 = __dst;
      if (!v15)
      {
LABEL_27:
        *((_BYTE *)v16 + (_QWORD)v17) = 0;
        v20 = (_QWORD *)operator new();
        *v20 = &off_250ADF330;
        v20[1] = a2;
        sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v20);
        v84 = 0x10151D0819187CLL;
        v21 = sub_23958E3FC((char *)&v84);
        v22 = strlen(v21);
        if (v22 > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        v23 = (void *)v22;
        if (v22 >= 0x17)
        {
          v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v22 | 7) != 0x17)
            v25 = v22 | 7;
          v26 = v25 + 1;
          v24 = operator new(v25 + 1);
          v85[1] = v23;
          v86 = v26 | 0x8000000000000000;
          v85[0] = v24;
        }
        else
        {
          HIBYTE(v86) = v22;
          v24 = v85;
          if (!v22)
          {
LABEL_35:
            *((_BYTE *)v23 + (_QWORD)v24) = 0;
            v27 = (_QWORD *)operator new();
            *v27 = &off_250ADF420;
            v27[1] = &v90;
            sub_23961580C((uint64_t)__p, (uint64_t)v85, (uint64_t)v27);
            *(_OWORD *)v98 = xmmword_239F0CFD2;
            strcpy(&v98[15], "n{pBp|m");
            sub_2396EFBE0((uint64_t)v98, (int32x4_t)xmmword_239F0CFD2, v28, v29, v30);
            v32 = v31;
            v33 = strlen(v31);
            if (v33 > 0x7FFFFFFFFFFFFFF7)
              sub_23941A5AC();
            v34 = (void *)v33;
            if (v33 >= 0x17)
            {
              v36 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v33 | 7) != 0x17)
                v36 = v33 | 7;
              v37 = v36 + 1;
              v35 = operator new(v36 + 1);
              v82[1] = v34;
              v83 = v37 | 0x8000000000000000;
              v82[0] = v35;
            }
            else
            {
              HIBYTE(v83) = v33;
              v35 = v82;
              if (!v33)
              {
LABEL_43:
                *((_BYTE *)v34 + (_QWORD)v35) = 0;
                v38 = (_QWORD *)operator new();
                *v38 = &off_250AF3060;
                v38[1] = a2 + 96;
                sub_23961580C((uint64_t)__p, (uint64_t)v82, (uint64_t)v38);
                *(_OWORD *)v97 = xmmword_239F0D04F;
                *(_QWORD *)&v97[14] = 0xA1716100D0916;
                v42 = sub_239A90BEC(v97, (int8x16_t)xmmword_239F0D04F, v39, v40, v41);
                v43 = strlen((const char *)v42);
                if (v43 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                v44 = (void *)v43;
                if (v43 >= 0x17)
                {
                  v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v43 | 7) != 0x17)
                    v46 = v43 | 7;
                  v47 = v46 + 1;
                  v45 = operator new(v46 + 1);
                  v80[1] = v44;
                  v81 = v47 | 0x8000000000000000;
                  v80[0] = v45;
                }
                else
                {
                  HIBYTE(v81) = v43;
                  v45 = v80;
                  if (!v43)
                  {
LABEL_51:
                    *((_BYTE *)v44 + (_QWORD)v45) = 0;
                    v48 = (_QWORD *)operator new();
                    *v48 = &off_250AF30C0;
                    v48[1] = a2 + 32;
                    sub_23961580C((uint64_t)__p, (uint64_t)v80, (uint64_t)v48);
                    v53 = v52;
                    v54 = strlen(v52);
                    if (v54 > 0x7FFFFFFFFFFFFFF7)
                      sub_23941A5AC();
                    v55 = (void *)v54;
                    if (v54 >= 0x17)
                    {
                      v57 = (v54 & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v54 | 7) != 0x17)
                        v57 = v54 | 7;
                      v58 = v57 + 1;
                      v56 = operator new(v57 + 1);
                      v78[1] = v55;
                      v79 = v58 | 0x8000000000000000;
                      v78[0] = v56;
                    }
                    else
                    {
                      HIBYTE(v79) = v54;
                      v56 = v78;
                      if (!v54)
                      {
LABEL_59:
                        *((_BYTE *)v55 + (_QWORD)v56) = 0;
                        v59 = (_QWORD *)operator new();
                        *v59 = &off_250AE0220;
                        v59[1] = a2 + 144;
                        sub_23961580C((uint64_t)__p, (uint64_t)v78, (uint64_t)v59);
                        if (SHIBYTE(v79) < 0)
                        {
                          operator delete(v78[0]);
                          if ((SHIBYTE(v81) & 0x80000000) == 0)
                          {
LABEL_61:
                            if ((SHIBYTE(v83) & 0x80000000) == 0)
                              goto LABEL_62;
                            goto LABEL_97;
                          }
                        }
                        else if ((SHIBYTE(v81) & 0x80000000) == 0)
                        {
                          goto LABEL_61;
                        }
                        operator delete(v80[0]);
                        if ((SHIBYTE(v83) & 0x80000000) == 0)
                        {
LABEL_62:
                          if ((SHIBYTE(v86) & 0x80000000) == 0)
                            goto LABEL_63;
                          goto LABEL_98;
                        }
LABEL_97:
                        operator delete(v82[0]);
                        if ((SHIBYTE(v86) & 0x80000000) == 0)
                        {
LABEL_63:
                          if ((SHIBYTE(v89) & 0x80000000) == 0)
                          {
LABEL_64:
                            if (sub_23959479C((uint64_t)__p, v70))
                              *(_DWORD *)(a2 + 24) = v90;
                            v60 = v92;
                            if (v92)
                            {
                              do
                              {
                                v61 = v60[5];
                                if (v61)
                                  (*(void (**)(uint64_t))(*(_QWORD *)v61 + 8))(v61);
                                v60 = (_QWORD *)*v60;
                              }
                              while (v60);
                              v62 = (void **)v92;
                              if (v92)
                              {
                                do
                                {
                                  v66 = (void **)*v62;
                                  if (*((char *)v62 + 39) < 0)
                                    operator delete(v62[2]);
                                  operator delete(v62);
                                  v62 = v66;
                                }
                                while (v66);
                              }
                            }
                            v63 = __p[0];
                            __p[0] = 0;
                            if (v63)
                              operator delete(v63);
                            v70[0] = *MEMORY[0x24BEDB7F0];
                            v64 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
                            *(uint64_t *)((char *)v70 + *(_QWORD *)(v70[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
                            v71[0] = v64;
                            v71[1] = MEMORY[0x24BEDB848] + 16;
                            if (v72 < 0)
                              operator delete((void *)v71[9]);
                            std::streambuf::~streambuf();
                            std::iostream::~basic_iostream();
                            MEMORY[0x23B83E250](&v73);
                            if (v76 && (char)v75 < 0)
                              operator delete(v74[0]);
                            goto LABEL_79;
                          }
LABEL_99:
                          operator delete(__dst[0]);
                          goto LABEL_64;
                        }
LABEL_98:
                        operator delete(v85[0]);
                        if ((SHIBYTE(v89) & 0x80000000) == 0)
                          goto LABEL_64;
                        goto LABEL_99;
                      }
                    }
                    memmove(v56, v53, (size_t)v55);
                    goto LABEL_59;
                  }
                }
                memmove(v45, v42, (size_t)v44);
                goto LABEL_51;
              }
            }
            memmove(v35, v32, (size_t)v34);
            goto LABEL_43;
          }
        }
        memmove(v24, v21, (size_t)v23);
        goto LABEL_35;
      }
    }
    memmove(v17, v14, (size_t)v16);
    goto LABEL_27;
  }
LABEL_89:
  if (SHIBYTE(v67.__pn_.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v67.__pn_.__r_.__value_.__l.__data_);
  return v3;
}

void sub_239A9496C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *__p,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  char a66;
  void *a67;
  char a72;
  void *v73;

  sub_2395905C0((uint64_t)&STACK[0x230]);
  sub_239498ABC((uint64_t)&a25);
  if (a66 && a65 < 0)
    operator delete(__p);
  if (a72 < 0)
  {
    operator delete(a67);
    v73 = a22;
    if (a22)
      goto LABEL_6;
  }
  else
  {
    v73 = a22;
    if (a22)
    {
LABEL_6:
      operator delete(v73);
      if ((a21 & 0x80000000) == 0)
        goto LABEL_11;
LABEL_10:
      operator delete(a16);
LABEL_11:
      sub_23955CB90(&STACK[0x260]);
      if (a15 < 0)
      {
        operator delete(a10);
        _Unwind_Resume(a1);
      }
      _Unwind_Resume(a1);
    }
  }
  if ((a21 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

_BYTE *sub_239A94B5C(char *a1)
{
  char v1;
  _BYTE *result;
  char v3;

  v1 = *a1;
  a1[2] ^= *a1;
  a1[3] = 0;
  v3 = a1[1];
  result = a1 + 1;
  *result = v1 ^ v3;
  return result;
}

void sub_239A94B84(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A94BA8(uint64_t a1, _QWORD *a2, char a3)
{
  int8x8_t *v3;

  v3 = *(int8x8_t **)(a1 + 8);
  if (!v3[7].i8[0])
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239A97C80(v3, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239A94C14(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v5;
  uint64_t **v6;
  uint64_t *v7;
  uint8x8_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t **v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t **v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t **v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t **v28;
  uint64_t *v29;
  uint64_t v30;
  const char *v31;
  const char *v32;
  size_t v33;
  void *v34;
  void **v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int8x16_t v40;
  double v41;
  int32x4_t v42;
  const char *v43;
  const char *v44;
  size_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  const char *v51;
  size_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  const char *v58;
  size_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  const char *v65;
  size_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  const char *v72;
  size_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  int16x8_t v79;
  const char *v80;
  const char *v81;
  size_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  void **v90;
  void *v91;
  int v92;
  _QWORD *v93;
  _QWORD *v94;
  void *v95;
  void **v97;
  uint64_t v98;
  uint64_t *v99;
  __int128 v100;
  void *v101;
  int8x8_t v102;
  void *__p;
  int v104;
  void *v105[2];
  unint64_t v106;
  void *v107[2];
  unint64_t v108;
  char v109[8];
  void *v110[2];
  unint64_t v111;
  int v112;
  void *v113[2];
  unint64_t v114;
  int v115;
  void *v116[2];
  unint64_t v117;
  void *v118[2];
  unint64_t v119;
  void *__dst[2];
  unint64_t v121;
  _QWORD v122[2];
  _QWORD *v123;
  char v124[16];
  uint64_t v125;
  __int16 v126;
  char v127;
  __int128 v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;

  v131 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 8);
  sub_239A51E14((uint64_t)&v100);
  sub_2396157EC((uint64_t)v122, a3);
  if (!*(_QWORD *)&v102 || (v6 = *(uint64_t ***)v101) == 0 || (v7 = *v6) == 0)
LABEL_21:
    sub_23941D898("unordered_map::at: key not found");
  v8 = (uint8x8_t)vcnt_s8(v102);
  v8.i16[0] = vaddlv_u8(v8);
  v9 = *(_QWORD *)&v102 - 1;
  if (v8.u32[0] < 2uLL)
  {
    while (1)
    {
      v10 = v7[1];
      if (v10)
      {
        if ((v10 & v9) != 0)
          goto LABEL_21;
      }
      else if (!*((_DWORD *)v7 + 4))
      {
        goto LABEL_10;
      }
      v7 = (uint64_t *)*v7;
      if (!v7)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v14 = v7[1];
    if (!v14)
      break;
    if (v14 < *(_QWORD *)&v102 || v14 % *(_QWORD *)&v102)
      goto LABEL_21;
LABEL_17:
    v7 = (uint64_t *)*v7;
    if (!v7)
      goto LABEL_21;
  }
  if (*((_DWORD *)v7 + 4))
    goto LABEL_17;
LABEL_10:
  v11 = (v102.i8[0] & 1) == 0;
  if (v8.u32[0] >= 2uLL)
    v11 = *(_QWORD *)&v102 > 1uLL;
  v12 = (uint64_t **)*((_QWORD *)v101 + v11);
  if (!v12 || (v13 = *v12) == 0)
LABEL_181:
    sub_23941D898("unordered_map::at: key not found");
  if (v8.u32[0] < 2uLL)
  {
    while (1)
    {
      v15 = v13[1];
      if (v15 == 1)
      {
        if (*((_DWORD *)v13 + 4) == 1)
          goto LABEL_26;
      }
      else if ((v15 & v9) != v11)
      {
        goto LABEL_181;
      }
      v13 = (uint64_t *)*v13;
      if (!v13)
        goto LABEL_181;
    }
  }
  while (2)
  {
    v17 = v13[1];
    if (v17 != 1)
    {
      if (v17 >= *(_QWORD *)&v102)
        v17 %= *(_QWORD *)&v102;
      if (v17 != v11)
        goto LABEL_181;
      goto LABEL_29;
    }
    if (*((_DWORD *)v13 + 4) != 1)
    {
LABEL_29:
      v13 = (uint64_t *)*v13;
      if (!v13)
        goto LABEL_181;
      continue;
    }
    break;
  }
LABEL_26:
  if (v8.u32[0] > 1uLL)
  {
    v16 = 2;
    if (*(_QWORD *)&v102 <= 2uLL)
      v16 = 2u % v102.u8[0];
  }
  else
  {
    v16 = (v102.i8[0] - 1) & 2;
  }
  v18 = (uint64_t **)*((_QWORD *)v101 + v16);
  if (!v18 || (v19 = *v18) == 0)
LABEL_182:
    sub_23941D898("unordered_map::at: key not found");
  if (v8.u32[0] < 2uLL)
  {
    while (1)
    {
      v20 = v19[1];
      if (v20 == 2)
      {
        if (*((_DWORD *)v19 + 4) == 2)
          goto LABEL_45;
      }
      else if ((v20 & v9) != v16)
      {
        goto LABEL_182;
      }
      v19 = (uint64_t *)*v19;
      if (!v19)
        goto LABEL_182;
    }
  }
  while (2)
  {
    v22 = v19[1];
    if (v22 != 2)
    {
      if (v22 >= *(_QWORD *)&v102)
        v22 %= *(_QWORD *)&v102;
      if (v22 != v16)
        goto LABEL_182;
      goto LABEL_48;
    }
    if (*((_DWORD *)v19 + 4) != 2)
    {
LABEL_48:
      v19 = (uint64_t *)*v19;
      if (!v19)
        goto LABEL_182;
      continue;
    }
    break;
  }
LABEL_45:
  if (v8.u32[0] > 1uLL)
  {
    v21 = 3;
    if (*(_QWORD *)&v102 <= 3uLL)
      v21 = 3u % v102.u8[0];
  }
  else
  {
    v21 = (v102.i8[0] - 1) & 3;
  }
  v23 = (uint64_t **)*((_QWORD *)v101 + v21);
  if (!v23 || (v24 = *v23) == 0)
LABEL_183:
    sub_23941D898("unordered_map::at: key not found");
  if (v8.u32[0] < 2uLL)
  {
    while (1)
    {
      v25 = v24[1];
      if (v25 == 3)
      {
        if (*((_DWORD *)v24 + 4) == 3)
          goto LABEL_64;
      }
      else if ((v25 & v9) != v21)
      {
        goto LABEL_183;
      }
      v24 = (uint64_t *)*v24;
      if (!v24)
        goto LABEL_183;
    }
  }
  while (2)
  {
    v27 = v24[1];
    if (v27 != 3)
    {
      if (v27 >= *(_QWORD *)&v102)
        v27 %= *(_QWORD *)&v102;
      if (v27 != v21)
        goto LABEL_183;
      goto LABEL_67;
    }
    if (*((_DWORD *)v24 + 4) != 3)
    {
LABEL_67:
      v24 = (uint64_t *)*v24;
      if (!v24)
        goto LABEL_183;
      continue;
    }
    break;
  }
LABEL_64:
  if (v8.u32[0] > 1uLL)
  {
    v26 = 4;
    if (*(_QWORD *)&v102 <= 4uLL)
      v26 = 4u % v102.u8[0];
  }
  else
  {
    v26 = (v102.i8[0] - 1) & 4;
  }
  v28 = (uint64_t **)*((_QWORD *)v101 + v26);
  if (!v28 || (v29 = *v28) == 0)
LABEL_184:
    sub_23941D898("unordered_map::at: key not found");
  v98 = v5;
  v99 = a2;
  if (v8.u32[0] < 2uLL)
  {
    while (1)
    {
      v30 = v29[1];
      if (v30 == 4)
      {
        if (*((_DWORD *)v29 + 4) == 4)
          goto LABEL_83;
      }
      else if ((v30 & v9) != v26)
      {
        goto LABEL_184;
      }
      v29 = (uint64_t *)*v29;
      if (!v29)
        goto LABEL_184;
    }
  }
  while (2)
  {
    v36 = v29[1];
    if (v36 != 4)
    {
      if (v36 >= *(_QWORD *)&v102)
        v36 %= *(_QWORD *)&v102;
      if (v36 != v26)
        goto LABEL_184;
      goto LABEL_88;
    }
    if (*((_DWORD *)v29 + 4) != 4)
    {
LABEL_88:
      v29 = (uint64_t *)*v29;
      if (!v29)
        goto LABEL_184;
      continue;
    }
    break;
  }
LABEL_83:
  v130 = xmmword_239F0BE70;
  sub_23950F8E4((uint64_t)&v130);
  v32 = v31;
  v33 = strlen(v31);
  if (v33 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v34 = (void *)v33;
  if (v33 >= 0x17)
  {
    v37 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17)
      v37 = v33 | 7;
    v38 = v37 + 1;
    v35 = (void **)operator new(v37 + 1);
    __dst[1] = v34;
    v121 = v38 | 0x8000000000000000;
    __dst[0] = v35;
    goto LABEL_97;
  }
  HIBYTE(v121) = v33;
  v35 = __dst;
  if (v33)
LABEL_97:
    memmove(v35, v32, (size_t)v34);
  *((_BYTE *)v34 + (_QWORD)v35) = 0;
  v39 = (_QWORD *)operator new();
  *v39 = &off_250AFFF08;
  v39[1] = &v100;
  sub_23961580C((uint64_t)v122, (uint64_t)__dst, (uint64_t)v39);
  v128 = xmmword_239F0D01C;
  v129 = 0x69686E73726B68;
  sub_2396F1A4C((uint64_t)&v128, (int32x4_t)xmmword_239F0D01C, v40, v41, v42);
  v44 = v43;
  v45 = strlen(v43);
  if (v45 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v46 = (void *)v45;
  if (v45 >= 0x17)
  {
    v48 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v45 | 7) != 0x17)
      v48 = v45 | 7;
    v49 = v48 + 1;
    v47 = operator new(v48 + 1);
    v118[1] = v46;
    v119 = v49 | 0x8000000000000000;
    v118[0] = v47;
    goto LABEL_105;
  }
  HIBYTE(v119) = v45;
  v47 = v118;
  if (v45)
LABEL_105:
    memmove(v47, v44, (size_t)v46);
  *((_BYTE *)v46 + (_QWORD)v47) = 0;
  v50 = (_QWORD *)operator new();
  *v50 = &off_250AFFF08;
  v50[1] = (char *)&v100 + 8;
  sub_23961580C((uint64_t)v122, (uint64_t)v118, (uint64_t)v50);
  v115 = 4075601;
  v51 = sub_239A94B5C((char *)&v115);
  v52 = strlen(v51);
  if (v52 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v53 = (void *)v52;
  if (v52 >= 0x17)
  {
    v55 = (v52 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v52 | 7) != 0x17)
      v55 = v52 | 7;
    v56 = v55 + 1;
    v54 = operator new(v55 + 1);
    v116[1] = v53;
    v117 = v56 | 0x8000000000000000;
    v116[0] = v54;
    goto LABEL_113;
  }
  HIBYTE(v117) = v52;
  v54 = v116;
  if (v52)
LABEL_113:
    memmove(v54, v51, (size_t)v53);
  *((_BYTE *)v53 + (_QWORD)v54) = 0;
  v57 = (_QWORD *)operator new();
  *v57 = &off_250AF3120;
  v57[1] = (char *)v7 + 20;
  sub_23961580C((uint64_t)v122, (uint64_t)v116, (uint64_t)v57);
  v112 = 5128490;
  v58 = sub_239A94B5C((char *)&v112);
  v59 = strlen(v58);
  if (v59 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v60 = (void *)v59;
  if (v59 >= 0x17)
  {
    v62 = (v59 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v59 | 7) != 0x17)
      v62 = v59 | 7;
    v63 = v62 + 1;
    v61 = operator new(v62 + 1);
    v113[1] = v60;
    v114 = v63 | 0x8000000000000000;
    v113[0] = v61;
    goto LABEL_121;
  }
  HIBYTE(v114) = v59;
  v61 = v113;
  if (v59)
LABEL_121:
    memmove(v61, v58, (size_t)v60);
  *((_BYTE *)v60 + (_QWORD)v61) = 0;
  v64 = (_QWORD *)operator new();
  *v64 = &off_250AF3120;
  v64[1] = (char *)v13 + 20;
  sub_23961580C((uint64_t)v122, (uint64_t)v113, (uint64_t)v64);
  strcpy(v109, "G)(5*");
  v65 = sub_239A90C78(v109);
  v66 = strlen(v65);
  if (v66 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v67 = (void *)v66;
  if (v66 >= 0x17)
  {
    v69 = (v66 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v66 | 7) != 0x17)
      v69 = v66 | 7;
    v70 = v69 + 1;
    v68 = operator new(v69 + 1);
    v110[1] = v67;
    v111 = v70 | 0x8000000000000000;
    v110[0] = v68;
    goto LABEL_129;
  }
  HIBYTE(v111) = v66;
  v68 = v110;
  if (v66)
LABEL_129:
    memmove(v68, v65, (size_t)v67);
  *((_BYTE *)v67 + (_QWORD)v68) = 0;
  v71 = (_QWORD *)operator new();
  *v71 = &off_250AF3120;
  v71[1] = (char *)v19 + 20;
  sub_23961580C((uint64_t)v122, (uint64_t)v110, (uint64_t)v71);
  v125 = 0x60D0B04160C1163;
  v127 = 0;
  v126 = 4112;
  v72 = (const char *)sub_23958E518((uint64_t)&v125);
  v73 = strlen(v72);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = (void *)v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    v107[1] = v74;
    v108 = v77 | 0x8000000000000000;
    v107[0] = v75;
    goto LABEL_137;
  }
  HIBYTE(v108) = v73;
  v75 = v107;
  if (v73)
LABEL_137:
    memmove(v75, v72, (size_t)v74);
  *((_BYTE *)v74 + (_QWORD)v75) = 0;
  v78 = (_QWORD *)operator new();
  *v78 = &off_250AF3120;
  v78[1] = (char *)v24 + 20;
  sub_23961580C((uint64_t)v122, (uint64_t)v107, (uint64_t)v78);
  strcpy(v124, "[?2(+7:8>6>5/");
  sub_23971A32C((uint64_t)v124, v79);
  v81 = v80;
  v82 = strlen(v80);
  if (v82 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v83 = (void *)v82;
  if (v82 >= 0x17)
  {
    v85 = (v82 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v82 | 7) != 0x17)
      v85 = v82 | 7;
    v86 = v85 + 1;
    v84 = operator new(v85 + 1);
    v105[1] = v83;
    v106 = v86 | 0x8000000000000000;
    v105[0] = v84;
    goto LABEL_145;
  }
  HIBYTE(v106) = v82;
  v84 = v105;
  if (v82)
LABEL_145:
    memmove(v84, v81, (size_t)v83);
  *((_BYTE *)v83 + (_QWORD)v84) = 0;
  v87 = (_QWORD *)operator new();
  *v87 = &off_250AF3120;
  v87[1] = (char *)v29 + 20;
  sub_23961580C((uint64_t)v122, (uint64_t)v105, (uint64_t)v87);
  if (SHIBYTE(v106) < 0)
  {
    operator delete(v105[0]);
    if (SHIBYTE(v108) < 0)
      goto LABEL_173;
LABEL_148:
    if ((SHIBYTE(v111) & 0x80000000) == 0)
      goto LABEL_149;
LABEL_174:
    operator delete(v110[0]);
    if (SHIBYTE(v114) < 0)
      goto LABEL_175;
LABEL_150:
    if ((SHIBYTE(v117) & 0x80000000) == 0)
      goto LABEL_151;
LABEL_176:
    operator delete(v116[0]);
    if (SHIBYTE(v119) < 0)
      goto LABEL_177;
LABEL_152:
    if (SHIBYTE(v121) < 0)
LABEL_178:
      operator delete(__dst[0]);
  }
  else
  {
    if ((SHIBYTE(v108) & 0x80000000) == 0)
      goto LABEL_148;
LABEL_173:
    operator delete(v107[0]);
    if (SHIBYTE(v111) < 0)
      goto LABEL_174;
LABEL_149:
    if ((SHIBYTE(v114) & 0x80000000) == 0)
      goto LABEL_150;
LABEL_175:
    operator delete(v113[0]);
    if (SHIBYTE(v117) < 0)
      goto LABEL_176;
LABEL_151:
    if ((SHIBYTE(v119) & 0x80000000) == 0)
      goto LABEL_152;
LABEL_177:
    operator delete(v118[0]);
    if (SHIBYTE(v121) < 0)
      goto LABEL_178;
  }
  sub_23959479C((uint64_t)v122, v99);
  v88 = v123;
  if (v123)
  {
    do
    {
      v89 = v88[5];
      if (v89)
        (*(void (**)(uint64_t))(*(_QWORD *)v89 + 8))(v89);
      v88 = (_QWORD *)*v88;
    }
    while (v88);
    v90 = (void **)v123;
    if (v123)
    {
      do
      {
        v97 = (void **)*v90;
        if (*((char *)v90 + 39) < 0)
          operator delete(v90[2]);
        operator delete(v90);
        v90 = v97;
      }
      while (v97);
    }
  }
  v91 = (void *)v122[0];
  v122[0] = 0;
  if (v91)
    operator delete(v91);
  v92 = *(unsigned __int8 *)(v98 + 56);
  *(_OWORD *)v98 = v100;
  if (v92)
  {
    if (&v100 != (__int128 *)v98)
    {
      *(_DWORD *)(v98 + 48) = v104;
      sub_239A53798((_QWORD *)(v98 + 16), (uint64_t *)__p);
    }
    v93 = __p;
    if (__p)
    {
      do
      {
LABEL_165:
        v94 = (_QWORD *)*v93;
        operator delete(v93);
        v93 = v94;
      }
      while (v94);
    }
  }
  else
  {
    sub_239A538BC(v98 + 16, (uint64_t)&v101);
    *(_BYTE *)(v98 + 56) = 1;
    v93 = __p;
    if (__p)
      goto LABEL_165;
  }
  v95 = v101;
  v101 = 0;
  if (v95)
    operator delete(v95);
  return (*((_BYTE *)v99 + *(_QWORD *)(*v99 - 24) + 32) & 5) == 0;
}

void sub_239A957B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, _QWORD *__p, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,void *a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  uint64_t v63;
  _QWORD *v65;
  uint64_t v66;
  void **v67;
  void *v68;
  _QWORD *v69;
  _QWORD *v70;
  void **v71;

  v65 = *(_QWORD **)(v63 - 224);
  if (v65)
  {
    do
    {
      v66 = v65[5];
      if (v66)
        (*(void (**)(uint64_t))(*(_QWORD *)v66 + 8))(v66);
      v65 = (_QWORD *)*v65;
    }
    while (v65);
    v67 = *(void ***)(v63 - 224);
    if (v67)
    {
      do
      {
        v71 = (void **)*v67;
        if (*((char *)v67 + 39) < 0)
          operator delete(v67[2]);
        operator delete(v67);
        v67 = v71;
      }
      while (v71);
    }
  }
  v68 = *(void **)(v63 - 240);
  *(_QWORD *)(v63 - 240) = 0;
  if (v68)
    operator delete(v68);
  v69 = __p;
  if (__p)
  {
    do
    {
      v70 = (_QWORD *)*v69;
      operator delete(v69);
      v69 = v70;
    }
    while (v70);
  }
  if (!a14)
    _Unwind_Resume(exception_object);
  operator delete(a14);
  _Unwind_Resume(exception_object);
}

void sub_239A959C4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A959E8(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239A9725C(*(unsigned int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239A95A24(uint64_t a1, uint64_t *a2, char a3)
{
  unint64_t v3;
  unint64_t v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  const char *v13;
  size_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int8x16_t v20;
  double v21;
  int32x4_t v22;
  const char *v23;
  const char *v24;
  size_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned __int8 v31;
  uint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint8x8_t v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40;
  void **v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  float v51;
  _BOOL8 v52;
  unint64_t v53;
  unint64_t v54;
  size_t v55;
  size_t v56;
  unint64_t v57;
  uint8x8_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  unint64_t v62;
  unsigned __int8 v63;
  uint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint8x8_t v69;
  uint64_t *v70;
  uint64_t v71;
  char v72;
  void *v73;
  void **v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  _QWORD *v83;
  float v84;
  _BOOL8 v85;
  unint64_t v86;
  unint64_t v87;
  size_t v88;
  size_t v89;
  unint64_t v90;
  uint8x8_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  void **v98;
  void *v99;
  void **v101;
  uint64_t v102;
  int v103;
  uint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint8x8_t v109;
  uint64_t **v110;
  uint64_t *v111;
  char v112;
  uint64_t v113;
  uint64_t *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  const void **v118;
  unsigned __int8 *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  const void **v123;
  unsigned __int8 *v124;
  _DWORD *v125;
  _DWORD *v126;
  float v127;
  _BOOL8 v128;
  unint64_t v129;
  unint64_t v130;
  size_t prime;
  size_t v132;
  unint64_t v133;
  uint8x8_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  unint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t *v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint8x8_t v146;
  uint64_t **v147;
  uint64_t *v148;
  char v149;
  uint64_t v150;
  uint64_t *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  const void **v155;
  unsigned __int8 *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  const void **v160;
  unsigned __int8 *v161;
  _DWORD *v162;
  _DWORD *v163;
  float v164;
  _BOOL8 v165;
  unint64_t v166;
  unint64_t v167;
  size_t v168;
  size_t v169;
  unint64_t v170;
  uint8x8_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  unint64_t v175;
  uint64_t *v176;
  _DWORD *v177;
  void *__p[2];
  unint64_t v179;
  void *v180[2];
  unint64_t v181;
  uint64_t v182;
  void *__dst[2];
  unint64_t v184;
  void *v185[2];
  uint64_t v186;
  void *v187[2];
  uint64_t v188;
  void *v189[2];
  void *v190;
  char v191[16];
  _OWORD v192[2];
  void *v193[2];
  char v194;
  int v195;
  void *v196;
  char v197;
  int v198;
  uint64_t v199;

  v199 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)v189, a3);
  v187[0] = 0;
  v187[1] = 0;
  v188 = 0;
  v185[0] = 0;
  v185[1] = 0;
  v186 = 0;
  v182 = 0x4A5F534C51583ELL;
  v6 = sub_23958E3FC((char *)&v182);
  v7 = strlen(v6);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v184 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v184) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250ADF330;
  v12[1] = v187;
  sub_23961580C((uint64_t)v189, (uint64_t)__dst, (uint64_t)v12);
  strcpy(v191, "Z>?).34;.354");
  v13 = sub_239510ECC((uint64_t)v191);
  v14 = strlen(v13);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v15 = (void *)v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    v180[1] = v15;
    v181 = v18 | 0x8000000000000000;
    v180[0] = v16;
    goto LABEL_16;
  }
  HIBYTE(v181) = v14;
  v16 = v180;
  if (v14)
LABEL_16:
    memmove(v16, v13, (size_t)v15);
  *((_BYTE *)v15 + (_QWORD)v16) = 0;
  v19 = (_QWORD *)operator new();
  *v19 = &off_250ADF330;
  v19[1] = v185;
  sub_23961580C((uint64_t)v189, (uint64_t)v180, (uint64_t)v19);
  v192[0] = xmmword_239F0D034;
  *(_OWORD *)((char *)v192 + 11) = *(__int128 *)((char *)&xmmword_239F0D034 + 11);
  sub_2396F1974((uint64_t)v192, *(int32x4_t *)((char *)&xmmword_239F0D034 + 11), v20, v21, v22);
  v24 = v23;
  v25 = strlen(v23);
  if (v25 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v26 = (void *)v25;
  if (v25 >= 0x17)
  {
    v28 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v25 | 7) != 0x17)
      v28 = v25 | 7;
    v29 = v28 + 1;
    v27 = operator new(v28 + 1);
    __p[1] = v26;
    v179 = v29 | 0x8000000000000000;
    __p[0] = v27;
    goto LABEL_24;
  }
  HIBYTE(v179) = v25;
  v27 = __p;
  if (v25)
LABEL_24:
    memmove(v27, v24, (size_t)v26);
  *((_BYTE *)v26 + (_QWORD)v27) = 0;
  v30 = (_QWORD *)operator new();
  *v30 = &off_250AE0670;
  v30[1] = v5 + 8;
  sub_23961580C((uint64_t)v189, (uint64_t)__p, (uint64_t)v30);
  if ((SHIBYTE(v179) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v181) & 0x80000000) == 0)
      goto LABEL_27;
LABEL_39:
    operator delete(v180[0]);
    if ((SHIBYTE(v184) & 0x80000000) == 0)
      goto LABEL_28;
    goto LABEL_40;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v181) < 0)
    goto LABEL_39;
LABEL_27:
  if ((SHIBYTE(v184) & 0x80000000) == 0)
    goto LABEL_28;
LABEL_40:
  operator delete(__dst[0]);
LABEL_28:
  sub_23959479C((uint64_t)v189, a2);
  v31 = atomic_load((unsigned __int8 *)&qword_25693D910);
  v176 = a2;
  v177 = (_DWORD *)v5;
  if ((v31 & 1) != 0 || !__cxa_guard_acquire(&qword_25693D910))
    goto LABEL_29;
  v102 = 0;
  BYTE7(v192[1]) = 3;
  LODWORD(v192[0]) = 7501925;
  v194 = 3;
  DWORD2(v192[1]) = 2;
  LODWORD(v193[0]) = 6778480;
  v197 = 3;
  v195 = 0;
  LODWORD(v196) = 6778986;
  xmmword_25693D8E8 = 0u;
  *(_OWORD *)&qword_25693D8F8 = 0u;
  dword_25693D908 = 1065353216;
  v198 = 1;
  do
  {
    v3 = (unint64_t)&v192[2 * v102];
    v103 = *(char *)(v3 + 23);
    if (v103 >= 0)
      v104 = (uint64_t *)&v192[2 * v102];
    else
      v104 = *(uint64_t **)v3;
    if (v103 >= 0)
      v105 = *(unsigned __int8 *)(v3 + 23);
    else
      v105 = *(_QWORD *)(v3 + 8);
    v106 = sub_239428940((uint64_t)__dst, v104, v105);
    v107 = v106;
    v108 = *((_QWORD *)&xmmword_25693D8E8 + 1);
    if (*((_QWORD *)&xmmword_25693D8E8 + 1))
    {
      v109 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&xmmword_25693D8E8 + 8));
      v109.i16[0] = vaddlv_u8(v109);
      if (v109.u32[0] > 1uLL)
      {
        v5 = v106;
        if (v106 >= *((_QWORD *)&xmmword_25693D8E8 + 1))
          v5 = v106 % *((_QWORD *)&xmmword_25693D8E8 + 1);
      }
      else
      {
        v5 = (*((_QWORD *)&xmmword_25693D8E8 + 1) - 1) & v106;
      }
      v110 = *(uint64_t ***)(xmmword_25693D8E8 + 8 * v5);
      if (v110)
      {
        v111 = *v110;
        if (*v110)
        {
          v112 = *(_BYTE *)(v3 + 23);
          if (v112 >= 0)
            v113 = *(unsigned __int8 *)(v3 + 23);
          else
            v113 = *(_QWORD *)(v3 + 8);
          if (v112 >= 0)
            v114 = (uint64_t *)&v192[2 * v102];
          else
            v114 = *(uint64_t **)v3;
          if (v109.u32[0] < 2uLL)
          {
            while (1)
            {
              v120 = v111[1];
              if (v120 == v107)
              {
                v121 = *((unsigned __int8 *)v111 + 39);
                if ((v121 & 0x80u) == 0)
                  v122 = *((unsigned __int8 *)v111 + 39);
                else
                  v122 = v111[3];
                if (v122 == v113)
                {
                  v123 = (const void **)(v111 + 2);
                  if ((v121 & 0x80) != 0)
                  {
                    if (!memcmp(*v123, v114, v111[3]))
                      goto LABEL_248;
                  }
                  else
                  {
                    if (!*((_BYTE *)v111 + 39))
                      goto LABEL_248;
                    v124 = (unsigned __int8 *)v114;
                    while (*(unsigned __int8 *)v123 == *v124)
                    {
                      v123 = (const void **)((char *)v123 + 1);
                      ++v124;
                      if (!--v121)
                        goto LABEL_248;
                    }
                  }
                }
              }
              else if ((v120 & (v108 - 1)) != v5)
              {
                goto LABEL_302;
              }
              v111 = (uint64_t *)*v111;
              if (!v111)
                goto LABEL_302;
            }
          }
          do
          {
            v115 = v111[1];
            if (v115 == v107)
            {
              v116 = *((unsigned __int8 *)v111 + 39);
              if ((v116 & 0x80u) == 0)
                v117 = *((unsigned __int8 *)v111 + 39);
              else
                v117 = v111[3];
              if (v117 == v113)
              {
                v118 = (const void **)(v111 + 2);
                if ((v116 & 0x80) != 0)
                {
                  if (!memcmp(*v118, v114, v111[3]))
                    goto LABEL_248;
                }
                else
                {
                  if (!*((_BYTE *)v111 + 39))
                    goto LABEL_248;
                  v119 = (unsigned __int8 *)v114;
                  while (*(unsigned __int8 *)v118 == *v119)
                  {
                    v118 = (const void **)((char *)v118 + 1);
                    ++v119;
                    if (!--v116)
                      goto LABEL_248;
                  }
                }
              }
            }
            else
            {
              if (v115 >= v108)
                v115 %= v108;
              if (v115 != v5)
                break;
            }
            v111 = (uint64_t *)*v111;
          }
          while (v111);
        }
      }
    }
LABEL_302:
    v125 = operator new(0x30uLL);
    v126 = v125;
    *(_QWORD *)v125 = 0;
    *((_QWORD *)v125 + 1) = v107;
    if (*(char *)(v3 + 23) < 0)
    {
      sub_23941A7F8((_BYTE *)v125 + 16, *(void **)v3, *(_QWORD *)(v3 + 8));
    }
    else
    {
      *((_OWORD *)v125 + 1) = *(_OWORD *)v3;
      *((_QWORD *)v125 + 4) = *(_QWORD *)(v3 + 16);
    }
    v126[10] = DWORD2(v192[2 * v102 + 1]);
    v127 = (float)(unint64_t)(qword_25693D900 + 1);
    if (!v108 || (float)(*(float *)&dword_25693D908 * (float)v108) < v127)
    {
      v128 = (v108 & (v108 - 1)) != 0;
      if (v108 < 3)
        v128 = 1;
      v129 = v128 | (2 * v108);
      v130 = vcvtps_u32_f32(v127 / *(float *)&dword_25693D908);
      if (v129 <= v130)
        prime = v130;
      else
        prime = v129;
      if (prime == 1)
      {
        prime = 2;
      }
      else if ((prime & (prime - 1)) != 0)
      {
        prime = std::__next_prime(prime);
      }
      v132 = *((_QWORD *)&xmmword_25693D8E8 + 1);
      if (prime > *((_QWORD *)&xmmword_25693D8E8 + 1))
        goto LABEL_317;
      if (prime < *((_QWORD *)&xmmword_25693D8E8 + 1))
      {
        v133 = vcvtps_u32_f32((float)(unint64_t)qword_25693D900 / *(float *)&dword_25693D908);
        if (*((_QWORD *)&xmmword_25693D8E8 + 1) < 3uLL
          || (v134 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&xmmword_25693D8E8 + 8)),
              v134.i16[0] = vaddlv_u8(v134),
              v134.u32[0] > 1uLL))
        {
          v133 = std::__next_prime(v133);
        }
        else
        {
          v135 = 1 << -(char)__clz(v133 - 1);
          if (v133 >= 2)
            v133 = v135;
        }
        if (prime <= v133)
          prime = v133;
        if (prime < v132)
LABEL_317:
          sub_239A513C0(prime);
      }
      v108 = *((_QWORD *)&xmmword_25693D8E8 + 1);
      if ((*((_QWORD *)&xmmword_25693D8E8 + 1) & (*((_QWORD *)&xmmword_25693D8E8 + 1) - 1)) != 0)
      {
        if (v107 >= *((_QWORD *)&xmmword_25693D8E8 + 1))
          v5 = v107 % *((_QWORD *)&xmmword_25693D8E8 + 1);
        else
          v5 = v107;
      }
      else
      {
        v5 = (*((_QWORD *)&xmmword_25693D8E8 + 1) - 1) & v107;
      }
    }
    v136 = xmmword_25693D8E8;
    v137 = *(_QWORD **)(xmmword_25693D8E8 + 8 * v5);
    if (v137)
    {
      *(_QWORD *)v126 = *v137;
    }
    else
    {
      *(_QWORD *)v126 = qword_25693D8F8;
      qword_25693D8F8 = (uint64_t)v126;
      *(_QWORD *)(v136 + 8 * v5) = &qword_25693D8F8;
      if (!*(_QWORD *)v126)
        goto LABEL_247;
      v138 = *(_QWORD *)(*(_QWORD *)v126 + 8);
      if ((v108 & (v108 - 1)) != 0)
      {
        if (v138 >= v108)
          v138 %= v108;
      }
      else
      {
        v138 &= v108 - 1;
      }
      v137 = (_QWORD *)(xmmword_25693D8E8 + 8 * v138);
    }
    *v137 = v126;
LABEL_247:
    ++qword_25693D900;
LABEL_248:
    ++v102;
  }
  while (v102 != 3);
  if (v197 < 0)
  {
    operator delete(v196);
    if (v194 < 0)
      goto LABEL_447;
LABEL_439:
    if (SBYTE7(v192[1]) < 0)
LABEL_448:
      operator delete(*(void **)&v192[0]);
  }
  else
  {
    if ((v194 & 0x80000000) == 0)
      goto LABEL_439;
LABEL_447:
    operator delete(v193[0]);
    if (SBYTE7(v192[1]) < 0)
      goto LABEL_448;
  }
  __cxa_atexit((void (*)(void *))sub_239A51358, &xmmword_25693D8E8, &dword_23940C000);
  __cxa_guard_release(&qword_25693D910);
  v5 = (unint64_t)v177;
LABEL_29:
  if (v188 >= 0)
    v32 = (uint64_t *)v187;
  else
    v32 = (uint64_t *)v187[0];
  if (v188 >= 0)
    v33 = HIBYTE(v188);
  else
    v33 = (unint64_t)v187[1];
  v34 = sub_239428940((uint64_t)v192, v32, v33);
  v35 = v34;
  v36 = *((_QWORD *)&xmmword_25693D8E8 + 1);
  if (*((_QWORD *)&xmmword_25693D8E8 + 1))
  {
    v37 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&xmmword_25693D8E8 + 8));
    v37.i16[0] = vaddlv_u8(v37);
    if (v37.u32[0] > 1uLL)
    {
      v3 = v34;
      if (v34 >= *((_QWORD *)&xmmword_25693D8E8 + 1))
        v3 = v34 % *((_QWORD *)&xmmword_25693D8E8 + 1);
    }
    else
    {
      v3 = (*((_QWORD *)&xmmword_25693D8E8 + 1) - 1) & v34;
    }
    v38 = *(uint64_t **)(xmmword_25693D8E8 + 8 * v3);
    if (v38)
    {
      v39 = *v38;
      if (*v38)
      {
        if (v188 >= 0)
          v40 = (void *)HIBYTE(v188);
        else
          v40 = v187[1];
        if (v188 >= 0)
          v41 = v187;
        else
          v41 = (void **)v187[0];
        if (v37.u32[0] < 2uLL)
        {
          while (1)
          {
            v46 = *(_QWORD *)(v39 + 8);
            if (v46 == v35)
            {
              v47 = *(unsigned __int8 *)(v39 + 39);
              if ((v47 & 0x80u) == 0)
                v48 = (void *)*(unsigned __int8 *)(v39 + 39);
              else
                v48 = *(void **)(v39 + 24);
              if (v48 == v40)
              {
                if ((v47 & 0x80) != 0)
                {
                  if (!memcmp(*(const void **)(v39 + 16), v41, *(_QWORD *)(v39 + 24)))
                    goto LABEL_85;
                }
                else
                {
                  if (!*(_BYTE *)(v39 + 39))
                    goto LABEL_85;
                  v49 = 0;
                  while (*(unsigned __int8 *)(v39 + v49 + 16) == *((unsigned __int8 *)v41 + v49))
                  {
                    if (v47 == ++v49)
                      goto LABEL_85;
                  }
                }
              }
            }
            else if ((v46 & (v36 - 1)) != v3)
            {
              goto LABEL_86;
            }
            v39 = *(_QWORD *)v39;
            if (!v39)
              goto LABEL_86;
          }
        }
        while (1)
        {
          v42 = *(_QWORD *)(v39 + 8);
          if (v42 == v35)
          {
            v43 = *(unsigned __int8 *)(v39 + 39);
            if ((v43 & 0x80u) == 0)
              v44 = (void *)*(unsigned __int8 *)(v39 + 39);
            else
              v44 = *(void **)(v39 + 24);
            if (v44 == v40)
            {
              if ((v43 & 0x80) != 0)
              {
                if (!memcmp(*(const void **)(v39 + 16), v41, *(_QWORD *)(v39 + 24)))
                {
LABEL_85:
                  v5 = (unint64_t)v177;
                  goto LABEL_128;
                }
              }
              else
              {
                if (!*(_BYTE *)(v39 + 39))
                  goto LABEL_85;
                v45 = 0;
                while (*(unsigned __int8 *)(v39 + v45 + 16) == *((unsigned __int8 *)v41 + v45))
                {
                  if (v43 == ++v45)
                    goto LABEL_85;
                }
              }
            }
          }
          else
          {
            if (v42 >= v36)
              v42 %= v36;
            if (v42 != v3)
            {
LABEL_86:
              v5 = (unint64_t)v177;
              break;
            }
          }
          v39 = *(_QWORD *)v39;
          if (!v39)
            goto LABEL_86;
        }
      }
    }
  }
  v50 = operator new(0x30uLL);
  v39 = (uint64_t)v50;
  *v50 = 0;
  v50[1] = v35;
  if (SHIBYTE(v188) < 0)
  {
    sub_23941A7F8((_BYTE *)v50 + 16, v187[0], (unint64_t)v187[1]);
  }
  else
  {
    *((_OWORD *)v50 + 1) = *(_OWORD *)v187;
    v50[4] = v188;
  }
  *(_DWORD *)(v39 + 40) = 0;
  v51 = (float)(unint64_t)(qword_25693D900 + 1);
  if (!v36 || (float)(*(float *)&dword_25693D908 * (float)v36) < v51)
  {
    v52 = 1;
    if (v36 >= 3)
      v52 = (v36 & (v36 - 1)) != 0;
    v53 = v52 | (2 * v36);
    v54 = vcvtps_u32_f32(v51 / *(float *)&dword_25693D908);
    if (v53 <= v54)
      v55 = v54;
    else
      v55 = v53;
    if (v55 == 1)
    {
      v55 = 2;
    }
    else if ((v55 & (v55 - 1)) != 0)
    {
      v55 = std::__next_prime(v55);
    }
    v56 = *((_QWORD *)&xmmword_25693D8E8 + 1);
    if (v55 > *((_QWORD *)&xmmword_25693D8E8 + 1))
      goto LABEL_102;
    if (v55 < *((_QWORD *)&xmmword_25693D8E8 + 1))
    {
      v57 = vcvtps_u32_f32((float)(unint64_t)qword_25693D900 / *(float *)&dword_25693D908);
      if (*((_QWORD *)&xmmword_25693D8E8 + 1) < 3uLL
        || (v58 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&xmmword_25693D8E8 + 8)),
            v58.i16[0] = vaddlv_u8(v58),
            v58.u32[0] > 1uLL))
      {
        v57 = std::__next_prime(v57);
      }
      else
      {
        v59 = 1 << -(char)__clz(v57 - 1);
        if (v57 >= 2)
          v57 = v59;
      }
      if (v55 <= v57)
        v55 = v57;
      if (v55 < v56)
LABEL_102:
        sub_239A513C0(v55);
    }
    v36 = *((_QWORD *)&xmmword_25693D8E8 + 1);
    if ((v36 & (v36 - 1)) != 0)
    {
      if (v35 >= *((_QWORD *)&xmmword_25693D8E8 + 1))
        v3 = v35 % *((_QWORD *)&xmmword_25693D8E8 + 1);
      else
        v3 = v35;
    }
    else
    {
      v3 = (*((_QWORD *)&xmmword_25693D8E8 + 1) - 1) & v35;
    }
  }
  v60 = xmmword_25693D8E8;
  v61 = *(uint64_t **)(xmmword_25693D8E8 + 8 * v3);
  if (v61)
  {
    *(_QWORD *)v39 = *v61;
    goto LABEL_126;
  }
  *(_QWORD *)v39 = qword_25693D8F8;
  qword_25693D8F8 = v39;
  *(_QWORD *)(v60 + 8 * v3) = &qword_25693D8F8;
  if (*(_QWORD *)v39)
  {
    v62 = *(_QWORD *)(*(_QWORD *)v39 + 8);
    if ((v36 & (v36 - 1)) != 0)
    {
      if (v62 >= v36)
        v62 %= v36;
    }
    else
    {
      v62 &= v36 - 1;
    }
    v61 = (uint64_t *)(xmmword_25693D8E8 + 8 * v62);
LABEL_126:
    *v61 = v39;
  }
  ++qword_25693D900;
LABEL_128:
  *(_DWORD *)(v5 + 4) = *(_DWORD *)(v39 + 40);
  v63 = atomic_load((unsigned __int8 *)&qword_25693D970);
  if ((v63 & 1) != 0 || !__cxa_guard_acquire(&qword_25693D970))
    goto LABEL_129;
  v139 = 0;
  BYTE7(v192[1]) = 4;
  strcpy((char *)v192, "disk");
  v194 = 4;
  DWORD2(v192[1]) = 1;
  strcpy((char *)v193, "none");
  xmmword_25693D948 = 0u;
  *(_OWORD *)&qword_25693D958 = 0u;
  dword_25693D968 = 1065353216;
  v195 = 0;
  while (2)
  {
    v3 = (unint64_t)&v192[2 * v139];
    v140 = *(char *)(v3 + 23);
    if (v140 >= 0)
      v141 = (uint64_t *)&v192[2 * v139];
    else
      v141 = *(uint64_t **)v3;
    if (v140 >= 0)
      v142 = *(unsigned __int8 *)(v3 + 23);
    else
      v142 = *(_QWORD *)(v3 + 8);
    v143 = sub_239428940((uint64_t)__dst, v141, v142);
    v144 = v143;
    v145 = *((_QWORD *)&xmmword_25693D948 + 1);
    if (*((_QWORD *)&xmmword_25693D948 + 1))
    {
      v146 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&xmmword_25693D948 + 8));
      v146.i16[0] = vaddlv_u8(v146);
      if (v146.u32[0] > 1uLL)
      {
        v5 = v143;
        if (v143 >= *((_QWORD *)&xmmword_25693D948 + 1))
          v5 = v143 % *((_QWORD *)&xmmword_25693D948 + 1);
      }
      else
      {
        v5 = (*((_QWORD *)&xmmword_25693D948 + 1) - 1) & v143;
      }
      v147 = *(uint64_t ***)(xmmword_25693D948 + 8 * v5);
      if (v147)
      {
        v148 = *v147;
        if (*v147)
        {
          v149 = *(_BYTE *)(v3 + 23);
          if (v149 >= 0)
            v150 = *(unsigned __int8 *)(v3 + 23);
          else
            v150 = *(_QWORD *)(v3 + 8);
          if (v149 >= 0)
            v151 = (uint64_t *)&v192[2 * v139];
          else
            v151 = *(uint64_t **)v3;
          if (v146.u32[0] < 2uLL)
          {
            while (1)
            {
              v157 = v148[1];
              if (v157 == v144)
              {
                v158 = *((unsigned __int8 *)v148 + 39);
                if ((v158 & 0x80u) == 0)
                  v159 = *((unsigned __int8 *)v148 + 39);
                else
                  v159 = v148[3];
                if (v159 == v150)
                {
                  v160 = (const void **)(v148 + 2);
                  if ((v158 & 0x80) != 0)
                  {
                    if (!memcmp(*v160, v151, v148[3]))
                      goto LABEL_345;
                  }
                  else
                  {
                    if (!*((_BYTE *)v148 + 39))
                      goto LABEL_345;
                    v161 = (unsigned __int8 *)v151;
                    while (*(unsigned __int8 *)v160 == *v161)
                    {
                      v160 = (const void **)((char *)v160 + 1);
                      ++v161;
                      if (!--v158)
                        goto LABEL_345;
                    }
                  }
                }
              }
              else if ((v157 & (v145 - 1)) != v5)
              {
                goto LABEL_399;
              }
              v148 = (uint64_t *)*v148;
              if (!v148)
                goto LABEL_399;
            }
          }
          do
          {
            v152 = v148[1];
            if (v152 == v144)
            {
              v153 = *((unsigned __int8 *)v148 + 39);
              if ((v153 & 0x80u) == 0)
                v154 = *((unsigned __int8 *)v148 + 39);
              else
                v154 = v148[3];
              if (v154 == v150)
              {
                v155 = (const void **)(v148 + 2);
                if ((v153 & 0x80) != 0)
                {
                  if (!memcmp(*v155, v151, v148[3]))
                    goto LABEL_345;
                }
                else
                {
                  if (!*((_BYTE *)v148 + 39))
                    goto LABEL_345;
                  v156 = (unsigned __int8 *)v151;
                  while (*(unsigned __int8 *)v155 == *v156)
                  {
                    v155 = (const void **)((char *)v155 + 1);
                    ++v156;
                    if (!--v153)
                      goto LABEL_345;
                  }
                }
              }
            }
            else
            {
              if (v152 >= v145)
                v152 %= v145;
              if (v152 != v5)
                break;
            }
            v148 = (uint64_t *)*v148;
          }
          while (v148);
        }
      }
    }
LABEL_399:
    v162 = operator new(0x30uLL);
    v163 = v162;
    *(_QWORD *)v162 = 0;
    *((_QWORD *)v162 + 1) = v144;
    if (*(char *)(v3 + 23) < 0)
    {
      sub_23941A7F8((_BYTE *)v162 + 16, *(void **)v3, *(_QWORD *)(v3 + 8));
    }
    else
    {
      *((_OWORD *)v162 + 1) = *(_OWORD *)v3;
      *((_QWORD *)v162 + 4) = *(_QWORD *)(v3 + 16);
    }
    v163[10] = DWORD2(v192[2 * v139 + 1]);
    v164 = (float)(unint64_t)(qword_25693D960 + 1);
    if (!v145 || (float)(*(float *)&dword_25693D968 * (float)v145) < v164)
    {
      v165 = (v145 & (v145 - 1)) != 0;
      if (v145 < 3)
        v165 = 1;
      v166 = v165 | (2 * v145);
      v167 = vcvtps_u32_f32(v164 / *(float *)&dword_25693D968);
      if (v166 <= v167)
        v168 = v167;
      else
        v168 = v166;
      if (v168 == 1)
      {
        v168 = 2;
      }
      else if ((v168 & (v168 - 1)) != 0)
      {
        v168 = std::__next_prime(v168);
      }
      v169 = *((_QWORD *)&xmmword_25693D948 + 1);
      if (v168 > *((_QWORD *)&xmmword_25693D948 + 1))
        goto LABEL_414;
      if (v168 < *((_QWORD *)&xmmword_25693D948 + 1))
      {
        v170 = vcvtps_u32_f32((float)(unint64_t)qword_25693D960 / *(float *)&dword_25693D968);
        if (*((_QWORD *)&xmmword_25693D948 + 1) < 3uLL
          || (v171 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&xmmword_25693D948 + 8)),
              v171.i16[0] = vaddlv_u8(v171),
              v171.u32[0] > 1uLL))
        {
          v170 = std::__next_prime(v170);
        }
        else
        {
          v172 = 1 << -(char)__clz(v170 - 1);
          if (v170 >= 2)
            v170 = v172;
        }
        if (v168 <= v170)
          v168 = v170;
        if (v168 < v169)
LABEL_414:
          sub_239A51BCC(v168);
      }
      v145 = *((_QWORD *)&xmmword_25693D948 + 1);
      if ((*((_QWORD *)&xmmword_25693D948 + 1) & (*((_QWORD *)&xmmword_25693D948 + 1) - 1)) != 0)
      {
        if (v144 >= *((_QWORD *)&xmmword_25693D948 + 1))
          v5 = v144 % *((_QWORD *)&xmmword_25693D948 + 1);
        else
          v5 = v144;
      }
      else
      {
        v5 = (*((_QWORD *)&xmmword_25693D948 + 1) - 1) & v144;
      }
    }
    v173 = xmmword_25693D948;
    v174 = *(_QWORD **)(xmmword_25693D948 + 8 * v5);
    if (v174)
    {
      *(_QWORD *)v163 = *v174;
      goto LABEL_343;
    }
    *(_QWORD *)v163 = qword_25693D958;
    qword_25693D958 = (uint64_t)v163;
    *(_QWORD *)(v173 + 8 * v5) = &qword_25693D958;
    if (*(_QWORD *)v163)
    {
      v175 = *(_QWORD *)(*(_QWORD *)v163 + 8);
      if ((v145 & (v145 - 1)) != 0)
      {
        if (v175 >= v145)
          v175 %= v145;
      }
      else
      {
        v175 &= v145 - 1;
      }
      v174 = (_QWORD *)(xmmword_25693D948 + 8 * v175);
LABEL_343:
      *v174 = v163;
    }
    ++qword_25693D960;
LABEL_345:
    if (++v139 != 2)
      continue;
    break;
  }
  if (v194 < 0)
    operator delete(v193[0]);
  if (SBYTE7(v192[1]) < 0)
    operator delete(*(void **)&v192[0]);
  __cxa_atexit((void (*)(void *))sub_239A51B64, &xmmword_25693D948, &dword_23940C000);
  __cxa_guard_release(&qword_25693D970);
LABEL_129:
  if (v186 >= 0)
    v64 = (uint64_t *)v185;
  else
    v64 = (uint64_t *)v185[0];
  if (v186 >= 0)
    v65 = HIBYTE(v186);
  else
    v65 = (unint64_t)v185[1];
  v66 = sub_239428940((uint64_t)v192, v64, v65);
  v67 = v66;
  v68 = *((_QWORD *)&xmmword_25693D948 + 1);
  if (*((_QWORD *)&xmmword_25693D948 + 1))
  {
    v69 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&xmmword_25693D948 + 8));
    v69.i16[0] = vaddlv_u8(v69);
    if (v69.u32[0] > 1uLL)
    {
      v3 = v66;
      if (v66 >= *((_QWORD *)&xmmword_25693D948 + 1))
        v3 = v66 % *((_QWORD *)&xmmword_25693D948 + 1);
    }
    else
    {
      v3 = (*((_QWORD *)&xmmword_25693D948 + 1) - 1) & v66;
    }
    v70 = *(uint64_t **)(xmmword_25693D948 + 8 * v3);
    if (v70)
    {
      v71 = *v70;
      if (*v70)
      {
        v72 = HIBYTE(v186);
        if (v186 >= 0)
          v73 = (void *)HIBYTE(v186);
        else
          v73 = v185[1];
        if (v186 >= 0)
          v74 = v185;
        else
          v74 = (void **)v185[0];
        if (v69.u32[0] < 2uLL)
        {
          while (1)
          {
            v79 = *(_QWORD *)(v71 + 8);
            if (v79 == v67)
            {
              v80 = *(unsigned __int8 *)(v71 + 39);
              if ((v80 & 0x80u) == 0)
                v81 = (void *)*(unsigned __int8 *)(v71 + 39);
              else
                v81 = *(void **)(v71 + 24);
              if (v81 == v73)
              {
                if ((v80 & 0x80) != 0)
                {
                  if (!memcmp(*(const void **)(v71 + 16), v74, *(_QWORD *)(v71 + 24)))
                    goto LABEL_224;
                }
                else
                {
                  if (!*(_BYTE *)(v71 + 39))
                    goto LABEL_224;
                  v82 = 0;
                  while (*(unsigned __int8 *)(v71 + v82 + 16) == *((unsigned __int8 *)v74 + v82))
                  {
                    if (v80 == ++v82)
                      goto LABEL_224;
                  }
                }
              }
            }
            else if ((v79 & (v68 - 1)) != v3)
            {
              goto LABEL_183;
            }
            v71 = *(_QWORD *)v71;
            if (!v71)
              goto LABEL_183;
          }
        }
        do
        {
          v75 = *(_QWORD *)(v71 + 8);
          if (v75 == v67)
          {
            v76 = *(unsigned __int8 *)(v71 + 39);
            if ((v76 & 0x80u) == 0)
              v77 = (void *)*(unsigned __int8 *)(v71 + 39);
            else
              v77 = *(void **)(v71 + 24);
            if (v77 == v73)
            {
              if ((v76 & 0x80) != 0)
              {
                if (!memcmp(*(const void **)(v71 + 16), v74, *(_QWORD *)(v71 + 24)))
                  goto LABEL_224;
              }
              else
              {
                if (!*(_BYTE *)(v71 + 39))
                  goto LABEL_224;
                v78 = 0;
                while (*(unsigned __int8 *)(v71 + v78 + 16) == *((unsigned __int8 *)v74 + v78))
                {
                  if (v76 == ++v78)
                    goto LABEL_224;
                }
              }
            }
          }
          else
          {
            if (v75 >= v68)
              v75 %= v68;
            if (v75 != v3)
              break;
          }
          v71 = *(_QWORD *)v71;
        }
        while (v71);
      }
    }
  }
LABEL_183:
  v83 = operator new(0x30uLL);
  v71 = (uint64_t)v83;
  *v83 = 0;
  v83[1] = v67;
  if (SHIBYTE(v186) < 0)
  {
    sub_23941A7F8((_BYTE *)v83 + 16, v185[0], (unint64_t)v185[1]);
  }
  else
  {
    *((_OWORD *)v83 + 1) = *(_OWORD *)v185;
    v83[4] = v186;
  }
  *(_DWORD *)(v71 + 40) = 0;
  v84 = (float)(unint64_t)(qword_25693D960 + 1);
  if (!v68 || (float)(*(float *)&dword_25693D968 * (float)v68) < v84)
  {
    v85 = 1;
    if (v68 >= 3)
      v85 = (v68 & (v68 - 1)) != 0;
    v86 = v85 | (2 * v68);
    v87 = vcvtps_u32_f32(v84 / *(float *)&dword_25693D968);
    if (v86 <= v87)
      v88 = v87;
    else
      v88 = v86;
    if (v88 == 1)
    {
      v88 = 2;
    }
    else if ((v88 & (v88 - 1)) != 0)
    {
      v88 = std::__next_prime(v88);
    }
    v89 = *((_QWORD *)&xmmword_25693D948 + 1);
    if (v88 > *((_QWORD *)&xmmword_25693D948 + 1))
      goto LABEL_198;
    if (v88 < *((_QWORD *)&xmmword_25693D948 + 1))
    {
      v90 = vcvtps_u32_f32((float)(unint64_t)qword_25693D960 / *(float *)&dword_25693D968);
      if (*((_QWORD *)&xmmword_25693D948 + 1) < 3uLL
        || (v91 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&xmmword_25693D948 + 8)),
            v91.i16[0] = vaddlv_u8(v91),
            v91.u32[0] > 1uLL))
      {
        v90 = std::__next_prime(v90);
      }
      else
      {
        v92 = 1 << -(char)__clz(v90 - 1);
        if (v90 >= 2)
          v90 = v92;
      }
      if (v88 <= v90)
        v88 = v90;
      if (v88 < v89)
LABEL_198:
        sub_239A51BCC(v88);
    }
    v68 = *((_QWORD *)&xmmword_25693D948 + 1);
    if ((v68 & (v68 - 1)) != 0)
    {
      if (v67 >= *((_QWORD *)&xmmword_25693D948 + 1))
        v3 = v67 % *((_QWORD *)&xmmword_25693D948 + 1);
      else
        v3 = v67;
    }
    else
    {
      v3 = (*((_QWORD *)&xmmword_25693D948 + 1) - 1) & v67;
    }
  }
  v93 = xmmword_25693D948;
  v94 = *(uint64_t **)(xmmword_25693D948 + 8 * v3);
  if (v94)
  {
    *(_QWORD *)v71 = *v94;
    goto LABEL_222;
  }
  *(_QWORD *)v71 = qword_25693D958;
  qword_25693D958 = v71;
  *(_QWORD *)(v93 + 8 * v3) = &qword_25693D958;
  if (*(_QWORD *)v71)
  {
    v95 = *(_QWORD *)(*(_QWORD *)v71 + 8);
    if ((v68 & (v68 - 1)) != 0)
    {
      if (v95 >= v68)
        v95 %= v68;
    }
    else
    {
      v95 &= v68 - 1;
    }
    v94 = (uint64_t *)(xmmword_25693D948 + 8 * v95);
LABEL_222:
    *v94 = v71;
  }
  ++qword_25693D960;
  v72 = HIBYTE(v186);
LABEL_224:
  *v177 = *(_DWORD *)(v71 + 40);
  if (v72 < 0)
  {
    operator delete(v185[0]);
    if (SHIBYTE(v188) < 0)
      goto LABEL_239;
  }
  else
  {
    if ((SHIBYTE(v188) & 0x80000000) == 0)
      goto LABEL_226;
LABEL_239:
    operator delete(v187[0]);
  }
LABEL_226:
  v96 = v190;
  if (v190)
  {
    do
    {
      v97 = v96[5];
      if (v97)
        (*(void (**)(uint64_t))(*(_QWORD *)v97 + 8))(v97);
      v96 = (_QWORD *)*v96;
    }
    while (v96);
    v98 = (void **)v190;
    if (v190)
    {
      do
      {
        v101 = (void **)*v98;
        if (*((char *)v98 + 39) < 0)
          operator delete(v98[2]);
        operator delete(v98);
        v98 = v101;
      }
      while (v101);
    }
  }
  v99 = v189[0];
  v189[0] = 0;
  if (v99)
    operator delete(v99);
  return (*((_BYTE *)v176 + *(_QWORD *)(*v176 - 24) + 32) & 5) == 0;
}

void sub_239A96F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41,void *a42,uint64_t a43,_QWORD *a44)
{
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void **v48;
  void *v49;
  void **v50;
  _QWORD *v51;
  uint64_t v52;
  void **v53;
  void **v54;

  operator delete(v44);
  v48 = (void **)qword_25693D958;
  if (qword_25693D958)
  {
    do
    {
      v50 = (void **)*v48;
      if (*((char *)v48 + 39) < 0)
        operator delete(v48[2]);
      operator delete(v48);
      v48 = v50;
    }
    while (v50);
  }
  v49 = *(void **)(v45 + 2376);
  *(_QWORD *)(v45 + 2376) = 0;
  if (v49)
  {
    operator delete(v49);
    if (*(char *)(v46 - 137) < 0)
    {
LABEL_4:
      operator delete(*(void **)(v46 - 160));
      if ((*(char *)(v46 - 169) & 0x80000000) == 0)
      {
LABEL_12:
        __cxa_guard_abort(&qword_25693D970);
        if (a35 < 0)
        {
          operator delete(a30);
          if (a41 < 0)
          {
LABEL_14:
            operator delete(__p);
            v51 = a44;
            if (!a44)
              goto LABEL_23;
            do
            {
LABEL_20:
              v52 = v51[5];
              if (v52)
                (*(void (**)(uint64_t))(*(_QWORD *)v52 + 8))(v52);
              v51 = (_QWORD *)*v51;
            }
            while (v51);
            v53 = (void **)a44;
            do
            {
              v54 = (void **)*v53;
              if (*((char *)v53 + 39) < 0)
                operator delete(v53[2]);
              operator delete(v53);
              v53 = v54;
            }
            while (v54);
LABEL_23:
            if (!a42)
              _Unwind_Resume(a1);
            operator delete(a42);
            _Unwind_Resume(a1);
          }
        }
        else if (a41 < 0)
        {
          goto LABEL_14;
        }
        v51 = a44;
        if (!a44)
          goto LABEL_23;
        goto LABEL_20;
      }
LABEL_11:
      operator delete(*(void **)(v46 - 192));
      goto LABEL_12;
    }
  }
  else if (*(char *)(v46 - 137) < 0)
  {
    goto LABEL_4;
  }
  if ((*(char *)(v46 - 169) & 0x80000000) == 0)
    goto LABEL_12;
  goto LABEL_11;
}

void sub_239A97248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0)
    JUMPOUT(0x239A971BCLL);
  JUMPOUT(0x239A9718CLL);
}

_QWORD *sub_239A9725C(unsigned int *a1, _QWORD *a2, char a3)
{
  unint64_t v3;
  unint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t prime;
  unint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  const char *v25;
  size_t v26;
  void *v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  const char *v32;
  size_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  int8x16_t v39;
  double v40;
  int32x4_t v41;
  const char *v42;
  const char *v43;
  size_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  void **v52;
  void *v53;
  void **v55;
  void *__p[2];
  unint64_t v57;
  void *v58[2];
  unint64_t v59;
  uint64_t v60;
  void *__dst[2];
  unint64_t v62;
  void *v63[2];
  uint64_t v64;
  void *v65[2];
  char v66;
  void *v67[2];
  void *v68;
  char v69[16];
  _BYTE v70[27];
  char v71;
  void *v72[3];
  char v73;
  uint64_t v74;

  v74 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)v67, a3);
  sub_239A50878(v65, a1[1]);
  v6 = *a1;
  v7 = atomic_load((unsigned __int8 *)&qword_25693D940);
  if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_25693D940))
  {
    sub_23979F334((uint64_t)v70, 1, "disk");
    sub_23979F334((uint64_t)v72, 0, "none");
    sub_239A5157C((unsigned int *)v70, 2);
    if (v73 < 0)
      operator delete(v72[1]);
    if (v71 < 0)
      operator delete(*(void **)&v70[8]);
    __cxa_atexit((void (*)(void *))sub_239A51940, &xmmword_25693D918, &dword_23940C000);
    __cxa_guard_release(&qword_25693D940);
  }
  v8 = *((_QWORD *)&xmmword_25693D918 + 1);
  if (*((_QWORD *)&xmmword_25693D918 + 1))
  {
    v9 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&xmmword_25693D918 + 8));
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v3 = v6;
      if (*((_QWORD *)&xmmword_25693D918 + 1) <= v6)
        v3 = v6 % *((_QWORD *)&xmmword_25693D918 + 1);
    }
    else
    {
      v3 = (DWORD2(xmmword_25693D918) - 1) & v6;
    }
    v10 = *(void ***)(xmmword_25693D918 + 8 * v3);
    if (v10)
    {
      v11 = (char *)*v10;
      if (*v10)
      {
        if (v9.u32[0] < 2uLL)
        {
          while (1)
          {
            v13 = *((_QWORD *)v11 + 1);
            if (v13 == v6)
            {
              if (*((_DWORD *)v11 + 4) == (_DWORD)v6)
                goto LABEL_61;
            }
            else if ((v13 & (*((_QWORD *)&xmmword_25693D918 + 1) - 1)) != v3)
            {
              goto LABEL_23;
            }
            v11 = *(char **)v11;
            if (!v11)
              goto LABEL_23;
          }
        }
        do
        {
          v12 = *((_QWORD *)v11 + 1);
          if (v12 == v6)
          {
            if (*((_DWORD *)v11 + 4) == (_DWORD)v6)
              goto LABEL_61;
          }
          else
          {
            if (v12 >= *((_QWORD *)&xmmword_25693D918 + 1))
              v12 %= *((_QWORD *)&xmmword_25693D918 + 1);
            if (v12 != v3)
              break;
          }
          v11 = *(char **)v11;
        }
        while (v11);
      }
    }
  }
LABEL_23:
  v11 = (char *)operator new(0x30uLL);
  *(_QWORD *)v70 = v11;
  *(_QWORD *)&v70[8] = &qword_25693D928;
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = v6;
  *((_DWORD *)v11 + 4) = v6;
  *((_QWORD *)v11 + 4) = 0;
  *((_QWORD *)v11 + 5) = 0;
  *((_QWORD *)v11 + 3) = 0;
  v70[16] = 1;
  v14 = (float)(unint64_t)(qword_25693D930 + 1);
  if (v8 && (float)(*(float *)&dword_25693D938 * (float)v8) >= v14)
  {
    v6 = v3;
  }
  else
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v14 / *(float *)&dword_25693D938);
    if (v16 <= v17)
      prime = v17;
    else
      prime = v16;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v8 = *((_QWORD *)&xmmword_25693D918 + 1);
    }
    if (prime > v8)
      goto LABEL_36;
    if (prime < v8)
    {
      v19 = vcvtps_u32_f32((float)(unint64_t)qword_25693D930 / *(float *)&dword_25693D938);
      if (v8 < 3 || (v20 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
      {
        v19 = std::__next_prime(v19);
      }
      else
      {
        v21 = 1 << -(char)__clz(v19 - 1);
        if (v19 >= 2)
          v19 = v21;
      }
      if (prime <= v19)
        prime = v19;
      if (prime < v8)
LABEL_36:
        sub_239A519A8(prime);
    }
    v8 = *((_QWORD *)&xmmword_25693D918 + 1);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (*((_QWORD *)&xmmword_25693D918 + 1) <= v6)
        v6 %= *((_QWORD *)&xmmword_25693D918 + 1);
    }
    else
    {
      v6 = (DWORD2(xmmword_25693D918) - 1) & v6;
    }
  }
  v22 = xmmword_25693D918;
  v23 = *(_QWORD **)(xmmword_25693D918 + 8 * v6);
  if (v23)
  {
    *(_QWORD *)v11 = *v23;
LABEL_59:
    *v23 = v11;
    goto LABEL_60;
  }
  *(_QWORD *)v11 = qword_25693D928;
  qword_25693D928 = (uint64_t)v11;
  *(_QWORD *)(v22 + 8 * v6) = &qword_25693D928;
  if (*(_QWORD *)v11)
  {
    v24 = *(_QWORD *)(*(_QWORD *)v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v24 >= v8)
        v24 %= v8;
    }
    else
    {
      v24 &= v8 - 1;
    }
    v23 = (_QWORD *)(xmmword_25693D918 + 8 * v24);
    goto LABEL_59;
  }
LABEL_60:
  ++qword_25693D930;
LABEL_61:
  if (v11[47] < 0)
  {
    sub_23941A7F8(v63, *((void **)v11 + 3), *((_QWORD *)v11 + 4));
  }
  else
  {
    *(_OWORD *)v63 = *(_OWORD *)(v11 + 24);
    v64 = *((_QWORD *)v11 + 5);
  }
  v60 = 0x25303C233E3751;
  v25 = sub_23958E3FC((char *)&v60);
  v26 = strlen(v25);
  if (v26 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v27 = (void *)v26;
  if (v26 >= 0x17)
  {
    v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v29 = v26 | 7;
    v30 = v29 + 1;
    v28 = (void **)operator new(v29 + 1);
    __dst[1] = v27;
    v62 = v30 | 0x8000000000000000;
    __dst[0] = v28;
    goto LABEL_71;
  }
  HIBYTE(v62) = v26;
  v28 = __dst;
  if (v26)
LABEL_71:
    memmove(v28, v25, (size_t)v27);
  *((_BYTE *)v27 + (_QWORD)v28) = 0;
  v31 = (_QWORD *)operator new();
  *v31 = &off_250ADF330;
  v31[1] = v65;
  sub_23961580C((uint64_t)v67, (uint64_t)__dst, (uint64_t)v31);
  strcpy(v69, "*NOY^CDK^CED");
  v32 = sub_239510ECC((uint64_t)v69);
  v33 = strlen(v32);
  if (v33 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v34 = (void *)v33;
  if (v33 >= 0x17)
  {
    v36 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17)
      v36 = v33 | 7;
    v37 = v36 + 1;
    v35 = operator new(v36 + 1);
    v58[1] = v34;
    v59 = v37 | 0x8000000000000000;
    v58[0] = v35;
    goto LABEL_79;
  }
  HIBYTE(v59) = v33;
  v35 = v58;
  if (v33)
LABEL_79:
    memmove(v35, v32, (size_t)v34);
  *((_BYTE *)v34 + (_QWORD)v35) = 0;
  v38 = (_QWORD *)operator new();
  *v38 = &off_250ADF330;
  v38[1] = v63;
  sub_23961580C((uint64_t)v67, (uint64_t)v58, (uint64_t)v38);
  *(_OWORD *)v70 = xmmword_239F0D001;
  *(_OWORD *)&v70[11] = *(__int128 *)((char *)&xmmword_239F0D001 + 11);
  sub_2396F1974((uint64_t)v70, *(int32x4_t *)((char *)&xmmword_239F0D001 + 11), v39, v40, v41);
  v43 = v42;
  v44 = strlen(v42);
  if (v44 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v45 = (void *)v44;
  if (v44 >= 0x17)
  {
    v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v44 | 7) != 0x17)
      v47 = v44 | 7;
    v48 = v47 + 1;
    v46 = operator new(v47 + 1);
    __p[1] = v45;
    v57 = v48 | 0x8000000000000000;
    __p[0] = v46;
    goto LABEL_87;
  }
  HIBYTE(v57) = v44;
  v46 = __p;
  if (v44)
LABEL_87:
    memmove(v46, v43, (size_t)v45);
  *((_BYTE *)v45 + (_QWORD)v46) = 0;
  v49 = (_QWORD *)operator new();
  *v49 = &off_250AE0580;
  v49[1] = a1 + 2;
  sub_23961580C((uint64_t)v67, (uint64_t)__p, (uint64_t)v49);
  if ((SHIBYTE(v57) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v59) & 0x80000000) == 0)
      goto LABEL_90;
LABEL_96:
    operator delete(v58[0]);
    if ((SHIBYTE(v62) & 0x80000000) == 0)
      goto LABEL_91;
    goto LABEL_97;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v59) < 0)
    goto LABEL_96;
LABEL_90:
  if ((SHIBYTE(v62) & 0x80000000) == 0)
    goto LABEL_91;
LABEL_97:
  operator delete(__dst[0]);
LABEL_91:
  sub_2395902F0((uint64_t)v67, a2);
  if ((SHIBYTE(v64) & 0x80000000) == 0)
  {
    if ((v66 & 0x80000000) == 0)
      goto LABEL_93;
LABEL_99:
    operator delete(v65[0]);
    v50 = v68;
    if (!v68)
      goto LABEL_105;
    goto LABEL_102;
  }
  operator delete(v63[0]);
  if (v66 < 0)
    goto LABEL_99;
LABEL_93:
  v50 = v68;
  if (!v68)
    goto LABEL_105;
  do
  {
LABEL_102:
    v51 = v50[5];
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
    v50 = (_QWORD *)*v50;
  }
  while (v50);
  v52 = (void **)v68;
  if (v68)
  {
    do
    {
      v55 = (void **)*v52;
      if (*((char *)v52 + 39) < 0)
        operator delete(v52[2]);
      operator delete(v52);
      v52 = v55;
    }
    while (v55);
  }
LABEL_105:
  v53 = v67[0];
  v67[0] = 0;
  if (v53)
    operator delete(v53);
  return a2;
}

void sub_239A979E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  uint64_t v40;

  if (*(char *)(v40 - 97) < 0)
    operator delete(*(void **)(v40 - 120));
  if (*(char *)(v40 - 129) < 0)
    operator delete(*(void **)(v40 - 152));
  __cxa_guard_abort(&qword_25693D940);
  if (a39 < 0)
    operator delete(__p);
  sub_2395905C0((uint64_t)&a40);
  _Unwind_Resume(a1);
}

void sub_239A97AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if ((a21 & 0x80000000) == 0)
    JUMPOUT(0x239A97B00);
  JUMPOUT(0x239A97AC0);
}

void sub_239A97B30(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A97B54(uint64_t a1, _QWORD *a2, int a3)
{
  sub_239A97BD0(*(_QWORD *)(a1 + 8), (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239A97B90(uint64_t a1, _QWORD *a2, int a3)
{
  sub_2395A9F0C(*(_QWORD *)(a1 + 8), (uint64_t)a2, a3);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

uint64_t sub_239A97BD0(uint64_t a1, uint64_t a2, int a3)
{
  if (a3)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
  }
  else
  {
    std::ostream::operator<<();
  }
  return a2;
}

_QWORD *sub_239A97C80(int8x8_t *a1, _QWORD *a2, char a3)
{
  int8x8_t v5;
  uint64_t ***v6;
  uint64_t **v7;
  uint64_t *v8;
  uint8x8_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t **v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t **v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t **v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t **v29;
  uint64_t *v30;
  uint64_t v31;
  const char *v32;
  const char *v33;
  size_t v34;
  void *v35;
  void **v36;
  unint64_t v37;
  int8x8_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int8x16_t v42;
  double v43;
  int32x4_t v44;
  const char *v45;
  const char *v46;
  size_t v47;
  void *v48;
  void *v49;
  int8x8_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  const char *v54;
  size_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  const char *v61;
  size_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  const char *v68;
  size_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  const char *v75;
  size_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  int16x8_t v82;
  const char *v83;
  const char *v84;
  size_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  void **v93;
  void *v94;
  void **v96;
  _QWORD *v97;
  void *v98[2];
  unint64_t v99;
  void *v100[2];
  unint64_t v101;
  int v102;
  __int16 v103;
  void *v104[2];
  unint64_t v105;
  int v106;
  void *v107[2];
  unint64_t v108;
  int v109;
  void *v110[2];
  unint64_t v111;
  void *v112[2];
  unint64_t v113;
  void *__dst[2];
  unint64_t v115;
  void *__p[2];
  void *v117;
  char v118[16];
  uint64_t v119;
  __int16 v120;
  char v121;
  char v122[32];
  __int128 v123;
  uint64_t v124;

  v124 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v5 = a1[3];
  if (!*(_QWORD *)&v5 || (v6 = (uint64_t ***)a1[2], (v7 = *v6) == 0) || (v8 = *v7) == 0)
LABEL_21:
    sub_23941D898("unordered_map::at: key not found");
  v9 = (uint8x8_t)vcnt_s8(v5);
  v9.i16[0] = vaddlv_u8(v9);
  v10 = *(_QWORD *)&v5 - 1;
  if (v9.u32[0] < 2uLL)
  {
    while (1)
    {
      v11 = v8[1];
      if (v11)
      {
        if ((v11 & v10) != 0)
          goto LABEL_21;
      }
      else if (!*((_DWORD *)v8 + 4))
      {
        goto LABEL_10;
      }
      v8 = (uint64_t *)*v8;
      if (!v8)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v15 = v8[1];
    if (!v15)
      break;
    if (v15 < *(_QWORD *)&v5 || v15 % *(_QWORD *)&v5)
      goto LABEL_21;
LABEL_17:
    v8 = (uint64_t *)*v8;
    if (!v8)
      goto LABEL_21;
  }
  if (*((_DWORD *)v8 + 4))
    goto LABEL_17;
LABEL_10:
  v12 = (v5.i8[0] & 1) == 0;
  if (v9.u32[0] >= 2uLL)
    v12 = *(_QWORD *)&v5 > 1uLL;
  v13 = v6[v12];
  if (!v13 || (v14 = *v13) == 0)
LABEL_172:
    sub_23941D898("unordered_map::at: key not found");
  if (v9.u32[0] < 2uLL)
  {
    while (1)
    {
      v16 = v14[1];
      if (v16 == 1)
      {
        if (*((_DWORD *)v14 + 4) == 1)
          goto LABEL_26;
      }
      else if ((v16 & v10) != v12)
      {
        goto LABEL_172;
      }
      v14 = (uint64_t *)*v14;
      if (!v14)
        goto LABEL_172;
    }
  }
  while (2)
  {
    v18 = v14[1];
    if (v18 != 1)
    {
      if (v18 >= *(_QWORD *)&v5)
        v18 %= *(_QWORD *)&v5;
      if (v18 != v12)
        goto LABEL_172;
      goto LABEL_29;
    }
    if (*((_DWORD *)v14 + 4) != 1)
    {
LABEL_29:
      v14 = (uint64_t *)*v14;
      if (!v14)
        goto LABEL_172;
      continue;
    }
    break;
  }
LABEL_26:
  if (v9.u32[0] > 1uLL)
  {
    v17 = 2;
    if (*(_QWORD *)&v5 <= 2uLL)
      v17 = 2u % *(_QWORD *)&a1[3];
  }
  else
  {
    v17 = (v5.i8[0] - 1) & 2;
  }
  v19 = v6[v17];
  if (!v19 || (v20 = *v19) == 0)
LABEL_173:
    sub_23941D898("unordered_map::at: key not found");
  if (v9.u32[0] < 2uLL)
  {
    while (1)
    {
      v21 = v20[1];
      if (v21 == 2)
      {
        if (*((_DWORD *)v20 + 4) == 2)
          goto LABEL_45;
      }
      else if ((v21 & v10) != v17)
      {
        goto LABEL_173;
      }
      v20 = (uint64_t *)*v20;
      if (!v20)
        goto LABEL_173;
    }
  }
  while (2)
  {
    v23 = v20[1];
    if (v23 != 2)
    {
      if (v23 >= *(_QWORD *)&v5)
        v23 %= *(_QWORD *)&v5;
      if (v23 != v17)
        goto LABEL_173;
      goto LABEL_48;
    }
    if (*((_DWORD *)v20 + 4) != 2)
    {
LABEL_48:
      v20 = (uint64_t *)*v20;
      if (!v20)
        goto LABEL_173;
      continue;
    }
    break;
  }
LABEL_45:
  if (v9.u32[0] > 1uLL)
  {
    v22 = 3;
    if (*(_QWORD *)&v5 <= 3uLL)
      v22 = 3u % *(_QWORD *)&a1[3];
  }
  else
  {
    v22 = (v5.i8[0] - 1) & 3;
  }
  v24 = v6[v22];
  if (!v24 || (v25 = *v24) == 0)
LABEL_174:
    sub_23941D898("unordered_map::at: key not found");
  if (v9.u32[0] < 2uLL)
  {
    while (1)
    {
      v26 = v25[1];
      if (v26 == 3)
      {
        if (*((_DWORD *)v25 + 4) == 3)
          goto LABEL_64;
      }
      else if ((v26 & v10) != v22)
      {
        goto LABEL_174;
      }
      v25 = (uint64_t *)*v25;
      if (!v25)
        goto LABEL_174;
    }
  }
  while (2)
  {
    v28 = v25[1];
    if (v28 != 3)
    {
      if (v28 >= *(_QWORD *)&v5)
        v28 %= *(_QWORD *)&v5;
      if (v28 != v22)
        goto LABEL_174;
      goto LABEL_67;
    }
    if (*((_DWORD *)v25 + 4) != 3)
    {
LABEL_67:
      v25 = (uint64_t *)*v25;
      if (!v25)
        goto LABEL_174;
      continue;
    }
    break;
  }
LABEL_64:
  if (v9.u32[0] > 1uLL)
  {
    v27 = 4;
    if (*(_QWORD *)&v5 <= 4uLL)
      v27 = 4u % *(_QWORD *)&a1[3];
  }
  else
  {
    v27 = (v5.i8[0] - 1) & 4;
  }
  v29 = v6[v27];
  if (!v29 || (v30 = *v29) == 0)
LABEL_175:
    sub_23941D898("unordered_map::at: key not found");
  v97 = a2;
  if (v9.u32[0] < 2uLL)
  {
    while (1)
    {
      v31 = v30[1];
      if (v31 == 4)
      {
        if (*((_DWORD *)v30 + 4) == 4)
          goto LABEL_83;
      }
      else if ((v31 & v10) != v27)
      {
        goto LABEL_175;
      }
      v30 = (uint64_t *)*v30;
      if (!v30)
        goto LABEL_175;
    }
  }
  while (2)
  {
    v37 = v30[1];
    if (v37 != 4)
    {
      if (v37 >= *(_QWORD *)&v5)
        v37 %= *(_QWORD *)&v5;
      if (v37 != v27)
        goto LABEL_175;
      goto LABEL_88;
    }
    if (*((_DWORD *)v30 + 4) != 4)
    {
LABEL_88:
      v30 = (uint64_t *)*v30;
      if (!v30)
        goto LABEL_175;
      continue;
    }
    break;
  }
LABEL_83:
  v123 = xmmword_239F0BE80;
  sub_23950F8E4((uint64_t)&v123);
  v33 = v32;
  v34 = strlen(v32);
  if (v34 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v35 = (void *)v34;
  if (v34 >= 0x17)
  {
    v38 = a1;
    v39 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v34 | 7) != 0x17)
      v39 = v34 | 7;
    v40 = v39 + 1;
    v36 = (void **)operator new(v39 + 1);
    __dst[1] = v35;
    v115 = v40 | 0x8000000000000000;
    __dst[0] = v36;
    a1 = v38;
    goto LABEL_97;
  }
  HIBYTE(v115) = v34;
  v36 = __dst;
  if (v34)
LABEL_97:
    memmove(v36, v33, (size_t)v35);
  *((_BYTE *)v35 + (_QWORD)v36) = 0;
  v41 = (_QWORD *)operator new();
  *v41 = &off_250AFFE48;
  v41[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v41);
  strcpy(v122, "!L@Y~UDYUTSD~SDRNMTUHNO");
  sub_2396F1A4C((uint64_t)v122, *(int32x4_t *)"!L@Y~UDYUTSD~SDRNMTUHNO", v42, v43, v44);
  v46 = v45;
  v47 = strlen(v45);
  if (v47 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v48 = (void *)v47;
  if (v47 >= 0x17)
  {
    v50 = a1;
    v51 = (v47 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v47 | 7) != 0x17)
      v51 = v47 | 7;
    v52 = v51 + 1;
    v49 = operator new(v51 + 1);
    v112[1] = v48;
    v113 = v52 | 0x8000000000000000;
    v112[0] = v49;
    a1 = v50;
    goto LABEL_105;
  }
  HIBYTE(v113) = v47;
  v49 = v112;
  if (v47)
LABEL_105:
    memmove(v49, v46, (size_t)v48);
  *((_BYTE *)v48 + (_QWORD)v49) = 0;
  v53 = (_QWORD *)operator new();
  *v53 = &off_250AFFE48;
  v53[1] = a1 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v112, (uint64_t)v53);
  v109 = 6385422;
  v54 = sub_239A94B5C((char *)&v109);
  v55 = strlen(v54);
  if (v55 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v56 = (void *)v55;
  if (v55 >= 0x17)
  {
    v58 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v55 | 7) != 0x17)
      v58 = v55 | 7;
    v59 = v58 + 1;
    v57 = operator new(v58 + 1);
    v110[1] = v56;
    v111 = v59 | 0x8000000000000000;
    v110[0] = v57;
    goto LABEL_113;
  }
  HIBYTE(v111) = v55;
  v57 = v110;
  if (v55)
LABEL_113:
    memmove(v57, v54, (size_t)v56);
  *((_BYTE *)v56 + (_QWORD)v57) = 0;
  v60 = (_QWORD *)operator new();
  *v60 = &off_250AF30F0;
  v60[1] = (char *)v8 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v110, (uint64_t)v60);
  v106 = 526188;
  v61 = sub_239A94B5C((char *)&v106);
  v62 = strlen(v61);
  if (v62 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v63 = (void *)v62;
  if (v62 >= 0x17)
  {
    v65 = (v62 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v62 | 7) != 0x17)
      v65 = v62 | 7;
    v66 = v65 + 1;
    v64 = operator new(v65 + 1);
    v107[1] = v63;
    v108 = v66 | 0x8000000000000000;
    v107[0] = v64;
    goto LABEL_121;
  }
  HIBYTE(v108) = v62;
  v64 = v107;
  if (v62)
LABEL_121:
    memmove(v64, v61, (size_t)v63);
  *((_BYTE *)v63 + (_QWORD)v64) = 0;
  v67 = (_QWORD *)operator new();
  *v67 = &off_250AF30F0;
  v67[1] = (char *)v14 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v107, (uint64_t)v67);
  v103 = 121;
  v102 = 1719368212;
  v68 = sub_239A90C78((char *)&v102);
  v69 = strlen(v68);
  if (v69 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v70 = (void *)v69;
  if (v69 >= 0x17)
  {
    v72 = (v69 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v69 | 7) != 0x17)
      v72 = v69 | 7;
    v73 = v72 + 1;
    v71 = operator new(v72 + 1);
    v104[1] = v70;
    v105 = v73 | 0x8000000000000000;
    v104[0] = v71;
    goto LABEL_129;
  }
  HIBYTE(v105) = v69;
  v71 = v104;
  if (v69)
LABEL_129:
    memmove(v71, v68, (size_t)v70);
  *((_BYTE *)v70 + (_QWORD)v71) = 0;
  v74 = (_QWORD *)operator new();
  *v74 = &off_250AF30F0;
  v74[1] = (char *)v20 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v104, (uint64_t)v74);
  v119 = 0xB0D02100A1765;
  v121 = 0;
  v120 = 5654;
  v75 = (const char *)sub_23958E518((uint64_t)&v119);
  v76 = strlen(v75);
  if (v76 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v77 = (void *)v76;
  if (v76 >= 0x17)
  {
    v79 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v76 | 7) != 0x17)
      v79 = v76 | 7;
    v80 = v79 + 1;
    v78 = operator new(v79 + 1);
    v100[1] = v77;
    v101 = v80 | 0x8000000000000000;
    v100[0] = v78;
    goto LABEL_137;
  }
  HIBYTE(v101) = v76;
  v78 = v100;
  if (v76)
LABEL_137:
    memmove(v78, v75, (size_t)v77);
  *((_BYTE *)v77 + (_QWORD)v78) = 0;
  v81 = (_QWORD *)operator new();
  *v81 = &off_250AF30F0;
  v81[1] = (char *)v25 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v100, (uint64_t)v81);
  strcpy(v118, "R6;!\">317?7<&");
  sub_23971A32C((uint64_t)v118, v82);
  v84 = v83;
  v85 = strlen(v83);
  if (v85 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v86 = (void *)v85;
  if (v85 >= 0x17)
  {
    v88 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v85 | 7) != 0x17)
      v88 = v85 | 7;
    v89 = v88 + 1;
    v87 = operator new(v88 + 1);
    v98[1] = v86;
    v99 = v89 | 0x8000000000000000;
    v98[0] = v87;
    goto LABEL_145;
  }
  HIBYTE(v99) = v85;
  v87 = v98;
  if (v85)
LABEL_145:
    memmove(v87, v84, (size_t)v86);
  *((_BYTE *)v86 + (_QWORD)v87) = 0;
  v90 = (_QWORD *)operator new();
  *v90 = &off_250AF30F0;
  v90[1] = (char *)v30 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v98, (uint64_t)v90);
  if (SHIBYTE(v99) < 0)
  {
    operator delete(v98[0]);
    if (SHIBYTE(v101) < 0)
      goto LABEL_166;
LABEL_148:
    if ((SHIBYTE(v105) & 0x80000000) == 0)
      goto LABEL_149;
LABEL_167:
    operator delete(v104[0]);
    if (SHIBYTE(v108) < 0)
      goto LABEL_168;
LABEL_150:
    if ((SHIBYTE(v111) & 0x80000000) == 0)
      goto LABEL_151;
LABEL_169:
    operator delete(v110[0]);
    if (SHIBYTE(v113) < 0)
      goto LABEL_170;
LABEL_152:
    if (SHIBYTE(v115) < 0)
LABEL_171:
      operator delete(__dst[0]);
  }
  else
  {
    if ((SHIBYTE(v101) & 0x80000000) == 0)
      goto LABEL_148;
LABEL_166:
    operator delete(v100[0]);
    if (SHIBYTE(v105) < 0)
      goto LABEL_167;
LABEL_149:
    if ((SHIBYTE(v108) & 0x80000000) == 0)
      goto LABEL_150;
LABEL_168:
    operator delete(v107[0]);
    if (SHIBYTE(v111) < 0)
      goto LABEL_169;
LABEL_151:
    if ((SHIBYTE(v113) & 0x80000000) == 0)
      goto LABEL_152;
LABEL_170:
    operator delete(v112[0]);
    if (SHIBYTE(v115) < 0)
      goto LABEL_171;
  }
  sub_2395902F0((uint64_t)__p, v97);
  v91 = v117;
  if (v117)
  {
    do
    {
      v92 = v91[5];
      if (v92)
        (*(void (**)(uint64_t))(*(_QWORD *)v92 + 8))(v92);
      v91 = (_QWORD *)*v91;
    }
    while (v91);
    v93 = (void **)v117;
    if (v117)
    {
      do
      {
        v96 = (void **)*v93;
        if (*((char *)v93 + 39) < 0)
          operator delete(v93[2]);
        operator delete(v93);
        v93 = v96;
      }
      while (v96);
    }
  }
  v94 = __p[0];
  __p[0] = 0;
  if (v94)
    operator delete(v94);
  return v97;
}

void sub_239A9877C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,char a56)
{
  sub_2395905C0((uint64_t)&a56);
  _Unwind_Resume(a1);
}

void sub_239A988D4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A988F8(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239A9725C(*(unsigned int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A98934()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A9896C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A98990(uint64_t a1, _QWORD *a2, int a3)
{
  sub_239A97BD0(*(_QWORD *)(a1 + 8), (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A989CC()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A98A04(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A98A28(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (!*(_BYTE *)(v3 + 40))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239A991EC((uint64_t *)v3, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239A98A94(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  char *v5;
  int8x16_t v6;
  double v7;
  int32x4_t v8;
  const char *v9;
  const char *v10;
  size_t v11;
  void *v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  const char *v17;
  size_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void **v33;
  void *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  void **v41;
  unint64_t *v42;
  unint64_t v43;
  _BYTE *v44;
  __int128 v45;
  unint64_t *v46;
  unint64_t v47;
  char *v49;
  std::__shared_weak_count *v50;
  std::string v51;
  void *v52[2];
  unint64_t v53;
  void *__dst[2];
  unint64_t v55;
  char *v56;
  std::__shared_weak_count *v57;
  void *__p[2];
  void *v59;
  char v60[16];
  __int128 v61;
  int v62;
  uint64_t v63;

  v63 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  *((_BYTE *)&v51.__r_.__value_.__s + 23) = 0;
  v49 = 0;
  v50 = 0;
  v51.__r_.__value_.__s.__data_[0] = 0;
  sub_2396157EC((uint64_t)__p, a3);
  v5 = (char *)operator new(0x3C0uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_250B01B38;
  bzero(v5 + 24, 0x3A8uLL);
  *((_DWORD *)v5 + 22) = 1065353216;
  *((_OWORD *)v5 + 6) = 0u;
  *((_OWORD *)v5 + 7) = 0u;
  *((_DWORD *)v5 + 32) = 1065353216;
  *(_OWORD *)(v5 + 152) = 0u;
  *(_OWORD *)(v5 + 168) = 0u;
  *(_OWORD *)(v5 + 184) = 0u;
  *((_QWORD *)v5 + 25) = 0;
  *((_DWORD *)v5 + 52) = 1065353216;
  *(_OWORD *)(v5 + 216) = 0u;
  *(_OWORD *)(v5 + 232) = 0u;
  *((_DWORD *)v5 + 62) = 1065353216;
  *((_OWORD *)v5 + 16) = 0u;
  *((_OWORD *)v5 + 17) = 0u;
  *((_OWORD *)v5 + 18) = 0u;
  *((_OWORD *)v5 + 19) = 0u;
  *((_QWORD *)v5 + 40) = 0;
  *((_QWORD *)v5 + 41) = 0x3FF0000000000000;
  *((_QWORD *)v5 + 46) = 0;
  *((_OWORD *)v5 + 21) = 0u;
  *((_OWORD *)v5 + 22) = 0u;
  *((_DWORD *)v5 + 118) = -1;
  *((_OWORD *)v5 + 30) = 0u;
  *((_OWORD *)v5 + 31) = 0u;
  *((_DWORD *)v5 + 128) = 1065353216;
  *(_OWORD *)(v5 + 520) = 0u;
  *(_OWORD *)(v5 + 536) = 0u;
  *((_DWORD *)v5 + 138) = 1065353216;
  *((_OWORD *)v5 + 35) = 0u;
  *((_OWORD *)v5 + 36) = 0u;
  *((_OWORD *)v5 + 37) = 0u;
  *((_OWORD *)v5 + 38) = 0u;
  *((_OWORD *)v5 + 39) = 0u;
  *((_OWORD *)v5 + 40) = 0u;
  *((_OWORD *)v5 + 41) = 0u;
  *((_OWORD *)v5 + 42) = 0u;
  *((_OWORD *)v5 + 43) = 0u;
  *((_OWORD *)v5 + 44) = 0u;
  *((_OWORD *)v5 + 45) = 0u;
  *((_OWORD *)v5 + 46) = 0u;
  *((_OWORD *)v5 + 47) = 0u;
  *((_OWORD *)v5 + 48) = 0u;
  *((_OWORD *)v5 + 49) = 0u;
  *((_OWORD *)v5 + 50) = 0u;
  *((_OWORD *)v5 + 51) = 0u;
  *((_OWORD *)v5 + 52) = 0u;
  *((_DWORD *)v5 + 212) = 1065353216;
  *((_QWORD *)v5 + 107) = 0;
  *((_QWORD *)v5 + 109) = 0;
  *((_QWORD *)v5 + 108) = 0;
  v5[880] = 0;
  v56 = v5 + 24;
  v57 = (std::__shared_weak_count *)v5;
  v61 = xmmword_239F0CFBE;
  v62 = 6841683;
  sub_23958E55C((uint64_t)&v61, (int32x4_t)xmmword_239F0CFBE, v6, v7, v8);
  v10 = v9;
  v11 = strlen(v9);
  if (v11 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v12 = (void *)v11;
  if (v11 >= 0x17)
  {
    v14 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v14 = v11 | 7;
    v15 = v14 + 1;
    v13 = (void **)operator new(v14 + 1);
    __dst[1] = v12;
    v55 = v15 | 0x8000000000000000;
    __dst[0] = v13;
    goto LABEL_8;
  }
  HIBYTE(v55) = v11;
  v13 = __dst;
  if (v11)
LABEL_8:
    memmove(v13, v10, (size_t)v12);
  *((_BYTE *)v12 + (_QWORD)v13) = 0;
  v16 = (_QWORD *)operator new();
  *v16 = &off_250ADF330;
  v16[1] = &v51;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v16);
  strcpy(v60, ":I\\WeIY_T_");
  v17 = (const char *)sub_23958E518((uint64_t)v60);
  v18 = strlen(v17);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = (void *)v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    v20 = operator new(v21 + 1);
    v52[1] = v19;
    v53 = v22 | 0x8000000000000000;
    v52[0] = v20;
    goto LABEL_16;
  }
  HIBYTE(v53) = v18;
  v20 = v52;
  if (v18)
LABEL_16:
    memmove(v20, v17, (size_t)v19);
  *((_BYTE *)v19 + (_QWORD)v20) = 0;
  v23 = v56;
  v24 = (_QWORD *)operator new();
  *v24 = &off_250AF3090;
  v24[1] = v23;
  sub_23961580C((uint64_t)__p, (uint64_t)v52, (uint64_t)v24);
  if (SHIBYTE(v53) < 0)
  {
    operator delete(v52[0]);
    if ((SHIBYTE(v55) & 0x80000000) == 0)
      goto LABEL_19;
  }
  else if ((SHIBYTE(v55) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(__dst[0]);
LABEL_19:
  if (sub_23959479C((uint64_t)__p, a2))
  {
    v25 = v57;
    if (v57)
    {
      p_shared_owners = (unint64_t *)&v57->__shared_owners_;
      do
        v27 = __ldxr(p_shared_owners);
      while (__stxr(v27 + 1, p_shared_owners));
    }
    v49 = v23;
    v50 = v25;
  }
  v28 = v57;
  if (v57)
  {
    v29 = (unint64_t *)&v57->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = v59;
  if (v59)
  {
    do
    {
      v32 = v31[5];
      if (v32)
        (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
      v31 = (_QWORD *)*v31;
    }
    while (v31);
    v33 = (void **)v59;
    if (v59)
    {
      do
      {
        v41 = (void **)*v33;
        if (*((char *)v33 + 39) < 0)
          operator delete(v33[2]);
        operator delete(v33);
        v33 = v41;
      }
      while (v41);
    }
  }
  v34 = __p[0];
  __p[0] = 0;
  if (v34)
    operator delete(v34);
  if (*(_BYTE *)(v4 + 40))
  {
    if (v50)
    {
      v35 = (unint64_t *)&v50->__shared_owners_;
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 1, v35));
    }
    v37 = *(std::__shared_weak_count **)(v4 + 8);
    *(_QWORD *)v4 = v49;
    *(_QWORD *)(v4 + 8) = v50;
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    std::string::operator=((std::string *)(v4 + 16), &v51);
    if ((SHIBYTE(v51.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_47;
LABEL_61:
    operator delete(v51.__r_.__value_.__l.__data_);
    v40 = v50;
    if (!v50)
      return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
    goto LABEL_62;
  }
  *(_QWORD *)v4 = v49;
  *(_QWORD *)(v4 + 8) = v50;
  if (v50)
  {
    v42 = (unint64_t *)&v50->__shared_owners_;
    do
      v43 = __ldxr(v42);
    while (__stxr(v43 + 1, v42));
  }
  v44 = (_BYTE *)(v4 + 16);
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(v44, v51.__r_.__value_.__l.__data_, v51.__r_.__value_.__l.__size_);
  }
  else
  {
    v45 = *(_OWORD *)&v51.__r_.__value_.__l.__data_;
    *(_QWORD *)(v4 + 32) = *((_QWORD *)&v51.__r_.__value_.__l + 2);
    *(_OWORD *)v44 = v45;
  }
  *(_BYTE *)(v4 + 40) = 1;
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_61;
LABEL_47:
  v40 = v50;
  if (!v50)
    return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
LABEL_62:
  v46 = (unint64_t *)&v40->__shared_owners_;
  do
    v47 = __ldaxr(v46);
  while (__stlxr(v47 - 1, v46));
  if (!v47)
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239A99018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,char a32)
{
  uint64_t v32;
  std::__shared_weak_count *v34;
  unint64_t *p_shared_owners;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;

  v34 = *(std::__shared_weak_count **)(v32 + 8);
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(p_shared_owners);
    while (__stlxr(v36 - 1, p_shared_owners));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  if (a17 < 0)
    operator delete(__p);
  if (a11)
  {
    v37 = (unint64_t *)&a11->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239A99108(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A9912C(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  void *__p;
  char v7;

  v4 = *(_QWORD *)(a1 + 8);
  v7 = 0;
  LOBYTE(__p) = 0;
  sub_2395D3294(v4, a2, a3, 1, (uint64_t)&__p);
  if (v7 < 0)
    operator delete(__p);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A99190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239A991AC(uint64_t a1, uint64_t *a2, char a3)
{
  sub_2395D2E38(*(_QWORD *)(a1 + 8), a2, a3);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

_QWORD *sub_239A991EC(uint64_t *a1, _QWORD *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  const char *v16;
  size_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void **v26;
  void *v27;
  void **v29;
  void *v30[2];
  unint64_t v31;
  void *__dst[2];
  unint64_t v33;
  void *__p[2];
  void *v35;
  uint64_t v36;
  char v37[8];
  __int128 v38;
  int v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v38 = xmmword_239F0CFAA;
  v39 = 7764813;
  sub_23958E55C((uint64_t)&v38, (int32x4_t)xmmword_239F0CFAA, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v33 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v33) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250ADF3C0;
  v15[1] = a1 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v36 = 0x2523331F2D263340;
  strcpy(v37, ".%");
  v16 = (const char *)sub_23958E518((uint64_t)&v36);
  v17 = strlen(v16);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v18 = (void *)v17;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    v19 = operator new(v20 + 1);
    v30[1] = v18;
    v31 = v21 | 0x8000000000000000;
    v30[0] = v19;
    goto LABEL_16;
  }
  HIBYTE(v31) = v17;
  v19 = v30;
  if (v17)
LABEL_16:
    memmove(v19, v16, (size_t)v18);
  *((_BYTE *)v18 + (_QWORD)v19) = 0;
  v22 = *a1;
  v23 = (_QWORD *)operator new();
  *v23 = &off_250AF3090;
  v23[1] = v22;
  sub_23961580C((uint64_t)__p, (uint64_t)v30, (uint64_t)v23);
  if (SHIBYTE(v31) < 0)
  {
    operator delete(v30[0]);
    if ((SHIBYTE(v33) & 0x80000000) == 0)
      goto LABEL_19;
  }
  else if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(__dst[0]);
LABEL_19:
  sub_2395902F0((uint64_t)__p, a2);
  v24 = v35;
  if (v35)
  {
    do
    {
      v25 = v24[5];
      if (v25)
        (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
      v24 = (_QWORD *)*v24;
    }
    while (v24);
    v26 = (void **)v35;
    if (v35)
    {
      do
      {
        v29 = (void **)*v26;
        if (*((char *)v26 + 39) < 0)
          operator delete(v26[2]);
        operator delete(v26);
        v26 = v29;
      }
      while (v29);
    }
  }
  v27 = __p[0];
  __p[0] = 0;
  if (v27)
    operator delete(v27);
  return a2;
}

void sub_239A994C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  sub_2395905C0((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_239A9951C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A99540(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239A97C80(*(int8x8_t **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A9957C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A995B4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239A995D8(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (!*(_BYTE *)(v3 + 40))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239A991EC((uint64_t *)v3, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239A99644()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239A99678(_QWORD *a1, const std::string *a2)
{
  uint64_t v4;
  uint64_t i;
  std::string *v6;
  std::string *v7;
  _QWORD *v8;
  std::string::size_type v9;
  _BYTE *v10;
  __int128 v11;
  std::string *v12;

  v4 = a1[1];
  if (!v4)
    goto LABEL_7;
  for (i = 0; i != v4; ++i)
    *(_QWORD *)(*a1 + 8 * i) = 0;
  v6 = (std::string *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v6)
  {
    while (a2)
    {
      v6->__r_.__value_.__r.__words[2] = a2->__r_.__value_.__r.__words[2];
      std::string::operator=(v6 + 1, a2 + 1);
      v7 = (std::string *)v6->__r_.__value_.__r.__words[0];
      sub_239A997F8((uint64_t)a1, v6);
      a2 = (const std::string *)a2->__r_.__value_.__r.__words[0];
      v6 = v7;
      if (!v7)
        goto LABEL_7;
    }
    do
    {
      v12 = (std::string *)v6->__r_.__value_.__r.__words[0];
      if (SHIBYTE(v6[1].__r_.__value_.__r.__words[2]) < 0)
        operator delete(v6[1].__r_.__value_.__l.__data_);
      operator delete(v6);
      v6 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_7:
    while (a2)
    {
      v8 = operator new(0x30uLL);
      *v8 = 0;
      v8[1] = 0;
      v9 = a2->__r_.__value_.__r.__words[2];
      v8[2] = v9;
      v10 = v8 + 3;
      if (SHIBYTE(a2[1].__r_.__value_.__r.__words[2]) < 0)
      {
        sub_23941A7F8(v10, a2[1].__r_.__value_.__l.__data_, a2[1].__r_.__value_.__l.__size_);
        v9 = v8[2];
      }
      else
      {
        v11 = *(_OWORD *)&a2[1].__r_.__value_.__l.__data_;
        v8[5] = *((_QWORD *)&a2[1].__r_.__value_.__l + 2);
        *(_OWORD *)v10 = v11;
      }
      v8[1] = v9;
      sub_239A997F8((uint64_t)a1, v8);
      a2 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
  }
}

void sub_239A997B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395A0D0C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239A997F8(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  float v6;
  float v7;
  _BOOL8 v8;
  unint64_t v9;
  unint64_t v10;
  size_t prime;
  void *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  size_t v19;
  _QWORD *j;
  size_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint8x8_t v26;
  uint64_t v27;
  _QWORD *i;
  uint8x8_t v29;
  uint64_t v30;
  _QWORD *v31;
  int v32;
  _BOOL4 v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  size_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  int v43;
  _BOOL4 v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;

  v4 = a2[2];
  a2[1] = v4;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v7 = *(float *)(a1 + 32);
  if (!v5 || (float)(v7 * (float)v5) < v6)
  {
    v8 = 1;
    if (v5 >= 3)
      v8 = (v5 & (v5 - 1)) != 0;
    v9 = v8 | (2 * v5);
    v10 = vcvtps_u32_f32(v6 / v7);
    if (v9 <= v10)
      prime = v10;
    else
      prime = v9;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v5 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v5)
      goto LABEL_105;
    if (prime >= v5)
      goto LABEL_40;
    v25 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v5 < 3 || (v26 = (uint8x8_t)vcnt_s8((int8x8_t)v5), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
    {
      v25 = std::__next_prime(v25);
    }
    else
    {
      v27 = 1 << -(char)__clz(v25 - 1);
      if (v25 >= 2)
        v25 = v27;
    }
    if (prime <= v25)
      prime = v25;
    if (prime >= v5)
    {
      v5 = *(_QWORD *)(a1 + 8);
      goto LABEL_40;
    }
    if (prime)
    {
LABEL_105:
      if (prime >> 61)
        sub_239418A80();
      v12 = operator new(8 * prime);
      v13 = *(void **)a1;
      *(_QWORD *)a1 = v12;
      if (v13)
        operator delete(v13);
      v14 = 0;
      *(_QWORD *)(a1 + 8) = prime;
      do
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v14++) = 0;
      while (prime != v14);
      v16 = a1 + 16;
      v15 = *(_QWORD **)(a1 + 16);
      if (v15)
      {
        v17 = v15[1];
        v18 = prime - 1;
        if ((prime & (prime - 1)) != 0)
        {
          if (v17 >= prime)
            v17 %= prime;
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v17) = v16;
          for (i = (_QWORD *)*v15; *v15; i = (_QWORD *)*v15)
          {
            v37 = i[1];
            if (v37 >= prime)
              v37 %= prime;
            if (v37 == v17)
            {
              v15 = i;
            }
            else
            {
              v38 = i;
              if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v37))
              {
                do
                {
                  v39 = v38;
                  v38 = (_QWORD *)*v38;
                }
                while (v38 && i[2] == v38[2]);
                *v15 = v38;
                v40 = 8 * v37;
                *v39 = **(_QWORD **)(*(_QWORD *)a1 + v40);
                **(_QWORD **)(*(_QWORD *)a1 + v40) = i;
              }
              else
              {
                *(_QWORD *)(*(_QWORD *)a1 + 8 * v37) = v15;
                v15 = i;
                v17 = v37;
              }
            }
          }
        }
        else
        {
          v19 = v17 & v18;
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v19) = v16;
          for (j = (_QWORD *)*v15; *v15; j = (_QWORD *)*v15)
          {
            v21 = j[1] & v18;
            if (v21 == v19)
            {
              v15 = j;
            }
            else
            {
              v22 = j;
              if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v21))
              {
                do
                {
                  v23 = v22;
                  v22 = (_QWORD *)*v22;
                }
                while (v22 && j[2] == v22[2]);
                *v15 = v22;
                v24 = 8 * v21;
                *v23 = **(_QWORD **)(*(_QWORD *)a1 + v24);
                **(_QWORD **)(*(_QWORD *)a1 + v24) = j;
              }
              else
              {
                *(_QWORD *)(*(_QWORD *)a1 + 8 * v21) = v15;
                v15 = j;
                v19 = v21;
              }
            }
          }
        }
      }
      v5 = prime;
    }
    else
    {
      v50 = *(void **)a1;
      *(_QWORD *)a1 = 0;
      if (v50)
        operator delete(v50);
      v5 = 0;
      *(_QWORD *)(a1 + 8) = 0;
    }
  }
LABEL_40:
  v29 = (uint8x8_t)vcnt_s8((int8x8_t)v5);
  v29.i16[0] = vaddlv_u8(v29);
  if (v29.u32[0] >= 2uLL)
  {
    v41 = v4;
    if (v5 <= v4)
      v41 = v4 % v5;
    v42 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v41);
    if (!v42)
    {
      v35 = 0;
      v48 = a2[1];
      if (v48 < v5)
        goto LABEL_78;
      goto LABEL_77;
    }
    v43 = 0;
    do
    {
      v35 = v42;
      v42 = (_QWORD *)*v42;
      if (!v42)
        break;
      v46 = v42[1];
      v47 = v46;
      if (v46 >= v5)
        v47 = v46 % v5;
      if (v47 != v41)
        break;
      v44 = v46 == v4 && v42[2] == a2[2];
      v45 = v43 & !v44;
      v43 |= v44;
    }
    while (v45 != 1);
  }
  else
  {
    v30 = (v5 - 1) & v4;
    v31 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v30);
    if (!v31)
    {
      v35 = 0;
      v48 = a2[1];
      goto LABEL_75;
    }
    v32 = 0;
    do
    {
      v35 = v31;
      v31 = (_QWORD *)*v31;
      if (!v31)
        break;
      v36 = v31[1];
      if ((v36 & (v5 - 1)) != v30)
        break;
      v33 = v36 == v4 && v31[2] == a2[2];
      v34 = v32 & !v33;
      v32 |= v33;
    }
    while ((v34 & 1) == 0);
  }
  v48 = a2[1];
  if (v29.u32[0] <= 1uLL)
  {
LABEL_75:
    v48 &= v5 - 1;
    goto LABEL_78;
  }
  if (v48 >= v5)
LABEL_77:
    v48 %= v5;
LABEL_78:
  if (!v35)
  {
    *a2 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = a2;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v48) = a1 + 16;
    if (!*a2)
      goto LABEL_92;
    v49 = *(_QWORD *)(*a2 + 8);
    if (v29.u32[0] > 1uLL)
    {
      if (v49 >= v5)
        v49 %= v5;
    }
    else
    {
      v49 &= v5 - 1;
    }
LABEL_91:
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v49) = a2;
    goto LABEL_92;
  }
  *a2 = *v35;
  *v35 = a2;
  if (*a2)
  {
    v49 = *(_QWORD *)(*a2 + 8);
    if (v29.u32[0] > 1uLL)
    {
      if (v49 >= v5)
        v49 %= v5;
    }
    else
    {
      v49 &= v5 - 1;
    }
    if (v49 != v48)
      goto LABEL_91;
  }
LABEL_92:
  ++*(_QWORD *)(a1 + 24);
}

void sub_239A99CE8(void **__p)
{
  void **v2;

  do
  {
    v2 = (void **)*__p;
    if (*((char *)__p + 47) < 0)
      operator delete(__p[3]);
    operator delete(__p);
    __p = v2;
  }
  while (v2);
}

void sub_239A99D30(uint64_t a1, const std::__fs::filesystem::path *a2)
{
  const std::__fs::filesystem::path *v2;
  uint64_t *v3;
  std::__fs::filesystem::path::__string_view v4;
  void **p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v6;
  std::basic_string_view<_CharT, _Traits>::size_type v7;
  void **v8;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  int v27;
  void *__p[2];
  _BYTE v29[7];
  char v30;
  void *v31[2];
  char v32;
  __int128 v33;
  uint64_t v34;
  void *v35[2];
  __int128 v36;
  int v37;
  void **__dst;
  void *size;
  unint64_t v40;

  if (!*(_BYTE *)(a1 + 4))
  {
    sub_239A444D4((uint64_t)"unknown file", 537, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v2 = a2;
  *(_OWORD *)v35 = 0u;
  v36 = 0u;
  v37 = 1065353216;
  if (a2)
  {
    v3 = (uint64_t *)(a1 + 248);
    while (1)
    {
      v4 = std::__fs::filesystem::path::__filename(v2 + 1);
      if (v4.__size_ >= 0x7FFFFFFFFFFFFFF8)
        sub_23941A5AC();
      if (v4.__size_ >= 0x17)
      {
        v6 = (v4.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v4.__size_ | 7) != 0x17)
          v6 = v4.__size_ | 7;
        v7 = v6 + 1;
        p_dst = (void **)operator new(v6 + 1);
        size = (void *)v4.__size_;
        v40 = v7 | 0x8000000000000000;
        __dst = p_dst;
      }
      else
      {
        HIBYTE(v40) = v4.__size_;
        p_dst = (void **)&__dst;
        if (!v4.__size_)
          goto LABEL_14;
      }
      memmove(p_dst, v4.__data_, v4.__size_);
LABEL_14:
      *((_BYTE *)p_dst + v4.__size_) = 0;
      v8 = __dst;
      v27 = v40;
      HIBYTE(v27) = BYTE3(v40);
      v9 = SHIBYTE(v40);
      if (SHIBYTE(v40) < 0)
      {
        sub_23941A7F8(__p, __dst, (unint64_t)size);
      }
      else
      {
        __p[0] = __dst;
        __p[1] = size;
        *(_DWORD *)v29 = v27;
        *(_DWORD *)&v29[3] = *(_DWORD *)((char *)&v40 + 3);
        v30 = HIBYTE(v40);
      }
      sub_2395ACAA8((uint64_t)__p, (char *)v31);
      sub_2396F2748(&v33, v3, (uint64_t)v31);
      v10 = sub_239A9A10C((uint64_t)v35, v2->__pn_.__r_.__value_.__r.__words[2], &v2->__pn_.__r_.__value_.__r.__words[2]);
      v11 = v10;
      v13 = (void **)(v10 + 3);
      v12 = v10[3];
      if (v12)
      {
        v14 = v10[4];
        v15 = (void *)v10[3];
        if (v14 != v12)
        {
          do
          {
            if (*(char *)(v14 - 1) < 0)
              operator delete(*(void **)(v14 - 24));
            v14 -= 24;
          }
          while (v14 != v12);
          v15 = *v13;
        }
        v11[4] = v12;
        operator delete(v15);
        *v13 = 0;
        v13[1] = 0;
        v13[2] = 0;
      }
      *(_OWORD *)(v11 + 3) = v33;
      v11[5] = v34;
      v34 = 0;
      v33 = 0uLL;
      if (v32 < 0)
      {
        operator delete(v31[0]);
        if (v30 < 0)
          goto LABEL_4;
LABEL_29:
        if ((v9 & 0x80000000) == 0)
          goto LABEL_5;
LABEL_30:
        operator delete(v8);
        v2 = (const std::__fs::filesystem::path *)v2->__pn_.__r_.__value_.__r.__words[0];
        if (!v2)
          break;
      }
      else
      {
        if ((v30 & 0x80000000) == 0)
          goto LABEL_29;
LABEL_4:
        operator delete(__p[0]);
        if (v9 < 0)
          goto LABEL_30;
LABEL_5:
        v2 = (const std::__fs::filesystem::path *)v2->__pn_.__r_.__value_.__r.__words[0];
        if (!v2)
          break;
      }
    }
  }
  if (*(_BYTE *)(a1 + 1080))
  {
    sub_239A71290(a1 + 1040, (uint64_t *)v35);
    v16 = (_QWORD *)v36;
    if (!(_QWORD)v36)
      goto LABEL_41;
    goto LABEL_47;
  }
  v17 = v35[0];
  v18 = (unint64_t)v35[1];
  v35[0] = 0;
  v35[1] = 0;
  *(_QWORD *)(a1 + 1040) = v17;
  *(_QWORD *)(a1 + 1048) = v18;
  v19 = *((_QWORD *)&v36 + 1);
  v16 = (_QWORD *)v36;
  *(_QWORD *)(a1 + 1056) = v36;
  *(_QWORD *)(a1 + 1064) = v19;
  *(_DWORD *)(a1 + 1072) = v37;
  if (v19)
  {
    v20 = v16[1];
    if ((v18 & (v18 - 1)) != 0)
    {
      if (v20 >= v18)
        v20 %= v18;
    }
    else
    {
      v20 &= v18 - 1;
    }
    v16 = 0;
    v17[v20] = a1 + 1056;
    v36 = 0uLL;
  }
  *(_BYTE *)(a1 + 1080) = 1;
  if (v16)
  {
    do
    {
LABEL_47:
      v23 = (_QWORD *)*v16;
      v24 = v16[3];
      if (v24)
      {
        v25 = v16[4];
        v22 = (void *)v16[3];
        if (v25 != v24)
        {
          do
          {
            if (*(char *)(v25 - 1) < 0)
              operator delete(*(void **)(v25 - 24));
            v25 -= 24;
          }
          while (v25 != v24);
          v22 = (void *)v16[3];
        }
        v16[4] = v24;
        operator delete(v22);
      }
      operator delete(v16);
      v16 = v23;
    }
    while (v23);
  }
LABEL_41:
  v21 = v35[0];
  v35[0] = 0;
  if (v21)
    operator delete(v21);
}

void sub_239A9A090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  void *v27;

  operator delete(v27);
  sub_239A8E020((uint64_t)&a27);
  _Unwind_Resume(a1);
}

_QWORD *sub_239A9A10C(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t prime;
  int8x8_t v20;
  unint64_t v21;
  uint8x8_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;

  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (v10[2] == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (v10[2] == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v13 = (_QWORD *)(a1 + 16);
  v10 = operator new(0x30uLL);
  *v10 = 0;
  v10[1] = a2;
  v10[2] = *a3;
  sub_2396F2654(v10 + 3);
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v7 || (float)(v15 * (float)v7) < v14)
  {
    v16 = 1;
    if (v7 >= 3)
      v16 = (v7 & (v7 - 1)) != 0;
    v17 = v16 | (2 * v7);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      prime = v18;
    else
      prime = v17;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v20 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v20)
      goto LABEL_34;
    if (prime < *(_QWORD *)&v20)
    {
      v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v20 < 3uLL || (v22 = (uint8x8_t)vcnt_s8(v20), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        v21 = std::__next_prime(v21);
      }
      else
      {
        v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2)
          v21 = v23;
      }
      if (prime <= v21)
        prime = v21;
      if (prime < *(_QWORD *)&v20)
LABEL_34:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= a2)
        v3 = a2 % v7;
      else
        v3 = a2;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
  }
  v24 = *(_QWORD *)a1;
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v25)
  {
    *v10 = *v25;
LABEL_58:
    *v25 = v10;
    goto LABEL_59;
  }
  *v10 = *v13;
  *v13 = v10;
  *(_QWORD *)(v24 + 8 * v3) = v13;
  if (*v10)
  {
    v26 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v26 >= v7)
        v26 %= v7;
    }
    else
    {
      v26 &= v7 - 1;
    }
    v25 = (_QWORD *)(*(_QWORD *)a1 + 8 * v26);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239A9A3F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239A8E0C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239A9A408(_QWORD *a1, uint64_t a2, unint64_t __val, uint64_t a4, int a5)
{
  int v9;
  std::string::size_type v10;
  const std::string::value_type *v11;
  std::string v12;
  std::string v13;

  std::to_string(&v13, __val);
  v9 = *(char *)(a4 + 23);
  if (v9 >= 0)
    v10 = *(unsigned __int8 *)(a4 + 23);
  else
    v10 = *(_QWORD *)(a4 + 8);
  if (v10)
  {
    if (v9 >= 0)
      v11 = (const std::string::value_type *)a4;
    else
      v11 = *(const std::string::value_type **)a4;
    std::string::append(&v13, v11, v10);
  }
  if (a5)
  {
    sub_2395ACAA8((uint64_t)&v13, (char *)&v12);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v13.__r_.__value_.__l.__data_);
    v13 = v12;
  }
  sub_2396F2748(a1, (uint64_t *)(a2 + 200), (uint64_t)&v13);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
}

void sub_239A9A4C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239A9A4E8(uint64_t a1, void *__val, uint64_t *a3)
{
  void **v6;
  std::string *v7;
  std::string *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19[2];
  void *__p[2];
  char v21;
  void *v22;
  std::string *v23;
  _QWORD v24[3];
  _QWORD *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a1 + 4) || *(_DWORD *)a1)
  {
    v21 = 4;
    strcpy((char *)__p, ".jpg");
    sub_239A9A408(&v22, a1, (unint64_t)__val, (uint64_t)__p, 1);
    if (v21 < 0)
      operator delete(__p[0]);
    if (!*(_BYTE *)(a1 + 1032))
      sub_2394875CC();
    __p[0] = __val;
    v6 = (void **)(sub_239A9A754(a1 + 992, (unint64_t)__val, __p) + 3);
    if (v6 != &v22)
      sub_239A70694((uint64_t)v6, (std::string *)v22, v23, 0xAAAAAAAAAAAAAAABLL * (((char *)v23 - (_BYTE *)v22) >> 3));
    v7 = (std::string *)v22;
    if (v22)
    {
      v8 = v23;
      v9 = v22;
      if (v23 != v22)
      {
        do
        {
          if (SHIBYTE(v8[-1].__r_.__value_.__r.__words[2]) < 0)
            operator delete(v8[-1].__r_.__value_.__l.__data_);
          --v8;
        }
        while (v8 != v7);
        v9 = v22;
      }
      v23 = v7;
      operator delete(v9);
    }
  }
  v10 = *(_QWORD *)(a1 + 1792);
  v11 = *a3;
  v12 = (std::__shared_weak_count *)a3[1];
  v19[0] = v11;
  v19[1] = (uint64_t)v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
  }
  v24[0] = &off_250AF31B0;
  v25 = v24;
  sub_239A9AA50(v10, v19, (uint64_t)__val, v24);
  v15 = v25;
  if (v25 == v24)
  {
    v16 = 4;
    v15 = v24;
  }
  else
  {
    if (!v25)
      goto LABEL_24;
    v16 = 5;
  }
  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_24:
  if (v12)
  {
    v17 = (unint64_t *)&v12->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239A9A6E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_23941A260(&a18);
  _Unwind_Resume(a1);
}

_QWORD *sub_239A9A754(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t prime;
  int8x8_t v20;
  unint64_t v21;
  uint8x8_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;

  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (v10[2] == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (v10[2] == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v13 = (_QWORD *)(a1 + 16);
  v10 = operator new(0x30uLL);
  *v10 = 0;
  v10[1] = a2;
  v10[2] = *a3;
  sub_2396F2654(v10 + 3);
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v7 || (float)(v15 * (float)v7) < v14)
  {
    v16 = 1;
    if (v7 >= 3)
      v16 = (v7 & (v7 - 1)) != 0;
    v17 = v16 | (2 * v7);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      prime = v18;
    else
      prime = v17;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v20 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v20)
      goto LABEL_34;
    if (prime < *(_QWORD *)&v20)
    {
      v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v20 < 3uLL || (v22 = (uint8x8_t)vcnt_s8(v20), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        v21 = std::__next_prime(v21);
      }
      else
      {
        v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2)
          v21 = v23;
      }
      if (prime <= v21)
        prime = v21;
      if (prime < *(_QWORD *)&v20)
LABEL_34:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= a2)
        v3 = a2 % v7;
      else
        v3 = a2;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
  }
  v24 = *(_QWORD *)a1;
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v25)
  {
    *v10 = *v25;
LABEL_58:
    *v25 = v10;
    goto LABEL_59;
  }
  *v10 = *v13;
  *v13 = v10;
  *(_QWORD *)(v24 + 8 * v3) = v13;
  if (*v10)
  {
    v26 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v26 >= v7)
        v26 %= v7;
    }
    else
    {
      v26 &= v7 - 1;
    }
    v25 = (_QWORD *)(*(_QWORD *)a1 + 8 * v26);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239A9AA3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239A8E0C4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239A9AA50(uint64_t a1, uint64_t *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v22;
  uint64_t v23[2];
  std::__shared_weak_count *v24;
  char v25;
  _BYTE v26[24];
  _BYTE *v27;
  _QWORD v28[34];

  v28[33] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 337, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v4 = *a2;
  if (*a2)
  {
    v23[0] = a3;
    v23[1] = v4;
    v6 = (std::__shared_weak_count *)a2[1];
    v24 = v6;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
    }
    v25 = 0;
    v9 = v26;
    v10 = a4[3];
    if (v10)
    {
      if ((_QWORD *)v10 == a4)
      {
        v27 = v26;
        (*(void (**)(_QWORD *, _BYTE *))(*a4 + 24))(a4, v26);
LABEL_13:
        sub_239A846A8((uint64_t)v28, v23);
        v13 = operator new(0x120uLL);
        v13[1] = 0;
        v13[2] = 0;
        *v13 = &off_250AF8128;
        *(_QWORD *)&v22 = sub_239A82C70((uint64_t)(v13 + 3), (uint64_t)v28);
        *((_QWORD *)&v22 + 1) = v13;
        sub_239A82E8C(v28);
        if (v27 == v26)
        {
          v14 = 4;
        }
        else
        {
          if (!v27)
            goto LABEL_18;
          v14 = 5;
          v9 = v27;
        }
        (*(void (**)(_QWORD *))(*v9 + 8 * v14))(v9);
LABEL_18:
        v15 = v24;
        if (v24)
        {
          v16 = (unint64_t *)&v24->__shared_owners_;
          do
            v17 = __ldaxr(v16);
          while (__stlxr(v17 - 1, v16));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
        v12 = sub_239A7FF28(*(unsigned int **)(a1 + 288), &v22);
        v18 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
        if (*((_QWORD *)&v22 + 1))
        {
          v19 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        return v12;
      }
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 16))(v10);
    }
    v27 = (_BYTE *)v10;
    goto LABEL_13;
  }
  LOBYTE(v28[0]) = 0;
  v11 = a4[3];
  if (!v11)
    sub_2394172E0();
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v11 + 48))(v11, v28);
  return 1;
}

void sub_239A9AC6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

void sub_239A9AC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239A4D7C0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239A9AC94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_239A82E8C((uint64_t *)va1);
  sub_239A83110((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239A9ACBC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239A9ACD0()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF31B0;
  return result;
}

void sub_239A9ACF4(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF31B0;
}

void sub_239A9AD10(uint64_t a1, void *__val, uint64_t *a3)
{
  void **v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::string *v28;
  std::string *v29;
  void *v30;
  std::__shared_weak_count *v31;
  void *v32;
  std::string *v33;
  __int128 v34;
  _QWORD v35[3];
  _QWORD *v36;
  uint64_t v37[2];
  std::__shared_weak_count *v38;
  char v39;
  _QWORD v40[3];
  _QWORD *v41;
  void *__p[2];
  char v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a1 + 4) && !*(_DWORD *)a1)
  {
    sub_239A444D4((uint64_t)"unknown file", 585, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v43 = 4;
  strcpy((char *)__p, ".jpg");
  sub_239A9A408(&v32, a1, (unint64_t)__val, (uint64_t)__p, 1);
  if (v43 < 0)
    operator delete(__p[0]);
  if (!*(_BYTE *)(a1 + 1032))
    sub_2394875CC();
  __p[0] = __val;
  v6 = (void **)(sub_239A9A754(a1 + 992, (unint64_t)__val, __p) + 3);
  if (v6 != &v32)
    sub_239A70694((uint64_t)v6, (std::string *)v32, v33, 0xAAAAAAAAAAAAAAABLL * (((char *)v33 - (_BYTE *)v32) >> 3));
  v7 = *(_QWORD *)(a1 + 1808);
  v9 = *a3;
  v8 = (std::__shared_weak_count *)a3[1];
  v31 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v35[0] = &off_250AF3230;
  v36 = v35;
  if (!*(_QWORD *)(v7 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 337, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (!v9)
  {
    v16 = v35;
    v17 = 4;
LABEL_42:
    (*(void (**)(void))(*v16 + 8 * v17))();
    goto LABEL_43;
  }
  v37[0] = (uint64_t)__val;
  v37[1] = v9;
  v38 = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v14 = (uint64_t)v36;
    v39 = 0;
    v15 = v40;
    if (!v36)
      goto LABEL_19;
    if (v36 != v35)
    {
      v14 = (*(uint64_t (**)(void))(*v36 + 16))();
LABEL_19:
      v41 = (_QWORD *)v14;
      goto LABEL_23;
    }
  }
  else
  {
    v39 = 0;
    v15 = v40;
  }
  v41 = v40;
  sub_239A9B1B0((uint64_t)v35, v40);
LABEL_23:
  sub_239A8AD20((uint64_t)__p, v37);
  v18 = operator new(0x120uLL);
  v18[1] = 0;
  v18[2] = 0;
  *v18 = &off_250AF31F8;
  *(_QWORD *)&v34 = sub_239A895A8((uint64_t)(v18 + 3), (uint64_t)__p);
  *((_QWORD *)&v34 + 1) = v18;
  sub_239A82E8C(__p);
  if (v41 == v40)
  {
    v19 = 4;
    goto LABEL_27;
  }
  if (v41)
  {
    v19 = 5;
    v15 = v41;
LABEL_27:
    (*(void (**)(_QWORD *))(*v15 + 8 * v19))(v15);
  }
  v20 = v38;
  if (v38)
  {
    v21 = (unint64_t *)&v38->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  sub_239A869D0(*(unsigned int **)(v7 + 288), &v34);
  v23 = (std::__shared_weak_count *)*((_QWORD *)&v34 + 1);
  if (*((_QWORD *)&v34 + 1))
  {
    v24 = (unint64_t *)(*((_QWORD *)&v34 + 1) + 8);
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  v16 = v36;
  if (v36 == v35)
  {
    v17 = 4;
    v16 = v35;
    goto LABEL_42;
  }
  if (v36)
  {
    v17 = 5;
    goto LABEL_42;
  }
LABEL_43:
  if (v31)
  {
    v26 = (unint64_t *)&v31->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v28 = (std::string *)v32;
  if (v32)
  {
    v29 = v33;
    v30 = v32;
    if (v33 != v32)
    {
      do
      {
        if (SHIBYTE(v29[-1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v29[-1].__r_.__value_.__l.__data_);
        --v29;
      }
      while (v29 != v28);
      v30 = v32;
    }
    v33 = v28;
    operator delete(v30);
  }
}

void sub_239A9B0C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char *a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  uint64_t v34;
  char *v36;
  uint64_t v37;

  sub_239A4D7C0(v34);
  v36 = a20;
  if (a20 == &a17)
  {
    v37 = 4;
    v36 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_6;
    v37 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v36 + 8 * v37))();
LABEL_6:
  sub_239A4D7C0((uint64_t)&a10);
  sub_23941A260(&a12);
  _Unwind_Resume(a1);
}

void sub_239A9B178()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239A9B18C()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF3230;
  return result;
}

void sub_239A9B1B0(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF3230;
}

uint64_t sub_239A9B1CC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t (***v4)();
  uint64_t v5;
  int v6;
  int v7;
  uint64_t (***v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  _QWORD *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t (***v32)();
  uint64_t v33;
  int v34;
  int v35;
  uint64_t (***v36)();
  uint64_t v37;
  void *__p[2];
  uint64_t v39;
  uint64_t v40[2];
  char v41;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t (*v44)(uint64_t, _QWORD *);
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  pthread_cond_t v51;
  pthread_cond_t v52;
  pthread_mutex_t v53;
  uint64_t (**v54)();
  uint64_t (**v55)(uint64_t, _QWORD *);
  char *v56;
  uint64_t (***v57)();
  uint64_t v58;

  v1 = result;
  v58 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(result + 4) && !*(_DWORD *)result)
    return result;
  v2 = *(_QWORD *)(result + 1808);
  if (*(_QWORD *)(v2 + 200))
  {
    LOBYTE(v42[0]) = 0;
    v45 = 0u;
    v46 = 0u;
    v47 = 0u;
    v48 = 0;
    v49 = 0;
    v50 = 0;
    sub_2397A1618(&v53);
    LODWORD(v44) = 0x7FFFFFFF;
    pthread_cond_init(&v51, 0);
    pthread_cond_init(&v52, 0);
    v54 = &off_250AF3278;
    v55 = &v44;
    v56 = (char *)v42;
    v57 = &v54;
    v3 = sub_239A9BB24(v2, &v54);
    v4 = v57;
    if (v57 == &v54)
    {
      v5 = 4;
      v4 = &v54;
    }
    else
    {
      if (!v57)
      {
LABEL_9:
        if (v3)
        {
          sub_2395BFB54((unsigned int *)&v44);
          sub_2395C2A4C((uint64_t)&v44);
        }
        sub_2395C29C4((uint64_t)&v44);
        v2 = *(_QWORD *)(v1 + 1808);
        goto LABEL_12;
      }
      v5 = 5;
    }
    (*v4)[v5]();
    goto LABEL_9;
  }
LABEL_12:
  LODWORD(v44) = 0x7FFFFFFF;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v48 = 0;
  v49 = 0;
  v50 = 0;
  sub_2397A1618(&v53);
  v6 = (int)v44;
  if (v44 > 0x7FFFFFFE)
  {
    v6 = 0x7FFFFFFF;
  }
  else if (v44 < 2)
  {
    v6 = 1;
  }
  LODWORD(v44) = v6;
  pthread_cond_init(&v51, 0);
  pthread_cond_init(&v52, 0);
  v54 = &off_250AF32C0;
  v55 = &v44;
  v57 = &v54;
  v7 = sub_239A9BE40(v2, &v54);
  v8 = v57;
  if (v57 == &v54)
  {
    v9 = 4;
    v8 = &v54;
  }
  else
  {
    if (!v57)
      goto LABEL_21;
    v9 = 5;
  }
  (*v8)[v9]();
LABEL_21:
  if (v7)
  {
    sub_2395BFB54((unsigned int *)&v44);
    sub_2395C2A4C((uint64_t)&v44);
  }
  result = sub_2395C29C4((uint64_t)&v44);
  if (*(_BYTE *)(v1 + 4) || *(_DWORD *)v1 >= 2u)
  {
    v10 = *(_QWORD *)(v1 + 1792);
    if (*(_QWORD *)(v10 + 200))
    {
      LOBYTE(v54) = 0;
      v44 = sub_239A9C128;
      *(_QWORD *)&v45 = 0;
      *((_QWORD *)&v45 + 1) = v10;
      sub_239A9C444((uint64_t)&v44, (uint64_t)&v54);
      v10 = *(_QWORD *)(v1 + 1792);
    }
    v44 = sub_239A9C608;
    *(_QWORD *)&v45 = 0;
    *((_QWORD *)&v45 + 1) = v10;
    result = sub_239A9C8F0((uint64_t)&v44);
    if (*(_BYTE *)(v1 + 4) || *(_DWORD *)v1 >= 2u)
    {
      v11 = *(uint64_t **)(v1 + 1840);
      v12 = (_QWORD *)v11[2];
      v13 = v12[1];
      if (*v12 == v13)
        goto LABEL_53;
      sub_239A6EB88((uint64_t)v11, (const void **)(v13 - 56));
      v14 = *v11;
      v15 = (std::__shared_weak_count *)v11[3];
      v40[0] = v11[2];
      v40[1] = (uint64_t)v15;
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
      }
      if (*(char *)(v13 - 33) < 0)
      {
        sub_23941A7F8(__p, *(void **)(v13 - 56), *(_QWORD *)(v13 - 48));
      }
      else
      {
        v18 = *(_OWORD *)(v13 - 56);
        v39 = *(_QWORD *)(v13 - 40);
        *(_OWORD *)__p = v18;
      }
      v42[0] = &off_250AF2C98;
      v43 = v42;
      sub_239A6ED78(v14, v40, (uint64_t)__p, v42);
      v21 = v43;
      if (v43 == v42)
      {
        v22 = 4;
        v21 = v42;
      }
      else
      {
        if (!v43)
        {
LABEL_41:
          if (SHIBYTE(v39) < 0)
            operator delete(__p[0]);
          if (v15)
          {
            v23 = (unint64_t *)&v15->__shared_owners_;
            do
              v24 = __ldaxr(v23);
            while (__stlxr(v24 - 1, v23));
            if (!v24)
            {
              ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
              std::__shared_weak_count::__release_weak(v15);
            }
          }
          v25 = operator new(0x30uLL);
          v25[1] = 0;
          v25[2] = 0;
          *v25 = &off_250AF2C18;
          v25[4] = 0;
          v25[5] = 0;
          v25[3] = 0;
          v26 = (std::__shared_weak_count *)v11[3];
          v11[2] = (uint64_t)(v25 + 3);
          v11[3] = (uint64_t)v25;
          if (v26)
          {
            v27 = (unint64_t *)&v26->__shared_owners_;
            do
              v28 = __ldaxr(v27);
            while (__stlxr(v28 - 1, v27));
            if (!v28)
            {
              ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
              std::__shared_weak_count::__release_weak(v26);
            }
          }
LABEL_53:
          v29 = *v11;
          if (!*(_QWORD *)(*v11 + 200))
            goto LABEL_66;
          v41 = 0;
          LODWORD(v44) = 0x7FFFFFFF;
          v45 = 0u;
          v46 = 0u;
          v47 = 0u;
          v48 = 0;
          v49 = 0;
          v50 = 0;
          sub_2397A1618(&v53);
          v30 = (int)v44;
          if (v44 > 0x7FFFFFFE)
          {
            v30 = 0x7FFFFFFF;
          }
          else if (v44 < 2)
          {
            v30 = 1;
          }
          LODWORD(v44) = v30;
          pthread_cond_init(&v51, 0);
          pthread_cond_init(&v52, 0);
          v54 = &off_250AF2CE0;
          v55 = &v44;
          v56 = &v41;
          v57 = &v54;
          v31 = sub_239A70A0C(v29, &v54);
          v32 = v57;
          if (v57 == &v54)
          {
            v33 = 4;
            v32 = &v54;
          }
          else
          {
            if (!v57)
            {
LABEL_63:
              if (v31)
              {
                sub_2395BFB54((unsigned int *)&v44);
                sub_2395C2A4C((uint64_t)&v44);
              }
              sub_2395C29C4((uint64_t)&v44);
              v29 = *v11;
LABEL_66:
              LODWORD(v44) = 0x7FFFFFFF;
              v45 = 0u;
              v46 = 0u;
              v47 = 0u;
              v48 = 0;
              v49 = 0;
              v50 = 0;
              sub_2397A1618(&v53);
              v34 = (int)v44;
              if (v44 > 0x7FFFFFFE)
              {
                v34 = 0x7FFFFFFF;
              }
              else if (v44 < 2)
              {
                v34 = 1;
              }
              LODWORD(v44) = v34;
              pthread_cond_init(&v51, 0);
              pthread_cond_init(&v52, 0);
              v54 = &off_250AF2D28;
              v55 = &v44;
              v57 = &v54;
              v35 = sub_239A70D18(v29, &v54);
              v36 = v57;
              if (v57 == &v54)
              {
                v37 = 4;
                v36 = &v54;
              }
              else
              {
                if (!v57)
                {
LABEL_75:
                  if (v35)
                  {
                    sub_2395BFB54((unsigned int *)&v44);
                    sub_2395C2A4C((uint64_t)&v44);
                  }
                  return sub_2395C29C4((uint64_t)&v44);
                }
                v37 = 5;
              }
              (*v36)[v37]();
              goto LABEL_75;
            }
            v33 = 5;
          }
          (*v32)[v33]();
          goto LABEL_63;
        }
        v22 = 5;
      }
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v21 + 8 * v22))(v21, v19, v20);
      goto LABEL_41;
    }
  }
  return result;
}

void sub_239A9B7D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  std::__shared_weak_count *v29;
  unint64_t *p_shared_owners;
  unint64_t v32;

  if (v29)
  {
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v32 = __ldaxr(p_shared_owners);
    while (__stlxr(v32 - 1, p_shared_owners));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239A9BB24(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 654, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 100;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v24 = v3;
    goto LABEL_12;
  }
  v24 = &v23;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF31F8;
  *(_QWORD *)&v12 = sub_239A895A8((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239A869D0(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239A9BD28(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239A9BD34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  if (a43 == v46)
  {
    v48 = 4;
  }
  else
  {
    if (!a43)
      goto LABEL_6;
    v48 = 5;
    v46 = a43;
  }
  (*(void (**)(_QWORD *))(*v46 + 8 * v48))(v46);
LABEL_6:
  if (a39 == v45)
  {
    v49 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_11;
    v49 = 5;
    v45 = a39;
  }
  (*(void (**)(_QWORD *))(*v45 + 8 * v49))(v45);
LABEL_11:
  sub_239A8303C(v44);
  sub_239A83110(v43);
  v50 = a20;
  if (a20 == &a17)
  {
    v51 = 4;
    v50 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_16;
    v51 = 5;
  }
  (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_16:
  v52 = a14;
  if (a14 == &a11)
  {
    v53 = 4;
    v52 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v53 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v52 + 8 * v53))();
  _Unwind_Resume(a1);
}

uint64_t sub_239A9BE40(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 647, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 99;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v23 = v3;
    goto LABEL_12;
  }
  v23 = &v22;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v24 = 0;
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF31F8;
  *(_QWORD *)&v12 = sub_239A895A8((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239A869D0(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239A9C040(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239A9C04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39)
{
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  if (a39 == v41)
  {
    v43 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_6;
    v43 = 5;
    v41 = a39;
  }
  (*(void (**)(_QWORD *))(*v41 + 8 * v43))(v41);
LABEL_6:
  sub_239A8303C(v40);
  sub_239A83110(v39);
  v44 = a20;
  if (a20 == &a17)
  {
    v45 = 4;
    v44 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_11;
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
LABEL_11:
  v46 = a14;
  if (a14 == &a11)
  {
    v47 = 4;
    v46 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v47 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v46 + 8 * v47))();
  _Unwind_Resume(a1);
}

uint64_t sub_239A9C128(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 654, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 100;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v24 = v3;
    goto LABEL_12;
  }
  v24 = &v23;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8128;
  *(_QWORD *)&v12 = sub_239A82C70((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239A7FF28(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239A9C32C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239A9C338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  if (a43 == v46)
  {
    v48 = 4;
  }
  else
  {
    if (!a43)
      goto LABEL_6;
    v48 = 5;
    v46 = a43;
  }
  (*(void (**)(_QWORD *))(*v46 + 8 * v48))(v46);
LABEL_6:
  if (a39 == v45)
  {
    v49 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_11;
    v49 = 5;
    v45 = a39;
  }
  (*(void (**)(_QWORD *))(*v45 + 8 * v49))(v45);
LABEL_11:
  sub_239A8303C(v44);
  sub_239A83110(v43);
  v50 = a20;
  if (a20 == &a17)
  {
    v51 = 4;
    v50 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_16;
    v51 = 5;
  }
  (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_16:
  v52 = a14;
  if (a14 == &a11)
  {
    v53 = 4;
    v52 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v53 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v52 + 8 * v53))();
  _Unwind_Resume(a1);
}

uint64_t sub_239A9C444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, _QWORD *);
  _QWORD *v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  pthread_cond_t v18;
  pthread_cond_t v19;
  pthread_mutex_t v20;
  _QWORD v21[3];
  _QWORD *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  sub_2397A1618(&v20);
  v11 = 0x7FFFFFFF;
  pthread_cond_init(&v18, 0);
  pthread_cond_init(&v19, 0);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(uint64_t (**)(_QWORD *, _QWORD *))a1;
  v6 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v4 >> 1));
  if ((v4 & 1) != 0)
    v5 = *(uint64_t (**)(_QWORD *, _QWORD *))(*v6 + v5);
  v21[0] = &off_250AF3308;
  v21[1] = &v11;
  v21[2] = a2;
  v22 = v21;
  v7 = v5(v6, v21);
  v8 = v22;
  if (v22 == v21)
  {
    v9 = 4;
    v8 = v21;
  }
  else
  {
    if (!v22)
      goto LABEL_8;
    v9 = 5;
  }
  (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_8:
  if (v7)
  {
    sub_2395BFB54(&v11);
    sub_2395C2A4C((uint64_t)&v11);
  }
  return sub_2395C29C4((uint64_t)&v11);
}

void sub_239A9C59C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239A9C5E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

uint64_t sub_239A9C608(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 647, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 99;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v23 = v3;
    goto LABEL_12;
  }
  v23 = &v22;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v24 = 0;
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF8128;
  *(_QWORD *)&v12 = sub_239A82C70((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239A7FF28(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239A9C808(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239A9C814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39)
{
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  if (a39 == v41)
  {
    v43 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_6;
    v43 = 5;
    v41 = a39;
  }
  (*(void (**)(_QWORD *))(*v41 + 8 * v43))(v41);
LABEL_6:
  sub_239A8303C(v40);
  sub_239A83110(v39);
  v44 = a20;
  if (a20 == &a17)
  {
    v45 = 4;
    v44 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_11;
    v45 = 5;
  }
  (*(void (**)(void))(*v44 + 8 * v45))();
LABEL_11:
  v46 = a14;
  if (a14 == &a11)
  {
    v47 = 4;
    v46 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v47 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v46 + 8 * v47))();
  _Unwind_Resume(a1);
}

uint64_t sub_239A9C8F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *, _QWORD *);
  _QWORD *v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned int v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  pthread_cond_t v16;
  pthread_cond_t v17;
  pthread_mutex_t v18;
  _QWORD v19[3];
  _QWORD *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  sub_2397A1618(&v18);
  v9 = 0x7FFFFFFF;
  pthread_cond_init(&v16, 0);
  pthread_cond_init(&v17, 0);
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(_QWORD *, _QWORD *))a1;
  v4 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v2 >> 1));
  if ((v2 & 1) != 0)
    v3 = *(uint64_t (**)(_QWORD *, _QWORD *))(*v4 + v3);
  v19[0] = &off_250AF6640;
  v19[1] = &v9;
  v20 = v19;
  v5 = v3(v4, v19);
  v6 = v20;
  if (v20 == v19)
  {
    v7 = 4;
    v6 = v19;
  }
  else
  {
    if (!v20)
      goto LABEL_8;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_8:
  if (v5)
  {
    sub_2395BFB54(&v9);
    sub_2395C2A4C((uint64_t)&v9);
  }
  return sub_2395C29C4((uint64_t)&v9);
}

void sub_239A9CA44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239A9CA8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_239A9CAB4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239A9CAC8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF6640;
  result[1] = v3;
  return result;
}

uint64_t sub_239A9CAFC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF6640;
  a2[1] = v2;
  return result;
}

uint64_t sub_239A9CB18(uint64_t a1)
{
  unsigned int *v1;
  char v3;

  v1 = *(unsigned int **)(a1 + 8);
  v3 = 1;
  return sub_2395BFE44(v1, &v3);
}

void sub_239A9CB48()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239A9CB5C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF3308;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239A9CB94(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF3308;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239A9CBB4(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

void sub_239A9CBEC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239A9CC00(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF32C0;
  result[1] = v3;
  return result;
}

uint64_t sub_239A9CC34(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF32C0;
  a2[1] = v2;
  return result;
}

uint64_t sub_239A9CC50(uint64_t a1)
{
  unsigned int *v1;
  char v3;

  v1 = *(unsigned int **)(a1 + 8);
  v3 = 1;
  return sub_2395BFE44(v1, &v3);
}

void sub_239A9CC80()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239A9CC94(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF3278;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239A9CCCC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF3278;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239A9CCEC(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

BOOL sub_239A9CD20(uint64_t a1, const void **a2)
{
  _QWORD *v3;
  _BOOL8 v4;
  _BYTE *v5;
  const void *v6;
  size_t v7;
  void *v8;
  _BYTE *v9;
  uint64_t v11[3];
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;

  if (!*(_BYTE *)(a1 + 4) && !*(_DWORD *)a1)
  {
    sub_239A444D4((uint64_t)"unknown file", 632, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (!*(_BYTE *)(a1 + 1032))
    return *a2 == a2[1];
  if (*(_QWORD *)(a1 + 1016) != ((_BYTE *)a2[1] - (_BYTE *)*a2) >> 3)
    return 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v3 = *(_QWORD **)(a1 + 1008);
  for (v11[0] = (uint64_t)&v12; v3; v3 = (_QWORD *)*v3)
    sub_239A9CEE4(v11, v3[2]);
  std::__sort<std::__less<unsigned long long,unsigned long long> &,unsigned long long *>();
  memset(v11, 0, sizeof(v11));
  v6 = *a2;
  v5 = a2[1];
  v7 = v5 - (_BYTE *)*a2;
  if (v5 == *a2)
  {
    v8 = 0;
  }
  else
  {
    if ((v7 & 0x8000000000000000) != 0)
      sub_2394189F8();
    v8 = operator new(v5 - (_BYTE *)*a2);
    memcpy(v8, v6, v7);
  }
  std::__sort<std::__less<unsigned long long,unsigned long long> &,unsigned long long *>();
  v9 = v12;
  v4 = memcmp(v12, v8, v13 - v12) == 0;
  if (v8)
  {
    operator delete(v8);
    v9 = v12;
  }
  if (v9)
  {
    v13 = v9;
    operator delete(v9);
  }
  return v4;
}

void sub_239A9CE9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (v14)
    operator delete(v14);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239A9CEE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v4 = *a1;
  v6 = *(char **)(*a1 + 8);
  v5 = *(_QWORD *)(*a1 + 16);
  v7 = v6;
  if ((unint64_t)v6 >= v5)
  {
    v9 = *(char **)v4;
    v10 = (uint64_t)&v6[-*(_QWORD *)v4];
    v11 = v10 >> 3;
    v12 = (v10 >> 3) + 1;
    if (v12 >> 61)
      sub_2394189F8();
    v13 = v5 - (_QWORD)v9;
    if (v13 >> 2 > v12)
      v12 = v13 >> 2;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      v14 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      if (v14 >> 61)
        sub_239418A80();
      v15 = operator new(8 * v14);
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[8 * v11];
    v17 = &v15[8 * v14];
    *v16 = a2;
    v8 = v16 + 1;
    if (v6 != v9)
    {
      v18 = v6 - v9 - 8;
      if (v18 < 0x58)
        goto LABEL_27;
      if ((unint64_t)(v6 - v15 - v10) < 0x20)
        goto LABEL_27;
      v19 = (v18 >> 3) + 1;
      v7 = &v6[-8 * (v19 & 0x3FFFFFFFFFFFFFFCLL)];
      v20 = &v15[8 * v11 - 16];
      v21 = v6 - 16;
      v22 = v19 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v23 = *(_OWORD *)v21;
        *(v20 - 1) = *((_OWORD *)v21 - 1);
        *v20 = v23;
        v20 -= 2;
        v21 -= 32;
        v22 -= 4;
      }
      while (v22);
      v16 -= v19 & 0x3FFFFFFFFFFFFFFCLL;
      if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_27:
        do
        {
          v24 = *((_QWORD *)v7 - 1);
          v7 -= 8;
          *--v16 = v24;
        }
        while (v7 != v9);
      }
    }
    *(_QWORD *)v4 = v16;
    *(_QWORD *)(v4 + 8) = v8;
    *(_QWORD *)(v4 + 16) = v17;
    if (v9)
      operator delete(v9);
  }
  else
  {
    *(_QWORD *)v6 = a2;
    v8 = v6 + 8;
  }
  *(_QWORD *)(v4 + 8) = v8;
  return a1;
}

void sub_239A9D050(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF96E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239A9D060(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF96E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239A9D090(_QWORD *a1)
{
  uint64_t v2;
  void **v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = (void **)(a1 + 28);
  v2 = a1[28];
  if (v2)
  {
    sub_2395FC7D8((uint64_t)(a1 + 28), v2);
    operator delete(*v3);
  }
  v4 = a1[25];
  if (v4)
  {
    v5 = a1[26];
    v6 = (void *)a1[25];
    if (v5 != v4)
    {
      do
        v5 = sub_2395A0DF8(v5 - 352);
      while (v5 != v4);
      v6 = (void *)a1[25];
    }
    a1[26] = v4;
    operator delete(v6);
  }
  return sub_2395F79B0((uint64_t)(a1 + 3));
}

BOOL sub_239A9D108(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  _BOOL8 v8;
  std::string::size_type size;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  const void *v14[4];
  void *v15[3];
  uint64_t v16[2];
  _QWORD v17[11];
  char v18;
  uint64_t v19;
  void *v20[2];
  unsigned __int8 v21;
  char v22;
  std::string v23;
  _QWORD v24[2];
  _BYTE v25[408];
  _QWORD v26[20];

  v26[19] = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEDB838];
  v3 = MEMORY[0x24BEDB838] + 64;
  v4 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v26[0] = MEMORY[0x24BEDB838] + 64;
  v24[0] = v5;
  *(_QWORD *)((char *)v24 + *(_QWORD *)(v5 - 24)) = v6;
  v24[1] = 0;
  v7 = (std::ios_base *)((char *)v24 + *(_QWORD *)(v24[0] - 24));
  std::ios_base::init(v7, v25);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  v24[0] = v2 + 24;
  v26[0] = v3;
  MEMORY[0x23B83DC80](v25);
  std::ifstream::open();
  if ((v25[*(_QWORD *)(v24[0] - 24) + 16] & 5) != 0)
  {
    v8 = 0;
    goto LABEL_26;
  }
  HIBYTE(v14[2]) = 18;
  strcpy((char *)v14, "CorePhotogrammetry");
  sub_2395AC84C(v14, v15);
  sub_239A7D600(&v23, *(_QWORD **)&v25[*(_QWORD *)(v24[0] - 24) + 24]);
  size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v23.__r_.__value_.__l.__size_;
  if (size)
  {
    sub_2395AC2E8((const void **)&v23.__r_.__value_.__l.__data_, (uint64_t)v15, (uint64_t)v20);
    v8 = v22 != 0;
    if (v22)
    {
      sub_2394988CC((uint64_t)v16);
      if ((v21 & 0x80u) == 0)
        v10 = v20;
      else
        v10 = (void **)v20[0];
      if ((v21 & 0x80u) == 0)
        v11 = v21;
      else
        v11 = (uint64_t)v20[1];
      sub_239458500(v17, (uint64_t)v10, v11);
      sub_2395D2E38(a1, v16, 1);
      v16[0] = *MEMORY[0x24BEDB7F0];
      v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      *(uint64_t *)((char *)v16 + *(_QWORD *)(v16[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v17[0] = v12;
      v17[1] = MEMORY[0x24BEDB848] + 16;
      if (v18 < 0)
        operator delete((void *)v17[9]);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x23B83E250](&v19);
      if (v22 && (char)v21 < 0)
        operator delete(v20[0]);
    }
    if ((*((_BYTE *)&v23.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_20;
  }
  else
  {
    v8 = 0;
    if ((*((_BYTE *)&v23.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_20;
  }
  operator delete(v23.__r_.__value_.__l.__data_);
LABEL_20:
  if (v15[0])
  {
    v15[1] = v15[0];
    operator delete(v15[0]);
  }
  if (SHIBYTE(v14[2]) < 0)
    operator delete((void *)v14[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)((char *)v24 + *(_QWORD *)(v24[0] - 24)), *(_DWORD *)&v25[*(_QWORD *)(v24[0] - 24) + 16] | 4);
LABEL_26:
  v24[0] = *v4;
  *(_QWORD *)((char *)v24 + *(_QWORD *)(v24[0] - 24)) = v4[3];
  MEMORY[0x23B83DC8C](v25);
  std::istream::~istream();
  MEMORY[0x23B83E250](v26);
  return v8;
}

void sub_239A9D40C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  char a66;
  uint64_t a67;
  void *v68;

  if (a60)
  {
    if (a59 < 0)
      operator delete(__p);
  }
  if (a66 < 0)
  {
    operator delete(a61);
    v68 = a16;
    if (!a16)
    {
LABEL_6:
      if ((a14 & 0x80000000) == 0)
      {
LABEL_11:
        sub_23955CB90(&a67);
        _Unwind_Resume(a1);
      }
LABEL_10:
      operator delete(a9);
      goto LABEL_11;
    }
  }
  else
  {
    v68 = a16;
    if (!a16)
      goto LABEL_6;
  }
  operator delete(v68);
  if ((a14 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

void sub_239A9D4C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239A9D4E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void **v5;
  _BOOL8 v6;
  char *v7;
  void **v8;
  void *v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  std::__fs::filesystem::path __p;
  void *v16[2];
  void *v17;
  int v18;
  void *v19[2];
  void *v20;
  int v21;
  void *v22;
  char v23;

  if (!*(_BYTE *)(a1 + 4) && !*(_DWORD *)a1)
    return 1;
  sub_2396F295C((uint64_t *)(a1 + 464), a1 + 8, (uint64_t)&v22);
  v4 = *a2;
  v5 = (void **)(*a2 + 456);
  sub_2395F6750((uint64_t)v19, (uint64_t)v5);
  sub_2395F6750((uint64_t)v16, v4 + 496);
  sub_2396F295C((uint64_t *)(a1 + 368), a1 + 8, (uint64_t)&__p);
  sub_2396B8CE0((uint64_t)v5, &__p);
  sub_2396B8CE0(v4 + 496, &__p);
  kdebug_trace();
  v6 = sub_239A9D788(*a2);
  kdebug_trace();
  if (v5 != v19)
  {
    *(_DWORD *)(v4 + 488) = v21;
    sub_239A99678(v5, (const std::string *)v20);
  }
  if ((void **)(v4 + 496) != v16)
  {
    *(_DWORD *)(v4 + 528) = v18;
    sub_239A99678((_QWORD *)(v4 + 496), (const std::string *)v17);
  }
  if (v6)
  {
    v7 = (char *)(a1 + 1088);
    if (!*(_BYTE *)(a1 + 1112))
    {
      *(_QWORD *)v7 = 0;
      *(_QWORD *)(a1 + 1096) = 0;
      *(_QWORD *)(a1 + 1104) = 0;
      sub_239490944(v7, *(_QWORD *)(a1 + 464), *(_QWORD *)(a1 + 472), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 472) - *(_QWORD *)(a1 + 464)) >> 3));
      *(_BYTE *)(a1 + 1112) = 1;
      if ((SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
    sub_239A70694((uint64_t)v7, *(std::string **)(a1 + 464), *(std::string **)(a1 + 472), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 472) - *(_QWORD *)(a1 + 464)) >> 3));
  }
  if (SHIBYTE(__p.__pn_.__r_.__value_.__r.__words[2]) < 0)
LABEL_11:
    operator delete(__p.__pn_.__r_.__value_.__l.__data_);
LABEL_12:
  v8 = (void **)v17;
  if (v17)
  {
    do
    {
      v12 = (void **)*v8;
      if (*((char *)v8 + 47) < 0)
        operator delete(v8[3]);
      operator delete(v8);
      v8 = v12;
    }
    while (v12);
  }
  v9 = v16[0];
  v16[0] = 0;
  if (v9)
    operator delete(v9);
  v10 = (void **)v20;
  if (v20)
  {
    do
    {
      v13 = (void **)*v10;
      if (*((char *)v10 + 47) < 0)
        operator delete(v10[3]);
      operator delete(v10);
      v10 = v13;
    }
    while (v13);
  }
  v11 = v19[0];
  v19[0] = 0;
  if (v11)
    operator delete(v11);
  if (v23 < 0)
    operator delete(v22);
  return v6;
}

void sub_239A9D730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v20;

  sub_23959F2D4((uint64_t)&a15);
  sub_23959F2D4((uint64_t)&a20);
  if (*(char *)(v20 - 49) < 0)
    operator delete(*(void **)(v20 - 72));
  _Unwind_Resume(a1);
}

BOOL sub_239A9D788(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  std::ios_base *v14;
  uint64_t v15;
  void **v16;
  void *v17;
  const void *v19[3];
  void *v20[3];
  void *v21;
  char v22;
  void *__p[2];
  unsigned __int8 v24;
  char v25;
  uint64_t v26;
  uint64_t v27[8];
  __int128 v28;
  __int128 v29;
  int v30;
  uint64_t v31[19];
  uint64_t v32;
  _BYTE v33[408];
  _QWORD v34[22];

  v34[19] = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEDB840];
  v3 = MEMORY[0x24BEDB840] + 64;
  v4 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v34[0] = MEMORY[0x24BEDB840] + 64;
  v32 = v5;
  *(_QWORD *)&v33[*(_QWORD *)(v5 - 24) - 8] = v6;
  v7 = (std::ios_base *)&v33[*(_QWORD *)(v32 - 24) - 8];
  std::ios_base::init(v7, v33);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  v32 = v2 + 24;
  v34[0] = v3;
  MEMORY[0x23B83DC80](v33);
  std::ofstream::open();
  if ((v33[*(_QWORD *)(v32 - 24) + 24] & 5) != 0)
  {
    v8 = 0;
  }
  else
  {
    HIBYTE(v19[2]) = 18;
    strcpy((char *)v19, "CorePhotogrammetry");
    sub_2395AC84C(v19, v20);
    v9 = MEMORY[0x24BEDB870];
    v10 = MEMORY[0x24BEDB870] + 64;
    v11 = (uint64_t *)MEMORY[0x24BEDB800];
    v12 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
    v13 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
    v31[0] = MEMORY[0x24BEDB870] + 64;
    v26 = v12;
    *(uint64_t *)((char *)&v27[-1] + *(_QWORD *)(v12 - 24)) = v13;
    v14 = (std::ios_base *)((char *)&v27[-1] + *(_QWORD *)(v26 - 24));
    std::ios_base::init(v14, v27);
    v14[1].__vftable = 0;
    v14[1].__fmtflags_ = -1;
    v26 = v9 + 24;
    v31[0] = v10;
    std::streambuf::basic_streambuf();
    v15 = MEMORY[0x24BEDB848];
    v27[0] = MEMORY[0x24BEDB848] + 16;
    v28 = 0u;
    v29 = 0u;
    v30 = 16;
    v24 = 0;
    LOBYTE(__p[0]) = 0;
    sub_2395D3294(a1, &v26, 1, 1, (uint64_t)__p);
    if ((char)v24 < 0)
      operator delete(__p[0]);
    std::stringbuf::str();
    sub_2395ABE70((const void **)&v21, (uint64_t)v20, (uint64_t)__p);
    if (v22 < 0)
      operator delete(v21);
    v8 = v25 != 0;
    if (v25)
    {
      v16 = (v24 & 0x80u) == 0 ? __p : (void **)__p[0];
      v17 = (v24 & 0x80u) == 0 ? (void *)v24 : __p[1];
      sub_239458500(&v32, (uint64_t)v16, (uint64_t)v17);
      if (v25)
      {
        if ((char)v24 < 0)
          operator delete(__p[0]);
      }
    }
    v26 = *v11;
    *(uint64_t *)((char *)&v27[-1] + *(_QWORD *)(v26 - 24)) = v11[3];
    v27[0] = v15 + 16;
    if (SBYTE7(v29) < 0)
      operator delete((void *)v28);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x23B83E250](v31);
    if (v20[0])
    {
      v20[1] = v20[0];
      operator delete(v20[0]);
    }
    if (SHIBYTE(v19[2]) < 0)
      operator delete((void *)v19[0]);
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)&v33[*(_QWORD *)(v32 - 24) - 8], *(_DWORD *)&v33[*(_QWORD *)(v32 - 24) + 24] | 4);
  }
  v32 = *v4;
  *(_QWORD *)&v33[*(_QWORD *)(v32 - 24) - 8] = v4[3];
  MEMORY[0x23B83DC8C](v33);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v34);
  return v8;
}

void sub_239A9DAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27,int a28,__int16 a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  if (a27 && a26 < 0)
    operator delete(__p);
  sub_239A90B68((uint64_t)&a29);
  if (a15)
    operator delete(a15);
  if (a14 < 0)
    operator delete(a9);
  sub_23955C978(&a62);
  _Unwind_Resume(a1);
}

void sub_239A9DB94(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x23B83E250](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239A9DBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = sub_239A8DC0C(a1, a2) + 40;
  if (*(char *)(a2 + 63) < 0)
  {
    sub_23941A7F8((_BYTE *)v4, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v4 = v5;
  }
  return a1;
}

void sub_239A9DC20(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)(v1 + 16);
  if (v3)
  {
    do
    {
      v6 = (_QWORD *)*v3;
      v7 = v3[3];
      if (v7)
      {
        v8 = v3[4];
        v5 = (void *)v3[3];
        if (v8 != v7)
        {
          do
          {
            if (*(char *)(v8 - 1) < 0)
              operator delete(*(void **)(v8 - 24));
            v8 -= 24;
          }
          while (v8 != v7);
          v5 = (void *)v3[3];
        }
        v3[4] = v7;
        operator delete(v5);
      }
      operator delete(v3);
      v3 = v6;
    }
    while (v6);
  }
  v4 = *(void **)v1;
  *(_QWORD *)v1 = 0;
  if (v4)
    operator delete(v4);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239A9DCA0(uint64_t a1, uint64_t *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  pthread_rwlock_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  char *v34;
  _DWORD *v35;
  unsigned int v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  std::__shared_weak_count *v51;
  unint64_t *p_shared_owners;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  _QWORD v62[3];
  _QWORD *v63;
  uint64_t v64;
  _BYTE v65[24];
  _BYTE *v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v7 = *a2;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = a1 + 56;
  *(_QWORD *)(a1 + 64) = a1 + 56;
  *(_OWORD *)(a1 + 72) = xmmword_239EC69E0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)a1 = &off_250AF92B8;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 240) = a2[2];
  v8 = a2[3];
  *(_QWORD *)(a1 + 248) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = (uint64_t *)(a1 + 256);
  *(_OWORD *)(a1 + 304) = 0uLL;
  *(_OWORD *)(a1 + 320) = 0uLL;
  v60 = (uint64_t *)(a1 + 256);
  v61 = (uint64_t *)(a1 + 272);
  v12 = (_QWORD *)(a1 + 288);
  v13 = (_QWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 272) = 0uLL;
  *(_OWORD *)(a1 + 288) = 0uLL;
  *(_OWORD *)(a1 + 256) = 0uLL;
  *(_DWORD *)(a1 + 336) = 1065353216;
  sub_2397A1618((pthread_mutex_t *)(a1 + 344));
  if (!*v12)
  {
    v34 = (char *)operator new(0x108uLL);
    *((_DWORD *)v34 + 6) = 0x7FFFFFFF;
    v35 = v34 + 24;
    *(_OWORD *)(v34 + 8) = 0u;
    *((_OWORD *)v34 + 2) = 0u;
    *(_QWORD *)v34 = &off_250AF92F8;
    *((_OWORD *)v34 + 3) = 0u;
    *((_OWORD *)v34 + 4) = 0u;
    v34[80] = 0;
    *(_OWORD *)(v34 + 88) = 0u;
    sub_2397A1618((pthread_mutex_t *)(v34 + 200));
    v36 = *((_DWORD *)v34 + 6);
    if (v36 >= 0x7FFFFFFF)
    {
      v36 = 0x7FFFFFFF;
      *v35 = 0x7FFFFFFF;
    }
    else if (v36 < 2)
    {
      v36 = 1;
    }
    *((_DWORD *)v34 + 6) = v36;
    pthread_cond_init((pthread_cond_t *)(v34 + 104), 0);
    pthread_cond_init((pthread_cond_t *)(v34 + 152), 0);
    v51 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = v35;
    *(_QWORD *)(a1 + 296) = v34;
    v11 = v60;
    if (v51)
    {
      p_shared_owners = (unint64_t *)&v51->__shared_owners_;
      do
        v53 = __ldaxr(p_shared_owners);
      while (__stlxr(v53 - 1, p_shared_owners));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
  }
  if (!*v11)
  {
    v14 = operator new(0x120uLL);
    v14[1] = 0;
    v14[2] = 0;
    *v14 = &off_250AE9800;
    v15 = sub_2397A1740((uint64_t)(v14 + 3));
    v16 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = v15;
    *(_QWORD *)(a1 + 264) = v14;
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v19 = *v11;
    v20 = (pthread_rwlock_t *)(*v11 + 24);
    j__pthread_rwlock_wrlock(v20);
    *(_BYTE *)(v19 + 16) = 1;
    j__pthread_rwlock_unlock(v20);
    sub_2397A195C(v19);
    v21 = (_QWORD *)operator new();
    *v21 = &off_250AF9330;
    v21[1] = a1;
    *(_QWORD *)(v19 + 224) = v21;
    sub_2397A1878((pthread_t *)v19);
  }
  if (!*v61)
  {
    v22 = *(_QWORD *)(a1 + 240);
    v23 = *(_QWORD *)(a1 + 248);
    if (v23)
    {
      v24 = (unint64_t *)(v23 + 8);
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
    }
    v26 = *(std::__shared_weak_count **)(a1 + 280);
    *(_QWORD *)(a1 + 272) = v22;
    *(_QWORD *)(a1 + 280) = v23;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
      v22 = *v61;
    }
    if (!v22)
    {
      v54 = *(_QWORD *)(a1 + 232);
      v55 = operator new(0x178uLL);
      v55[1] = 0;
      v55[2] = 0;
      *v55 = &off_250ADB8B0;
      v56 = sub_2397A2A50((uint64_t)(v55 + 3), v54, 0);
      v57 = *(std::__shared_weak_count **)(a1 + 280);
      *(_QWORD *)(a1 + 272) = v56;
      *(_QWORD *)(a1 + 280) = v55;
      if (v57)
      {
        v58 = (unint64_t *)&v57->__shared_owners_;
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
    }
  }
  sub_239467C88(a1);
  if (*(_QWORD *)(a1 + 328))
  {
    v29 = *(_QWORD **)(a1 + 320);
    if (v29)
    {
      do
      {
        v30 = (_QWORD *)*v29;
        operator delete(v29);
        v29 = v30;
      }
      while (v30);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v31 = *(_QWORD *)(a1 + 312);
    if (v31)
    {
      for (i = 0; i != v31; ++i)
        *(_QWORD *)(*v13 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  v33 = a3[3];
  if (!v33)
    goto LABEL_33;
  if ((_QWORD *)v33 != a3)
  {
    v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
LABEL_33:
    v63 = (_QWORD *)v33;
    goto LABEL_38;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v62);
LABEL_38:
  v64 = a1;
  v66 = 0;
  v37 = operator new(0x30uLL);
  *v37 = &off_250AF95D0;
  v38 = (uint64_t)v63;
  if (!v63)
  {
LABEL_41:
    v37[4] = v38;
    goto LABEL_43;
  }
  if (v63 != v62)
  {
    v38 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_41;
  }
  v37[4] = v37 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_43:
  v37[5] = v64;
  v66 = v37;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v39 = v66;
  if (v66 == v65)
  {
    v40 = 4;
    v39 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_51;
    v40 = 5;
  }
  (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_51:
  v41 = v63;
  if (v63 == v62)
  {
    v42 = 4;
    v41 = v62;
  }
  else
  {
    if (!v63)
      goto LABEL_56;
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_56:
  v43 = a4[3];
  if (!v43)
  {
LABEL_59:
    v63 = (_QWORD *)v43;
    goto LABEL_61;
  }
  if ((_QWORD *)v43 != a4)
  {
    v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 16))(v43);
    goto LABEL_59;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a4 + 24))(a4, v62);
LABEL_61:
  v64 = a1;
  v66 = 0;
  v44 = operator new(0x30uLL);
  *v44 = &off_250AF9618;
  v45 = (uint64_t)v63;
  if (!v63)
  {
LABEL_64:
    v44[4] = v45;
    goto LABEL_66;
  }
  if (v63 != v62)
  {
    v45 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_64;
  }
  v44[4] = v44 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_66:
  v44[5] = v64;
  v66 = v44;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v46 = v66;
  if (v66 == v65)
  {
    v47 = 4;
    v46 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_74;
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
LABEL_74:
  v48 = v63;
  if (v63 == v62)
  {
    v49 = 4;
    v48 = v62;
    goto LABEL_78;
  }
  if (v63)
  {
    v49 = 5;
LABEL_78:
    (*(void (**)(void))(*v48 + 8 * v49))();
  }
  return a1;
}

void sub_239A9E328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _QWORD **v22;
  uint64_t v23;
  pthread_mutex_t *v24;
  std::__shared_weak_count *v25;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  std::__shared_weak_count::~__shared_weak_count(v25);
  operator delete(v27);
  sub_2397A163C(v24);
  sub_239420950(v23);
  sub_239A4D7C0(a10);
  sub_239416DA0(a12);
  sub_239416DA0(a11);
  sub_239A74534(v21 + 224);
  v28 = *v22;
  if (*v22 == (_QWORD *)(v21 + 176))
  {
    v29 = 4;
    v28 = (_QWORD *)(v21 + 176);
  }
  else
  {
    if (!v28)
      goto LABEL_6;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_6:
  v30 = *(_QWORD **)(v21 + 168);
  if (v30 == (_QWORD *)(v21 + 144))
  {
    v31 = 4;
    v30 = (_QWORD *)(v21 + 144);
  }
  else
  {
    if (!v30)
      goto LABEL_11;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_11:
  sub_239A9E5BC(v21);
  _Unwind_Resume(a1);
}

uint64_t sub_239A9E4FC(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  if (*(char *)(a1 + 63) < 0)
  {
    operator delete(*(void **)(a1 + 40));
    v2 = *(_QWORD **)(a1 + 16);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 16);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v6 = (_QWORD *)*v2;
    v7 = v2[3];
    if (v7)
    {
      v8 = v2[4];
      v5 = (void *)v2[3];
      if (v8 != v7)
      {
        do
        {
          if (*(char *)(v8 - 1) < 0)
            operator delete(*(void **)(v8 - 24));
          v8 -= 24;
        }
        while (v8 != v7);
        v5 = (void *)v2[3];
      }
      v2[4] = v7;
      operator delete(v5);
    }
    operator delete(v2);
    v2 = v6;
  }
  while (v6);
LABEL_5:
  v3 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

uint64_t sub_239A9E5BC(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;

  *(_QWORD *)a1 = &off_250AF92D8;
  sub_239467C88(a1);
  std::mutex::~mutex((std::mutex *)(a1 + 80));
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(_QWORD *)(a1 + 56);
    v2 = *(uint64_t **)(a1 + 64);
    v4 = *v2;
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
    **(_QWORD **)(v3 + 8) = v4;
    *(_QWORD *)(a1 + 72) = 0;
    if (v2 != (uint64_t *)(a1 + 56))
    {
      do
      {
        v5 = (uint64_t *)v2[1];
        operator delete(v2);
        v2 = v5;
      }
      while (v5 != (uint64_t *)(a1 + 56));
    }
  }
  v6 = *(_QWORD **)(a1 + 24);
  while (v6)
  {
    v9 = v6;
    v6 = (_QWORD *)*v6;
    v10 = (std::__shared_weak_count *)v9[4];
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    operator delete(v9);
  }
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v7)
    operator delete(v7);
  return a1;
}

void sub_239A9E6B0(uint64_t a1)
{
  sub_239A9E5BC(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239A9E6D4(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF9618;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239A9E730(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF9618;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239A9E79C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF9618;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239A9E818(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239A9E82C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF9618;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239A9E8A4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239A9E8D8(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239A9E928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 176;
  if ((_QWORD *)(v2 + 176) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 200);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 200) + 24))(*(_QWORD *)(v2 + 200), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
        *(_QWORD *)(v2 + 200) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 176);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 176);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 200);
      }
      *(_QWORD *)(v2 + 200) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 176, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
      *(_QWORD *)(v2 + 200) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 200);
      *(_QWORD *)(v2 + 200) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239A9EB1C(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

_QWORD *sub_239A9EB28(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF95D0;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239A9EB84(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF95D0;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239A9EBF0(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF95D0;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239A9EC6C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239A9EC80(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF95D0;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239A9ECF8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239A9ED2C(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239A9ED7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 144;
  if ((_QWORD *)(v2 + 144) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 168);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 168) + 24))(*(_QWORD *)(v2 + 168), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 168) + 32))(*(_QWORD *)(v2 + 168));
        *(_QWORD *)(v2 + 168) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 144);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 144);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 168);
      }
      *(_QWORD *)(v2 + 168) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 144, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 168) + 32))(*(_QWORD *)(v2 + 168));
      *(_QWORD *)(v2 + 168) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 168);
      *(_QWORD *)(v2 + 168) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239A9EF70(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

void sub_239A9EF80(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239A9EFA4(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  int *v3;
  BOOL v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  BOOL v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  int8x8_t v35;
  uint8x8_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  int8x8_t v43;
  uint8x8_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t *v79;
  __int128 v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  __int128 v90;
  char v91;
  __int128 v92;
  __int128 v93;
  char v94;
  _BYTE v95[24];
  _BYTE *v96;
  _BYTE v97[24];
  _BYTE *v98;
  _QWORD v99[3];
  _QWORD *v100;
  _BYTE v101[24];
  _BYTE *v102;
  _BYTE v103[24];
  _BYTE *v104;
  _BYTE v105[24];
  _BYTE *v106;
  uint64_t v107;

  v107 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned int **)(v1 + 288);
  if (v2)
  {
    sub_239A9FD00((uint64_t)&v93, v2);
    v3 = (int *)v93;
    if ((_QWORD)v93)
      v4 = v94 == 0;
    else
      v4 = 1;
    if (!v4)
    {
      v8 = (_QWORD *)(v1 + 304);
      while (2)
      {
        v10 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
        *(_QWORD *)&v92 = v3;
        *((_QWORD *)&v92 + 1) = *((_QWORD *)&v93 + 1);
        if (*((_QWORD *)&v93 + 1))
        {
          v11 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        v13 = *v3;
        switch(*v3)
        {
          case 0:
            if (v10)
            {
              p_shared_owners = (unint64_t *)&v10->__shared_owners_;
              do
                v15 = __ldxr(p_shared_owners);
              while (__stxr(v15 + 1, p_shared_owners));
              v16 = *((_QWORD *)v3 + 1);
              do
                v17 = __ldxr(p_shared_owners);
              while (__stxr(v17 + 1, p_shared_owners));
            }
            else
            {
              v16 = *((_QWORD *)v3 + 1);
            }
            v106 = 0;
            v50 = operator new(0x20uLL);
            *v50 = &off_250AF9358;
            v50[1] = v3;
            v50[2] = v10;
            v50[3] = v1;
            v106 = v50;
            v51 = sub_239A9FEF8(v1, v16, (uint64_t)v105);
            v52 = v106;
            if (v106 == v105)
            {
              v52 = v105;
              v53 = 4;
            }
            else
            {
              if (!v106)
                goto LABEL_82;
              v53 = 5;
            }
            (*(void (**)(void))(*v52 + 8 * v53))();
LABEL_82:
            if ((v51 & 1) == 0)
              sub_239AA0050(*(unsigned int **)(v1 + 288), &v92);
            if (v10)
            {
              v58 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v58);
              while (__stlxr(v59 - 1, v58));
              goto LABEL_166;
            }
            goto LABEL_168;
          case 1:
            if (v10)
            {
              v29 = (unint64_t *)&v10->__shared_owners_;
              do
                v30 = __ldxr(v29);
              while (__stxr(v30 + 1, v29));
              v31 = *((unsigned __int8 *)v3 + 72);
              v32 = *((_QWORD *)v3 + 6);
              do
                v33 = __ldxr(v29);
              while (__stxr(v33 + 1, v29));
              if (!v31)
              {
LABEL_77:
                v104 = 0;
                v54 = operator new(0x20uLL);
                *v54 = &off_250AF9420;
                v54[1] = v3;
                v54[2] = v10;
                v54[3] = v1;
                v104 = v54;
                v55 = sub_239A9FEF8(v1, v32, (uint64_t)v103);
                v56 = v104;
                if (v104 == v103)
                {
                  v56 = v103;
                  v57 = 4;
LABEL_160:
                  (*(void (**)(void))(*v56 + 8 * v57))();
                }
                else if (v104)
                {
                  v57 = 5;
                  goto LABEL_160;
                }
                if ((v55 & 1) == 0)
                  sub_239AA0050(*(unsigned int **)(v1 + 288), &v92);
                goto LABEL_163;
              }
            }
            else
            {
              v32 = *((_QWORD *)v3 + 6);
              if (!*((_BYTE *)v3 + 72))
                goto LABEL_77;
            }
            v102 = 0;
            v34 = operator new(0x20uLL);
            *v34 = &off_250AF9420;
            v34[1] = v3;
            v34[2] = v10;
            v34[3] = v1;
            v102 = v34;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v35 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v35)
              goto LABEL_151;
            v36 = (uint8x8_t)vcnt_s8(v35);
            v36.i16[0] = vaddlv_u8(v36);
            if (v36.u32[0] > 1uLL)
            {
              v37 = v32;
              if (*(_QWORD *)&v35 <= v32)
                v37 = v32 % *(_QWORD *)&v35;
            }
            else
            {
              v37 = (*(_QWORD *)&v35 - 1) & v32;
            }
            v71 = *(_QWORD **)(*v8 + 8 * v37);
            if (!v71 || (v72 = (_QWORD *)*v71) == 0)
            {
LABEL_151:
              v76 = 0;
              goto LABEL_152;
            }
            if (v36.u32[0] < 2uLL)
            {
              v73 = *(_QWORD *)&v35 - 1;
              while (1)
              {
                v75 = v72[1];
                if (v75 == v32)
                {
                  if (v72[2] == v32)
                    goto LABEL_184;
                }
                else if ((v75 & v73) != v37)
                {
                  goto LABEL_151;
                }
                v72 = (_QWORD *)*v72;
                if (!v72)
                  goto LABEL_151;
              }
            }
            while (1)
            {
              v74 = v72[1];
              if (v74 == v32)
                break;
              if (v74 >= *(_QWORD *)&v35)
                v74 %= *(_QWORD *)&v35;
              if (v74 != v37)
                goto LABEL_151;
LABEL_141:
              v72 = (_QWORD *)*v72;
              if (!v72)
                goto LABEL_151;
            }
            if (v72[2] != v32)
              goto LABEL_141;
LABEL_184:
            if (!v102)
              sub_2394172E0();
            (*(void (**)(_BYTE *))(*(_QWORD *)v102 + 48))(v102);
            v76 = 1;
LABEL_152:
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v77 = v102;
            if (v102 == v101)
            {
              v77 = v101;
              v78 = 4;
LABEL_156:
              (*(void (**)(void))(*v77 + 8 * v78))();
            }
            else if (v102)
            {
              v78 = 5;
              goto LABEL_156;
            }
            if ((v76 & 1) == 0)
            {
              sub_239A444D4((uint64_t)"unknown file", 793, (uint64_t)"", (void (*)(void *))sub_239A4463C);
              sub_239A4475C();
              abort();
            }
LABEL_163:
            if (v10)
            {
              v79 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v79);
              while (__stlxr(v59 - 1, v79));
              goto LABEL_166;
            }
LABEL_168:
            sub_239A9FD00((uint64_t)&v90, *(unsigned int **)(v1 + 288));
            v80 = v90;
            v90 = 0uLL;
            v81 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
            v93 = v80;
            if (v81)
            {
              v82 = (unint64_t *)&v81->__shared_owners_;
              do
                v83 = __ldaxr(v82);
              while (__stlxr(v83 - 1, v82));
              if (!v83)
              {
                ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                std::__shared_weak_count::__release_weak(v81);
              }
            }
            v94 = v91;
            v84 = (std::__shared_weak_count *)*((_QWORD *)&v90 + 1);
            if (!*((_QWORD *)&v90 + 1))
              goto LABEL_177;
            v85 = (unint64_t *)(*((_QWORD *)&v90 + 1) + 8);
            do
              v86 = __ldaxr(v85);
            while (__stlxr(v86 - 1, v85));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
              std::__shared_weak_count::__release_weak(v84);
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
              {
LABEL_178:
                v88 = (unint64_t *)&v87->__shared_owners_;
                do
                  v89 = __ldaxr(v88);
                while (__stlxr(v89 - 1, v88));
                if (!v89)
                {
                  ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                  std::__shared_weak_count::__release_weak(v87);
                }
              }
            }
            else
            {
LABEL_177:
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
                goto LABEL_178;
            }
            v3 = (int *)v93;
            if ((_QWORD)v93)
              v9 = v94 == 0;
            else
              v9 = 1;
            if (v9)
              break;
            continue;
          case 2:
            if (v10)
            {
              v24 = (unint64_t *)&v10->__shared_owners_;
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              v26 = *((_QWORD *)v3 + 14);
              do
                v27 = __ldxr(v24);
              while (__stxr(v27 + 1, v24));
            }
            else
            {
              v26 = *((_QWORD *)v3 + 14);
            }
            v100 = 0;
            v42 = operator new(0x20uLL);
            *v42 = &off_250AF94B0;
            v42[1] = v3;
            v42[2] = v10;
            v42[3] = v1;
            v100 = v42;
            *(_QWORD *)&v90 = v26;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v43 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v43)
              goto LABEL_122;
            v44 = (uint8x8_t)vcnt_s8(v43);
            v44.i16[0] = vaddlv_u8(v44);
            if (v44.u32[0] > 1uLL)
            {
              v45 = v26;
              if (*(_QWORD *)&v43 <= v26)
                v45 = v26 % *(_QWORD *)&v43;
            }
            else
            {
              v45 = (*(_QWORD *)&v43 - 1) & v26;
            }
            v62 = *(_QWORD **)(*v8 + 8 * v45);
            if (!v62)
              goto LABEL_122;
            v63 = (_QWORD *)*v62;
            if (!v63)
              goto LABEL_122;
            if (v44.u32[0] < 2uLL)
            {
              v64 = *(_QWORD *)&v43 - 1;
              while (1)
              {
                v66 = v63[1];
                if (v66 == v26)
                {
                  if (v63[2] == v26)
                    goto LABEL_121;
                }
                else if ((v66 & v64) != v45)
                {
                  goto LABEL_122;
                }
                v63 = (_QWORD *)*v63;
                if (!v63)
                  goto LABEL_122;
              }
            }
            while (1)
            {
              v65 = v63[1];
              if (v65 == v26)
              {
                if (v63[2] == v26)
                {
LABEL_121:
                  v67 = 0;
                  goto LABEL_123;
                }
              }
              else
              {
                if (v65 >= *(_QWORD *)&v43)
                  v65 %= *(_QWORD *)&v43;
                if (v65 != v45)
                {
LABEL_122:
                  sub_239465800(v1 + 304, (unint64_t *)&v90, &v90);
                  sub_239A7798C(*(_QWORD *)(v1 + 272), v99);
                  v67 = 1;
LABEL_123:
                  sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
                  v68 = v100;
                  if (v100 == v99)
                  {
                    v68 = v99;
                    v69 = 4;
LABEL_127:
                    (*(void (**)(void))(*v68 + 8 * v69))();
                  }
                  else if (v100)
                  {
                    v69 = 5;
                    goto LABEL_127;
                  }
                  if ((v67 & 1) == 0)
                    sub_239AA0050(*(unsigned int **)(v1 + 288), &v92);
                  if (v10)
                  {
                    v70 = (unint64_t *)&v10->__shared_owners_;
                    do
                      v59 = __ldaxr(v70);
                    while (__stlxr(v59 - 1, v70));
                    goto LABEL_166;
                  }
                  goto LABEL_168;
                }
              }
              v63 = (_QWORD *)*v63;
              if (!v63)
                goto LABEL_122;
            }
          case 3:
            v90 = *(_OWORD *)(v1 + 208);
            v28 = *((_QWORD *)v3 + 24);
            if (v28)
              (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v28 + 48))(v28, &v90);
            goto LABEL_168;
          default:
            if (v13 != 99)
            {
              if (v13 != 100)
                goto LABEL_168;
              if (v10)
              {
                v18 = (unint64_t *)&v10->__shared_owners_;
                do
                  v19 = __ldxr(v18);
                while (__stxr(v19 + 1, v18));
                do
                  v20 = __ldxr(v18);
                while (__stxr(v20 + 1, v18));
              }
              v96 = 0;
              v46 = operator new(0x20uLL);
              *v46 = &off_250AF9540;
              v46[1] = v3;
              v46[2] = v10;
              v46[3] = v1;
              v96 = v46;
              sub_2397A1694((pthread_mutex_t *)(v1 + 344));
              v47 = *(_QWORD *)(v1 + 328);
              if (!v47)
              {
                if (!v96)
                  sub_2394172E0();
                (*(void (**)(_BYTE *))(*(_QWORD *)v96 + 48))(v96);
              }
              sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
              v48 = v96;
              if (v96 == v95)
              {
                v48 = v95;
                v49 = 4;
              }
              else
              {
                if (!v96)
                {
LABEL_98:
                  if (v47)
                    sub_239AA0050(*(unsigned int **)(v1 + 288), &v92);
                  if (!v10)
                    goto LABEL_168;
                  v61 = (unint64_t *)&v10->__shared_owners_;
                  do
                    v59 = __ldaxr(v61);
                  while (__stlxr(v59 - 1, v61));
                  goto LABEL_166;
                }
                v49 = 5;
              }
              (*(void (**)(void))(*v48 + 8 * v49))();
              goto LABEL_98;
            }
            if (v10)
            {
              v21 = (unint64_t *)&v10->__shared_owners_;
              do
                v22 = __ldxr(v21);
              while (__stxr(v22 + 1, v21));
              do
                v23 = __ldxr(v21);
              while (__stxr(v23 + 1, v21));
            }
            v98 = 0;
            v38 = operator new(0x20uLL);
            *v38 = &off_250AF94F8;
            v38[1] = v3;
            v38[2] = v10;
            v38[3] = v1;
            v98 = v38;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v39 = *(_QWORD *)(v1 + 328);
            if (!v39)
            {
              if (!v98)
                sub_2394172E0();
              (*(void (**)(_BYTE *))(*(_QWORD *)v98 + 48))(v98);
            }
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v40 = v98;
            if (v98 == v97)
            {
              v40 = v97;
              v41 = 4;
            }
            else
            {
              if (!v98)
              {
LABEL_90:
                if (v39)
                  sub_239AA0050(*(unsigned int **)(v1 + 288), &v92);
                if (!v10)
                  goto LABEL_168;
                v60 = (unint64_t *)&v10->__shared_owners_;
                do
                  v59 = __ldaxr(v60);
                while (__stlxr(v59 - 1, v60));
LABEL_166:
                if (!v59)
                {
                  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
                  std::__shared_weak_count::__release_weak(v10);
                }
                goto LABEL_168;
              }
              v41 = 5;
            }
            (*(void (**)(void))(*v40 + 8 * v41))();
            goto LABEL_90;
        }
        break;
      }
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
    if (*((_QWORD *)&v93 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
}

void sub_239A9F8B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char *a34)
{
  std::__shared_weak_count *v34;
  pthread_mutex_t *v35;
  char *v37;
  uint64_t v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;

  sub_2397A16B4(v35);
  v37 = a34;
  if (a34 == &a31)
  {
    v38 = 4;
    v37 = &a31;
  }
  else
  {
    if (!a34)
    {
LABEL_6:
      if (v34)
      {
        p_shared_owners = (unint64_t *)&v34->__shared_owners_;
        do
          v40 = __ldaxr(p_shared_owners);
        while (__stlxr(v40 - 1, p_shared_owners));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      if (a14)
      {
        v41 = (unint64_t *)&a14->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
          std::__shared_weak_count::__release_weak(a14);
        }
      }
      if (a16)
      {
        v43 = (unint64_t *)&a16->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
          std::__shared_weak_count::__release_weak(a16);
        }
      }
      _Unwind_Resume(a1);
    }
    v38 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v37 + 8 * v38))();
  goto LABEL_6;
}

uint64_t sub_239A9FD00(uint64_t a1, unsigned int *a2)
{
  pthread_mutex_t *v4;
  __int128 v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v17;

  v4 = (pthread_mutex_t *)(a2 + 44);
  sub_2397A1694((pthread_mutex_t *)(a2 + 44));
  if (*((_QWORD *)a2 + 6))
  {
LABEL_4:
    v5 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                   + 16 * *((_QWORD *)a2 + 5));
    v17 = v5;
    if (*((_QWORD *)&v5 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
      v8 = *(std::__shared_weak_count **)(*(_QWORD *)(*((_QWORD *)a2 + 2)
                                                    + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                                        + 16 * *((_QWORD *)a2 + 5)
                                        + 8);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }
    v11 = *((_QWORD *)a2 + 6) - 1;
    v12 = *((_QWORD *)a2 + 5) + 1;
    *((_QWORD *)a2 + 5) = v12;
    *((_QWORD *)a2 + 6) = v11;
    if (v12 >= 0x200)
    {
      operator delete(**((void ***)a2 + 2));
      *((_QWORD *)a2 + 2) += 8;
      v11 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a2 + 5) -= 256;
    }
    if (v11 < *a2)
      pthread_cond_signal((pthread_cond_t *)(a2 + 20));
    *(_OWORD *)a1 = v17;
    if (*((_QWORD *)&v17 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v17 + 1) + 16))(*((_QWORD *)&v17 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v17 + 1));
      }
    }
    else
    {
      *(_BYTE *)(a1 + 16) = 1;
    }
  }
  else
  {
    while (!*((_BYTE *)a2 + 56))
    {
      ++*((_QWORD *)a2 + 9);
      pthread_cond_wait((pthread_cond_t *)(a2 + 32), v4);
      --*((_QWORD *)a2 + 9);
      if (*((_QWORD *)a2 + 6))
        goto LABEL_4;
    }
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
  return sub_2397A16B4(v4);
}

void sub_239A9FECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pthread_mutex_t *v9;

  sub_239A4D7C0((uint64_t)&a9);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_239A9FEF8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  pthread_mutex_t *v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v7 = *(int8x8_t *)(a1 + 312);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8(v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v9 = a2;
      if (*(_QWORD *)&v7 <= a2)
        v9 = a2 % *(_QWORD *)&v7;
    }
    else
    {
      v9 = (*(_QWORD *)&v7 - 1) & a2;
    }
    v10 = *(_QWORD **)(*(_QWORD *)(a1 + 304) + 8 * v9);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (v11)
      {
        if (v8.u32[0] < 2uLL)
        {
          v12 = *(_QWORD *)&v7 - 1;
          while (1)
          {
            v14 = v11[1];
            if (v14 == a2)
            {
              if (v11[2] == a2)
                goto LABEL_21;
            }
            else if ((v14 & v12) != v9)
            {
              goto LABEL_22;
            }
            v11 = (_QWORD *)*v11;
            if (!v11)
              goto LABEL_22;
          }
        }
        do
        {
          v13 = v11[1];
          if (v13 == a2)
          {
            if (v11[2] == a2)
            {
LABEL_21:
              v15 = 0;
              goto LABEL_24;
            }
          }
          else
          {
            if (v13 >= *(_QWORD *)&v7)
              v13 %= *(_QWORD *)&v7;
            if (v13 != v9)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_22:
  v16 = *(_QWORD *)(a3 + 24);
  if (!v16)
    sub_2394172E0();
  (*(void (**)(uint64_t))(*(_QWORD *)v16 + 48))(v16);
  v15 = 1;
LABEL_24:
  sub_2397A16B4(v6);
  return v15;
}

void sub_239AA0038(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239AA0050(unsigned int *a1, _OWORD *a2)
{
  pthread_mutex_t *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  BOOL v36;
  int64_t v37;
  unint64_t v38;
  char *v39;
  void *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  _OWORD *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  size_t v103;
  char *v104;
  unint64_t v105;
  char *v106;
  char *v107;
  int64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 *v114;
  _OWORD *v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  void *v119;
  _OWORD *v120;

  v4 = (pthread_mutex_t *)(a1 + 44);
  sub_2397A1694((pthread_mutex_t *)(a1 + 44));
  v5 = *((_QWORD *)a1 + 6);
  if (v5 >= *a1)
  {
    while (!*((_BYTE *)a1 + 56))
    {
      ++*((_QWORD *)a1 + 8);
      pthread_cond_wait((pthread_cond_t *)(a1 + 20), v4);
      --*((_QWORD *)a1 + 8);
      v5 = *((_QWORD *)a1 + 6);
      if (v5 < *a1)
        goto LABEL_4;
    }
    goto LABEL_5;
  }
LABEL_4:
  if (*((_BYTE *)a1 + 56))
  {
LABEL_5:
    v6 = 0;
    goto LABEL_100;
  }
  v7 = (char *)*((_QWORD *)a1 + 3);
  v8 = (char *)*((_QWORD *)a1 + 2);
  v9 = v7 - v8;
  if (v7 == v8)
    v10 = 0;
  else
    v10 = 32 * (v7 - v8) - 1;
  v11 = *((_QWORD *)a1 + 5);
  v12 = v11 + v5;
  if (v10 == v11 + v5)
  {
    if (v11 >= 0x100)
    {
      *((_QWORD *)a1 + 5) = v11 - 256;
      v13 = v8 + 8;
      v14 = *(_QWORD *)v8;
      *((_QWORD *)a1 + 2) = v8 + 8;
      if (*((char **)a1 + 4) != v7)
      {
LABEL_92:
        *(_QWORD *)v7 = v14;
        goto LABEL_93;
      }
      v15 = (char *)*((_QWORD *)a1 + 1);
      if (v13 > v15)
      {
        v16 = (v13 - v15) >> 3;
        if (v16 >= -1)
          v17 = v16 + 1;
        else
          v17 = v16 + 2;
        v18 = v17 >> 1;
        v19 = -v18;
        v20 = &v13[-8 * v18];
        v21 = v7 - v13;
        if (v7 == v13)
        {
          v22 = v7;
        }
        else
        {
          memmove(&v13[-8 * v18], v13, v7 - v13);
          v22 = (char *)*((_QWORD *)a1 + 2);
        }
        v7 = &v20[v21];
        *((_QWORD *)a1 + 2) = &v22[8 * v19];
        *((_QWORD *)a1 + 3) = &v20[v21];
        goto LABEL_92;
      }
      if (v7 == v15)
        v33 = 1;
      else
        v33 = (v7 - v15) >> 2;
      if (!(v33 >> 61))
      {
        v34 = (char *)operator new(8 * v33);
        v35 = &v34[8 * (v33 >> 2)];
        v37 = v7 - v13;
        v36 = v7 == v13;
        v7 = v35;
        if (v36)
          goto LABEL_90;
        v7 = &v35[v37 & 0xFFFFFFFFFFFFFFF8];
        v38 = v37 - 8;
        if (v38 >= 0x38)
        {
          v81 = &v34[8 * (v33 >> 2)];
          v39 = v81;
          if ((unint64_t)(v81 - v13) >= 0x20)
          {
            v82 = (v38 >> 3) + 1;
            v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
            v39 = &v35[v83];
            v84 = (__int128 *)(v8 + 24);
            v85 = v81 + 16;
            v86 = v82 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v87 = *v84;
              *(v85 - 1) = *(v84 - 1);
              *v85 = v87;
              v84 += 2;
              v85 += 2;
              v86 -= 4;
            }
            while (v86);
            if (v82 == (v82 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_90:
              *((_QWORD *)a1 + 1) = v34;
              *((_QWORD *)a1 + 2) = v35;
              *((_QWORD *)a1 + 3) = v7;
              *((_QWORD *)a1 + 4) = &v34[8 * v33];
              if (v15)
              {
                operator delete(v15);
                v7 = (char *)*((_QWORD *)a1 + 3);
              }
              goto LABEL_92;
            }
            v13 += v83;
          }
        }
        else
        {
          v39 = &v34[8 * (v33 >> 2)];
        }
        do
        {
          v88 = *(_QWORD *)v13;
          v13 += 8;
          *(_QWORD *)v39 = v88;
          v39 += 8;
        }
        while (v39 != v7);
        goto LABEL_90;
      }
LABEL_130:
      sub_239418A80();
    }
    v23 = v9 >> 3;
    v24 = (char *)*((_QWORD *)a1 + 4);
    v25 = (char *)*((_QWORD *)a1 + 1);
    v26 = v24 - v25;
    if (v9 >> 3 < (unint64_t)((v24 - v25) >> 3))
    {
      if (v24 != v7)
      {
        *(_QWORD *)v7 = operator new(0x1000uLL);
LABEL_93:
        *((_QWORD *)a1 + 3) += 8;
LABEL_94:
        v8 = (char *)*((_QWORD *)a1 + 2);
        v5 = *((_QWORD *)a1 + 6);
        v12 = v5 + *((_QWORD *)a1 + 5);
        goto LABEL_95;
      }
      v40 = operator new(0x1000uLL);
      v41 = v8;
      if (v25 != v8)
      {
LABEL_105:
        *((_QWORD *)v41 - 1) = v40;
        v94 = (char *)*((_QWORD *)a1 + 2);
        v95 = (char *)*((_QWORD *)a1 + 3);
        *((_QWORD *)a1 + 2) = v94 - 8;
        v96 = *((_QWORD *)v94 - 1);
        *((_QWORD *)a1 + 2) = v94;
        if (v95 != *((char **)a1 + 4))
        {
LABEL_106:
          *(_QWORD *)v95 = v96;
          goto LABEL_93;
        }
        v97 = (char *)*((_QWORD *)a1 + 1);
        if (v94 > v97)
        {
          v98 = (v94 - v97) >> 3;
          if (v98 >= -1)
            v99 = v98 + 1;
          else
            v99 = v98 + 2;
          v100 = v99 >> 1;
          v101 = -v100;
          v102 = &v94[-8 * v100];
          v103 = v95 - v94;
          if (v103)
          {
            memmove(&v94[-8 * v100], v94, v103);
            v94 = (char *)*((_QWORD *)a1 + 2);
          }
          v104 = &v102[v103];
          *((_QWORD *)a1 + 2) = &v94[8 * v101];
          *((_QWORD *)a1 + 3) = v104;
          *(_QWORD *)v104 = v96;
          goto LABEL_93;
        }
        if (v95 == v97)
          v105 = 1;
        else
          v105 = (v95 - v97) >> 2;
        if (v105 >> 61)
          goto LABEL_130;
        v106 = (char *)operator new(8 * v105);
        v107 = &v106[8 * (v105 >> 2)];
        v108 = v95 - v94;
        v36 = v95 == v94;
        v95 = v107;
        if (!v36)
        {
          v95 = &v107[v108 & 0xFFFFFFFFFFFFFFF8];
          v109 = v108 - 8;
          if (v109 < 0x38)
          {
            v110 = &v106[8 * (v105 >> 2)];
            goto LABEL_126;
          }
          v111 = &v106[8 * (v105 >> 2)];
          v110 = v111;
          if ((unint64_t)(v111 - v94) < 0x20)
          {
            do
            {
LABEL_126:
              v118 = *(_QWORD *)v94;
              v94 += 8;
              *(_QWORD *)v110 = v118;
              v110 += 8;
            }
            while (v110 != v95);
            goto LABEL_127;
          }
          v112 = (v109 >> 3) + 1;
          v113 = 8 * (v112 & 0x3FFFFFFFFFFFFFFCLL);
          v110 = &v107[v113];
          v114 = (__int128 *)(v94 + 16);
          v115 = v111 + 16;
          v116 = v112 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v117 = *v114;
            *(v115 - 1) = *(v114 - 1);
            *v115 = v117;
            v114 += 2;
            v115 += 2;
            v116 -= 4;
          }
          while (v116);
          if (v112 != (v112 & 0x3FFFFFFFFFFFFFFCLL))
          {
            v94 += v113;
            goto LABEL_126;
          }
        }
LABEL_127:
        *((_QWORD *)a1 + 1) = v106;
        *((_QWORD *)a1 + 2) = v107;
        *((_QWORD *)a1 + 3) = v95;
        *((_QWORD *)a1 + 4) = &v106[8 * v105];
        if (v97)
        {
          operator delete(v97);
          v95 = (char *)*((_QWORD *)a1 + 3);
        }
        goto LABEL_106;
      }
      if (v7 == v8)
        v42 = 1;
      else
        v42 = v26 >> 2;
      if (v42 >> 61)
        goto LABEL_130;
      v43 = (char *)operator new(8 * v42);
      v44 = (v42 + 3) >> 2;
      v41 = &v43[8 * v44];
      v45 = &v43[8 * v42];
      v46 = v41;
      if (v7 != v8)
      {
        v46 = &v41[(v7 - v25) & 0xFFFFFFFFFFFFFFF8];
        v47 = v7 - v25 - 8;
        v48 = &v43[8 * v44];
        v49 = v8;
        if (v47 > 0x37)
        {
          v50 = &v43[8 * v44];
          v48 = v50;
          v49 = v8;
          if ((unint64_t)(v50 - v25) >= 0x20)
          {
            v51 = (v47 >> 3) + 1;
            v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
            v48 = &v41[v52];
            v53 = (__int128 *)(v8 + 16);
            v54 = v50 + 16;
            v55 = v51 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v56 = *v53;
              *(v54 - 1) = *(v53 - 1);
              *v54 = v56;
              v53 += 2;
              v54 += 2;
              v55 -= 4;
            }
            while (v55);
            if (v51 == (v51 & 0x3FFFFFFFFFFFFFFCLL))
            {
              *((_QWORD *)a1 + 1) = v43;
              *((_QWORD *)a1 + 2) = v41;
              *((_QWORD *)a1 + 3) = v46;
              *((_QWORD *)a1 + 4) = v45;
LABEL_104:
              operator delete(v8);
              v41 = (char *)*((_QWORD *)a1 + 2);
              goto LABEL_105;
            }
            v49 = &v8[v52];
          }
        }
        do
        {
          v93 = *(_QWORD *)v49;
          v49 += 8;
          *(_QWORD *)v48 = v93;
          v48 += 8;
        }
        while (v48 != v46);
      }
      *((_QWORD *)a1 + 1) = v43;
      *((_QWORD *)a1 + 2) = v41;
      *((_QWORD *)a1 + 3) = v46;
      *((_QWORD *)a1 + 4) = v45;
      if (!v8)
        goto LABEL_105;
      goto LABEL_104;
    }
    if (v24 == v25)
      v27 = 1;
    else
      v27 = v26 >> 2;
    if (v27 >> 61)
      goto LABEL_130;
    v28 = (char *)operator new(8 * v27);
    v120 = a2;
    v29 = operator new(0x1000uLL);
    v30 = &v28[8 * v23];
    v31 = &v28[8 * v27];
    if (v23 == v27)
    {
      v119 = v29;
      if (v9 < 1)
      {
        if (v7 == v8)
          v57 = 1;
        else
          v57 = v9 >> 2;
        if (v57 >> 61)
          sub_239418A80();
        v30 = (char *)operator new(8 * v57);
        v31 = &v30[8 * v57];
        operator delete(v28);
        v8 = (char *)*((_QWORD *)a1 + 2);
        v7 = (char *)*((_QWORD *)a1 + 3);
        v28 = v30;
      }
      else
      {
        v32 = v23 + 2;
        if (v23 >= -1)
          v32 = v23 + 1;
        v30 -= 8 * (v32 >> 1);
      }
      v29 = v119;
    }
    *(_QWORD *)v30 = v29;
    v58 = v30 + 8;
    if (v7 == v8)
    {
      v59 = v30;
      v60 = v30 + 8;
LABEL_57:
      v61 = (void *)*((_QWORD *)a1 + 1);
      *((_QWORD *)a1 + 1) = v28;
      *((_QWORD *)a1 + 2) = v59;
      *((_QWORD *)a1 + 3) = v60;
      *((_QWORD *)a1 + 4) = v31;
      a2 = v120;
      if (v61)
        operator delete(v61);
      goto LABEL_94;
    }
    while (v30 != v28)
    {
      v62 = v30;
      v60 = v58;
LABEL_60:
      v63 = *((_QWORD *)v7 - 1);
      v7 -= 8;
      *((_QWORD *)v62 - 1) = v63;
      v59 = v62 - 8;
      v58 = v60;
      v30 = v59;
      if (v7 == *((char **)a1 + 2))
        goto LABEL_57;
    }
    if (v58 < v31)
    {
      v64 = (v31 - v58) >> 3;
      if (v64 >= -1)
        v65 = v64 + 1;
      else
        v65 = v64 + 2;
      v60 = &v58[8 * (v65 >> 1)];
      v62 = &v30[8 * (v65 >> 1)];
      if (v58 == v30)
      {
        v28 = v58;
      }
      else
      {
        memmove(&v30[8 * (v65 >> 1)], v30, v58 - v30);
        v28 = v30;
      }
      goto LABEL_60;
    }
    if (v31 == v30)
      v66 = 1;
    else
      v66 = (v31 - v30) >> 2;
    if (v66 >> 61)
      sub_239418A80();
    v67 = (char *)operator new(8 * v66);
    v28 = v67;
    v68 = (v66 + 3) >> 2;
    v62 = &v67[8 * v68];
    v60 = v62;
    v69 = v58 - v30;
    if (v58 != v30)
    {
      v60 = &v62[v69 & 0xFFFFFFFFFFFFFFF8];
      v70 = v69 - 8;
      v71 = &v67[8 * v68];
      v72 = v30;
      if (v70 >= 0x38)
      {
        v73 = 8 * v68;
        v71 = &v67[8 * v68];
        v72 = v30;
        if ((unint64_t)(v71 - v30) >= 0x20)
        {
          v74 = (v70 >> 3) + 1;
          v75 = 8 * (v74 & 0x3FFFFFFFFFFFFFFCLL);
          v71 = &v62[v75];
          v76 = (__int128 *)(v30 + 16);
          v77 = &v67[v73 + 16];
          v78 = v74 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v79 = *v76;
            *((_OWORD *)v77 - 1) = *(v76 - 1);
            *(_OWORD *)v77 = v79;
            v76 += 2;
            v77 += 32;
            v78 -= 4;
          }
          while (v78);
          if (v74 == (v74 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_80;
          v72 = &v30[v75];
        }
      }
      do
      {
        v80 = *(_QWORD *)v72;
        v72 += 8;
        *(_QWORD *)v71 = v80;
        v71 += 8;
      }
      while (v71 != v60);
    }
LABEL_80:
    v31 = &v67[8 * v66];
    operator delete(v30);
    goto LABEL_60;
  }
LABEL_95:
  v89 = *a2;
  *(_OWORD *)(*(_QWORD *)&v8[(v12 >> 5) & 0x7FFFFFFFFFFFFF8] + 16 * v12) = *a2;
  if (*((_QWORD *)&v89 + 1))
  {
    v90 = (unint64_t *)(*((_QWORD *)&v89 + 1) + 8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
    v5 = *((_QWORD *)a1 + 6);
  }
  *((_QWORD *)a1 + 6) = v5 + 1;
  pthread_cond_signal((pthread_cond_t *)(a1 + 32));
  v6 = 1;
LABEL_100:
  sub_2397A16B4(v4);
  return v6;
}

void sub_239AA07C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  pthread_mutex_t *v9;
  void *v10;

  operator delete(__p);
  operator delete(v10);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AA0814(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF9540;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AA0878(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF9540;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA08EC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF9540;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239AA0944(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF9540;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239AA097C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AA09D4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239AA0A2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned __int16 i;
  uint64_t v27;
  uint64_t v29;
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  pthread_cond_t v37;
  pthread_cond_t v38;
  pthread_mutex_t v39;
  _BYTE v40[24];
  _BYTE *v41;
  uint64_t v42;

  v1 = a1;
  v42 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD **)(a1 + 24);
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_2397A1618(&v39);
  v30 = 0x7FFFFFFF;
  pthread_cond_init(&v37, 0);
  pthread_cond_init(&v38, 0);
  v3 = (_QWORD *)v2[3];
  if (!v3)
    goto LABEL_44;
  v29 = v1;
  v4 = 0;
  do
  {
    v6 = v3[2];
    v5 = v3[3];
    v7 = (std::__shared_weak_count *)v3[4];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }
    if (!v5 || !v2[25])
    {
      if (!v7)
        goto LABEL_4;
      goto LABEL_36;
    }
    if (v7)
    {
      v10 = (unint64_t *)&v7->__shared_owners_;
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
      v12 = v2[34];
      if (!*(_QWORD *)(v12 + 272))
      {
LABEL_50:
        sub_239A444D4((uint64_t)"unknown file", 546, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v13 = (unint64_t *)&v7->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v15 = *(unsigned int **)(v12 + 272);
      do
        v16 = __ldxr(v13);
      while (__stxr(v16 + 1, v13));
    }
    else
    {
      v15 = *(unsigned int **)(v2[34] + 272);
      if (!v15)
        goto LABEL_50;
    }
    v41 = 0;
    v17 = operator new(0x38uLL);
    *v17 = &off_250AF9588;
    v17[1] = v6;
    v17[2] = v5;
    v17[3] = v7;
    v17[4] = &v30;
    v17[5] = v2;
    v41 = v17;
    sub_2394D0CC4(v15, (uint64_t)v40);
    v18 = v41;
    if (v41 == v40)
    {
      v18 = v40;
      v19 = 4;
      goto LABEL_26;
    }
    if (v41)
    {
      v19 = 5;
LABEL_26:
      (*(void (**)(void))(*v18 + 8 * v19))();
    }
    if (!v7)
    {
      ++v4;
      goto LABEL_4;
    }
    v20 = (unint64_t *)&v7->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    ++v4;
    v22 = (unint64_t *)&v7->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_36:
    v24 = (unint64_t *)&v7->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_4:
    v3 = (_QWORD *)*v3;
  }
  while (v3);
  v1 = v29;
  if (v4 && (unsigned __int16)sub_2395BFB54(&v30) >= 0x100u)
  {
    do
      --v4;
    while (v4 && (unsigned __int16)sub_2395BFB54(&v30) > 0xFFu);
  }
LABEL_44:
  sub_2395C2A4C((uint64_t)&v30);
  for (i = sub_2395BFB54(&v30); i >= 0x100u; i = sub_2395BFB54(&v30))
    ;
  v27 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 256);
  if (v27)
  {
    v40[0] = 1;
    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v27 + 48))(v27, v40);
  }
  return sub_2395C29C4((uint64_t)&v30);
}

void sub_239AA0D84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_2395C29C4((uint64_t)&a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AA0F74(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF9588;
  v2 = (std::__shared_weak_count *)a1[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AA0FD8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF9588;
  v1 = (std::__shared_weak_count *)a1[3];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239AA104C(__n128 *a1)
{
  __n128 *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  __n128 result;

  v2 = (__n128 *)operator new(0x38uLL);
  v3 = a1->n128_u64[1];
  v4 = a1[1].n128_u64[0];
  v2->n128_u64[0] = (unint64_t)&off_250AF9588;
  v2->n128_u64[1] = v3;
  v5 = a1[1].n128_u64[1];
  v2[1].n128_u64[0] = v4;
  v2[1].n128_u64[1] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  result = a1[2];
  v2[2] = result;
  return result;
}

__n128 sub_239AA10A8(__n128 *a1, __n128 *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __n128 result;

  v2 = a1->n128_u64[1];
  v3 = a1[1].n128_u64[0];
  a2->n128_u64[0] = (unint64_t)&off_250AF9588;
  a2->n128_u64[1] = v2;
  v4 = a1[1].n128_u64[1];
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = a1[2];
  a2[2] = result;
  return result;
}

void sub_239AA10E4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AA113C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239AA1194(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v2 = a1[5];
  v3 = (std::__shared_weak_count *)a1[3];
  v12 = a1[2];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v14 = a1[1];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v12, &v14);
  v7 = v13;
  if (v13)
  {
    v8 = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)a1[4];
  LOBYTE(v14) = 1;
  return sub_2395BFE44(v10, &v14);
}

void sub_239AA1254(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AA1298(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF94F8;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AA12FC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF94F8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA1370(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF94F8;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239AA13C8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF94F8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239AA1400(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AA1458(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239AA14B0(uint64_t a1)
{
  uint64_t result;

  sub_239467C88(*(_QWORD *)(a1 + 24));
  result = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 224);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 48))(result);
  return result;
}

_QWORD *sub_239AA14F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF94B0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AA1558(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF94B0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA15CC(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF94B0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239AA1624(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF94B0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239AA165C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AA16B4(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239AA170C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  char v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD **)(a1 + 8);
  v4 = (std::__shared_weak_count *)v3[16];
  v15 = v3[15];
  v16 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v3 = *(_QWORD **)(a1 + 8);
  }
  v17 = v3[14];
  v7 = *(_QWORD *)(v2 + 200);
  if (!v7)
    sub_2394172E0();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v15, &v17);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(v12 + 160);
  if (v13)
  {
    LOBYTE(v17) = v8;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v13 + 48))(v13, &v17);
    v12 = *(_QWORD *)(a1 + 8);
  }
  return sub_239AA1840(v2, *(_QWORD *)(v12 + 112));
}

void sub_239AA17FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AA1840(uint64_t a1, unint64_t a2)
{
  pthread_mutex_t *v4;
  int8x8_t v5;
  _QWORD *v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD **v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *__p;

  v4 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v5 = *(int8x8_t *)(a1 + 312);
  if (v5)
  {
    v6 = (_QWORD *)(a1 + 304);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = a2;
      if (*(_QWORD *)&v5 <= a2)
        v8 = a2 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & a2;
    }
    v9 = *(_QWORD ***)(*v6 + 8 * v8);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v13 == a2)
            {
              if (v10[2] == a2)
                goto LABEL_22;
            }
            else if ((v13 & v11) != v8)
            {
              return sub_2397A16B4(v4);
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              return sub_2397A16B4(v4);
          }
        }
        do
        {
          v12 = v10[1];
          if (v12 == a2)
          {
            if (v10[2] == a2)
            {
LABEL_22:
              sub_239A78378((uint64_t)&__p, v6, v10);
              if (__p)
                operator delete(__p);
              return sub_2397A16B4(v4);
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              return sub_2397A16B4(v4);
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  return sub_2397A16B4(v4);
}

_QWORD *sub_239AA1970(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF9420;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AA19D4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF9420;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA1A48(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF9420;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239AA1AA0(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF9420;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239AA1AD8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AA1B30(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239AA1B88(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  uint64_t v28;
  int8x8_t v29;
  uint8x8_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD **v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD **v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  float v43;
  float v44;
  _BOOL8 v46;
  unint64_t v47;
  unint64_t v48;
  size_t prime;
  unint64_t v50;
  unint64_t v51;
  uint8x8_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  int8x8_t v72;
  _QWORD *v73;
  uint8x8_t v74;
  unint64_t v75;
  _QWORD **v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t *v93;
  unint64_t v94;
  _QWORD *v95;
  char v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t *v99;
  unint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t *v123;
  unint64_t v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  __int128 v128;
  void *v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  _QWORD v132[3];
  _QWORD *v133;
  void *__p[9];
  char v135;
  uint64_t v136;
  void *v137;
  unint64_t v138;
  std::__shared_weak_count *v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD v145[3];
  _QWORD *v146;
  uint64_t v147;

  v147 = *MEMORY[0x24BDAC8D0];
  v2 = (_QWORD *)a1[1];
  if (!v2[7])
  {
    v10 = v2[13];
    if (v10)
    {
      LOBYTE(__p[0]) = 0;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)v10 + 48))(v10, __p);
    }
    return;
  }
  v4 = a1[3];
  std::mutex::lock((std::mutex *)(v4 + 80));
  v5 = (uint64_t *)(v4 + 8);
  v6 = v2[6];
  v7 = *(_QWORD *)(v4 + 16);
  if (!v7)
    goto LABEL_24;
  v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
  v8.i16[0] = vaddlv_u8(v8);
  v1 = (std::__shared_weak_count *)v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v9 = v2[6];
    if (v6 >= v7)
      v9 = v6 % v7;
  }
  else
  {
    v9 = (v7 - 1) & v6;
  }
  v11 = *(_QWORD **)(*v5 + 8 * v9);
  if (!v11 || (v12 = (_QWORD *)*v11) == 0)
  {
LABEL_24:
    if ((unint64_t)(*(_QWORD *)(v4 + 32) + 1) > *(_QWORD *)(v4 + 48))
    {
      v16 = *(_QWORD *)(v4 + 72);
      if (v16)
      {
        v17 = *(uint64_t **)(v4 + 56);
        v6 = v17[2];
        if ((v7 & (v7 - 1)) != 0)
        {
          v25 = v17[2];
          if (v6 >= v7)
            v25 = v6 % v7;
          v18 = *(_QWORD **)(*v5 + 8 * v25);
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        else
        {
          v18 = *(_QWORD **)(*v5 + 8 * (v6 & (v7 - 1)));
          do
          {
            do
              v18 = (_QWORD *)*v18;
            while (v18[1] != v6);
          }
          while (v18[2] != v6);
        }
        v7 = v18[3];
        v1 = (std::__shared_weak_count *)v18[4];
        if (v1)
        {
          p_shared_owners = (unint64_t *)&v1->__shared_owners_;
          do
            v27 = __ldxr(p_shared_owners);
          while (__stxr(v27 + 1, p_shared_owners));
          v17 = *(uint64_t **)(v4 + 56);
          v16 = *(_QWORD *)(v4 + 72);
        }
        v28 = *v17;
        *(_QWORD *)(v28 + 8) = v17[1];
        *(_QWORD *)v17[1] = v28;
        *(_QWORD *)(v4 + 72) = v16 - 1;
        operator delete(v17);
        v29 = *(int8x8_t *)(v4 + 16);
        if (v29)
        {
          v30 = (uint8x8_t)vcnt_s8(v29);
          v30.i16[0] = vaddlv_u8(v30);
          if (v30.u32[0] > 1uLL)
          {
            v31 = v6;
            if (v6 >= *(_QWORD *)&v29)
              v31 = v6 % *(_QWORD *)&v29;
          }
          else
          {
            v31 = (*(_QWORD *)&v29 - 1) & v6;
          }
          v32 = *v5;
          v33 = *(_QWORD ***)(*v5 + 8 * v31);
          if (v33)
          {
            v34 = *v33;
            if (*v33)
            {
              v35 = *(_QWORD *)&v29 - 1;
              if (v30.u32[0] < 2uLL)
              {
                while (1)
                {
                  v36 = v34[1];
                  if (v36 == v6)
                  {
                    if (v34[2] == v6)
                      goto LABEL_98;
                  }
                  else if ((v36 & v35) != v31)
                  {
                    goto LABEL_140;
                  }
                  v34 = (_QWORD *)*v34;
                  if (!v34)
                    goto LABEL_140;
                }
              }
              do
              {
                v37 = v34[1];
                if (v37 == v6)
                {
                  if (v34[2] == v6)
                  {
LABEL_98:
                    if (v30.u32[0] > 1uLL)
                    {
                      v50 = v6;
                      if (v6 >= *(_QWORD *)&v29)
                        v50 = v6 % *(_QWORD *)&v29;
                    }
                    else
                    {
                      v50 = v35 & v6;
                    }
                    v54 = *(_QWORD **)(v32 + 8 * v50);
                    do
                    {
                      v55 = v54;
                      v54 = (_QWORD *)*v54;
                    }
                    while (v54 != v34);
                    if (v55 == (_QWORD *)(v4 + 24))
                      goto LABEL_125;
                    v56 = v55[1];
                    if (v30.u32[0] > 1uLL)
                    {
                      if (v56 >= *(_QWORD *)&v29)
                        v56 %= *(_QWORD *)&v29;
                    }
                    else
                    {
                      v56 &= v35;
                    }
                    if (v56 != v50)
                    {
LABEL_125:
                      if (!*v34)
                        goto LABEL_126;
                      v57 = *(_QWORD *)(*v34 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v57 >= *(_QWORD *)&v29)
                          v57 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v57 &= v35;
                      }
                      if (v57 != v50)
LABEL_126:
                        *(_QWORD *)(v32 + 8 * v50) = 0;
                    }
                    v58 = *v34;
                    v127 = v7;
                    if (*v34)
                    {
                      v59 = *(_QWORD *)(v58 + 8);
                      if (v30.u32[0] > 1uLL)
                      {
                        if (v59 >= *(_QWORD *)&v29)
                          v59 %= *(_QWORD *)&v29;
                      }
                      else
                      {
                        v59 &= v35;
                      }
                      if (v59 != v50)
                      {
                        *(_QWORD *)(*v5 + 8 * v59) = v55;
                        v58 = *v34;
                      }
                    }
                    *v55 = v58;
                    *v34 = 0;
                    --*(_QWORD *)(v4 + 32);
                    v60 = (std::__shared_weak_count *)v34[4];
                    if (v60)
                    {
                      v61 = (unint64_t *)&v60->__shared_owners_;
                      do
                        v62 = __ldaxr(v61);
                      while (__stlxr(v62 - 1, v61));
                      if (!v62)
                      {
                        ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
                        std::__shared_weak_count::__release_weak(v60);
                      }
                    }
                    operator delete(v34);
                    v7 = v127;
                    break;
                  }
                }
                else
                {
                  if (v37 >= *(_QWORD *)&v29)
                    v37 %= *(_QWORD *)&v29;
                  if (v37 != v31)
                    break;
                }
                v34 = (_QWORD *)*v34;
              }
              while (v34);
            }
          }
        }
LABEL_140:
        v63 = operator new(0x18uLL);
        v63[2] = v2[6];
        *v63 = v4 + 56;
        v64 = *(_QWORD **)(v4 + 64);
        v63[1] = v64;
        *v64 = v63;
        v65 = *(_QWORD *)(v4 + 72) + 1;
        *(_QWORD *)(v4 + 64) = v63;
        *(_QWORD *)(v4 + 72) = v65;
        sub_239AA3360(v4 + 8, v2[6], v2[6], v2[7], v2[8]);
        if (v1)
        {
          v66 = (unint64_t *)&v1->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          v69 = 0;
          v22 = 0;
          if (!v68)
            goto LABEL_145;
          goto LABEL_147;
        }
      }
      else
      {
        v7 = v2[7];
        v1 = (std::__shared_weak_count *)v2[8];
        if (v1)
        {
          v23 = (unint64_t *)&v1->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
        }
      }
      v22 = 0;
      goto LABEL_147;
    }
    v19 = operator new(0x18uLL);
    v19[2] = v6;
    *v19 = v4 + 56;
    v20 = *(_QWORD **)(v4 + 64);
    v19[1] = v20;
    *v20 = v19;
    v21 = *(_QWORD *)(v4 + 72) + 1;
    *(_QWORD *)(v4 + 64) = v19;
    *(_QWORD *)(v4 + 72) = v21;
    sub_239AA3360(v4 + 8, v2[6], v2[6], v2[7], v2[8]);
    goto LABEL_32;
  }
  v13 = v7 - 1;
  if (v8.u32[0] < 2uLL)
  {
    while (1)
    {
      v14 = v12[1];
      if (v14 == v6)
      {
        if (v12[2] == v6)
          goto LABEL_67;
      }
      else if ((v14 & v13) != v9)
      {
        goto LABEL_24;
      }
      v12 = (_QWORD *)*v12;
      if (!v12)
        goto LABEL_24;
    }
  }
  while (1)
  {
    v15 = v12[1];
    if (v15 == v6)
      break;
    if (v15 >= v7)
      v15 %= v7;
    if (v15 != v9)
      goto LABEL_24;
LABEL_19:
    v12 = (_QWORD *)*v12;
    if (!v12)
      goto LABEL_24;
  }
  if (v12[2] != v6)
    goto LABEL_19;
LABEL_67:
  if (v8.u32[0] > 1uLL)
  {
    v38 = v2[6];
    if (v6 >= v7)
      v38 = v6 % v7;
  }
  else
  {
    v38 = v13 & v6;
  }
  v39 = *(_QWORD ***)(*v5 + 8 * v38);
  if (v39)
  {
    v40 = *v39;
    if (*v39)
    {
      if (v8.u32[0] < 2uLL)
      {
        while (1)
        {
          v41 = v40[1];
          if (v41 == v6)
          {
            if (v40[2] == v6)
              goto LABEL_266;
          }
          else if ((v41 & v13) != v38)
          {
            goto LABEL_86;
          }
          v40 = (_QWORD *)*v40;
          if (!v40)
            goto LABEL_86;
        }
      }
      do
      {
        v42 = v40[1];
        if (v42 == v6)
        {
          if (v40[2] == v6)
            goto LABEL_266;
        }
        else
        {
          if (v42 >= v7)
            v42 %= v7;
          if (v42 != v38)
            break;
        }
        v40 = (_QWORD *)*v40;
      }
      while (v40);
    }
  }
LABEL_86:
  v40 = operator new(0x28uLL);
  *v40 = 0;
  v40[1] = v6;
  v40[3] = 0;
  v40[4] = 0;
  v40[2] = v6;
  v43 = (float)(unint64_t)(*(_QWORD *)(v4 + 32) + 1);
  v44 = *(float *)(v4 + 40);
  if ((float)(v44 * (float)v7) < v43)
  {
    v46 = v7 < 3 || (unint64_t)v1 > 1;
    v47 = v46 | (2 * v7);
    v48 = vcvtps_u32_f32(v43 / v44);
    if (v47 <= v48)
      prime = v48;
    else
      prime = v47;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(v4 + 16);
    }
    if (prime > v7)
      goto LABEL_103;
    if (prime < v7)
    {
      v51 = vcvtps_u32_f32((float)*(unint64_t *)(v4 + 32) / *(float *)(v4 + 40));
      if (v7 < 3 || (v52 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v52.i16[0] = vaddlv_u8(v52), v52.u32[0] > 1uLL))
      {
        v51 = std::__next_prime(v51);
      }
      else
      {
        v53 = 1 << -(char)__clz(v51 - 1);
        if (v51 >= 2)
          v51 = v53;
      }
      if (prime <= v51)
        prime = v51;
      if (prime < v7)
LABEL_103:
        sub_239A501C8(v4 + 8, prime);
    }
    v7 = *(_QWORD *)(v4 + 16);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v38 = v6 % v7;
      else
        v38 = v6;
    }
    else
    {
      v38 = (v7 - 1) & v6;
    }
  }
  v118 = *v5;
  v119 = *(_QWORD **)(*v5 + 8 * v38);
  if (v119)
  {
    *v40 = *v119;
    goto LABEL_264;
  }
  *v40 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v4 + 24) = v40;
  *(_QWORD *)(v118 + 8 * v38) = v4 + 24;
  if (*v40)
  {
    v120 = *(_QWORD *)(*v40 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v120 >= v7)
        v120 %= v7;
    }
    else
    {
      v120 &= v7 - 1;
    }
    v119 = (_QWORD *)(*v5 + 8 * v120);
LABEL_264:
    *v119 = v40;
  }
  ++*(_QWORD *)(v4 + 32);
LABEL_266:
  v122 = v2[7];
  v121 = v2[8];
  if (v121)
  {
    v123 = (unint64_t *)(v121 + 8);
    do
      v124 = __ldxr(v123);
    while (__stxr(v124 + 1, v123));
  }
  v1 = (std::__shared_weak_count *)v40[4];
  v40[3] = v122;
  v40[4] = v121;
  if (!v1)
  {
LABEL_32:
    v6 = 0;
    v22 = 1;
    goto LABEL_147;
  }
  v125 = (unint64_t *)&v1->__shared_owners_;
  do
    v126 = __ldaxr(v125);
  while (__stlxr(v126 - 1, v125));
  v6 = 0;
  v69 = 1;
  v22 = 1;
  if (!v126)
  {
LABEL_145:
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
    v22 = v69;
  }
LABEL_147:
  std::mutex::unlock((std::mutex *)(v4 + 80));
  v70 = a1[1];
  if (*(_BYTE *)(v70 + 72))
  {
    v71 = *(_QWORD *)(v70 + 48);
    if (sub_2397A1B98((pthread_mutex_t *)(v4 + 344)))
    {
      sub_2397A16B4((pthread_mutex_t *)(v4 + 344));
      sub_239A444D4((uint64_t)"unknown file", 495, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v72 = *(int8x8_t *)(v4 + 312);
    if (v72)
    {
      v73 = (_QWORD *)(v4 + 304);
      v74 = (uint8x8_t)vcnt_s8(v72);
      v74.i16[0] = vaddlv_u8(v74);
      if (v74.u32[0] > 1uLL)
      {
        v75 = v71;
        if (*(_QWORD *)&v72 <= v71)
          v75 = v71 % *(_QWORD *)&v72;
      }
      else
      {
        v75 = (*(_QWORD *)&v72 - 1) & v71;
      }
      v76 = *(_QWORD ***)(*v73 + 8 * v75);
      if (v76)
      {
        v77 = *v76;
        if (*v76)
        {
          if (v74.u32[0] < 2uLL)
          {
            v78 = *(_QWORD *)&v72 - 1;
            while (1)
            {
              v80 = v77[1];
              if (v80 == v71)
              {
                if (v77[2] == v71)
                  goto LABEL_170;
              }
              else if ((v80 & v78) != v75)
              {
                goto LABEL_172;
              }
              v77 = (_QWORD *)*v77;
              if (!v77)
                goto LABEL_172;
            }
          }
          do
          {
            v79 = v77[1];
            if (v79 == v71)
            {
              if (v77[2] == v71)
              {
LABEL_170:
                sub_239A78378((uint64_t)__p, v73, v77);
                if (__p[0])
                  operator delete(__p[0]);
                break;
              }
            }
            else
            {
              if (v79 >= *(_QWORD *)&v72)
                v79 %= *(_QWORD *)&v72;
              if (v79 != v75)
                break;
            }
            v77 = (_QWORD *)*v77;
          }
          while (v77);
        }
      }
    }
  }
LABEL_172:
  if (!v22)
  {
    v81 = a1[1];
    if (!*(_QWORD *)(v4 + 200) || *(_QWORD *)(v81 + 48) == v6 && *(_BYTE *)(v81 + 72))
      goto LABEL_177;
    v86 = (std::__shared_weak_count *)a1[2];
    if (v86)
    {
      v87 = (unint64_t *)&v86->__shared_owners_;
      do
        v88 = __ldxr(v87);
      while (__stxr(v88 + 1, v87));
    }
    if (v1)
    {
      v89 = (unint64_t *)&v1->__shared_owners_;
      do
        v90 = __ldxr(v89);
      while (__stxr(v90 + 1, v89));
    }
    if (v86)
    {
      v91 = (unint64_t *)&v86->__shared_owners_;
      do
        v92 = __ldxr(v91);
      while (__stxr(v92 + 1, v91));
    }
    if (v1)
    {
      v93 = (unint64_t *)&v1->__shared_owners_;
      do
        v94 = __ldxr(v93);
      while (__stxr(v94 + 1, v93));
    }
    v146 = 0;
    v95 = operator new(0x40uLL);
    *v95 = &off_250AF9468;
    v95[1] = v81;
    v95[2] = v86;
    v95[3] = v6;
    v95[4] = v7;
    v95[5] = v1;
    *((_BYTE *)v95 + 48) = 1;
    v95[7] = v4;
    v146 = v95;
    v96 = sub_239A82B00(v4, v6, v145);
    v97 = v146;
    if (v146 == v145)
    {
      v98 = 4;
      v97 = v145;
    }
    else
    {
      if (!v146)
        goto LABEL_205;
      v98 = 5;
    }
    (*(void (**)(void))(*v97 + 8 * v98))();
LABEL_205:
    if ((v96 & 1) != 0)
    {
LABEL_237:
      if (v1)
      {
        v114 = (unint64_t *)&v1->__shared_owners_;
        do
          v115 = __ldaxr(v114);
        while (__stlxr(v115 - 1, v114));
        if (!v115)
        {
          ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
          std::__shared_weak_count::__release_weak(v1);
        }
      }
      if (v86)
      {
        v116 = (unint64_t *)&v86->__shared_owners_;
        do
          v117 = __ldaxr(v116);
        while (__stlxr(v117 - 1, v116));
        if (!v117)
        {
          ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
          std::__shared_weak_count::__release_weak(v86);
        }
      }
      goto LABEL_179;
    }
    v129 = (void *)v6;
    v130 = v7;
    v131 = v1;
    if (v1)
    {
      v99 = (unint64_t *)&v1->__shared_owners_;
      do
        v100 = __ldxr(v99);
      while (__stxr(v100 + 1, v99));
    }
    v101 = v132;
    v102 = a1[1];
    v103 = *(_QWORD *)(v102 + 104);
    if (v103)
    {
      if (v103 == v102 + 80)
      {
        v133 = v132;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v103 + 24))(v103, v132);
LABEL_214:
        LODWORD(__p[0]) = 2;
        __p[7] = 0;
        __p[8] = 0;
        __p[5] = 0;
        v135 = 0;
        v136 = 0;
        v137 = v129;
        v138 = v130;
        v139 = v131;
        if (v131)
        {
          v104 = &v131->__shared_owners_;
          do
            v105 = __ldxr((unint64_t *)v104);
          while (__stxr(v105 + 1, (unint64_t *)v104));
        }
        v106 = (uint64_t)v133;
        if (v133)
        {
          if (v133 == v132)
          {
            v141 = &v140;
            (*(void (**)(_QWORD *))(v132[0] + 24))(v132);
LABEL_222:
            v143 = 0;
            v144 = 0;
            __p[1] = v129;
            __p[6] = v129;
            v142 = 0;
            v137 = v129;
            v107 = operator new(0x120uLL);
            v107[1] = 0;
            v107[2] = 0;
            *v107 = &off_250AF93E8;
            *(_QWORD *)&v128 = sub_239AA2C28((uint64_t)(v107 + 3), (uint64_t)__p);
            *((_QWORD *)&v128 + 1) = v107;
            sub_239A82E8C(__p);
            if (v133 == v132)
            {
              v108 = 4;
            }
            else
            {
              if (!v133)
                goto LABEL_227;
              v108 = 5;
              v101 = v133;
            }
            (*(void (**)(_QWORD *))(*v101 + 8 * v108))(v101);
LABEL_227:
            if (v131)
            {
              v109 = &v131->__shared_owners_;
              do
                v110 = __ldaxr((unint64_t *)v109);
              while (__stlxr(v110 - 1, (unint64_t *)v109));
              if (!v110)
              {
                ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
                std::__shared_weak_count::__release_weak(v131);
              }
            }
            sub_239AA0050(*(unsigned int **)(v4 + 288), &v128);
            v111 = (std::__shared_weak_count *)*((_QWORD *)&v128 + 1);
            if (*((_QWORD *)&v128 + 1))
            {
              v112 = (unint64_t *)(*((_QWORD *)&v128 + 1) + 8);
              do
                v113 = __ldaxr(v112);
              while (__stlxr(v113 - 1, v112));
              if (!v113)
              {
                ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
                std::__shared_weak_count::__release_weak(v111);
              }
            }
            goto LABEL_237;
          }
          v106 = (*(uint64_t (**)(void))(*v133 + 16))();
        }
        v141 = (uint64_t *)v106;
        goto LABEL_222;
      }
      v103 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v103 + 16))(v103);
    }
    v133 = (_QWORD *)v103;
    goto LABEL_214;
  }
  v81 = a1[1];
LABEL_177:
  v82 = *(_QWORD *)(v81 + 104);
  if (v82)
  {
    LOBYTE(__p[0]) = 1;
    (*(void (**)(uint64_t, void **))(*(_QWORD *)v82 + 48))(v82, __p);
  }
LABEL_179:
  if (v1)
    v83 = v22;
  else
    v83 = 1;
  if ((v83 & 1) == 0)
  {
    v84 = (unint64_t *)&v1->__shared_owners_;
    do
      v85 = __ldaxr(v84);
    while (__stlxr(v85 - 1, v84));
    if (!v85)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AA288C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  std::mutex *v36;
  _QWORD *v37;
  std::__shared_weak_count *v39;
  unint64_t *p_shared_owners;
  unint64_t v41;

  v39 = (std::__shared_weak_count *)v37[4];
  if (v39)
  {
    p_shared_owners = (unint64_t *)&v39->__shared_owners_;
    do
      v41 = __ldaxr(p_shared_owners);
    while (__stlxr(v41 - 1, p_shared_owners));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  operator delete(v37);
  std::mutex::unlock(v36);
  _Unwind_Resume(a1);
}

uint64_t sub_239AA2C28(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    v4 = (_QWORD *)(a1 + 40);
    goto LABEL_5;
  }
  if (v5 != a2 + 16)
  {
    *(_QWORD *)(a1 + 40) = v5;
LABEL_5:
    *v4 = 0;
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 40) = a1 + 16;
  (*(void (**)(_QWORD))(*(_QWORD *)*v4 + 24))(*v4);
LABEL_7:
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (_QWORD *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (!v7)
  {
    v6 = (_QWORD *)(a1 + 104);
    goto LABEL_11;
  }
  if (v7 != a2 + 80)
  {
    *(_QWORD *)(a1 + 104) = v7;
LABEL_11:
    *v6 = 0;
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 104) = a1 + 80;
  (*(void (**)(_QWORD))(*(_QWORD *)*v6 + 24))(*v6);
LABEL_13:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v8 = (_QWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 120) = 0;
  if (!v9)
  {
    v8 = (_QWORD *)(a1 + 160);
    goto LABEL_17;
  }
  if (v9 != a2 + 136)
  {
    *(_QWORD *)(a1 + 160) = v9;
LABEL_17:
    *v8 = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 160) = a1 + 136;
  (*(void (**)(_QWORD))(*(_QWORD *)*v8 + 24))(*v8);
LABEL_19:
  v10 = (_QWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 192);
  if (!v11)
  {
    v10 = (_QWORD *)(a1 + 192);
    goto LABEL_23;
  }
  if (v11 != a2 + 168)
  {
    *(_QWORD *)(a1 + 192) = v11;
LABEL_23:
    *v10 = 0;
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 192) = a1 + 168;
  (*(void (**)(_QWORD))(*(_QWORD *)*v10 + 24))(*v10);
LABEL_25:
  v12 = (_QWORD *)(a2 + 224);
  v13 = *(_QWORD *)(a2 + 224);
  if (!v13)
  {
    v12 = (_QWORD *)(a1 + 224);
    goto LABEL_29;
  }
  if (v13 != a2 + 200)
  {
    *(_QWORD *)(a1 + 224) = v13;
LABEL_29:
    *v12 = 0;
    goto LABEL_31;
  }
  *(_QWORD *)(a1 + 224) = a1 + 200;
  (*(void (**)(_QWORD))(*(_QWORD *)*v12 + 24))(*v12);
LABEL_31:
  v14 = *(_QWORD *)(a2 + 256);
  if (v14)
  {
    v15 = (_QWORD *)(a2 + 256);
    if (v14 == a2 + 232)
    {
      *(_QWORD *)(a1 + 256) = a1 + 232;
      (*(void (**)(_QWORD))(*(_QWORD *)*v15 + 24))(*v15);
      return a1;
    }
    *(_QWORD *)(a1 + 256) = v14;
  }
  else
  {
    v15 = (_QWORD *)(a1 + 256);
  }
  *v15 = 0;
  return a1;
}

void sub_239AA2E44(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF93E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239AA2E54(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF93E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA2E84(uint64_t a1)
{
  return sub_239A82E8C((_QWORD *)(a1 + 24));
}

uint64_t sub_239AA2E90(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF9468;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return a1;
}

void sub_239AA2F34(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  *(_QWORD *)a1 = &off_250AF9468;
  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA2FE8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  result = operator new(0x40uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_250AF9468;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *((_BYTE *)result + 24) = 0;
  *((_BYTE *)result + 48) = 0;
  if (*(_BYTE *)(a1 + 48))
  {
    v7 = *(_QWORD *)(a1 + 32);
    result[3] = *(_QWORD *)(a1 + 24);
    result[4] = v7;
    v8 = *(_QWORD *)(a1 + 40);
    result[5] = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    *((_BYTE *)result + 48) = 1;
  }
  result[7] = *(_QWORD *)(a1 + 56);
  return result;
}

uint64_t sub_239AA3080(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *(_QWORD *)a2 = &off_250AF9468;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  if (*(_BYTE *)(result + 48))
  {
    v6 = *(_QWORD *)(result + 32);
    *(_QWORD *)(a2 + 24) = *(_QWORD *)(result + 24);
    *(_QWORD *)(a2 + 32) = v6;
    v7 = *(_QWORD *)(result + 40);
    *(_QWORD *)(a2 + 40) = v7;
    if (v7)
    {
      v8 = (unint64_t *)(v7 + 8);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    *(_BYTE *)(a2 + 48) = 1;
  }
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(result + 56);
  return result;
}

void sub_239AA30F8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (!*(_BYTE *)(a1 + 48))
    goto LABEL_6;
  v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v2)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  else
  {
LABEL_6:
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_239AA31A0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  if (*((_BYTE *)__p + 48))
  {
    v2 = (std::__shared_weak_count *)__p[5];
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  v5 = (std::__shared_weak_count *)__p[2];
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  operator delete(__p);
}

uint64_t sub_239AA3238(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  char v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  uint64_t v15;

  v2 = a1[7];
  v3 = (std::__shared_weak_count *)a1[5];
  v13 = a1[4];
  v14 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v15 = a1[3];
  v6 = *(_QWORD *)(v2 + 200);
  if (!v6)
    sub_2394172E0();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v13, &v15);
  v8 = v14;
  if (v14)
  {
    v9 = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = *(_QWORD *)(a1[1] + 104);
  if (v11)
  {
    LOBYTE(v15) = v7;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v11 + 48))(v11, &v15);
  }
  return sub_239AA1840(v2, a1[3]);
}

void sub_239AA331C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_239AA3360(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v11;
  uint8x8_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t *v19;
  unint64_t v20;
  float v21;
  float v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t prime;
  int8x8_t v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;

  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v5 = a2;
      if (v11 <= a2)
        v5 = a2 % v11;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
    v13 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
    if (v13)
    {
      v14 = (_QWORD *)*v13;
      if (v14)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == a2)
            {
              if (v14[2] == a2)
                return;
            }
            else if ((v16 & (v11 - 1)) != v5)
            {
              goto LABEL_22;
            }
            v14 = (_QWORD *)*v14;
            if (!v14)
              goto LABEL_22;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == a2)
          {
            if (v14[2] == a2)
              return;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v5)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_22:
  v17 = (_QWORD *)(a1 + 16);
  v18 = operator new(0x28uLL);
  *v18 = 0;
  v18[1] = a2;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  if (a5)
  {
    v19 = (unint64_t *)(a5 + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v22 = *(float *)(a1 + 32);
  if (!v11 || (float)(v22 * (float)v11) < v21)
  {
    v23 = 1;
    if (v11 >= 3)
      v23 = (v11 & (v11 - 1)) != 0;
    v24 = v23 | (2 * v11);
    v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25)
      prime = v25;
    else
      prime = v24;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v27 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v27)
      goto LABEL_37;
    if (prime < *(_QWORD *)&v27)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v27 < 3uLL || (v29 = (uint8x8_t)vcnt_s8(v27), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < *(_QWORD *)&v27)
LABEL_37:
        sub_239A501C8(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v11 <= a2)
        v5 = a2 % v11;
      else
        v5 = a2;
    }
    else
    {
      v5 = (v11 - 1) & a2;
    }
  }
  v31 = *(_QWORD *)a1;
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v32)
  {
    *v18 = *v32;
LABEL_61:
    *v32 = v18;
    goto LABEL_62;
  }
  *v18 = *v17;
  *v17 = v18;
  *(_QWORD *)(v31 + 8 * v5) = v17;
  if (*v18)
  {
    v33 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v33 >= v11)
        v33 %= v11;
    }
    else
    {
      v33 &= v11 - 1;
    }
    v32 = (_QWORD *)(*(_QWORD *)a1 + 8 * v33);
    goto LABEL_61;
  }
LABEL_62:
  ++*(_QWORD *)(a1 + 24);
}

void sub_239AA3664(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23946B318((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AA3678(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF9358;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AA36DC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF9358;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA3750(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF9358;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239AA37A8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF9358;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239AA37E0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AA3838(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239AA3890(_QWORD *a1)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  char v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  uint64_t *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v2 = a1 + 1;
  v3 = a1[1];
  v4 = a1[3];
  ++*(_QWORD *)(v4 + 208);
  std::mutex::lock((std::mutex *)(v4 + 80));
  v5 = *(int8x8_t *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v3 + 8);
    v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = *(_QWORD *)(v3 + 8);
      if (v6 >= *(_QWORD *)&v5)
        v8 = v6 % *(_QWORD *)&v5;
    }
    else
    {
      v8 = (*(_QWORD *)&v5 - 1) & v6;
    }
    v9 = *(_QWORD **)(*(_QWORD *)(v4 + 8) + 8 * v8);
    if (v9)
    {
      v10 = (_QWORD *)*v9;
      if (v10)
      {
        if (v7.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v5 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v6 == v13)
            {
              if (v10[2] == v6)
                goto LABEL_47;
            }
            else if ((v13 & v11) != v8)
            {
              goto LABEL_21;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_21;
          }
        }
        do
        {
          v12 = v10[1];
          if (v6 == v12)
          {
            if (v10[2] == v6)
            {
LABEL_47:
              v28 = v10[3];
              v15 = (std::__shared_weak_count *)v10[4];
              if (v15)
              {
                p_shared_owners = (unint64_t *)&v15->__shared_owners_;
                do
                  v30 = __ldxr(p_shared_owners);
                while (__stxr(v30 + 1, p_shared_owners));
              }
              std::mutex::unlock((std::mutex *)(v4 + 80));
              ++*(_QWORD *)(v4 + 216);
              v31 = *(_QWORD *)v2;
              v32 = *(_QWORD *)(*(_QWORD *)v2 + 40);
              if (v32)
              {
                v40 = v28;
                v41 = v15;
                if (v15)
                {
                  v33 = (unint64_t *)&v15->__shared_owners_;
                  do
                    v34 = __ldxr(v33);
                  while (__stxr(v34 + 1, v33));
                  v32 = *(_QWORD *)(v31 + 40);
                  v39 = 1;
                  if (!v32)
                    sub_2394172E0();
                }
                else
                {
                  v39 = 1;
                }
                (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v32 + 48))(v32, &v40, &v39);
                v35 = v41;
                if (v41)
                {
                  v36 = (unint64_t *)&v41->__shared_owners_;
                  do
                    v37 = __ldaxr(v36);
                  while (__stlxr(v37 - 1, v36));
                  if (!v37)
                  {
                    ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                    std::__shared_weak_count::__release_weak(v35);
                  }
                }
              }
              if (v15)
              {
                v38 = (unint64_t *)&v15->__shared_owners_;
                do
                  v22 = __ldaxr(v38);
                while (__stlxr(v22 - 1, v38));
LABEL_44:
                if (!v22)
                {
                  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
                  std::__shared_weak_count::__release_weak(v15);
                }
              }
              return;
            }
          }
          else
          {
            if (v12 >= *(_QWORD *)&v5)
              v12 %= *(_QWORD *)&v5;
            if (v12 != v8)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_21:
  std::mutex::unlock((std::mutex *)(v4 + 80));
  v14 = *(_QWORD *)v2;
  if (*(_QWORD *)(v4 + 168))
  {
    v15 = (std::__shared_weak_count *)a1[2];
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      v18 = *(_QWORD *)(*(_QWORD *)v2 + 8);
      do
        v19 = __ldxr(v16);
      while (__stxr(v19 + 1, v16));
    }
    else
    {
      v18 = *(_QWORD *)(v14 + 8);
    }
    v23 = (uint64_t *)operator new(0x20uLL);
    *v23 = (uint64_t)&off_250AF93A0;
    v23[1] = v14;
    v23[2] = (uint64_t)v15;
    v23[3] = v4;
    v42 = v23;
    v24 = sub_239A82B00(v4, v18, &v40);
    v25 = v42;
    if (v42 == &v40)
    {
      v26 = 4;
      v25 = &v40;
    }
    else
    {
      if (!v42)
        goto LABEL_39;
      v26 = 5;
    }
    (*(void (**)(void))(*v25 + 8 * v26))();
LABEL_39:
    if ((v24 & 1) == 0)
    {
      sub_239AA0050(*(unsigned int **)(v4 + 288), v2);
      --*(_QWORD *)(v4 + 208);
    }
    if (v15)
    {
      v27 = (unint64_t *)&v15->__shared_owners_;
      do
        v22 = __ldaxr(v27);
      while (__stlxr(v22 - 1, v27));
      goto LABEL_44;
    }
    return;
  }
  v20 = *(_QWORD *)(v14 + 40);
  if (v20)
  {
    v40 = 0;
    v41 = 0;
    v39 = 1;
    (*(void (**)(uint64_t, uint64_t *, char *))(*(_QWORD *)v20 + 48))(v20, &v40, &v39);
    v15 = v41;
    if (v41)
    {
      v21 = (unint64_t *)&v41->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      goto LABEL_44;
    }
  }
}

void sub_239AA3C18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  if (v13)
  {
    v17 = (unint64_t *)&v13->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AA3D50(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF93A0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AA3DB4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF93A0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA3E28(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF93A0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239AA3E80(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF93A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239AA3EB8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AA3F10(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

void sub_239AA3F68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  uint64_t v32[2];
  std::__shared_weak_count *v33;
  char v34;
  _BYTE v35[24];
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 24);
  v37 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  v3 = *(_QWORD *)(v2 + 168);
  if (!v3)
    sub_2394172E0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v3 + 48))(&v30, v3, &v37);
  v4 = *(_QWORD *)(a1 + 8);
  if (v30)
  {
    v5 = *(_QWORD *)(v4 + 40);
    if (v5)
    {
      v37 = v30;
      v38 = v31;
      if (v31)
      {
        p_shared_owners = (unint64_t *)&v31->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        v5 = *(_QWORD *)(v4 + 40);
        LOBYTE(v32[0]) = 1;
        if (!v5)
          sub_2394172E0();
      }
      else
      {
        LOBYTE(v32[0]) = 1;
      }
      (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v5 + 48))(v5, &v37, v32);
      v12 = v38;
      if (v38)
      {
        v13 = (unint64_t *)&v38->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
    }
    v32[0] = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
    v32[1] = v30;
    v33 = v31;
    if (v31)
    {
      v15 = (unint64_t *)&v31->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    v34 = 1;
    v17 = v35;
    v36 = 0;
    sub_239AA43A0((uint64_t)&v37, v32);
    v18 = operator new(0x120uLL);
    v18[1] = 0;
    v18[2] = 0;
    *v18 = &off_250AF93E8;
    *(_QWORD *)&v29 = sub_239AA2C28((uint64_t)(v18 + 3), (uint64_t)&v37);
    *((_QWORD *)&v29 + 1) = v18;
    sub_239A82E8C(&v37);
    if (v36 == v35)
    {
      v19 = 4;
    }
    else
    {
      if (!v36)
        goto LABEL_30;
      v19 = 5;
      v17 = v36;
    }
    (*(void (**)(_QWORD *))(*v17 + 8 * v19))(v17);
LABEL_30:
    v20 = v33;
    if (v33)
    {
      v21 = (unint64_t *)&v33->__shared_owners_;
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 - 1, v21));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
    sub_239AA0050(*(unsigned int **)(v2 + 288), &v29);
    v23 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
    if (*((_QWORD *)&v29 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
    goto LABEL_40;
  }
  v8 = *(_QWORD *)(v4 + 40);
  if (v8)
  {
    v37 = 0;
    v38 = 0;
    LOBYTE(v32[0]) = 1;
    (*(void (**)(uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v8 + 48))(v8, &v37, v32);
    v9 = v38;
    if (v38)
    {
      v10 = (unint64_t *)&v38->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  sub_239AA1840(v2, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8));
LABEL_40:
  v26 = v31;
  if (v31)
  {
    v27 = (unint64_t *)&v31->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
}

void sub_239AA4264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,std::__shared_weak_count *a22)
{
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;

  if (a22)
  {
    p_shared_owners = (unint64_t *)&a22->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
      std::__shared_weak_count::__release_weak(a22);
    }
  }
  if (a12)
  {
    v25 = (unint64_t *)&a12->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AA43A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = 1;
  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = a2[2];
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 24);
  v9 = a2[7];
  if (v9)
  {
    if ((uint64_t *)v9 == a2 + 4)
    {
      *(_QWORD *)(a1 + 104) = a1 + 80;
      (*(void (**)(uint64_t))(*(_QWORD *)a2[7] + 24))(a2[7]);
      goto LABEL_9;
    }
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  }
  *(_QWORD *)(a1 + 104) = v9;
LABEL_9:
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 256) = 0;
  v10 = *a2;
  *(_QWORD *)(a1 + 8) = *a2;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 112) = v10;
  return a1;
}

void sub_239AA4468(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = *(std::__shared_weak_count **)(v1 + 64);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v6 = *(_QWORD **)(v1 + 40);
  if (v6 == (_QWORD *)(v1 + 16))
  {
    v7 = 4;
    v6 = (_QWORD *)(v1 + 16);
  }
  else
  {
    if (!v6)
      goto LABEL_11;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
  _Unwind_Resume(exception_object);
}

void sub_239AA44DC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF92F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239AA44EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF92F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239AA451C(uint64_t a1)
{
  pthread_mutex_t *v2;
  int v3;

  v2 = (pthread_mutex_t *)(a1 + 200);
  sub_2397A1694((pthread_mutex_t *)(a1 + 200));
  v3 = *(unsigned __int8 *)(a1 + 80);
  sub_2397A16B4(v2);
  if (!v3)
    sub_239AA45A0(a1 + 24);
  sub_2397A1694(v2);
  sub_2397A16B4(v2);
  pthread_cond_destroy((pthread_cond_t *)(a1 + 104));
  pthread_cond_destroy((pthread_cond_t *)(a1 + 152));
  sub_2397A163C(v2);
  return sub_239A7BCF8(a1 + 32);
}

uint64_t sub_239AA45A0(uint64_t a1)
{
  pthread_mutex_t *v2;
  uint64_t v4;

  v2 = (pthread_mutex_t *)(a1 + 176);
  sub_2397A1694((pthread_mutex_t *)(a1 + 176));
  *(_BYTE *)(a1 + 56) = 1;
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 64) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 80)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 64) <= 0)
        goto LABEL_4;
    }
    v4 = 261;
LABEL_15:
    sub_239A444D4((uint64_t)"unknown file", v4, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
LABEL_4:
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  while (*(_QWORD *)(a1 + 48) && *(uint64_t *)(a1 + 72) >= 1)
  {
    if (pthread_cond_wait((pthread_cond_t *)(a1 + 80), v2))
    {
      sub_239A444D4((uint64_t)"unknown file", 277, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_2397A16B4(v2);
  sub_2397A1694(v2);
  if (*(uint64_t *)(a1 + 72) >= 1)
  {
    while (1)
    {
      sub_2397A16B4(v2);
      if (pthread_cond_signal((pthread_cond_t *)(a1 + 128)))
        break;
      sub_2397A1694(v2);
      if (*(uint64_t *)(a1 + 72) <= 0)
        return sub_2397A16B4(v2);
    }
    v4 = 287;
    goto LABEL_15;
  }
  return sub_2397A16B4(v2);
}

void sub_239AA4720(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

void sub_239AA4740(uint64_t a1)
{
  sub_239AA4764(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239AA4764(uint64_t a1)
{
  std::__shared_weak_count *v2;
  uint64_t v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t i;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD v42[3];
  _QWORD *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &off_250AF92B8;
  if (*(_QWORD *)(a1 + 272))
  {
    v3 = *(_QWORD *)(a1 + 240);
    v2 = *(std::__shared_weak_count **)(a1 + 248);
    if (!v2)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (v6)
    {
LABEL_7:
      if (v3)
        goto LABEL_10;
      goto LABEL_8;
    }
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    if (!v3)
LABEL_8:
      sub_2397A3758(*(_QWORD *)(a1 + 272));
  }
LABEL_10:
  v7 = *(_QWORD *)(a1 + 288);
  if (v7)
    sub_239AA45A0(v7);
  while (1)
  {
    v42[0] = &off_250AF9660;
    v43 = v42;
    sub_2397A1694((pthread_mutex_t *)(a1 + 344));
    v8 = *(_QWORD *)(a1 + 328);
    if (!v8)
    {
      if (!v43)
        sub_2394172E0();
      (*(void (**)(_QWORD *))(*v43 + 48))(v43);
    }
    sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
    v9 = v43;
    if (v43 == v42)
    {
      v9 = v42;
      v10 = 4;
    }
    else
    {
      if (!v43)
        goto LABEL_20;
      v10 = 5;
    }
    (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_20:
    if (!v8)
      break;
    sub_2397A186C(1);
  }
  v11 = *(_QWORD *)(a1 + 256);
  if (v11)
  {
    sub_2397A195C(v11);
    v12 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  if (*(_QWORD *)(a1 + 288))
  {
    v15 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = 0;
    *(_QWORD *)(a1 + 296) = 0;
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_QWORD *)(a1 + 328))
  {
    v18 = *(_QWORD **)(a1 + 320);
    if (v18)
    {
      do
      {
        v19 = (_QWORD *)*v18;
        operator delete(v18);
        v18 = v19;
      }
      while (v19);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v20 = *(_QWORD *)(a1 + 312);
    if (v20)
    {
      for (i = 0; i != v20; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 304) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  sub_2397A163C((pthread_mutex_t *)(a1 + 344));
  v22 = *(_QWORD **)(a1 + 320);
  if (v22)
  {
    do
    {
      v23 = (_QWORD *)*v22;
      operator delete(v22);
      v22 = v23;
    }
    while (v23);
  }
  v24 = *(void **)(a1 + 304);
  *(_QWORD *)(a1 + 304) = 0;
  if (v24)
    operator delete(v24);
  v25 = *(std::__shared_weak_count **)(a1 + 296);
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = *(std::__shared_weak_count **)(a1 + 280);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = *(std::__shared_weak_count **)(a1 + 264);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = *(std::__shared_weak_count **)(a1 + 248);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = *(_QWORD **)(a1 + 200);
  if (v37 == (_QWORD *)(a1 + 176))
  {
    v38 = 4;
    v37 = (_QWORD *)(a1 + 176);
LABEL_69:
    (*(void (**)(void))(*v37 + 8 * v38))();
  }
  else if (v37)
  {
    v38 = 5;
    goto LABEL_69;
  }
  v39 = *(_QWORD **)(a1 + 168);
  if (v39 == (_QWORD *)(a1 + 144))
  {
    v40 = 4;
    v39 = (_QWORD *)(a1 + 144);
LABEL_74:
    (*(void (**)(void))(*v39 + 8 * v40))();
  }
  else if (v39)
  {
    v40 = 5;
    goto LABEL_74;
  }
  return sub_239A9E5BC(a1);
}

void sub_239AA4B14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_239416A48(exception_object);
}

void sub_239AA4B90()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA4BA4()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF9660;
  return result;
}

void sub_239AA4BC8(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF9660;
}

uint64_t sub_239AA4BE4(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = off_250AF3350;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v6 = (_QWORD *)*v2;
    v7 = v2[3];
    if (v7)
    {
      v8 = v2[4];
      v5 = (void *)v2[3];
      if (v8 != v7)
      {
        do
        {
          if (*(char *)(v8 - 1) < 0)
            operator delete(*(void **)(v8 - 24));
          v8 -= 24;
        }
        while (v8 != v7);
        v5 = (void *)v2[3];
      }
      v2[4] = v7;
      operator delete(v5);
    }
    operator delete(v2);
    v2 = v6;
  }
  while (v6);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_239AA4CB0(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = off_250AF3350;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v5 = (_QWORD *)*v2;
    v6 = v2[3];
    if (v6)
    {
      v7 = v2[4];
      v4 = (void *)v2[3];
      if (v7 != v6)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0)
            operator delete(*(void **)(v7 - 24));
          v7 -= 24;
        }
        while (v7 != v6);
        v4 = (void *)v2[3];
      }
      v2[4] = v6;
      operator delete(v4);
    }
    operator delete(v2);
    v2 = v5;
  }
  while (v5);
LABEL_5:
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v3)
    operator delete(v3);
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AA4D8C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1 + 8;
  v2 = operator new(0x48uLL);
  *v2 = off_250AF3350;
  sub_239A9DBBC((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_239AA4DCC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239AA4DE0(uint64_t a1, _QWORD *a2)
{
  *a2 = off_250AF3350;
  return sub_239A9DBBC((uint64_t)(a2 + 1), a1 + 8);
}

void sub_239AA4DFC(uint64_t a1)
{
  sub_239AA5734(a1 + 8);
}

void sub_239AA4E04(void *a1)
{
  sub_239AA5734((uint64_t)a1 + 8);
  operator delete(a1);
}

void sub_239AA4E2C(int8x8_t *a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  int8x8_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  std::ios_base *v23;
  unint64_t v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[40];
  _BYTE v33[32];
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  void *v40;
  char v41;
  const void *v42[3];
  void *v43[3];
  void *v44[2];
  unsigned __int8 v45;
  char v46;
  void *v47;
  char v48;
  void *v49;
  char v50;
  char v51;
  char v52;
  __int128 v53;
  __int128 __p;
  uint64_t v55;
  char v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  uint64_t v65;
  std::string v66;
  _QWORD v67[2];
  _BYTE v68[408];
  _QWORD v69[20];

  v69[19] = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  if (!*(_QWORD *)&v4)
    goto LABEL_21;
  v5 = *a2;
  v6 = (uint8x8_t)vcnt_s8(v4);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v7 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v7 = (*(_QWORD *)&v4 - 1) & v5;
  }
  v8 = a1[1];
  v9 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v7);
  if (!v9 || (v10 = (_QWORD *)*v9) == 0)
  {
LABEL_21:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  v11 = *(_QWORD *)&v4 - 1;
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v12 = v10[1];
      if (v12 == v5)
      {
        if (v10[2] == v5)
          goto LABEL_23;
      }
      else if ((v12 & v11) != v7)
      {
        goto LABEL_21;
      }
      v10 = (_QWORD *)*v10;
      if (!v10)
        goto LABEL_21;
    }
  }
  while (1)
  {
    v13 = v10[1];
    if (v13 == v5)
      break;
    if (v13 >= *(_QWORD *)&v4)
      v13 %= *(_QWORD *)&v4;
    if (v13 != v7)
      goto LABEL_21;
LABEL_16:
    v10 = (_QWORD *)*v10;
    if (!v10)
      goto LABEL_21;
  }
  if (v10[2] != v5)
    goto LABEL_16;
LABEL_23:
  if (v6.u32[0] > 1uLL)
  {
    v14 = *a2;
    if (*(_QWORD *)&v4 <= v5)
      v14 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v14 = v11 & v5;
  }
  v15 = *(_QWORD **)(*(_QWORD *)&v8 + 8 * v14);
  if (!v15 || (v16 = (_QWORD *)*v15) == 0)
LABEL_85:
    sub_23941D898("unordered_map::at: key not found");
  if (v6.u32[0] < 2uLL)
  {
    while (1)
    {
      v17 = v16[1];
      if (v17 == v5)
      {
        if (v16[2] == v5)
          goto LABEL_35;
      }
      else if ((v17 & v11) != v14)
      {
        goto LABEL_85;
      }
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_85;
    }
  }
  while (2)
  {
    v24 = v16[1];
    if (v24 != v5)
    {
      if (v24 >= *(_QWORD *)&v4)
        v24 %= *(_QWORD *)&v4;
      if (v24 != v14)
        goto LABEL_85;
      goto LABEL_45;
    }
    if (v16[2] != v5)
    {
LABEL_45:
      v16 = (_QWORD *)*v16;
      if (!v16)
        goto LABEL_85;
      continue;
    }
    break;
  }
LABEL_35:
  sub_2396F295C(v16 + 3, (uint64_t)&a1[6], (uint64_t)&v40);
  v18 = MEMORY[0x24BEDB838];
  v19 = MEMORY[0x24BEDB838] + 64;
  v20 = (_QWORD *)MEMORY[0x24BEDB7E0];
  v21 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v22 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  v69[0] = MEMORY[0x24BEDB838] + 64;
  v67[0] = v21;
  *(_QWORD *)((char *)v67 + *(_QWORD *)(v21 - 24)) = v22;
  v67[1] = 0;
  v23 = (std::ios_base *)((char *)v67 + *(_QWORD *)(v67[0] - 24));
  std::ios_base::init(v23, v68);
  v23[1].__vftable = 0;
  v23[1].__fmtflags_ = -1;
  v67[0] = v18 + 24;
  v69[0] = v19;
  MEMORY[0x23B83DC80](v68);
  std::ifstream::open();
  if ((v68[*(_QWORD *)(v67[0] - 24) + 16] & 5) != 0)
  {
    sub_239618F08(v44, "Failure during loading image file");
    v52 = 1;
    sub_239616578(5u, (__int128 *)v44, (uint64_t)&v53);
    *(_OWORD *)v32 = v53;
    v32[16] = 0;
    v38 = 0;
    if (v64)
    {
      v33[0] = 0;
      if (v56)
      {
        *(_OWORD *)&v32[16] = __p;
        *(_QWORD *)&v32[32] = v55;
        v55 = 0;
        __p = 0uLL;
        v33[0] = 1;
      }
      v33[8] = 0;
      v37 = 0;
      if (v62)
      {
        *(_QWORD *)&v33[24] = v58;
        *(_OWORD *)&v33[8] = v57;
        v57 = 0uLL;
        v34 = v59;
        v35 = v60;
        v36 = v61;
        v58 = 0;
        v60 = 0uLL;
        v61 = 0;
        v37 = 1;
      }
      v38 = 1;
      v39 = 0;
      if (v56 && SHIBYTE(v55) < 0)
        operator delete((void *)__p);
    }
    else
    {
      v39 = 0;
    }
    if (v52)
    {
      if (v51)
      {
        if (v50 < 0)
          operator delete(v49);
        if (v48 < 0)
          operator delete(v47);
      }
      if (v46 && (char)v45 < 0)
        operator delete(v44[0]);
    }
  }
  else
  {
    HIBYTE(v42[2]) = 18;
    strcpy((char *)v42, "CorePhotogrammetry");
    sub_2395AC84C(v42, v43);
    sub_239A7D600(&v66, *(_QWORD **)&v68[*(_QWORD *)(v67[0] - 24) + 24]);
    sub_2395AC2E8((const void **)&v66.__r_.__value_.__l.__data_, (uint64_t)v43, (uint64_t)v44);
    sub_2394988CC((uint64_t)&v53);
    if ((v45 & 0x80u) == 0)
      v25 = v44;
    else
      v25 = (void **)v44[0];
    if ((v45 & 0x80u) == 0)
      v26 = v45;
    else
      v26 = (uint64_t)v44[1];
    sub_239458500(&__p, (uint64_t)v25, v26);
    sub_239626704(&v53, 5, (uint64_t)v32);
    *(_QWORD *)&v53 = *MEMORY[0x24BEDB7F0];
    v27 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    *(_QWORD *)((char *)&v53 + *(_QWORD *)(v53 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
    *(_QWORD *)&__p = v27;
    *((_QWORD *)&__p + 1) = MEMORY[0x24BEDB848] + 16;
    if (v63 < 0)
      operator delete(*((void **)&v60 + 1));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x23B83E250](&v65);
    if (v46 && (char)v45 < 0)
      operator delete(v44[0]);
    if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v66.__r_.__value_.__l.__data_);
    if (v43[0])
    {
      v43[1] = v43[0];
      operator delete(v43[0]);
    }
    if (SHIBYTE(v42[2]) < 0)
      operator delete((void *)v42[0]);
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)((char *)v67 + *(_QWORD *)(v67[0] - 24)), *(_DWORD *)&v68[*(_QWORD *)(v67[0] - 24) + 16] | 4);
  }
  v67[0] = *v20;
  *(_QWORD *)((char *)v67 + *(_QWORD *)(v67[0] - 24)) = v20[3];
  MEMORY[0x23B83DC8C](v68);
  std::istream::~istream();
  MEMORY[0x23B83E250](v69);
  if (v39)
  {
    sub_239AA5614((uint64_t)v32);
    v28 = operator new(0x70uLL);
    v28[1] = 0;
    v28[2] = 0;
    *v28 = &off_250AF5880;
    v28[3] = &off_250ADD920;
    v29 = *(_OWORD *)&v32[8];
    *(_QWORD *)&v32[8] = 0;
    *(_QWORD *)&v32[16] = 0;
    v30 = *(_OWORD *)&v32[24];
    *((_OWORD *)v28 + 2) = v29;
    *((_OWORD *)v28 + 3) = v30;
    v31 = *(_OWORD *)&v33[16];
    *((_OWORD *)v28 + 4) = *(_OWORD *)v33;
    *((_OWORD *)v28 + 5) = v31;
    v28[12] = v34;
    *((_WORD *)v28 + 52) = v35;
    *a3 = v28 + 3;
    a3[1] = v28;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  sub_239AA557C((uint64_t)v32);
  if (v41 < 0)
    operator delete(v40);
}

void sub_239AA5458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46,char a47)
{
  void *v48;

  if (a47 && a46 < 0)
    operator delete(__p);
  if (SLOBYTE(STACK[0x267]) < 0)
  {
    operator delete((void *)STACK[0x250]);
    v48 = a38;
    if (a38)
      goto LABEL_6;
  }
  else
  {
    v48 = a38;
    if (a38)
    {
LABEL_6:
      operator delete(v48);
      if ((a37 & 0x80000000) == 0)
        goto LABEL_11;
LABEL_10:
      operator delete(a32);
LABEL_11:
      sub_23955CB90(&STACK[0x268]);
      if (a31 < 0)
        operator delete(a26);
      _Unwind_Resume(a1);
    }
  }
  if ((a37 & 0x80000000) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

uint64_t sub_239AA557C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 120))
  {
    sub_239416DA0(a1 + 8);
    nullsub_4(a1);
    return a1;
  }
  if (!*(_BYTE *)(a1 + 112))
    return a1;
  if (!*(_BYTE *)(a1 + 104))
    goto LABEL_8;
  if (*(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
LABEL_8:
      if (!*(_BYTE *)(a1 + 40))
        return a1;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  operator delete(*(void **)(a1 + 48));
  if (!*(_BYTE *)(a1 + 40))
    return a1;
LABEL_9:
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  return a1;
}

uint64_t sub_239AA5614(uint64_t result)
{
  __int128 *v1;
  void *exception;
  __int128 v3;
  _BYTE v4[112];

  v1 = (__int128 *)result;
  if (!*(_BYTE *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    v3 = *v1;
    sub_23952329C(v4, v1 + 1);
    sub_239523424((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_250ADD7C0, (void (*)(void *))sub_239523474);
  }
  return result;
}

void sub_239AA5690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239522FE4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239AA56A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  sub_239522FE4((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_239AA56C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5880;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239AA56D8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5880;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

double sub_239AA5708(uint64_t a1)
{
  uint64_t v1;
  double result;

  v1 = a1 + 24;
  sub_239416DA0(a1 + 32);
  *(_QWORD *)&result = nullsub_4(v1).n128_u64[0];
  return result;
}

void sub_239AA5734(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  if (*(char *)(a1 + 63) < 0)
  {
    operator delete(*(void **)(a1 + 40));
    v2 = *(_QWORD **)(a1 + 16);
    if (!v2)
      goto LABEL_5;
  }
  else
  {
    v2 = *(_QWORD **)(a1 + 16);
    if (!v2)
      goto LABEL_5;
  }
  do
  {
    v5 = (_QWORD *)*v2;
    v6 = v2[3];
    if (v6)
    {
      v7 = v2[4];
      v4 = (void *)v2[3];
      if (v7 != v6)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0)
            operator delete(*(void **)(v7 - 24));
          v7 -= 24;
        }
        while (v7 != v6);
        v4 = (void *)v2[3];
      }
      v2[4] = v6;
      operator delete(v4);
    }
    operator delete(v2);
    v2 = v5;
  }
  while (v5);
LABEL_5:
  v3 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v3)
    operator delete(v3);
}

void sub_239AA5800(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF91F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239AA5810(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF91F0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239AA5840(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_239AA5850(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t (***v8)();
  uint64_t v9;
  const std::__fs::filesystem::path *v10;
  uint64_t *v11;
  void *v12;
  std::__fs::filesystem::path::__string_view v13;
  uint64_t (***v14)();
  std::basic_string_view<_CharT, _Traits>::size_type v15;
  std::basic_string_view<_CharT, _Traits>::size_type v16;
  uint64_t (**v17)();
  int v18;
  void **v19;
  std::string *v20;
  std::string *v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  void *v34[2];
  _BYTE v35[7];
  char v36;
  void *v37[2];
  char v38;
  void *__p;
  std::string *v40;
  _BYTE v41[40];
  __int128 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  pthread_cond_t v46;
  pthread_cond_t v47;
  pthread_mutex_t v48;
  uint64_t (**__dst)();
  _BYTE *size;
  std::basic_string_view<_CharT, _Traits>::size_type p_p;
  void **p_dst;
  uint64_t v53;

  v53 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a1 + 4) || *(_DWORD *)a1 >= 2u)
  {
    kdebug_trace();
    v6 = *a2;
    if (!*(_QWORD *)(v6 + 200))
      goto LABEL_12;
    LOBYTE(__p) = 0;
    memset(&v41[8], 0, 32);
    v42 = 0u;
    v43 = 0;
    v44 = 0;
    v45 = 0;
    sub_2397A1618(&v48);
    *(_DWORD *)v41 = 0x7FFFFFFF;
    pthread_cond_init(&v46, 0);
    pthread_cond_init(&v47, 0);
    __dst = &off_250AF3398;
    size = v41;
    p_p = (std::basic_string_view<_CharT, _Traits>::size_type)&__p;
    p_dst = (void **)&__dst;
    v7 = sub_239AA5DCC(v6, &__dst);
    v8 = (uint64_t (***)())p_dst;
    if (p_dst == (void **)&__dst)
    {
      v9 = 4;
      v8 = &__dst;
    }
    else
    {
      if (!p_dst)
      {
LABEL_9:
        if (v7)
        {
          sub_2395BFB54((unsigned int *)v41);
          sub_2395C2A4C((uint64_t)v41);
        }
        sub_2395C29C4((uint64_t)v41);
LABEL_12:
        v32 = a1;
        kdebug_trace();
        memset(v41, 0, 32);
        *(_DWORD *)&v41[32] = 1065353216;
        v10 = *(const std::__fs::filesystem::path **)(a3 + 16);
        if (v10)
        {
          v11 = (uint64_t *)(a1 + 272);
          while (1)
          {
            v13 = std::__fs::filesystem::path::__filename(v10 + 1);
            if (v13.__size_ >= 0x7FFFFFFFFFFFFFF8)
              sub_23941A5AC();
            if (v13.__size_ >= 0x17)
              break;
            HIBYTE(p_p) = v13.__size_;
            v14 = &__dst;
            if (v13.__size_)
              goto LABEL_24;
LABEL_25:
            *((_BYTE *)v14 + v13.__size_) = 0;
            v17 = __dst;
            v33 = p_p;
            HIBYTE(v33) = BYTE3(p_p);
            v18 = SHIBYTE(p_p);
            if (SHIBYTE(p_p) < 0)
            {
              sub_23941A7F8(v34, __dst, (unint64_t)size);
            }
            else
            {
              v34[0] = __dst;
              v34[1] = size;
              *(_DWORD *)v35 = v33;
              *(_DWORD *)&v35[3] = *(_DWORD *)((char *)&p_p + 3);
              v36 = HIBYTE(p_p);
            }
            sub_2395ACAA8((uint64_t)v34, (char *)v37);
            sub_2396F2748(&__p, v11, (uint64_t)v37);
            if (v38 < 0)
            {
              operator delete(v37[0]);
              if ((v36 & 0x80000000) == 0)
              {
LABEL_30:
                if (v18 < 0)
                  goto LABEL_41;
                goto LABEL_31;
              }
            }
            else if ((v36 & 0x80000000) == 0)
            {
              goto LABEL_30;
            }
            operator delete(v34[0]);
            if (v18 < 0)
LABEL_41:
              operator delete(v17);
LABEL_31:
            v19 = (void **)(sub_239A9A10C((uint64_t)v41, v10->__pn_.__r_.__value_.__r.__words[2], &v10->__pn_.__r_.__value_.__r.__words[2])+ 3);
            if (v19 != &__p)
              sub_239A70694((uint64_t)v19, (std::string *)__p, v40, 0xAAAAAAAAAAAAAAABLL * (((char *)v40 - (_BYTE *)__p) >> 3));
            v20 = (std::string *)__p;
            if (__p)
            {
              v21 = v40;
              v12 = __p;
              if (v40 != __p)
              {
                do
                {
                  if (SHIBYTE(v21[-1].__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v21[-1].__r_.__value_.__l.__data_);
                  --v21;
                }
                while (v21 != v20);
                v12 = __p;
              }
              v40 = v20;
              operator delete(v12);
            }
            v10 = (const std::__fs::filesystem::path *)v10->__pn_.__r_.__value_.__r.__words[0];
            if (!v10)
              goto LABEL_42;
          }
          v15 = (v13.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v13.__size_ | 7) != 0x17)
            v15 = v13.__size_ | 7;
          v16 = v15 + 1;
          v14 = (uint64_t (***)())operator new(v15 + 1);
          size = (_BYTE *)v13.__size_;
          p_p = v16 | 0x8000000000000000;
          __dst = (uint64_t (**)())v14;
LABEL_24:
          memmove(v14, v13.__data_, v13.__size_);
          goto LABEL_25;
        }
LABEL_42:
        if (*(_BYTE *)(v32 + 1160))
        {
          sub_239A71290(v32 + 1120, (uint64_t *)v41);
          v22 = *(_QWORD **)&v41[16];
          if (!*(_QWORD *)&v41[16])
          {
LABEL_52:
            v27 = *(void **)v41;
            *(_QWORD *)v41 = 0;
            if (v27)
              operator delete(v27);
            return;
          }
        }
        else
        {
          v23 = *(_QWORD *)v41;
          v24 = *(_QWORD *)&v41[8];
          *(_QWORD *)v41 = 0;
          *(_QWORD *)&v41[8] = 0;
          *(_QWORD *)(v32 + 1120) = v23;
          *(_QWORD *)(v32 + 1128) = v24;
          v22 = *(_QWORD **)&v41[16];
          v25 = *(_QWORD *)&v41[24];
          *(_QWORD *)(v32 + 1136) = *(_QWORD *)&v41[16];
          *(_QWORD *)(v32 + 1144) = v25;
          *(_DWORD *)(v32 + 1152) = *(_DWORD *)&v41[32];
          if (v25)
          {
            v26 = v22[1];
            if ((v24 & (v24 - 1)) != 0)
            {
              if (v26 >= v24)
                v26 %= v24;
            }
            else
            {
              v26 &= v24 - 1;
            }
            v22 = 0;
            *(_QWORD *)(v23 + 8 * v26) = v32 + 1136;
            *(_QWORD *)&v41[16] = 0;
            *(_QWORD *)&v41[24] = 0;
          }
          *(_BYTE *)(v32 + 1160) = 1;
          if (!v22)
            goto LABEL_52;
        }
        do
        {
          v29 = (_QWORD *)*v22;
          v30 = v22[3];
          if (v30)
          {
            v31 = v22[4];
            v28 = (void *)v22[3];
            if (v31 != v30)
            {
              do
              {
                if (*(char *)(v31 - 1) < 0)
                  operator delete(*(void **)(v31 - 24));
                v31 -= 24;
              }
              while (v31 != v30);
              v28 = (void *)v22[3];
            }
            v22[4] = v30;
            operator delete(v28);
          }
          operator delete(v22);
          v22 = v29;
        }
        while (v29);
        goto LABEL_52;
      }
      v9 = 5;
    }
    (*v8)[v9]();
    goto LABEL_9;
  }
}

void sub_239AA5CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_2395C29C4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239AA5D3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239596DB0(v1 + 8);
  _Unwind_Resume(a1);
}

void sub_239AA5D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,char a24)
{
  void *v24;

  operator delete(v24);
  sub_239A8E020((uint64_t)&a24);
  _Unwind_Resume(a1);
}

uint64_t sub_239AA5DCC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a1 + 288))
  {
    sub_239A444D4((uint64_t)"unknown file", 654, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v14 = v13;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v13);
      v3 = v14;
    }
    else
    {
      v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      v14 = v3;
    }
  }
  else
  {
    v14 = 0;
  }
  LODWORD(v15[0]) = 100;
  v15[7] = 0;
  v15[8] = 0;
  v15[5] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if (!v3)
    goto LABEL_10;
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
LABEL_10:
    v24 = v3;
    goto LABEL_12;
  }
  v24 = &v23;
  (*(void (**)(_QWORD *))(v13[0] + 24))(v13);
LABEL_12:
  v4 = (std::__shared_weak_count *)operator new(0x120uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF93E8;
  *(_QWORD *)&v12 = sub_239AA2C28((uint64_t)&v4[1], (uint64_t)v15);
  *((_QWORD *)&v12 + 1) = v4;
  sub_239A82E8C(v15);
  v7 = v14;
  if (v14 == v13)
  {
    v8 = 4;
    v7 = v13;
    goto LABEL_16;
  }
  if (v14)
  {
    v8 = 5;
LABEL_16:
    (*(void (**)(_QWORD *, uint64_t))(*v7 + 8 * v8))(v7, v6);
  }
  v9 = sub_239AA0050(*(unsigned int **)(a1 + 288), &v12);
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v9;
}

void sub_239AA5FD0(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_239AA5FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,_QWORD *a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  if (a43 == v46)
  {
    v48 = 4;
  }
  else
  {
    if (!a43)
      goto LABEL_6;
    v48 = 5;
    v46 = a43;
  }
  (*(void (**)(_QWORD *))(*v46 + 8 * v48))(v46);
LABEL_6:
  if (a39 == v45)
  {
    v49 = 4;
  }
  else
  {
    if (!a39)
      goto LABEL_11;
    v49 = 5;
    v45 = a39;
  }
  (*(void (**)(_QWORD *))(*v45 + 8 * v49))(v45);
LABEL_11:
  sub_239A8303C(v44);
  sub_239A83110(v43);
  v50 = a20;
  if (a20 == &a17)
  {
    v51 = 4;
    v50 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_16;
    v51 = 5;
  }
  (*(void (**)(void))(*v50 + 8 * v51))();
LABEL_16:
  v52 = a14;
  if (a14 == &a11)
  {
    v53 = 4;
    v52 = &a11;
  }
  else
  {
    if (!a14)
      _Unwind_Resume(a1);
    v53 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v52 + 8 * v53))();
  _Unwind_Resume(a1);
}

void sub_239AA60EC()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239AA6100(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF3398;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239AA6138(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF3398;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239AA6158(uint64_t a1, _BYTE *a2)
{
  unsigned int *v2;
  uint64_t v3;
  char v5;

  v3 = a1 + 8;
  v2 = *(unsigned int **)(a1 + 8);
  **(_BYTE **)(v3 + 8) = *a2;
  v5 = 1;
  return sub_2395BFE44(v2, &v5);
}

_BYTE *sub_239AA618C(char *a1)
{
  char v1;
  _BYTE *result;
  char v3;

  v1 = *a1;
  a1[2] ^= *a1;
  a1[3] ^= v1;
  a1[4] = 0;
  v3 = a1[1];
  result = a1 + 1;
  *result = v1 ^ v3;
  return result;
}

uint64_t sub_239AA61BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  void *v27;
  void *v28;
  char *v29;
  char *v30;
  _BYTE *v31;
  size_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  _BYTE *v40;
  unint64_t v41;
  char *v42;
  void *v43;
  char *v44;
  unint64_t v45;
  void *v46;
  unint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;

  if ((uint64_t *)a1 == a2)
    goto LABEL_75;
  v5 = *a2;
  v4 = a2[1];
  v6 = 0xCCCCCCCCCCCCCCCDLL * ((v4 - *a2) >> 3);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(char **)a1;
  if (0xCCCCCCCCCCCCCCCDLL * ((v7 - *(_QWORD *)a1) >> 3) < v6)
  {
    if (v8)
    {
      v9 = *(char **)(a1 + 8);
      v10 = *(char **)a1;
      if (v9 != v8)
      {
        do
        {
          v11 = (_QWORD *)*((_QWORD *)v9 - 3);
          if (v11)
          {
            do
            {
              v12 = (_QWORD *)*v11;
              operator delete(v11);
              v11 = v12;
            }
            while (v12);
          }
          v14 = (void *)*((_QWORD *)v9 - 5);
          v9 -= 40;
          v13 = v14;
          *(_QWORD *)v9 = 0;
          if (v14)
            operator delete(v13);
        }
        while (v9 != v8);
        v10 = *(char **)a1;
      }
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v10);
      v7 = 0;
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
    }
    if (v6 > 0x666666666666666)
      goto LABEL_76;
    v18 = 0xCCCCCCCCCCCCCCCDLL * (v7 >> 3);
    v19 = 2 * v18;
    if (2 * v18 <= v6)
      v19 = v6;
    v20 = v18 >= 0x333333333333333 ? 0x666666666666666 : v19;
    if (v20 > 0x666666666666666)
LABEL_76:
      sub_2394189F8();
    v21 = 40 * v20;
    v8 = (char *)operator new(40 * v20);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = &v8[v21];
    if (v5 != v4)
    {
      v22 = 0;
      do
      {
        sub_239A4FD24((uint64_t)&v8[v22], v5 + v22);
        v22 += 40;
      }
      while (v5 + v22 != v4);
      v8 += v22;
    }
LABEL_47:
    *(_QWORD *)(a1 + 8) = v8;
    goto LABEL_48;
  }
  v15 = *(char **)(a1 + 8);
  if (0xCCCCCCCCCCCCCCCDLL * ((v15 - v8) >> 3) >= v6)
  {
    if (v5 != v4)
    {
      do
      {
        if ((char *)v5 != v8)
        {
          *((_DWORD *)v8 + 8) = *(_DWORD *)(v5 + 32);
          sub_239AA6750(v8, *(uint64_t **)(v5 + 16));
        }
        v5 += 40;
        v8 += 40;
      }
      while (v5 != v4);
      v15 = *(char **)(a1 + 8);
    }
    while (v15 != v8)
    {
      v25 = (_QWORD *)*((_QWORD *)v15 - 3);
      if (v25)
      {
        do
        {
          v26 = (_QWORD *)*v25;
          operator delete(v25);
          v25 = v26;
        }
        while (v26);
      }
      v28 = (void *)*((_QWORD *)v15 - 5);
      v15 -= 40;
      v27 = v28;
      *(_QWORD *)v15 = 0;
      if (v28)
        operator delete(v27);
    }
    goto LABEL_47;
  }
  v16 = v5 + 8 * ((v15 - v8) >> 3);
  if (v15 != v8)
  {
    v17 = 8 * ((v15 - v8) >> 3);
    do
    {
      if ((char *)v5 != v8)
      {
        *((_DWORD *)v8 + 8) = *(_DWORD *)(v5 + 32);
        sub_239AA6750(v8, *(uint64_t **)(v5 + 16));
      }
      v5 += 40;
      v8 += 40;
      v17 -= 40;
    }
    while (v17);
    v8 = *(char **)(a1 + 8);
  }
  v23 = v8;
  if (v16 != v4)
  {
    v24 = 0;
    do
    {
      sub_239A4FD24((uint64_t)&v8[v24], v16 + v24);
      v24 += 40;
    }
    while (v16 + v24 != v4);
    v23 = &v8[v24];
  }
  *(_QWORD *)(a1 + 8) = v23;
LABEL_48:
  v29 = *(char **)(a1 + 24);
  v30 = (char *)a2[3];
  v31 = (_BYTE *)a2[4];
  v32 = v31 - v30;
  v33 = (v31 - v30) >> 3;
  v34 = *(_QWORD *)(a1 + 40);
  if (v33 > (v34 - (uint64_t)v29) >> 3)
  {
    if (v29)
    {
      *(_QWORD *)(a1 + 32) = v29;
      operator delete(v29);
      v34 = 0;
      *(_QWORD *)(a1 + 24) = 0;
      *(_QWORD *)(a1 + 32) = 0;
      *(_QWORD *)(a1 + 40) = 0;
    }
    if ((v32 & 0x8000000000000000) != 0)
      goto LABEL_77;
    v35 = v34 >> 2;
    if (v34 >> 2 <= v33)
      v35 = (v31 - v30) >> 3;
    v36 = (unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8;
    v37 = 0x1FFFFFFFFFFFFFFFLL;
    if (!v36)
      v37 = v35;
    if (v37 >> 61)
LABEL_77:
      sub_2394189F8();
    v38 = 8 * v37;
    v39 = (char *)operator new(8 * v37);
    v29 = v39;
    *(_QWORD *)(a1 + 24) = v39;
    *(_QWORD *)(a1 + 32) = v39;
    *(_QWORD *)(a1 + 40) = &v39[v38];
    if (v31 != v30)
      memcpy(v39, v30, v31 - v30);
    goto LABEL_67;
  }
  v40 = *(_BYTE **)(a1 + 32);
  v41 = (v40 - v29) >> 3;
  if (v41 < v33)
  {
    v42 = &v30[8 * v41];
    if (v40 != v29)
    {
      memmove(*(void **)(a1 + 24), (const void *)a2[3], v40 - v29);
      v29 = *(char **)(a1 + 32);
    }
    v32 = v31 - v42;
    if (v31 == v42)
      goto LABEL_67;
    v43 = v29;
    v44 = v42;
    goto LABEL_66;
  }
  if (v31 != v30)
  {
    v43 = *(void **)(a1 + 24);
    v44 = (char *)a2[3];
LABEL_66:
    memmove(v43, v44, v32);
  }
LABEL_67:
  *(_QWORD *)(a1 + 32) = &v29[v32];
  v45 = a2[7];
  if (v45)
  {
    v46 = *(void **)(a1 + 48);
    if (v45 > *(_QWORD *)(a1 + 64) << 6)
    {
      if (v46)
      {
        operator delete(v46);
        *(_QWORD *)(a1 + 48) = 0;
        *(_QWORD *)(a1 + 56) = 0;
        *(_QWORD *)(a1 + 64) = 0;
        v45 = a2[7];
      }
      if ((v45 & 0x8000000000000000) != 0)
        sub_2394189F8();
      v47 = ((v45 - 1) >> 6) + 1;
      v46 = operator new(8 * v47);
      *(_QWORD *)(a1 + 48) = v46;
      *(_QWORD *)(a1 + 56) = 0;
      *(_QWORD *)(a1 + 64) = v47;
      v45 = a2[7];
    }
    memmove(v46, (const void *)a2[6], (((v45 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8) + 8);
    v45 = a2[7];
  }
  *(_QWORD *)(a1 + 56) = v45;
LABEL_75:
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = a2[10];
  v48 = *(_OWORD *)(a2 + 11);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
  *(_OWORD *)(a1 + 88) = v48;
  v49 = *(_OWORD *)(a2 + 19);
  v50 = *(_OWORD *)(a2 + 21);
  v51 = a2[23];
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
  *(_QWORD *)(a1 + 184) = v51;
  *(_OWORD *)(a1 + 168) = v50;
  *(_OWORD *)(a1 + 152) = v49;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
  v52 = *((_OWORD *)a2 + 12);
  *(_QWORD *)(a1 + 208) = a2[26];
  *(_OWORD *)(a1 + 192) = v52;
  return a1;
}

_QWORD *sub_239AA66B0(_QWORD *a1)
{
  void *v2;
  void *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  void *v10;

  v2 = (void *)a1[6];
  if (v2)
    operator delete(v2);
  v3 = (void *)a1[3];
  if (v3)
  {
    a1[4] = v3;
    operator delete(v3);
  }
  v4 = (_QWORD *)*a1;
  if (*a1)
  {
    v5 = (_QWORD *)a1[1];
    v6 = (_QWORD *)*a1;
    if (v5 != v4)
    {
      do
      {
        v7 = (_QWORD *)*(v5 - 3);
        if (v7)
        {
          do
          {
            v8 = (_QWORD *)*v7;
            operator delete(v7);
            v7 = v8;
          }
          while (v8);
        }
        v10 = (void *)*(v5 - 5);
        v5 -= 5;
        v9 = v10;
        *v5 = 0;
        if (v10)
          operator delete(v9);
      }
      while (v5 != v4);
      v6 = (_QWORD *)*a1;
    }
    a1[1] = v4;
    operator delete(v6);
  }
  return a1;
}

void sub_239AA6750(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t *v20;

  v4 = a1[1];
  if (!v4)
    goto LABEL_7;
  for (i = 0; i != v4; ++i)
    *(_QWORD *)(*a1 + 8 * i) = 0;
  v6 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v6)
  {
    while (a2)
    {
      *((_OWORD *)v6 + 1) = *((_OWORD *)a2 + 1);
      v7 = *((_OWORD *)a2 + 3);
      *((_OWORD *)v6 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)v6 + 3) = v7;
      v9 = *((_OWORD *)a2 + 6);
      v8 = *((_OWORD *)a2 + 7);
      v10 = *((_OWORD *)a2 + 5);
      v6[16] = a2[16];
      *((_OWORD *)v6 + 6) = v9;
      *((_OWORD *)v6 + 7) = v8;
      *((_OWORD *)v6 + 5) = v10;
      *((_OWORD *)v6 + 4) = *((_OWORD *)a2 + 4);
      v11 = *(_OWORD *)(a2 + 17);
      v6[19] = a2[19];
      *(_OWORD *)(v6 + 17) = v11;
      v12 = (uint64_t *)*v6;
      sub_239A997F8((uint64_t)a1, v6);
      a2 = (uint64_t *)*a2;
      v6 = v12;
      if (!v12)
        goto LABEL_7;
    }
    do
    {
      v20 = (uint64_t *)*v6;
      operator delete(v6);
      v6 = v20;
    }
    while (v20);
  }
  else
  {
LABEL_7:
    while (a2)
    {
      v13 = operator new(0xA0uLL);
      *(_QWORD *)v13 = 0;
      v14 = *((_OWORD *)a2 + 1);
      v13[1] = v14;
      v15 = *((_OWORD *)a2 + 3);
      v13[2] = *((_OWORD *)a2 + 2);
      v13[3] = v15;
      v13[4] = *((_OWORD *)a2 + 4);
      v17 = *((_OWORD *)a2 + 6);
      v16 = *((_OWORD *)a2 + 7);
      v18 = *((_OWORD *)a2 + 5);
      *((_QWORD *)v13 + 16) = a2[16];
      v13[6] = v17;
      v13[7] = v16;
      v13[5] = v18;
      v19 = *(_OWORD *)(a2 + 17);
      *((_QWORD *)v13 + 19) = a2[19];
      *(_OWORD *)((char *)v13 + 136) = v19;
      *((_QWORD *)v13 + 1) = v14;
      sub_239A997F8((uint64_t)a1, v13);
      a2 = (uint64_t *)*a2;
    }
  }
}

void sub_239AA6888(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_239AA68A8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239AA68BC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239AA68D4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AA68F8(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (!*(_BYTE *)(v3 + 584))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239AB3DF8(v3, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AA6964(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  const char *v13;
  size_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int8x16_t v20;
  double v21;
  int32x4_t v22;
  const char *v23;
  const char *v24;
  size_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int8x16_t v38;
  double v39;
  int32x4_t v40;
  const char *v41;
  const char *v42;
  size_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  int8x16_t v49;
  double v50;
  int32x4_t v51;
  const char *v52;
  const char *v53;
  size_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  int8x16_t v60;
  double v61;
  int32x4_t v62;
  const char *v63;
  const char *v64;
  size_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  int8x16_t v71;
  double v72;
  int32x4_t v73;
  const char *v74;
  const char *v75;
  size_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  int8x16_t *v82;
  size_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  int8x16_t v89;
  double v90;
  int32x4_t v91;
  const char *v92;
  const char *v93;
  size_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  const char *v100;
  const char *v101;
  size_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  int8x16_t v108;
  double v109;
  int32x4_t v110;
  const char *v111;
  const char *v112;
  size_t v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  int8x16_t v119;
  double v120;
  int32x4_t v121;
  const char *v122;
  const char *v123;
  size_t v124;
  void *v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  int8x16_t v130;
  double v131;
  int32x4_t v132;
  const char *v133;
  const char *v134;
  size_t v135;
  void *v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  double v141;
  int32x4_t v142;
  const char *v143;
  const char *v144;
  size_t v145;
  void *v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  int16x8_t v151;
  const char *v152;
  const char *v153;
  size_t v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  const char *v160;
  size_t v161;
  void *v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  void **v169;
  void *v170;
  void **v171;
  __int128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184[2];
  unint64_t v185;
  void *v186[2];
  unint64_t v187;
  void *v188[2];
  unint64_t v189;
  void *v190[2];
  unint64_t v191;
  void *v192[2];
  unint64_t v193;
  void *v194[2];
  unint64_t v195;
  void *v196[2];
  unint64_t v197;
  void *v198[2];
  unint64_t v199;
  void *v200[2];
  unint64_t v201;
  void *v202[2];
  unint64_t v203;
  void *v204[2];
  unint64_t v205;
  void *v206[2];
  unint64_t v207;
  void *v208[2];
  unint64_t v209;
  void *v210[2];
  unint64_t v211;
  void *v212[2];
  unint64_t v213;
  void *v214[2];
  unint64_t v215;
  void *__dst[2];
  unint64_t v217;
  void *__p[2];
  void *v219;
  uint64_t v220;
  char v221[8];
  char v222[16];
  __int128 v223;
  char v224[16];
  _OWORD v225[2];
  unsigned __int8 v226[32];
  _OWORD v227[2];
  char v228[16];
  _OWORD v229[2];
  __int128 v230;
  __int16 v231;
  __int128 v232;
  uint64_t v233;
  _OWORD v234[2];
  _OWORD v235[2];
  _OWORD v236[2];
  uint64_t v237;
  int v238;
  char v239;
  _BYTE v240[19];
  uint64_t v241;
  int v242;
  char v243;
  uint64_t v244;
  int v245;
  uint64_t v246;

  v246 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 8);
  sub_239AA7E14((uint64_t)&v173);
  sub_2396157EC((uint64_t)__p, a3);
  v244 = 0x3A363204362E355BLL;
  v245 = 2637372;
  v6 = sub_23958E4C8((uint64_t)&v244);
  v7 = strlen(v6);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    v217 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    __dst[1] = v8;
    goto LABEL_8;
  }
  HIBYTE(v217) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250AFFF08;
  v12[1] = &v173;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  v241 = 0x14010C3F07160160;
  v243 = 0;
  v242 = 419630597;
  v13 = sub_239510ECC((uint64_t)&v241);
  v14 = strlen(v13);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v15 = (void *)v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    v215 = v18 | 0x8000000000000000;
    v214[0] = v16;
    v214[1] = v15;
    goto LABEL_16;
  }
  HIBYTE(v215) = v14;
  v16 = v214;
  if (v14)
LABEL_16:
    memmove(v16, v13, (size_t)v15);
  *((_BYTE *)v15 + (_QWORD)v16) = 0;
  v19 = (_QWORD *)operator new();
  *v19 = &off_250AE0670;
  v19[1] = (char *)&v173 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v214, (uint64_t)v19);
  *(_OWORD *)v240 = xmmword_239F1044C;
  *(_DWORD *)&v240[15] = 1313038;
  sub_23958E450((uint64_t)v240, (int32x4_t)xmmword_239F1044C, v20, v21, v22);
  v24 = v23;
  v25 = strlen(v23);
  if (v25 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v26 = (void *)v25;
  if (v25 >= 0x17)
  {
    v28 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v25 | 7) != 0x17)
      v28 = v25 | 7;
    v29 = v28 + 1;
    v27 = operator new(v28 + 1);
    v213 = v29 | 0x8000000000000000;
    v212[0] = v27;
    v212[1] = v26;
    goto LABEL_24;
  }
  HIBYTE(v213) = v25;
  v27 = v212;
  if (v25)
LABEL_24:
    memmove(v27, v24, (size_t)v26);
  *((_BYTE *)v26 + (_QWORD)v27) = 0;
  v30 = (_QWORD *)operator new();
  *v30 = &off_250AE0670;
  v30[1] = (char *)&v173 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v212, (uint64_t)v30);
  v237 = 0xC0A170211160763;
  v239 = 0;
  v238 = 34487309;
  v31 = sub_239510ECC((uint64_t)&v237);
  v32 = strlen(v31);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v211 = v36 | 0x8000000000000000;
    v210[0] = v34;
    v210[1] = v33;
    goto LABEL_32;
  }
  HIBYTE(v211) = v32;
  v34 = v210;
  if (v32)
LABEL_32:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250AE0670;
  v37[1] = &v174;
  sub_23961580C((uint64_t)__p, (uint64_t)v210, (uint64_t)v37);
  v236[0] = xmmword_239F1045F;
  *(_DWORD *)((char *)v236 + 15) = 6775897;
  sub_23958E450((uint64_t)v236, (int32x4_t)xmmword_239F1045F, v38, v39, v40);
  v42 = v41;
  v43 = strlen(v41);
  if (v43 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v44 = (void *)v43;
  if (v43 >= 0x17)
  {
    v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v43 | 7) != 0x17)
      v46 = v43 | 7;
    v47 = v46 + 1;
    v45 = operator new(v46 + 1);
    v209 = v47 | 0x8000000000000000;
    v208[0] = v45;
    v208[1] = v44;
    goto LABEL_40;
  }
  HIBYTE(v209) = v43;
  v45 = v208;
  if (v43)
LABEL_40:
    memmove(v45, v42, (size_t)v44);
  *((_BYTE *)v44 + (_QWORD)v45) = 0;
  v48 = (_QWORD *)operator new();
  *v48 = &off_250AE0670;
  v48[1] = (char *)&v174 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v208, (uint64_t)v48);
  v235[0] = xmmword_239F10472;
  *(_DWORD *)((char *)v235 + 15) = 4144129;
  sub_23958E450((uint64_t)v235, (int32x4_t)xmmword_239F10472, v49, v50, v51);
  v53 = v52;
  v54 = strlen(v52);
  if (v54 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v55 = (void *)v54;
  if (v54 >= 0x17)
  {
    v57 = (v54 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v54 | 7) != 0x17)
      v57 = v54 | 7;
    v58 = v57 + 1;
    v56 = operator new(v57 + 1);
    v207 = v58 | 0x8000000000000000;
    v206[0] = v56;
    v206[1] = v55;
    goto LABEL_48;
  }
  HIBYTE(v207) = v54;
  v56 = v206;
  if (v54)
LABEL_48:
    memmove(v56, v53, (size_t)v55);
  *((_BYTE *)v55 + (_QWORD)v56) = 0;
  v59 = (_QWORD *)operator new();
  *v59 = &off_250AE0670;
  v59[1] = &v175;
  sub_23961580C((uint64_t)__p, (uint64_t)v206, (uint64_t)v59);
  v234[0] = xmmword_239F10485;
  *(_DWORD *)((char *)v234 + 15) = 7169123;
  sub_23958E450((uint64_t)v234, (int32x4_t)xmmword_239F10485, v60, v61, v62);
  v64 = v63;
  v65 = strlen(v63);
  if (v65 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v66 = (void *)v65;
  if (v65 >= 0x17)
  {
    v68 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v65 | 7) != 0x17)
      v68 = v65 | 7;
    v69 = v68 + 1;
    v67 = operator new(v68 + 1);
    v205 = v69 | 0x8000000000000000;
    v204[0] = v67;
    v204[1] = v66;
    goto LABEL_56;
  }
  HIBYTE(v205) = v65;
  v67 = v204;
  if (v65)
LABEL_56:
    memmove(v67, v64, (size_t)v66);
  *((_BYTE *)v66 + (_QWORD)v67) = 0;
  v70 = (_QWORD *)operator new();
  *v70 = &off_250AE0670;
  v70[1] = (char *)&v175 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v204, (uint64_t)v70);
  v232 = xmmword_239F10498;
  v233 = 0x3C353D30063E37;
  sub_2396F1A4C((uint64_t)&v232, (int32x4_t)xmmword_239F10498, v71, v72, v73);
  v75 = v74;
  v76 = strlen(v74);
  if (v76 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v77 = (void *)v76;
  if (v76 >= 0x17)
  {
    v79 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v76 | 7) != 0x17)
      v79 = v76 | 7;
    v80 = v79 + 1;
    v78 = operator new(v79 + 1);
    v203 = v80 | 0x8000000000000000;
    v202[0] = v78;
    v202[1] = v77;
    goto LABEL_64;
  }
  HIBYTE(v203) = v76;
  v78 = v202;
  if (v76)
LABEL_64:
    memmove(v78, v75, (size_t)v77);
  *((_BYTE *)v77 + (_QWORD)v78) = 0;
  v81 = (_QWORD *)operator new();
  *v81 = &off_250AE0670;
  v81[1] = &v176;
  sub_23961580C((uint64_t)__p, (uint64_t)v202, (uint64_t)v81);
  v230 = xmmword_239F104B0;
  v231 = 105;
  v82 = sub_239A91B18((int8x16_t *)&v230);
  v83 = strlen(v82->i8);
  if (v83 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v84 = (void *)v83;
  if (v83 >= 0x17)
  {
    v86 = (v83 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v83 | 7) != 0x17)
      v86 = v83 | 7;
    v87 = v86 + 1;
    v85 = operator new(v86 + 1);
    v201 = v87 | 0x8000000000000000;
    v200[0] = v85;
    v200[1] = v84;
    goto LABEL_72;
  }
  HIBYTE(v201) = v83;
  v85 = v200;
  if (v83)
LABEL_72:
    memmove(v85, v82, (size_t)v84);
  *((_BYTE *)v84 + (_QWORD)v85) = 0;
  v88 = (_QWORD *)operator new();
  *v88 = &off_250AE0670;
  v88[1] = (char *)&v176 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v200, (uint64_t)v88);
  v229[0] = xmmword_239F104C2;
  *(_QWORD *)((char *)v229 + 15) = 0x78717974427A73;
  sub_2396EFBE0((uint64_t)v229, (int32x4_t)xmmword_239F104C2, v89, v90, v91);
  v93 = v92;
  v94 = strlen(v92);
  if (v94 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v95 = (void *)v94;
  if (v94 >= 0x17)
  {
    v97 = (v94 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v94 | 7) != 0x17)
      v97 = v94 | 7;
    v98 = v97 + 1;
    v96 = operator new(v97 + 1);
    v199 = v98 | 0x8000000000000000;
    v198[0] = v96;
    v198[1] = v95;
    goto LABEL_80;
  }
  HIBYTE(v199) = v94;
  v96 = v198;
  if (v94)
LABEL_80:
    memmove(v96, v93, (size_t)v95);
  *((_BYTE *)v95 + (_QWORD)v96) = 0;
  v99 = (_QWORD *)operator new();
  *v99 = &off_250AE0670;
  v99[1] = &v177;
  sub_23961580C((uint64_t)__p, (uint64_t)v198, (uint64_t)v99);
  strcpy(v228, "7^DhDBTTRDDQB[");
  sub_23958E5E0((uint64_t)v228);
  v101 = v100;
  v102 = strlen(v100);
  if (v102 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v103 = (void *)v102;
  if (v102 >= 0x17)
  {
    v105 = (v102 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v102 | 7) != 0x17)
      v105 = v102 | 7;
    v106 = v105 + 1;
    v104 = operator new(v105 + 1);
    v197 = v106 | 0x8000000000000000;
    v196[0] = v104;
    v196[1] = v103;
    goto LABEL_88;
  }
  HIBYTE(v197) = v102;
  v104 = v196;
  if (v102)
LABEL_88:
    memmove(v104, v101, (size_t)v103);
  *((_BYTE *)v103 + (_QWORD)v104) = 0;
  v107 = (_QWORD *)operator new();
  *v107 = &off_250AE0220;
  v107[1] = (char *)&v177 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v196, (uint64_t)v107);
  v227[0] = xmmword_239F104D9;
  *(_DWORD *)((char *)v227 + 15) = 7302225;
  sub_23958E450((uint64_t)v227, (int32x4_t)xmmword_239F104D9, v108, v109, v110);
  v112 = v111;
  v113 = strlen(v111);
  if (v113 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v114 = (void *)v113;
  if (v113 >= 0x17)
  {
    v116 = (v113 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v113 | 7) != 0x17)
      v116 = v113 | 7;
    v117 = v116 + 1;
    v115 = operator new(v116 + 1);
    v195 = v117 | 0x8000000000000000;
    v194[0] = v115;
    v194[1] = v114;
    goto LABEL_96;
  }
  HIBYTE(v195) = v113;
  v115 = v194;
  if (v113)
LABEL_96:
    memmove(v115, v112, (size_t)v114);
  *((_BYTE *)v114 + (_QWORD)v115) = 0;
  v118 = (_QWORD *)operator new();
  *v118 = &off_250AF3E90;
  v118[1] = &v178;
  sub_23961580C((uint64_t)__p, (uint64_t)v194, (uint64_t)v118);
  *(_OWORD *)v226 = xmmword_239F10599;
  *(_OWORD *)&v226[10] = *(__int128 *)((char *)&xmmword_239F10599 + 10);
  sub_239A93C04(v226, *(int32x4_t *)((char *)&xmmword_239F10599 + 10), v119, v120, v121);
  v123 = v122;
  v124 = strlen(v122);
  if (v124 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v125 = (void *)v124;
  if (v124 >= 0x17)
  {
    v127 = (v124 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v124 | 7) != 0x17)
      v127 = v124 | 7;
    v128 = v127 + 1;
    v126 = operator new(v127 + 1);
    v193 = v128 | 0x8000000000000000;
    v192[0] = v126;
    v192[1] = v125;
    goto LABEL_104;
  }
  HIBYTE(v193) = v124;
  v126 = v192;
  if (v124)
LABEL_104:
    memmove(v126, v123, (size_t)v125);
  *((_BYTE *)v125 + (_QWORD)v126) = 0;
  v129 = (_QWORD *)operator new();
  *v129 = &off_250AF3EC0;
  v129[1] = &v179;
  sub_23961580C((uint64_t)__p, (uint64_t)v192, (uint64_t)v129);
  v225[0] = xmmword_239F105B3;
  *(_OWORD *)((char *)v225 + 15) = *(__int128 *)((char *)&xmmword_239F105B3 + 15);
  sub_2396EFF58((uint64_t)v225, *(int32x4_t *)((char *)&xmmword_239F105B3 + 15), v130, v131, v132);
  v134 = v133;
  v135 = strlen(v133);
  if (v135 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v136 = (void *)v135;
  if (v135 >= 0x17)
  {
    v138 = (v135 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v135 | 7) != 0x17)
      v138 = v135 | 7;
    v139 = v138 + 1;
    v137 = operator new(v138 + 1);
    v191 = v139 | 0x8000000000000000;
    v190[0] = v137;
    v190[1] = v136;
    goto LABEL_112;
  }
  HIBYTE(v191) = v135;
  v137 = v190;
  if (v135)
LABEL_112:
    memmove(v137, v134, (size_t)v136);
  *((_BYTE *)v136 + (_QWORD)v137) = 0;
  v140 = (_QWORD *)operator new();
  *v140 = &off_250AF3EC0;
  v140[1] = &v180;
  sub_23961580C((uint64_t)__p, (uint64_t)v190, (uint64_t)v140);
  v223 = xmmword_239F1065A;
  v144 = v143;
  v145 = strlen(v143);
  if (v145 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v146 = (void *)v145;
  if (v145 >= 0x17)
  {
    v148 = (v145 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v145 | 7) != 0x17)
      v148 = v145 | 7;
    v149 = v148 + 1;
    v147 = operator new(v148 + 1);
    v189 = v149 | 0x8000000000000000;
    v188[0] = v147;
    v188[1] = v146;
    goto LABEL_120;
  }
  HIBYTE(v189) = v145;
  v147 = v188;
  if (v145)
LABEL_120:
    memmove(v147, v144, (size_t)v146);
  *((_BYTE *)v146 + (_QWORD)v147) = 0;
  v150 = (_QWORD *)operator new();
  *v150 = &off_250AF3EF0;
  v150[1] = &v181;
  sub_23961580C((uint64_t)__p, (uint64_t)v188, (uint64_t)v150);
  strcpy(v222, "!STOUHLD~HOGN");
  sub_23971A32C((uint64_t)v222, v151);
  v153 = v152;
  v154 = strlen(v152);
  if (v154 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v155 = (void *)v154;
  if (v154 >= 0x17)
  {
    v157 = (v154 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v154 | 7) != 0x17)
      v157 = v154 | 7;
    v158 = v157 + 1;
    v156 = operator new(v157 + 1);
    v187 = v158 | 0x8000000000000000;
    v186[0] = v156;
    v186[1] = v155;
    goto LABEL_128;
  }
  HIBYTE(v187) = v154;
  v156 = v186;
  if (v154)
LABEL_128:
    memmove(v156, v153, (size_t)v155);
  *((_BYTE *)v155 + (_QWORD)v156) = 0;
  v159 = (_QWORD *)operator new();
  *v159 = &off_250AFFFF8;
  v159[1] = &v182;
  sub_23961580C((uint64_t)__p, (uint64_t)v186, (uint64_t)v159);
  v220 = 0x212D112A2B3D3B4ELL;
  strcpy(v221, " (')");
  v160 = sub_239510ECC((uint64_t)&v220);
  v161 = strlen(v160);
  if (v161 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v162 = (void *)v161;
  if (v161 >= 0x17)
  {
    v164 = (v161 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v161 | 7) != 0x17)
      v164 = v161 | 7;
    v165 = v164 + 1;
    v163 = operator new(v164 + 1);
    v185 = v165 | 0x8000000000000000;
    v184[0] = v163;
    v184[1] = v162;
    goto LABEL_136;
  }
  HIBYTE(v185) = v161;
  v163 = v184;
  if (v161)
LABEL_136:
    memmove(v163, v160, (size_t)v162);
  *((_BYTE *)v162 + (_QWORD)v163) = 0;
  v166 = (_QWORD *)operator new();
  *v166 = &off_250AF3F80;
  v166[1] = &v183;
  sub_23961580C((uint64_t)__p, (uint64_t)v184, (uint64_t)v166);
  if (SHIBYTE(v185) < 0)
  {
    operator delete(v184[0]);
    if ((SHIBYTE(v187) & 0x80000000) == 0)
    {
LABEL_139:
      if ((SHIBYTE(v189) & 0x80000000) == 0)
        goto LABEL_140;
      goto LABEL_169;
    }
  }
  else if ((SHIBYTE(v187) & 0x80000000) == 0)
  {
    goto LABEL_139;
  }
  operator delete(v186[0]);
  if ((SHIBYTE(v189) & 0x80000000) == 0)
  {
LABEL_140:
    if ((SHIBYTE(v191) & 0x80000000) == 0)
      goto LABEL_141;
    goto LABEL_170;
  }
LABEL_169:
  operator delete(v188[0]);
  if ((SHIBYTE(v191) & 0x80000000) == 0)
  {
LABEL_141:
    if ((SHIBYTE(v193) & 0x80000000) == 0)
      goto LABEL_142;
    goto LABEL_171;
  }
LABEL_170:
  operator delete(v190[0]);
  if ((SHIBYTE(v193) & 0x80000000) == 0)
  {
LABEL_142:
    if ((SHIBYTE(v195) & 0x80000000) == 0)
      goto LABEL_143;
    goto LABEL_172;
  }
LABEL_171:
  operator delete(v192[0]);
  if ((SHIBYTE(v195) & 0x80000000) == 0)
  {
LABEL_143:
    if ((SHIBYTE(v197) & 0x80000000) == 0)
      goto LABEL_144;
    goto LABEL_173;
  }
LABEL_172:
  operator delete(v194[0]);
  if ((SHIBYTE(v197) & 0x80000000) == 0)
  {
LABEL_144:
    if ((SHIBYTE(v199) & 0x80000000) == 0)
      goto LABEL_145;
    goto LABEL_174;
  }
LABEL_173:
  operator delete(v196[0]);
  if ((SHIBYTE(v199) & 0x80000000) == 0)
  {
LABEL_145:
    if ((SHIBYTE(v201) & 0x80000000) == 0)
      goto LABEL_146;
    goto LABEL_175;
  }
LABEL_174:
  operator delete(v198[0]);
  if ((SHIBYTE(v201) & 0x80000000) == 0)
  {
LABEL_146:
    if ((SHIBYTE(v203) & 0x80000000) == 0)
      goto LABEL_147;
    goto LABEL_176;
  }
LABEL_175:
  operator delete(v200[0]);
  if ((SHIBYTE(v203) & 0x80000000) == 0)
  {
LABEL_147:
    if ((SHIBYTE(v205) & 0x80000000) == 0)
      goto LABEL_148;
    goto LABEL_177;
  }
LABEL_176:
  operator delete(v202[0]);
  if ((SHIBYTE(v205) & 0x80000000) == 0)
  {
LABEL_148:
    if ((SHIBYTE(v207) & 0x80000000) == 0)
      goto LABEL_149;
    goto LABEL_178;
  }
LABEL_177:
  operator delete(v204[0]);
  if ((SHIBYTE(v207) & 0x80000000) == 0)
  {
LABEL_149:
    if ((SHIBYTE(v209) & 0x80000000) == 0)
      goto LABEL_150;
    goto LABEL_179;
  }
LABEL_178:
  operator delete(v206[0]);
  if ((SHIBYTE(v209) & 0x80000000) == 0)
  {
LABEL_150:
    if ((SHIBYTE(v211) & 0x80000000) == 0)
      goto LABEL_151;
    goto LABEL_180;
  }
LABEL_179:
  operator delete(v208[0]);
  if ((SHIBYTE(v211) & 0x80000000) == 0)
  {
LABEL_151:
    if ((SHIBYTE(v213) & 0x80000000) == 0)
      goto LABEL_152;
    goto LABEL_181;
  }
LABEL_180:
  operator delete(v210[0]);
  if ((SHIBYTE(v213) & 0x80000000) == 0)
  {
LABEL_152:
    if ((SHIBYTE(v215) & 0x80000000) == 0)
      goto LABEL_153;
LABEL_182:
    operator delete(v214[0]);
    if ((SHIBYTE(v217) & 0x80000000) == 0)
      goto LABEL_154;
    goto LABEL_183;
  }
LABEL_181:
  operator delete(v212[0]);
  if (SHIBYTE(v215) < 0)
    goto LABEL_182;
LABEL_153:
  if ((SHIBYTE(v217) & 0x80000000) == 0)
    goto LABEL_154;
LABEL_183:
  operator delete(__dst[0]);
LABEL_154:
  sub_23959479C((uint64_t)__p, a2);
  v167 = v219;
  if (v219)
  {
    do
    {
      v168 = v167[5];
      if (v168)
        (*(void (**)(uint64_t))(*(_QWORD *)v168 + 8))(v168);
      v167 = (_QWORD *)*v167;
    }
    while (v167);
    v169 = (void **)v219;
    if (v219)
    {
      do
      {
        v171 = (void **)*v169;
        if (*((char *)v169 + 39) < 0)
          operator delete(v169[2]);
        operator delete(v169);
        v169 = v171;
      }
      while (v171);
    }
  }
  v170 = __p[0];
  __p[0] = 0;
  if (v170)
    operator delete(v170);
  if (*(_BYTE *)(v5 + 584))
  {
    sub_239AA8158(v5, &v173);
  }
  else
  {
    sub_239A5FE90(v5, &v173);
    *(_BYTE *)(v5 + 584) = 1;
  }
  sub_239A614AC(&v173);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AA7B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2395905C0((uint64_t)&STACK[0x3E0]);
  sub_239A614AC(&a9);
  _Unwind_Resume(a1);
}

void sub_239AA7D8C()
{
  JUMPOUT(0x239AA7C64);
}

uint64_t sub_239AA7E14(uint64_t a1)
{
  task_name_t *v2;
  _DWORD *v3;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v7;

  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 29) = 0u;
  *(_DWORD *)(a1 + 80) = 1065353216;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 1065353216;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_DWORD *)(a1 + 160) = 1065353216;
  *(_BYTE *)(a1 + 168) = 0;
  *(_OWORD *)(a1 + 172) = 0u;
  *(_OWORD *)(a1 + 188) = 0u;
  *(_OWORD *)(a1 + 204) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_DWORD *)(a1 + 232) = 1065353216;
  *(_QWORD *)(a1 + 288) = 0;
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_DWORD *)(a1 + 272) = 0;
  *(_BYTE *)(a1 + 304) = 1;
  *(std::chrono::system_clock::time_point *)(a1 + 240) = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  v2 = (task_name_t *)MEMORY[0x24BDAEC58];
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a1 + 268) = (float)((float)v7 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a1 + 304) = 1;
  *(_QWORD *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 360) = 0;
  *(_QWORD *)(a1 + 368) = 0;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_DWORD *)(a1 + 344) = 0;
  *(_BYTE *)(a1 + 376) = 1;
  *(std::chrono::system_clock::time_point *)(a1 + 312) = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  if (!task_info(*v2, 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a1 + 340) = (float)((float)v7 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a1 + 376) = 1;
  *(_QWORD *)(a1 + 424) = 0;
  *(_QWORD *)(a1 + 432) = 0;
  *(_QWORD *)(a1 + 440) = 0;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_DWORD *)(a1 + 416) = 0;
  *(_BYTE *)(a1 + 448) = 1;
  *(std::chrono::system_clock::time_point *)(a1 + 384) = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  if (!task_info(*v2, 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a1 + 412) = (float)((float)v7 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a1 + 448) = 1;
  *(_BYTE *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 460) = 0x500000000;
  *(_BYTE *)(a1 + 468) = 0;
  *(_DWORD *)(a1 + 472) = 2;
  *(_QWORD *)(a1 + 480) = 0x403E000000000000;
  *(_BYTE *)(a1 + 488) = 0;
  *(_QWORD *)(a1 + 492) = 1920;
  *(_QWORD *)(a1 + 520) = 0;
  *(_QWORD *)(a1 + 504) = 0;
  *(_QWORD *)(a1 + 512) = 0;
  v3 = operator new(4uLL);
  *(_QWORD *)(a1 + 504) = v3;
  *v3++ = 0;
  *(_QWORD *)(a1 + 520) = v3;
  *(_QWORD *)(a1 + 512) = v3;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_DWORD *)(a1 + 576) = qos_class_self();
  return a1;
}

void sub_239AA806C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  void **v15;
  void **v16;
  void **v17;
  void **v18;
  void **v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  v20 = (void *)v12[69];
  if (v20)
  {
    v12[70] = v20;
    operator delete(v20);
    v21 = *v15;
    if (!*v15)
    {
LABEL_3:
      v22 = *v19;
      if (!*v19)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v21 = *v15;
    if (!*v15)
      goto LABEL_3;
  }
  v12[67] = v21;
  operator delete(v21);
  v22 = *v19;
  if (!*v19)
  {
LABEL_4:
    v23 = *v18;
    if (!*v18)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v12[64] = v22;
  operator delete(v22);
  v23 = *v18;
  if (!*v18)
  {
LABEL_5:
    v24 = *v17;
    if (!*v17)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  v12[54] = v23;
  operator delete(v23);
  v24 = *v17;
  if (!*v17)
  {
LABEL_6:
    v25 = *v16;
    if (!*v16)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_13:
  v12[45] = v24;
  operator delete(v24);
  v25 = *v16;
  if (!*v16)
  {
LABEL_8:
    sub_239A62A88(v14);
    sub_239420950(v13);
    sub_239420950(v11);
    sub_239420950(v10);
    _Unwind_Resume(a1);
  }
LABEL_7:
  v12[36] = v25;
  operator delete(v25);
  goto LABEL_8;
}

void sub_239AA8148()
{
  _QWORD *v0;

  if (!*v0)
    JUMPOUT(0x239AA80A8);
  JUMPOUT(0x239AA80A0);
}

uint64_t sub_239AA8158(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t i;
  _QWORD *v9;
  _QWORD *v10;
  _OWORD *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t j;
  _DWORD *v16;
  _DWORD *v17;
  _OWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v4 = *a2;
  v5 = a2[1];
  *(_OWORD *)(a1 + 29) = *(__int128 *)((char *)a2 + 29);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  if ((__int128 *)a1 != a2)
  {
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    v6 = (_QWORD *)*((_QWORD *)a2 + 8);
    v7 = *(_QWORD *)(a1 + 56);
    if (!v7)
      goto LABEL_8;
    for (i = 0; i != v7; ++i)
      *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i) = 0;
    v9 = *(_QWORD **)(a1 + 64);
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 72) = 0;
    if (v9)
    {
      while (v6)
      {
        v9[2] = v6[2];
        v9[3] = v6[3];
        v10 = (_QWORD *)*v9;
        sub_239A997F8(a1 + 48, v9);
        v6 = (_QWORD *)*v6;
        v9 = v10;
        if (!v10)
          goto LABEL_8;
      }
      do
      {
        v12 = (_QWORD *)*v9;
        operator delete(v9);
        v9 = v12;
      }
      while (v12);
    }
    else
    {
LABEL_8:
      while (v6)
      {
        v11 = operator new(0x20uLL);
        *(_QWORD *)v11 = 0;
        v11[1] = *((_OWORD *)v6 + 1);
        *((_QWORD *)v11 + 1) = *((_QWORD *)v11 + 2);
        sub_239A997F8(a1 + 48, v11);
        v6 = (_QWORD *)*v6;
      }
    }
    *(_DWORD *)(a1 + 120) = *((_DWORD *)a2 + 30);
    sub_239AA8508((_QWORD *)(a1 + 88), *((uint64_t **)a2 + 13));
    *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
    sub_239AA8508((_QWORD *)(a1 + 128), *((uint64_t **)a2 + 18));
    *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
    sub_23992AD34(a1 + 176, *((char **)a2 + 22), *((char **)a2 + 23), (uint64_t)(*((_QWORD *)a2 + 23) - *((_QWORD *)a2 + 22)) >> 3);
    *(_DWORD *)(a1 + 232) = *((_DWORD *)a2 + 58);
    v13 = (uint64_t *)*((_QWORD *)a2 + 27);
    v14 = *(_QWORD *)(a1 + 208);
    if (!v14)
      goto LABEL_18;
    for (j = 0; j != v14; ++j)
      *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * j) = 0;
    v16 = *(_DWORD **)(a1 + 216);
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    if (v16)
    {
      while (v13)
      {
        v16[4] = *((_DWORD *)v13 + 4);
        *((_QWORD *)v16 + 3) = v13[3];
        v17 = *(_DWORD **)v16;
        sub_239AA8644(a1 + 200, (uint64_t)v16);
        v13 = (uint64_t *)*v13;
        v16 = v17;
        if (!v17)
          goto LABEL_18;
      }
      do
      {
        v19 = *(_DWORD **)v16;
        operator delete(v16);
        v16 = v19;
      }
      while (v19);
    }
    else
    {
LABEL_18:
      while (v13)
      {
        v18 = operator new(0x20uLL);
        *(_QWORD *)v18 = 0;
        v18[1] = *((_OWORD *)v13 + 1);
        *((_QWORD *)v18 + 1) = *((int *)v18 + 4);
        sub_239AA8644(a1 + 200, (uint64_t)v18);
        v13 = (uint64_t *)*v13;
      }
    }
    *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
    *(_OWORD *)(a1 + 248) = *(__int128 *)((char *)a2 + 248);
    v20 = *((_QWORD *)a2 + 33);
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_QWORD *)(a1 + 264) = v20;
    sub_23942156C((_QWORD *)(a1 + 280), *((char **)a2 + 35), *((char **)a2 + 36), (uint64_t)(*((_QWORD *)a2 + 36) - *((_QWORD *)a2 + 35)) >> 2);
  }
  *(_BYTE *)(a1 + 304) = *((_BYTE *)a2 + 304);
  *(_QWORD *)(a1 + 312) = *((_QWORD *)a2 + 39);
  *(_OWORD *)(a1 + 320) = a2[20];
  v21 = *((_QWORD *)a2 + 42);
  *(_DWORD *)(a1 + 344) = *((_DWORD *)a2 + 86);
  *(_QWORD *)(a1 + 336) = v21;
  if ((__int128 *)a1 != a2)
    sub_23942156C((_QWORD *)(a1 + 352), *((char **)a2 + 44), *((char **)a2 + 45), (uint64_t)(*((_QWORD *)a2 + 45) - *((_QWORD *)a2 + 44)) >> 2);
  *(_BYTE *)(a1 + 376) = *((_BYTE *)a2 + 376);
  *(_QWORD *)(a1 + 384) = *((_QWORD *)a2 + 48);
  v22 = *((_QWORD *)a2 + 50);
  *(_QWORD *)(a1 + 392) = *((_QWORD *)a2 + 49);
  *(_QWORD *)(a1 + 400) = v22;
  v23 = *((_QWORD *)a2 + 51);
  *(_DWORD *)(a1 + 416) = *((_DWORD *)a2 + 104);
  *(_QWORD *)(a1 + 408) = v23;
  if ((__int128 *)a1 != a2)
  {
    sub_23942156C((_QWORD *)(a1 + 424), *((char **)a2 + 53), *((char **)a2 + 54), (uint64_t)(*((_QWORD *)a2 + 54) - *((_QWORD *)a2 + 53)) >> 2);
    *(_BYTE *)(a1 + 448) = *((_BYTE *)a2 + 448);
    v24 = *(__int128 *)((char *)a2 + 472);
    *(_OWORD *)(a1 + 456) = *(__int128 *)((char *)a2 + 456);
    *(_OWORD *)(a1 + 472) = v24;
    v25 = *((_QWORD *)a2 + 61);
    *(_DWORD *)(a1 + 496) = *((_DWORD *)a2 + 124);
    *(_QWORD *)(a1 + 488) = v25;
    sub_23942156C((_QWORD *)(a1 + 504), *((char **)a2 + 63), *((char **)a2 + 64), (uint64_t)(*((_QWORD *)a2 + 64) - *((_QWORD *)a2 + 63)) >> 2);
    sub_23942156C((_QWORD *)(a1 + 528), *((char **)a2 + 66), *((char **)a2 + 67), (uint64_t)(*((_QWORD *)a2 + 67) - *((_QWORD *)a2 + 66)) >> 2);
    sub_23942156C((_QWORD *)(a1 + 552), *((char **)a2 + 69), *((char **)a2 + 70), (uint64_t)(*((_QWORD *)a2 + 70) - *((_QWORD *)a2 + 69)) >> 2);
  }
  *(_DWORD *)(a1 + 576) = *((_DWORD *)a2 + 144);
  return a1;
}

void sub_239AA8490(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_239AA84AC()
{
  __break(1u);
}

void sub_239AA84E0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239AA84F0()
{
  void *v0;

  operator delete(v0);
  JUMPOUT(0x239AA8500);
}

void sub_239AA8508(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t *v15;

  v4 = a1[1];
  if (!v4)
    goto LABEL_7;
  for (i = 0; i != v4; ++i)
    *(_QWORD *)(*a1 + 8 * i) = 0;
  v6 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v6)
  {
    while (a2)
    {
      v6[2] = a2[2];
      v7 = *(_OWORD *)(a2 + 3);
      v8 = *(_OWORD *)(a2 + 5);
      v9 = *(_OWORD *)(a2 + 7);
      *((_DWORD *)v6 + 18) = *((_DWORD *)a2 + 18);
      *(_OWORD *)(v6 + 7) = v9;
      *(_OWORD *)(v6 + 5) = v8;
      *(_OWORD *)(v6 + 3) = v7;
      v10 = (uint64_t *)*v6;
      sub_239A997F8((uint64_t)a1, v6);
      a2 = (uint64_t *)*a2;
      v6 = v10;
      if (!v10)
        goto LABEL_7;
    }
    do
    {
      v15 = (uint64_t *)*v6;
      operator delete(v6);
      v6 = v15;
    }
    while (v15);
  }
  else
  {
LABEL_7:
    while (a2)
    {
      v11 = operator new(0x50uLL);
      *(_QWORD *)v11 = 0;
      v12 = *((_OWORD *)a2 + 4);
      v14 = *((_OWORD *)a2 + 1);
      v13 = *((_OWORD *)a2 + 2);
      v11[3] = *((_OWORD *)a2 + 3);
      v11[4] = v12;
      v11[1] = v14;
      v11[2] = v13;
      *((_QWORD *)v11 + 1) = *((_QWORD *)v11 + 2);
      sub_239A997F8((uint64_t)a1, v11);
      a2 = (uint64_t *)*a2;
    }
  }
}

void sub_239AA85FC(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_239AA861C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239AA8630(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239AA8644(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  float v6;
  float v7;
  _BOOL8 v8;
  unint64_t v9;
  unint64_t v10;
  size_t prime;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  size_t v19;
  uint64_t *j;
  size_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint8x8_t v26;
  uint64_t v27;
  uint64_t *i;
  uint8x8_t v29;
  uint64_t v30;
  uint64_t *v31;
  int v32;
  _BOOL4 v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  size_t v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  int v43;
  _BOOL4 v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;

  v4 = *(int *)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v4;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v7 = *(float *)(a1 + 32);
  if (!v5 || (float)(v7 * (float)v5) < v6)
  {
    v8 = 1;
    if (v5 >= 3)
      v8 = (v5 & (v5 - 1)) != 0;
    v9 = v8 | (2 * v5);
    v10 = vcvtps_u32_f32(v6 / v7);
    if (v9 <= v10)
      prime = v10;
    else
      prime = v9;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v5 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v5)
      goto LABEL_105;
    if (prime >= v5)
      goto LABEL_40;
    v25 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v5 < 3 || (v26 = (uint8x8_t)vcnt_s8((int8x8_t)v5), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
    {
      v25 = std::__next_prime(v25);
    }
    else
    {
      v27 = 1 << -(char)__clz(v25 - 1);
      if (v25 >= 2)
        v25 = v27;
    }
    if (prime <= v25)
      prime = v25;
    if (prime >= v5)
    {
      v5 = *(_QWORD *)(a1 + 8);
      goto LABEL_40;
    }
    if (prime)
    {
LABEL_105:
      if (prime >> 61)
        sub_239418A80();
      v12 = operator new(8 * prime);
      v13 = *(void **)a1;
      *(_QWORD *)a1 = v12;
      if (v13)
        operator delete(v13);
      v14 = 0;
      *(_QWORD *)(a1 + 8) = prime;
      do
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v14++) = 0;
      while (prime != v14);
      v16 = a1 + 16;
      v15 = *(uint64_t ***)(a1 + 16);
      if (v15)
      {
        v17 = (size_t)v15[1];
        v18 = prime - 1;
        if ((prime & (prime - 1)) != 0)
        {
          if (v17 >= prime)
            v17 %= prime;
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v17) = v16;
          for (i = *v15; *v15; i = *v15)
          {
            v37 = i[1];
            if (v37 >= prime)
              v37 %= prime;
            if (v37 == v17)
            {
              v15 = (uint64_t **)i;
            }
            else
            {
              v38 = i;
              if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v37))
              {
                do
                {
                  v39 = v38;
                  v38 = (uint64_t *)*v38;
                }
                while (v38 && *((_DWORD *)i + 4) == *((_DWORD *)v38 + 4));
                *v15 = v38;
                v40 = 8 * v37;
                *v39 = **(_QWORD **)(*(_QWORD *)a1 + v40);
                **(_QWORD **)(*(_QWORD *)a1 + v40) = i;
              }
              else
              {
                *(_QWORD *)(*(_QWORD *)a1 + 8 * v37) = v15;
                v15 = (uint64_t **)i;
                v17 = v37;
              }
            }
          }
        }
        else
        {
          v19 = v17 & v18;
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v19) = v16;
          for (j = *v15; *v15; j = *v15)
          {
            v21 = j[1] & v18;
            if (v21 == v19)
            {
              v15 = (uint64_t **)j;
            }
            else
            {
              v22 = j;
              if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v21))
              {
                do
                {
                  v23 = v22;
                  v22 = (uint64_t *)*v22;
                }
                while (v22 && *((_DWORD *)j + 4) == *((_DWORD *)v22 + 4));
                *v15 = v22;
                v24 = 8 * v21;
                *v23 = **(_QWORD **)(*(_QWORD *)a1 + v24);
                **(_QWORD **)(*(_QWORD *)a1 + v24) = j;
              }
              else
              {
                *(_QWORD *)(*(_QWORD *)a1 + 8 * v21) = v15;
                v15 = (uint64_t **)j;
                v19 = v21;
              }
            }
          }
        }
      }
      v5 = prime;
    }
    else
    {
      v50 = *(void **)a1;
      *(_QWORD *)a1 = 0;
      if (v50)
        operator delete(v50);
      v5 = 0;
      *(_QWORD *)(a1 + 8) = 0;
    }
  }
LABEL_40:
  v29 = (uint8x8_t)vcnt_s8((int8x8_t)v5);
  v29.i16[0] = vaddlv_u8(v29);
  if (v29.u32[0] >= 2uLL)
  {
    v41 = v4;
    if (v5 <= v4)
      v41 = v4 % v5;
    v42 = *(uint64_t **)(*(_QWORD *)a1 + 8 * v41);
    if (!v42)
    {
      v35 = 0;
      v48 = *(_QWORD *)(a2 + 8);
      if (v48 < v5)
        goto LABEL_78;
      goto LABEL_77;
    }
    v43 = 0;
    do
    {
      v35 = v42;
      v42 = (uint64_t *)*v42;
      if (!v42)
        break;
      v46 = v42[1];
      v47 = v46;
      if (v46 >= v5)
        v47 = v46 % v5;
      if (v47 != v41)
        break;
      v44 = v46 == v4 && *((_DWORD *)v42 + 4) == *(_DWORD *)(a2 + 16);
      v45 = v43 & !v44;
      v43 |= v44;
    }
    while (v45 != 1);
  }
  else
  {
    v30 = (v5 - 1) & v4;
    v31 = *(uint64_t **)(*(_QWORD *)a1 + 8 * v30);
    if (!v31)
    {
      v35 = 0;
      v48 = *(_QWORD *)(a2 + 8);
      goto LABEL_75;
    }
    v32 = 0;
    do
    {
      v35 = v31;
      v31 = (uint64_t *)*v31;
      if (!v31)
        break;
      v36 = v31[1];
      if ((v36 & (v5 - 1)) != v30)
        break;
      v33 = v36 == v4 && *((_DWORD *)v31 + 4) == *(_DWORD *)(a2 + 16);
      v34 = v32 & !v33;
      v32 |= v33;
    }
    while ((v34 & 1) == 0);
  }
  v48 = *(_QWORD *)(a2 + 8);
  if (v29.u32[0] <= 1uLL)
  {
LABEL_75:
    v48 &= v5 - 1;
    goto LABEL_78;
  }
  if (v48 >= v5)
LABEL_77:
    v48 %= v5;
LABEL_78:
  if (!v35)
  {
    *(_QWORD *)a2 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = a2;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v48) = a1 + 16;
    if (!*(_QWORD *)a2)
      goto LABEL_92;
    v49 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    if (v29.u32[0] > 1uLL)
    {
      if (v49 >= v5)
        v49 %= v5;
    }
    else
    {
      v49 &= v5 - 1;
    }
LABEL_91:
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v49) = a2;
    goto LABEL_92;
  }
  *(_QWORD *)a2 = *v35;
  *v35 = a2;
  if (*(_QWORD *)a2)
  {
    v49 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    if (v29.u32[0] > 1uLL)
    {
      if (v49 >= v5)
        v49 %= v5;
    }
    else
    {
      v49 &= v5 - 1;
    }
    if (v49 != v48)
      goto LABEL_91;
  }
LABEL_92:
  ++*(_QWORD *)(a1 + 24);
}

void sub_239AA8B38(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AA8B5C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AAA698(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AA8B98(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  const char *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  const char *v38;
  const char *v39;
  size_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  const char *v46;
  const char *v47;
  size_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int8x16_t v54;
  double v55;
  int32x4_t v56;
  const char *v57;
  const char *v58;
  size_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  int16x8_t v65;
  int16x8_t v66;
  const char *v67;
  const char *v68;
  size_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  const char *v75;
  size_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  void **v84;
  void *v85;
  void **v87;
  void *v88[2];
  unint64_t v89;
  void *v90[2];
  unint64_t v91;
  void *v92[2];
  unint64_t v93;
  void *v94[2];
  unint64_t v95;
  void *v96[2];
  unint64_t v97;
  void *v98[2];
  unint64_t v99;
  void *v100[2];
  unint64_t v101;
  void *__dst[2];
  unint64_t v103;
  int v104;
  int v105;
  void *__p[2];
  void *v107;
  uint64_t v108;
  int v109;
  __int128 v110;
  _OWORD v111[2];
  char v112[32];
  uint64_t v113;
  int v114;
  __int16 v115;
  char v116;
  uint64_t v117;
  int v118;
  __int16 v119;
  char v120;
  _OWORD v121[2];
  _OWORD v122[2];
  _BYTE v123[19];
  uint64_t v124;

  v124 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v104 = 21;
  v105 = 0;
  *(_OWORD *)v123 = xmmword_239F106AE;
  *(_DWORD *)&v123[15] = 794121;
  sub_23958E450((uint64_t)v123, (int32x4_t)xmmword_239F106AE, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v103 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v103) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AF3FB0;
  v15[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v122[0] = xmmword_239F106C1;
  *(_OWORD *)((char *)v122 + 15) = *(__int128 *)((char *)&xmmword_239F106C1 + 15);
  sub_2396EFF58((uint64_t)v122, *(int32x4_t *)((char *)&xmmword_239F106C1 + 15), v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v100[1] = v22;
    v101 = v25 | 0x8000000000000000;
    v100[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v101) = v21;
  v23 = v100;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250ADF420;
  v26[1] = v4 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v100, (uint64_t)v26);
  v121[0] = xmmword_239F106E0;
  *(_OWORD *)((char *)v121 + 14) = *(__int128 *)((char *)&xmmword_239F106E0 + 14);
  sub_2396F0EE8((uint64_t)v121, *(int32x4_t *)((char *)&xmmword_239F106E0 + 14), v27, v28, v29);
  v31 = v30;
  v32 = strlen(v30);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v98[1] = v33;
    v99 = v36 | 0x8000000000000000;
    v98[0] = v34;
    goto LABEL_24;
  }
  HIBYTE(v99) = v32;
  v34 = v98;
  if (v32)
LABEL_24:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250AE0220;
  v37[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)v98, (uint64_t)v37);
  v117 = 0x270A1D1E1E0D1A78;
  v120 = 0;
  v119 = 4108;
  v118 = 521542932;
  sub_23958E5E0((uint64_t)&v117);
  v39 = v38;
  v40 = strlen(v38);
  if (v40 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v41 = (void *)v40;
  if (v40 >= 0x17)
  {
    v43 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v40 | 7) != 0x17)
      v43 = v40 | 7;
    v44 = v43 + 1;
    v42 = operator new(v43 + 1);
    v96[1] = v41;
    v97 = v44 | 0x8000000000000000;
    v96[0] = v42;
    goto LABEL_32;
  }
  HIBYTE(v97) = v40;
  v42 = v96;
  if (v40)
LABEL_32:
    memmove(v42, v39, (size_t)v41);
  *((_BYTE *)v41 + (_QWORD)v42) = 0;
  v45 = (_QWORD *)operator new();
  *v45 = &off_250ADF420;
  v45[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v96, (uint64_t)v45);
  v113 = 0x7060B020A080B69;
  v116 = 0;
  v115 = 3097;
  v114 = 270349836;
  sub_23958E5E0((uint64_t)&v113);
  v47 = v46;
  v48 = strlen(v46);
  if (v48 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v49 = (void *)v48;
  if (v48 >= 0x17)
  {
    v51 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v48 | 7) != 0x17)
      v51 = v48 | 7;
    v52 = v51 + 1;
    v50 = operator new(v51 + 1);
    v94[1] = v49;
    v95 = v52 | 0x8000000000000000;
    v94[0] = v50;
    goto LABEL_40;
  }
  HIBYTE(v95) = v48;
  v50 = v94;
  if (v48)
LABEL_40:
    memmove(v50, v47, (size_t)v49);
  *((_BYTE *)v49 + (_QWORD)v50) = 0;
  v53 = (_QWORD *)operator new();
  *v53 = &off_250ADF240;
  v53[1] = &v105;
  sub_23961580C((uint64_t)__p, (uint64_t)v94, (uint64_t)v53);
  strcpy(v112, "V#%3\t&9%3\t1$7&>\t9&\"?;?,7\"?98");
  sub_2396EFD48((uint64_t)v112, *(int32x4_t *)"&>\t9&\"?;?,7\"?98", v54, v55, v56);
  v58 = v57;
  v59 = strlen(v57);
  if (v59 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v60 = (void *)v59;
  if (v59 >= 0x17)
  {
    v62 = (v59 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v59 | 7) != 0x17)
      v62 = v59 | 7;
    v63 = v62 + 1;
    v61 = operator new(v62 + 1);
    v92[1] = v60;
    v93 = v63 | 0x8000000000000000;
    v92[0] = v61;
    goto LABEL_48;
  }
  HIBYTE(v93) = v59;
  v61 = v92;
  if (v59)
LABEL_48:
    memmove(v61, v58, (size_t)v60);
  *((_BYTE *)v60 + (_QWORD)v61) = 0;
  v64 = (_QWORD *)operator new();
  *v64 = &off_250AE0220;
  v64[1] = v4 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v92, (uint64_t)v64);
  v110 = xmmword_239F1071B;
  v111[0] = *(_OWORD *)dbl_239F1072B;
  *(_OWORD *)((char *)v111 + 13) = *(_OWORD *)((char *)&dbl_239F1072B[1] + 5);
  sub_2396F0DB0((unsigned __int8 *)&v110, *(double *)((char *)&dbl_239F1072B[1] + 5), dbl_239F1072B[0], v65, v66);
  v68 = v67;
  v69 = strlen(v67);
  if (v69 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v70 = (void *)v69;
  if (v69 >= 0x17)
  {
    v72 = (v69 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v69 | 7) != 0x17)
      v72 = v69 | 7;
    v73 = v72 + 1;
    v71 = operator new(v72 + 1);
    v90[1] = v70;
    v91 = v73 | 0x8000000000000000;
    v90[0] = v71;
    goto LABEL_56;
  }
  HIBYTE(v91) = v69;
  v71 = v90;
  if (v69)
LABEL_56:
    memmove(v71, v68, (size_t)v70);
  *((_BYTE *)v70 + (_QWORD)v71) = 0;
  v74 = (_QWORD *)operator new();
  *v74 = &off_250ADF360;
  v74[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v90, (uint64_t)v74);
  v108 = 0x251E1B1F08120E7ALL;
  v109 = 595211;
  v75 = sub_23958E4C8((uint64_t)&v108);
  v76 = strlen(v75);
  if (v76 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v77 = (void *)v76;
  if (v76 >= 0x17)
  {
    v79 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v76 | 7) != 0x17)
      v79 = v76 | 7;
    v80 = v79 + 1;
    v78 = operator new(v79 + 1);
    v88[1] = v77;
    v89 = v80 | 0x8000000000000000;
    v88[0] = v78;
    goto LABEL_64;
  }
  HIBYTE(v89) = v76;
  v78 = v88;
  if (v76)
LABEL_64:
    memmove(v78, v75, (size_t)v77);
  *((_BYTE *)v77 + (_QWORD)v78) = 0;
  v81 = (_QWORD *)operator new();
  *v81 = &off_250ADF420;
  v81[1] = &v104;
  sub_23961580C((uint64_t)__p, (uint64_t)v88, (uint64_t)v81);
  if (SHIBYTE(v89) < 0)
  {
    operator delete(v88[0]);
    if ((SHIBYTE(v91) & 0x80000000) == 0)
    {
LABEL_67:
      if ((SHIBYTE(v93) & 0x80000000) == 0)
        goto LABEL_68;
      goto LABEL_89;
    }
  }
  else if ((SHIBYTE(v91) & 0x80000000) == 0)
  {
    goto LABEL_67;
  }
  operator delete(v90[0]);
  if ((SHIBYTE(v93) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v95) & 0x80000000) == 0)
      goto LABEL_69;
    goto LABEL_90;
  }
LABEL_89:
  operator delete(v92[0]);
  if ((SHIBYTE(v95) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v97) & 0x80000000) == 0)
      goto LABEL_70;
    goto LABEL_91;
  }
LABEL_90:
  operator delete(v94[0]);
  if ((SHIBYTE(v97) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v99) & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_92;
  }
LABEL_91:
  operator delete(v96[0]);
  if ((SHIBYTE(v99) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v101) & 0x80000000) == 0)
      goto LABEL_72;
LABEL_93:
    operator delete(v100[0]);
    if ((SHIBYTE(v103) & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_94;
  }
LABEL_92:
  operator delete(v98[0]);
  if (SHIBYTE(v101) < 0)
    goto LABEL_93;
LABEL_72:
  if ((SHIBYTE(v103) & 0x80000000) == 0)
    goto LABEL_73;
LABEL_94:
  operator delete(__dst[0]);
LABEL_73:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
  {
    *(_DWORD *)(v4 + 16) = v105;
    *(_DWORD *)(v4 + 120) = v104;
  }
  v82 = v107;
  if (v107)
  {
    do
    {
      v83 = v82[5];
      if (v83)
        (*(void (**)(uint64_t))(*(_QWORD *)v83 + 8))(v83);
      v82 = (_QWORD *)*v82;
    }
    while (v82);
    v84 = (void **)v107;
    if (v107)
    {
      do
      {
        v87 = (void **)*v84;
        if (*((char *)v84 + 39) < 0)
          operator delete(v84[2]);
        operator delete(v84);
        v84 = v87;
      }
      while (v87);
    }
  }
  v85 = __p[0];
  __p[0] = 0;
  if (v85)
    operator delete(v85);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AA9448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,void *a59,uint64_t a60,_QWORD *__p)
{
  _QWORD *v62;
  uint64_t v63;
  void **v64;
  void **v65;

  v62 = __p;
  if (__p)
  {
    do
    {
      v63 = v62[5];
      if (v63)
        (*(void (**)(uint64_t))(*(_QWORD *)v63 + 8))(v63);
      v62 = (_QWORD *)*v62;
    }
    while (v62);
    v64 = (void **)__p;
    do
    {
      v65 = (void **)*v64;
      if (*((char *)v64 + 39) < 0)
        operator delete(v64[2]);
      operator delete(v64);
      v64 = v65;
    }
    while (v65);
  }
  if (!a59)
    _Unwind_Resume(exception_object);
  operator delete(a59);
  _Unwind_Resume(exception_object);
}

void sub_239AA963C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AA9660(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AA9EEC(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AA969C(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int8x8_t *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  const char *v26;
  const char *v27;
  size_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  const char *v34;
  const char *v35;
  size_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  const char *v42;
  const char *v43;
  size_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  void **v52;
  void *v53;
  void **v55;
  void *v56[2];
  unint64_t v57;
  void *v58[2];
  unint64_t v59;
  void *v60[2];
  unint64_t v61;
  void *v62[2];
  unint64_t v63;
  void *v64[2];
  unint64_t v65;
  void *__dst[2];
  unint64_t v67;
  int v68;
  void *__p[2];
  void *v70;
  __int128 v71;
  char v72;
  __int128 v73;
  char v74;
  char v75[16];
  int8x8_t v76[2];
  __int128 v77;
  __int16 v78;
  uint64_t v79;
  int v80;
  uint64_t v81;

  v81 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v68 = 0;
  v79 = 0x22212E251F332940;
  v80 = 2368812;
  v5 = sub_23958E4C8((uint64_t)&v79);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v67 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v67) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AE0220;
  v11[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v77 = xmmword_239F1067A;
  v78 = 69;
  v12 = sub_239A91B18((int8x16_t *)&v77);
  v13 = strlen(v12->i8);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v64[1] = v14;
    v65 = v17 | 0x8000000000000000;
    v64[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v65) = v13;
  v15 = v64;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250ADF420;
  v18[1] = v4 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v64, (uint64_t)v18);
  strcpy((char *)v76, "'KHDxJHCB");
  v19 = sub_23950FF84(v76);
  v20 = strlen((const char *)v19);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v62[1] = v21;
    v63 = v24 | 0x8000000000000000;
    v62[0] = v22;
    goto LABEL_24;
  }
  HIBYTE(v63) = v20;
  v22 = v62;
  if (v20)
LABEL_24:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250ADF240;
  v25[1] = &v68;
  sub_23961580C((uint64_t)__p, (uint64_t)v62, (uint64_t)v25);
  strcpy(v75, "+GDHtBE_NY]JGX");
  sub_23958E5E0((uint64_t)v75);
  v27 = v26;
  v28 = strlen(v26);
  if (v28 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v29 = (void *)v28;
  if (v28 >= 0x17)
  {
    v31 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v28 | 7) != 0x17)
      v31 = v28 | 7;
    v32 = v31 + 1;
    v30 = operator new(v31 + 1);
    v60[1] = v29;
    v61 = v32 | 0x8000000000000000;
    v60[0] = v30;
    goto LABEL_32;
  }
  HIBYTE(v61) = v28;
  v30 = v60;
  if (v28)
LABEL_32:
    memmove(v30, v27, (size_t)v29);
  *((_BYTE *)v29 + (_QWORD)v30) = 0;
  v33 = (_QWORD *)operator new();
  *v33 = &off_250ADF7B0;
  v33[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v60, (uint64_t)v33);
  v73 = xmmword_239F1068C;
  v74 = 0;
  sub_2396EFA24((uint64_t)&v73);
  v35 = v34;
  v36 = strlen(v34);
  if (v36 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v37 = (void *)v36;
  if (v36 >= 0x17)
  {
    v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v36 | 7) != 0x17)
      v39 = v36 | 7;
    v40 = v39 + 1;
    v38 = operator new(v39 + 1);
    v58[1] = v37;
    v59 = v40 | 0x8000000000000000;
    v58[0] = v38;
    goto LABEL_40;
  }
  HIBYTE(v59) = v36;
  v38 = v58;
  if (v36)
LABEL_40:
    memmove(v38, v35, (size_t)v37);
  *((_BYTE *)v37 + (_QWORD)v38) = 0;
  v41 = (_QWORD *)operator new();
  *v41 = &off_250ADF7B0;
  v41[1] = v4 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v58, (uint64_t)v41);
  v71 = xmmword_239F1069D;
  v72 = 0;
  sub_2396EFA24((uint64_t)&v71);
  v43 = v42;
  v44 = strlen(v42);
  if (v44 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v45 = (void *)v44;
  if (v44 >= 0x17)
  {
    v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v44 | 7) != 0x17)
      v47 = v44 | 7;
    v48 = v47 + 1;
    v46 = operator new(v47 + 1);
    v56[1] = v45;
    v57 = v48 | 0x8000000000000000;
    v56[0] = v46;
    goto LABEL_48;
  }
  HIBYTE(v57) = v44;
  v46 = v56;
  if (v44)
LABEL_48:
    memmove(v46, v43, (size_t)v45);
  *((_BYTE *)v45 + (_QWORD)v46) = 0;
  v49 = (_QWORD *)operator new();
  *v49 = &off_250ADF7B0;
  v49[1] = v4 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v56, (uint64_t)v49);
  if (SHIBYTE(v57) < 0)
  {
    operator delete(v56[0]);
    if ((SHIBYTE(v59) & 0x80000000) == 0)
    {
LABEL_51:
      if ((SHIBYTE(v61) & 0x80000000) == 0)
        goto LABEL_52;
      goto LABEL_71;
    }
  }
  else if ((SHIBYTE(v59) & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v58[0]);
  if ((SHIBYTE(v61) & 0x80000000) == 0)
  {
LABEL_52:
    if ((SHIBYTE(v63) & 0x80000000) == 0)
      goto LABEL_53;
    goto LABEL_72;
  }
LABEL_71:
  operator delete(v60[0]);
  if ((SHIBYTE(v63) & 0x80000000) == 0)
  {
LABEL_53:
    if ((SHIBYTE(v65) & 0x80000000) == 0)
      goto LABEL_54;
LABEL_73:
    operator delete(v64[0]);
    if ((SHIBYTE(v67) & 0x80000000) == 0)
      goto LABEL_55;
    goto LABEL_74;
  }
LABEL_72:
  operator delete(v62[0]);
  if (SHIBYTE(v65) < 0)
    goto LABEL_73;
LABEL_54:
  if ((SHIBYTE(v67) & 0x80000000) == 0)
    goto LABEL_55;
LABEL_74:
  operator delete(__dst[0]);
LABEL_55:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
    *(_DWORD *)(v4 + 8) = v68;
  v50 = v70;
  if (v70)
  {
    do
    {
      v51 = v50[5];
      if (v51)
        (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
      v50 = (_QWORD *)*v50;
    }
    while (v50);
    v52 = (void **)v70;
    if (v70)
    {
      do
      {
        v55 = (void **)*v52;
        if (*((char *)v52 + 39) < 0)
          operator delete(v52[2]);
        operator delete(v52);
        v52 = v55;
      }
      while (v55);
    }
  }
  v53 = __p[0];
  __p[0] = 0;
  if (v53)
    operator delete(v53);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AA9D54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,_QWORD *__p)
{
  _QWORD *v50;
  uint64_t v51;
  void **v52;
  void **v53;

  v50 = __p;
  if (__p)
  {
    do
    {
      v51 = v50[5];
      if (v51)
        (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
      v50 = (_QWORD *)*v50;
    }
    while (v50);
    v52 = (void **)__p;
    do
    {
      v53 = (void **)*v52;
      if (*((char *)v52 + 39) < 0)
        operator delete(v52[2]);
      operator delete(v52);
      v52 = v53;
    }
    while (v53);
  }
  if (!a47)
    _Unwind_Resume(exception_object);
  operator delete(a47);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AA9EEC(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int8x8_t *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  const char *v26;
  const char *v27;
  size_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  const char *v34;
  const char *v35;
  size_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  const char *v42;
  const char *v43;
  size_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  void **v52;
  void *v53;
  void **v55;
  void *v56[2];
  unint64_t v57;
  void *v58[2];
  unint64_t v59;
  void *v60[2];
  unint64_t v61;
  void *v62[2];
  unint64_t v63;
  void *v64[2];
  unint64_t v65;
  void *__dst[2];
  unint64_t v67;
  int v68;
  void *__p[2];
  void *v70;
  char v71[32];
  char v72[32];
  uint64_t v73;
  int v74;
  __int16 v75;
  char v76;
  int8x8_t v77[2];
  __int128 v78;
  __int16 v79;
  uint64_t v80;
  int v81;
  uint64_t v82;

  v82 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v68 = *(_DWORD *)(a1 + 8);
  v80 = 0x393A353E0428325BLL;
  v81 = 4144695;
  v5 = sub_23958E4C8((uint64_t)&v80);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v67 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v67) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFEA8;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v78 = xmmword_239F1037E;
  v79 = 121;
  v12 = sub_239A91B18((int8x16_t *)&v78);
  v13 = strlen(v12->i8);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v64[1] = v14;
    v65 = v17 | 0x8000000000000000;
    v64[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v65) = v13;
  v15 = v64;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250ADF750;
  v18[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v64, (uint64_t)v18);
  strcpy((char *)v77, "+GDHtFDON");
  v19 = sub_23950FF84(v77);
  v20 = strlen((const char *)v19);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v62[1] = v21;
    v63 = v24 | 0x8000000000000000;
    v62[0] = v22;
    goto LABEL_24;
  }
  HIBYTE(v63) = v20;
  v22 = v62;
  if (v20)
LABEL_24:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250ADF240;
  v25[1] = &v68;
  sub_23961580C((uint64_t)__p, (uint64_t)v62, (uint64_t)v25);
  v73 = 0x51F182E121E1D71;
  v76 = 0;
  v75 = 541;
  v74 = 268894996;
  sub_23958E5E0((uint64_t)&v73);
  v27 = v26;
  v28 = strlen(v26);
  if (v28 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v29 = (void *)v28;
  if (v28 >= 0x17)
  {
    v31 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v28 | 7) != 0x17)
      v31 = v28 | 7;
    v32 = v31 + 1;
    v30 = operator new(v31 + 1);
    v60[1] = v29;
    v61 = v32 | 0x8000000000000000;
    v60[0] = v30;
    goto LABEL_32;
  }
  HIBYTE(v61) = v28;
  v30 = v60;
  if (v28)
LABEL_32:
    memmove(v30, v27, (size_t)v29);
  *((_BYTE *)v29 + (_QWORD)v30) = 0;
  v33 = (_QWORD *)operator new();
  *v33 = &off_250AE05B0;
  v33[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v60, (uint64_t)v33);
  strcpy(v72, "\ngkzUyomgod~Ucny");
  sub_2396EFA24((uint64_t)v72);
  v35 = v34;
  v36 = strlen(v34);
  if (v36 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v37 = (void *)v36;
  if (v36 >= 0x17)
  {
    v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v36 | 7) != 0x17)
      v39 = v36 | 7;
    v40 = v39 + 1;
    v38 = operator new(v39 + 1);
    v58[1] = v37;
    v59 = v40 | 0x8000000000000000;
    v58[0] = v38;
    goto LABEL_40;
  }
  HIBYTE(v59) = v36;
  v38 = v58;
  if (v36)
LABEL_40:
    memmove(v38, v35, (size_t)v37);
  *((_BYTE *)v37 + (_QWORD)v38) = 0;
  v41 = (_QWORD *)operator new();
  *v41 = &off_250AE05B0;
  v41[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v58, (uint64_t)v41);
  strcpy(v71, "5YZVjFPRXP[Aj\\QF");
  sub_2396EFA24((uint64_t)v71);
  v43 = v42;
  v44 = strlen(v42);
  if (v44 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v45 = (void *)v44;
  if (v44 >= 0x17)
  {
    v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v44 | 7) != 0x17)
      v47 = v44 | 7;
    v48 = v47 + 1;
    v46 = operator new(v47 + 1);
    v56[1] = v45;
    v57 = v48 | 0x8000000000000000;
    v56[0] = v46;
    goto LABEL_48;
  }
  HIBYTE(v57) = v44;
  v46 = v56;
  if (v44)
LABEL_48:
    memmove(v46, v43, (size_t)v45);
  *((_BYTE *)v45 + (_QWORD)v46) = 0;
  v49 = (_QWORD *)operator new();
  *v49 = &off_250AE05B0;
  v49[1] = a1 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v56, (uint64_t)v49);
  if (SHIBYTE(v57) < 0)
  {
    operator delete(v56[0]);
    if ((SHIBYTE(v59) & 0x80000000) == 0)
    {
LABEL_51:
      if ((SHIBYTE(v61) & 0x80000000) == 0)
        goto LABEL_52;
      goto LABEL_69;
    }
  }
  else if ((SHIBYTE(v59) & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v58[0]);
  if ((SHIBYTE(v61) & 0x80000000) == 0)
  {
LABEL_52:
    if ((SHIBYTE(v63) & 0x80000000) == 0)
      goto LABEL_53;
    goto LABEL_70;
  }
LABEL_69:
  operator delete(v60[0]);
  if ((SHIBYTE(v63) & 0x80000000) == 0)
  {
LABEL_53:
    if ((SHIBYTE(v65) & 0x80000000) == 0)
      goto LABEL_54;
LABEL_71:
    operator delete(v64[0]);
    if ((SHIBYTE(v67) & 0x80000000) == 0)
      goto LABEL_55;
    goto LABEL_72;
  }
LABEL_70:
  operator delete(v62[0]);
  if (SHIBYTE(v65) < 0)
    goto LABEL_71;
LABEL_54:
  if ((SHIBYTE(v67) & 0x80000000) == 0)
    goto LABEL_55;
LABEL_72:
  operator delete(__dst[0]);
LABEL_55:
  sub_2395902F0((uint64_t)__p, a2);
  v50 = v70;
  if (v70)
  {
    do
    {
      v51 = v50[5];
      if (v51)
        (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
      v50 = (_QWORD *)*v50;
    }
    while (v50);
    v52 = (void **)v70;
    if (v70)
    {
      do
      {
        v55 = (void **)*v52;
        if (*((char *)v52 + 39) < 0)
          operator delete(v52[2]);
        operator delete(v52);
        v52 = v55;
      }
      while (v55);
    }
  }
  v53 = __p[0];
  __p[0] = 0;
  if (v53)
    operator delete(v53);
  return a2;
}

void sub_239AAA584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,char a47)
{
  sub_2395905C0((uint64_t)&a47);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AAA698(uint64_t a1, _QWORD *a2, char a3)
{
  int v5;
  int8x16_t v6;
  double v7;
  int32x4_t v8;
  const char *v9;
  const char *v10;
  size_t v11;
  void *v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int8x16_t v17;
  double v18;
  int32x4_t v19;
  const char *v20;
  const char *v21;
  size_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int8x16_t v28;
  double v29;
  int32x4_t v30;
  const char *v31;
  const char *v32;
  size_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  const char *v39;
  const char *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  const char *v47;
  const char *v48;
  size_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int8x16_t v55;
  double v56;
  int32x4_t v57;
  const char *v58;
  const char *v59;
  size_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int16x8_t v66;
  int16x8_t v67;
  const char *v68;
  const char *v69;
  size_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  const char *v76;
  size_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  void **v85;
  void *v86;
  void **v88;
  void *v89[2];
  unint64_t v90;
  void *v91[2];
  unint64_t v92;
  void *v93[2];
  unint64_t v94;
  void *v95[2];
  unint64_t v96;
  void *v97[2];
  unint64_t v98;
  void *v99[2];
  unint64_t v100;
  void *v101[2];
  unint64_t v102;
  void *__dst[2];
  unint64_t v104;
  int v105;
  int v106;
  void *__p[2];
  void *v108;
  uint64_t v109;
  int v110;
  char v111[48];
  _OWORD v112[2];
  uint64_t v113;
  char v114[8];
  char v115[16];
  char v116[32];
  _OWORD v117[2];
  _BYTE v118[19];
  uint64_t v119;

  v119 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v5 = *(_DWORD *)(a1 + 16);
  v105 = *(_DWORD *)(a1 + 120);
  v106 = v5;
  *(_OWORD *)v118 = xmmword_239F103B2;
  *(_DWORD *)&v118[15] = 333568;
  sub_23958E450((uint64_t)v118, (int32x4_t)xmmword_239F103B2, v6, v7, v8);
  v10 = v9;
  v11 = strlen(v9);
  if (v11 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v12 = (void *)v11;
  if (v11 >= 0x17)
  {
    v14 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v14 = v11 | 7;
    v15 = v14 + 1;
    v13 = (void **)operator new(v14 + 1);
    __dst[1] = v12;
    v104 = v15 | 0x8000000000000000;
    __dst[0] = v13;
    goto LABEL_8;
  }
  HIBYTE(v104) = v11;
  v13 = __dst;
  if (v11)
LABEL_8:
    memmove(v13, v10, (size_t)v12);
  *((_BYTE *)v12 + (_QWORD)v13) = 0;
  v16 = (_QWORD *)operator new();
  *v16 = &off_250AF3E60;
  v16[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v16);
  v117[0] = xmmword_239F103C5;
  *(_OWORD *)((char *)v117 + 15) = *(__int128 *)((char *)&xmmword_239F103C5 + 15);
  sub_2396EFF58((uint64_t)v117, *(int32x4_t *)((char *)&xmmword_239F103C5 + 15), v17, v18, v19);
  v21 = v20;
  v22 = strlen(v20);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = (void *)v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    v101[1] = v23;
    v102 = v26 | 0x8000000000000000;
    v101[0] = v24;
    goto LABEL_16;
  }
  HIBYTE(v102) = v22;
  v24 = v101;
  if (v22)
LABEL_16:
    memmove(v24, v21, (size_t)v23);
  *((_BYTE *)v23 + (_QWORD)v24) = 0;
  v27 = (_QWORD *)operator new();
  *v27 = &off_250ADF750;
  v27[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v101, (uint64_t)v27);
  strcpy(v116, "'RTBxWUNHUxAHUxTDFKBxUBDHQBU^");
  sub_2396F0EE8((uint64_t)v116, *(int32x4_t *)"xTDFKBxUBDHQBU^", v28, v29, v30);
  v32 = v31;
  v33 = strlen(v31);
  if (v33 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v34 = (void *)v33;
  if (v33 >= 0x17)
  {
    v36 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17)
      v36 = v33 | 7;
    v37 = v36 + 1;
    v35 = operator new(v36 + 1);
    v99[1] = v34;
    v100 = v37 | 0x8000000000000000;
    v99[0] = v35;
    goto LABEL_24;
  }
  HIBYTE(v100) = v33;
  v35 = v99;
  if (v33)
LABEL_24:
    memmove(v35, v32, (size_t)v34);
  *((_BYTE *)v34 + (_QWORD)v35) = 0;
  v38 = (_QWORD *)operator new();
  *v38 = &off_250AFFEA8;
  v38[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)v99, (uint64_t)v38);
  strcpy(v115, "X:->>=*\a4=6?,0");
  sub_23958E5E0((uint64_t)v115);
  v40 = v39;
  v41 = strlen(v39);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v97[1] = v42;
    v98 = v45 | 0x8000000000000000;
    v97[0] = v43;
    goto LABEL_32;
  }
  HIBYTE(v98) = v41;
  v43 = v97;
  if (v41)
LABEL_32:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250ADF750;
  v46[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v97, (uint64_t)v46);
  v113 = 0x7D7C717870727113;
  strcpy(v114, "vLgjcv");
  sub_23958E5E0((uint64_t)&v113);
  v48 = v47;
  v49 = strlen(v47);
  if (v49 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v50 = (void *)v49;
  if (v49 >= 0x17)
  {
    v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v49 | 7) != 0x17)
      v52 = v49 | 7;
    v53 = v52 + 1;
    v51 = operator new(v52 + 1);
    v95[1] = v50;
    v96 = v53 | 0x8000000000000000;
    v95[0] = v51;
    goto LABEL_40;
  }
  HIBYTE(v96) = v49;
  v51 = v95;
  if (v49)
LABEL_40:
    memmove(v51, v48, (size_t)v50);
  *((_BYTE *)v50 + (_QWORD)v51) = 0;
  v54 = (_QWORD *)operator new();
  *v54 = &off_250ADF240;
  v54[1] = &v106;
  sub_23961580C((uint64_t)__p, (uint64_t)v95, (uint64_t)v54);
  v112[0] = xmmword_239F10402;
  *(_OWORD *)((char *)v112 + 13) = *(__int128 *)((char *)&xmmword_239F10402 + 13);
  sub_2396EFD48((uint64_t)v112, *(int32x4_t *)((char *)&xmmword_239F10402 + 13), v55, v56, v57);
  v59 = v58;
  v60 = strlen(v58);
  if (v60 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v61 = (void *)v60;
  if (v60 >= 0x17)
  {
    v63 = (v60 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v60 | 7) != 0x17)
      v63 = v60 | 7;
    v64 = v63 + 1;
    v62 = operator new(v63 + 1);
    v93[1] = v61;
    v94 = v64 | 0x8000000000000000;
    v93[0] = v62;
    goto LABEL_48;
  }
  HIBYTE(v94) = v60;
  v62 = v93;
  if (v60)
LABEL_48:
    memmove(v62, v59, (size_t)v61);
  *((_BYTE *)v61 + (_QWORD)v62) = 0;
  v65 = (_QWORD *)operator new();
  *v65 = &off_250AFFEA8;
  v65[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v93, (uint64_t)v65);
  strcpy(v111, "-@LUr]_DCND]LArLUD^rLCJAHrKB_rHU]LCIHIr@LYNE");
  sub_2396F0DB0((unsigned __int8 *)v111, *(double *)"rHU]LCIHIr@LYNE", *(double *)"UD^rLCJAHrKB_rHU]LCIHIr@LYNE", v66, v67);
  v69 = v68;
  v70 = strlen(v68);
  if (v70 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v71 = (void *)v70;
  if (v70 >= 0x17)
  {
    v73 = (v70 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v70 | 7) != 0x17)
      v73 = v70 | 7;
    v74 = v73 + 1;
    v72 = operator new(v73 + 1);
    v91[1] = v71;
    v92 = v74 | 0x8000000000000000;
    v91[0] = v72;
    goto LABEL_56;
  }
  HIBYTE(v92) = v70;
  v72 = v91;
  if (v70)
LABEL_56:
    memmove(v72, v69, (size_t)v71);
  *((_BYTE *)v71 + (_QWORD)v72) = 0;
  v75 = (_QWORD *)operator new();
  *v75 = &off_250ADF570;
  v75[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v91, (uint64_t)v75);
  v109 = 0x251E1B1F08120E7ALL;
  v110 = 595211;
  v76 = sub_23958E4C8((uint64_t)&v109);
  v77 = strlen(v76);
  if (v77 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v78 = (void *)v77;
  if (v77 >= 0x17)
  {
    v80 = (v77 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v77 | 7) != 0x17)
      v80 = v77 | 7;
    v81 = v80 + 1;
    v79 = operator new(v80 + 1);
    v89[1] = v78;
    v90 = v81 | 0x8000000000000000;
    v89[0] = v79;
    goto LABEL_64;
  }
  HIBYTE(v90) = v77;
  v79 = v89;
  if (v77)
LABEL_64:
    memmove(v79, v76, (size_t)v78);
  *((_BYTE *)v78 + (_QWORD)v79) = 0;
  v82 = (_QWORD *)operator new();
  *v82 = &off_250ADF750;
  v82[1] = &v105;
  sub_23961580C((uint64_t)__p, (uint64_t)v89, (uint64_t)v82);
  if (SHIBYTE(v90) < 0)
  {
    operator delete(v89[0]);
    if ((SHIBYTE(v92) & 0x80000000) == 0)
    {
LABEL_67:
      if ((SHIBYTE(v94) & 0x80000000) == 0)
        goto LABEL_68;
      goto LABEL_87;
    }
  }
  else if ((SHIBYTE(v92) & 0x80000000) == 0)
  {
    goto LABEL_67;
  }
  operator delete(v91[0]);
  if ((SHIBYTE(v94) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v96) & 0x80000000) == 0)
      goto LABEL_69;
    goto LABEL_88;
  }
LABEL_87:
  operator delete(v93[0]);
  if ((SHIBYTE(v96) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v98) & 0x80000000) == 0)
      goto LABEL_70;
    goto LABEL_89;
  }
LABEL_88:
  operator delete(v95[0]);
  if ((SHIBYTE(v98) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v100) & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_90;
  }
LABEL_89:
  operator delete(v97[0]);
  if ((SHIBYTE(v100) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v102) & 0x80000000) == 0)
      goto LABEL_72;
LABEL_91:
    operator delete(v101[0]);
    if ((SHIBYTE(v104) & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_92;
  }
LABEL_90:
  operator delete(v99[0]);
  if (SHIBYTE(v102) < 0)
    goto LABEL_91;
LABEL_72:
  if ((SHIBYTE(v104) & 0x80000000) == 0)
    goto LABEL_73;
LABEL_92:
  operator delete(__dst[0]);
LABEL_73:
  sub_2395902F0((uint64_t)__p, a2);
  v83 = v108;
  if (v108)
  {
    do
    {
      v84 = v83[5];
      if (v84)
        (*(void (**)(uint64_t))(*(_QWORD *)v84 + 8))(v84);
      v83 = (_QWORD *)*v83;
    }
    while (v83);
    v85 = (void **)v108;
    if (v108)
    {
      do
      {
        v88 = (void **)*v85;
        if (*((char *)v85 + 39) < 0)
          operator delete(v85[2]);
        operator delete(v85);
        v85 = v88;
      }
      while (v88);
    }
  }
  v86 = __p[0];
  __p[0] = 0;
  if (v86)
    operator delete(v86);
  return a2;
}

void sub_239AAAF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,char a59)
{
  sub_2395905C0((uint64_t)&a59);
  _Unwind_Resume(a1);
}

void sub_239AAB090(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AAB0B4(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AA9EEC(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AAB0F0()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AAB128(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AAB14C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AAC3A4(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AAB188(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v3;
  const char *v4;
  size_t v5;
  void *v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int8x8_t *v11;
  size_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  const char *v18;
  const char *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  const char *v26;
  const char *v27;
  size_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  const char *v34;
  const char *v35;
  size_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  const char *v42;
  const char *v43;
  size_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void **v58;
  void **v59;
  _DWORD *v60;
  int v61;
  int v62;
  unint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _BYTE *v71;
  _DWORD *v72;
  unint64_t v73;
  uint64_t v74;
  _OWORD *v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  int v79;
  _QWORD *v80;
  uint64_t v81;
  void **v82;
  void *v83;
  void **v84;
  void **v85;
  void *v86;
  void **v87;
  void **v90;
  void *v91[2];
  unint64_t v92;
  void *v93[2];
  unint64_t v94;
  void *v95[2];
  unint64_t v96;
  void *v97[2];
  unint64_t v98;
  void *v99[2];
  unint64_t v100;
  void *v101[2];
  unint64_t v102;
  void *__dst[2];
  unint64_t v104;
  void *__p[2];
  void *v106;
  void *v107;
  void **v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112[8];
  uint64_t v113;
  int v114;
  __int16 v115;
  char v116;
  __int128 v117;
  char v118;
  __int128 v119;
  char v120[16];
  uint64_t v121;
  __int16 v122;
  uint64_t v123;
  int v124;
  uint64_t v125;

  v125 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 8);
  v110 = 0;
  v107 = 0;
  v108 = 0;
  v109 = 0;
  sub_2396157EC((uint64_t)__p, a3);
  v123 = 0xF08241E16120F7BLL;
  v124 = 985370;
  v4 = sub_23958E4C8((uint64_t)&v123);
  v5 = strlen(v4);
  if (v5 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v6 = (void *)v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = (void **)operator new(v8 + 1);
    __dst[1] = v6;
    v104 = v9 | 0x8000000000000000;
    __dst[0] = v7;
    goto LABEL_8;
  }
  HIBYTE(v104) = v5;
  v7 = __dst;
  if (v5)
LABEL_8:
    memmove(v7, v4, (size_t)v6);
  *((_BYTE *)v6 + (_QWORD)v7) = 0;
  v10 = (_QWORD *)operator new();
  *v10 = &off_250B00028;
  v10[1] = v3;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v10);
  v121 = 0x3D360C363E3A2753;
  v122 = 55;
  v11 = sub_23950FF84((int8x8_t *)&v121);
  v12 = strlen((const char *)v11);
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v13 = (void *)v12;
  if (v12 >= 0x17)
  {
    v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v15 = v12 | 7;
    v16 = v15 + 1;
    v14 = operator new(v15 + 1);
    v101[1] = v13;
    v102 = v16 | 0x8000000000000000;
    v101[0] = v14;
    goto LABEL_16;
  }
  HIBYTE(v102) = v12;
  v14 = v101;
  if (v12)
LABEL_16:
    memmove(v14, v11, (size_t)v13);
  *((_BYTE *)v13 + (_QWORD)v14) = 0;
  v17 = (_QWORD *)operator new();
  *v17 = &off_250B00028;
  v17[1] = v3 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v101, (uint64_t)v17);
  strcpy(v120, "\asnjbXcrufsnhi");
  sub_23958E5E0((uint64_t)v120);
  v19 = v18;
  v20 = strlen(v18);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v99[1] = v21;
    v100 = v24 | 0x8000000000000000;
    v99[0] = v22;
    goto LABEL_24;
  }
  HIBYTE(v100) = v20;
  v22 = v99;
  if (v20)
LABEL_24:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250ADF360;
  v25[1] = &v110;
  sub_23961580C((uint64_t)__p, (uint64_t)v99, (uint64_t)v25);
  v119 = xmmword_239F0BE90;
  sub_23950F8E4((uint64_t)&v119);
  v27 = v26;
  v28 = strlen(v26);
  if (v28 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v29 = (void *)v28;
  if (v28 >= 0x17)
  {
    v31 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v28 | 7) != 0x17)
      v31 = v28 | 7;
    v32 = v31 + 1;
    v30 = operator new(v31 + 1);
    v97[1] = v29;
    v98 = v32 | 0x8000000000000000;
    v97[0] = v30;
    goto LABEL_32;
  }
  HIBYTE(v98) = v28;
  v30 = v97;
  if (v28)
LABEL_32:
    memmove(v30, v27, (size_t)v29);
  *((_BYTE *)v29 + (_QWORD)v30) = 0;
  v33 = (_QWORD *)operator new();
  *v33 = &off_250AE0670;
  v33[1] = v3 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v97, (uint64_t)v33);
  v117 = xmmword_239F0D3B1;
  v118 = 0;
  sub_2396EFA24((uint64_t)&v117);
  v35 = v34;
  v36 = strlen(v34);
  if (v36 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v37 = (void *)v36;
  if (v36 >= 0x17)
  {
    v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v36 | 7) != 0x17)
      v39 = v36 | 7;
    v40 = v39 + 1;
    v38 = operator new(v39 + 1);
    v95[1] = v37;
    v96 = v40 | 0x8000000000000000;
    v95[0] = v38;
    goto LABEL_40;
  }
  HIBYTE(v96) = v36;
  v38 = v95;
  if (v36)
LABEL_40:
    memmove(v38, v35, (size_t)v37);
  *((_BYTE *)v37 + (_QWORD)v38) = 0;
  v41 = (_QWORD *)operator new();
  *v41 = &off_250AE0670;
  v41[1] = v3 + 28;
  sub_23961580C((uint64_t)__p, (uint64_t)v95, (uint64_t)v41);
  v113 = 0x111911231812197CLL;
  v116 = 0;
  v115 = 7697;
  v114 = 587533843;
  sub_23958E5E0((uint64_t)&v113);
  v43 = v42;
  v44 = strlen(v42);
  if (v44 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v45 = (void *)v44;
  if (v44 >= 0x17)
  {
    v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v44 | 7) != 0x17)
      v47 = v44 | 7;
    v48 = v47 + 1;
    v46 = operator new(v47 + 1);
    v93[1] = v45;
    v94 = v48 | 0x8000000000000000;
    v93[0] = v46;
    goto LABEL_48;
  }
  HIBYTE(v94) = v44;
  v46 = v93;
  if (v44)
LABEL_48:
    memmove(v46, v43, (size_t)v45);
  *((_BYTE *)v45 + (_QWORD)v46) = 0;
  v49 = (_QWORD *)operator new();
  *v49 = &off_250AE0670;
  v49[1] = v3 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v93, (uint64_t)v49);
  v111 = 0x625E736E73736401;
  strcpy(v112, "nedr");
  v50 = sub_239510ECC((uint64_t)&v111);
  v51 = strlen(v50);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v91[1] = v52;
    v92 = v55 | 0x8000000000000000;
    v91[0] = v53;
    goto LABEL_56;
  }
  HIBYTE(v92) = v51;
  v53 = v91;
  if (v51)
LABEL_56:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250ADF2D0;
  v56[1] = &v107;
  sub_23961580C((uint64_t)__p, (uint64_t)v91, (uint64_t)v56);
  if (SHIBYTE(v92) < 0)
  {
    operator delete(v91[0]);
    if ((SHIBYTE(v94) & 0x80000000) == 0)
    {
LABEL_59:
      if ((SHIBYTE(v96) & 0x80000000) == 0)
        goto LABEL_60;
      goto LABEL_110;
    }
  }
  else if ((SHIBYTE(v94) & 0x80000000) == 0)
  {
    goto LABEL_59;
  }
  operator delete(v93[0]);
  if ((SHIBYTE(v96) & 0x80000000) == 0)
  {
LABEL_60:
    if ((SHIBYTE(v98) & 0x80000000) == 0)
      goto LABEL_61;
    goto LABEL_111;
  }
LABEL_110:
  operator delete(v95[0]);
  if ((SHIBYTE(v98) & 0x80000000) == 0)
  {
LABEL_61:
    if ((SHIBYTE(v100) & 0x80000000) == 0)
      goto LABEL_62;
    goto LABEL_112;
  }
LABEL_111:
  operator delete(v97[0]);
  if ((SHIBYTE(v100) & 0x80000000) == 0)
  {
LABEL_62:
    if ((SHIBYTE(v102) & 0x80000000) == 0)
      goto LABEL_63;
LABEL_113:
    operator delete(v101[0]);
    if ((SHIBYTE(v104) & 0x80000000) == 0)
      goto LABEL_64;
LABEL_114:
    operator delete(__dst[0]);
    goto LABEL_64;
  }
LABEL_112:
  operator delete(v99[0]);
  if (SHIBYTE(v102) < 0)
    goto LABEL_113;
LABEL_63:
  if (SHIBYTE(v104) < 0)
    goto LABEL_114;
LABEL_64:
  sub_23959479C((uint64_t)__p, a2);
  v57 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 16) = v110;
  v90 = (void **)(v3 + 40);
  *(_QWORD *)(v3 + 48) = v57;
  v58 = (void **)v107;
  v59 = v108;
  while (v58 != v59)
  {
    v61 = sub_2396F1D1C(v58);
    v62 = v61;
    v64 = *(char **)(v3 + 48);
    v63 = *(_QWORD *)(v3 + 56);
    if ((unint64_t)v64 < v63)
    {
      *(_DWORD *)v64 = v61;
      v60 = v64 + 4;
    }
    else
    {
      v65 = (char *)*v90;
      v66 = v64 - (_BYTE *)*v90;
      v67 = v66 >> 2;
      v68 = (v66 >> 2) + 1;
      if (v68 >> 62)
        sub_2394189F8();
      v69 = v63 - (_QWORD)v65;
      if (v69 >> 1 > v68)
        v68 = v69 >> 1;
      if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFFCLL)
        v70 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v70 = v68;
      if (v70)
      {
        if (v70 >> 62)
          sub_239418A80();
        v71 = operator new(4 * v70);
      }
      else
      {
        v71 = 0;
      }
      v72 = &v71[4 * v67];
      *v72 = v62;
      v60 = v72 + 1;
      if (v64 != v65)
      {
        v73 = v64 - 4 - v65;
        if (v73 < 0x2C)
          goto LABEL_126;
        if ((unint64_t)(v64 - &v71[v66]) < 0x20)
          goto LABEL_126;
        v74 = (v73 >> 2) + 1;
        v75 = &v71[4 * v67 - 16];
        v76 = v64 - 16;
        v77 = v74 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v78 = *(_OWORD *)v76;
          *(v75 - 1) = *((_OWORD *)v76 - 1);
          *v75 = v78;
          v75 -= 2;
          v76 -= 32;
          v77 -= 8;
        }
        while (v77);
        v72 -= v74 & 0x7FFFFFFFFFFFFFF8;
        v64 -= 4 * (v74 & 0x7FFFFFFFFFFFFFF8);
        if (v74 != (v74 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_126:
          do
          {
            v79 = *((_DWORD *)v64 - 1);
            v64 -= 4;
            *--v72 = v79;
          }
          while (v64 != v65);
        }
      }
      *(_QWORD *)(v3 + 40) = v72;
      *(_QWORD *)(v3 + 48) = v60;
      *(_QWORD *)(v3 + 56) = &v71[4 * v70];
      if (v65)
        operator delete(v65);
    }
    *(_QWORD *)(v3 + 48) = v60;
    v58 += 3;
  }
  *(_BYTE *)(v3 + 64) = 0;
  v80 = v106;
  if (v106)
  {
    do
    {
      v81 = v80[5];
      if (v81)
        (*(void (**)(uint64_t))(*(_QWORD *)v81 + 8))(v81);
      v80 = (_QWORD *)*v80;
    }
    while (v80);
    v82 = (void **)v106;
    if (v106)
    {
      do
      {
        v87 = (void **)*v82;
        if (*((char *)v82 + 39) < 0)
          operator delete(v82[2]);
        operator delete(v82);
        v82 = v87;
      }
      while (v87);
    }
  }
  v83 = __p[0];
  __p[0] = 0;
  if (v83)
    operator delete(v83);
  v84 = (void **)v107;
  if (v107)
  {
    v85 = v108;
    v86 = v107;
    if (v108 != v107)
    {
      do
      {
        if (*((char *)v85 - 1) < 0)
          operator delete(*(v85 - 3));
        v85 -= 3;
      }
      while (v85 != v84);
      v86 = v107;
    }
    v108 = v84;
    operator delete(v86);
  }
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AABAF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,void *a54,uint64_t a55,_QWORD *__p,uint64_t a57,uint64_t a58,uint64_t a59,void *a60,void *a61)
{
  _QWORD *v62;
  uint64_t v63;
  void **v64;
  void *v65;
  void **v66;
  uint64_t v67;
  void *v68;

  v62 = __p;
  if (__p)
  {
    do
    {
      v63 = v62[5];
      if (v63)
        (*(void (**)(uint64_t))(*(_QWORD *)v63 + 8))(v63);
      v62 = (_QWORD *)*v62;
    }
    while (v62);
    v64 = (void **)__p;
    do
    {
      v66 = (void **)*v64;
      if (*((char *)v64 + 39) < 0)
        operator delete(v64[2]);
      operator delete(v64);
      v64 = v66;
    }
    while (v66);
  }
  if (a54)
  {
    operator delete(a54);
    v65 = a60;
    if (!a60)
LABEL_9:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v65 = a60;
    if (!a60)
      goto LABEL_9;
  }
  v67 = (uint64_t)a61;
  v68 = v65;
  if (a61 != v65)
  {
    do
    {
      if (*(char *)(v67 - 1) < 0)
        operator delete(*(void **)(v67 - 24));
      v67 -= 24;
    }
    while ((void *)v67 != v65);
    v68 = a60;
  }
  operator delete(v68);
  _Unwind_Resume(exception_object);
}

void sub_239AABD1C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AABD40(uint64_t a1, _QWORD *a2, int a3)
{
  std::chrono::system_clock::time_point v5;
  char __p[18];
  char v7;

  v5.__d_.__rep_ = **(_QWORD **)(a1 + 8);
  v7 = 17;
  strcpy(__p, "%b %d %Y %H:%M:%S");
  sub_239AAC108(&v5, (uint64_t)a2, a3);
  if (v7 < 0)
    operator delete(*(void **)__p);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AABDC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239AABDDC(uint64_t a1, uint64_t *a2, int a3)
{
  std::chrono::system_clock::time_point *v4;
  int v5;
  unsigned int v6;
  const char *v7;
  time_t v8;
  uint64_t v9;
  std::chrono::system_clock::time_point v11;
  void *v12[3];
  tm v13;
  _QWORD v14[13];
  char v15;
  uint64_t v16;
  std::string v17;
  std::locale v18;
  int v19;
  char v20;

  v4 = *(std::chrono::system_clock::time_point **)(a1 + 8);
  HIBYTE(v12[2]) = 17;
  strcpy((char *)v12, "%b %d %Y %H:%M:%S");
  memset(&v17, 0, sizeof(v17));
  if (a3)
  {
    v5 = std::istream::get();
    v6 = sub_2396162D4((uint64_t)a2, v5);
    if (v6)
    {
      std::string::resize(&v17, v6, 0);
      std::istream::read();
    }
    else if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    {
      *v17.__r_.__value_.__l.__data_ = 0;
      v17.__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      v17.__r_.__value_.__s.__data_[0] = 0;
      *((_BYTE *)&v17.__r_.__value_.__s + 23) = 0;
    }
  }
  else
  {
    sub_239595A48((uint64_t)&v17, a2);
  }
  sub_239593804((uint64_t)v14, (uint64_t)&v17, 24);
  memset(&v13, 0, sizeof(v13));
  if (SHIBYTE(v12[2]) >= 0)
    v7 = (const char *)v12;
  else
    v7 = (const char *)v12[0];
  MEMORY[0x23B83DCD4](&v20, v14, 0);
  if (v20)
  {
    v19 = 0;
    std::ios_base::getloc((const std::ios_base *)((char *)v14 + *(_QWORD *)(v14[0] - 24)));
    std::locale::use_facet(&v18, MEMORY[0x24BEDB590]);
    std::locale::~locale(&v18);
    strlen(v7);
    std::time_get<char,std::istreambuf_iterator<char>>::get();
    std::ios_base::clear((std::ios_base *)((char *)v14 + *(_QWORD *)(v14[0] - 24)), *(_DWORD *)((char *)&v14[4] + *(_QWORD *)(v14[0] - 24)) | v19);
  }
  v8 = mktime(&v13);
  v11.__d_.__rep_ = std::chrono::system_clock::from_time_t(v8).__d_.__rep_;
  v14[0] = *MEMORY[0x24BEDB7F0];
  v9 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v14 + *(_QWORD *)(v14[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v14[2] = v9;
  v14[3] = MEMORY[0x24BEDB848] + 16;
  if (v15 < 0)
    operator delete((void *)v14[11]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v16);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  v4->__d_.__rep_ = v11.__d_.__rep_;
  if (SHIBYTE(v12[2]) < 0)
    operator delete(v12[0]);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AAC064(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;

  std::locale::~locale((std::locale *)(v24 - 80));
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)&a24 + *(_QWORD *)(a24 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x239AABF70);
}

void sub_239AAC0BC()
{
  __cxa_end_catch();
  JUMPOUT(0x239AAC07CLL);
}

uint64_t sub_239AAC108(const std::chrono::system_clock::time_point *a1, uint64_t a2, int a3)
{
  tm *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  const char *v10;
  const std::chrono::system_clock::time_point *v11;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  const char *v13;
  const std::ios_base *v14;
  const std::locale::facet *v15;
  std::ios_base::fmtflags v16;
  uint64_t v17;
  void *__p[2];
  char v20;
  _QWORD v21[2];
  _QWORD v22[11];
  char v23;
  _BYTE v24[168];
  __int128 v25;
  __int128 v26;
  char *tm_zone;
  time_t v28;
  std::locale v29;

  v28 = std::chrono::system_clock::to_time_t(a1);
  v6 = localtime(&v28);
  v8 = *(_OWORD *)&v6->tm_mon;
  v7 = *(_OWORD *)&v6->tm_isdst;
  v9 = *(_OWORD *)&v6->tm_sec;
  tm_zone = v6->tm_zone;
  v25 = v8;
  v26 = v7;
  *(_OWORD *)&v24[152] = v9;
  sub_2394988CC((uint64_t)v21);
  rep = a1[1].__d_.__rep_;
  v11 = a1 + 1;
  v10 = (const char *)rep;
  if (v11[2].__d_.__rep_ >= 0)
    v13 = (const char *)v11;
  else
    v13 = v10;
  MEMORY[0x23B83DD7C](__p, v22);
  if (LOBYTE(__p[0]))
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(_QWORD *)(v22[0] - 24)));
    std::locale::use_facet(&v29, MEMORY[0x24BEDB598]);
    std::locale::~locale(&v29);
    v14 = (const std::ios_base *)((char *)v22 + *(_QWORD *)(v22[0] - 24));
    if (v14[1].__fmtflags_ == -1)
    {
      std::ios_base::getloc(v14);
      v15 = std::locale::use_facet(&v29, MEMORY[0x24BEDB350]);
      v16 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v15->__vftable[2].~facet_0)(v15, 32);
      std::locale::~locale(&v29);
      v14[1].__fmtflags_ = v16;
    }
    strlen(v13);
    if (!std::time_put<char,std::ostreambuf_iterator<char>>::put())
      std::ios_base::clear((std::ios_base *)((char *)v22 + *(_QWORD *)(v22[0] - 24)), *(_DWORD *)((char *)&v22[4] + *(_QWORD *)(v22[0] - 24)) | 1);
  }
  MEMORY[0x23B83DD88](__p);
  std::stringbuf::str();
  sub_2395955F0((uint64_t)__p, a2, a3);
  if (v20 < 0)
    operator delete(__p[0]);
  v21[0] = *MEMORY[0x24BEDB7F0];
  v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v21 + *(_QWORD *)(v21[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v22[0] = v17;
  v22[1] = MEMORY[0x24BEDB848] + 16;
  if (v23 < 0)
    operator delete((void *)v22[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x23B83E250](v24);
}

void sub_239AAC314(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;

  MEMORY[0x23B83DD88](&__p);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)(v17 + *(_QWORD *)(a17 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x239AAC264);
}

void sub_239AAC394()
{
  __cxa_end_catch();
  JUMPOUT(0x239AAC35CLL);
}

_QWORD *sub_239AAC3A4(uint64_t a1, _QWORD *a2, char a3)
{
  std::chrono::system_clock::time_point v6;
  int *v7;
  int *i;
  __int128 v9;
  _OWORD *v10;
  const char *v11;
  size_t v12;
  size_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int8x8_t *v18;
  size_t v19;
  void *v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  const char *v25;
  const char *v26;
  size_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  const char *v33;
  const char *v34;
  size_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  const char *v41;
  const char *v42;
  size_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  const char *v57;
  size_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  void **v66;
  void *v67;
  __darwin_time_t tv_sec;
  uint64_t v69;
  void *v70;
  void **v71;
  void *v73[2];
  unint64_t v74;
  void *v75[2];
  unint64_t v76;
  void *v77[2];
  unint64_t v78;
  void *v79[2];
  unint64_t v80;
  void *v81[2];
  unint64_t v82;
  void *__dst[2];
  unint64_t v84;
  mach_msg_type_number_t task_info_outCnt[2];
  size_t v86;
  unint64_t v87;
  uint64_t v88;
  rusage v89;
  __int128 task_info_out;
  void *__p;
  unint64_t v92;
  char v93[16];
  char v94[16];
  __int128 v95;
  char v96;
  __int128 v97;
  uint64_t v98;
  char v99[8];
  int8x8_t v100[2];
  char v101[16];
  uint64_t v102;

  v102 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a1 + 64))
  {
    v6.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    *(std::chrono::system_clock::time_point *)(a1 + 8) = v6;
    *(double *)(a1 + 16) = (double)(v6.__d_.__rep_ - *(_QWORD *)a1) / 1000000.0;
    task_info_outCnt[0] = 93;
    if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, (task_info_t)&task_info_out, task_info_outCnt))
      *(float *)(a1 + 32) = (float)((float)v92 * 0.00097656) * 0.00097656;
    *(_BYTE *)(a1 + 64) = 0;
    getrusage(0, &v89);
    *(float *)(a1 + 24) = (float)((float)v89.ru_maxrss * 0.00097656) * 0.00097656;
  }
  v88 = *(_QWORD *)(a1 + 16);
  memset(&v89, 0, 24);
  v7 = *(int **)(a1 + 40);
  for (i = *(int **)(a1 + 48); v7 != i; ++v7)
  {
    while (1)
    {
      sub_2396F1BE8(v7, (uint64_t)&task_info_out);
      v10 = *(_OWORD **)&v89.ru_utime.tv_usec;
      if (*(_QWORD *)&v89.ru_utime.tv_usec >= v89.ru_stime.tv_sec)
        break;
      v9 = task_info_out;
      *(_QWORD *)(*(_QWORD *)&v89.ru_utime.tv_usec + 16) = __p;
      *v10 = v9;
      *(_QWORD *)&v89.ru_utime.tv_usec = (char *)v10 + 24;
      if (++v7 == i)
        goto LABEL_12;
    }
    *(_QWORD *)&v89.ru_utime.tv_usec = sub_23941ACDC((void **)&v89, (uint64_t)&task_info_out);
    if (SHIBYTE(__p) < 0)
      operator delete((void *)task_info_out);
  }
LABEL_12:
  sub_2396157EC((uint64_t)&task_info_out, a3);
  strcpy(v101, "\asnjbXtsfus");
  v11 = sub_23958E4C8((uint64_t)v101);
  v12 = strlen(v11);
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v13 = v12;
  if (v12 >= 0x17)
  {
    v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v15 = v12 | 7;
    v16 = v15 + 1;
    v14 = operator new(v15 + 1);
    v86 = v13;
    v87 = v16 | 0x8000000000000000;
    *(_QWORD *)task_info_outCnt = v14;
    goto LABEL_19;
  }
  HIBYTE(v87) = v12;
  v14 = task_info_outCnt;
  if (v12)
LABEL_19:
    memmove(v14, v11, v13);
  *((_BYTE *)v14 + v13) = 0;
  v17 = (_QWORD *)operator new();
  *v17 = &off_250B00028;
  v17[1] = a1;
  sub_23961580C((uint64_t)&task_info_out, (uint64_t)task_info_outCnt, (uint64_t)v17);
  strcpy((char *)v100, "1EX\\TnT_U");
  v18 = sub_23950FF84(v100);
  v19 = strlen((const char *)v18);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v20 = (void *)v19;
  if (v19 >= 0x17)
  {
    v22 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v22 = v19 | 7;
    v23 = v22 + 1;
    v21 = (void **)operator new(v22 + 1);
    __dst[1] = v20;
    v84 = v23 | 0x8000000000000000;
    __dst[0] = v21;
    goto LABEL_27;
  }
  HIBYTE(v84) = v19;
  v21 = __dst;
  if (v19)
LABEL_27:
    memmove(v21, v18, (size_t)v20);
  *((_BYTE *)v20 + (_QWORD)v21) = 0;
  v24 = (_QWORD *)operator new();
  *v24 = &off_250B00028;
  v24[1] = a1 + 8;
  sub_23961580C((uint64_t)&task_info_out, (uint64_t)__dst, (uint64_t)v24);
  v98 = 0x36271C262E2A3743;
  strcpy(v99, "1\"7*,-");
  sub_23958E5E0((uint64_t)&v98);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = (void *)v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = operator new(v30 + 1);
    v81[1] = v28;
    v82 = v31 | 0x8000000000000000;
    v81[0] = v29;
    goto LABEL_35;
  }
  HIBYTE(v82) = v27;
  v29 = v81;
  if (v27)
LABEL_35:
    memmove(v29, v26, (size_t)v28);
  *((_BYTE *)v28 + (_QWORD)v29) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250ADF360;
  v32[1] = &v88;
  sub_23961580C((uint64_t)&task_info_out, (uint64_t)v81, (uint64_t)v32);
  v97 = xmmword_239F0BEA0;
  sub_23950F8E4((uint64_t)&v97);
  v34 = v33;
  v35 = strlen(v33);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v36 = (void *)v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = operator new(v38 + 1);
    v79[1] = v36;
    v80 = v39 | 0x8000000000000000;
    v79[0] = v37;
    goto LABEL_43;
  }
  HIBYTE(v80) = v35;
  v37 = v79;
  if (v35)
LABEL_43:
    memmove(v37, v34, (size_t)v36);
  *((_BYTE *)v36 + (_QWORD)v37) = 0;
  v40 = (_QWORD *)operator new();
  *v40 = &off_250AE0580;
  v40[1] = a1 + 24;
  sub_23961580C((uint64_t)&task_info_out, (uint64_t)v79, (uint64_t)v40);
  v95 = xmmword_239F0D227;
  v96 = 0;
  sub_2396EFA24((uint64_t)&v95);
  v42 = v41;
  v43 = strlen(v41);
  if (v43 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v44 = (void *)v43;
  if (v43 >= 0x17)
  {
    v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v43 | 7) != 0x17)
      v46 = v43 | 7;
    v47 = v46 + 1;
    v45 = operator new(v46 + 1);
    v77[1] = v44;
    v78 = v47 | 0x8000000000000000;
    v77[0] = v45;
    goto LABEL_51;
  }
  HIBYTE(v78) = v43;
  v45 = v77;
  if (v43)
LABEL_51:
    memmove(v45, v42, (size_t)v44);
  *((_BYTE *)v44 + (_QWORD)v45) = 0;
  v48 = (_QWORD *)operator new();
  *v48 = &off_250AE0580;
  v48[1] = a1 + 28;
  sub_23961580C((uint64_t)&task_info_out, (uint64_t)v77, (uint64_t)v48);
  strcpy(v94, "1T_Un\\T\\^CHn\\S");
  sub_23958E5E0((uint64_t)v94);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v75[1] = v52;
    v76 = v55 | 0x8000000000000000;
    v75[0] = v53;
    goto LABEL_59;
  }
  HIBYTE(v76) = v51;
  v53 = v75;
  if (v51)
LABEL_59:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250AE0580;
  v56[1] = a1 + 32;
  sub_23961580C((uint64_t)&task_info_out, (uint64_t)v75, (uint64_t)v56);
  strcpy(v93, "(MZZGZwKGLM[");
  v57 = sub_239510ECC((uint64_t)v93);
  v58 = strlen(v57);
  if (v58 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v59 = (void *)v58;
  if (v58 >= 0x17)
  {
    v61 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v58 | 7) != 0x17)
      v61 = v58 | 7;
    v62 = v61 + 1;
    v60 = operator new(v61 + 1);
    v73[1] = v59;
    v74 = v62 | 0x8000000000000000;
    v73[0] = v60;
    goto LABEL_67;
  }
  HIBYTE(v74) = v58;
  v60 = v73;
  if (v58)
LABEL_67:
    memmove(v60, v57, (size_t)v59);
  *((_BYTE *)v59 + (_QWORD)v60) = 0;
  v63 = (_QWORD *)operator new();
  *v63 = &off_250ADF2D0;
  v63[1] = &v89;
  sub_23961580C((uint64_t)&task_info_out, (uint64_t)v73, (uint64_t)v63);
  if (SHIBYTE(v74) < 0)
  {
    operator delete(v73[0]);
    if ((SHIBYTE(v76) & 0x80000000) == 0)
    {
LABEL_70:
      if ((SHIBYTE(v78) & 0x80000000) == 0)
        goto LABEL_71;
      goto LABEL_97;
    }
  }
  else if ((SHIBYTE(v76) & 0x80000000) == 0)
  {
    goto LABEL_70;
  }
  operator delete(v75[0]);
  if ((SHIBYTE(v78) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v80) & 0x80000000) == 0)
      goto LABEL_72;
    goto LABEL_98;
  }
LABEL_97:
  operator delete(v77[0]);
  if ((SHIBYTE(v80) & 0x80000000) == 0)
  {
LABEL_72:
    if ((SHIBYTE(v82) & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_99;
  }
LABEL_98:
  operator delete(v79[0]);
  if ((SHIBYTE(v82) & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v84) & 0x80000000) == 0)
      goto LABEL_74;
LABEL_100:
    operator delete(__dst[0]);
    if ((SHIBYTE(v87) & 0x80000000) == 0)
      goto LABEL_75;
    goto LABEL_101;
  }
LABEL_99:
  operator delete(v81[0]);
  if (SHIBYTE(v84) < 0)
    goto LABEL_100;
LABEL_74:
  if ((SHIBYTE(v87) & 0x80000000) == 0)
    goto LABEL_75;
LABEL_101:
  operator delete(*(void **)task_info_outCnt);
LABEL_75:
  sub_2395902F0((uint64_t)&task_info_out, a2);
  v64 = __p;
  if (__p)
  {
    do
    {
      v65 = v64[5];
      if (v65)
        (*(void (**)(uint64_t))(*(_QWORD *)v65 + 8))(v65);
      v64 = (_QWORD *)*v64;
    }
    while (v64);
    v66 = (void **)__p;
    if (__p)
    {
      do
      {
        v71 = (void **)*v66;
        if (*((char *)v66 + 39) < 0)
          operator delete(v66[2]);
        operator delete(v66);
        v66 = v71;
      }
      while (v71);
    }
  }
  v67 = (void *)task_info_out;
  *(_QWORD *)&task_info_out = 0;
  if (v67)
    operator delete(v67);
  tv_sec = v89.ru_utime.tv_sec;
  if (v89.ru_utime.tv_sec)
  {
    v69 = *(_QWORD *)&v89.ru_utime.tv_usec;
    v70 = (void *)v89.ru_utime.tv_sec;
    if (*(_QWORD *)&v89.ru_utime.tv_usec != v89.ru_utime.tv_sec)
    {
      do
      {
        if (*(char *)(v69 - 1) < 0)
          operator delete(*(void **)(v69 - 24));
        v69 -= 24;
      }
      while (v69 != tv_sec);
      v70 = (void *)v89.ru_utime.tv_sec;
    }
    *(_QWORD *)&v89.ru_utime.tv_usec = tv_sec;
    operator delete(v70);
  }
  return a2;
}

void sub_239AACCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50)
{
  sub_2395905C0((uint64_t)&a50);
  sub_23941B08C(&a32);
  _Unwind_Resume(a1);
}

void sub_239AACE14(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AACE38(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AB07A0(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AACE74(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  double v5;
  double v6;
  int16x8_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  double v16;
  double v17;
  int16x8_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  double v27;
  int32x4_t v28;
  const char *v29;
  const char *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  double v37;
  double v38;
  int16x8_t v39;
  const char *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  void **v50;
  void *v51;
  void **v53;
  void *v54[2];
  unint64_t v55;
  void *v56[2];
  unint64_t v57;
  void *v58[2];
  unint64_t v59;
  void *__dst[2];
  unint64_t v61;
  void *__p[2];
  void *v63;
  char v64[48];
  char v65[32];
  __int128 v66;
  char v67[32];
  char v68[40];
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v68, "5\\FjX@YA\\jFPFF\\Z[jFA\\AV]\\[RjTEEY\\PQ");
  sub_2396F01D4((unsigned __int8 *)v68, *(int16x8_t *)"5\\FjX@YA\\jFPFF\\Z[jFA\\AV]\\[RjTEEY\\PQ", *(double *)"[jFA\\AV]\\[RjTEEY\\PQ", v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v61 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v61) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AE0220;
  v15[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v66 = xmmword_239F105F6;
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v58[1] = v22;
    v59 = v25 | 0x8000000000000000;
    v58[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v59) = v21;
  v23 = v58;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AE0670;
  v26[1] = v4 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v58, (uint64_t)v26);
  strcpy(v65, "0CDYDSXY^WoCUW]U^DoYToQ^ToDI@UC");
  sub_2396F06F0((uint64_t)v65, *(int32x4_t *)"0CDYDSXY^WoCUW]U^DoYToQ^ToDI@UC", *(int8x16_t *)"^DoYToQ^ToDI@UC", v27, v28);
  v30 = v29;
  v31 = strlen(v29);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v56[1] = v32;
    v57 = v35 | 0x8000000000000000;
    v56[0] = v33;
    goto LABEL_24;
  }
  HIBYTE(v57) = v31;
  v33 = v56;
  if (v31)
LABEL_24:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250AF3F20;
  v36[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v56, (uint64_t)v36);
  strcpy(v64, "2\\G_mF@SQYAmT]@mAWU_W\\FmAF[FQZ[\\U");
  sub_2396F0120((unsigned __int8 *)v64, *(int16x8_t *)"2\\G_mF@SQYAmT]@mAWU_W\\FmAF[FQZ[\\U", *(double *)"AWU_W\\FmAF[FQZ[\\U", v37, v38, v39);
  v41 = v40;
  v42 = strlen(v40);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v54[1] = v43;
    v55 = v46 | 0x8000000000000000;
    v54[0] = v44;
    goto LABEL_32;
  }
  HIBYTE(v55) = v42;
  v44 = v54;
  if (v42)
LABEL_32:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250AF3F50;
  v47[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v54, (uint64_t)v47);
  if (SHIBYTE(v55) < 0)
  {
    operator delete(v54[0]);
    if ((SHIBYTE(v57) & 0x80000000) == 0)
    {
LABEL_35:
      if ((SHIBYTE(v59) & 0x80000000) == 0)
        goto LABEL_36;
LABEL_51:
      operator delete(v58[0]);
      if ((SHIBYTE(v61) & 0x80000000) == 0)
        goto LABEL_37;
      goto LABEL_52;
    }
  }
  else if ((SHIBYTE(v57) & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(v56[0]);
  if (SHIBYTE(v59) < 0)
    goto LABEL_51;
LABEL_36:
  if ((SHIBYTE(v61) & 0x80000000) == 0)
    goto LABEL_37;
LABEL_52:
  operator delete(__dst[0]);
LABEL_37:
  sub_23959479C((uint64_t)__p, a2);
  v48 = v63;
  if (v63)
  {
    do
    {
      v49 = v48[5];
      if (v49)
        (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
      v48 = (_QWORD *)*v48;
    }
    while (v48);
    v50 = (void **)v63;
    if (v63)
    {
      do
      {
        v53 = (void **)*v50;
        if (*((char *)v50 + 39) < 0)
          operator delete(v50[2]);
        operator delete(v50);
        v50 = v53;
      }
      while (v53);
    }
  }
  v51 = __p[0];
  __p[0] = 0;
  if (v51)
    operator delete(v51);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AAD32C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,_QWORD *__p)
{
  _QWORD *v36;
  uint64_t v37;
  void **v38;
  void **v39;

  v36 = __p;
  if (__p)
  {
    do
    {
      v37 = v36[5];
      if (v37)
        (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
      v36 = (_QWORD *)*v36;
    }
    while (v36);
    v38 = (void **)__p;
    do
    {
      v39 = (void **)*v38;
      if (*((char *)v38 + 39) < 0)
        operator delete(v38[2]);
      operator delete(v38);
      v38 = v39;
    }
    while (v39);
  }
  if (!a33)
    _Unwind_Resume(exception_object);
  operator delete(a33);
  _Unwind_Resume(exception_object);
}

void sub_239AAD470(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AAD494(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AADEF4((uint64_t)&v5, (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AAD4E0(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t *v3;
  int v4;
  int v6;
  int v7;
  int i;
  _QWORD *exception;
  uint64_t v10;

  v3 = a2;
  v10 = *(_QWORD *)(a1 + 8);
  if (!a3)
    goto LABEL_4;
  v4 = std::istream::peek();
  if ((v4 & 0xFFFFFFFE) == 0xDE)
  {
    a2 = v3;
    a3 = 1;
LABEL_4:
    sub_239AAD5EC(&v10, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  v6 = v4;
  std::istream::get();
  if (v6 == 221)
  {
    v7 = sub_2396162D4((uint64_t)v3, 221);
    if (*(_DWORD *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 32))
    {
      exception = __cxa_allocate_exception(8uLL);
      *exception = MEMORY[0x24BEDB8F0] + 16;
      __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
    }
    for (i = v7; i; --i)
      sub_239AAD5EC(&v10, v3, 1);
  }
  else
  {
    sub_2396163F8(v3, v6);
  }
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AAD5EC(uint64_t *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t *v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::string *v29;
  std::string::size_type size;
  char i;
  unsigned int v32;
  int v33;
  int v34;
  uint64_t v35;
  int j;
  unsigned int v37;
  int v38;
  uint64_t v39;
  uint64_t v41;
  int v42;
  uint64_t *v43;
  std::string v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  void *__p;
  char v49;
  _BYTE v50[160];

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      v6 = 1;
    else
      v6 = v5 == 0;
    if (!v6)
    {
      v7 = *MEMORY[0x24BEDB7F0];
      v8 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v9 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v10 = v5 - 1;
      v11 = MEMORY[0x24BEDB848] + 16;
      do
      {
        v12 = v10;
        memset(&v44, 0, sizeof(v44));
        v13 = std::istream::get();
        v14 = sub_2396162D4((uint64_t)a2, v13);
        if (v14)
        {
          std::string::resize(&v44, v14, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        {
          *v44.__r_.__value_.__l.__data_ = 0;
          v44.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v44.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v44.__r_.__value_.__s + 23) = 0;
        }
        LODWORD(v41) = 0;
        sub_239593804((uint64_t)v45, (uint64_t)&v44, 24);
        MEMORY[0x23B83DD04](v45, &v41);
        v43 = 0;
        sub_2395A9F0C((uint64_t)&v43, (uint64_t)a2, 1);
        v15 = v43;
        sub_239AADC18(*a1, v41, &v41)[3] = v15;
        v16 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        v45[0] = v7;
        *(_QWORD *)((char *)v45 + *(_QWORD *)(v7 - 24)) = v8;
        v46 = v9;
        v47 = v11;
        if (v49 < 0)
          operator delete(__p);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v50);
        if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v44.__r_.__value_.__l.__data_);
        if (v16)
          break;
        v10 = v12 - 1;
      }
      while (v12);
    }
  }
  else
  {
    v17 = a2 + 4;
    v18 = MEMORY[0x24BDAC740];
    while (1)
    {
      v19 = std::istream::peek();
      v20 = v19 <= 0x7F ? *(_DWORD *)(v18 + 4 * v19 + 60) & 0x4000 : __maskrune(v19, 0x4000uLL);
      v21 = *(_QWORD *)(*a2 - 24);
      if (!v20)
        break;
      if (!*(_DWORD *)((char *)v17 + v21))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v21 + 32) & 2) == 0)
    {
      v42 = 0;
      memset(&v44, 0, sizeof(v44));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v22 = std::istream::peek();
          v23 = v22 <= 0x7F ? *(_DWORD *)(v18 + 4 * v22 + 60) & 0x4000 : __maskrune(v22, 0x4000uLL);
          v24 = *(_QWORD *)(*a2 - 24);
          if (!v23)
            break;
          if (!*(_DWORD *)((char *)v17 + v24))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v24 + 32) & 2) == 0)
        {
          v25 = std::istream::peek() == 125;
          v26 = *MEMORY[0x24BEDB7F0];
          v27 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          v28 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          v39 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v17 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v25)
          {
            if (!sub_239595A48((uint64_t)&v44, a2))
              goto LABEL_80;
            sub_2394988CC((uint64_t)v45);
            if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v29 = &v44;
            else
              v29 = (std::string *)v44.__r_.__value_.__r.__words[0];
            if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              size = HIBYTE(v44.__r_.__value_.__r.__words[2]);
            else
              size = v44.__r_.__value_.__l.__size_;
            sub_239458500(&v46, (uint64_t)v29, size);
            MEMORY[0x23B83DD04](v45, &v42);
            v45[0] = v26;
            *(_QWORD *)((char *)v45 + *(_QWORD *)(v26 - 24)) = v27;
            v46 = v28;
            v47 = v39;
            if (v49 < 0)
              operator delete(__p);
            std::streambuf::~streambuf();
            std::iostream::~basic_iostream();
            MEMORY[0x23B83E250](v50);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v17 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v17 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_80;
LABEL_53:
            std::istream::get();
            while (1)
            {
              v32 = std::istream::peek();
              v33 = v32 <= 0x7F ? *(_DWORD *)(v18 + 4 * v32 + 60) & 0x4000 : __maskrune(v32, 0x4000uLL);
              v34 = *(_DWORD *)((char *)v17 + *(_QWORD *)(*a2 - 24));
              if (!v33)
                break;
              if (!v34)
                goto LABEL_53;
            }
            if ((v34 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v45);
              v43 = &v46;
              if (sub_239596128(a2))
              {
                v41 = 0;
                MEMORY[0x23B83DD1C](v45, &v41);
                v35 = v41;
                sub_239AADC18(*a1, v42, &v42)[3] = v35;
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v37 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_72;
                  if (v37 == 2097152000)
                    break;
                  if (v37 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v18 + 4 * (char)j + 60) & 0x4000) == 0)
                      goto LABEL_71;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    goto LABEL_71;
                  }
                  if ((*((_BYTE *)v17 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                  {
LABEL_71:
                    if (v37 != 738197504)
                      goto LABEL_73;
LABEL_72:
                    std::istream::get();
                    v25 = 0;
                    goto LABEL_75;
                  }
                  std::istream::get();
                }
                v25 = 1;
LABEL_75:
                v38 = 0;
              }
              else
              {
LABEL_73:
                v25 = 0;
                v38 = 1;
              }
              v45[0] = v26;
              *(_QWORD *)((char *)v45 + *(_QWORD *)(v26 - 24)) = v27;
              v46 = v28;
              v47 = MEMORY[0x24BEDB848] + 16;
              if (v49 < 0)
                operator delete(__p);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v50);
              if (!v38)
                continue;
            }
            goto LABEL_80;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_80:
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v44.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239AADBBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AADC18(uint64_t a1, int a2, _DWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t prime;
  unint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v6 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == a2)
            {
              if (*((_DWORD *)v10 + 4) == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == a2)
          {
            if (*((_DWORD *)v10 + 4) == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v10 = operator new(0x20uLL);
  *v10 = 0;
  v10[1] = v6;
  *((_DWORD *)v10 + 4) = *a3;
  v10[3] = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v7 || (float)(v14 * (float)v7) < v13)
  {
    v15 = 1;
    if (v7 >= 3)
      v15 = (v7 & (v7 - 1)) != 0;
    v16 = v15 | (2 * v7);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      prime = v17;
    else
      prime = v16;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_34;
    if (prime < v7)
    {
      v19 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v20 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
      {
        v19 = std::__next_prime(v19);
      }
      else
      {
        v21 = 1 << -(char)__clz(v19 - 1);
        if (v19 >= 2)
          v19 = v21;
      }
      if (prime <= v19)
        prime = v19;
      if (prime < v7)
LABEL_34:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v23)
  {
    *v10 = *v23;
LABEL_58:
    *v23 = v10;
    goto LABEL_59;
  }
  *v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(v22 + 8 * v3) = a1 + 16;
  if (*v10)
  {
    v24 = *(_QWORD *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v24 >= v7)
        v24 %= v7;
    }
    else
    {
      v24 &= v7 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239AADEE0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239AADEF4(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v5;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    if (*(_QWORD *)(*(_QWORD *)a1 + 24))
    {
      v7 = 0;
      v8 = *(_QWORD **)(*(_QWORD *)a1 + 16);
      do
      {
        if (v8)
        {
          v11 = 0;
          v9 = v8;
          do
          {
            v9 = (_QWORD *)*v9;
            v10 = v11 + 1;
          }
          while (v11++ <= 0x7FFFFFFD && v9 != 0);
        }
        else
        {
          v9 = 0;
          v10 = 0;
        }
        sub_239AAE050(v8, v9, v10, a2, 1);
        v7 += 0x7FFFFFFFLL;
        v8 = v9;
      }
      while (v7 < *(_QWORD *)(*(_QWORD *)a1 + 24));
    }
  }
  else
  {
    sub_239AAE050(*(_QWORD **)(*(_QWORD *)a1 + 16), 0, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239AAE050(_QWORD *a1, _QWORD *a2, unint64_t a3, uint64_t a4, int a5)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *__p;
  int v19;
  unsigned __int8 v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  _DWORD v26[39];
  int v27;

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v26[38] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v9 = *MEMORY[0x24BEDB7F0];
        v16 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v10 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v21);
          std::ostream::operator<<();
          std::stringbuf::str();
          std::ostream::put();
          v11 = v20;
          if ((v20 & 0x80u) != 0)
            v11 = v19;
          v27 = v11;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::put();
          v27 = 8;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if ((char)v20 < 0)
            operator delete(__p);
          v21[0] = v9;
          *(_QWORD *)((char *)v21 + *(_QWORD *)(v9 - 24)) = v17;
          v22 = v16;
          v23 = v10;
          if (v25 < 0)
            operator delete(v24);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v26);
          a1 = (_QWORD *)*a1;
        }
        while (a1 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v12 = *MEMORY[0x24BEDB7F0];
      v14 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v13 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v15 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v21);
        std::ostream::operator<<();
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        std::ostream::operator<<();
        a1 = (_QWORD *)*a1;
        if (a1 != a2)
          std::ostream::put();
        if ((char)v20 < 0)
          operator delete(__p);
        v21[0] = v12;
        *(_QWORD *)((char *)v21 + *(_QWORD *)(v12 - 24)) = v14;
        v22 = v13;
        v23 = v15;
        if (v25 < 0)
          operator delete(v24);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v26);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239AAE40C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_239498ABC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_239AAE458(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AAE47C(uint64_t a1, _QWORD *a2, int a3)
{
  sub_239AAFEA4(*(uint64_t ***)(a1 + 8), (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AAE4B8(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  char **v12;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 8);
  v12 = (char **)v4;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)v4;
  if (!a3)
    goto LABEL_10;
  v5 = std::istream::peek();
  v6 = v5;
  if ((v5 - 196) > 2)
  {
    if ((v5 - 220) > 3 || v5 == 222)
      return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
    a2 = v3;
    a3 = 1;
LABEL_10:
    sub_239AAE768(&v12, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  std::istream::get();
  v7 = (unint64_t)sub_2396162D4((uint64_t)v3, v6) >> 3;
  v8 = (uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 3;
  v9 = v7 >= v8;
  v10 = v7 - v8;
  if (v10 != 0 && v9)
  {
    sub_239AAE5BC(v4, v10);
  }
  else if (!v9)
  {
    *(_QWORD *)(v4 + 8) = *(_QWORD *)v4 + 8 * v7;
  }
  std::istream::read();
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AAE5BC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  size_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v5 = *(char **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = v5;
  if (a2 <= (v4 - (uint64_t)v5) >> 3)
  {
    if (a2)
    {
      bzero(v5, 8 * a2);
      v6 = &v5[8 * a2];
    }
    *(_QWORD *)(a1 + 8) = v6;
  }
  else
  {
    v7 = *(char **)a1;
    v8 = (uint64_t)&v5[-*(_QWORD *)a1];
    v9 = v8 >> 3;
    v10 = (v8 >> 3) + a2;
    if (v10 >> 61)
      sub_2394189F8();
    v11 = v4 - (_QWORD)v7;
    if (v11 >> 2 > v10)
      v10 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      if (v12 >> 61)
        sub_239418A80();
      v13 = operator new(8 * v12);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[8 * v9];
    v15 = 8 * a2;
    v16 = &v13[8 * v12];
    bzero(v14, v15);
    v17 = &v14[v15];
    if (v5 == v7)
    {
      v7 = v5;
    }
    else
    {
      v18 = v5 - v7 - 8;
      if (v18 < 0x58)
        goto LABEL_31;
      if ((unint64_t)(v5 - v13 - v8) < 0x20)
        goto LABEL_31;
      v19 = (v18 >> 3) + 1;
      v6 = &v5[-8 * (v19 & 0x3FFFFFFFFFFFFFFCLL)];
      v20 = &v13[8 * v9 - 16];
      v21 = v5 - 16;
      v22 = v19 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v23 = *(_OWORD *)v21;
        *(v20 - 1) = *((_OWORD *)v21 - 1);
        *v20 = v23;
        v20 -= 2;
        v21 -= 32;
        v22 -= 4;
      }
      while (v22);
      v14 -= 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
      if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_31:
        do
        {
          v24 = *((_QWORD *)v6 - 1);
          v6 -= 8;
          *((_QWORD *)v14 - 1) = v24;
          v14 -= 8;
        }
        while (v6 != v7);
        v7 = *(char **)a1;
      }
    }
    *(_QWORD *)a1 = v14;
    *(_QWORD *)(a1 + 8) = v17;
    *(_QWORD *)(a1 + 16) = v16;
    if (v7)
      operator delete(v7);
  }
}

BOOL sub_239AAE768(char ***a1, _QWORD *a2, int a3)
{
  int v4;
  unsigned int v5;
  std::string *v6;
  unint64_t v7;
  char *v8;
  char **v9;
  unint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t data_low;
  unint64_t **v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _BYTE *v49;
  unint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  unint64_t *v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  _BOOL8 result;
  char v59;
  std::string *v60;
  unsigned int v61;
  int v62;
  int v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char **v67;
  unint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  _BYTE *v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  char *v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  int i;
  unsigned int v89;
  char v90;
  unsigned int v91;
  int v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char **v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  std::string *v104;
  std::string *v105;
  _QWORD v106[11];
  char v107;
  uint64_t v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  std::string v112;
  uint64_t v113;
  uint64_t v114;

  v114 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v4 = std::istream::get();
    if ((v4 - 196) <= 2)
    {
      v5 = sub_2396162D4((uint64_t)a2, v4);
      v104 = 0;
      v105 = 0;
      v106[0] = 0;
      sub_239AAE5BC((uint64_t)&v104, v5);
      std::istream::read();
      v6 = v105;
      if (v105 != v104)
      {
        v7 = 0;
        v6 = v104;
        do
        {
          v9 = *a1;
          v11 = (*a1)[1];
          v10 = (unint64_t)(*a1)[2];
          if ((unint64_t)v11 < v10)
          {
            *(_QWORD *)v11 = *((_QWORD *)&v6->__r_.__value_.__l.__data_ + v7);
            v8 = v11 + 8;
          }
          else
          {
            v12 = *v9;
            v13 = v11 - *v9;
            v14 = v13 >> 3;
            v15 = (v13 >> 3) + 1;
            if (v15 >> 61)
              sub_2394189F8();
            v16 = v10 - (_QWORD)v12;
            if (v16 >> 2 > v15)
              v15 = v16 >> 2;
            if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8)
              v17 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v17 = v15;
            if (v17)
            {
              if (v17 >> 61)
                sub_239418A80();
              v18 = operator new(8 * v17);
            }
            else
            {
              v18 = 0;
            }
            v19 = &v18[8 * v14];
            *(_QWORD *)v19 = *((_QWORD *)&v6->__r_.__value_.__l.__data_ + v7);
            v8 = v19 + 8;
            if (v11 != v12)
            {
              v20 = v11 - 8 - v12;
              if (v20 < 0x58)
                goto LABEL_149;
              if ((unint64_t)(v11 - &v18[v13]) < 0x20)
                goto LABEL_149;
              v21 = (v20 >> 3) + 1;
              v22 = &v18[8 * v14 - 16];
              v23 = v11 - 16;
              v24 = v21 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v25 = *(_OWORD *)v23;
                *(v22 - 1) = *((_OWORD *)v23 - 1);
                *v22 = v25;
                v22 -= 2;
                v23 -= 32;
                v24 -= 4;
              }
              while (v24);
              v19 -= 8 * (v21 & 0x3FFFFFFFFFFFFFFCLL);
              v11 -= 8 * (v21 & 0x3FFFFFFFFFFFFFFCLL);
              if (v21 != (v21 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_149:
                do
                {
                  v26 = *((_QWORD *)v11 - 1);
                  v11 -= 8;
                  *((_QWORD *)v19 - 1) = v26;
                  v19 -= 8;
                }
                while (v11 != v12);
              }
              v11 = *v9;
            }
            *v9 = v19;
            v9[1] = v8;
            v9[2] = &v18[8 * v17];
            if (v11)
              operator delete(v11);
          }
          v9[1] = v8;
          ++v7;
          v6 = v104;
        }
        while (v7 < ((char *)v105 - (char *)v104) >> 3);
      }
      if (v6)
      {
        v105 = v6;
        operator delete(v6);
      }
      return 1;
    }
    if ((v4 & 0xFFFFFFFE) == 0xDC)
    {
      v35 = sub_2396162D4((uint64_t)a2, v4);
      if (v35)
      {
        v36 = 0;
        v102 = v35;
        do
        {
          v104 = &v112;
          v105 = 0;
          sub_239AAF474((uint64_t *)&v104, a2, 1);
          data_low = LODWORD(v112.__r_.__value_.__l.__data_);
          v38 = HIDWORD(v112.__r_.__value_.__r.__words[0]);
          v40 = (unint64_t **)*a1;
          v42 = (unint64_t *)(*a1)[1];
          v41 = (unint64_t)(*a1)[2];
          if ((unint64_t)v42 < v41)
          {
            *v42 = LODWORD(v112.__r_.__value_.__l.__data_) | ((unint64_t)HIDWORD(v112.__r_.__value_.__r.__words[0]) << 32);
            v37 = v42 + 1;
          }
          else
          {
            v43 = *v40;
            v44 = (char *)v42 - (char *)*v40;
            v45 = v44 >> 3;
            v46 = (v44 >> 3) + 1;
            if (v46 >> 61)
              sub_2394189F8();
            v47 = v41 - (_QWORD)v43;
            if (v47 >> 2 > v46)
              v46 = v47 >> 2;
            if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8)
              v48 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v48 = v46;
            if (v48)
            {
              if (v48 >> 61)
                sub_239418A80();
              v49 = operator new(8 * v48);
            }
            else
            {
              v49 = 0;
            }
            v50 = (unint64_t *)&v49[8 * v45];
            *v50 = data_low | (v38 << 32);
            v37 = v50 + 1;
            if (v42 != v43)
            {
              v51 = (char *)(v42 - 1) - (char *)v43;
              if (v51 < 0x58)
                goto LABEL_150;
              if ((unint64_t)((char *)v42 - &v49[v44]) < 0x20)
                goto LABEL_150;
              v52 = (v51 >> 3) + 1;
              v53 = &v49[8 * v45 - 16];
              v54 = v42 - 2;
              v55 = v52 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v56 = *(_OWORD *)v54;
                *(v53 - 1) = *((_OWORD *)v54 - 1);
                *v53 = v56;
                v53 -= 2;
                v54 -= 4;
                v55 -= 4;
              }
              while (v55);
              v50 -= v52 & 0x3FFFFFFFFFFFFFFCLL;
              v42 -= v52 & 0x3FFFFFFFFFFFFFFCLL;
              if (v52 != (v52 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_150:
                do
                {
                  v57 = *--v42;
                  *--v50 = v57;
                }
                while (v42 != v43);
              }
              v42 = *v40;
            }
            *v40 = v50;
            v40[1] = v37;
            v40[2] = (unint64_t *)&v49[8 * v48];
            if (v42)
              operator delete(v42);
          }
          v40[1] = v37;
          ++v36;
        }
        while (v36 != v102);
      }
      return 1;
    }
    if (v4 == 223)
    {
      v111 = 0;
      memset(&v112, 0, sizeof(v112));
      std::istream::read();
      std::istream::read();
      std::istream::read();
      std::istream::read();
    }
    return 0;
  }
  v27 = a2 + 4;
  v28 = MEMORY[0x24BDAC740];
  while (1)
  {
    v29 = std::istream::peek();
    v30 = v29 <= 0x7F ? *(_DWORD *)(v28 + 4 * v29 + 60) & 0x4000 : __maskrune(v29, 0x4000uLL);
    v31 = *(_QWORD *)(*a2 - 24);
    if (!v30)
      break;
    if (!*(_DWORD *)((char *)v27 + v31))
      std::istream::get();
  }
  if ((*((_BYTE *)a2 + v31 + 32) & 2) != 0)
    return 1;
  if (std::istream::get() != 91)
    return 0;
  while (1)
  {
    v32 = std::istream::peek();
    v33 = v32 <= 0x7F ? *(_DWORD *)(v28 + 4 * v32 + 60) & 0x4000 : __maskrune(v32, 0x4000uLL);
    v34 = *(_QWORD *)(*a2 - 24);
    if (!v33)
      break;
    if (!*(_DWORD *)((char *)v27 + v34))
      std::istream::get();
  }
  if ((*((_BYTE *)a2 + v34 + 32) & 2) != 0)
    return 0;
  v59 = 0;
  v60 = (std::string *)*MEMORY[0x24BEDB7F0];
  v100 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  v101 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v99 = MEMORY[0x24BEDB848] + 16;
  while ((*((_BYTE *)v27 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && (v59 & 1) == 0)
  {
    while (1)
    {
      v61 = std::istream::peek();
      v62 = v61 <= 0x7F ? *(_DWORD *)(v28 + 4 * v61 + 60) & 0x4000 : __maskrune(v61, 0x4000uLL);
      v63 = *(_DWORD *)((char *)v27 + *(_QWORD *)(*a2 - 24));
      if (!v62)
        break;
      if (!v63)
        std::istream::get();
    }
    if ((v63 & 2) != 0)
      return 0;
    sub_2394988CC((uint64_t)&v104);
    if (sub_239596128(a2))
    {
      v64 = (char *)v106 + *(_QWORD *)(v106[0] - 24);
      if ((v64[32] & 5) == 0)
      {
        (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v64 + 5)
                                                                                            + 32))(&v112, *((_QWORD *)v64 + 5), 0, 1, 16);
        if (v113 >= 1)
        {
          v112.__r_.__value_.__r.__words[0] = (std::string::size_type)&v109;
          v112.__r_.__value_.__l.__size_ = 0;
          sub_239AAF474((uint64_t *)&v112, &v104, 0);
          v65 = v109;
          v66 = v110;
          v67 = *a1;
          v69 = (*a1)[1];
          v68 = (unint64_t)(*a1)[2];
          if ((unint64_t)v69 < v68)
          {
            *(_QWORD *)v69 = v109 | ((unint64_t)v110 << 32);
            v70 = v69 + 8;
            goto LABEL_111;
          }
          v98 = *a1;
          v71 = *v67;
          v72 = v69 - *v67;
          v73 = v72 >> 3;
          v74 = (v72 >> 3) + 1;
          if (v74 >> 61)
            sub_2394189F8();
          v75 = v68 - (_QWORD)v71;
          if (v75 >> 2 > v74)
            v74 = v75 >> 2;
          if ((unint64_t)v75 >= 0x7FFFFFFFFFFFFFF8)
            v76 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v76 = v74;
          if (v76)
          {
            v94 = (char *)(v69 - *v67);
            v95 = v110;
            v96 = v109;
            v97 = v72 >> 3;
            if (v76 >> 61)
              sub_239418A80();
            v77 = v76;
            v78 = operator new(8 * v76);
            v76 = v77;
            v65 = v96;
            v73 = v97;
            v72 = (uint64_t)v94;
            v66 = v95;
          }
          else
          {
            v78 = 0;
          }
          v79 = &v78[8 * v73];
          *(_QWORD *)v79 = v65 | (v66 << 32);
          v70 = v79 + 8;
          if (v69 == v71)
          {
            v67 = v98;
          }
          else
          {
            v80 = v69 - 8 - v71;
            if (v80 < 0x58)
            {
              v67 = v98;
              goto LABEL_107;
            }
            v67 = v98;
            if ((unint64_t)(v69 - &v78[v72]) < 0x20)
              goto LABEL_151;
            v81 = (v80 >> 3) + 1;
            v82 = &v78[8 * v73 - 16];
            v83 = v69 - 16;
            v84 = v81 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v85 = *(_OWORD *)v83;
              *(v82 - 1) = *((_OWORD *)v83 - 1);
              *v82 = v85;
              v82 -= 2;
              v83 -= 32;
              v84 -= 4;
            }
            while (v84);
            v79 -= 8 * (v81 & 0x3FFFFFFFFFFFFFFCLL);
            v69 -= 8 * (v81 & 0x3FFFFFFFFFFFFFFCLL);
            if (v81 != (v81 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_151:
              do
              {
LABEL_107:
                v86 = *((_QWORD *)v69 - 1);
                v69 -= 8;
                *((_QWORD *)v79 - 1) = v86;
                v79 -= 8;
              }
              while (v69 != v71);
            }
            v69 = *v67;
          }
          *v67 = v79;
          v67[1] = v70;
          v67[2] = &v78[8 * v76];
          if (v69)
          {
            v87 = v70;
            operator delete(v69);
            v70 = v87;
          }
LABEL_111:
          v67[1] = v70;
        }
      }
      for (i = std::istream::peek(); ; i = std::istream::peek())
      {
        v89 = i << 24;
        if (i << 24 == 738197504)
          goto LABEL_122;
        if (v89 == 1560281088)
          break;
        if (v89 <= 0x7F000000)
        {
          if ((*(_DWORD *)(v28 + 4 * (char)i + 60) & 0x4000) == 0)
            goto LABEL_121;
        }
        else if (!__maskrune((char)i, 0x4000uLL))
        {
          goto LABEL_121;
        }
        if ((*((_BYTE *)v27 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
        {
LABEL_121:
          if (v89 != 738197504)
            goto LABEL_123;
LABEL_122:
          std::istream::get();
          v59 = 0;
          goto LABEL_125;
        }
        std::istream::get();
      }
      v59 = 1;
LABEL_125:
      v90 = 1;
      goto LABEL_126;
    }
LABEL_123:
    v90 = 0;
    v59 = 0;
LABEL_126:
    v104 = v60;
    *(std::string **)((char *)&v104 + v60[-1].__r_.__value_.__r.__words[0]) = (std::string *)v101;
    v106[0] = v100;
    v106[1] = v99;
    if (v107 < 0)
      operator delete((void *)v106[9]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x23B83E250](&v108);
    result = 0;
    if ((v90 & 1) == 0)
      return result;
  }
  while (1)
  {
    v91 = std::istream::peek();
    v92 = v91 <= 0x7F ? *(_DWORD *)(v28 + 4 * v91 + 60) & 0x4000 : __maskrune(v91, 0x4000uLL);
    v93 = *(_QWORD *)(*a2 - 24);
    if (!v92)
      break;
    if (!*(_DWORD *)((char *)v27 + v93))
      std::istream::get();
  }
  return (*((_BYTE *)a2 + v93 + 32) & 2) == 0 && std::istream::get() == 93;
}

void sub_239AAF3E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *__p,uint64_t a59)
{
  uint64_t v59;

  if (*(char *)(v59 - 209) < 0)
  {
    operator delete(*(void **)(v59 - 232));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239AAF474(uint64_t *a1, _QWORD *a2, int a3)
{
  int v5;
  unsigned int v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _BYTE *v24;
  unsigned int v25;
  int v26;
  int v27;
  char *v28;
  unint64_t v29;
  int i;
  unsigned int v31;
  char v32;
  unsigned int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _QWORD v41[11];
  char v42;
  uint64_t v43;
  void *v44;
  std::string v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v5 = std::istream::get();
    if ((v5 - 196) > 2)
    {
      if ((v5 & 0xFFFFFFFE) == 0xDC)
      {
        v20 = sub_2396162D4((uint64_t)a2, v5);
        if (v20)
        {
          v21 = v20;
          do
          {
            LODWORD(v39) = 0;
            sub_239596F74((uint64_t)&v39, (uint64_t)a2, 1);
            v22 = a1[1];
            if (v22 <= 1)
              *(_DWORD *)(*a1 + 4 * v22) = (_DWORD)v39;
            a1[1] = v22 + 1;
            --v21;
          }
          while (v21);
        }
      }
      else if (v5 == 223)
      {
        std::istream::read();
        std::istream::read();
        std::istream::read();
        std::istream::read();
      }
    }
    else
    {
      v6 = sub_2396162D4((uint64_t)a2, v5);
      v39 = 0;
      v40 = 0;
      v41[0] = 0;
      sub_23942CB44((uint64_t)&v39, v6);
      std::istream::read();
      v7 = v39;
      if (v40 != v39)
      {
        v8 = (v40 - v39) >> 2;
        v9 = *a1;
        v10 = a1[1];
        if (v8 <= 1)
          v8 = 1;
        v11 = v39;
        do
        {
          if (v10 <= 1)
            *(_DWORD *)(v9 + 4 * v10) = *v11;
          ++v10;
          ++v11;
          --v8;
        }
        while (v8);
        a1[1] = v10;
      }
      if (v7)
      {
        v40 = v7;
        operator delete(v7);
      }
    }
  }
  else
  {
    v12 = a2 + 4;
    v13 = MEMORY[0x24BDAC740];
    while (1)
    {
      v14 = std::istream::peek();
      v15 = v14 <= 0x7F ? *(_DWORD *)(v13 + 4 * v14 + 60) & 0x4000 : __maskrune(v14, 0x4000uLL);
      v16 = *(_QWORD *)(*a2 - 24);
      if (!v15)
        break;
      if (!*(_DWORD *)((char *)v12 + v16))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v16 + 32) & 2) == 0 && std::istream::get() == 91)
    {
      while (1)
      {
        v17 = std::istream::peek();
        v18 = v17 <= 0x7F ? *(_DWORD *)(v13 + 4 * v17 + 60) & 0x4000 : __maskrune(v17, 0x4000uLL);
        v19 = *(_QWORD *)(*a2 - 24);
        if (!v18)
          break;
        if (!*(_DWORD *)((char *)v12 + v19))
          std::istream::get();
      }
      if ((*((_BYTE *)a2 + v19 + 32) & 2) == 0)
      {
        v23 = 0;
        v24 = (_BYTE *)*MEMORY[0x24BEDB7F0];
        v37 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v38 = *(_BYTE **)(MEMORY[0x24BEDB7F0] + 64);
        v36 = MEMORY[0x24BEDB848] + 16;
        while ((*((_BYTE *)v12 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && (v23 & 1) == 0)
        {
          while (1)
          {
            v25 = std::istream::peek();
            v26 = v25 <= 0x7F ? *(_DWORD *)(v13 + 4 * v25 + 60) & 0x4000 : __maskrune(v25, 0x4000uLL);
            v27 = *(_DWORD *)((char *)v12 + *(_QWORD *)(*a2 - 24));
            if (!v26)
              break;
            if (!v27)
              std::istream::get();
          }
          if ((v27 & 2) == 0)
          {
            sub_2394988CC((uint64_t)&v39);
            v44 = v41;
            if (sub_239596128(a2))
            {
              v28 = (char *)v41 + *(_QWORD *)(v41[0] - 24);
              if ((v28[32] & 5) == 0)
              {
                (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v28 + 5) + 32))(&v45, *((_QWORD *)v28 + 5), 0, 1, 16);
                if (v46 >= 1)
                {
                  LODWORD(v45.__r_.__value_.__l.__data_) = 0;
                  MEMORY[0x23B83DD04](&v39, &v45);
                  v29 = a1[1];
                  if (v29 <= 1)
                    *(_DWORD *)(*a1 + 4 * v29) = v45.__r_.__value_.__l.__data_;
                  a1[1] = v29 + 1;
                }
              }
              for (i = std::istream::peek(); ; i = std::istream::peek())
              {
                v31 = i << 24;
                if (i << 24 == 738197504)
                  goto LABEL_62;
                if (v31 == 1560281088)
                  break;
                if (v31 <= 0x7F000000)
                {
                  if ((*(_DWORD *)(v13 + 4 * (char)i + 60) & 0x4000) == 0)
                    goto LABEL_61;
                }
                else if (!__maskrune((char)i, 0x4000uLL))
                {
                  goto LABEL_61;
                }
                if ((*((_BYTE *)v12 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                {
LABEL_61:
                  if (v31 != 738197504)
                    goto LABEL_63;
LABEL_62:
                  std::istream::get();
                  v23 = 0;
                  goto LABEL_65;
                }
                std::istream::get();
              }
              v23 = 1;
LABEL_65:
              v32 = 1;
            }
            else
            {
LABEL_63:
              v32 = 0;
              v23 = 0;
            }
            v39 = v24;
            *(_BYTE **)((char *)&v39 + *((_QWORD *)v24 - 3)) = v38;
            v41[0] = v37;
            v41[1] = v36;
            if (v42 < 0)
              operator delete((void *)v41[9]);
            std::streambuf::~streambuf();
            std::iostream::~basic_iostream();
            MEMORY[0x23B83E250](&v43);
            if ((v32 & 1) != 0)
              continue;
          }
          return;
        }
        while (1)
        {
          v33 = std::istream::peek();
          v34 = v33 <= 0x7F ? *(_DWORD *)(v13 + 4 * v33 + 60) & 0x4000 : __maskrune(v33, 0x4000uLL);
          v35 = *(_QWORD *)(*a2 - 24);
          if (!v34)
            break;
          if (!*(_DWORD *)((char *)v12 + v35))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v35 + 32) & 2) == 0)
          std::istream::get();
      }
    }
  }
}

void sub_239AAFBAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51)
{
  uint64_t v51;

  if (*(char *)(v51 - 209) < 0)
  {
    operator delete(*(void **)(v51 - 232));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AAFC28(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) && std::istream::get() == 223)
  {
    std::istream::read();
    std::istream::read();
    std::istream::read();
    std::istream::read();
  }
  return 0;
}

void sub_239AAFE84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AAFEA4(uint64_t **a1, uint64_t a2, int a3)
{
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  __int128 __p;
  uint64_t **v17;
  uint64_t v18;
  int v19;
  int v20;
  void *v21[2];
  char v22;
  int v23;
  int v24;

  if (a3)
  {
    v5 = *a1;
    v6 = a1[1];
    v7 = (char *)v6 - (char *)*a1;
    if (v7 < 0x7FFFFFFF9)
    {
      sub_239AB06AC(v5, v6, a2, v7 >> 3);
    }
    else
    {
      std::ostream::put();
      v8 = a1[1] - *a1;
      if (0x7FFFFFFF * (unint64_t)(v8 / 0x7FFFFFFF) >= v8)
        v9 = v8 / 0x7FFFFFFF;
      else
        v9 = v8 / 0x7FFFFFFF + 1;
      v19 = 2;
      v20 = v9;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)&__p, "type");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)&__p, "vector_chunks");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      HIBYTE(v17) = 7;
      strcpy((char *)&__p, "content");
      std::ostream::put();
      LODWORD(v21[0]) = 7;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      v10 = (char *)a1[1] - (char *)*a1;
      if (v10)
      {
        v11 = 0;
        v12 = v10 >> 3;
        do
        {
          v17 = a1;
          v18 = 0;
          *(_QWORD *)&__p = v11;
          v11 += 0x7FFFFFFFLL;
          if (v12 >= v11)
            v12 = v11;
          *((_QWORD *)&__p + 1) = v12;
          std::ostream::put();
          v23 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v22 = 5;
          strcpy((char *)v21, "start");
          std::ostream::put();
          v24 = 5;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v22 < 0)
            operator delete(v21[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v22 = 3;
          LODWORD(v21[0]) = 6581861;
          std::ostream::put();
          v24 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v22 < 0)
            operator delete(v21[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v22 = 7;
          strcpy((char *)v21, "content");
          std::ostream::put();
          v24 = 7;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v22 < 0)
            operator delete(v21[0]);
          sub_239AB06AC(&(*a1)[__p], &(*a1)[*((_QWORD *)&__p + 1)], a2, *((_QWORD *)&__p + 1) - __p);
          v12 = a1[1] - *a1;
        }
        while (v11 < v12);
      }
    }
  }
  else
  {
    v13 = *a1;
    v14 = a1[1];
    std::ostream::put();
    if (v13 != v14)
    {
      while (1)
      {
        ++v13;
        std::ostream::put();
        std::ostream::operator<<();
        std::ostream::put();
        std::ostream::operator<<();
        std::ostream::put();
        if (v13 == v14)
          break;
        std::ostream::put();
      }
    }
    std::ostream::put();
  }
  return a2;
}

void sub_239AB066C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AB06AC(uint64_t *a1, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *exception;
  uint64_t v11;
  uint64_t v12;

  std::ostream::put();
  if (HIDWORD(a4))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = MEMORY[0x24BEDB8F0] + 16;
    __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
  }
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  for (result = std::ostream::write(); a1 != a2; result = sub_2395AE748((uint64_t)&v11, (uint64_t)&v12, a3, 2uLL))
  {
    v9 = *a1++;
    v11 = v9;
  }
  return result;
}

_QWORD *sub_239AB07A0(uint64_t a1, _QWORD *a2, char a3)
{
  double v5;
  double v6;
  int16x8_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  double v16;
  double v17;
  int16x8_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  double v27;
  int32x4_t v28;
  const char *v29;
  const char *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  double v37;
  double v38;
  int16x8_t v39;
  const char *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  void **v50;
  void *v51;
  void **v53;
  void *v54[2];
  unint64_t v55;
  void *v56[2];
  unint64_t v57;
  void *v58[2];
  unint64_t v59;
  void *__dst[2];
  unint64_t v61;
  void *__p[2];
  void *v63;
  char v64[48];
  _OWORD v65[2];
  _OWORD v66[2];
  __int16 v67;
  _OWORD v68[2];
  int v69;
  uint64_t v70;

  v70 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v68[0] = xmmword_239F102D6;
  v68[1] = *(_OWORD *)dbl_239F102E6;
  v69 = 1644564;
  sub_2396F01D4((unsigned __int8 *)v68, (int16x8_t)xmmword_239F102D6, dbl_239F102E6[0], v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v61 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v61) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFEA8;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v66[0] = xmmword_239F102FA;
  v66[1] = *(_OWORD *)dbl_239F1030A;
  v67 = 125;
  sub_2396F0120((unsigned __int8 *)v66, (int16x8_t)xmmword_239F102FA, dbl_239F1030A[0], v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v58[1] = v22;
    v59 = v25 | 0x8000000000000000;
    v58[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v59) = v21;
  v23 = v58;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AE0580;
  v26[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v58, (uint64_t)v26);
  v65[0] = xmmword_239F1031C;
  v65[1] = xmmword_239F1032C;
  sub_2396F06F0((uint64_t)v65, (int32x4_t)xmmword_239F1031C, xmmword_239F1032C, v27, v28);
  v30 = v29;
  v31 = strlen(v29);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v56[1] = v32;
    v57 = v35 | 0x8000000000000000;
    v56[0] = v33;
    goto LABEL_24;
  }
  HIBYTE(v57) = v31;
  v33 = v56;
  if (v31)
LABEL_24:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250AF3DD0;
  v36[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v56, (uint64_t)v36);
  strcpy(v64, "3]F^lGARPX@lU\\Al@VT^V]Gl@GZGP[Z]T");
  sub_2396F0120((unsigned __int8 *)v64, *(int16x8_t *)"3]F^lGARPX@lU\\Al@VT^V]Gl@GZGP[Z]T", *(double *)"@VT^V]Gl@GZGP[Z]T", v37, v38, v39);
  v41 = v40;
  v42 = strlen(v40);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v54[1] = v43;
    v55 = v46 | 0x8000000000000000;
    v54[0] = v44;
    goto LABEL_32;
  }
  HIBYTE(v55) = v42;
  v44 = v54;
  if (v42)
LABEL_32:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250AF3E00;
  v47[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v54, (uint64_t)v47);
  if (SHIBYTE(v55) < 0)
  {
    operator delete(v54[0]);
    if ((SHIBYTE(v57) & 0x80000000) == 0)
    {
LABEL_35:
      if ((SHIBYTE(v59) & 0x80000000) == 0)
        goto LABEL_36;
LABEL_51:
      operator delete(v58[0]);
      if ((SHIBYTE(v61) & 0x80000000) == 0)
        goto LABEL_37;
      goto LABEL_52;
    }
  }
  else if ((SHIBYTE(v57) & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(v56[0]);
  if (SHIBYTE(v59) < 0)
    goto LABEL_51;
LABEL_36:
  if ((SHIBYTE(v61) & 0x80000000) == 0)
    goto LABEL_37;
LABEL_52:
  operator delete(__dst[0]);
LABEL_37:
  sub_2395902F0((uint64_t)__p, a2);
  v48 = v63;
  if (v63)
  {
    do
    {
      v49 = v48[5];
      if (v49)
        (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
      v48 = (_QWORD *)*v48;
    }
    while (v48);
    v50 = (void **)v63;
    if (v63)
    {
      do
      {
        v53 = (void **)*v50;
        if (*((char *)v50 + 39) < 0)
          operator delete(v50[2]);
        operator delete(v50);
        v50 = v53;
      }
      while (v53);
    }
  }
  v51 = __p[0];
  __p[0] = 0;
  if (v51)
    operator delete(v51);
  return a2;
}

void sub_239AB0C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33)
{
  sub_2395905C0((uint64_t)&a33);
  _Unwind_Resume(a1);
}

void sub_239AB0D00(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB0D24(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AADEF4((uint64_t)&v5, (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AB0D70()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AB0DA8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB0DCC(uint64_t a1, _QWORD *a2, int a3)
{
  sub_239AAFEA4(*(uint64_t ***)(a1 + 8), (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AB0E08()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AB0E40(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB0E64(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AB228C((uint64_t)&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AB0EB0(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t *v3;
  int v4;
  int v6;
  int v7;
  int i;
  _QWORD *exception;
  uint64_t v10;

  v3 = a2;
  v10 = *(_QWORD *)(a1 + 8);
  if (!a3)
    goto LABEL_4;
  v4 = std::istream::peek();
  if ((v4 & 0xFFFFFFFE) == 0xDE)
  {
    a2 = v3;
    a3 = 1;
LABEL_4:
    sub_239AB0FBC(&v10, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  v6 = v4;
  std::istream::get();
  if (v6 == 221)
  {
    v7 = sub_2396162D4((uint64_t)v3, 221);
    if (*(_DWORD *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 32))
    {
      exception = __cxa_allocate_exception(8uLL);
      *exception = MEMORY[0x24BEDB8F0] + 16;
      __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
    }
    for (i = v7; i; --i)
      sub_239AB0FBC(&v10, v3, 1);
  }
  else
  {
    sub_2396163F8(v3, v6);
  }
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AB0FBC(uint64_t *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  char *v15;
  int v16;
  __int128 v17;
  __int128 v18;
  int v19;
  uint64_t *v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char i;
  unsigned int v31;
  int v32;
  int v33;
  char *v34;
  int v35;
  __int128 v36;
  __int128 v37;
  int j;
  unsigned int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  int v48;
  uint64_t v49[2];
  uint64_t v50;
  uint64_t v51;
  void *__p;
  char v53;
  _BYTE v54[152];
  unint64_t v55;
  std::string v56;

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      v6 = 1;
    else
      v6 = v5 == 0;
    if (!v6)
    {
      v7 = *MEMORY[0x24BEDB7F0];
      v9 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v8 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v10 = v5 - 1;
      v11 = MEMORY[0x24BEDB848] + 16;
      do
      {
        v12 = v10;
        memset(&v56, 0, sizeof(v56));
        v13 = std::istream::get();
        v14 = sub_2396162D4((uint64_t)a2, v13);
        if (v14)
        {
          std::string::resize(&v56, v14, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
        {
          *v56.__r_.__value_.__l.__data_ = 0;
          v56.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v56.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v56.__r_.__value_.__s + 23) = 0;
        }
        v55 = 0;
        sub_239593804((uint64_t)v49, (uint64_t)&v56, 24);
        MEMORY[0x23B83DD1C](v49, &v55);
        v45 = 0uLL;
        v47 = 0uLL;
        *((_QWORD *)&v46 + 1) = 0;
        LODWORD(v46) = 0;
        v48 = -1;
        sub_239AB15E4((uint64_t)&v45, a2, 1);
        v15 = sub_239AB1F98(*a1, v55, &v55);
        v16 = v48;
        v17 = v47;
        v18 = v46;
        *(_OWORD *)(v15 + 24) = v45;
        *(_OWORD *)(v15 + 40) = v18;
        *(_OWORD *)(v15 + 56) = v17;
        *((_DWORD *)v15 + 18) = v16;
        v19 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        v49[0] = v7;
        *(uint64_t *)((char *)v49 + *(_QWORD *)(v7 - 24)) = v9;
        v50 = v8;
        v51 = v11;
        if (v53 < 0)
          operator delete(__p);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v54);
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v56.__r_.__value_.__l.__data_);
        if (v19)
          break;
        v10 = v12 - 1;
      }
      while (v12);
    }
  }
  else
  {
    v20 = a2 + 4;
    v21 = MEMORY[0x24BDAC740];
    while (1)
    {
      v22 = std::istream::peek();
      v23 = v22 <= 0x7F ? *(_DWORD *)(v21 + 4 * v22 + 60) & 0x4000 : __maskrune(v22, 0x4000uLL);
      v24 = *(_QWORD *)(*a2 - 24);
      if (!v23)
        break;
      if (!*(_DWORD *)((char *)v20 + v24))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v24 + 32) & 2) == 0)
    {
      v55 = 0;
      memset(&v56, 0, sizeof(v56));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v25 = std::istream::peek();
          v26 = v25 <= 0x7F ? *(_DWORD *)(v21 + 4 * v25 + 60) & 0x4000 : __maskrune(v25, 0x4000uLL);
          v27 = *(_QWORD *)(*a2 - 24);
          if (!v26)
            break;
          if (!*(_DWORD *)((char *)v20 + v27))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v27 + 32) & 2) == 0)
        {
          v28 = std::istream::peek() == 125;
          v29 = *MEMORY[0x24BEDB7F0];
          v42 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          v43 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          v41 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v20 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v28)
          {
            if (!sub_239595A48((uint64_t)&v56, a2))
              goto LABEL_72;
            sub_2395EDF80((uint64_t)&v55, (uint64_t)&v56);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v20 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v20 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_72;
LABEL_45:
            std::istream::get();
            while (1)
            {
              v31 = std::istream::peek();
              v32 = v31 <= 0x7F ? *(_DWORD *)(v21 + 4 * v31 + 60) & 0x4000 : __maskrune(v31, 0x4000uLL);
              v33 = *(_DWORD *)((char *)v20 + *(_QWORD *)(*a2 - 24));
              if (!v32)
                break;
              if (!v33)
                goto LABEL_45;
            }
            if ((v33 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v49);
              if (sub_239596128(a2))
              {
                v45 = 0uLL;
                v47 = 0uLL;
                *((_QWORD *)&v46 + 1) = 0;
                LODWORD(v46) = 0;
                v48 = -1;
                sub_239AB15E4((uint64_t)&v45, v49, 0);
                v34 = sub_239AB1F98(*a1, v55, &v55);
                v35 = v48;
                v36 = v47;
                v37 = v46;
                *(_OWORD *)(v34 + 24) = v45;
                *(_OWORD *)(v34 + 40) = v37;
                *(_OWORD *)(v34 + 56) = v36;
                *((_DWORD *)v34 + 18) = v35;
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v39 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_64;
                  if (v39 == 2097152000)
                    break;
                  if (v39 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v21 + 4 * (char)j + 60) & 0x4000) == 0)
                      goto LABEL_63;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    goto LABEL_63;
                  }
                  if ((*((_BYTE *)v20 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                  {
LABEL_63:
                    if (v39 != 738197504)
                      goto LABEL_65;
LABEL_64:
                    std::istream::get();
                    v28 = 0;
                    goto LABEL_67;
                  }
                  std::istream::get();
                }
                v28 = 1;
LABEL_67:
                v40 = 0;
              }
              else
              {
LABEL_65:
                v28 = 0;
                v40 = 1;
              }
              v49[0] = v29;
              *(uint64_t *)((char *)v49 + *(_QWORD *)(v29 - 24)) = v43;
              v50 = v42;
              v51 = v41;
              if (v53 < 0)
                operator delete(__p);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v54);
              if (!v40)
                continue;
            }
            goto LABEL_72;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_72:
      if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v56.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239AB158C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  uint64_t v25;

  if (*(char *)(v25 - 89) < 0)
    operator delete(*(void **)(v25 - 112));
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239AB15E4(uint64_t a1, uint64_t *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t *v27;
  size_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int8x16_t v34;
  double v35;
  int32x4_t v36;
  const char *v37;
  const char *v38;
  size_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int8x16_t v45;
  double v46;
  int32x4_t v47;
  const char *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int8x16_t v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int8x16_t v67;
  double v68;
  int32x4_t v69;
  const char *v70;
  const char *v71;
  size_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  int8x16_t *v78;
  size_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  void **v87;
  void *v88;
  void **v90;
  void *v91[2];
  unint64_t v92;
  void *v93[2];
  unint64_t v94;
  void *v95[2];
  unint64_t v96;
  void *v97[2];
  unint64_t v98;
  void *v99[2];
  unint64_t v100;
  void *v101[2];
  unint64_t v102;
  void *v103[2];
  unint64_t v104;
  void *__dst[2];
  unint64_t v106;
  void *__p[2];
  void *v108;
  __int128 v109;
  __int16 v110;
  _OWORD v111[2];
  __int128 v112;
  int v113;
  unsigned __int8 v114[32];
  _OWORD v115[2];
  __int128 v116;
  __int16 v117;
  __int128 v118;
  uint64_t v119;
  _BYTE v120[19];
  uint64_t v121;

  v121 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  *(_OWORD *)v120 = xmmword_239F104EC;
  *(_DWORD *)&v120[15] = 852995;
  sub_23958E450((uint64_t)v120, (int32x4_t)xmmword_239F104EC, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v106 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v106) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AE0670;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v118 = xmmword_239F104FF;
  v119 = 0x1E171F12241C15;
  sub_2396F1A4C((uint64_t)&v118, (int32x4_t)xmmword_239F104FF, v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v103[1] = v22;
    v104 = v25 | 0x8000000000000000;
    v103[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v104) = v21;
  v23 = v103;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AE0670;
  v26[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v103, (uint64_t)v26);
  v116 = xmmword_239F10517;
  v117 = 116;
  v27 = sub_239A91B18((int8x16_t *)&v116);
  v28 = strlen(v27->i8);
  if (v28 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v29 = (void *)v28;
  if (v28 >= 0x17)
  {
    v31 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v28 | 7) != 0x17)
      v31 = v28 | 7;
    v32 = v31 + 1;
    v30 = operator new(v31 + 1);
    v101[1] = v29;
    v102 = v32 | 0x8000000000000000;
    v101[0] = v30;
    goto LABEL_24;
  }
  HIBYTE(v102) = v28;
  v30 = v101;
  if (v28)
LABEL_24:
    memmove(v30, v27, (size_t)v29);
  *((_BYTE *)v29 + (_QWORD)v30) = 0;
  v33 = (_QWORD *)operator new();
  *v33 = &off_250AE0670;
  v33[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v101, (uint64_t)v33);
  v115[0] = xmmword_239F10529;
  *(_QWORD *)((char *)v115 + 15) = 0x38313934023A33;
  sub_2396EFBE0((uint64_t)v115, (int32x4_t)xmmword_239F10529, v34, v35, v36);
  v38 = v37;
  v39 = strlen(v37);
  if (v39 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v40 = (void *)v39;
  if (v39 >= 0x17)
  {
    v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v39 | 7) != 0x17)
      v42 = v39 | 7;
    v43 = v42 + 1;
    v41 = operator new(v42 + 1);
    v99[1] = v40;
    v100 = v43 | 0x8000000000000000;
    v99[0] = v41;
    goto LABEL_32;
  }
  HIBYTE(v100) = v39;
  v41 = v99;
  if (v39)
LABEL_32:
    memmove(v41, v38, (size_t)v40);
  *((_BYTE *)v40 + (_QWORD)v41) = 0;
  v44 = (_QWORD *)operator new();
  *v44 = &off_250AE0670;
  v44[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v99, (uint64_t)v44);
  *(_OWORD *)v114 = xmmword_239F10540;
  *(_OWORD *)&v114[10] = *(__int128 *)((char *)&xmmword_239F10540 + 10);
  sub_239A93C04(v114, *(int32x4_t *)((char *)&xmmword_239F10540 + 10), v45, v46, v47);
  v49 = v48;
  v50 = strlen(v48);
  if (v50 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v51 = (void *)v50;
  if (v50 >= 0x17)
  {
    v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v50 | 7) != 0x17)
      v53 = v50 | 7;
    v54 = v53 + 1;
    v52 = operator new(v53 + 1);
    v97[1] = v51;
    v98 = v54 | 0x8000000000000000;
    v97[0] = v52;
    goto LABEL_40;
  }
  HIBYTE(v98) = v50;
  v52 = v97;
  if (v50)
LABEL_40:
    memmove(v52, v49, (size_t)v51);
  *((_BYTE *)v51 + (_QWORD)v52) = 0;
  v55 = (_QWORD *)operator new();
  *v55 = &off_250ADF420;
  v55[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v97, (uint64_t)v55);
  v112 = xmmword_239F1055A;
  v113 = 1116417;
  sub_23958E55C((uint64_t)&v112, (int32x4_t)xmmword_239F1055A, v56, v57, v58);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v95[1] = v62;
    v96 = v65 | 0x8000000000000000;
    v95[0] = v63;
    goto LABEL_48;
  }
  HIBYTE(v96) = v61;
  v63 = v95;
  if (v61)
LABEL_48:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AFFF08;
  v66[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v95, (uint64_t)v66);
  v111[0] = xmmword_239F1056E;
  *(_OWORD *)((char *)v111 + 9) = *(__int128 *)((char *)&xmmword_239F1056E + 9);
  sub_2396EFC88((uint64_t)v111, *(int32x4_t *)((char *)&xmmword_239F1056E + 9), v67, v68, v69);
  v71 = v70;
  v72 = strlen(v70);
  if (v72 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v73 = (void *)v72;
  if (v72 >= 0x17)
  {
    v75 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v72 | 7) != 0x17)
      v75 = v72 | 7;
    v76 = v75 + 1;
    v74 = operator new(v75 + 1);
    v93[1] = v73;
    v94 = v76 | 0x8000000000000000;
    v93[0] = v74;
    goto LABEL_56;
  }
  HIBYTE(v94) = v72;
  v74 = v93;
  if (v72)
LABEL_56:
    memmove(v74, v71, (size_t)v73);
  *((_BYTE *)v73 + (_QWORD)v74) = 0;
  v77 = (_QWORD *)operator new();
  *v77 = &off_250AFFF08;
  v77[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v93, (uint64_t)v77);
  v109 = xmmword_239F10587;
  v110 = 25;
  v78 = sub_239A91B18((int8x16_t *)&v109);
  v79 = strlen(v78->i8);
  if (v79 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v80 = (void *)v79;
  if (v79 >= 0x17)
  {
    v82 = (v79 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v79 | 7) != 0x17)
      v82 = v79 | 7;
    v83 = v82 + 1;
    v81 = operator new(v82 + 1);
    v91[1] = v80;
    v92 = v83 | 0x8000000000000000;
    v91[0] = v81;
    goto LABEL_64;
  }
  HIBYTE(v92) = v79;
  v81 = v91;
  if (v79)
LABEL_64:
    memmove(v81, v78, (size_t)v80);
  *((_BYTE *)v80 + (_QWORD)v81) = 0;
  v84 = (_QWORD *)operator new();
  *v84 = &off_250ADF240;
  v84[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v91, (uint64_t)v84);
  if (SHIBYTE(v92) < 0)
  {
    operator delete(v91[0]);
    if ((SHIBYTE(v94) & 0x80000000) == 0)
    {
LABEL_67:
      if ((SHIBYTE(v96) & 0x80000000) == 0)
        goto LABEL_68;
      goto LABEL_87;
    }
  }
  else if ((SHIBYTE(v94) & 0x80000000) == 0)
  {
    goto LABEL_67;
  }
  operator delete(v93[0]);
  if ((SHIBYTE(v96) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v98) & 0x80000000) == 0)
      goto LABEL_69;
    goto LABEL_88;
  }
LABEL_87:
  operator delete(v95[0]);
  if ((SHIBYTE(v98) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v100) & 0x80000000) == 0)
      goto LABEL_70;
    goto LABEL_89;
  }
LABEL_88:
  operator delete(v97[0]);
  if ((SHIBYTE(v100) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v102) & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_90;
  }
LABEL_89:
  operator delete(v99[0]);
  if ((SHIBYTE(v102) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v104) & 0x80000000) == 0)
      goto LABEL_72;
LABEL_91:
    operator delete(v103[0]);
    if ((SHIBYTE(v106) & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_92;
  }
LABEL_90:
  operator delete(v101[0]);
  if (SHIBYTE(v104) < 0)
    goto LABEL_91;
LABEL_72:
  if ((SHIBYTE(v106) & 0x80000000) == 0)
    goto LABEL_73;
LABEL_92:
  operator delete(__dst[0]);
LABEL_73:
  sub_23959479C((uint64_t)__p, a2);
  v85 = v108;
  if (v108)
  {
    do
    {
      v86 = v85[5];
      if (v86)
        (*(void (**)(uint64_t))(*(_QWORD *)v86 + 8))(v86);
      v85 = (_QWORD *)*v85;
    }
    while (v85);
    v87 = (void **)v108;
    if (v108)
    {
      do
      {
        v90 = (void **)*v87;
        if (*((char *)v87 + 39) < 0)
          operator delete(v87[2]);
        operator delete(v87);
        v87 = v90;
      }
      while (v90);
    }
  }
  v88 = __p[0];
  __p[0] = 0;
  if (v88)
    operator delete(v88);
  return a2;
}

void sub_239AB1E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,char a57)
{
  sub_2395905C0((uint64_t)&a57);
  _Unwind_Resume(a1);
}

char *sub_239AB1F98(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t prime;
  unint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v5 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = (char *)*v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = *((_QWORD *)v10 + 1);
            if (v12 == a2)
            {
              if (*((_QWORD *)v10 + 2) == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = *(char **)v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = *((_QWORD *)v10 + 1);
          if (v11 == a2)
          {
            if (*((_QWORD *)v10 + 2) == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = *(char **)v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v10 = (char *)operator new(0x50uLL);
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = v5;
  *((_QWORD *)v10 + 2) = *a3;
  *((_QWORD *)v10 + 9) = 0;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *((_DWORD *)v10 + 18) = -1;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (v7 && (float)(v14 * (float)v7) >= v13)
  {
    v5 = v3;
  }
  else
  {
    v15 = 1;
    if (v7 >= 3)
      v15 = (v7 & (v7 - 1)) != 0;
    v16 = v15 | (2 * v7);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      prime = v17;
    else
      prime = v16;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_35;
    if (prime < v7)
    {
      v19 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v20 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
      {
        v19 = std::__next_prime(v19);
      }
      else
      {
        v21 = 1 << -(char)__clz(v19 - 1);
        if (v19 >= 2)
          v19 = v21;
      }
      if (prime <= v19)
        prime = v19;
      if (prime < v7)
LABEL_35:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v5)
        v5 %= v7;
    }
    else
    {
      v5 &= v7 - 1;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v23)
  {
    *(_QWORD *)v10 = *v23;
LABEL_58:
    *v23 = v10;
    goto LABEL_59;
  }
  *(_QWORD *)v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(v22 + 8 * v5) = a1 + 16;
  if (*(_QWORD *)v10)
  {
    v24 = *(_QWORD *)(*(_QWORD *)v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v24 >= v7)
        v24 %= v7;
    }
    else
    {
      v24 &= v7 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239AB2278(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AB228C(uint64_t a1, _QWORD *a2, int a3)
{
  unint64_t v5;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    if (*(_QWORD *)(*(_QWORD *)a1 + 24))
    {
      v7 = 0;
      v8 = *(_QWORD **)(*(_QWORD *)a1 + 16);
      do
      {
        if (v8)
        {
          v11 = 0;
          v9 = v8;
          do
          {
            v9 = (_QWORD *)*v9;
            v10 = v11 + 1;
          }
          while (v11++ <= 0x7FFFFFFD && v9 != 0);
        }
        else
        {
          v9 = 0;
          v10 = 0;
        }
        sub_239AB23E8(v8, v9, v10, a2, 1);
        v7 += 0x7FFFFFFFLL;
        v8 = v9;
      }
      while (v7 < *(_QWORD *)(*(_QWORD *)a1 + 24));
    }
  }
  else
  {
    sub_239AB23E8(*(_QWORD **)(*(_QWORD *)a1 + 16), 0, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239AB23E8(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4, int a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__p;
  int v20;
  unsigned __int8 v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  _DWORD v27[42];

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v27[38] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v10 = *MEMORY[0x24BEDB7F0];
        v11 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v13 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v22);
          std::ostream::operator<<();
          std::stringbuf::str();
          std::ostream::put();
          v14 = v21;
          if ((v21 & 0x80u) != 0)
            v14 = v20;
          v27[39] = v14;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          sub_239AB2794((uint64_t)(a1 + 3), a4, 1);
          if ((char)v21 < 0)
            operator delete(__p);
          v22[0] = v10;
          *(_QWORD *)((char *)v22 + *(_QWORD *)(v10 - 24)) = v11;
          v23 = v12;
          v24 = v13;
          if (v26 < 0)
            operator delete(v25);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v27);
          a1 = (_QWORD *)*a1;
        }
        while (a1 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v15 = *MEMORY[0x24BEDB7F0];
      v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v16 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v18 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v22);
        std::ostream::operator<<();
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        sub_239AB2794((uint64_t)(a1 + 3), a4, 0);
        a1 = (_QWORD *)*a1;
        if (a1 != a2)
          std::ostream::put();
        if ((char)v21 < 0)
          operator delete(__p);
        v22[0] = v15;
        *(_QWORD *)((char *)v22 + *(_QWORD *)(v15 - 24)) = v17;
        v23 = v16;
        v24 = v18;
        if (v26 < 0)
          operator delete(v25);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v27);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239AB274C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_239498ABC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AB2794(uint64_t a1, _QWORD *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t *v27;
  size_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int8x16_t v34;
  double v35;
  int32x4_t v36;
  const char *v37;
  const char *v38;
  size_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int8x16_t v45;
  double v46;
  int32x4_t v47;
  const char *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int8x16_t v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int8x16_t v67;
  double v68;
  int32x4_t v69;
  const char *v70;
  const char *v71;
  size_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  int8x16_t *v78;
  size_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  void **v87;
  void *v88;
  void **v90;
  void *v91[2];
  unint64_t v92;
  void *v93[2];
  unint64_t v94;
  void *v95[2];
  unint64_t v96;
  void *v97[2];
  unint64_t v98;
  void *v99[2];
  unint64_t v100;
  void *v101[2];
  unint64_t v102;
  void *v103[2];
  unint64_t v104;
  void *__dst[2];
  unint64_t v106;
  void *__p[2];
  void *v108;
  __int128 v109;
  __int16 v110;
  char v111[32];
  __int128 v112;
  int v113;
  char v114[32];
  _OWORD v115[2];
  int8x16_t v116[2];
  char v117[32];
  _BYTE v118[19];
  uint64_t v119;

  v119 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  *(_OWORD *)v118 = xmmword_239F101F0;
  *(_DWORD *)&v118[15] = 67599;
  sub_23958E450((uint64_t)v118, (int32x4_t)xmmword_239F101F0, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v106 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v106) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AE0580;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  strcpy(v117, "(L]ZI\\AGFw\\ZIKCAFOwALDM");
  sub_2396F1A4C((uint64_t)v117, *(int32x4_t *)"(L]ZI\\AGFw\\ZIKCAFOwALDM", v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v103[1] = v22;
    v104 = v25 | 0x8000000000000000;
    v103[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v104) = v21;
  v23 = v103;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AE0580;
  v26[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v103, (uint64_t)v26);
  strcpy(v116[0].i8, "W3\"%6#>89\b:6''>90");
  v27 = sub_239A91B18(v116);
  v28 = strlen(v27->i8);
  if (v28 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v29 = (void *)v28;
  if (v28 >= 0x17)
  {
    v31 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v28 | 7) != 0x17)
      v31 = v28 | 7;
    v32 = v31 + 1;
    v30 = operator new(v31 + 1);
    v101[1] = v29;
    v102 = v32 | 0x8000000000000000;
    v101[0] = v30;
    goto LABEL_24;
  }
  HIBYTE(v102) = v28;
  v30 = v101;
  if (v28)
LABEL_24:
    memmove(v30, v27, (size_t)v29);
  *((_BYTE *)v29 + (_QWORD)v30) = 0;
  v33 = (_QWORD *)operator new();
  *v33 = &off_250AE0580;
  v33[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v101, (uint64_t)v33);
  v115[0] = xmmword_239F1022D;
  *(_QWORD *)((char *)v115 + 15) = 0x757C74794F777ELL;
  sub_2396EFBE0((uint64_t)v115, (int32x4_t)xmmword_239F1022D, v34, v35, v36);
  v38 = v37;
  v39 = strlen(v37);
  if (v39 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v40 = (void *)v39;
  if (v39 >= 0x17)
  {
    v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v39 | 7) != 0x17)
      v42 = v39 | 7;
    v43 = v42 + 1;
    v41 = operator new(v42 + 1);
    v99[1] = v40;
    v100 = v43 | 0x8000000000000000;
    v99[0] = v41;
    goto LABEL_32;
  }
  HIBYTE(v100) = v39;
  v41 = v99;
  if (v39)
LABEL_32:
    memmove(v41, v38, (size_t)v40);
  *((_BYTE *)v40 + (_QWORD)v41) = 0;
  v44 = (_QWORD *)operator new();
  *v44 = &off_250AE0580;
  v44[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v99, (uint64_t)v44);
  strcpy(v114, ":YOHH_TNeTOWeL[VS^eSW[]_I");
  sub_239A93C04((unsigned __int8 *)v114, *(int32x4_t *)"OWeL[VS^eSW[]_I", v45, v46, v47);
  v49 = v48;
  v50 = strlen(v48);
  if (v50 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v51 = (void *)v50;
  if (v50 >= 0x17)
  {
    v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v50 | 7) != 0x17)
      v53 = v50 | 7;
    v54 = v53 + 1;
    v52 = operator new(v53 + 1);
    v97[1] = v51;
    v98 = v54 | 0x8000000000000000;
    v97[0] = v52;
    goto LABEL_40;
  }
  HIBYTE(v98) = v50;
  v52 = v97;
  if (v50)
LABEL_40:
    memmove(v52, v49, (size_t)v51);
  *((_BYTE *)v51 + (_QWORD)v52) = 0;
  v55 = (_QWORD *)operator new();
  *v55 = &off_250ADF750;
  v55[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v97, (uint64_t)v55);
  v112 = xmmword_239F1025E;
  v113 = 5458755;
  sub_23958E55C((uint64_t)&v112, (int32x4_t)xmmword_239F1025E, v56, v57, v58);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v95[1] = v62;
    v96 = v65 | 0x8000000000000000;
    v95[0] = v63;
    goto LABEL_48;
  }
  HIBYTE(v96) = v61;
  v63 = v95;
  if (v61)
LABEL_48:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AFFE48;
  v66[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v95, (uint64_t)v66);
  strcpy(v111, "/AZBp]JHF\\[]N[F@Ap[]FNC\\");
  sub_2396EFC88((uint64_t)v111, *(int32x4_t *)"\\[]N[F@Ap[]FNC\\", v67, v68, v69);
  v71 = v70;
  v72 = strlen(v70);
  if (v72 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v73 = (void *)v72;
  if (v72 >= 0x17)
  {
    v75 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v72 | 7) != 0x17)
      v75 = v72 | 7;
    v76 = v75 + 1;
    v74 = operator new(v75 + 1);
    v93[1] = v73;
    v94 = v76 | 0x8000000000000000;
    v93[0] = v74;
    goto LABEL_56;
  }
  HIBYTE(v94) = v72;
  v74 = v93;
  if (v72)
LABEL_56:
    memmove(v74, v71, (size_t)v73);
  *((_BYTE *)v73 + (_QWORD)v74) = 0;
  v77 = (_QWORD *)operator new();
  *v77 = &off_250AFFE48;
  v77[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v93, (uint64_t)v77);
  v109 = xmmword_239F1028B;
  v110 = 125;
  v78 = sub_239A91B18((int8x16_t *)&v109);
  v79 = strlen(v78->i8);
  if (v79 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v80 = (void *)v79;
  if (v79 >= 0x17)
  {
    v82 = (v79 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v79 | 7) != 0x17)
      v82 = v79 | 7;
    v83 = v82 + 1;
    v81 = operator new(v82 + 1);
    v91[1] = v80;
    v92 = v83 | 0x8000000000000000;
    v91[0] = v81;
    goto LABEL_64;
  }
  HIBYTE(v92) = v79;
  v81 = v91;
  if (v79)
LABEL_64:
    memmove(v81, v78, (size_t)v80);
  *((_BYTE *)v80 + (_QWORD)v81) = 0;
  v84 = (_QWORD *)operator new();
  *v84 = &off_250ADF5A0;
  v84[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v91, (uint64_t)v84);
  if (SHIBYTE(v92) < 0)
  {
    operator delete(v91[0]);
    if ((SHIBYTE(v94) & 0x80000000) == 0)
    {
LABEL_67:
      if ((SHIBYTE(v96) & 0x80000000) == 0)
        goto LABEL_68;
      goto LABEL_87;
    }
  }
  else if ((SHIBYTE(v94) & 0x80000000) == 0)
  {
    goto LABEL_67;
  }
  operator delete(v93[0]);
  if ((SHIBYTE(v96) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v98) & 0x80000000) == 0)
      goto LABEL_69;
    goto LABEL_88;
  }
LABEL_87:
  operator delete(v95[0]);
  if ((SHIBYTE(v98) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v100) & 0x80000000) == 0)
      goto LABEL_70;
    goto LABEL_89;
  }
LABEL_88:
  operator delete(v97[0]);
  if ((SHIBYTE(v100) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v102) & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_90;
  }
LABEL_89:
  operator delete(v99[0]);
  if ((SHIBYTE(v102) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v104) & 0x80000000) == 0)
      goto LABEL_72;
LABEL_91:
    operator delete(v103[0]);
    if ((SHIBYTE(v106) & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_92;
  }
LABEL_90:
  operator delete(v101[0]);
  if (SHIBYTE(v104) < 0)
    goto LABEL_91;
LABEL_72:
  if ((SHIBYTE(v106) & 0x80000000) == 0)
    goto LABEL_73;
LABEL_92:
  operator delete(__dst[0]);
LABEL_73:
  sub_2395902F0((uint64_t)__p, a2);
  v85 = v108;
  if (v108)
  {
    do
    {
      v86 = v85[5];
      if (v86)
        (*(void (**)(uint64_t))(*(_QWORD *)v86 + 8))(v86);
      v85 = (_QWORD *)*v85;
    }
    while (v85);
    v87 = (void **)v108;
    if (v108)
    {
      do
      {
        v90 = (void **)*v87;
        if (*((char *)v87 + 39) < 0)
          operator delete(v87[2]);
        operator delete(v87);
        v87 = v90;
      }
      while (v90);
    }
  }
  v88 = __p[0];
  __p[0] = 0;
  if (v88)
    operator delete(v88);
  return a2;
}

void sub_239AB2FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,char a57)
{
  sub_2395905C0((uint64_t)&a57);
  _Unwind_Resume(a1);
}

void sub_239AB314C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB3170(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AB3898((uint64_t)&v5, (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AB31BC(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t *v3;
  int v4;
  int v6;
  int v7;
  int i;
  _QWORD *exception;
  uint64_t v10;

  v3 = a2;
  v10 = *(_QWORD *)(a1 + 8);
  if (!a3)
    goto LABEL_4;
  v4 = std::istream::peek();
  if ((v4 & 0xFFFFFFFE) == 0xDE)
  {
    a2 = v3;
    a3 = 1;
LABEL_4:
    sub_239AB32C8(&v10, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  v6 = v4;
  std::istream::get();
  if (v6 == 221)
  {
    v7 = sub_2396162D4((uint64_t)v3, 221);
    if (*(_DWORD *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 32))
    {
      exception = __cxa_allocate_exception(8uLL);
      *exception = MEMORY[0x24BEDB8F0] + 16;
      __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
    }
    for (i = v7; i; --i)
      sub_239AB32C8(&v10, v3, 1);
  }
  else
  {
    sub_2396163F8(v3, v6);
  }
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AB32C8(uint64_t *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t *v15;
  uint64_t v16;
  int v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  char i;
  unsigned int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int j;
  unsigned int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t *v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  void *__p;
  char v47;
  _BYTE v48[152];
  unint64_t v49;
  std::string v50;
  _QWORD *v51[2];

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      v6 = 1;
    else
      v6 = v5 == 0;
    if (!v6)
    {
      v7 = *MEMORY[0x24BEDB7F0];
      v9 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v8 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v10 = v5 - 1;
      v11 = MEMORY[0x24BEDB848] + 16;
      do
      {
        v12 = v10;
        memset(&v50, 0, sizeof(v50));
        v13 = std::istream::get();
        v14 = sub_2396162D4((uint64_t)a2, v13);
        if (v14)
        {
          std::string::resize(&v50, v14, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
        {
          *v50.__r_.__value_.__l.__data_ = 0;
          v50.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v50.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v50.__r_.__value_.__s + 23) = 0;
        }
        v49 = 0;
        sub_239593804((uint64_t)v43, (uint64_t)&v50, 24);
        MEMORY[0x23B83DD1C](v43, &v49);
        v42 = 0;
        sub_2395A9F0C((uint64_t)&v42, (uint64_t)a2, 1);
        v15 = v42;
        v16 = *a1;
        v51[0] = &v49;
        sub_2395193BC(v16, &v49, (uint64_t)&unk_239EC6E98, v51)[3] = v15;
        v17 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        v43[0] = v7;
        *(_QWORD *)((char *)v43 + *(_QWORD *)(v7 - 24)) = v9;
        v44 = v8;
        v45 = v11;
        if (v47 < 0)
          operator delete(__p);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v48);
        if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v50.__r_.__value_.__l.__data_);
        if (v17)
          break;
        v10 = v12 - 1;
      }
      while (v12);
    }
  }
  else
  {
    v18 = a2 + 4;
    v19 = MEMORY[0x24BDAC740];
    while (1)
    {
      v20 = std::istream::peek();
      v21 = v20 <= 0x7F ? *(_DWORD *)(v19 + 4 * v20 + 60) & 0x4000 : __maskrune(v20, 0x4000uLL);
      v22 = *(_QWORD *)(*a2 - 24);
      if (!v21)
        break;
      if (!*(_DWORD *)((char *)v18 + v22))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v22 + 32) & 2) == 0)
    {
      v49 = 0;
      memset(&v50, 0, sizeof(v50));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v23 = std::istream::peek();
          v24 = v23 <= 0x7F ? *(_DWORD *)(v19 + 4 * v23 + 60) & 0x4000 : __maskrune(v23, 0x4000uLL);
          v25 = *(_QWORD *)(*a2 - 24);
          if (!v24)
            break;
          if (!*(_DWORD *)((char *)v18 + v25))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v25 + 32) & 2) == 0)
        {
          v26 = std::istream::peek() == 125;
          v27 = *MEMORY[0x24BEDB7F0];
          v38 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          v39 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          v28 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v18 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v26)
          {
            if (!sub_239595A48((uint64_t)&v50, a2))
              goto LABEL_72;
            sub_2395EDF80((uint64_t)&v49, (uint64_t)&v50);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v18 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v18 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_72;
LABEL_45:
            std::istream::get();
            while (1)
            {
              v30 = std::istream::peek();
              v31 = v30 <= 0x7F ? *(_DWORD *)(v19 + 4 * v30 + 60) & 0x4000 : __maskrune(v30, 0x4000uLL);
              v32 = *(_DWORD *)((char *)v18 + *(_QWORD *)(*a2 - 24));
              if (!v31)
                break;
              if (!v32)
                goto LABEL_45;
            }
            if ((v32 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v43);
              v42 = &v44;
              if (sub_239596128(a2))
              {
                v41 = 0;
                MEMORY[0x23B83DD1C](v43, &v41);
                v33 = v41;
                v34 = *a1;
                v51[0] = &v49;
                sub_2395193BC(v34, &v49, (uint64_t)&unk_239EC6E98, v51)[3] = v33;
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v36 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_64;
                  if (v36 == 2097152000)
                    break;
                  if (v36 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v19 + 4 * (char)j + 60) & 0x4000) == 0)
                      goto LABEL_63;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    goto LABEL_63;
                  }
                  if ((*((_BYTE *)v18 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                  {
LABEL_63:
                    if (v36 != 738197504)
                      goto LABEL_65;
LABEL_64:
                    std::istream::get();
                    v26 = 0;
                    goto LABEL_67;
                  }
                  std::istream::get();
                }
                v26 = 1;
LABEL_67:
                v37 = 0;
              }
              else
              {
LABEL_65:
                v26 = 0;
                v37 = 1;
              }
              v43[0] = v27;
              *(_QWORD *)((char *)v43 + *(_QWORD *)(v27 - 24)) = v39;
              v44 = v38;
              v45 = v28;
              if (v47 < 0)
                operator delete(__p);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v48);
              if (!v37)
                continue;
            }
            goto LABEL_72;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_72:
      if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v50.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239AB3840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v17;

  if (*(char *)(v17 - 105) < 0)
    operator delete(*(void **)(v17 - 128));
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AB3898(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v5;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    if (*(_QWORD *)(*(_QWORD *)a1 + 24))
    {
      v7 = 0;
      v8 = *(_QWORD **)(*(_QWORD *)a1 + 16);
      do
      {
        if (v8)
        {
          v11 = 0;
          v9 = v8;
          do
          {
            v9 = (_QWORD *)*v9;
            v10 = v11 + 1;
          }
          while (v11++ <= 0x7FFFFFFD && v9 != 0);
        }
        else
        {
          v9 = 0;
          v10 = 0;
        }
        sub_239AB39F4(v8, v9, v10, a2, 1);
        v7 += 0x7FFFFFFFLL;
        v8 = v9;
      }
      while (v7 < *(_QWORD *)(*(_QWORD *)a1 + 24));
    }
  }
  else
  {
    sub_239AB39F4(*(_QWORD **)(*(_QWORD *)a1 + 16), 0, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239AB39F4(_QWORD *a1, _QWORD *a2, unint64_t a3, uint64_t a4, int a5)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *__p;
  int v19;
  unsigned __int8 v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  _DWORD v26[39];
  int v27;

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v26[38] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v9 = *MEMORY[0x24BEDB7F0];
        v16 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v10 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v21);
          std::ostream::operator<<();
          std::stringbuf::str();
          std::ostream::put();
          v11 = v20;
          if ((v20 & 0x80u) != 0)
            v11 = v19;
          v27 = v11;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::put();
          v27 = 8;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if ((char)v20 < 0)
            operator delete(__p);
          v21[0] = v9;
          *(_QWORD *)((char *)v21 + *(_QWORD *)(v9 - 24)) = v17;
          v22 = v16;
          v23 = v10;
          if (v25 < 0)
            operator delete(v24);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v26);
          a1 = (_QWORD *)*a1;
        }
        while (a1 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v12 = *MEMORY[0x24BEDB7F0];
      v14 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v13 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v15 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v21);
        std::ostream::operator<<();
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        std::ostream::operator<<();
        a1 = (_QWORD *)*a1;
        if (a1 != a2)
          std::ostream::put();
        if ((char)v20 < 0)
          operator delete(__p);
        v21[0] = v12;
        *(_QWORD *)((char *)v21 + *(_QWORD *)(v12 - 24)) = v14;
        v22 = v13;
        v23 = v15;
        if (v25 < 0)
          operator delete(v24);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v26);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239AB3DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_239498ABC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AB3DF8(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int8x16_t v19;
  double v20;
  int32x4_t v21;
  const char *v22;
  const char *v23;
  size_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  const char *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int8x16_t v37;
  double v38;
  int32x4_t v39;
  const char *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int8x16_t v48;
  double v49;
  int32x4_t v50;
  const char *v51;
  const char *v52;
  size_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  int8x16_t v59;
  double v60;
  int32x4_t v61;
  const char *v62;
  const char *v63;
  size_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int8x16_t v70;
  double v71;
  int32x4_t v72;
  const char *v73;
  const char *v74;
  size_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  int8x16_t *v81;
  size_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  int8x16_t v88;
  double v89;
  int32x4_t v90;
  const char *v91;
  const char *v92;
  size_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  const char *v99;
  const char *v100;
  size_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  int8x16_t v107;
  double v108;
  int32x4_t v109;
  const char *v110;
  const char *v111;
  size_t v112;
  void *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  int8x16_t v118;
  double v119;
  int32x4_t v120;
  const char *v121;
  const char *v122;
  size_t v123;
  void *v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  int8x16_t v129;
  double v130;
  int32x4_t v131;
  const char *v132;
  const char *v133;
  size_t v134;
  void *v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  double v140;
  int32x4_t v141;
  const char *v142;
  const char *v143;
  size_t v144;
  void *v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  int16x8_t v150;
  const char *v151;
  const char *v152;
  size_t v153;
  void *v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  const char *v159;
  size_t v160;
  void *v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;
  uint64_t v167;
  void **v168;
  void *v169;
  void **v171;
  void *v172[2];
  unint64_t v173;
  void *v174[2];
  unint64_t v175;
  void *v176[2];
  unint64_t v177;
  void *v178[2];
  unint64_t v179;
  void *v180[2];
  unint64_t v181;
  void *v182[2];
  unint64_t v183;
  void *v184[2];
  unint64_t v185;
  void *v186[2];
  unint64_t v187;
  void *v188[2];
  unint64_t v189;
  void *v190[2];
  unint64_t v191;
  void *v192[2];
  unint64_t v193;
  void *v194[2];
  unint64_t v195;
  void *v196[2];
  unint64_t v197;
  void *v198[2];
  unint64_t v199;
  void *v200[2];
  unint64_t v201;
  void *v202[2];
  unint64_t v203;
  void *__dst[2];
  unint64_t v205;
  void *__p[2];
  void *v207;
  uint64_t v208;
  char v209[8];
  char v210[16];
  int8x16_t v211[2];
  char v212[32];
  unsigned __int8 v213[32];
  _OWORD v214[2];
  char v215[16];
  _OWORD v216[2];
  __int128 v217;
  __int16 v218;
  char v219[32];
  char v220[32];
  _OWORD v221[2];
  char v222[32];
  char v223[16];
  char v224[24];
  uint64_t v225;
  int v226;
  char v227;
  uint64_t v228;
  int v229;
  uint64_t v230;

  v230 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v228 = 0x676B6F596B736806;
  v229 = 7693153;
  v5 = sub_23958E4C8((uint64_t)&v228);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v205 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v205) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFE48;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v225 = 0x13060B3800110667;
  v227 = 0;
  v226 = 503580930;
  v12 = sub_239510ECC((uint64_t)&v225);
  v13 = strlen(v12);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v202[1] = v14;
    v203 = v17 | 0x8000000000000000;
    v202[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v203) = v13;
  v15 = v202;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250AE0580;
  v18[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v202, (uint64_t)v18);
  strcpy(v224, "\"FWPCVKML}OCR}KLKV");
  sub_23958E450((uint64_t)v224, *(int32x4_t *)"\"FWPCVKML}OCR}KLKV", v19, v20, v21);
  v23 = v22;
  v24 = strlen(v22);
  if (v24 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v25 = (void *)v24;
  if (v24 >= 0x17)
  {
    v27 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v24 | 7) != 0x17)
      v27 = v24 | 7;
    v28 = v27 + 1;
    v26 = operator new(v27 + 1);
    v200[1] = v25;
    v201 = v28 | 0x8000000000000000;
    v200[0] = v26;
    goto LABEL_24;
  }
  HIBYTE(v201) = v24;
  v26 = v200;
  if (v24)
LABEL_24:
    memmove(v26, v23, (size_t)v25);
  *((_BYTE *)v25 + (_QWORD)v26) = 0;
  v29 = (_QWORD *)operator new();
  *v29 = &off_250AE0580;
  v29[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v200, (uint64_t)v29);
  strcpy(v223, "*N_XK^CEDuGK");
  v30 = sub_239510ECC((uint64_t)v223);
  v31 = strlen(v30);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v198[1] = v32;
    v199 = v35 | 0x8000000000000000;
    v198[0] = v33;
    goto LABEL_32;
  }
  HIBYTE(v199) = v31;
  v33 = v198;
  if (v31)
LABEL_32:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250AE0580;
  v36[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v198, (uint64_t)v36);
  strcpy(v222, "2VG@SF[]\\m[\\FW@mPS");
  sub_23958E450((uint64_t)v222, *(int32x4_t *)"2VG@SF[]\\m[\\FW@mPS", v37, v38, v39);
  v41 = v40;
  v42 = strlen(v40);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v196[1] = v43;
    v197 = v46 | 0x8000000000000000;
    v196[0] = v44;
    goto LABEL_40;
  }
  HIBYTE(v197) = v42;
  v44 = v196;
  if (v42)
LABEL_40:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250AE0580;
  v47[1] = a1 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v196, (uint64_t)v47);
  v221[0] = xmmword_239F10176;
  *(_DWORD *)((char *)v221 + 15) = 3091473;
  sub_23958E450((uint64_t)v221, (int32x4_t)xmmword_239F10176, v48, v49, v50);
  v52 = v51;
  v53 = strlen(v51);
  if (v53 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v54 = (void *)v53;
  if (v53 >= 0x17)
  {
    v56 = (v53 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v53 | 7) != 0x17)
      v56 = v53 | 7;
    v57 = v56 + 1;
    v55 = operator new(v56 + 1);
    v194[1] = v54;
    v195 = v57 | 0x8000000000000000;
    v194[0] = v55;
    goto LABEL_48;
  }
  HIBYTE(v195) = v53;
  v55 = v194;
  if (v53)
LABEL_48:
    memmove(v55, v52, (size_t)v54);
  *((_BYTE *)v54 + (_QWORD)v55) = 0;
  v58 = (_QWORD *)operator new();
  *v58 = &off_250AE0580;
  v58[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v194, (uint64_t)v58);
  strcpy(v220, "R6' 3&;=<\r& 319;<5");
  sub_23958E450((uint64_t)v220, *(int32x4_t *)"R6' 3&;=<\r& 319;<5", v59, v60, v61);
  v63 = v62;
  v64 = strlen(v62);
  if (v64 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v65 = (void *)v64;
  if (v64 >= 0x17)
  {
    v67 = (v64 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v64 | 7) != 0x17)
      v67 = v64 | 7;
    v68 = v67 + 1;
    v66 = operator new(v67 + 1);
    v192[1] = v65;
    v193 = v68 | 0x8000000000000000;
    v192[0] = v66;
    goto LABEL_56;
  }
  HIBYTE(v193) = v64;
  v66 = v192;
  if (v64)
LABEL_56:
    memmove(v66, v63, (size_t)v65);
  *((_BYTE *)v65 + (_QWORD)v66) = 0;
  v69 = (_QWORD *)operator new();
  *v69 = &off_250AE0580;
  v69[1] = a1 + 28;
  sub_23961580C((uint64_t)__p, (uint64_t)v192, (uint64_t)v69);
  strcpy(v219, "W3\"%6#>89\b#%64<>90\b>3;2");
  sub_2396F1A4C((uint64_t)v219, *(int32x4_t *)"W3\"%6#>89\b#%64<>90\b>3;2", v70, v71, v72);
  v74 = v73;
  v75 = strlen(v73);
  if (v75 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v76 = (void *)v75;
  if (v75 >= 0x17)
  {
    v78 = (v75 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v75 | 7) != 0x17)
      v78 = v75 | 7;
    v79 = v78 + 1;
    v77 = operator new(v78 + 1);
    v190[1] = v76;
    v191 = v79 | 0x8000000000000000;
    v190[0] = v77;
    goto LABEL_64;
  }
  HIBYTE(v191) = v75;
  v77 = v190;
  if (v75)
LABEL_64:
    memmove(v77, v74, (size_t)v76);
  *((_BYTE *)v76 + (_QWORD)v77) = 0;
  v80 = (_QWORD *)operator new();
  *v80 = &off_250AE0580;
  v80[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v190, (uint64_t)v80);
  v217 = xmmword_239F101B4;
  v218 = 42;
  v81 = sub_239A91B18((int8x16_t *)&v217);
  v82 = strlen(v81->i8);
  if (v82 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v83 = (void *)v82;
  if (v82 >= 0x17)
  {
    v85 = (v82 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v82 | 7) != 0x17)
      v85 = v82 | 7;
    v86 = v85 + 1;
    v84 = operator new(v85 + 1);
    v188[1] = v83;
    v189 = v86 | 0x8000000000000000;
    v188[0] = v84;
    goto LABEL_72;
  }
  HIBYTE(v189) = v82;
  v84 = v188;
  if (v82)
LABEL_72:
    memmove(v84, v81, (size_t)v83);
  *((_BYTE *)v83 + (_QWORD)v84) = 0;
  v87 = (_QWORD *)operator new();
  *v87 = &off_250AE0580;
  v87[1] = a1 + 36;
  sub_23961580C((uint64_t)__p, (uint64_t)v188, (uint64_t)v87);
  v216[0] = xmmword_239F101C6;
  *(_QWORD *)((char *)v216 + 15) = 0x40D05083E060FLL;
  sub_2396EFBE0((uint64_t)v216, (int32x4_t)xmmword_239F101C6, v88, v89, v90);
  v92 = v91;
  v93 = strlen(v91);
  if (v93 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v94 = (void *)v93;
  if (v93 >= 0x17)
  {
    v96 = (v93 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v93 | 7) != 0x17)
      v96 = v93 | 7;
    v97 = v96 + 1;
    v95 = operator new(v96 + 1);
    v186[1] = v94;
    v187 = v97 | 0x8000000000000000;
    v186[0] = v95;
    goto LABEL_80;
  }
  HIBYTE(v187) = v93;
  v95 = v186;
  if (v93)
LABEL_80:
    memmove(v95, v92, (size_t)v94);
  *((_BYTE *)v94 + (_QWORD)v95) = 0;
  v98 = (_QWORD *)operator new();
  *v98 = &off_250AE0580;
  v98[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v186, (uint64_t)v98);
  strcpy(v215, "0YCoCESSUCCVE\\");
  sub_23958E5E0((uint64_t)v215);
  v100 = v99;
  v101 = strlen(v99);
  if (v101 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v102 = (void *)v101;
  if (v101 >= 0x17)
  {
    v104 = (v101 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v101 | 7) != 0x17)
      v104 = v101 | 7;
    v105 = v104 + 1;
    v103 = operator new(v104 + 1);
    v184[1] = v102;
    v185 = v105 | 0x8000000000000000;
    v184[0] = v103;
    goto LABEL_88;
  }
  HIBYTE(v185) = v101;
  v103 = v184;
  if (v101)
LABEL_88:
    memmove(v103, v100, (size_t)v102);
  *((_BYTE *)v102 + (_QWORD)v103) = 0;
  v106 = (_QWORD *)operator new();
  *v106 = &off_250AFFEA8;
  v106[1] = a1 + 44;
  sub_23961580C((uint64_t)__p, (uint64_t)v184, (uint64_t)v106);
  v214[0] = xmmword_239F101DD;
  *(_DWORD *)((char *)v214 + 15) = 2369306;
  sub_23958E450((uint64_t)v214, (int32x4_t)xmmword_239F101DD, v107, v108, v109);
  v111 = v110;
  v112 = strlen(v110);
  if (v112 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v113 = (void *)v112;
  if (v112 >= 0x17)
  {
    v115 = (v112 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v112 | 7) != 0x17)
      v115 = v112 | 7;
    v116 = v115 + 1;
    v114 = operator new(v115 + 1);
    v182[1] = v113;
    v183 = v116 | 0x8000000000000000;
    v182[0] = v114;
    goto LABEL_96;
  }
  HIBYTE(v183) = v112;
  v114 = v182;
  if (v112)
LABEL_96:
    memmove(v114, v111, (size_t)v113);
  *((_BYTE *)v113 + (_QWORD)v114) = 0;
  v117 = (_QWORD *)operator new();
  *v117 = &off_250AF3D40;
  v117[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v182, (uint64_t)v117);
  *(_OWORD *)v213 = xmmword_239F1029D;
  *(_OWORD *)&v213[10] = *(__int128 *)((char *)&xmmword_239F1029D + 10);
  sub_239A93C04(v213, *(int32x4_t *)((char *)&xmmword_239F1029D + 10), v118, v119, v120);
  v122 = v121;
  v123 = strlen(v121);
  if (v123 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v124 = (void *)v123;
  if (v123 >= 0x17)
  {
    v126 = (v123 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v123 | 7) != 0x17)
      v126 = v123 | 7;
    v127 = v126 + 1;
    v125 = operator new(v126 + 1);
    v180[1] = v124;
    v181 = v127 | 0x8000000000000000;
    v180[0] = v125;
    goto LABEL_104;
  }
  HIBYTE(v181) = v123;
  v125 = v180;
  if (v123)
LABEL_104:
    memmove(v125, v122, (size_t)v124);
  *((_BYTE *)v124 + (_QWORD)v125) = 0;
  v128 = (_QWORD *)operator new();
  *v128 = &off_250AF3D70;
  v128[1] = a1 + 88;
  sub_23961580C((uint64_t)__p, (uint64_t)v180, (uint64_t)v128);
  strcpy(v212, "&TCVITRyVCTyJIEGJO\\GROIHyOKGAC");
  sub_2396EFF58((uint64_t)v212, *(int32x4_t *)"GJO\\GROIHyOKGAC", v129, v130, v131);
  v133 = v132;
  v134 = strlen(v132);
  if (v134 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v135 = (void *)v134;
  if (v134 >= 0x17)
  {
    v137 = (v134 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v134 | 7) != 0x17)
      v137 = v134 | 7;
    v138 = v137 + 1;
    v136 = operator new(v137 + 1);
    v178[1] = v135;
    v179 = v138 | 0x8000000000000000;
    v178[0] = v136;
    goto LABEL_112;
  }
  HIBYTE(v179) = v134;
  v136 = v178;
  if (v134)
LABEL_112:
    memmove(v136, v133, (size_t)v135);
  *((_BYTE *)v135 + (_QWORD)v136) = 0;
  v139 = (_QWORD *)operator new();
  *v139 = &off_250AF3D70;
  v139[1] = a1 + 128;
  sub_23961580C((uint64_t)__p, (uint64_t)v178, (uint64_t)v139);
  v211[0] = (int8x16_t)xmmword_239F1035E;
  v211[1] = xmmword_239F1036E;
  sub_2396F06F0((uint64_t)v211, (int32x4_t)xmmword_239F1035E, xmmword_239F1036E, v140, v141);
  v143 = v142;
  v144 = strlen(v142);
  if (v144 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v145 = (void *)v144;
  if (v144 >= 0x17)
  {
    v147 = (v144 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v144 | 7) != 0x17)
      v147 = v144 | 7;
    v148 = v147 + 1;
    v146 = operator new(v147 + 1);
    v176[1] = v145;
    v177 = v148 | 0x8000000000000000;
    v176[0] = v146;
    goto LABEL_120;
  }
  HIBYTE(v177) = v144;
  v146 = v176;
  if (v144)
LABEL_120:
    memmove(v146, v143, (size_t)v145);
  *((_BYTE *)v145 + (_QWORD)v146) = 0;
  v149 = (_QWORD *)operator new();
  *v149 = &off_250AF3DA0;
  v149[1] = a1 + 168;
  sub_23961580C((uint64_t)__p, (uint64_t)v176, (uint64_t)v149);
  strcpy(v210, ".\\[@ZGCKqG@HA");
  sub_23971A32C((uint64_t)v210, v150);
  v152 = v151;
  v153 = strlen(v151);
  if (v153 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v154 = (void *)v153;
  if (v153 >= 0x17)
  {
    v156 = (v153 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v153 | 7) != 0x17)
      v156 = v153 | 7;
    v157 = v156 + 1;
    v155 = operator new(v156 + 1);
    v174[1] = v154;
    v175 = v157 | 0x8000000000000000;
    v174[0] = v155;
    goto LABEL_128;
  }
  HIBYTE(v175) = v153;
  v155 = v174;
  if (v153)
LABEL_128:
    memmove(v155, v152, (size_t)v154);
  *((_BYTE *)v154 + (_QWORD)v155) = 0;
  v158 = (_QWORD *)operator new();
  *v158 = &off_250B002F8;
  v158[1] = a1 + 240;
  sub_23961580C((uint64_t)__p, (uint64_t)v174, (uint64_t)v158);
  v208 = 0x7C704C7776606613;
  strcpy(v209, "}uzt");
  v159 = sub_239510ECC((uint64_t)&v208);
  v160 = strlen(v159);
  if (v160 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v161 = (void *)v160;
  if (v160 >= 0x17)
  {
    v163 = (v160 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v160 | 7) != 0x17)
      v163 = v160 | 7;
    v164 = v163 + 1;
    v162 = operator new(v163 + 1);
    v172[1] = v161;
    v173 = v164 | 0x8000000000000000;
    v172[0] = v162;
    goto LABEL_136;
  }
  HIBYTE(v173) = v160;
  v162 = v172;
  if (v160)
LABEL_136:
    memmove(v162, v159, (size_t)v161);
  *((_BYTE *)v161 + (_QWORD)v162) = 0;
  v165 = (_QWORD *)operator new();
  *v165 = &off_250AF3E30;
  v165[1] = a1 + 456;
  sub_23961580C((uint64_t)__p, (uint64_t)v172, (uint64_t)v165);
  if (SHIBYTE(v173) < 0)
  {
    operator delete(v172[0]);
    if ((SHIBYTE(v175) & 0x80000000) == 0)
    {
LABEL_139:
      if ((SHIBYTE(v177) & 0x80000000) == 0)
        goto LABEL_140;
      goto LABEL_168;
    }
  }
  else if ((SHIBYTE(v175) & 0x80000000) == 0)
  {
    goto LABEL_139;
  }
  operator delete(v174[0]);
  if ((SHIBYTE(v177) & 0x80000000) == 0)
  {
LABEL_140:
    if ((SHIBYTE(v179) & 0x80000000) == 0)
      goto LABEL_141;
    goto LABEL_169;
  }
LABEL_168:
  operator delete(v176[0]);
  if ((SHIBYTE(v179) & 0x80000000) == 0)
  {
LABEL_141:
    if ((SHIBYTE(v181) & 0x80000000) == 0)
      goto LABEL_142;
    goto LABEL_170;
  }
LABEL_169:
  operator delete(v178[0]);
  if ((SHIBYTE(v181) & 0x80000000) == 0)
  {
LABEL_142:
    if ((SHIBYTE(v183) & 0x80000000) == 0)
      goto LABEL_143;
    goto LABEL_171;
  }
LABEL_170:
  operator delete(v180[0]);
  if ((SHIBYTE(v183) & 0x80000000) == 0)
  {
LABEL_143:
    if ((SHIBYTE(v185) & 0x80000000) == 0)
      goto LABEL_144;
    goto LABEL_172;
  }
LABEL_171:
  operator delete(v182[0]);
  if ((SHIBYTE(v185) & 0x80000000) == 0)
  {
LABEL_144:
    if ((SHIBYTE(v187) & 0x80000000) == 0)
      goto LABEL_145;
    goto LABEL_173;
  }
LABEL_172:
  operator delete(v184[0]);
  if ((SHIBYTE(v187) & 0x80000000) == 0)
  {
LABEL_145:
    if ((SHIBYTE(v189) & 0x80000000) == 0)
      goto LABEL_146;
    goto LABEL_174;
  }
LABEL_173:
  operator delete(v186[0]);
  if ((SHIBYTE(v189) & 0x80000000) == 0)
  {
LABEL_146:
    if ((SHIBYTE(v191) & 0x80000000) == 0)
      goto LABEL_147;
    goto LABEL_175;
  }
LABEL_174:
  operator delete(v188[0]);
  if ((SHIBYTE(v191) & 0x80000000) == 0)
  {
LABEL_147:
    if ((SHIBYTE(v193) & 0x80000000) == 0)
      goto LABEL_148;
    goto LABEL_176;
  }
LABEL_175:
  operator delete(v190[0]);
  if ((SHIBYTE(v193) & 0x80000000) == 0)
  {
LABEL_148:
    if ((SHIBYTE(v195) & 0x80000000) == 0)
      goto LABEL_149;
    goto LABEL_177;
  }
LABEL_176:
  operator delete(v192[0]);
  if ((SHIBYTE(v195) & 0x80000000) == 0)
  {
LABEL_149:
    if ((SHIBYTE(v197) & 0x80000000) == 0)
      goto LABEL_150;
    goto LABEL_178;
  }
LABEL_177:
  operator delete(v194[0]);
  if ((SHIBYTE(v197) & 0x80000000) == 0)
  {
LABEL_150:
    if ((SHIBYTE(v199) & 0x80000000) == 0)
      goto LABEL_151;
    goto LABEL_179;
  }
LABEL_178:
  operator delete(v196[0]);
  if ((SHIBYTE(v199) & 0x80000000) == 0)
  {
LABEL_151:
    if ((SHIBYTE(v201) & 0x80000000) == 0)
      goto LABEL_152;
    goto LABEL_180;
  }
LABEL_179:
  operator delete(v198[0]);
  if ((SHIBYTE(v201) & 0x80000000) == 0)
  {
LABEL_152:
    if ((SHIBYTE(v203) & 0x80000000) == 0)
      goto LABEL_153;
LABEL_181:
    operator delete(v202[0]);
    if ((SHIBYTE(v205) & 0x80000000) == 0)
      goto LABEL_154;
    goto LABEL_182;
  }
LABEL_180:
  operator delete(v200[0]);
  if (SHIBYTE(v203) < 0)
    goto LABEL_181;
LABEL_153:
  if ((SHIBYTE(v205) & 0x80000000) == 0)
    goto LABEL_154;
LABEL_182:
  operator delete(__dst[0]);
LABEL_154:
  sub_2395902F0((uint64_t)__p, a2);
  v166 = v207;
  if (v207)
  {
    do
    {
      v167 = v166[5];
      if (v167)
        (*(void (**)(uint64_t))(*(_QWORD *)v167 + 8))(v167);
      v166 = (_QWORD *)*v166;
    }
    while (v166);
    v168 = (void **)v207;
    if (v207)
    {
      do
      {
        v171 = (void **)*v168;
        if (*((char *)v168 + 39) < 0)
          operator delete(v168[2]);
        operator delete(v168);
        v168 = v171;
      }
      while (v171);
    }
  }
  v169 = __p[0];
  __p[0] = 0;
  if (v169)
    operator delete(v169);
  return a2;
}

void sub_239AB4EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,uint64_t a60,char a61)
{
  sub_2395905C0((uint64_t)&a61);
  _Unwind_Resume(a1);
}

void sub_239AB51B8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB51DC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AAA698(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AB5218()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AB5250(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB5274(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AAC3A4(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AB52B0()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AB52E8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB530C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AB07A0(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AB5348()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AB5380(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB53A4(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AB228C((uint64_t)&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AB53F0()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AB5428(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB544C(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AB3898((uint64_t)&v5, (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AB5498()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AB54D0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB54F4(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (!*(_BYTE *)(v3 + 1744))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239AD0424(v3, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AB5560(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int8x16_t *v13;
  size_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int16x8_t v27;
  const char *v28;
  const char *v29;
  size_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  const char *v36;
  size_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void **v45;
  void *v46;
  void **v47;
  void *v49[2];
  unint64_t v50;
  void *v51[2];
  unint64_t v52;
  void *v53[2];
  unint64_t v54;
  void *v55[2];
  unint64_t v56;
  void *__dst[2];
  unint64_t v58;
  void *__p[2];
  void *v60;
  __int128 v61[30];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67[8];
  char v68[16];
  uint64_t v69;
  int v70;
  __int128 v71;
  __int16 v72;
  uint64_t v73;
  int v74;
  char v75;
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 8);
  sub_239AB5C84((uint64_t)v61);
  sub_2396157EC((uint64_t)__p, a3);
  v73 = 0x497A7774797A7116;
  v75 = 0;
  v74 = 2037414015;
  v6 = sub_239510ECC((uint64_t)&v73);
  v7 = strlen(v6);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v58 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v58) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250AFFE18;
  v12[1] = v61;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  v71 = xmmword_239F0F8F2;
  v72 = 29;
  v13 = sub_239A91B18((int8x16_t *)&v71);
  v14 = strlen(v13->i8);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v15 = (void *)v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    v55[1] = v15;
    v56 = v18 | 0x8000000000000000;
    v55[0] = v16;
    goto LABEL_16;
  }
  HIBYTE(v56) = v14;
  v16 = v55;
  if (v14)
LABEL_16:
    memmove(v16, v13, (size_t)v15);
  *((_BYTE *)v15 + (_QWORD)v16) = 0;
  v19 = (_QWORD *)operator new();
  *v19 = &off_250AFFF98;
  v19[1] = &v63;
  sub_23961580C((uint64_t)__p, (uint64_t)v55, (uint64_t)v19);
  v69 = 0x360A06050C1B69;
  v70 = 397063;
  v20 = sub_23958E4C8((uint64_t)&v69);
  v21 = strlen(v20);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v53[1] = v22;
    v54 = v25 | 0x8000000000000000;
    v53[0] = v23;
    goto LABEL_24;
  }
  HIBYTE(v54) = v21;
  v23 = v53;
  if (v21)
LABEL_24:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AFFFC8;
  v26[1] = &v62;
  sub_23961580C((uint64_t)__p, (uint64_t)v53, (uint64_t)v26);
  strcpy(v68, "V$#8\"?;3\t?809");
  sub_23971A32C((uint64_t)v68, v27);
  v29 = v28;
  v30 = strlen(v28);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v31 = (void *)v30;
  if (v30 >= 0x17)
  {
    v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v33 = v30 | 7;
    v34 = v33 + 1;
    v32 = operator new(v33 + 1);
    v51[1] = v31;
    v52 = v34 | 0x8000000000000000;
    v51[0] = v32;
    goto LABEL_32;
  }
  HIBYTE(v52) = v30;
  v32 = v51;
  if (v30)
LABEL_32:
    memmove(v32, v29, (size_t)v31);
  *((_BYTE *)v31 + (_QWORD)v32) = 0;
  v35 = (_QWORD *)operator new();
  *v35 = &off_250AFFFF8;
  v35[1] = &v64;
  sub_23961580C((uint64_t)__p, (uint64_t)v51, (uint64_t)v35);
  v66 = 0x2428142F2E383E4BLL;
  strcpy(v67, "%-\",");
  v36 = sub_239510ECC((uint64_t)&v66);
  v37 = strlen(v36);
  if (v37 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v38 = (void *)v37;
  if (v37 >= 0x17)
  {
    v40 = (v37 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v37 | 7) != 0x17)
      v40 = v37 | 7;
    v41 = v40 + 1;
    v39 = operator new(v40 + 1);
    v49[1] = v38;
    v50 = v41 | 0x8000000000000000;
    v49[0] = v39;
    goto LABEL_40;
  }
  HIBYTE(v50) = v37;
  v39 = v49;
  if (v37)
LABEL_40:
    memmove(v39, v36, (size_t)v38);
  *((_BYTE *)v38 + (_QWORD)v39) = 0;
  v42 = (_QWORD *)operator new();
  *v42 = &off_250B00058;
  v42[1] = &v65;
  sub_23961580C((uint64_t)__p, (uint64_t)v49, (uint64_t)v42);
  if (SHIBYTE(v50) < 0)
  {
    operator delete(v49[0]);
    if ((SHIBYTE(v52) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v54) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_61;
    }
  }
  else if ((SHIBYTE(v52) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v51[0]);
  if ((SHIBYTE(v54) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v56) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_62:
    operator delete(v55[0]);
    if ((SHIBYTE(v58) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_63;
  }
LABEL_61:
  operator delete(v53[0]);
  if (SHIBYTE(v56) < 0)
    goto LABEL_62;
LABEL_45:
  if ((SHIBYTE(v58) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_63:
  operator delete(__dst[0]);
LABEL_46:
  sub_23959479C((uint64_t)__p, a2);
  v43 = v60;
  if (v60)
  {
    do
    {
      v44 = v43[5];
      if (v44)
        (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
      v43 = (_QWORD *)*v43;
    }
    while (v43);
    v45 = (void **)v60;
    if (v60)
    {
      do
      {
        v47 = (void **)*v45;
        if (*((char *)v45 + 39) < 0)
          operator delete(v45[2]);
        operator delete(v45);
        v45 = v47;
      }
      while (v47);
    }
  }
  v46 = __p[0];
  __p[0] = 0;
  if (v46)
    operator delete(v46);
  if (*(_BYTE *)(v5 + 1744))
  {
    sub_239AB5E40(v5, v61);
  }
  else
  {
    sub_239A5F6A8(v5, v61);
    *(_BYTE *)(v5 + 1744) = 1;
  }
  sub_239A615DC((uint64_t)v61);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AB5B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  sub_2395905C0((uint64_t)&a40);
  sub_239A615DC((uint64_t)&a46);
  _Unwind_Resume(a1);
}

void sub_239AB5C5C()
{
  JUMPOUT(0x239AB5C24);
}

uint64_t sub_239AB5C84(uint64_t a1)
{
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v10;

  *(_QWORD *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 88) = _Q1;
  *(_OWORD *)(a1 + 104) = _Q1;
  *(_OWORD *)(a1 + 120) = _Q1;
  *(_QWORD *)(a1 + 136) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 152) = _Q1;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = _Q1;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 232) = _Q1;
  *(_QWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 320) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = a1 + 312;
  *(_QWORD *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 344) = 0;
  *(_QWORD *)(a1 + 328) = a1 + 336;
  *(_DWORD *)(a1 + 352) = 0;
  *(_WORD *)(a1 + 356) = 0;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_QWORD *)(a1 + 440) = 0;
  *(_DWORD *)(a1 + 448) = 2;
  *(_QWORD *)(a1 + 460) = 0;
  *(_QWORD *)(a1 + 452) = 0;
  *(_DWORD *)(a1 + 468) = 0;
  __asm { FMOV            V1.2S, #-1.0 }
  *(_QWORD *)(a1 + 472) = _Q1;
  *(_DWORD *)(a1 + 544) = 0;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_DWORD *)(a1 + 584) = 1065353216;
  *(_QWORD *)(a1 + 640) = 0;
  *(_QWORD *)(a1 + 648) = 0;
  *(_QWORD *)(a1 + 632) = 0;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_DWORD *)(a1 + 624) = 0;
  *(_BYTE *)(a1 + 656) = 1;
  *(std::chrono::system_clock::time_point *)(a1 + 592) = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a1 + 620) = (float)((float)v10 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a1 + 656) = 1;
  sub_239AD012C(a1 + 664);
  return a1;
}

void sub_239AB5E0C(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v6;

  v6 = *v4;
  if (*v4)
  {
    *(_QWORD *)(v1 + 640) = v6;
    operator delete(v6);
  }
  sub_239420950(v3);
  sub_239A62F00(v2);
  sub_239A62F40(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239AB5E40(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v4 = *a2;
  v5 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v4;
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  v9 = a2[7];
  v10 = a2[8];
  v11 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v11;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v10;
  if ((__int128 *)a1 != a2)
  {
    sub_23945D3D0((_QWORD *)(a1 + 176), *((char **)a2 + 22), *((char **)a2 + 23), (uint64_t)(*((_QWORD *)a2 + 23) - *((_QWORD *)a2 + 22)) >> 3);
    *(_OWORD *)(a1 + 200) = *(__int128 *)((char *)a2 + 200);
    v12 = *(__int128 *)((char *)a2 + 216);
    v13 = *(__int128 *)((char *)a2 + 232);
    v14 = *(__int128 *)((char *)a2 + 248);
    *(_OWORD *)(a1 + 264) = *(__int128 *)((char *)a2 + 264);
    *(_OWORD *)(a1 + 248) = v14;
    *(_OWORD *)(a1 + 232) = v13;
    *(_OWORD *)(a1 + 216) = v12;
    sub_23945D3D0((_QWORD *)(a1 + 280), *((char **)a2 + 35), *((char **)a2 + 36), (uint64_t)(*((_QWORD *)a2 + 36) - *((_QWORD *)a2 + 35)) >> 3);
    sub_239AB6004(a1 + 304, *((_QWORD **)a2 + 38), (_QWORD *)a2 + 39);
    sub_239AB6004(a1 + 328, *((_QWORD **)a2 + 41), (_QWORD *)a2 + 42);
    *(_OWORD *)(a1 + 352) = a2[22];
    sub_23945D3D0((_QWORD *)(a1 + 368), *((char **)a2 + 46), *((char **)a2 + 47), (uint64_t)(*((_QWORD *)a2 + 47) - *((_QWORD *)a2 + 46)) >> 3);
    v15 = *(__int128 *)((char *)a2 + 408);
    *(_OWORD *)(a1 + 392) = *(__int128 *)((char *)a2 + 392);
    *(_OWORD *)(a1 + 408) = v15;
    v16 = *(__int128 *)((char *)a2 + 424);
    v17 = *(__int128 *)((char *)a2 + 440);
    v18 = *(__int128 *)((char *)a2 + 456);
    *(_QWORD *)(a1 + 472) = *((_QWORD *)a2 + 59);
    *(_OWORD *)(a1 + 440) = v17;
    *(_OWORD *)(a1 + 456) = v18;
    *(_OWORD *)(a1 + 424) = v16;
    *(_OWORD *)(a1 + 480) = a2[30];
    sub_23945D3D0((_QWORD *)(a1 + 496), *((char **)a2 + 62), *((char **)a2 + 63), (uint64_t)(*((_QWORD *)a2 + 63) - *((_QWORD *)a2 + 62)) >> 3);
    sub_23945D3D0((_QWORD *)(a1 + 520), *((char **)a2 + 65), *((char **)a2 + 66), (uint64_t)(*((_QWORD *)a2 + 66) - *((_QWORD *)a2 + 65)) >> 3);
    *(_DWORD *)(a1 + 544) = *((_DWORD *)a2 + 136);
    *(_DWORD *)(a1 + 584) = *((_DWORD *)a2 + 146);
    sub_239AB62F0((_QWORD *)(a1 + 552), *((uint64_t **)a2 + 71));
  }
  *(_QWORD *)(a1 + 592) = *((_QWORD *)a2 + 74);
  *(_QWORD *)(a1 + 600) = *((_QWORD *)a2 + 75);
  *(_QWORD *)(a1 + 608) = *((_QWORD *)a2 + 76);
  v19 = *((_QWORD *)a2 + 77);
  *(_DWORD *)(a1 + 624) = *((_DWORD *)a2 + 156);
  *(_QWORD *)(a1 + 616) = v19;
  if ((__int128 *)a1 != a2)
    sub_23942156C((_QWORD *)(a1 + 632), *((char **)a2 + 79), *((char **)a2 + 80), (uint64_t)(*((_QWORD *)a2 + 80) - *((_QWORD *)a2 + 79)) >> 2);
  *(_BYTE *)(a1 + 656) = *((_BYTE *)a2 + 656);
  sub_239AB643C(a1 + 664, (__int128 *)((char *)a2 + 664));
  return a1;
}

void sub_239AB6004(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t **v16;
  uint64_t **v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *i;
  uint64_t **v24;
  uint64_t *v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t **v29;
  uint64_t **v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t *v34;

  v4 = a2;
  if (*(_QWORD *)(a1 + 16))
  {
    v6 = *(uint64_t **)a1;
    v8 = (uint64_t **)(a1 + 8);
    v7 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)a1 = a1 + 8;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    v9 = v6[1] ? (uint64_t *)v6[1] : v6;
    if (v9)
    {
      v10 = (uint64_t *)v9[2];
      if (v10)
      {
        v11 = (uint64_t *)*v10;
        if ((uint64_t *)*v10 == v9)
        {
          *v10 = 0;
          while (1)
          {
            v34 = (uint64_t *)v10[1];
            if (!v34)
              break;
            do
            {
              v10 = v34;
              v34 = (uint64_t *)*v34;
            }
            while (v34);
          }
        }
        else
        {
          for (v10[1] = 0; v11; v11 = (uint64_t *)v10[1])
          {
            do
            {
              v10 = v11;
              v11 = (uint64_t *)*v11;
            }
            while (v11);
          }
        }
      }
      if (a2 != a3)
      {
        v12 = v9;
        v13 = v4;
        do
        {
          v9 = v10;
          v14 = v13[4];
          v12[4] = v14;
          v15 = *v8;
          v16 = (uint64_t **)(a1 + 8);
          v17 = (uint64_t **)(a1 + 8);
          if (*v8)
          {
            do
            {
              while (1)
              {
                v16 = (uint64_t **)v15;
                if (v14 >= v15[4])
                  break;
                v15 = (uint64_t *)*v15;
                v17 = v16;
                if (!*v16)
                  goto LABEL_20;
              }
              v15 = (uint64_t *)v15[1];
            }
            while (v15);
            v17 = v16 + 1;
          }
LABEL_20:
          *v12 = 0;
          v12[1] = 0;
          v12[2] = (uint64_t)v16;
          *v17 = v12;
          v18 = **(_QWORD **)a1;
          if (v18)
          {
            *(_QWORD *)a1 = v18;
            v12 = *v17;
          }
          sub_2394213B8(*(uint64_t **)(a1 + 8), v12);
          ++*(_QWORD *)(a1 + 16);
          if (v10)
          {
            v10 = (uint64_t *)v10[2];
            if (v10)
            {
              v21 = (uint64_t *)*v10;
              if ((uint64_t *)*v10 == v9)
              {
                *v10 = 0;
                while (1)
                {
                  v22 = (uint64_t *)v10[1];
                  if (!v22)
                    break;
                  do
                  {
                    v10 = v22;
                    v22 = (uint64_t *)*v22;
                  }
                  while (v22);
                }
              }
              else
              {
                for (v10[1] = 0; v21; v21 = (uint64_t *)v10[1])
                {
                  do
                  {
                    v10 = v21;
                    v21 = (uint64_t *)*v21;
                  }
                  while (v21);
                }
              }
            }
          }
          else
          {
            v10 = 0;
          }
          v19 = (_QWORD *)v13[1];
          if (v19)
          {
            do
            {
              v4 = v19;
              v19 = (_QWORD *)*v19;
            }
            while (v19);
          }
          else
          {
            do
            {
              v4 = (_QWORD *)v13[2];
              v20 = *v4 == (_QWORD)v13;
              v13 = v4;
            }
            while (!v20);
          }
          if (!v9)
            break;
          v12 = v9;
          v13 = v4;
        }
        while (v4 != a3);
      }
      sub_239421038(a1, v9);
      if (v10)
      {
        for (i = (uint64_t *)v10[2]; i; i = (uint64_t *)i[2])
          v10 = i;
        sub_239421038(a1, v10);
      }
    }
  }
  if (v4 != a3)
  {
    v24 = (uint64_t **)(a1 + 8);
    do
    {
      v25 = (uint64_t *)operator new(0x28uLL);
      v26 = v25;
      v27 = v4[4];
      v25[4] = v27;
      v28 = *v24;
      v29 = (uint64_t **)(a1 + 8);
      v30 = (uint64_t **)(a1 + 8);
      if (*v24)
      {
        do
        {
          while (1)
          {
            v29 = (uint64_t **)v28;
            if (v27 >= v28[4])
              break;
            v28 = (uint64_t *)*v28;
            v30 = v29;
            if (!*v29)
              goto LABEL_56;
          }
          v28 = (uint64_t *)v28[1];
        }
        while (v28);
        v30 = v29 + 1;
      }
LABEL_56:
      *v25 = 0;
      v25[1] = 0;
      v25[2] = (uint64_t)v29;
      *v30 = v25;
      v31 = **(_QWORD **)a1;
      if (v31)
      {
        *(_QWORD *)a1 = v31;
        v26 = *v30;
      }
      sub_2394213B8(*(uint64_t **)(a1 + 8), v26);
      ++*(_QWORD *)(a1 + 16);
      v32 = (_QWORD *)v4[1];
      if (v32)
      {
        do
        {
          v33 = v32;
          v32 = (_QWORD *)*v32;
        }
        while (v32);
      }
      else
      {
        do
        {
          v33 = (_QWORD *)v4[2];
          v20 = *v33 == (_QWORD)v4;
          v4 = v33;
        }
        while (!v20);
      }
      v4 = v33;
    }
    while (v33 != a3);
  }
}

void sub_239AB62F0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t *v15;

  v4 = a1[1];
  if (!v4)
    goto LABEL_7;
  for (i = 0; i != v4; ++i)
    *(_QWORD *)(*a1 + 8 * i) = 0;
  v6 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v6)
  {
    while (a2)
    {
      v6[2] = a2[2];
      v7 = *(_OWORD *)(a2 + 3);
      v8 = *(_OWORD *)(a2 + 5);
      v9 = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(v6 + 9) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(v6 + 7) = v9;
      *(_OWORD *)(v6 + 5) = v8;
      *(_OWORD *)(v6 + 3) = v7;
      v10 = (uint64_t *)*v6;
      sub_239A997F8((uint64_t)a1, v6);
      a2 = (uint64_t *)*a2;
      v6 = v10;
      if (!v10)
        goto LABEL_7;
    }
    do
    {
      v15 = (uint64_t *)*v6;
      operator delete(v6);
      v6 = v15;
    }
    while (v15);
  }
  else
  {
LABEL_7:
    while (a2)
    {
      v11 = operator new(0x58uLL);
      *(_QWORD *)v11 = 0;
      v11[1] = *((_OWORD *)a2 + 1);
      v12 = *((_OWORD *)a2 + 2);
      v13 = *((_OWORD *)a2 + 3);
      v14 = *((_OWORD *)a2 + 4);
      *((_QWORD *)v11 + 10) = a2[10];
      v11[3] = v13;
      v11[4] = v14;
      v11[2] = v12;
      *((_QWORD *)v11 + 1) = *((_QWORD *)v11 + 2);
      sub_239A997F8((uint64_t)a1, v11);
      a2 = (uint64_t *)*a2;
    }
  }
}

void sub_239AB63F4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_239AB6414(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239AB6428(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239AB643C(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;
  __int128 *v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 *v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 *v48;
  _QWORD *v49;
  uint64_t v50;
  __int128 *v51;
  _QWORD *v52;
  uint64_t v53;
  __int128 v54;
  _QWORD v56[3];
  _QWORD *v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v4 = *a2;
  v5 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v4;
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  v9 = a2[7];
  v10 = a2[8];
  v11 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v11;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v10;
  v12 = a2[11];
  v13 = a2[12];
  v14 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v14;
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 192) = v13;
  *(_OWORD *)(a1 + 240) = a2[15];
  v15 = a2[16];
  v16 = a2[17];
  v17 = a2[18];
  *(_OWORD *)(a1 + 297) = *(__int128 *)((char *)a2 + 297);
  *(_OWORD *)(a1 + 272) = v16;
  *(_OWORD *)(a1 + 288) = v17;
  *(_OWORD *)(a1 + 256) = v15;
  v18 = (_QWORD *)(a1 + 320);
  v19 = (__int128 *)*((_QWORD *)a2 + 43);
  if (v19)
  {
    if (v19 == a2 + 20)
    {
      v57 = v56;
      (*(void (**)(__int128 *, _QWORD *))(*((_QWORD *)a2 + 40) + 24))(a2 + 20, v56);
    }
    else
    {
      v57 = (_QWORD *)(*(uint64_t (**)(__int128 *))(*(_QWORD *)v19 + 16))(v19);
    }
  }
  else
  {
    v57 = 0;
  }
  sub_23965A910(v56, v18);
  v20 = v57;
  if (v57 == v56)
  {
    v21 = 4;
    v20 = v56;
  }
  else
  {
    if (!v57)
      goto LABEL_11;
    v21 = 5;
  }
  (*(void (**)(void))(*v20 + 8 * v21))();
LABEL_11:
  v22 = (__int128 *)*((_QWORD *)a2 + 47);
  if (v22)
  {
    if (v22 == a2 + 22)
    {
      v57 = v56;
      (*(void (**)(__int128 *, _QWORD *))(*((_QWORD *)a2 + 44) + 24))(a2 + 22, v56);
    }
    else
    {
      v57 = (_QWORD *)(*(uint64_t (**)(__int128 *))(*(_QWORD *)v22 + 16))(v22);
    }
  }
  else
  {
    v57 = 0;
  }
  sub_239AB6860(v56, (_QWORD *)(a1 + 352));
  v23 = v57;
  if (v57 == v56)
  {
    v24 = 4;
    v23 = v56;
  }
  else
  {
    if (!v57)
      goto LABEL_21;
    v24 = 5;
  }
  (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_21:
  v25 = a2[24];
  *(_OWORD *)(a1 + 396) = *(__int128 *)((char *)a2 + 396);
  *(_OWORD *)(a1 + 384) = v25;
  *(_QWORD *)(a1 + 416) = *((_QWORD *)a2 + 52);
  *(_DWORD *)(a1 + 424) = *((_DWORD *)a2 + 106);
  std::string::operator=((std::string *)(a1 + 432), (const std::string *)a2 + 18);
  v26 = *(__int128 *)((char *)a2 + 456);
  v27 = *(__int128 *)((char *)a2 + 472);
  *(_OWORD *)(a1 + 481) = *(__int128 *)((char *)a2 + 481);
  *(_OWORD *)(a1 + 456) = v26;
  *(_OWORD *)(a1 + 472) = v27;
  v29 = *(__int128 *)((char *)a2 + 616);
  v28 = *(__int128 *)((char *)a2 + 632);
  v30 = *(__int128 *)((char *)a2 + 600);
  *(_OWORD *)(a1 + 642) = *(__int128 *)((char *)a2 + 642);
  *(_OWORD *)(a1 + 600) = v30;
  *(_OWORD *)(a1 + 616) = v29;
  *(_OWORD *)(a1 + 632) = v28;
  v32 = *(__int128 *)((char *)a2 + 536);
  v31 = *(__int128 *)((char *)a2 + 552);
  v33 = *(__int128 *)((char *)a2 + 584);
  *(_OWORD *)(a1 + 568) = *(__int128 *)((char *)a2 + 568);
  *(_OWORD *)(a1 + 584) = v33;
  *(_OWORD *)(a1 + 536) = v32;
  *(_OWORD *)(a1 + 552) = v31;
  v34 = *(__int128 *)((char *)a2 + 520);
  *(_OWORD *)(a1 + 504) = *(__int128 *)((char *)a2 + 504);
  *(_OWORD *)(a1 + 520) = v34;
  if ((__int128 *)a1 != a2)
    sub_23945D3D0((_QWORD *)(a1 + 664), *((char **)a2 + 83), *((char **)a2 + 84), (uint64_t)(*((_QWORD *)a2 + 84) - *((_QWORD *)a2 + 83)) >> 3);
  v35 = a2[43];
  *(_WORD *)(a1 + 704) = *((_WORD *)a2 + 352);
  *(_OWORD *)(a1 + 688) = v35;
  v36 = *(__int128 *)((char *)a2 + 824);
  v38 = *(__int128 *)((char *)a2 + 776);
  v37 = *(__int128 *)((char *)a2 + 792);
  *(_OWORD *)(a1 + 808) = *(__int128 *)((char *)a2 + 808);
  *(_OWORD *)(a1 + 824) = v36;
  *(_OWORD *)(a1 + 776) = v38;
  *(_OWORD *)(a1 + 792) = v37;
  v39 = *(__int128 *)((char *)a2 + 888);
  v41 = *(__int128 *)((char *)a2 + 840);
  v40 = *(__int128 *)((char *)a2 + 856);
  *(_OWORD *)(a1 + 872) = *(__int128 *)((char *)a2 + 872);
  *(_OWORD *)(a1 + 888) = v39;
  *(_OWORD *)(a1 + 840) = v41;
  *(_OWORD *)(a1 + 856) = v40;
  v42 = *(__int128 *)((char *)a2 + 712);
  v43 = *(__int128 *)((char *)a2 + 728);
  v44 = *(__int128 *)((char *)a2 + 760);
  *(_OWORD *)(a1 + 744) = *(__int128 *)((char *)a2 + 744);
  *(_OWORD *)(a1 + 760) = v44;
  *(_OWORD *)(a1 + 712) = v42;
  *(_OWORD *)(a1 + 728) = v43;
  *(_OWORD *)(a1 + 904) = *(__int128 *)((char *)a2 + 904);
  v45 = *(__int128 *)((char *)a2 + 920);
  v46 = *(__int128 *)((char *)a2 + 936);
  v47 = *(__int128 *)((char *)a2 + 952);
  *(_OWORD *)(a1 + 961) = *(__int128 *)((char *)a2 + 961);
  *(_OWORD *)(a1 + 936) = v46;
  *(_OWORD *)(a1 + 952) = v47;
  *(_OWORD *)(a1 + 920) = v45;
  v48 = (__int128 *)*((_QWORD *)a2 + 126);
  if (v48)
  {
    if (v48 == (__int128 *)((char *)a2 + 984))
    {
      v57 = v56;
      (*(void (**)(uint64_t, _QWORD *))(*((_QWORD *)a2 + 123) + 24))((uint64_t)a2 + 984, v56);
    }
    else
    {
      v57 = (_QWORD *)(*(uint64_t (**)(__int128 *))(*(_QWORD *)v48 + 16))(v48);
    }
  }
  else
  {
    v57 = 0;
  }
  sub_23965A910(v56, (_QWORD *)(a1 + 984));
  v49 = v57;
  if (v57 == v56)
  {
    v50 = 4;
    v49 = v56;
  }
  else
  {
    if (!v57)
      goto LABEL_33;
    v50 = 5;
  }
  (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_33:
  v51 = (__int128 *)*((_QWORD *)a2 + 130);
  if (v51)
  {
    if (v51 == (__int128 *)((char *)a2 + 1016))
    {
      v57 = v56;
      (*(void (**)(uint64_t, _QWORD *))(*((_QWORD *)a2 + 127) + 24))((uint64_t)a2 + 1016, v56);
    }
    else
    {
      v57 = (_QWORD *)(*(uint64_t (**)(__int128 *))(*(_QWORD *)v51 + 16))(v51);
    }
  }
  else
  {
    v57 = 0;
  }
  sub_239AB6860(v56, (_QWORD *)(a1 + 1016));
  v52 = v57;
  if (v57 == v56)
  {
    v53 = 4;
    v52 = v56;
    goto LABEL_42;
  }
  if (v57)
  {
    v53 = 5;
LABEL_42:
    (*(void (**)(void))(*v52 + 8 * v53))();
  }
  v54 = *(__int128 *)((char *)a2 + 1048);
  *(_OWORD *)(a1 + 1060) = *(__int128 *)((char *)a2 + 1060);
  *(_OWORD *)(a1 + 1048) = v54;
  return a1;
}

_QWORD *sub_239AB6860(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_239AB69C8(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

void sub_239AB69D8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB69FC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AC1F3C(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AB6A38(uint64_t a1, uint64_t *a2, char a3)
{
  sub_239AB6A78(*(_DWORD **)(a1 + 8), a2, a3);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

uint64_t *sub_239AB6A78(_DWORD *a1, uint64_t *a2, char a3)
{
  int8x8_t *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  const char *v13;
  size_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int8x16_t v20;
  double v21;
  int32x4_t v22;
  const char *v23;
  const char *v24;
  size_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int8x16_t *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  double v38;
  int32x4_t v39;
  const char *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  double v48;
  int32x4_t v49;
  const char *v50;
  const char *v51;
  size_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  double v58;
  double v59;
  int16x8_t v60;
  const char *v61;
  const char *v62;
  size_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  double v69;
  int32x4_t v70;
  const char *v71;
  const char *v72;
  size_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  double v79;
  int16x8_t v80;
  int16x8_t v81;
  const char *v82;
  const char *v83;
  size_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  double v90;
  double v91;
  int16x8_t v92;
  const char *v93;
  const char *v94;
  size_t v95;
  void *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  const char *v101;
  size_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  int8x16_t v108;
  double v109;
  int32x4_t v110;
  const char *v111;
  const char *v112;
  size_t v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  const char *v119;
  const char *v120;
  size_t v121;
  void *v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  int8x16_t v127;
  double v128;
  int32x4_t v129;
  const char *v130;
  const char *v131;
  size_t v132;
  void *v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  const char *v138;
  const char *v139;
  size_t v140;
  void *v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  int8x16_t v146;
  double v147;
  int32x4_t v148;
  const char *v149;
  const char *v150;
  size_t v151;
  void *v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  int8x16_t v157;
  double v158;
  int32x4_t v159;
  const char *v160;
  const char *v161;
  size_t v162;
  void *v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  int8x16_t v168;
  double v169;
  int32x4_t v170;
  const char *v171;
  const char *v172;
  size_t v173;
  void *v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  int8x16_t v179;
  double v180;
  int32x4_t v181;
  const char *v182;
  const char *v183;
  size_t v184;
  void *v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  int8x16_t *v190;
  size_t v191;
  void *v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  int8x16_t v197;
  double v198;
  int32x4_t v199;
  const char *v200;
  const char *v201;
  size_t v202;
  void *v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  int32x4_t v208;
  double v209;
  int32x4_t v210;
  unsigned __int8 *v211;
  size_t v212;
  void *v213;
  void *v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  double v218;
  int32x4_t v219;
  const char *v220;
  const char *v221;
  size_t v222;
  void *v223;
  void *v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  int8x16_t *v228;
  size_t v229;
  void *v230;
  void *v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  int8x16_t v235;
  double v236;
  int32x4_t v237;
  const char *v238;
  const char *v239;
  size_t v240;
  void *v241;
  void *v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  double v246;
  int32x4_t v247;
  const char *v248;
  const char *v249;
  size_t v250;
  void *v251;
  void *v252;
  uint64_t v253;
  uint64_t v254;
  _QWORD *v255;
  int8x16_t v256;
  double v257;
  int32x4_t v258;
  const char *v259;
  const char *v260;
  size_t v261;
  void *v262;
  void *v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;
  int8x16_t v267;
  double v268;
  int32x4_t v269;
  const char *v270;
  const char *v271;
  size_t v272;
  void *v273;
  void *v274;
  uint64_t v275;
  uint64_t v276;
  _QWORD *v277;
  int16x8_t v278;
  const char *v279;
  const char *v280;
  size_t v281;
  void *v282;
  void *v283;
  uint64_t v284;
  uint64_t v285;
  _QWORD *v286;
  const char *v287;
  const char *v288;
  size_t v289;
  void *v290;
  void *v291;
  uint64_t v292;
  uint64_t v293;
  _QWORD *v294;
  int8x16_t v295;
  double v296;
  int32x4_t v297;
  const char *v298;
  const char *v299;
  size_t v300;
  void *v301;
  void *v302;
  uint64_t v303;
  uint64_t v304;
  _QWORD *v305;
  int8x16_t v306;
  double v307;
  int32x4_t v308;
  const char *v309;
  const char *v310;
  size_t v311;
  void *v312;
  void *v313;
  uint64_t v314;
  uint64_t v315;
  _QWORD *v316;
  int8x16_t v317;
  double v318;
  int32x4_t v319;
  const char *v320;
  const char *v321;
  size_t v322;
  void *v323;
  void *v324;
  uint64_t v325;
  uint64_t v326;
  _QWORD *v327;
  int8x16_t v328;
  double v329;
  int32x4_t v330;
  const char *v331;
  const char *v332;
  size_t v333;
  void *v334;
  void *v335;
  uint64_t v336;
  uint64_t v337;
  _QWORD *v338;
  int8x16_t v339;
  double v340;
  int32x4_t v341;
  const char *v342;
  const char *v343;
  size_t v344;
  void *v345;
  void *v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  int8x16_t v350;
  double v351;
  int32x4_t v352;
  const char *v353;
  const char *v354;
  size_t v355;
  void *v356;
  void *v357;
  uint64_t v358;
  uint64_t v359;
  _QWORD *v360;
  int16x8_t v361;
  int16x8_t v362;
  const char *v363;
  const char *v364;
  size_t v365;
  void *v366;
  void *v367;
  uint64_t v368;
  uint64_t v369;
  _QWORD *v370;
  int8x16_t *v371;
  size_t v372;
  void *v373;
  void *v374;
  uint64_t v375;
  uint64_t v376;
  _QWORD *v377;
  double v378;
  double v379;
  int16x8_t v380;
  const char *v381;
  const char *v382;
  size_t v383;
  void *v384;
  void *v385;
  uint64_t v386;
  uint64_t v387;
  _QWORD *v388;
  int8x16_t v389;
  double v390;
  int32x4_t v391;
  const char *v392;
  const char *v393;
  size_t v394;
  void *v395;
  void *v396;
  uint64_t v397;
  uint64_t v398;
  _QWORD *v399;
  int8x16_t v400;
  double v401;
  int32x4_t v402;
  const char *v403;
  const char *v404;
  size_t v405;
  void *v406;
  void *v407;
  uint64_t v408;
  uint64_t v409;
  _QWORD *v410;
  int v411;
  _QWORD *v412;
  uint64_t v413;
  void **v414;
  void *v415;
  void **v417;
  void *v418[2];
  unint64_t v419;
  void *v420[2];
  unint64_t v421;
  void *v422[2];
  unint64_t v423;
  void *v424[2];
  unint64_t v425;
  void *v426[2];
  unint64_t v427;
  void *v428[2];
  unint64_t v429;
  void *v430[2];
  unint64_t v431;
  void *v432[2];
  unint64_t v433;
  void *v434[2];
  unint64_t v435;
  void *v436[2];
  unint64_t v437;
  void *v438[2];
  unint64_t v439;
  void *v440[2];
  unint64_t v441;
  void *v442[2];
  unint64_t v443;
  void *v444[2];
  unint64_t v445;
  void *v446[2];
  unint64_t v447;
  void *v448[2];
  unint64_t v449;
  void *v450[2];
  unint64_t v451;
  void *v452[2];
  unint64_t v453;
  void *v454[2];
  unint64_t v455;
  void *v456[2];
  unint64_t v457;
  void *v458[2];
  unint64_t v459;
  void *v460[2];
  unint64_t v461;
  void *v462[2];
  unint64_t v463;
  void *v464[2];
  unint64_t v465;
  void *v466[2];
  unint64_t v467;
  void *v468[2];
  unint64_t v469;
  void *v470[2];
  unint64_t v471;
  void *v472[2];
  unint64_t v473;
  void *v474[2];
  unint64_t v475;
  void *v476[2];
  unint64_t v477;
  void *v478[2];
  unint64_t v479;
  void *v480[2];
  unint64_t v481;
  void *v482[2];
  unint64_t v483;
  void *v484[2];
  unint64_t v485;
  void *v486[2];
  unint64_t v487;
  void *v488[2];
  unint64_t v489;
  void *v490[2];
  unint64_t v491;
  void *v492[2];
  unint64_t v493;
  void *v494[2];
  unint64_t v495;
  void *v496[2];
  unint64_t v497;
  void *__dst[2];
  unint64_t v499;
  uint64_t v500;
  void *__p[2];
  void *v502;
  char v503[32];
  _OWORD v504[2];
  char v505[48];
  __int128 v506;
  __int16 v507;
  char v508[48];
  _OWORD v509[2];
  char v510[32];
  unsigned __int8 v511[32];
  char v512[32];
  char v513[32];
  _OWORD v514[2];
  uint64_t v515;
  int v516;
  __int16 v517;
  char v518;
  uint64_t v519;
  char v520[8];
  _OWORD v521[2];
  _OWORD v522[2];
  _OWORD v523[2];
  char v524;
  _BYTE v525[27];
  __int128 v526;
  __int16 v527;
  _OWORD v528[2];
  unsigned __int8 v529[32];
  char v530[32];
  int8x16_t v531[2];
  _OWORD v532[2];
  char v533[32];
  char v534[32];
  __int128 v535;
  uint64_t v536;
  __int128 v537;
  char v538;
  __int128 v539;
  uint64_t v540;
  uint64_t v541;
  char v542[8];
  char v543[32];
  uint64_t v544;
  int v545;
  char v546;
  _OWORD v547[2];
  int v548;
  __int128 v549;
  _OWORD v550[2];
  _OWORD v551[2];
  _OWORD v552[2];
  __int16 v553;
  char v554[32];
  _OWORD v555[2];
  __int128 v556;
  __int16 v557;
  char v558[32];
  __int128 v559;
  char v560;
  uint64_t v561;
  __int16 v562;
  uint64_t v563;

  v563 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v500 = 0;
  v561 = 0x2B222F04363D285BLL;
  v562 = 62;
  v5 = sub_23950FF84((int8x8_t *)&v561);
  v6 = strlen((const char *)v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    v499 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    __dst[1] = v7;
    goto LABEL_8;
  }
  HIBYTE(v499) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF240;
  v11[1] = (char *)&v500 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v559 = xmmword_239F0F9A0;
  v560 = 0;
  sub_2396EFA24((uint64_t)&v559);
  v13 = v12;
  v14 = strlen(v12);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v15 = (void *)v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    v497 = v18 | 0x8000000000000000;
    v496[0] = v16;
    v496[1] = v15;
    goto LABEL_16;
  }
  HIBYTE(v497) = v14;
  v16 = v496;
  if (v14)
LABEL_16:
    memmove(v16, v13, (size_t)v15);
  *((_BYTE *)v15 + (_QWORD)v16) = 0;
  v19 = (_QWORD *)operator new();
  *v19 = &off_250ADF240;
  v19[1] = &v500;
  sub_23961580C((uint64_t)__p, (uint64_t)v496, (uint64_t)v19);
  strcpy(v558, "+^XNt[YBDYt[DXNXtBMtJ]JBGJIGN");
  sub_2396F0EE8((uint64_t)v558, *(int32x4_t *)"NXtBMtJ]JBGJIGN", v20, v21, v22);
  v24 = v23;
  v25 = strlen(v23);
  if (v25 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v26 = (void *)v25;
  if (v25 >= 0x17)
  {
    v28 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v25 | 7) != 0x17)
      v28 = v25 | 7;
    v29 = v28 + 1;
    v27 = operator new(v28 + 1);
    v495 = v29 | 0x8000000000000000;
    v494[0] = v27;
    v494[1] = v26;
    goto LABEL_24;
  }
  HIBYTE(v495) = v25;
  v27 = v494;
  if (v25)
LABEL_24:
    memmove(v27, v24, (size_t)v26);
  *((_BYTE *)v26 + (_QWORD)v27) = 0;
  v30 = (_QWORD *)operator new();
  *v30 = &off_250AE0220;
  v30[1] = a1 + 10;
  sub_23961580C((uint64_t)__p, (uint64_t)v494, (uint64_t)v30);
  v556 = xmmword_239F0F9CF;
  v557 = 2;
  v31 = sub_239A91B18((int8x16_t *)&v556);
  v32 = strlen(v31->i8);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v493 = v36 | 0x8000000000000000;
    v492[0] = v34;
    v492[1] = v33;
    goto LABEL_32;
  }
  HIBYTE(v493) = v32;
  v34 = v492;
  if (v32)
LABEL_32:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250AE0220;
  v37[1] = (char *)a1 + 41;
  sub_23961580C((uint64_t)__p, (uint64_t)v492, (uint64_t)v37);
  v555[0] = xmmword_239F0F9E1;
  v555[1] = xmmword_239F0F9F1;
  sub_2396F06F0((uint64_t)v555, (int32x4_t)xmmword_239F0F9E1, xmmword_239F0F9F1, v38, v39);
  v41 = v40;
  v42 = strlen(v40);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v491 = v46 | 0x8000000000000000;
    v490[0] = v44;
    v490[1] = v43;
    goto LABEL_40;
  }
  HIBYTE(v491) = v42;
  v44 = v490;
  if (v42)
LABEL_40:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250ADF360;
  v47[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v490, (uint64_t)v47);
  strcpy(v554, "5XTMjGT[FTVjPGGZGjGPYTA\\CPjEZFP");
  sub_2396F06F0((uint64_t)v554, *(int32x4_t *)"5XTMjGT[FTVjPGGZGjGPYTA\\CPjEZFP", *(int8x16_t *)"GjGPYTA\\CPjEZFP", v48, v49);
  v51 = v50;
  v52 = strlen(v50);
  if (v52 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v53 = (void *)v52;
  if (v52 >= 0x17)
  {
    v55 = (v52 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v52 | 7) != 0x17)
      v55 = v52 | 7;
    v56 = v55 + 1;
    v54 = operator new(v55 + 1);
    v489 = v56 | 0x8000000000000000;
    v488[0] = v54;
    v488[1] = v53;
    goto LABEL_48;
  }
  HIBYTE(v489) = v52;
  v54 = v488;
  if (v52)
LABEL_48:
    memmove(v54, v51, (size_t)v53);
  *((_BYTE *)v53 + (_QWORD)v54) = 0;
  v57 = (_QWORD *)operator new();
  *v57 = &off_250ADF360;
  v57[1] = a1 + 14;
  sub_23961580C((uint64_t)__p, (uint64_t)v488, (uint64_t)v57);
  v552[0] = xmmword_239F0FA21;
  v552[1] = *(_OWORD *)dbl_239F0FA31;
  v553 = 25;
  sub_2396F0120((unsigned __int8 *)v552, (int16x8_t)xmmword_239F0FA21, dbl_239F0FA31[0], v58, v59, v60);
  v62 = v61;
  v63 = strlen(v61);
  if (v63 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v64 = (void *)v63;
  if (v63 >= 0x17)
  {
    v66 = (v63 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v63 | 7) != 0x17)
      v66 = v63 | 7;
    v67 = v66 + 1;
    v65 = operator new(v66 + 1);
    v487 = v67 | 0x8000000000000000;
    v486[0] = v65;
    v486[1] = v64;
    goto LABEL_56;
  }
  HIBYTE(v487) = v63;
  v65 = v486;
  if (v63)
LABEL_56:
    memmove(v65, v62, (size_t)v64);
  *((_BYTE *)v64 + (_QWORD)v65) = 0;
  v68 = (_QWORD *)operator new();
  *v68 = &off_250ADF360;
  v68[1] = a1 + 38;
  sub_23961580C((uint64_t)__p, (uint64_t)v486, (uint64_t)v68);
  v551[0] = xmmword_239F0FA43;
  v551[1] = xmmword_239F0FA53;
  sub_2396F06F0((uint64_t)v551, (int32x4_t)xmmword_239F0FA43, xmmword_239F0FA53, v69, v70);
  v72 = v71;
  v73 = strlen(v71);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = (void *)v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    v485 = v77 | 0x8000000000000000;
    v484[0] = v75;
    v484[1] = v74;
    goto LABEL_64;
  }
  HIBYTE(v485) = v73;
  v75 = v484;
  if (v73)
LABEL_64:
    memmove(v75, v72, (size_t)v74);
  *((_BYTE *)v74 + (_QWORD)v75) = 0;
  v78 = (_QWORD *)operator new();
  *v78 = &off_250ADF360;
  v78[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v484, (uint64_t)v78);
  v549 = xmmword_239F0FA63;
  v550[0] = *(_OWORD *)dbl_239F0FA73;
  *(_OWORD *)((char *)v550 + 12) = *(_OWORD *)((char *)&dbl_239F0FA73[1] + 4);
  sub_2396F0FE4((unsigned __int8 *)&v549, *(double *)((char *)&dbl_239F0FA73[1] + 4), dbl_239F0FA73[0], v79, v80, v81);
  v83 = v82;
  v84 = strlen(v82);
  if (v84 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v85 = (void *)v84;
  if (v84 >= 0x17)
  {
    v87 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v84 | 7) != 0x17)
      v87 = v84 | 7;
    v88 = v87 + 1;
    v86 = operator new(v87 + 1);
    v483 = v88 | 0x8000000000000000;
    v482[0] = v86;
    v482[1] = v85;
    goto LABEL_72;
  }
  HIBYTE(v483) = v84;
  v86 = v482;
  if (v84)
LABEL_72:
    memmove(v86, v83, (size_t)v85);
  *((_BYTE *)v85 + (_QWORD)v86) = 0;
  v89 = (_QWORD *)operator new();
  *v89 = &off_250ADF360;
  v89[1] = a1 + 162;
  sub_23961580C((uint64_t)__p, (uint64_t)v482, (uint64_t)v89);
  v547[0] = xmmword_239F0FA8F;
  v547[1] = *(_OWORD *)dbl_239F0FA9F;
  v548 = 661258;
  sub_2396F01D4((unsigned __int8 *)v547, (int16x8_t)xmmword_239F0FA8F, dbl_239F0FA9F[0], v90, v91, v92);
  v94 = v93;
  v95 = strlen(v93);
  if (v95 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v96 = (void *)v95;
  if (v95 >= 0x17)
  {
    v98 = (v95 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v95 | 7) != 0x17)
      v98 = v95 | 7;
    v99 = v98 + 1;
    v97 = operator new(v98 + 1);
    v481 = v99 | 0x8000000000000000;
    v480[0] = v97;
    v480[1] = v96;
    goto LABEL_80;
  }
  HIBYTE(v481) = v95;
  v97 = v480;
  if (v95)
LABEL_80:
    memmove(v97, v94, (size_t)v96);
  *((_BYTE *)v96 + (_QWORD)v97) = 0;
  v100 = (_QWORD *)operator new();
  *v100 = &off_250ADF360;
  v100[1] = a1 + 56;
  sub_23961580C((uint64_t)__p, (uint64_t)v480, (uint64_t)v100);
  v544 = 0x1B011D36041C0769;
  v546 = 0;
  v545 = 437061644;
  v101 = sub_239510ECC((uint64_t)&v544);
  v102 = strlen(v101);
  if (v102 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v103 = (void *)v102;
  if (v102 >= 0x17)
  {
    v105 = (v102 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v102 | 7) != 0x17)
      v105 = v102 | 7;
    v106 = v105 + 1;
    v104 = operator new(v105 + 1);
    v479 = v106 | 0x8000000000000000;
    v478[0] = v104;
    v478[1] = v103;
    goto LABEL_88;
  }
  HIBYTE(v479) = v102;
  v104 = v478;
  if (v102)
LABEL_88:
    memmove(v104, v101, (size_t)v103);
  *((_BYTE *)v103 + (_QWORD)v104) = 0;
  v107 = (_QWORD *)operator new();
  *v107 = &off_250AFFF08;
  v107[1] = a1 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v478, (uint64_t)v107);
  strcpy(v543, "V:957:\t4#82:3\t?;713\t8#;");
  sub_2396F1A4C((uint64_t)v543, *(int32x4_t *)"V:957:\t4#82:3\t?;713\t8#;", v108, v109, v110);
  v112 = v111;
  v113 = strlen(v111);
  if (v113 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v114 = (void *)v113;
  if (v113 >= 0x17)
  {
    v116 = (v113 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v113 | 7) != 0x17)
      v116 = v113 | 7;
    v117 = v116 + 1;
    v115 = operator new(v116 + 1);
    v477 = v117 | 0x8000000000000000;
    v476[0] = v115;
    v476[1] = v114;
    goto LABEL_96;
  }
  HIBYTE(v477) = v113;
  v115 = v476;
  if (v113)
LABEL_96:
    memmove(v115, v112, (size_t)v114);
  *((_BYTE *)v114 + (_QWORD)v115) = 0;
  v118 = (_QWORD *)operator new();
  *v118 = &off_250AFFF08;
  v118[1] = a1 + 58;
  sub_23961580C((uint64_t)__p, (uint64_t)v476, (uint64_t)v118);
  v541 = 0x142C222D2524284BLL;
  strcpy(v542, ")>%/'.");
  sub_23958E5E0((uint64_t)&v541);
  v120 = v119;
  v121 = strlen(v119);
  if (v121 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v122 = (void *)v121;
  if (v121 >= 0x17)
  {
    v124 = (v121 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v121 | 7) != 0x17)
      v124 = v121 | 7;
    v125 = v124 + 1;
    v123 = operator new(v124 + 1);
    v475 = v125 | 0x8000000000000000;
    v474[0] = v123;
    v474[1] = v122;
    goto LABEL_104;
  }
  HIBYTE(v475) = v121;
  v123 = v474;
  if (v121)
LABEL_104:
    memmove(v123, v120, (size_t)v122);
  *((_BYTE *)v122 + (_QWORD)v123) = 0;
  v126 = (_QWORD *)operator new();
  *v126 = &off_250B00178;
  v126[1] = a1 + 60;
  sub_23961580C((uint64_t)__p, (uint64_t)v474, (uint64_t)v126);
  v539 = xmmword_239F0FC2A;
  v540 = 0x81F0C16150925;
  sub_2396F1A4C((uint64_t)&v539, (int32x4_t)xmmword_239F0FC2A, v127, v128, v129);
  v131 = v130;
  v132 = strlen(v130);
  if (v132 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v133 = (void *)v132;
  if (v132 >= 0x17)
  {
    v135 = (v132 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v132 | 7) != 0x17)
      v135 = v132 | 7;
    v136 = v135 + 1;
    v134 = operator new(v135 + 1);
    v473 = v136 | 0x8000000000000000;
    v472[0] = v134;
    v472[1] = v133;
    goto LABEL_112;
  }
  HIBYTE(v473) = v132;
  v134 = v472;
  if (v132)
LABEL_112:
    memmove(v134, v131, (size_t)v133);
  *((_BYTE *)v133 + (_QWORD)v134) = 0;
  v137 = (_QWORD *)operator new();
  *v137 = &off_250AE0220;
  v137[1] = a1 + 126;
  sub_23961580C((uint64_t)__p, (uint64_t)v472, (uint64_t)v137);
  v537 = xmmword_239F0FC42;
  v538 = 0;
  sub_2396EFA24((uint64_t)&v537);
  v139 = v138;
  v140 = strlen(v138);
  if (v140 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v141 = (void *)v140;
  if (v140 >= 0x17)
  {
    v143 = (v140 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v140 | 7) != 0x17)
      v143 = v140 | 7;
    v144 = v143 + 1;
    v142 = operator new(v143 + 1);
    v471 = v144 | 0x8000000000000000;
    v470[0] = v142;
    v470[1] = v141;
    goto LABEL_120;
  }
  HIBYTE(v471) = v140;
  v142 = v470;
  if (v140)
LABEL_120:
    memmove(v142, v139, (size_t)v141);
  *((_BYTE *)v141 + (_QWORD)v142) = 0;
  v145 = (_QWORD *)operator new();
  *v145 = &off_250AE0220;
  v145[1] = (char *)a1 + 505;
  sub_23961580C((uint64_t)__p, (uint64_t)v470, (uint64_t)v145);
  v535 = xmmword_239F0FC53;
  v536 = 0xA030D0E03060ELL;
  sub_2396F1A4C((uint64_t)&v535, (int32x4_t)xmmword_239F0FC53, v146, v147, v148);
  v150 = v149;
  v151 = strlen(v149);
  if (v151 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v152 = (void *)v151;
  if (v151 >= 0x17)
  {
    v154 = (v151 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v151 | 7) != 0x17)
      v154 = v151 | 7;
    v155 = v154 + 1;
    v153 = operator new(v154 + 1);
    v469 = v155 | 0x8000000000000000;
    v468[0] = v153;
    v468[1] = v152;
    goto LABEL_128;
  }
  HIBYTE(v469) = v151;
  v153 = v468;
  if (v151)
LABEL_128:
    memmove(v153, v150, (size_t)v152);
  *((_BYTE *)v152 + (_QWORD)v153) = 0;
  v156 = (_QWORD *)operator new();
  *v156 = &off_250AE0220;
  v156[1] = (char *)a1 + 506;
  sub_23961580C((uint64_t)__p, (uint64_t)v468, (uint64_t)v156);
  strcpy(v534, "'RTBxWUNHUxWHTBTxAHUxFKN@IJBIS");
  sub_2396EFF58((uint64_t)v534, *(int32x4_t *)"TxAHUxFKN@IJBIS", v157, v158, v159);
  v161 = v160;
  v162 = strlen(v160);
  if (v162 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v163 = (void *)v162;
  if (v162 >= 0x17)
  {
    v165 = (v162 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v162 | 7) != 0x17)
      v165 = v162 | 7;
    v166 = v165 + 1;
    v164 = operator new(v165 + 1);
    v467 = v166 | 0x8000000000000000;
    v466[0] = v164;
    v466[1] = v163;
    goto LABEL_136;
  }
  HIBYTE(v467) = v162;
  v164 = v466;
  if (v162)
LABEL_136:
    memmove(v164, v161, (size_t)v163);
  *((_BYTE *)v163 + (_QWORD)v164) = 0;
  v167 = (_QWORD *)operator new();
  *v167 = &off_250AE0220;
  v167[1] = (char *)a1 + 507;
  sub_23961580C((uint64_t)__p, (uint64_t)v466, (uint64_t)v167);
  strcpy(v533, "X-+=\a::7 \a1>\a9.9149:4=");
  sub_2396EFBE0((uint64_t)v533, *(int32x4_t *)"X-+=\a::7 \a1>\a9.9149:4=", v168, v169, v170);
  v172 = v171;
  v173 = strlen(v171);
  if (v173 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v174 = (void *)v173;
  if (v173 >= 0x17)
  {
    v176 = (v173 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v173 | 7) != 0x17)
      v176 = v173 | 7;
    v177 = v176 + 1;
    v175 = operator new(v176 + 1);
    v465 = v177 | 0x8000000000000000;
    v464[0] = v175;
    v464[1] = v174;
    goto LABEL_144;
  }
  HIBYTE(v465) = v173;
  v175 = v464;
  if (v173)
LABEL_144:
    memmove(v175, v172, (size_t)v174);
  *((_BYTE *)v174 + (_QWORD)v175) = 0;
  v178 = (_QWORD *)operator new();
  *v178 = &off_250AE0220;
  v178[1] = a1 + 148;
  sub_23961580C((uint64_t)__p, (uint64_t)v464, (uint64_t)v178);
  v532[0] = xmmword_239F0FCA1;
  *(_OWORD *)((char *)v532 + 9) = *(__int128 *)((char *)&xmmword_239F0FCA1 + 9);
  sub_2396EFC88((uint64_t)v532, *(int32x4_t *)((char *)&xmmword_239F0FCA1 + 9), v179, v180, v181);
  v183 = v182;
  v184 = strlen(v182);
  if (v184 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v185 = (void *)v184;
  if (v184 >= 0x17)
  {
    v187 = (v184 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v184 | 7) != 0x17)
      v187 = v184 | 7;
    v188 = v187 + 1;
    v186 = operator new(v187 + 1);
    v463 = v188 | 0x8000000000000000;
    v462[0] = v186;
    v462[1] = v185;
    goto LABEL_152;
  }
  HIBYTE(v463) = v184;
  v186 = v462;
  if (v184)
LABEL_152:
    memmove(v186, v183, (size_t)v185);
  *((_BYTE *)v185 + (_QWORD)v186) = 0;
  v189 = (_QWORD *)operator new();
  *v189 = &off_250ADF360;
  v189[1] = a1 + 150;
  sub_23961580C((uint64_t)__p, (uint64_t)v462, (uint64_t)v189);
  strcpy(v531[0].i8, "\nhherUxofkrUxk~ce");
  v190 = sub_239A91B18(v531);
  v191 = strlen(v190->i8);
  if (v191 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v192 = (void *)v191;
  if (v191 >= 0x17)
  {
    v194 = (v191 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v191 | 7) != 0x17)
      v194 = v191 | 7;
    v195 = v194 + 1;
    v193 = operator new(v194 + 1);
    v461 = v195 | 0x8000000000000000;
    v460[0] = v193;
    v460[1] = v192;
    goto LABEL_160;
  }
  HIBYTE(v461) = v191;
  v193 = v460;
  if (v191)
LABEL_160:
    memmove(v193, v190, (size_t)v192);
  *((_BYTE *)v192 + (_QWORD)v193) = 0;
  v196 = (_QWORD *)operator new();
  *v196 = &off_250ADF360;
  v196[1] = a1 + 152;
  sub_23961580C((uint64_t)__p, (uint64_t)v460, (uint64_t)v196);
  strcpy(v530, "-OOBUrNEHNFrY_LNFr\\XLADYT");
  sub_239A93C04((unsigned __int8 *)v530, *(int32x4_t *)"FrY_LNFr\\XLADYT", v197, v198, v199);
  v201 = v200;
  v202 = strlen(v200);
  if (v202 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v203 = (void *)v202;
  if (v202 >= 0x17)
  {
    v205 = (v202 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v202 | 7) != 0x17)
      v205 = v202 | 7;
    v206 = v205 + 1;
    v204 = operator new(v205 + 1);
    v458[1] = v203;
    v459 = v206 | 0x8000000000000000;
    v458[0] = v204;
    goto LABEL_168;
  }
  HIBYTE(v459) = v202;
  v204 = v458;
  if (v202)
LABEL_168:
    memmove(v204, v201, (size_t)v203);
  *((_BYTE *)v203 + (_QWORD)v204) = 0;
  v207 = (_QWORD *)operator new();
  *v207 = &off_250AE0220;
  v207[1] = a1 + 154;
  sub_23961580C((uint64_t)__p, (uint64_t)v458, (uint64_t)v207);
  *(_OWORD *)v529 = xmmword_239F0FCE6;
  *(_QWORD *)&v529[14] = 0x1F0E1B160F1D14;
  v211 = sub_239A90BEC(v529, (int8x16_t)xmmword_239F0FCE6, v208, v209, v210);
  v212 = strlen((const char *)v211);
  if (v212 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v213 = (void *)v212;
  if (v212 >= 0x17)
  {
    v215 = (v212 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v212 | 7) != 0x17)
      v215 = v212 | 7;
    v216 = v215 + 1;
    v214 = operator new(v215 + 1);
    v456[1] = v213;
    v457 = v216 | 0x8000000000000000;
    v456[0] = v214;
    goto LABEL_176;
  }
  HIBYTE(v457) = v212;
  v214 = v456;
  if (v212)
LABEL_176:
    memmove(v214, v211, (size_t)v213);
  *((_BYTE *)v213 + (_QWORD)v214) = 0;
  v217 = (_QWORD *)operator new();
  *v217 = &off_250AE0220;
  v217[1] = a1 + 164;
  sub_23961580C((uint64_t)__p, (uint64_t)v456, (uint64_t)v217);
  v528[0] = xmmword_239F0FCFC;
  v528[1] = xmmword_239F0FD0C;
  sub_2396F06F0((uint64_t)v528, (int32x4_t)xmmword_239F0FCFC, xmmword_239F0FD0C, v218, v219);
  v221 = v220;
  v222 = strlen(v220);
  if (v222 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v223 = (void *)v222;
  if (v222 >= 0x17)
  {
    v225 = (v222 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v222 | 7) != 0x17)
      v225 = v222 | 7;
    v226 = v225 + 1;
    v224 = operator new(v225 + 1);
    v454[1] = v223;
    v455 = v226 | 0x8000000000000000;
    v454[0] = v224;
    goto LABEL_184;
  }
  HIBYTE(v455) = v222;
  v224 = v454;
  if (v222)
LABEL_184:
    memmove(v224, v221, (size_t)v223);
  *((_BYTE *)v223 + (_QWORD)v224) = 0;
  v227 = (_QWORD *)operator new();
  *v227 = &off_250AFFF08;
  v227[1] = a1 + 104;
  sub_23961580C((uint64_t)__p, (uint64_t)v454, (uint64_t)v227);
  v526 = xmmword_239F11843;
  v527 = 19;
  v228 = sub_239A91B18((int8x16_t *)&v526);
  v229 = strlen(v228->i8);
  if (v229 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v230 = (void *)v229;
  if (v229 >= 0x17)
  {
    v232 = (v229 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v229 | 7) != 0x17)
      v232 = v229 | 7;
    v233 = v232 + 1;
    v231 = operator new(v232 + 1);
    v452[1] = v230;
    v453 = v233 | 0x8000000000000000;
    v452[0] = v231;
    goto LABEL_192;
  }
  HIBYTE(v453) = v229;
  v231 = v452;
  if (v229)
LABEL_192:
    memmove(v231, v228, (size_t)v230);
  *((_BYTE *)v230 + (_QWORD)v231) = 0;
  v234 = (_QWORD *)operator new();
  *v234 = &off_250AFFF08;
  v234[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v452, (uint64_t)v234);
  *(_OWORD *)v525 = xmmword_239F0FD1C;
  *(_OWORD *)&v525[11] = *(__int128 *)((char *)&xmmword_239F0FD1C + 11);
  sub_2396F1974((uint64_t)v525, *(int32x4_t *)((char *)&xmmword_239F0FD1C + 11), v235, v236, v237);
  v239 = v238;
  v240 = strlen(v238);
  if (v240 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v241 = (void *)v240;
  if (v240 >= 0x17)
  {
    v243 = (v240 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v240 | 7) != 0x17)
      v243 = v240 | 7;
    v244 = v243 + 1;
    v242 = operator new(v243 + 1);
    v450[1] = v241;
    v451 = v244 | 0x8000000000000000;
    v450[0] = v242;
    goto LABEL_200;
  }
  HIBYTE(v451) = v240;
  v242 = v450;
  if (v240)
LABEL_200:
    memmove(v242, v239, (size_t)v241);
  *((_BYTE *)v241 + (_QWORD)v242) = 0;
  v245 = (_QWORD *)operator new();
  *v245 = &off_250AFFF08;
  v245[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v450, (uint64_t)v245);
  v523[0] = xmmword_239F0FD37;
  v523[1] = xmmword_239F0FD47;
  v524 = 0;
  sub_2396EFE38((uint64_t)v523, (int32x4_t)xmmword_239F0FD37, xmmword_239F0FD47, v246, v247);
  v249 = v248;
  v250 = strlen(v248);
  if (v250 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v251 = (void *)v250;
  if (v250 >= 0x17)
  {
    v253 = (v250 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v250 | 7) != 0x17)
      v253 = v250 | 7;
    v254 = v253 + 1;
    v252 = operator new(v253 + 1);
    v448[1] = v251;
    v449 = v254 | 0x8000000000000000;
    v448[0] = v252;
    goto LABEL_208;
  }
  HIBYTE(v449) = v250;
  v252 = v448;
  if (v250)
LABEL_208:
    memmove(v252, v249, (size_t)v251);
  *((_BYTE *)v251 + (_QWORD)v252) = 0;
  v255 = (_QWORD *)operator new();
  *v255 = &off_250ADF360;
  v255[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v448, (uint64_t)v255);
  v522[0] = xmmword_239F0FD58;
  *(_OWORD *)((char *)v522 + 15) = *(__int128 *)((char *)&xmmword_239F0FD58 + 15);
  sub_2396EFF58((uint64_t)v522, *(int32x4_t *)((char *)&xmmword_239F0FD58 + 15), v256, v257, v258);
  v260 = v259;
  v261 = strlen(v259);
  if (v261 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v262 = (void *)v261;
  if (v261 >= 0x17)
  {
    v264 = (v261 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v261 | 7) != 0x17)
      v264 = v261 | 7;
    v265 = v264 + 1;
    v263 = operator new(v264 + 1);
    v446[1] = v262;
    v447 = v265 | 0x8000000000000000;
    v446[0] = v263;
    goto LABEL_216;
  }
  HIBYTE(v447) = v261;
  v263 = v446;
  if (v261)
LABEL_216:
    memmove(v263, v260, (size_t)v262);
  *((_BYTE *)v262 + (_QWORD)v263) = 0;
  v266 = (_QWORD *)operator new();
  *v266 = &off_250ADF360;
  v266[1] = a1 + 6;
  sub_23961580C((uint64_t)__p, (uint64_t)v446, (uint64_t)v266);
  v521[0] = xmmword_239F0FD77;
  *(_OWORD *)((char *)v521 + 9) = *(__int128 *)((char *)&xmmword_239F0FD77 + 9);
  sub_2396EFC88((uint64_t)v521, *(int32x4_t *)((char *)&xmmword_239F0FD77 + 9), v267, v268, v269);
  v271 = v270;
  v272 = strlen(v270);
  if (v272 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v273 = (void *)v272;
  if (v272 >= 0x17)
  {
    v275 = (v272 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v272 | 7) != 0x17)
      v275 = v272 | 7;
    v276 = v275 + 1;
    v274 = operator new(v275 + 1);
    v444[1] = v273;
    v445 = v276 | 0x8000000000000000;
    v444[0] = v274;
    goto LABEL_224;
  }
  HIBYTE(v445) = v272;
  v274 = v444;
  if (v272)
LABEL_224:
    memmove(v274, v271, (size_t)v273);
  *((_BYTE *)v273 + (_QWORD)v274) = 0;
  v277 = (_QWORD *)operator new();
  *v277 = &off_250ADF360;
  v277[1] = a1 + 146;
  sub_23961580C((uint64_t)__p, (uint64_t)v444, (uint64_t)v277);
  v519 = 0x4179777870717D1ELL;
  strcpy(v520, "l{rq}");
  sub_23971A32C((uint64_t)&v519, v278);
  v280 = v279;
  v281 = strlen(v279);
  if (v281 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v282 = (void *)v281;
  if (v281 >= 0x17)
  {
    v284 = (v281 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v281 | 7) != 0x17)
      v284 = v281 | 7;
    v285 = v284 + 1;
    v283 = operator new(v284 + 1);
    v442[1] = v282;
    v443 = v285 | 0x8000000000000000;
    v442[0] = v283;
    goto LABEL_232;
  }
  HIBYTE(v443) = v281;
  v283 = v442;
  if (v281)
LABEL_232:
    memmove(v283, v280, (size_t)v282);
  *((_BYTE *)v282 + (_QWORD)v283) = 0;
  v286 = (_QWORD *)operator new();
  *v286 = &off_250B001A8;
  v286[1] = a1 + 106;
  sub_23961580C((uint64_t)__p, (uint64_t)v442, (uint64_t)v286);
  v515 = 0x221A141B13121E7DLL;
  v518 = 0;
  v517 = 4123;
  v516 = 236917018;
  sub_23958E5E0((uint64_t)&v515);
  v288 = v287;
  v289 = strlen(v287);
  if (v289 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v290 = (void *)v289;
  if (v289 >= 0x17)
  {
    v292 = (v289 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v289 | 7) != 0x17)
      v292 = v289 | 7;
    v293 = v292 + 1;
    v291 = operator new(v292 + 1);
    v440[1] = v290;
    v441 = v293 | 0x8000000000000000;
    v440[0] = v291;
    goto LABEL_240;
  }
  HIBYTE(v441) = v289;
  v291 = v440;
  if (v289)
LABEL_240:
    memmove(v291, v288, (size_t)v290);
  *((_BYTE *)v290 + (_QWORD)v291) = 0;
  v294 = (_QWORD *)operator new();
  *v294 = &off_250B001D8;
  v294[1] = a1 + 178;
  sub_23961580C((uint64_t)__p, (uint64_t)v440, (uint64_t)v294);
  v514[0] = xmmword_239F0FFD9;
  *(_OWORD *)((char *)v514 + 9) = *(__int128 *)((char *)&xmmword_239F0FFD9 + 9);
  sub_2396EFC88((uint64_t)v514, *(int32x4_t *)((char *)&xmmword_239F0FFD9 + 9), v295, v296, v297);
  v299 = v298;
  v300 = strlen(v298);
  if (v300 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v301 = (void *)v300;
  if (v300 >= 0x17)
  {
    v303 = (v300 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v300 | 7) != 0x17)
      v303 = v300 | 7;
    v304 = v303 + 1;
    v302 = operator new(v303 + 1);
    v438[1] = v301;
    v439 = v304 | 0x8000000000000000;
    v438[0] = v302;
    goto LABEL_248;
  }
  HIBYTE(v439) = v300;
  v302 = v438;
  if (v300)
LABEL_248:
    memmove(v302, v299, (size_t)v301);
  *((_BYTE *)v301 + (_QWORD)v302) = 0;
  v305 = (_QWORD *)operator new();
  *v305 = &off_250AE0220;
  v305[1] = (char *)a1 + 657;
  sub_23961580C((uint64_t)__p, (uint64_t)v438, (uint64_t)v305);
  strcpy(v513, "(AOFGZMLwAEIOMwAL[");
  sub_23958E450((uint64_t)v513, *(int32x4_t *)"(AOFGZMLwAEIOMwAL[", v306, v307, v308);
  v310 = v309;
  v311 = strlen(v309);
  if (v311 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v312 = (void *)v311;
  if (v311 >= 0x17)
  {
    v314 = (v311 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v311 | 7) != 0x17)
      v314 = v311 | 7;
    v315 = v314 + 1;
    v313 = operator new(v314 + 1);
    v436[1] = v312;
    v437 = v315 | 0x8000000000000000;
    v436[0] = v313;
    goto LABEL_256;
  }
  HIBYTE(v437) = v311;
  v313 = v436;
  if (v311)
LABEL_256:
    memmove(v313, v310, (size_t)v312);
  *((_BYTE *)v312 + (_QWORD)v313) = 0;
  v316 = (_QWORD *)operator new();
  *v316 = &off_250ADF630;
  v316[1] = a1 + 166;
  sub_23961580C((uint64_t)__p, (uint64_t)v436, (uint64_t)v316);
  strcpy(v512, "W:>9\b$\"442$$\b>:602$\b9\":");
  sub_2396F1A4C((uint64_t)v512, *(int32x4_t *)"W:>9\b$\"442$$\b>:602$\b9\":", v317, v318, v319);
  v321 = v320;
  v322 = strlen(v320);
  if (v322 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v323 = (void *)v322;
  if (v322 >= 0x17)
  {
    v325 = (v322 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v322 | 7) != 0x17)
      v325 = v322 | 7;
    v326 = v325 + 1;
    v324 = operator new(v325 + 1);
    v434[1] = v323;
    v435 = v326 | 0x8000000000000000;
    v434[0] = v324;
    goto LABEL_264;
  }
  HIBYTE(v435) = v322;
  v324 = v434;
  if (v322)
LABEL_264:
    memmove(v324, v321, (size_t)v323);
  *((_BYTE *)v323 + (_QWORD)v324) = 0;
  v327 = (_QWORD *)operator new();
  *v327 = &off_250AFFF08;
  v327[1] = a1 + 172;
  sub_23961580C((uint64_t)__p, (uint64_t)v434, (uint64_t)v327);
  *(_OWORD *)v511 = xmmword_239F1001D;
  *(_OWORD *)&v511[10] = *(__int128 *)((char *)&xmmword_239F1001D + 10);
  sub_239A93C04(v511, *(int32x4_t *)((char *)&xmmword_239F1001D + 10), v328, v329, v330);
  v332 = v331;
  v333 = strlen(v331);
  if (v333 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v334 = (void *)v333;
  if (v333 >= 0x17)
  {
    v336 = (v333 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v333 | 7) != 0x17)
      v336 = v333 | 7;
    v337 = v336 + 1;
    v335 = operator new(v336 + 1);
    v432[1] = v334;
    v433 = v337 | 0x8000000000000000;
    v432[0] = v335;
    goto LABEL_272;
  }
  HIBYTE(v433) = v333;
  v335 = v432;
  if (v333)
LABEL_272:
    memmove(v335, v332, (size_t)v334);
  *((_BYTE *)v334 + (_QWORD)v335) = 0;
  v338 = (_QWORD *)operator new();
  *v338 = &off_250AFFF08;
  v338[1] = a1 + 174;
  sub_23961580C((uint64_t)__p, (uint64_t)v432, (uint64_t)v338);
  strcpy(v510, ":W[BeSTYH_I\\WeNHS[VeTOW");
  sub_2396F1A4C((uint64_t)v510, *(int32x4_t *)":W[BeSTYH_I\\WeNHS[VeTOW", v339, v340, v341);
  v343 = v342;
  v344 = strlen(v342);
  if (v344 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v345 = (void *)v344;
  if (v344 >= 0x17)
  {
    v347 = (v344 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v344 | 7) != 0x17)
      v347 = v344 | 7;
    v348 = v347 + 1;
    v346 = operator new(v347 + 1);
    v430[1] = v345;
    v431 = v348 | 0x8000000000000000;
    v430[0] = v346;
    goto LABEL_280;
  }
  HIBYTE(v431) = v344;
  v346 = v430;
  if (v344)
LABEL_280:
    memmove(v346, v343, (size_t)v345);
  *((_BYTE *)v345 + (_QWORD)v346) = 0;
  v349 = (_QWORD *)operator new();
  *v349 = &off_250AFFF08;
  v349[1] = a1 + 158;
  sub_23961580C((uint64_t)__p, (uint64_t)v430, (uint64_t)v349);
  v509[0] = xmmword_239F1004F;
  *(_OWORD *)((char *)v509 + 13) = *(__int128 *)((char *)&xmmword_239F1004F + 13);
  sub_2396EFD48((uint64_t)v509, *(int32x4_t *)((char *)&xmmword_239F1004F + 13), v350, v351, v352);
  v354 = v353;
  v355 = strlen(v353);
  if (v355 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v356 = (void *)v355;
  if (v355 >= 0x17)
  {
    v358 = (v355 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v355 | 7) != 0x17)
      v358 = v355 | 7;
    v359 = v358 + 1;
    v357 = operator new(v358 + 1);
    v428[1] = v356;
    v429 = v359 | 0x8000000000000000;
    v428[0] = v357;
    goto LABEL_288;
  }
  HIBYTE(v429) = v355;
  v357 = v428;
  if (v355)
LABEL_288:
    memmove(v357, v354, (size_t)v356);
  *((_BYTE *)v356 + (_QWORD)v357) = 0;
  v360 = (_QWORD *)operator new();
  *v360 = &off_250AE0220;
  v360[1] = a1 + 160;
  sub_23961580C((uint64_t)__p, (uint64_t)v428, (uint64_t)v360);
  strcpy(v508, "/_@\\JpNCFHABJA[p@Z[CFJ]pKF\\[NALJp[G]J\\G@CK");
  sub_2396F0B4C((unsigned __int8 *)v508, *(double *)"[NALJp[G]J\\G@CK", *(double *)"@Z[CFJ]pKF\\[NALJp[G]J\\G@CK", v361, v362);
  v364 = v363;
  v365 = strlen(v363);
  if (v365 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v366 = (void *)v365;
  if (v365 >= 0x17)
  {
    v368 = (v365 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v365 | 7) != 0x17)
      v368 = v365 | 7;
    v369 = v368 + 1;
    v367 = operator new(v368 + 1);
    v426[1] = v366;
    v427 = v369 | 0x8000000000000000;
    v426[0] = v367;
    goto LABEL_296;
  }
  HIBYTE(v427) = v365;
  v367 = v426;
  if (v365)
LABEL_296:
    memmove(v367, v364, (size_t)v366);
  *((_BYTE *)v366 + (_QWORD)v367) = 0;
  v370 = (_QWORD *)operator new();
  *v370 = &off_250ADF360;
  v370[1] = a1 + 144;
  sub_23961580C((uint64_t)__p, (uint64_t)v426, (uint64_t)v370);
  v506 = xmmword_239F100E0;
  v507 = 109;
  v371 = sub_239A91B18((int8x16_t *)&v506);
  v372 = strlen(v371->i8);
  if (v372 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v373 = (void *)v372;
  if (v372 >= 0x17)
  {
    v375 = (v372 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v372 | 7) != 0x17)
      v375 = v372 | 7;
    v376 = v375 + 1;
    v374 = operator new(v375 + 1);
    v424[1] = v373;
    v425 = v376 | 0x8000000000000000;
    v424[0] = v374;
    goto LABEL_304;
  }
  HIBYTE(v425) = v372;
  v374 = v424;
  if (v372)
LABEL_304:
    memmove(v374, v371, (size_t)v373);
  *((_BYTE *)v373 + (_QWORD)v374) = 0;
  v377 = (_QWORD *)operator new();
  *v377 = &off_250B00238;
  v377[1] = a1 + 128;
  sub_23961580C((uint64_t)__p, (uint64_t)v424, (uint64_t)v377);
  strcpy(v505, "5F]TGPjZW_PVAjAGT[FSZGXj\\[jFTXPjFPRXP[A");
  sub_2396F02A0((unsigned __int8 *)v505, *(double *)"5F]TGPjZW_PVAjAGT[FSZGXj\\[jFTXPjFPRXP[A", *(int16x8_t *)"T[FSZGXj\\[jFTXPjFPRXP[A", v378, v379, v380);
  v382 = v381;
  v383 = strlen(v381);
  if (v383 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v384 = (void *)v383;
  if (v383 >= 0x17)
  {
    v386 = (v383 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v383 | 7) != 0x17)
      v386 = v383 | 7;
    v387 = v386 + 1;
    v385 = operator new(v386 + 1);
    v422[1] = v384;
    v423 = v387 | 0x8000000000000000;
    v422[0] = v385;
    goto LABEL_312;
  }
  HIBYTE(v423) = v383;
  v385 = v422;
  if (v383)
LABEL_312:
    memmove(v385, v382, (size_t)v384);
  *((_BYTE *)v384 + (_QWORD)v385) = 0;
  v388 = (_QWORD *)operator new();
  *v388 = &off_250AE0220;
  v388[1] = a1 + 176;
  sub_23961580C((uint64_t)__p, (uint64_t)v422, (uint64_t)v388);
  v504[0] = xmmword_239F1011A;
  *(_OWORD *)((char *)v504 + 11) = *(__int128 *)((char *)&xmmword_239F1011A + 11);
  sub_2396F1974((uint64_t)v504, *(int32x4_t *)((char *)&xmmword_239F1011A + 11), v389, v390, v391);
  v393 = v392;
  v394 = strlen(v392);
  if (v394 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v395 = (void *)v394;
  if (v394 >= 0x17)
  {
    v397 = (v394 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v394 | 7) != 0x17)
      v397 = v394 | 7;
    v398 = v397 + 1;
    v396 = operator new(v397 + 1);
    v420[1] = v395;
    v421 = v398 | 0x8000000000000000;
    v420[0] = v396;
    goto LABEL_320;
  }
  HIBYTE(v421) = v394;
  v396 = v420;
  if (v394)
LABEL_320:
    memmove(v396, v393, (size_t)v395);
  *((_BYTE *)v395 + (_QWORD)v396) = 0;
  v399 = (_QWORD *)operator new();
  *v399 = &off_250AE0220;
  v399[1] = (char *)a1 + 705;
  sub_23961580C((uint64_t)__p, (uint64_t)v420, (uint64_t)v399);
  strcpy(v503, "0ECUoTU^CUoVUQDEBUo]QDSXUB");
  sub_2396F1974((uint64_t)v503, *(int32x4_t *)"VUQDEBUo]QDSXUB", v400, v401, v402);
  v404 = v403;
  v405 = strlen(v403);
  if (v405 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v406 = (void *)v405;
  if (v405 >= 0x17)
  {
    v408 = (v405 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v405 | 7) != 0x17)
      v408 = v405 | 7;
    v409 = v408 + 1;
    v407 = operator new(v408 + 1);
    v418[1] = v406;
    v419 = v409 | 0x8000000000000000;
    v418[0] = v407;
    goto LABEL_328;
  }
  HIBYTE(v419) = v405;
  v407 = v418;
  if (v405)
LABEL_328:
    memmove(v407, v404, (size_t)v406);
  *((_BYTE *)v406 + (_QWORD)v407) = 0;
  v410 = (_QWORD *)operator new();
  *v410 = &off_250AE0220;
  v410[1] = (char *)a1 + 617;
  sub_23961580C((uint64_t)__p, (uint64_t)v418, (uint64_t)v410);
  if (SHIBYTE(v419) < 0)
  {
    operator delete(v418[0]);
    if ((SHIBYTE(v421) & 0x80000000) == 0)
    {
LABEL_331:
      if ((SHIBYTE(v423) & 0x80000000) == 0)
        goto LABEL_332;
      goto LABEL_386;
    }
  }
  else if ((SHIBYTE(v421) & 0x80000000) == 0)
  {
    goto LABEL_331;
  }
  operator delete(v420[0]);
  if ((SHIBYTE(v423) & 0x80000000) == 0)
  {
LABEL_332:
    if ((SHIBYTE(v425) & 0x80000000) == 0)
      goto LABEL_333;
    goto LABEL_387;
  }
LABEL_386:
  operator delete(v422[0]);
  if ((SHIBYTE(v425) & 0x80000000) == 0)
  {
LABEL_333:
    if ((SHIBYTE(v427) & 0x80000000) == 0)
      goto LABEL_334;
    goto LABEL_388;
  }
LABEL_387:
  operator delete(v424[0]);
  if ((SHIBYTE(v427) & 0x80000000) == 0)
  {
LABEL_334:
    if ((SHIBYTE(v429) & 0x80000000) == 0)
      goto LABEL_335;
    goto LABEL_389;
  }
LABEL_388:
  operator delete(v426[0]);
  if ((SHIBYTE(v429) & 0x80000000) == 0)
  {
LABEL_335:
    if ((SHIBYTE(v431) & 0x80000000) == 0)
      goto LABEL_336;
    goto LABEL_390;
  }
LABEL_389:
  operator delete(v428[0]);
  if ((SHIBYTE(v431) & 0x80000000) == 0)
  {
LABEL_336:
    if ((SHIBYTE(v433) & 0x80000000) == 0)
      goto LABEL_337;
    goto LABEL_391;
  }
LABEL_390:
  operator delete(v430[0]);
  if ((SHIBYTE(v433) & 0x80000000) == 0)
  {
LABEL_337:
    if ((SHIBYTE(v435) & 0x80000000) == 0)
      goto LABEL_338;
    goto LABEL_392;
  }
LABEL_391:
  operator delete(v432[0]);
  if ((SHIBYTE(v435) & 0x80000000) == 0)
  {
LABEL_338:
    if ((SHIBYTE(v437) & 0x80000000) == 0)
      goto LABEL_339;
    goto LABEL_393;
  }
LABEL_392:
  operator delete(v434[0]);
  if ((SHIBYTE(v437) & 0x80000000) == 0)
  {
LABEL_339:
    if ((SHIBYTE(v439) & 0x80000000) == 0)
      goto LABEL_340;
    goto LABEL_394;
  }
LABEL_393:
  operator delete(v436[0]);
  if ((SHIBYTE(v439) & 0x80000000) == 0)
  {
LABEL_340:
    if ((SHIBYTE(v441) & 0x80000000) == 0)
      goto LABEL_341;
    goto LABEL_395;
  }
LABEL_394:
  operator delete(v438[0]);
  if ((SHIBYTE(v441) & 0x80000000) == 0)
  {
LABEL_341:
    if ((SHIBYTE(v443) & 0x80000000) == 0)
      goto LABEL_342;
    goto LABEL_396;
  }
LABEL_395:
  operator delete(v440[0]);
  if ((SHIBYTE(v443) & 0x80000000) == 0)
  {
LABEL_342:
    if ((SHIBYTE(v445) & 0x80000000) == 0)
      goto LABEL_343;
    goto LABEL_397;
  }
LABEL_396:
  operator delete(v442[0]);
  if ((SHIBYTE(v445) & 0x80000000) == 0)
  {
LABEL_343:
    if ((SHIBYTE(v447) & 0x80000000) == 0)
      goto LABEL_344;
    goto LABEL_398;
  }
LABEL_397:
  operator delete(v444[0]);
  if ((SHIBYTE(v447) & 0x80000000) == 0)
  {
LABEL_344:
    if ((SHIBYTE(v449) & 0x80000000) == 0)
      goto LABEL_345;
    goto LABEL_399;
  }
LABEL_398:
  operator delete(v446[0]);
  if ((SHIBYTE(v449) & 0x80000000) == 0)
  {
LABEL_345:
    if ((SHIBYTE(v451) & 0x80000000) == 0)
      goto LABEL_346;
    goto LABEL_400;
  }
LABEL_399:
  operator delete(v448[0]);
  if ((SHIBYTE(v451) & 0x80000000) == 0)
  {
LABEL_346:
    if ((SHIBYTE(v453) & 0x80000000) == 0)
      goto LABEL_347;
    goto LABEL_401;
  }
LABEL_400:
  operator delete(v450[0]);
  if ((SHIBYTE(v453) & 0x80000000) == 0)
  {
LABEL_347:
    if ((SHIBYTE(v455) & 0x80000000) == 0)
      goto LABEL_348;
    goto LABEL_402;
  }
LABEL_401:
  operator delete(v452[0]);
  if ((SHIBYTE(v455) & 0x80000000) == 0)
  {
LABEL_348:
    if ((SHIBYTE(v457) & 0x80000000) == 0)
      goto LABEL_349;
    goto LABEL_403;
  }
LABEL_402:
  operator delete(v454[0]);
  if ((SHIBYTE(v457) & 0x80000000) == 0)
  {
LABEL_349:
    if ((SHIBYTE(v459) & 0x80000000) == 0)
      goto LABEL_350;
    goto LABEL_404;
  }
LABEL_403:
  operator delete(v456[0]);
  if ((SHIBYTE(v459) & 0x80000000) == 0)
  {
LABEL_350:
    if ((SHIBYTE(v461) & 0x80000000) == 0)
      goto LABEL_351;
    goto LABEL_405;
  }
LABEL_404:
  operator delete(v458[0]);
  if ((SHIBYTE(v461) & 0x80000000) == 0)
  {
LABEL_351:
    if ((SHIBYTE(v463) & 0x80000000) == 0)
      goto LABEL_352;
    goto LABEL_406;
  }
LABEL_405:
  operator delete(v460[0]);
  if ((SHIBYTE(v463) & 0x80000000) == 0)
  {
LABEL_352:
    if ((SHIBYTE(v465) & 0x80000000) == 0)
      goto LABEL_353;
    goto LABEL_407;
  }
LABEL_406:
  operator delete(v462[0]);
  if ((SHIBYTE(v465) & 0x80000000) == 0)
  {
LABEL_353:
    if ((SHIBYTE(v467) & 0x80000000) == 0)
      goto LABEL_354;
    goto LABEL_408;
  }
LABEL_407:
  operator delete(v464[0]);
  if ((SHIBYTE(v467) & 0x80000000) == 0)
  {
LABEL_354:
    if ((SHIBYTE(v469) & 0x80000000) == 0)
      goto LABEL_355;
    goto LABEL_409;
  }
LABEL_408:
  operator delete(v466[0]);
  if ((SHIBYTE(v469) & 0x80000000) == 0)
  {
LABEL_355:
    if ((SHIBYTE(v471) & 0x80000000) == 0)
      goto LABEL_356;
    goto LABEL_410;
  }
LABEL_409:
  operator delete(v468[0]);
  if ((SHIBYTE(v471) & 0x80000000) == 0)
  {
LABEL_356:
    if ((SHIBYTE(v473) & 0x80000000) == 0)
      goto LABEL_357;
    goto LABEL_411;
  }
LABEL_410:
  operator delete(v470[0]);
  if ((SHIBYTE(v473) & 0x80000000) == 0)
  {
LABEL_357:
    if ((SHIBYTE(v475) & 0x80000000) == 0)
      goto LABEL_358;
    goto LABEL_412;
  }
LABEL_411:
  operator delete(v472[0]);
  if ((SHIBYTE(v475) & 0x80000000) == 0)
  {
LABEL_358:
    if ((SHIBYTE(v477) & 0x80000000) == 0)
      goto LABEL_359;
    goto LABEL_413;
  }
LABEL_412:
  operator delete(v474[0]);
  if ((SHIBYTE(v477) & 0x80000000) == 0)
  {
LABEL_359:
    if ((SHIBYTE(v479) & 0x80000000) == 0)
      goto LABEL_360;
    goto LABEL_414;
  }
LABEL_413:
  operator delete(v476[0]);
  if ((SHIBYTE(v479) & 0x80000000) == 0)
  {
LABEL_360:
    if ((SHIBYTE(v481) & 0x80000000) == 0)
      goto LABEL_361;
    goto LABEL_415;
  }
LABEL_414:
  operator delete(v478[0]);
  if ((SHIBYTE(v481) & 0x80000000) == 0)
  {
LABEL_361:
    if ((SHIBYTE(v483) & 0x80000000) == 0)
      goto LABEL_362;
    goto LABEL_416;
  }
LABEL_415:
  operator delete(v480[0]);
  if ((SHIBYTE(v483) & 0x80000000) == 0)
  {
LABEL_362:
    if ((SHIBYTE(v485) & 0x80000000) == 0)
      goto LABEL_363;
    goto LABEL_417;
  }
LABEL_416:
  operator delete(v482[0]);
  if ((SHIBYTE(v485) & 0x80000000) == 0)
  {
LABEL_363:
    if ((SHIBYTE(v487) & 0x80000000) == 0)
      goto LABEL_364;
    goto LABEL_418;
  }
LABEL_417:
  operator delete(v484[0]);
  if ((SHIBYTE(v487) & 0x80000000) == 0)
  {
LABEL_364:
    if ((SHIBYTE(v489) & 0x80000000) == 0)
      goto LABEL_365;
    goto LABEL_419;
  }
LABEL_418:
  operator delete(v486[0]);
  if ((SHIBYTE(v489) & 0x80000000) == 0)
  {
LABEL_365:
    if ((SHIBYTE(v491) & 0x80000000) == 0)
      goto LABEL_366;
    goto LABEL_420;
  }
LABEL_419:
  operator delete(v488[0]);
  if ((SHIBYTE(v491) & 0x80000000) == 0)
  {
LABEL_366:
    if ((SHIBYTE(v493) & 0x80000000) == 0)
      goto LABEL_367;
    goto LABEL_421;
  }
LABEL_420:
  operator delete(v490[0]);
  if ((SHIBYTE(v493) & 0x80000000) == 0)
  {
LABEL_367:
    if ((SHIBYTE(v495) & 0x80000000) == 0)
      goto LABEL_368;
    goto LABEL_422;
  }
LABEL_421:
  operator delete(v492[0]);
  if ((SHIBYTE(v495) & 0x80000000) == 0)
  {
LABEL_368:
    if ((SHIBYTE(v497) & 0x80000000) == 0)
      goto LABEL_369;
LABEL_423:
    operator delete(v496[0]);
    if ((SHIBYTE(v499) & 0x80000000) == 0)
      goto LABEL_370;
    goto LABEL_424;
  }
LABEL_422:
  operator delete(v494[0]);
  if (SHIBYTE(v497) < 0)
    goto LABEL_423;
LABEL_369:
  if ((SHIBYTE(v499) & 0x80000000) == 0)
    goto LABEL_370;
LABEL_424:
  operator delete(__dst[0]);
LABEL_370:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
  {
    v411 = v500;
    *a1 = HIDWORD(v500);
    a1[1] = v411;
  }
  v412 = v502;
  if (v502)
  {
    do
    {
      v413 = v412[5];
      if (v413)
        (*(void (**)(uint64_t))(*(_QWORD *)v413 + 8))(v413);
      v412 = (_QWORD *)*v412;
    }
    while (v412);
    v414 = (void **)v502;
    if (v502)
    {
      do
      {
        v417 = (void **)*v414;
        if (*((char *)v414 + 39) < 0)
          operator delete(v414[2]);
        operator delete(v414);
        v414 = v417;
      }
      while (v417);
    }
  }
  v415 = __p[0];
  __p[0] = 0;
  if (v415)
    operator delete(v415);
  return a2;
}

void sub_239AB910C(_Unwind_Exception *a1)
{
  sub_2395905C0((uint64_t)&STACK[0x3F0]);
  _Unwind_Resume(a1);
}

void sub_239AB9814()
{
  if (SLOBYTE(STACK[0x39F]) < 0)
    JUMPOUT(0x239AB9594);
  JUMPOUT(0x239AB93B0);
}

void sub_239AB9828(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AB984C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AB9D74(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AB9888(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  const char *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  void **v40;
  void *v41;
  void **v43;
  void *v44[2];
  unint64_t v45;
  void *v46[2];
  unint64_t v47;
  void *__dst[2];
  unint64_t v49;
  void *__p[2];
  void *v51;
  _OWORD v52[2];
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v55 = xmmword_239F10097;
  v56 = 0x151D1E19021403;
  sub_2396F1A4C((uint64_t)&v55, (int32x4_t)xmmword_239F10097, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v49 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v49) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250ADF360;
  v15[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v53 = xmmword_239F100AF;
  v54 = 0x636275797C7E79;
  sub_2396F1A4C((uint64_t)&v53, (int32x4_t)xmmword_239F100AF, v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v46[1] = v22;
    v47 = v25 | 0x8000000000000000;
    v46[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v47) = v21;
  v23 = v46;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AFFF08;
  v26[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v46, (uint64_t)v26);
  v52[0] = xmmword_239F100C7;
  *(_OWORD *)((char *)v52 + 9) = *(__int128 *)((char *)&xmmword_239F100C7 + 9);
  sub_2396EFC88((uint64_t)v52, *(int32x4_t *)((char *)&xmmword_239F100C7 + 9), v27, v28, v29);
  v31 = v30;
  v32 = strlen(v30);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v44[1] = v33;
    v45 = v36 | 0x8000000000000000;
    v44[0] = v34;
    goto LABEL_24;
  }
  HIBYTE(v45) = v32;
  v34 = v44;
  if (v32)
LABEL_24:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250ADF360;
  v37[1] = v4 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v44, (uint64_t)v37);
  if ((SHIBYTE(v45) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v47) & 0x80000000) == 0)
      goto LABEL_27;
LABEL_41:
    operator delete(v46[0]);
    if ((SHIBYTE(v49) & 0x80000000) == 0)
      goto LABEL_28;
    goto LABEL_42;
  }
  operator delete(v44[0]);
  if (SHIBYTE(v47) < 0)
    goto LABEL_41;
LABEL_27:
  if ((SHIBYTE(v49) & 0x80000000) == 0)
    goto LABEL_28;
LABEL_42:
  operator delete(__dst[0]);
LABEL_28:
  sub_23959479C((uint64_t)__p, a2);
  v38 = v51;
  if (v51)
  {
    do
    {
      v39 = v38[5];
      if (v39)
        (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
      v38 = (_QWORD *)*v38;
    }
    while (v38);
    v40 = (void **)v51;
    if (v51)
    {
      do
      {
        v43 = (void **)*v40;
        if (*((char *)v40 + 39) < 0)
          operator delete(v40[2]);
        operator delete(v40);
        v40 = v43;
      }
      while (v43);
    }
  }
  v41 = __p[0];
  __p[0] = 0;
  if (v41)
    operator delete(v41);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AB9C60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,_QWORD *__p)
{
  _QWORD *v31;
  uint64_t v32;
  void **v33;
  void **v34;

  v31 = __p;
  if (__p)
  {
    do
    {
      v32 = v31[5];
      if (v32)
        (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
      v31 = (_QWORD *)*v31;
    }
    while (v31);
    v33 = (void **)__p;
    do
    {
      v34 = (void **)*v33;
      if (*((char *)v33 + 39) < 0)
        operator delete(v33[2]);
      operator delete(v33);
      v33 = v34;
    }
    while (v34);
  }
  if (!a28)
    _Unwind_Resume(exception_object);
  operator delete(a28);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AB9D74(uint64_t a1, _QWORD *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  const char *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  void **v40;
  void *v41;
  void **v43;
  void *v44[2];
  unint64_t v45;
  void *v46[2];
  unint64_t v47;
  void *__dst[2];
  unint64_t v49;
  void *__p[2];
  void *v51;
  _OWORD v52[2];
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v55 = xmmword_239F0F324;
  v56 = 0xE060502190F18;
  sub_2396F1A4C((uint64_t)&v55, (int32x4_t)xmmword_239F0F324, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v49 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v49) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250ADF570;
  v15[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v53 = xmmword_239F0F33C;
  v54 = 0x8091E12171512;
  sub_2396F1A4C((uint64_t)&v53, (int32x4_t)xmmword_239F0F33C, v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v46[1] = v22;
    v47 = v25 | 0x8000000000000000;
    v46[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v47) = v21;
  v23 = v46;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AFFE48;
  v26[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v46, (uint64_t)v26);
  v52[0] = xmmword_239F0F354;
  *(_OWORD *)((char *)v52 + 9) = *(__int128 *)((char *)&xmmword_239F0F354 + 9);
  sub_2396EFC88((uint64_t)v52, *(int32x4_t *)((char *)&xmmword_239F0F354 + 9), v27, v28, v29);
  v31 = v30;
  v32 = strlen(v30);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v44[1] = v33;
    v45 = v36 | 0x8000000000000000;
    v44[0] = v34;
    goto LABEL_24;
  }
  HIBYTE(v45) = v32;
  v34 = v44;
  if (v32)
LABEL_24:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250ADF570;
  v37[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v44, (uint64_t)v37);
  if ((SHIBYTE(v45) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v47) & 0x80000000) == 0)
      goto LABEL_27;
LABEL_41:
    operator delete(v46[0]);
    if ((SHIBYTE(v49) & 0x80000000) == 0)
      goto LABEL_28;
    goto LABEL_42;
  }
  operator delete(v44[0]);
  if (SHIBYTE(v47) < 0)
    goto LABEL_41;
LABEL_27:
  if ((SHIBYTE(v49) & 0x80000000) == 0)
    goto LABEL_28;
LABEL_42:
  operator delete(__dst[0]);
LABEL_28:
  sub_2395902F0((uint64_t)__p, a2);
  v38 = v51;
  if (v51)
  {
    do
    {
      v39 = v38[5];
      if (v39)
        (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
      v38 = (_QWORD *)*v38;
    }
    while (v38);
    v40 = (void **)v51;
    if (v51)
    {
      do
      {
        v43 = (void **)*v40;
        if (*((char *)v40 + 39) < 0)
          operator delete(v40[2]);
        operator delete(v40);
        v40 = v43;
      }
      while (v43);
    }
  }
  v41 = __p[0];
  __p[0] = 0;
  if (v41)
    operator delete(v41);
  return a2;
}

void sub_239ABA134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  sub_2395905C0((uint64_t)&a28);
  _Unwind_Resume(a1);
}

void sub_239ABA1C8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ABA1EC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ABCA70(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239ABA228(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  int16x8_t v13;
  const char *v14;
  const char *v15;
  size_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  double v22;
  int16x8_t v23;
  const char *v24;
  const char *v25;
  size_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  double v32;
  int16x8_t v33;
  double v34;
  int16x8_t v35;
  unsigned __int8 *v36;
  size_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  double v43;
  double v44;
  int16x8_t v45;
  const char *v46;
  const char *v47;
  size_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int8x16_t v54;
  double v55;
  int32x4_t v56;
  const char *v57;
  const char *v58;
  size_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  int8x16_t v65;
  double v66;
  int32x4_t v67;
  const char *v68;
  const char *v69;
  size_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  const char *v76;
  const char *v77;
  size_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  const char *v84;
  size_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  int8x16_t v91;
  double v92;
  int32x4_t v93;
  const char *v94;
  const char *v95;
  size_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  int8x16_t v102;
  double v103;
  int32x4_t v104;
  const char *v105;
  const char *v106;
  size_t v107;
  void *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  double v113;
  int16x8_t v114;
  const char *v115;
  const char *v116;
  size_t v117;
  void *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  double v123;
  double v124;
  int16x8_t v125;
  const char *v126;
  const char *v127;
  size_t v128;
  void *v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  const char *v134;
  const char *v135;
  size_t v136;
  void *v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  void **v144;
  void *v145;
  void **v147;
  void *v148[2];
  unint64_t v149;
  void *v150[2];
  unint64_t v151;
  void *v152[2];
  unint64_t v153;
  void *v154[2];
  unint64_t v155;
  void *v156[2];
  unint64_t v157;
  void *v158[2];
  unint64_t v159;
  void *v160[2];
  unint64_t v161;
  void *v162[2];
  unint64_t v163;
  void *v164[2];
  unint64_t v165;
  void *v166[2];
  unint64_t v167;
  void *v168[2];
  unint64_t v169;
  void *v170[2];
  unint64_t v171;
  void *v172[2];
  unint64_t v173;
  void *__dst[2];
  unint64_t v175;
  void *__p[2];
  void *v177;
  uint64_t v178;
  int v179;
  char v180[4];
  char v181[48];
  __int128 v182;
  _OWORD v183[2];
  _OWORD v184[2];
  __int128 v185;
  uint64_t v186;
  uint64_t v187;
  char v188[8];
  char v189[32];
  _OWORD v190[2];
  __int128 v191;
  int v192;
  __int128 v193;
  char v194[32];
  char v195[48];
  char v196[48];
  __int128 v197;
  _BYTE v198[19];
  uint64_t v199;
  int v200;
  char v201;
  uint64_t v202;

  v202 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v199 = 0x9130F24160E157BLL;
  v201 = 0;
  v200 = 136256030;
  v5 = sub_239510ECC((uint64_t)&v199);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v175 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v175) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFF08;
  v11[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v197 = xmmword_239F0FDEB;
  *(_OWORD *)v198 = *(_OWORD *)dbl_239F0FDFB;
  strcpy(&v198[15], "jah");
  sub_2396F0060((unsigned __int8 *)&v197, (int16x8_t)xmmword_239F0FDEB, dbl_239F0FDFB[0], v12, v13);
  v15 = v14;
  v16 = strlen(v14);
  if (v16 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = (void *)v16;
  if (v16 >= 0x17)
  {
    v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17)
      v19 = v16 | 7;
    v20 = v19 + 1;
    v18 = operator new(v19 + 1);
    v172[1] = v17;
    v173 = v20 | 0x8000000000000000;
    v172[0] = v18;
    goto LABEL_16;
  }
  HIBYTE(v173) = v16;
  v18 = v172;
  if (v16)
LABEL_16:
    memmove(v18, v15, (size_t)v17);
  *((_BYTE *)v17 + (_QWORD)v18) = 0;
  v21 = (_QWORD *)operator new();
  *v21 = &off_250ADF360;
  v21[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v172, (uint64_t)v21);
  strcpy(v196, "\"PGNCVKTG}PMVCVKML}CLENG}VJPGQJMNF");
  sub_2396F0060((unsigned __int8 *)v196, *(int16x8_t *)"\"PGNCVKTG}PMVCVKML}CLENG}VJPGQJMNF", *(double *)"ML}CLENG}VJPGQJMNF", v22, v23);
  v25 = v24;
  v26 = strlen(v24);
  if (v26 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v27 = (void *)v26;
  if (v26 >= 0x17)
  {
    v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v29 = v26 | 7;
    v30 = v29 + 1;
    v28 = operator new(v29 + 1);
    v170[1] = v27;
    v171 = v30 | 0x8000000000000000;
    v170[0] = v28;
    goto LABEL_24;
  }
  HIBYTE(v171) = v26;
  v28 = v170;
  if (v26)
LABEL_24:
    memmove(v28, v25, (size_t)v27);
  *((_BYTE *)v27 + (_QWORD)v28) = 0;
  v31 = (_QWORD *)operator new();
  *v31 = &off_250ADF360;
  v31[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v170, (uint64_t)v31);
  strcpy(v195, "%W@IDQLS@zQWDKVIDQLJKzDKBI@zQMW@VMJIA");
  v36 = sub_239ABB30C((unsigned __int8 *)v195, *(int8x16_t *)"%W@IDQLS@zQWDKVIDQLJKzDKBI@zQMW@VMJIA", *(int8x16_t *)"DQLJKzDKBI@zQMW@VMJIA", v32, v33, v34, v35);
  v37 = strlen((const char *)v36);
  if (v37 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v38 = (void *)v37;
  if (v37 >= 0x17)
  {
    v40 = (v37 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v37 | 7) != 0x17)
      v40 = v37 | 7;
    v41 = v40 + 1;
    v39 = operator new(v40 + 1);
    v168[1] = v38;
    v169 = v41 | 0x8000000000000000;
    v168[0] = v39;
    goto LABEL_32;
  }
  HIBYTE(v169) = v37;
  v39 = v168;
  if (v37)
LABEL_32:
    memmove(v39, v36, (size_t)v38);
  *((_BYTE *)v38 + (_QWORD)v39) = 0;
  v42 = (_QWORD *)operator new();
  *v42 = &off_250ADF360;
  v42[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v168, (uint64_t)v42);
  v193 = xmmword_239F0FE57;
  strcpy(v194, "rgex}rtc~xyHreexe");
  sub_2396F0120((unsigned __int8 *)&v193, (int16x8_t)xmmword_239F0FE57, *(double *)"rgex}rtc~xyHreexe", v43, v44, v45);
  v47 = v46;
  v48 = strlen(v46);
  if (v48 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v49 = (void *)v48;
  if (v48 >= 0x17)
  {
    v51 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v48 | 7) != 0x17)
      v51 = v48 | 7;
    v52 = v51 + 1;
    v50 = operator new(v51 + 1);
    v166[1] = v49;
    v167 = v52 | 0x8000000000000000;
    v166[0] = v50;
    goto LABEL_40;
  }
  HIBYTE(v167) = v48;
  v50 = v166;
  if (v48)
LABEL_40:
    memmove(v50, v47, (size_t)v49);
  *((_BYTE *)v49 + (_QWORD)v50) = 0;
  v53 = (_QWORD *)operator new();
  *v53 = &off_250ADF360;
  v53[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v166, (uint64_t)v53);
  v191 = xmmword_239F0FE79;
  v192 = 8354913;
  sub_23958E55C((uint64_t)&v191, (int32x4_t)xmmword_239F0FE79, v54, v55, v56);
  v58 = v57;
  v59 = strlen(v57);
  if (v59 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v60 = (void *)v59;
  if (v59 >= 0x17)
  {
    v62 = (v59 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v59 | 7) != 0x17)
      v62 = v59 | 7;
    v63 = v62 + 1;
    v61 = operator new(v62 + 1);
    v164[1] = v60;
    v165 = v63 | 0x8000000000000000;
    v164[0] = v61;
    goto LABEL_48;
  }
  HIBYTE(v165) = v59;
  v61 = v164;
  if (v59)
LABEL_48:
    memmove(v61, v58, (size_t)v60);
  *((_BYTE *)v60 + (_QWORD)v61) = 0;
  v64 = (_QWORD *)operator new();
  *v64 = &off_250AE0220;
  v64[1] = v4 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v164, (uint64_t)v64);
  v190[0] = xmmword_239F0FE8D;
  *(_QWORD *)((char *)v190 + 15) = 0x12101605120116;
  sub_2396EFBE0((uint64_t)v190, (int32x4_t)xmmword_239F0FE8D, v65, v66, v67);
  v69 = v68;
  v70 = strlen(v68);
  if (v70 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v71 = (void *)v70;
  if (v70 >= 0x17)
  {
    v73 = (v70 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v70 | 7) != 0x17)
      v73 = v70 | 7;
    v74 = v73 + 1;
    v72 = operator new(v73 + 1);
    v162[1] = v71;
    v163 = v74 | 0x8000000000000000;
    v162[0] = v72;
    goto LABEL_56;
  }
  HIBYTE(v163) = v70;
  v72 = v162;
  if (v70)
LABEL_56:
    memmove(v72, v69, (size_t)v71);
  *((_BYTE *)v71 + (_QWORD)v72) = 0;
  v75 = (_QWORD *)operator new();
  *v75 = &off_250AE0220;
  v75[1] = v4 + 41;
  sub_23961580C((uint64_t)__p, (uint64_t)v162, (uint64_t)v75);
  strcpy(v189, "$AJEFHA{BMJEH{fe");
  sub_2396EFA24((uint64_t)v189);
  v77 = v76;
  v78 = strlen(v76);
  if (v78 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v79 = (void *)v78;
  if (v78 >= 0x17)
  {
    v81 = (v78 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v78 | 7) != 0x17)
      v81 = v78 | 7;
    v82 = v81 + 1;
    v80 = operator new(v81 + 1);
    v160[1] = v79;
    v161 = v82 | 0x8000000000000000;
    v160[0] = v80;
    goto LABEL_64;
  }
  HIBYTE(v161) = v78;
  v80 = v160;
  if (v78)
LABEL_64:
    memmove(v80, v77, (size_t)v79);
  *((_BYTE *)v79 + (_QWORD)v80) = 0;
  v83 = (_QWORD *)operator new();
  *v83 = &off_250AE0220;
  v83[1] = v4 + 42;
  sub_23961580C((uint64_t)__p, (uint64_t)v160, (uint64_t)v83);
  v187 = 0x39010F0008090566;
  strcpy(v188, "\v\a");
  v84 = (const char *)sub_23958E518((uint64_t)&v187);
  v85 = strlen(v84);
  if (v85 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v86 = (void *)v85;
  if (v85 >= 0x17)
  {
    v88 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v85 | 7) != 0x17)
      v88 = v85 | 7;
    v89 = v88 + 1;
    v87 = operator new(v88 + 1);
    v158[1] = v86;
    v159 = v89 | 0x8000000000000000;
    v158[0] = v87;
    goto LABEL_72;
  }
  HIBYTE(v159) = v85;
  v87 = v158;
  if (v85)
LABEL_72:
    memmove(v87, v84, (size_t)v86);
  *((_BYTE *)v86 + (_QWORD)v87) = 0;
  v90 = (_QWORD *)operator new();
  *v90 = &off_250B00208;
  v90[1] = v4 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v158, (uint64_t)v90);
  v185 = xmmword_239F0FF56;
  v186 = 0x4F46415A4D5C44;
  sub_2396F1A4C((uint64_t)&v185, (int32x4_t)xmmword_239F0FF56, v91, v92, v93);
  v95 = v94;
  v96 = strlen(v94);
  if (v96 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v97 = (void *)v96;
  if (v96 >= 0x17)
  {
    v99 = (v96 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v96 | 7) != 0x17)
      v99 = v96 | 7;
    v100 = v99 + 1;
    v98 = operator new(v99 + 1);
    v156[1] = v97;
    v157 = v100 | 0x8000000000000000;
    v156[0] = v98;
    goto LABEL_80;
  }
  HIBYTE(v157) = v96;
  v98 = v156;
  if (v96)
LABEL_80:
    memmove(v98, v95, (size_t)v97);
  *((_BYTE *)v97 + (_QWORD)v98) = 0;
  v101 = (_QWORD *)operator new();
  *v101 = &off_250AE0220;
  v101[1] = v4 + 168;
  sub_23961580C((uint64_t)__p, (uint64_t)v156, (uint64_t)v101);
  v184[0] = xmmword_239F0FF6E;
  *(_OWORD *)((char *)v184 + 14) = *(__int128 *)((char *)&xmmword_239F0FF6E + 14);
  sub_2396F0EE8((uint64_t)v184, *(int32x4_t *)((char *)&xmmword_239F0FF6E + 14), v102, v103, v104);
  v106 = v105;
  v107 = strlen(v105);
  if (v107 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v108 = (void *)v107;
  if (v107 >= 0x17)
  {
    v110 = (v107 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v107 | 7) != 0x17)
      v110 = v107 | 7;
    v111 = v110 + 1;
    v109 = operator new(v110 + 1);
    v154[1] = v108;
    v155 = v111 | 0x8000000000000000;
    v154[0] = v109;
    goto LABEL_88;
  }
  HIBYTE(v155) = v107;
  v109 = v154;
  if (v107)
LABEL_88:
    memmove(v109, v106, (size_t)v108);
  *((_BYTE *)v108 + (_QWORD)v109) = 0;
  v112 = (_QWORD *)operator new();
  *v112 = &off_250AE0220;
  v112[1] = v4 + 169;
  sub_23961580C((uint64_t)__p, (uint64_t)v154, (uint64_t)v112);
  v182 = xmmword_239F0FF8C;
  v183[0] = *(_OWORD *)dbl_239F0FF9C;
  *(_QWORD *)((char *)v183 + 13) = 0x383A3C2F382B3CLL;
  sub_2396F11DC((unsigned __int8 *)&v182, (int16x8_t)xmmword_239F0FF8C, dbl_239F0FF9C[0], v113, v114);
  v116 = v115;
  v117 = strlen(v115);
  if (v117 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v118 = (void *)v117;
  if (v117 >= 0x17)
  {
    v120 = (v117 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v117 | 7) != 0x17)
      v120 = v117 | 7;
    v121 = v120 + 1;
    v119 = operator new(v120 + 1);
    v152[1] = v118;
    v153 = v121 | 0x8000000000000000;
    v152[0] = v119;
    goto LABEL_96;
  }
  HIBYTE(v153) = v117;
  v119 = v152;
  if (v117)
LABEL_96:
    memmove(v119, v116, (size_t)v118);
  *((_BYTE *)v118 + (_QWORD)v119) = 0;
  v122 = (_QWORD *)operator new();
  *v122 = &off_250AFFF08;
  v122[1] = v4 + 176;
  sub_23961580C((uint64_t)__p, (uint64_t)v152, (uint64_t)v122);
  strcpy(v181, "=SHPbIO\\^VNbMXObKTXJb[RObPRITRSb\\KXO\\ZX");
  sub_2396F02A0((unsigned __int8 *)v181, *(double *)"=SHPbIO\\^VNbMXObKTXJb[RObPRITRSb\\KXO\\ZX", *(int16x8_t *)"KTXJb[RObPRITRSb\\KXO\\ZX", v123, v124, v125);
  v127 = v126;
  v128 = strlen(v126);
  if (v128 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v129 = (void *)v128;
  if (v128 >= 0x17)
  {
    v131 = (v128 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v128 | 7) != 0x17)
      v131 = v128 | 7;
    v132 = v131 + 1;
    v130 = operator new(v131 + 1);
    v150[1] = v129;
    v151 = v132 | 0x8000000000000000;
    v150[0] = v130;
    goto LABEL_104;
  }
  HIBYTE(v151) = v128;
  v130 = v150;
  if (v128)
LABEL_104:
    memmove(v130, v127, (size_t)v129);
  *((_BYTE *)v129 + (_QWORD)v130) = 0;
  v133 = (_QWORD *)operator new();
  *v133 = &off_250AFFF08;
  v133[1] = v4 + 184;
  sub_23961580C((uint64_t)__p, (uint64_t)v150, (uint64_t)v133);
  v178 = 0x427A747B73727E1DLL;
  strcpy(v180, "qx");
  v179 = 2037606527;
  sub_23958E5E0((uint64_t)&v178);
  v135 = v134;
  v136 = strlen(v134);
  if (v136 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v137 = (void *)v136;
  if (v136 >= 0x17)
  {
    v139 = (v136 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v136 | 7) != 0x17)
      v139 = v136 | 7;
    v140 = v139 + 1;
    v138 = operator new(v139 + 1);
    v148[1] = v137;
    v149 = v140 | 0x8000000000000000;
    v148[0] = v138;
    goto LABEL_112;
  }
  HIBYTE(v149) = v136;
  v138 = v148;
  if (v136)
LABEL_112:
    memmove(v138, v135, (size_t)v137);
  *((_BYTE *)v137 + (_QWORD)v138) = 0;
  v141 = (_QWORD *)operator new();
  *v141 = &off_250B00178;
  v141[1] = v4 + 192;
  sub_23961580C((uint64_t)__p, (uint64_t)v148, (uint64_t)v141);
  if (SHIBYTE(v149) < 0)
  {
    operator delete(v148[0]);
    if ((SHIBYTE(v151) & 0x80000000) == 0)
    {
LABEL_115:
      if ((SHIBYTE(v153) & 0x80000000) == 0)
        goto LABEL_116;
      goto LABEL_141;
    }
  }
  else if ((SHIBYTE(v151) & 0x80000000) == 0)
  {
    goto LABEL_115;
  }
  operator delete(v150[0]);
  if ((SHIBYTE(v153) & 0x80000000) == 0)
  {
LABEL_116:
    if ((SHIBYTE(v155) & 0x80000000) == 0)
      goto LABEL_117;
    goto LABEL_142;
  }
LABEL_141:
  operator delete(v152[0]);
  if ((SHIBYTE(v155) & 0x80000000) == 0)
  {
LABEL_117:
    if ((SHIBYTE(v157) & 0x80000000) == 0)
      goto LABEL_118;
    goto LABEL_143;
  }
LABEL_142:
  operator delete(v154[0]);
  if ((SHIBYTE(v157) & 0x80000000) == 0)
  {
LABEL_118:
    if ((SHIBYTE(v159) & 0x80000000) == 0)
      goto LABEL_119;
    goto LABEL_144;
  }
LABEL_143:
  operator delete(v156[0]);
  if ((SHIBYTE(v159) & 0x80000000) == 0)
  {
LABEL_119:
    if ((SHIBYTE(v161) & 0x80000000) == 0)
      goto LABEL_120;
    goto LABEL_145;
  }
LABEL_144:
  operator delete(v158[0]);
  if ((SHIBYTE(v161) & 0x80000000) == 0)
  {
LABEL_120:
    if ((SHIBYTE(v163) & 0x80000000) == 0)
      goto LABEL_121;
    goto LABEL_146;
  }
LABEL_145:
  operator delete(v160[0]);
  if ((SHIBYTE(v163) & 0x80000000) == 0)
  {
LABEL_121:
    if ((SHIBYTE(v165) & 0x80000000) == 0)
      goto LABEL_122;
    goto LABEL_147;
  }
LABEL_146:
  operator delete(v162[0]);
  if ((SHIBYTE(v165) & 0x80000000) == 0)
  {
LABEL_122:
    if ((SHIBYTE(v167) & 0x80000000) == 0)
      goto LABEL_123;
    goto LABEL_148;
  }
LABEL_147:
  operator delete(v164[0]);
  if ((SHIBYTE(v167) & 0x80000000) == 0)
  {
LABEL_123:
    if ((SHIBYTE(v169) & 0x80000000) == 0)
      goto LABEL_124;
    goto LABEL_149;
  }
LABEL_148:
  operator delete(v166[0]);
  if ((SHIBYTE(v169) & 0x80000000) == 0)
  {
LABEL_124:
    if ((SHIBYTE(v171) & 0x80000000) == 0)
      goto LABEL_125;
    goto LABEL_150;
  }
LABEL_149:
  operator delete(v168[0]);
  if ((SHIBYTE(v171) & 0x80000000) == 0)
  {
LABEL_125:
    if ((SHIBYTE(v173) & 0x80000000) == 0)
      goto LABEL_126;
LABEL_151:
    operator delete(v172[0]);
    if ((SHIBYTE(v175) & 0x80000000) == 0)
      goto LABEL_127;
    goto LABEL_152;
  }
LABEL_150:
  operator delete(v170[0]);
  if (SHIBYTE(v173) < 0)
    goto LABEL_151;
LABEL_126:
  if ((SHIBYTE(v175) & 0x80000000) == 0)
    goto LABEL_127;
LABEL_152:
  operator delete(__dst[0]);
LABEL_127:
  sub_23959479C((uint64_t)__p, a2);
  v142 = v177;
  if (v177)
  {
    do
    {
      v143 = v142[5];
      if (v143)
        (*(void (**)(uint64_t))(*(_QWORD *)v143 + 8))(v143);
      v142 = (_QWORD *)*v142;
    }
    while (v142);
    v144 = (void **)v177;
    if (v177)
    {
      do
      {
        v147 = (void **)*v144;
        if (*((char *)v144 + 39) < 0)
          operator delete(v144[2]);
        operator delete(v144);
        v144 = v147;
      }
      while (v147);
    }
  }
  v145 = __p[0];
  __p[0] = 0;
  if (v145)
    operator delete(v145);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239ABB014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,_QWORD *__p)
{
  _QWORD *v54;
  uint64_t v55;
  void **v56;
  void **v57;

  v54 = __p;
  if (__p)
  {
    do
    {
      v55 = v54[5];
      if (v55)
        (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
      v54 = (_QWORD *)*v54;
    }
    while (v54);
    v56 = (void **)__p;
    do
    {
      v57 = (void **)*v56;
      if (*((char *)v56 + 39) < 0)
        operator delete(v56[2]);
      operator delete(v56);
      v56 = v57;
    }
    while (v57);
  }
  if (!a51)
    _Unwind_Resume(a1);
  operator delete(a51);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_239ABB30C(unsigned __int8 *a1, int8x16_t a2, int8x16_t a3, double a4, int16x8_t a5, double a6, int16x8_t a7)
{
  int8x8_t v7;
  int16x8_t v8;
  int32x4_t v9;
  int16x8_t v10;
  int8x16_t v11;
  int32x4_t v12;
  int8x16_t v13;
  int16x8_t v14;

  a2.i64[0] = *(_QWORD *)(a1 + 1);
  a2.i8[8] = *a1;
  a3.i64[0] = *(_QWORD *)(a1 + 17);
  a3.i8[8] = *a1;
  v7 = (int8x8_t)vdup_n_s16(*a1);
  a5.i32[0] = *a1;
  v8 = a5;
  v8.i8[1] = a1[9];
  a7.i32[0] = a1[10];
  a7.i8[4] = a1[11];
  *(__int16 *)((char *)a7.i16 + 1) = a7.u8[4];
  v9 = (int32x4_t)vzip1q_s16(v8, a7);
  a7.i32[0] = *((_DWORD *)a1 + 3);
  v10 = (int16x8_t)vqtbl1q_s8((int8x16_t)vzip1q_s32(v9, (int32x4_t)a7), (int8x16_t)xmmword_239EC65C0);
  a2.i8[15] = a1[16];
  v11 = veorq_s8((int8x16_t)v10, vqtbl1q_s8(a2, (int8x16_t)xmmword_239EC65D0));
  *(__int16 *)((char *)a5.i16 + 1) = a1[25];
  v10.i32[0] = a1[26];
  v10.i8[4] = a1[27];
  *(__int16 *)((char *)v10.i16 + 1) = v10.u8[4];
  *(int8x16_t *)(a1 + 1) = v11;
  v12 = (int32x4_t)vzip1q_s16(a5, v10);
  a5.i32[0] = *((_DWORD *)a1 + 7);
  a3.i8[15] = a1[32];
  v13 = veorq_s8(vqtbl1q_s8((int8x16_t)vzip1q_s32(v12, (int32x4_t)a5), (int8x16_t)xmmword_239EC65C0), vqtbl1q_s8(a3, (int8x16_t)xmmword_239EC65D0));
  *(int8x16_t *)(a1 + 17) = v13;
  v13.i32[0] = *(_DWORD *)(a1 + 33);
  v14 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v13.i8);
  *(int8x8_t *)v14.i8 = veor_s8(v7, *(int8x8_t *)v14.i8);
  *(_DWORD *)(a1 + 33) = vmovn_s16(v14).u32[0];
  a1[37] = 0;
  return a1 + 1;
}

void sub_239ABB3E4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ABB408(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ABBFA8(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239ABB444(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  const char *v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int8x16_t v13;
  double v14;
  int32x4_t v15;
  const char *v16;
  const char *v17;
  size_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int8x16_t v24;
  double v25;
  int32x4_t v26;
  const char *v27;
  const char *v28;
  size_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int8x16_t v35;
  double v36;
  int32x4_t v37;
  const char *v38;
  const char *v39;
  size_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int8x16_t v46;
  double v47;
  int32x4_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  int8x16_t v57;
  double v58;
  int32x4_t v59;
  const char *v60;
  const char *v61;
  size_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  int8x16_t v68;
  double v69;
  int32x4_t v70;
  const char *v71;
  const char *v72;
  size_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  const char *v79;
  size_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  int8x16_t v86;
  double v87;
  int32x4_t v88;
  const char *v89;
  const char *v90;
  size_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  void **v99;
  void *v100;
  void **v102;
  void *v103[2];
  unint64_t v104;
  void *v105[2];
  unint64_t v106;
  void *v107[2];
  unint64_t v108;
  void *v109[2];
  unint64_t v110;
  void *v111[2];
  unint64_t v112;
  void *v113[2];
  unint64_t v114;
  void *v115[2];
  unint64_t v116;
  void *v117[2];
  unint64_t v118;
  void *__dst[2];
  unint64_t v120;
  void *__p[2];
  void *v122;
  _OWORD v123[2];
  char v124[16];
  _OWORD v125[2];
  unsigned __int8 v126[32];
  unsigned __int8 v127[32];
  char v128[32];
  char v129[32];
  char v130[40];
  char v131[16];
  uint64_t v132;

  v132 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v131, "D)%<\x1B-0!6%0-+*");
  sub_23958E5E0((uint64_t)v131);
  v6 = v5;
  v7 = strlen(v5);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v120 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v120) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250ADF240;
  v12[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  strcpy(v130, "/]NpGZMJ]pC@\\\\p[G]J\\G@CK");
  sub_2396EFC88((uint64_t)v130, *(int32x4_t *)"pC@\\\\p[G]J\\G@CK", v13, v14, v15);
  v17 = v16;
  v18 = strlen(v16);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = (void *)v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    v20 = operator new(v21 + 1);
    v117[1] = v19;
    v118 = v22 | 0x8000000000000000;
    v117[0] = v20;
    goto LABEL_16;
  }
  HIBYTE(v118) = v18;
  v20 = v117;
  if (v18)
LABEL_16:
    memmove(v20, v17, (size_t)v19);
  *((_BYTE *)v19 + (_QWORD)v20) = 0;
  v23 = (_QWORD *)operator new();
  *v23 = &off_250ADF360;
  v23[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v117, (uint64_t)v23);
  strcpy(v129, "'SFxOREBUxKHTTxSOUBTOHKC");
  sub_2396EFC88((uint64_t)v129, *(int32x4_t *)"xKHTTxSOUBTOHKC", v24, v25, v26);
  v28 = v27;
  v29 = strlen(v27);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    v115[1] = v30;
    v116 = v33 | 0x8000000000000000;
    v115[0] = v31;
    goto LABEL_24;
  }
  HIBYTE(v116) = v29;
  v31 = v115;
  if (v29)
LABEL_24:
    memmove(v31, v28, (size_t)v30);
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  v34 = (_QWORD *)operator new();
  *v34 = &off_250ADF360;
  v34[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v115, (uint64_t)v34);
  strcpy(v128, ">L[NLQTaVK\\[LaRQMMaJVL[MVQRZ");
  sub_2396EFD48((uint64_t)v128, *(int32x4_t *)"aRQMMaJVL[MVQRZ", v35, v36, v37);
  v39 = v38;
  v40 = strlen(v38);
  if (v40 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v41 = (void *)v40;
  if (v40 >= 0x17)
  {
    v43 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v40 | 7) != 0x17)
      v43 = v40 | 7;
    v44 = v43 + 1;
    v42 = operator new(v43 + 1);
    v113[1] = v41;
    v114 = v44 | 0x8000000000000000;
    v113[0] = v42;
    goto LABEL_32;
  }
  HIBYTE(v114) = v40;
  v42 = v113;
  if (v40)
LABEL_32:
    memmove(v42, v39, (size_t)v41);
  *((_BYTE *)v41 + (_QWORD)v42) = 0;
  v45 = (_QWORD *)operator new();
  *v45 = &off_250ADF360;
  v45[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v113, (uint64_t)v45);
  *(_OWORD *)v127 = xmmword_239F0FF04;
  *(_OWORD *)&v127[10] = *(__int128 *)((char *)&xmmword_239F0FF04 + 10);
  sub_239A93C04(v127, *(int32x4_t *)((char *)&xmmword_239F0FF04 + 10), v46, v47, v48);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v111[1] = v52;
    v112 = v55 | 0x8000000000000000;
    v111[0] = v53;
    goto LABEL_40;
  }
  HIBYTE(v112) = v51;
  v53 = v111;
  if (v51)
LABEL_40:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250ADF360;
  v56[1] = v4 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v111, (uint64_t)v56);
  *(_OWORD *)v126 = xmmword_239F0FF1E;
  *(_OWORD *)&v126[10] = *(__int128 *)((char *)&xmmword_239F0FF1E + 10);
  sub_239A93C04(v126, *(int32x4_t *)((char *)&xmmword_239F0FF1E + 10), v57, v58, v59);
  v61 = v60;
  v62 = strlen(v60);
  if (v62 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v63 = (void *)v62;
  if (v62 >= 0x17)
  {
    v65 = (v62 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v62 | 7) != 0x17)
      v65 = v62 | 7;
    v66 = v65 + 1;
    v64 = operator new(v65 + 1);
    v109[1] = v63;
    v110 = v66 | 0x8000000000000000;
    v109[0] = v64;
    goto LABEL_48;
  }
  HIBYTE(v110) = v62;
  v64 = v109;
  if (v62)
LABEL_48:
    memmove(v64, v61, (size_t)v63);
  *((_BYTE *)v63 + (_QWORD)v64) = 0;
  v67 = (_QWORD *)operator new();
  *v67 = &off_250ADF360;
  v67[1] = v4 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v109, (uint64_t)v67);
  v125[0] = xmmword_239F0FF38;
  *(_OWORD *)((char *)v125 + 14) = *(__int128 *)((char *)&xmmword_239F0FF38 + 14);
  sub_2396F0EE8((uint64_t)v125, *(int32x4_t *)((char *)&xmmword_239F0FF38 + 14), v68, v69, v70);
  v72 = v71;
  v73 = strlen(v71);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = (void *)v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    v107[1] = v74;
    v108 = v77 | 0x8000000000000000;
    v107[0] = v75;
    goto LABEL_56;
  }
  HIBYTE(v108) = v73;
  v75 = v107;
  if (v73)
LABEL_56:
    memmove(v75, v72, (size_t)v74);
  *((_BYTE *)v74 + (_QWORD)v75) = 0;
  v78 = (_QWORD *)operator new();
  *v78 = &off_250ADF360;
  v78[1] = v4 + 56;
  sub_23961580C((uint64_t)__p, (uint64_t)v107, (uint64_t)v78);
  strcpy(v124, "*\\OXHEYO");
  v79 = sub_239513718(v124);
  v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v81 = (void *)v80;
  if (v80 >= 0x17)
  {
    v83 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17)
      v83 = v80 | 7;
    v84 = v83 + 1;
    v82 = operator new(v83 + 1);
    v105[1] = v81;
    v106 = v84 | 0x8000000000000000;
    v105[0] = v82;
    goto LABEL_64;
  }
  HIBYTE(v106) = v80;
  v82 = v105;
  if (v80)
LABEL_64:
    memmove(v82, v79, (size_t)v81);
  *((_BYTE *)v81 + (_QWORD)v82) = 0;
  v85 = (_QWORD *)operator new();
  *v85 = &off_250AE0220;
  v85[1] = v4 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v105, (uint64_t)v85);
  v123[0] = xmmword_239F111FA;
  *(_OWORD *)((char *)v123 + 15) = *(__int128 *)((char *)&xmmword_239F111FA + 15);
  sub_2396EFF58((uint64_t)v123, *(int32x4_t *)((char *)&xmmword_239F111FA + 15), v86, v87, v88);
  v90 = v89;
  v91 = strlen(v89);
  if (v91 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v92 = (void *)v91;
  if (v91 >= 0x17)
  {
    v94 = (v91 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v91 | 7) != 0x17)
      v94 = v91 | 7;
    v95 = v94 + 1;
    v93 = operator new(v94 + 1);
    v103[1] = v92;
    v104 = v95 | 0x8000000000000000;
    v103[0] = v93;
    goto LABEL_72;
  }
  HIBYTE(v104) = v91;
  v93 = v103;
  if (v91)
LABEL_72:
    memmove(v93, v90, (size_t)v92);
  *((_BYTE *)v92 + (_QWORD)v93) = 0;
  v96 = (_QWORD *)operator new();
  *v96 = &off_250AE0220;
  v96[1] = v4 + 65;
  sub_23961580C((uint64_t)__p, (uint64_t)v103, (uint64_t)v96);
  if (SHIBYTE(v104) < 0)
  {
    operator delete(v103[0]);
    if ((SHIBYTE(v106) & 0x80000000) == 0)
    {
LABEL_75:
      if ((SHIBYTE(v108) & 0x80000000) == 0)
        goto LABEL_76;
      goto LABEL_96;
    }
  }
  else if ((SHIBYTE(v106) & 0x80000000) == 0)
  {
    goto LABEL_75;
  }
  operator delete(v105[0]);
  if ((SHIBYTE(v108) & 0x80000000) == 0)
  {
LABEL_76:
    if ((SHIBYTE(v110) & 0x80000000) == 0)
      goto LABEL_77;
    goto LABEL_97;
  }
LABEL_96:
  operator delete(v107[0]);
  if ((SHIBYTE(v110) & 0x80000000) == 0)
  {
LABEL_77:
    if ((SHIBYTE(v112) & 0x80000000) == 0)
      goto LABEL_78;
    goto LABEL_98;
  }
LABEL_97:
  operator delete(v109[0]);
  if ((SHIBYTE(v112) & 0x80000000) == 0)
  {
LABEL_78:
    if ((SHIBYTE(v114) & 0x80000000) == 0)
      goto LABEL_79;
    goto LABEL_99;
  }
LABEL_98:
  operator delete(v111[0]);
  if ((SHIBYTE(v114) & 0x80000000) == 0)
  {
LABEL_79:
    if ((SHIBYTE(v116) & 0x80000000) == 0)
      goto LABEL_80;
    goto LABEL_100;
  }
LABEL_99:
  operator delete(v113[0]);
  if ((SHIBYTE(v116) & 0x80000000) == 0)
  {
LABEL_80:
    if ((SHIBYTE(v118) & 0x80000000) == 0)
      goto LABEL_81;
LABEL_101:
    operator delete(v117[0]);
    if ((SHIBYTE(v120) & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_102;
  }
LABEL_100:
  operator delete(v115[0]);
  if (SHIBYTE(v118) < 0)
    goto LABEL_101;
LABEL_81:
  if ((SHIBYTE(v120) & 0x80000000) == 0)
    goto LABEL_82;
LABEL_102:
  operator delete(__dst[0]);
LABEL_82:
  sub_23959479C((uint64_t)__p, a2);
  v97 = v122;
  if (v122)
  {
    do
    {
      v98 = v97[5];
      if (v98)
        (*(void (**)(uint64_t))(*(_QWORD *)v98 + 8))(v98);
      v97 = (_QWORD *)*v97;
    }
    while (v97);
    v99 = (void **)v122;
    if (v122)
    {
      do
      {
        v102 = (void **)*v99;
        if (*((char *)v99 + 39) < 0)
          operator delete(v99[2]);
        operator delete(v99);
        v99 = v102;
      }
      while (v102);
    }
  }
  v100 = __p[0];
  __p[0] = 0;
  if (v100)
    operator delete(v100);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239ABBD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,_QWORD *__p)
{
  _QWORD *v40;
  uint64_t v41;
  void **v42;
  void **v43;

  v40 = __p;
  if (__p)
  {
    do
    {
      v41 = v40[5];
      if (v41)
        (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
      v40 = (_QWORD *)*v40;
    }
    while (v40);
    v42 = (void **)__p;
    do
    {
      v43 = (void **)*v42;
      if (*((char *)v42 + 39) < 0)
        operator delete(v42[2]);
      operator delete(v42);
      v42 = v43;
    }
    while (v43);
  }
  if (!a37)
    _Unwind_Resume(a1);
  operator delete(a37);
  _Unwind_Resume(a1);
}

_QWORD *sub_239ABBFA8(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int8x16_t v13;
  double v14;
  int32x4_t v15;
  const char *v16;
  const char *v17;
  size_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int8x16_t v24;
  double v25;
  int32x4_t v26;
  const char *v27;
  const char *v28;
  size_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int8x16_t v35;
  double v36;
  int32x4_t v37;
  const char *v38;
  const char *v39;
  size_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int8x16_t v46;
  double v47;
  int32x4_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  int8x16_t v57;
  double v58;
  int32x4_t v59;
  const char *v60;
  const char *v61;
  size_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  int8x16_t v68;
  double v69;
  int32x4_t v70;
  const char *v71;
  const char *v72;
  size_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  const char *v79;
  size_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  int8x16_t v86;
  double v87;
  int32x4_t v88;
  const char *v89;
  const char *v90;
  size_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  void **v99;
  void *v100;
  void **v102;
  void *v103[2];
  unint64_t v104;
  void *v105[2];
  unint64_t v106;
  void *v107[2];
  unint64_t v108;
  void *v109[2];
  unint64_t v110;
  void *v111[2];
  unint64_t v112;
  void *v113[2];
  unint64_t v114;
  void *v115[2];
  unint64_t v116;
  void *v117[2];
  unint64_t v118;
  void *__dst[2];
  unint64_t v120;
  void *__p[2];
  void *v122;
  char v123[32];
  char v124[16];
  _OWORD v125[2];
  unsigned __int8 v126[32];
  unsigned __int8 v127[32];
  char v128[32];
  _OWORD v129[2];
  char v130[40];
  char v131[16];
  uint64_t v132;

  v132 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v131, "W:6/\b>#2%6#>89");
  sub_23958E5E0((uint64_t)v131);
  v6 = v5;
  v7 = strlen(v5);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v120 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v120) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250ADF5A0;
  v12[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  strcpy(v130, "\aufXorebuXkhttXsoubtohkc");
  sub_2396EFC88((uint64_t)v130, *(int32x4_t *)"XkhttXsoubtohkc", v13, v14, v15);
  v17 = v16;
  v18 = strlen(v16);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = (void *)v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    v20 = operator new(v21 + 1);
    v117[1] = v19;
    v118 = v22 | 0x8000000000000000;
    v117[0] = v20;
    goto LABEL_16;
  }
  HIBYTE(v118) = v18;
  v20 = v117;
  if (v18)
LABEL_16:
    memmove(v20, v17, (size_t)v19);
  *((_BYTE *)v19 + (_QWORD)v20) = 0;
  v23 = (_QWORD *)operator new();
  *v23 = &off_250ADF570;
  v23[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v117, (uint64_t)v23);
  v129[0] = xmmword_239F0F13C;
  *(_OWORD *)((char *)v129 + 9) = *(__int128 *)((char *)&xmmword_239F0F13C + 9);
  sub_2396EFC88((uint64_t)v129, *(int32x4_t *)((char *)&xmmword_239F0F13C + 9), v24, v25, v26);
  v28 = v27;
  v29 = strlen(v27);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    v115[1] = v30;
    v116 = v33 | 0x8000000000000000;
    v115[0] = v31;
    goto LABEL_24;
  }
  HIBYTE(v116) = v29;
  v31 = v115;
  if (v29)
LABEL_24:
    memmove(v31, v28, (size_t)v30);
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  v34 = (_QWORD *)operator new();
  *v34 = &off_250ADF570;
  v34[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v115, (uint64_t)v34);
  strcpy(v128, "*XOZXE@uB_HOXuFEYYu^BXOYBEFN");
  sub_2396EFD48((uint64_t)v128, *(int32x4_t *)"uFEYYu^BXOYBEFN", v35, v36, v37);
  v39 = v38;
  v40 = strlen(v38);
  if (v40 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v41 = (void *)v40;
  if (v40 >= 0x17)
  {
    v43 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v40 | 7) != 0x17)
      v43 = v40 | 7;
    v44 = v43 + 1;
    v42 = operator new(v43 + 1);
    v113[1] = v41;
    v114 = v44 | 0x8000000000000000;
    v113[0] = v42;
    goto LABEL_32;
  }
  HIBYTE(v114) = v40;
  v42 = v113;
  if (v40)
LABEL_32:
    memmove(v42, v39, (size_t)v41);
  *((_BYTE *)v41 + (_QWORD)v42) = 0;
  v45 = (_QWORD *)operator new();
  *v45 = &off_250ADF570;
  v45[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v113, (uint64_t)v45);
  *(_OWORD *)v127 = xmmword_239F0F172;
  *(_OWORD *)&v127[10] = *(__int128 *)((char *)&xmmword_239F0F172 + 10);
  sub_239A93C04(v127, *(int32x4_t *)((char *)&xmmword_239F0F172 + 10), v46, v47, v48);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v111[1] = v52;
    v112 = v55 | 0x8000000000000000;
    v111[0] = v53;
    goto LABEL_40;
  }
  HIBYTE(v112) = v51;
  v53 = v111;
  if (v51)
LABEL_40:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250ADF570;
  v56[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v111, (uint64_t)v56);
  *(_OWORD *)v126 = xmmword_239F0F18C;
  *(_OWORD *)&v126[10] = *(__int128 *)((char *)&xmmword_239F0F18C + 10);
  sub_239A93C04(v126, *(int32x4_t *)((char *)&xmmword_239F0F18C + 10), v57, v58, v59);
  v61 = v60;
  v62 = strlen(v60);
  if (v62 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v63 = (void *)v62;
  if (v62 >= 0x17)
  {
    v65 = (v62 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v62 | 7) != 0x17)
      v65 = v62 | 7;
    v66 = v65 + 1;
    v64 = operator new(v65 + 1);
    v109[1] = v63;
    v110 = v66 | 0x8000000000000000;
    v109[0] = v64;
    goto LABEL_48;
  }
  HIBYTE(v110) = v62;
  v64 = v109;
  if (v62)
LABEL_48:
    memmove(v64, v61, (size_t)v63);
  *((_BYTE *)v63 + (_QWORD)v64) = 0;
  v67 = (_QWORD *)operator new();
  *v67 = &off_250ADF570;
  v67[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v109, (uint64_t)v67);
  v125[0] = xmmword_239F0F1A6;
  *(_OWORD *)((char *)v125 + 14) = *(__int128 *)((char *)&xmmword_239F0F1A6 + 14);
  sub_2396F0EE8((uint64_t)v125, *(int32x4_t *)((char *)&xmmword_239F0F1A6 + 14), v68, v69, v70);
  v72 = v71;
  v73 = strlen(v71);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = (void *)v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    v107[1] = v74;
    v108 = v77 | 0x8000000000000000;
    v107[0] = v75;
    goto LABEL_56;
  }
  HIBYTE(v108) = v73;
  v75 = v107;
  if (v73)
LABEL_56:
    memmove(v75, v72, (size_t)v74);
  *((_BYTE *)v74 + (_QWORD)v75) = 0;
  v78 = (_QWORD *)operator new();
  *v78 = &off_250ADF570;
  v78[1] = a1 + 56;
  sub_23961580C((uint64_t)__p, (uint64_t)v107, (uint64_t)v78);
  strcpy(v124, "+]NYIDXN");
  v79 = sub_239513718(v124);
  v80 = strlen(v79);
  if (v80 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v81 = (void *)v80;
  if (v80 >= 0x17)
  {
    v83 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17)
      v83 = v80 | 7;
    v84 = v83 + 1;
    v82 = operator new(v83 + 1);
    v105[1] = v81;
    v106 = v84 | 0x8000000000000000;
    v105[0] = v82;
    goto LABEL_64;
  }
  HIBYTE(v106) = v80;
  v82 = v105;
  if (v80)
LABEL_64:
    memmove(v82, v79, (size_t)v81);
  *((_BYTE *)v81 + (_QWORD)v82) = 0;
  v85 = (_QWORD *)operator new();
  *v85 = &off_250AFFEA8;
  v85[1] = a1 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v105, (uint64_t)v85);
  strcpy(v123, "!B@MBTM@UD~HOHUH@M~BNOEHUHNODS");
  sub_2396EFF58((uint64_t)v123, *(int32x4_t *)"H@M~BNOEHUHNODS", v86, v87, v88);
  v90 = v89;
  v91 = strlen(v89);
  if (v91 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v92 = (void *)v91;
  if (v91 >= 0x17)
  {
    v94 = (v91 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v91 | 7) != 0x17)
      v94 = v91 | 7;
    v95 = v94 + 1;
    v93 = operator new(v94 + 1);
    v103[1] = v92;
    v104 = v95 | 0x8000000000000000;
    v103[0] = v93;
    goto LABEL_72;
  }
  HIBYTE(v104) = v91;
  v93 = v103;
  if (v91)
LABEL_72:
    memmove(v93, v90, (size_t)v92);
  *((_BYTE *)v92 + (_QWORD)v93) = 0;
  v96 = (_QWORD *)operator new();
  *v96 = &off_250AFFEA8;
  v96[1] = a1 + 65;
  sub_23961580C((uint64_t)__p, (uint64_t)v103, (uint64_t)v96);
  if (SHIBYTE(v104) < 0)
  {
    operator delete(v103[0]);
    if ((SHIBYTE(v106) & 0x80000000) == 0)
    {
LABEL_75:
      if ((SHIBYTE(v108) & 0x80000000) == 0)
        goto LABEL_76;
      goto LABEL_96;
    }
  }
  else if ((SHIBYTE(v106) & 0x80000000) == 0)
  {
    goto LABEL_75;
  }
  operator delete(v105[0]);
  if ((SHIBYTE(v108) & 0x80000000) == 0)
  {
LABEL_76:
    if ((SHIBYTE(v110) & 0x80000000) == 0)
      goto LABEL_77;
    goto LABEL_97;
  }
LABEL_96:
  operator delete(v107[0]);
  if ((SHIBYTE(v110) & 0x80000000) == 0)
  {
LABEL_77:
    if ((SHIBYTE(v112) & 0x80000000) == 0)
      goto LABEL_78;
    goto LABEL_98;
  }
LABEL_97:
  operator delete(v109[0]);
  if ((SHIBYTE(v112) & 0x80000000) == 0)
  {
LABEL_78:
    if ((SHIBYTE(v114) & 0x80000000) == 0)
      goto LABEL_79;
    goto LABEL_99;
  }
LABEL_98:
  operator delete(v111[0]);
  if ((SHIBYTE(v114) & 0x80000000) == 0)
  {
LABEL_79:
    if ((SHIBYTE(v116) & 0x80000000) == 0)
      goto LABEL_80;
    goto LABEL_100;
  }
LABEL_99:
  operator delete(v113[0]);
  if ((SHIBYTE(v116) & 0x80000000) == 0)
  {
LABEL_80:
    if ((SHIBYTE(v118) & 0x80000000) == 0)
      goto LABEL_81;
LABEL_101:
    operator delete(v117[0]);
    if ((SHIBYTE(v120) & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_102;
  }
LABEL_100:
  operator delete(v115[0]);
  if (SHIBYTE(v118) < 0)
    goto LABEL_101;
LABEL_81:
  if ((SHIBYTE(v120) & 0x80000000) == 0)
    goto LABEL_82;
LABEL_102:
  operator delete(__dst[0]);
LABEL_82:
  sub_2395902F0((uint64_t)__p, a2);
  v97 = v122;
  if (v122)
  {
    do
    {
      v98 = v97[5];
      if (v98)
        (*(void (**)(uint64_t))(*(_QWORD *)v98 + 8))(v98);
      v97 = (_QWORD *)*v97;
    }
    while (v97);
    v99 = (void **)v122;
    if (v122)
    {
      do
      {
        v102 = (void **)*v99;
        if (*((char *)v99 + 39) < 0)
          operator delete(v99[2]);
        operator delete(v99);
        v99 = v102;
      }
      while (v102);
    }
  }
  v100 = __p[0];
  __p[0] = 0;
  if (v100)
    operator delete(v100);
  return a2;
}

void sub_239ABC8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,char a37)
{
  sub_2395905C0((uint64_t)&a37);
  _Unwind_Resume(a1);
}

_QWORD *sub_239ABCA70(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  int16x8_t v13;
  const char *v14;
  const char *v15;
  size_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  double v22;
  int16x8_t v23;
  const char *v24;
  const char *v25;
  size_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  double v32;
  int16x8_t v33;
  double v34;
  int16x8_t v35;
  unsigned __int8 *v36;
  size_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  double v43;
  double v44;
  int16x8_t v45;
  const char *v46;
  const char *v47;
  size_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int8x16_t v54;
  double v55;
  int32x4_t v56;
  const char *v57;
  const char *v58;
  size_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  int8x16_t v65;
  double v66;
  int32x4_t v67;
  const char *v68;
  const char *v69;
  size_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  const char *v76;
  const char *v77;
  size_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  const char *v84;
  size_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  int8x16_t v91;
  double v92;
  int32x4_t v93;
  const char *v94;
  const char *v95;
  size_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  int8x16_t v102;
  double v103;
  int32x4_t v104;
  const char *v105;
  const char *v106;
  size_t v107;
  void *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  double v113;
  int16x8_t v114;
  const char *v115;
  const char *v116;
  size_t v117;
  void *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  double v123;
  double v124;
  int16x8_t v125;
  const char *v126;
  const char *v127;
  size_t v128;
  void *v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  const char *v134;
  const char *v135;
  size_t v136;
  void *v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  void **v144;
  void *v145;
  void **v147;
  void *v148[2];
  unint64_t v149;
  void *v150[2];
  unint64_t v151;
  void *v152[2];
  unint64_t v153;
  void *v154[2];
  unint64_t v155;
  void *v156[2];
  unint64_t v157;
  void *v158[2];
  unint64_t v159;
  void *v160[2];
  unint64_t v161;
  void *v162[2];
  unint64_t v163;
  void *v164[2];
  unint64_t v165;
  void *v166[2];
  unint64_t v167;
  void *v168[2];
  unint64_t v169;
  void *v170[2];
  unint64_t v171;
  void *v172[2];
  unint64_t v173;
  void *__dst[2];
  unint64_t v175;
  void *__p[2];
  void *v177;
  uint64_t v178;
  char v179[8];
  _OWORD v180[2];
  uint64_t v181;
  char v182[48];
  char v183[32];
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  char v187[8];
  __int128 v188;
  char v189;
  _OWORD v190[2];
  __int128 v191;
  int v192;
  _OWORD v193[2];
  __int16 v194;
  __int128 v195;
  int8x16_t v196[2];
  __int128 v197;
  _OWORD v198[2];
  __int128 v199;
  _BYTE v200[19];
  char v201[16];
  uint64_t v202;

  v202 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v201, "\"LWO}VJPGCFQ");
  v5 = sub_239510ECC((uint64_t)v201);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v175 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v175) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFE48;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v199 = xmmword_239F0F059;
  *(_OWORD *)v200 = *(_OWORD *)dbl_239F0F069;
  *(_DWORD *)&v200[15] = 1120275;
  sub_2396F0060((unsigned __int8 *)&v199, (int16x8_t)xmmword_239F0F059, dbl_239F0F069[0], v12, v13);
  v15 = v14;
  v16 = strlen(v14);
  if (v16 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = (void *)v16;
  if (v16 >= 0x17)
  {
    v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17)
      v19 = v16 | 7;
    v20 = v19 + 1;
    v18 = operator new(v19 + 1);
    v172[1] = v17;
    v173 = v20 | 0x8000000000000000;
    v172[0] = v18;
    goto LABEL_16;
  }
  HIBYTE(v173) = v16;
  v18 = v172;
  if (v16)
LABEL_16:
    memmove(v18, v15, (size_t)v17);
  *((_BYTE *)v17 + (_QWORD)v18) = 0;
  v21 = (_QWORD *)operator new();
  *v21 = &off_250ADF570;
  v21[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v172, (uint64_t)v21);
  v197 = xmmword_239F0F07C;
  v198[0] = *(_OWORD *)dbl_239F0F08C;
  *(_DWORD *)((char *)v198 + 15) = 3090212;
  sub_2396F0060((unsigned __int8 *)&v197, (int16x8_t)xmmword_239F0F07C, dbl_239F0F08C[0], v22, v23);
  v25 = v24;
  v26 = strlen(v24);
  if (v26 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v27 = (void *)v26;
  if (v26 >= 0x17)
  {
    v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v29 = v26 | 7;
    v30 = v29 + 1;
    v28 = operator new(v29 + 1);
    v170[1] = v27;
    v171 = v30 | 0x8000000000000000;
    v170[0] = v28;
    goto LABEL_24;
  }
  HIBYTE(v171) = v26;
  v28 = v170;
  if (v26)
LABEL_24:
    memmove(v28, v25, (size_t)v27);
  *((_BYTE *)v27 + (_QWORD)v28) = 0;
  v31 = (_QWORD *)operator new();
  *v31 = &off_250ADF570;
  v31[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v170, (uint64_t)v31);
  v195 = xmmword_239F0F09F;
  v196[0] = xmmword_239F0F0AF;
  *(uint64_t *)((char *)&v196[0].i64[1] + 6) = 0x2F272423382E39;
  v36 = sub_239ABB30C((unsigned __int8 *)&v195, (int8x16_t)xmmword_239F0F09F, xmmword_239F0F0AF, v32, v33, v34, v35);
  v37 = strlen((const char *)v36);
  if (v37 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v38 = (void *)v37;
  if (v37 >= 0x17)
  {
    v40 = (v37 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v37 | 7) != 0x17)
      v40 = v37 | 7;
    v41 = v40 + 1;
    v39 = operator new(v40 + 1);
    v168[1] = v38;
    v169 = v41 | 0x8000000000000000;
    v168[0] = v39;
    goto LABEL_32;
  }
  HIBYTE(v169) = v37;
  v39 = v168;
  if (v37)
LABEL_32:
    memmove(v39, v36, (size_t)v38);
  *((_BYTE *)v38 + (_QWORD)v39) = 0;
  v42 = (_QWORD *)operator new();
  *v42 = &off_250ADF570;
  v42[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v168, (uint64_t)v42);
  v193[0] = xmmword_239F0F0C5;
  v193[1] = *(_OWORD *)dbl_239F0F0D5;
  v194 = 21;
  sub_2396F0120((unsigned __int8 *)v193, (int16x8_t)xmmword_239F0F0C5, dbl_239F0F0D5[0], v43, v44, v45);
  v47 = v46;
  v48 = strlen(v46);
  if (v48 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v49 = (void *)v48;
  if (v48 >= 0x17)
  {
    v51 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v48 | 7) != 0x17)
      v51 = v48 | 7;
    v52 = v51 + 1;
    v50 = operator new(v51 + 1);
    v166[1] = v49;
    v167 = v52 | 0x8000000000000000;
    v166[0] = v50;
    goto LABEL_40;
  }
  HIBYTE(v167) = v48;
  v50 = v166;
  if (v48)
LABEL_40:
    memmove(v50, v47, (size_t)v49);
  *((_BYTE *)v49 + (_QWORD)v50) = 0;
  v53 = (_QWORD *)operator new();
  *v53 = &off_250ADF570;
  v53[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v166, (uint64_t)v53);
  v191 = xmmword_239F0F0E7;
  v192 = 4342108;
  sub_23958E55C((uint64_t)&v191, (int32x4_t)xmmword_239F0F0E7, v54, v55, v56);
  v58 = v57;
  v59 = strlen(v57);
  if (v59 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v60 = (void *)v59;
  if (v59 >= 0x17)
  {
    v62 = (v59 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v59 | 7) != 0x17)
      v62 = v59 | 7;
    v63 = v62 + 1;
    v61 = operator new(v62 + 1);
    v164[1] = v60;
    v165 = v63 | 0x8000000000000000;
    v164[0] = v61;
    goto LABEL_48;
  }
  HIBYTE(v165) = v59;
  v61 = v164;
  if (v59)
LABEL_48:
    memmove(v61, v58, (size_t)v60);
  *((_BYTE *)v60 + (_QWORD)v61) = 0;
  v64 = (_QWORD *)operator new();
  *v64 = &off_250AFFEA8;
  v64[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v164, (uint64_t)v64);
  v190[0] = xmmword_239F0F0FB;
  *(_QWORD *)((char *)v190 + 15) = 0x787A7C6F786B7CLL;
  sub_2396EFBE0((uint64_t)v190, (int32x4_t)xmmword_239F0F0FB, v65, v66, v67);
  v69 = v68;
  v70 = strlen(v68);
  if (v70 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v71 = (void *)v70;
  if (v70 >= 0x17)
  {
    v73 = (v70 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v70 | 7) != 0x17)
      v73 = v70 | 7;
    v74 = v73 + 1;
    v72 = operator new(v73 + 1);
    v162[1] = v71;
    v163 = v74 | 0x8000000000000000;
    v162[0] = v72;
    goto LABEL_56;
  }
  HIBYTE(v163) = v70;
  v72 = v162;
  if (v70)
LABEL_56:
    memmove(v72, v69, (size_t)v71);
  *((_BYTE *)v71 + (_QWORD)v72) = 0;
  v75 = (_QWORD *)operator new();
  *v75 = &off_250AFFEA8;
  v75[1] = a1 + 41;
  sub_23961580C((uint64_t)__p, (uint64_t)v162, (uint64_t)v75);
  v188 = xmmword_239F0F112;
  v189 = 0;
  sub_2396EFA24((uint64_t)&v188);
  v77 = v76;
  v78 = strlen(v76);
  if (v78 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v79 = (void *)v78;
  if (v78 >= 0x17)
  {
    v81 = (v78 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v78 | 7) != 0x17)
      v81 = v78 | 7;
    v82 = v81 + 1;
    v80 = operator new(v81 + 1);
    v160[1] = v79;
    v161 = v82 | 0x8000000000000000;
    v160[0] = v80;
    goto LABEL_64;
  }
  HIBYTE(v161) = v78;
  v80 = v160;
  if (v78)
LABEL_64:
    memmove(v80, v77, (size_t)v79);
  *((_BYTE *)v79 + (_QWORD)v80) = 0;
  v83 = (_QWORD *)operator new();
  *v83 = &off_250AFFEA8;
  v83[1] = a1 + 42;
  sub_23961580C((uint64_t)__p, (uint64_t)v160, (uint64_t)v83);
  v186 = 0x1F2729262E2F2340;
  strcpy(v187, "-!");
  v84 = (const char *)sub_23958E518((uint64_t)&v186);
  v85 = strlen(v84);
  if (v85 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v86 = (void *)v85;
  if (v85 >= 0x17)
  {
    v88 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v85 | 7) != 0x17)
      v88 = v85 | 7;
    v89 = v88 + 1;
    v87 = operator new(v88 + 1);
    v158[1] = v86;
    v159 = v89 | 0x8000000000000000;
    v158[0] = v87;
    goto LABEL_72;
  }
  HIBYTE(v159) = v85;
  v87 = v158;
  if (v85)
LABEL_72:
    memmove(v87, v84, (size_t)v86);
  *((_BYTE *)v86 + (_QWORD)v87) = 0;
  v90 = (_QWORD *)operator new();
  *v90 = &off_250B00118;
  v90[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v158, (uint64_t)v90);
  v184 = xmmword_239F0F1E3;
  v185 = 0x474E495245544CLL;
  sub_2396F1A4C((uint64_t)&v184, (int32x4_t)xmmword_239F0F1E3, v91, v92, v93);
  v95 = v94;
  v96 = strlen(v94);
  if (v96 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v97 = (void *)v96;
  if (v96 >= 0x17)
  {
    v99 = (v96 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v96 | 7) != 0x17)
      v99 = v96 | 7;
    v100 = v99 + 1;
    v98 = operator new(v99 + 1);
    v156[1] = v97;
    v157 = v100 | 0x8000000000000000;
    v156[0] = v98;
    goto LABEL_80;
  }
  HIBYTE(v157) = v96;
  v98 = v156;
  if (v96)
LABEL_80:
    memmove(v98, v95, (size_t)v97);
  *((_BYTE *)v97 + (_QWORD)v98) = 0;
  v101 = (_QWORD *)operator new();
  *v101 = &off_250AFFEA8;
  v101[1] = a1 + 168;
  sub_23961580C((uint64_t)__p, (uint64_t)v156, (uint64_t)v101);
  strcpy(v183, "'RTBxSUFDLTxNIxJHSNHIxFQBUF@B");
  sub_2396F0EE8((uint64_t)v183, *(int32x4_t *)"xJHSNHIxFQBUF@B", v102, v103, v104);
  v106 = v105;
  v107 = strlen(v105);
  if (v107 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v108 = (void *)v107;
  if (v107 >= 0x17)
  {
    v110 = (v107 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v107 | 7) != 0x17)
      v110 = v107 | 7;
    v111 = v110 + 1;
    v109 = operator new(v110 + 1);
    v154[1] = v108;
    v155 = v111 | 0x8000000000000000;
    v154[0] = v109;
    goto LABEL_88;
  }
  HIBYTE(v155) = v107;
  v109 = v154;
  if (v107)
LABEL_88:
    memmove(v109, v106, (size_t)v108);
  *((_BYTE *)v108 + (_QWORD)v109) = 0;
  v112 = (_QWORD *)operator new();
  *v112 = &off_250AFFEA8;
  v112[1] = a1 + 169;
  sub_23961580C((uint64_t)__p, (uint64_t)v154, (uint64_t)v112);
  strcpy(v182, "+FJSt_YJH@tGNEL_CtMDYtFD_BDEtJ]NYJLN");
  sub_2396F11DC((unsigned __int8 *)v182, *(int16x8_t *)"+FJSt_YJH@tGNEL_CtMDYtFD_BDEtJ]NYJLN", *(double *)"CtMDYtFD_BDEtJ]NYJLN", v113, v114);
  v116 = v115;
  v117 = strlen(v115);
  if (v117 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v118 = (void *)v117;
  if (v117 >= 0x17)
  {
    v120 = (v117 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v117 | 7) != 0x17)
      v120 = v117 | 7;
    v121 = v120 + 1;
    v119 = operator new(v120 + 1);
    v152[1] = v118;
    v153 = v121 | 0x8000000000000000;
    v152[0] = v119;
    goto LABEL_96;
  }
  HIBYTE(v153) = v117;
  v119 = v152;
  if (v117)
LABEL_96:
    memmove(v119, v116, (size_t)v118);
  *((_BYTE *)v118 + (_QWORD)v119) = 0;
  v122 = (_QWORD *)operator new();
  *v122 = &off_250AFFE48;
  v122[1] = a1 + 176;
  sub_23961580C((uint64_t)__p, (uint64_t)v152, (uint64_t)v122);
  v180[0] = xmmword_239F0F23E;
  v180[1] = xmmword_239F0F24E;
  v181 = 0x7050310071403;
  sub_2396F02A0((unsigned __int8 *)v180, 6.29703012e-294, xmmword_239F0F24E, v123, v124, v125);
  v127 = v126;
  v128 = strlen(v126);
  if (v128 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v129 = (void *)v128;
  if (v128 >= 0x17)
  {
    v131 = (v128 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v128 | 7) != 0x17)
      v131 = v128 | 7;
    v132 = v131 + 1;
    v130 = operator new(v131 + 1);
    v150[1] = v129;
    v151 = v132 | 0x8000000000000000;
    v150[0] = v130;
    goto LABEL_104;
  }
  HIBYTE(v151) = v128;
  v130 = v150;
  if (v128)
LABEL_104:
    memmove(v130, v127, (size_t)v129);
  *((_BYTE *)v129 + (_QWORD)v130) = 0;
  v133 = (_QWORD *)operator new();
  *v133 = &off_250AFFE48;
  v133[1] = a1 + 184;
  sub_23961580C((uint64_t)__p, (uint64_t)v150, (uint64_t)v133);
  v178 = 0x5169676860616D0ELL;
  sub_23958E5E0((uint64_t)&v178);
  v135 = v134;
  v136 = strlen(v134);
  if (v136 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v137 = (void *)v136;
  if (v136 >= 0x17)
  {
    v139 = (v136 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v136 | 7) != 0x17)
      v139 = v136 | 7;
    v140 = v139 + 1;
    v138 = operator new(v139 + 1);
    v148[1] = v137;
    v149 = v140 | 0x8000000000000000;
    v148[0] = v138;
    goto LABEL_112;
  }
  HIBYTE(v149) = v136;
  v138 = v148;
  if (v136)
LABEL_112:
    memmove(v138, v135, (size_t)v137);
  *((_BYTE *)v137 + (_QWORD)v138) = 0;
  v141 = (_QWORD *)operator new();
  *v141 = &off_250B00088;
  v141[1] = a1 + 192;
  sub_23961580C((uint64_t)__p, (uint64_t)v148, (uint64_t)v141);
  if (SHIBYTE(v149) < 0)
  {
    operator delete(v148[0]);
    if ((SHIBYTE(v151) & 0x80000000) == 0)
    {
LABEL_115:
      if ((SHIBYTE(v153) & 0x80000000) == 0)
        goto LABEL_116;
      goto LABEL_141;
    }
  }
  else if ((SHIBYTE(v151) & 0x80000000) == 0)
  {
    goto LABEL_115;
  }
  operator delete(v150[0]);
  if ((SHIBYTE(v153) & 0x80000000) == 0)
  {
LABEL_116:
    if ((SHIBYTE(v155) & 0x80000000) == 0)
      goto LABEL_117;
    goto LABEL_142;
  }
LABEL_141:
  operator delete(v152[0]);
  if ((SHIBYTE(v155) & 0x80000000) == 0)
  {
LABEL_117:
    if ((SHIBYTE(v157) & 0x80000000) == 0)
      goto LABEL_118;
    goto LABEL_143;
  }
LABEL_142:
  operator delete(v154[0]);
  if ((SHIBYTE(v157) & 0x80000000) == 0)
  {
LABEL_118:
    if ((SHIBYTE(v159) & 0x80000000) == 0)
      goto LABEL_119;
    goto LABEL_144;
  }
LABEL_143:
  operator delete(v156[0]);
  if ((SHIBYTE(v159) & 0x80000000) == 0)
  {
LABEL_119:
    if ((SHIBYTE(v161) & 0x80000000) == 0)
      goto LABEL_120;
    goto LABEL_145;
  }
LABEL_144:
  operator delete(v158[0]);
  if ((SHIBYTE(v161) & 0x80000000) == 0)
  {
LABEL_120:
    if ((SHIBYTE(v163) & 0x80000000) == 0)
      goto LABEL_121;
    goto LABEL_146;
  }
LABEL_145:
  operator delete(v160[0]);
  if ((SHIBYTE(v163) & 0x80000000) == 0)
  {
LABEL_121:
    if ((SHIBYTE(v165) & 0x80000000) == 0)
      goto LABEL_122;
    goto LABEL_147;
  }
LABEL_146:
  operator delete(v162[0]);
  if ((SHIBYTE(v165) & 0x80000000) == 0)
  {
LABEL_122:
    if ((SHIBYTE(v167) & 0x80000000) == 0)
      goto LABEL_123;
    goto LABEL_148;
  }
LABEL_147:
  operator delete(v164[0]);
  if ((SHIBYTE(v167) & 0x80000000) == 0)
  {
LABEL_123:
    if ((SHIBYTE(v169) & 0x80000000) == 0)
      goto LABEL_124;
    goto LABEL_149;
  }
LABEL_148:
  operator delete(v166[0]);
  if ((SHIBYTE(v169) & 0x80000000) == 0)
  {
LABEL_124:
    if ((SHIBYTE(v171) & 0x80000000) == 0)
      goto LABEL_125;
    goto LABEL_150;
  }
LABEL_149:
  operator delete(v168[0]);
  if ((SHIBYTE(v171) & 0x80000000) == 0)
  {
LABEL_125:
    if ((SHIBYTE(v173) & 0x80000000) == 0)
      goto LABEL_126;
LABEL_151:
    operator delete(v172[0]);
    if ((SHIBYTE(v175) & 0x80000000) == 0)
      goto LABEL_127;
    goto LABEL_152;
  }
LABEL_150:
  operator delete(v170[0]);
  if (SHIBYTE(v173) < 0)
    goto LABEL_151;
LABEL_126:
  if ((SHIBYTE(v175) & 0x80000000) == 0)
    goto LABEL_127;
LABEL_152:
  operator delete(__dst[0]);
LABEL_127:
  sub_2395902F0((uint64_t)__p, a2);
  v142 = v177;
  if (v177)
  {
    do
    {
      v143 = v142[5];
      if (v143)
        (*(void (**)(uint64_t))(*(_QWORD *)v143 + 8))(v143);
      v142 = (_QWORD *)*v142;
    }
    while (v142);
    v144 = (void **)v177;
    if (v177)
    {
      do
      {
        v147 = (void **)*v144;
        if (*((char *)v144 + 39) < 0)
          operator delete(v144[2]);
        operator delete(v144);
        v144 = v147;
      }
      while (v147);
    }
  }
  v145 = __p[0];
  __p[0] = 0;
  if (v145)
    operator delete(v145);
  return a2;
}

void sub_239ABD844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,uint64_t a50,char a51)
{
  sub_2395905C0((uint64_t)&a51);
  _Unwind_Resume(a1);
}

void sub_239ABDAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  if (a44 < 0)
    JUMPOUT(0x239ABD934);
  JUMPOUT(0x239ABD9CCLL);
}

void sub_239ABDABC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ABDAE0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ABDB50(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239ABDB1C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

_QWORD *sub_239ABDB50(uint64_t a1, _QWORD *a2, char a3)
{
  int v5;
  int8x16_t v6;
  double v7;
  int32x4_t v8;
  const char *v9;
  const char *v10;
  size_t v11;
  void *v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int8x16_t v17;
  double v18;
  int32x4_t v19;
  const char *v20;
  const char *v21;
  size_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int8x16_t v28;
  double v29;
  int32x4_t v30;
  const char *v31;
  const char *v32;
  size_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  int8x16_t v39;
  double v40;
  int32x4_t v41;
  const char *v42;
  const char *v43;
  size_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  int32x4_t v50;
  double v51;
  int32x4_t v52;
  unsigned __int8 *v53;
  size_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  int8x16_t v60;
  double v61;
  int32x4_t v62;
  const char *v63;
  const char *v64;
  size_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  const char *v71;
  const char *v72;
  size_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  const char *v79;
  const char *v80;
  size_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  int32x4_t v87;
  double v88;
  int32x4_t v89;
  unsigned __int8 *v90;
  size_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  const char *v97;
  size_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  int8x16_t v104;
  double v105;
  int32x4_t v106;
  const char *v107;
  const char *v108;
  size_t v109;
  void *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  int8x16_t *v115;
  size_t v116;
  void *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  const char *v122;
  size_t v123;
  void *v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  int32x4_t v129;
  double v130;
  int32x4_t v131;
  unsigned __int8 *v132;
  size_t v133;
  void *v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  const char *v139;
  const char *v140;
  size_t v141;
  void *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  const char *v147;
  size_t v148;
  void *v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  const char *v154;
  size_t v155;
  void *v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  const char *v161;
  const char *v162;
  size_t v163;
  void *v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  int8x16_t v169;
  double v170;
  int32x4_t v171;
  const char *v172;
  const char *v173;
  size_t v174;
  void *v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  int8x16_t v180;
  double v181;
  int32x4_t v182;
  const char *v183;
  const char *v184;
  size_t v185;
  void *v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  const char *v191;
  const char *v192;
  size_t v193;
  void *v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  int8x16_t v199;
  double v200;
  int32x4_t v201;
  const char *v202;
  const char *v203;
  size_t v204;
  void *v205;
  void *v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  double v210;
  int32x4_t v211;
  const char *v212;
  const char *v213;
  size_t v214;
  void *v215;
  void *v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  _QWORD *v220;
  uint64_t v221;
  void **v222;
  void *v223;
  void **v225;
  void *v226[2];
  unint64_t v227;
  void *v228[2];
  unint64_t v229;
  void *v230[2];
  unint64_t v231;
  void *v232[2];
  unint64_t v233;
  void *v234[2];
  unint64_t v235;
  void *v236[2];
  unint64_t v237;
  void *v238[2];
  unint64_t v239;
  void *v240[2];
  unint64_t v241;
  void *v242[2];
  unint64_t v243;
  void *v244[2];
  unint64_t v245;
  void *v246[2];
  unint64_t v247;
  void *v248[2];
  unint64_t v249;
  void *v250[2];
  unint64_t v251;
  void *v252[2];
  unint64_t v253;
  void *v254[2];
  unint64_t v255;
  void *v256[2];
  unint64_t v257;
  void *v258[2];
  unint64_t v259;
  void *v260[2];
  unint64_t v261;
  void *v262[2];
  unint64_t v263;
  void *v264[2];
  unint64_t v265;
  void *v266[2];
  unint64_t v267;
  void *v268[2];
  unint64_t v269;
  void *__dst[2];
  unint64_t v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  void *__p[2];
  void *v280;
  int8x16_t v281[2];
  char v282;
  __int128 v283;
  int v284;
  char v285[16];
  _OWORD v286[2];
  char v287[32];
  __int128 v288;
  char v289[16];
  uint64_t v290;
  __int16 v291;
  char v292;
  __int128 v293;
  char v294;
  unsigned __int8 v295[32];
  char v296[16];
  int8x16_t v297[2];
  char v298[32];
  uint64_t v299;
  char v300;
  unsigned __int8 v301[32];
  __int128 v302;
  __int128 v303;
  char v304;
  _OWORD v305[2];
  char v306[32];
  _OWORD v307[2];
  _OWORD v308[2];
  char v309[32];
  _BYTE v310[21];
  uint64_t v311;

  v311 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v278 = *(unsigned __int8 *)(a1 + 146);
  v277 = *(unsigned __int8 *)(a1 + 147);
  v276 = *(unsigned __int8 *)(a1 + 148);
  v275 = *(unsigned __int8 *)(a1 + 149);
  v274 = *(unsigned __int8 *)(a1 + 150);
  v5 = *(_DWORD *)(a1 + 168);
  v273 = *(_DWORD *)(a1 + 164);
  v272 = v5;
  *(_OWORD *)v310 = xmmword_239F0ED3E;
  *(_QWORD *)&v310[13] = 0x636264796C7F68;
  sub_2396EFB50((uint64_t)v310, (int32x4_t)xmmword_239F0ED3E, v6, v7, v8);
  v10 = v9;
  v11 = strlen(v9);
  if (v11 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v12 = (void *)v11;
  if (v11 >= 0x17)
  {
    v14 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v14 = v11 | 7;
    v15 = v14 + 1;
    v13 = (void **)operator new(v14 + 1);
    v271 = v15 | 0x8000000000000000;
    __dst[0] = v13;
    __dst[1] = v12;
    goto LABEL_8;
  }
  HIBYTE(v271) = v11;
  v13 = __dst;
  if (v11)
LABEL_8:
    memmove(v13, v10, (size_t)v12);
  *((_BYTE *)v12 + (_QWORD)v13) = 0;
  v16 = (_QWORD *)operator new();
  *v16 = &off_250ADF5A0;
  v16[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v16);
  strcpy(v309, "4YULkRAXXk]@QFU@][Z");
  sub_23958E55C((uint64_t)v309, *(int32x4_t *)"4YULkRAXXk]@QFU@][Z", v17, v18, v19);
  v21 = v20;
  v22 = strlen(v20);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = (void *)v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    v269 = v26 | 0x8000000000000000;
    v268[0] = v24;
    v268[1] = v23;
    goto LABEL_16;
  }
  HIBYTE(v269) = v22;
  v24 = v268;
  if (v22)
LABEL_16:
    memmove(v24, v21, (size_t)v23);
  *((_BYTE *)v23 + (_QWORD)v24) = 0;
  v27 = (_QWORD *)operator new();
  *v27 = &off_250ADF5A0;
  v27[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v268, (uint64_t)v27);
  v308[0] = xmmword_239F0ED67;
  *(_QWORD *)((char *)v308 + 13) = 0x29282E33263522;
  sub_2396EFB50((uint64_t)v308, (int32x4_t)xmmword_239F0ED67, v28, v29, v30);
  v32 = v31;
  v33 = strlen(v31);
  if (v33 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v34 = (void *)v33;
  if (v33 >= 0x17)
  {
    v36 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17)
      v36 = v33 | 7;
    v37 = v36 + 1;
    v35 = operator new(v36 + 1);
    v266[1] = v34;
    v267 = v37 | 0x8000000000000000;
    v266[0] = v35;
    goto LABEL_24;
  }
  HIBYTE(v267) = v33;
  v35 = v266;
  if (v33)
LABEL_24:
    memmove(v35, v32, (size_t)v34);
  *((_BYTE *)v34 + (_QWORD)v35) = 0;
  v38 = (_QWORD *)operator new();
  *v38 = &off_250ADF5A0;
  v38[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v266, (uint64_t)v38);
  v307[0] = xmmword_239F0ED7C;
  *(_QWORD *)((char *)v307 + 15) = 0x1E1F1904110205;
  sub_2396EFBE0((uint64_t)v307, (int32x4_t)xmmword_239F0ED7C, v39, v40, v41);
  v43 = v42;
  v44 = strlen(v42);
  if (v44 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v45 = (void *)v44;
  if (v44 >= 0x17)
  {
    v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v44 | 7) != 0x17)
      v47 = v44 | 7;
    v48 = v47 + 1;
    v46 = operator new(v47 + 1);
    v264[1] = v45;
    v265 = v48 | 0x8000000000000000;
    v264[0] = v46;
    goto LABEL_32;
  }
  HIBYTE(v265) = v44;
  v46 = v264;
  if (v44)
LABEL_32:
    memmove(v46, v43, (size_t)v45);
  *((_BYTE *)v45 + (_QWORD)v46) = 0;
  v49 = (_QWORD *)operator new();
  *v49 = &off_250AE0580;
  v49[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v264, (uint64_t)v49);
  strcpy(v306, "$IE\\{BQHH{fe{@QVEPMKJ");
  v53 = sub_239A90BEC((unsigned __int8 *)v306, *(int8x16_t *)"$IE\\{BQHH{fe{@QVEPMKJ", v50, v51, v52);
  v54 = strlen((const char *)v53);
  if (v54 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v55 = (void *)v54;
  if (v54 >= 0x17)
  {
    v57 = (v54 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v54 | 7) != 0x17)
      v57 = v54 | 7;
    v58 = v57 + 1;
    v56 = operator new(v57 + 1);
    v262[1] = v55;
    v263 = v58 | 0x8000000000000000;
    v262[0] = v56;
    goto LABEL_40;
  }
  HIBYTE(v263) = v54;
  v56 = v262;
  if (v54)
LABEL_40:
    memmove(v56, v53, (size_t)v55);
  *((_BYTE *)v55 + (_QWORD)v56) = 0;
  v59 = (_QWORD *)operator new();
  *v59 = &off_250AE0580;
  v59[1] = a1 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v262, (uint64_t)v59);
  v305[0] = xmmword_239F0EDA9;
  *(_QWORD *)((char *)v305 + 15) = 0x5051574A5F4C4BLL;
  sub_2396EFBE0((uint64_t)v305, (int32x4_t)xmmword_239F0EDA9, v60, v61, v62);
  v64 = v63;
  v65 = strlen(v63);
  if (v65 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v66 = (void *)v65;
  if (v65 >= 0x17)
  {
    v68 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v65 | 7) != 0x17)
      v68 = v65 | 7;
    v69 = v68 + 1;
    v67 = operator new(v68 + 1);
    v260[1] = v66;
    v261 = v69 | 0x8000000000000000;
    v260[0] = v67;
    goto LABEL_48;
  }
  HIBYTE(v261) = v65;
  v67 = v260;
  if (v65)
LABEL_48:
    memmove(v67, v64, (size_t)v66);
  *((_BYTE *)v66 + (_QWORD)v67) = 0;
  v70 = (_QWORD *)operator new();
  *v70 = &off_250AE0580;
  v70[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v260, (uint64_t)v70);
  v303 = xmmword_239F0EDC0;
  v304 = 0;
  sub_2396EFA24((uint64_t)&v303);
  v72 = v71;
  v73 = strlen(v71);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = (void *)v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    v258[1] = v74;
    v259 = v77 | 0x8000000000000000;
    v258[0] = v75;
    goto LABEL_56;
  }
  HIBYTE(v259) = v73;
  v75 = v258;
  if (v73)
LABEL_56:
    memmove(v75, v72, (size_t)v74);
  *((_BYTE *)v74 + (_QWORD)v75) = 0;
  v78 = (_QWORD *)operator new();
  *v78 = &off_250AE0580;
  v78[1] = a1 + 28;
  sub_23961580C((uint64_t)__p, (uint64_t)v258, (uint64_t)v78);
  v302 = xmmword_239F0BEB0;
  sub_23950F8E4((uint64_t)&v302);
  v80 = v79;
  v81 = strlen(v79);
  if (v81 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v82 = (void *)v81;
  if (v81 >= 0x17)
  {
    v84 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v81 | 7) != 0x17)
      v84 = v81 | 7;
    v85 = v84 + 1;
    v83 = operator new(v84 + 1);
    v256[1] = v82;
    v257 = v85 | 0x8000000000000000;
    v256[0] = v83;
    goto LABEL_64;
  }
  HIBYTE(v257) = v81;
  v83 = v256;
  if (v81)
LABEL_64:
    memmove(v83, v80, (size_t)v82);
  *((_BYTE *)v82 + (_QWORD)v83) = 0;
  v86 = (_QWORD *)operator new();
  *v86 = &off_250AFFEA8;
  v86[1] = a1 + 56;
  sub_23961580C((uint64_t)__p, (uint64_t)v256, (uint64_t)v86);
  *(_OWORD *)v301 = xmmword_239F0EDD1;
  *(_QWORD *)&v301[14] = 0x2D2526213A2C3BLL;
  v90 = sub_239A90BEC(v301, (int8x16_t)xmmword_239F0EDD1, v87, v88, v89);
  v91 = strlen((const char *)v90);
  if (v91 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v92 = (void *)v91;
  if (v91 >= 0x17)
  {
    v94 = (v91 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v91 | 7) != 0x17)
      v94 = v91 | 7;
    v95 = v94 + 1;
    v93 = operator new(v94 + 1);
    v254[1] = v92;
    v255 = v95 | 0x8000000000000000;
    v254[0] = v93;
    goto LABEL_72;
  }
  HIBYTE(v255) = v91;
  v93 = v254;
  if (v91)
LABEL_72:
    memmove(v93, v90, (size_t)v92);
  *((_BYTE *)v92 + (_QWORD)v93) = 0;
  v96 = (_QWORD *)operator new();
  *v96 = &off_250ADF570;
  v96[1] = a1 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v254, (uint64_t)v96);
  v299 = 0x16001C1101160573;
  v300 = 0;
  v97 = sub_239513718((char *)&v299);
  v98 = strlen(v97);
  if (v98 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v99 = (void *)v98;
  if (v98 >= 0x17)
  {
    v101 = (v98 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v98 | 7) != 0x17)
      v101 = v98 | 7;
    v102 = v101 + 1;
    v100 = operator new(v101 + 1);
    v252[1] = v99;
    v253 = v102 | 0x8000000000000000;
    v252[0] = v100;
    goto LABEL_80;
  }
  HIBYTE(v253) = v98;
  v100 = v252;
  if (v98)
LABEL_80:
    memmove(v100, v97, (size_t)v99);
  *((_BYTE *)v99 + (_QWORD)v100) = 0;
  v103 = (_QWORD *)operator new();
  *v103 = &off_250AFFEA8;
  v103[1] = a1 + 72;
  sub_23961580C((uint64_t)__p, (uint64_t)v252, (uint64_t)v103);
  v108 = v107;
  v109 = strlen(v107);
  if (v109 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v110 = (void *)v109;
  if (v109 >= 0x17)
  {
    v112 = (v109 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v109 | 7) != 0x17)
      v112 = v109 | 7;
    v113 = v112 + 1;
    v111 = operator new(v112 + 1);
    v250[1] = v110;
    v251 = v113 | 0x8000000000000000;
    v250[0] = v111;
    goto LABEL_88;
  }
  HIBYTE(v251) = v109;
  v111 = v250;
  if (v109)
LABEL_88:
    memmove(v111, v108, (size_t)v110);
  *((_BYTE *)v110 + (_QWORD)v111) = 0;
  v114 = (_QWORD *)operator new();
  *v114 = &off_250AFFEA8;
  v114[1] = a1 + 144;
  sub_23961580C((uint64_t)__p, (uint64_t)v250, (uint64_t)v114);
  strcpy(v297[0].i8, "U2': %\n<;!'<;&<6&");
  v115 = sub_239A91B18(v297);
  v116 = strlen(v115->i8);
  if (v116 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v117 = (void *)v116;
  if (v116 >= 0x17)
  {
    v119 = (v116 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v116 | 7) != 0x17)
      v119 = v116 | 7;
    v120 = v119 + 1;
    v118 = operator new(v119 + 1);
    v248[1] = v117;
    v249 = v120 | 0x8000000000000000;
    v248[0] = v118;
    goto LABEL_96;
  }
  HIBYTE(v249) = v116;
  v118 = v248;
  if (v116)
LABEL_96:
    memmove(v118, v115, (size_t)v117);
  *((_BYTE *)v117 + (_QWORD)v118) = 0;
  v121 = (_QWORD *)operator new();
  *v121 = &off_250AFFEA8;
  v121[1] = a1 + 160;
  sub_23961580C((uint64_t)__p, (uint64_t)v248, (uint64_t)v121);
  strcpy(v296, ":\\UY[VeWU^_");
  v122 = sub_23958E4C8((uint64_t)v296);
  v123 = strlen(v122);
  if (v123 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v124 = (void *)v123;
  if (v123 >= 0x17)
  {
    v126 = (v123 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v123 | 7) != 0x17)
      v126 = v123 | 7;
    v127 = v126 + 1;
    v125 = operator new(v126 + 1);
    v246[1] = v124;
    v247 = v127 | 0x8000000000000000;
    v246[0] = v125;
    goto LABEL_104;
  }
  HIBYTE(v247) = v123;
  v125 = v246;
  if (v123)
LABEL_104:
    memmove(v125, v122, (size_t)v124);
  *((_BYTE *)v124 + (_QWORD)v125) = 0;
  v128 = (_QWORD *)operator new();
  *v128 = &off_250ADF240;
  v128[1] = &v278;
  sub_23961580C((uint64_t)__p, (uint64_t)v246, (uint64_t)v128);
  *(_OWORD *)v295 = xmmword_239F0EE18;
  *(_QWORD *)&v295[14] = 0x1E1F1416240F15;
  v132 = sub_239A90BEC(v295, (int8x16_t)xmmword_239F0EE18, v129, v130, v131);
  v133 = strlen((const char *)v132);
  if (v133 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v134 = (void *)v133;
  if (v133 >= 0x17)
  {
    v136 = (v133 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v133 | 7) != 0x17)
      v136 = v133 | 7;
    v137 = v136 + 1;
    v135 = operator new(v136 + 1);
    v244[1] = v134;
    v245 = v137 | 0x8000000000000000;
    v244[0] = v135;
    goto LABEL_112;
  }
  HIBYTE(v245) = v133;
  v135 = v244;
  if (v133)
LABEL_112:
    memmove(v135, v132, (size_t)v134);
  *((_BYTE *)v134 + (_QWORD)v135) = 0;
  v138 = (_QWORD *)operator new();
  *v138 = &off_250ADF240;
  v138[1] = &v277;
  sub_23961580C((uint64_t)__p, (uint64_t)v244, (uint64_t)v138);
  v293 = xmmword_239F0EE2E;
  v294 = 0;
  sub_2396EFA24((uint64_t)&v293);
  v140 = v139;
  v141 = strlen(v139);
  if (v141 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v142 = (void *)v141;
  if (v141 >= 0x17)
  {
    v144 = (v141 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v141 | 7) != 0x17)
      v144 = v141 | 7;
    v145 = v144 + 1;
    v143 = operator new(v144 + 1);
    v242[1] = v142;
    v243 = v145 | 0x8000000000000000;
    v242[0] = v143;
    goto LABEL_120;
  }
  HIBYTE(v243) = v141;
  v143 = v242;
  if (v141)
LABEL_120:
    memmove(v143, v140, (size_t)v142);
  *((_BYTE *)v142 + (_QWORD)v143) = 0;
  v146 = (_QWORD *)operator new();
  *v146 = &off_250ADF240;
  v146[1] = &v276;
  sub_23961580C((uint64_t)__p, (uint64_t)v242, (uint64_t)v146);
  v290 = 0x1B192B11071B0474;
  v292 = 0;
  v291 = 4368;
  v147 = (const char *)sub_23958E518((uint64_t)&v290);
  v148 = strlen(v147);
  if (v148 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v149 = (void *)v148;
  if (v148 >= 0x17)
  {
    v151 = (v148 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v148 | 7) != 0x17)
      v151 = v148 | 7;
    v152 = v151 + 1;
    v150 = operator new(v151 + 1);
    v240[1] = v149;
    v241 = v152 | 0x8000000000000000;
    v240[0] = v150;
    goto LABEL_128;
  }
  HIBYTE(v241) = v148;
  v150 = v240;
  if (v148)
LABEL_128:
    memmove(v150, v147, (size_t)v149);
  *((_BYTE *)v149 + (_QWORD)v150) = 0;
  v153 = (_QWORD *)operator new();
  *v153 = &off_250ADF240;
  v153[1] = &v275;
  sub_23961580C((uint64_t)__p, (uint64_t)v240, (uint64_t)v153);
  strcpy(v289, "6BDWU]i[YRS");
  v154 = sub_23958E4C8((uint64_t)v289);
  v155 = strlen(v154);
  if (v155 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v156 = (void *)v155;
  if (v155 >= 0x17)
  {
    v158 = (v155 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v155 | 7) != 0x17)
      v158 = v155 | 7;
    v159 = v158 + 1;
    v157 = operator new(v158 + 1);
    v238[1] = v156;
    v239 = v159 | 0x8000000000000000;
    v238[0] = v157;
    goto LABEL_136;
  }
  HIBYTE(v239) = v155;
  v157 = v238;
  if (v155)
LABEL_136:
    memmove(v157, v154, (size_t)v156);
  *((_BYTE *)v156 + (_QWORD)v157) = 0;
  v160 = (_QWORD *)operator new();
  *v160 = &off_250ADF240;
  v160[1] = &v274;
  sub_23961580C((uint64_t)__p, (uint64_t)v238, (uint64_t)v160);
  v288 = xmmword_239F0BEC0;
  sub_23950F8E4((uint64_t)&v288);
  v162 = v161;
  v163 = strlen(v161);
  if (v163 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v164 = (void *)v163;
  if (v163 >= 0x17)
  {
    v166 = (v163 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v163 | 7) != 0x17)
      v166 = v163 | 7;
    v167 = v166 + 1;
    v165 = operator new(v166 + 1);
    v236[1] = v164;
    v237 = v167 | 0x8000000000000000;
    v236[0] = v165;
    goto LABEL_144;
  }
  HIBYTE(v237) = v163;
  v165 = v236;
  if (v163)
LABEL_144:
    memmove(v165, v162, (size_t)v164);
  *((_BYTE *)v164 + (_QWORD)v165) = 0;
  v168 = (_QWORD *)operator new();
  *v168 = &off_250ADF570;
  v168[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v236, (uint64_t)v168);
  strcpy(v287, "U2'41<0;!\n!:90'4;60");
  sub_23958E55C((uint64_t)v287, *(int32x4_t *)"U2'41<0;!\n!:90'4;60", v169, v170, v171);
  v173 = v172;
  v174 = strlen(v172);
  if (v174 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v175 = (void *)v174;
  if (v174 >= 0x17)
  {
    v177 = (v174 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v174 | 7) != 0x17)
      v177 = v174 | 7;
    v178 = v177 + 1;
    v176 = operator new(v177 + 1);
    v234[1] = v175;
    v235 = v178 | 0x8000000000000000;
    v234[0] = v176;
    goto LABEL_152;
  }
  HIBYTE(v235) = v174;
  v176 = v234;
  if (v174)
LABEL_152:
    memmove(v176, v173, (size_t)v175);
  *((_BYTE *)v175 + (_QWORD)v176) = 0;
  v179 = (_QWORD *)operator new();
  *v179 = &off_250ADF570;
  v179[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v234, (uint64_t)v179);
  v286[0] = xmmword_239F0EE53;
  *(_QWORD *)((char *)v286 + 13) = 0x4020F0013040DLL;
  sub_2396EFB50((uint64_t)v286, (int32x4_t)xmmword_239F0EE53, v180, v181, v182);
  v184 = v183;
  v185 = strlen(v183);
  if (v185 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v186 = (void *)v185;
  if (v185 >= 0x17)
  {
    v188 = (v185 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v185 | 7) != 0x17)
      v188 = v185 | 7;
    v189 = v188 + 1;
    v187 = operator new(v188 + 1);
    v232[1] = v186;
    v233 = v189 | 0x8000000000000000;
    v232[0] = v187;
    goto LABEL_160;
  }
  HIBYTE(v233) = v185;
  v187 = v232;
  if (v185)
LABEL_160:
    memmove(v187, v184, (size_t)v186);
  *((_BYTE *)v186 + (_QWORD)v187) = 0;
  v190 = (_QWORD *)operator new();
  *v190 = &off_250ADF570;
  v190[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v232, (uint64_t)v190);
  strcpy(v285, "\x1ByzDhtwm~iDwry");
  sub_23958E5E0((uint64_t)v285);
  v192 = v191;
  v193 = strlen(v191);
  if (v193 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v194 = (void *)v193;
  if (v193 >= 0x17)
  {
    v196 = (v193 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v193 | 7) != 0x17)
      v196 = v193 | 7;
    v197 = v196 + 1;
    v195 = operator new(v196 + 1);
    v230[1] = v194;
    v231 = v197 | 0x8000000000000000;
    v230[0] = v195;
    goto LABEL_168;
  }
  HIBYTE(v231) = v193;
  v195 = v230;
  if (v193)
LABEL_168:
    memmove(v195, v192, (size_t)v194);
  *((_BYTE *)v194 + (_QWORD)v195) = 0;
  v198 = (_QWORD *)operator new();
  *v198 = &off_250ADF240;
  v198[1] = &v273;
  sub_23961580C((uint64_t)__p, (uint64_t)v230, (uint64_t)v198);
  v283 = xmmword_239F0EE68;
  v284 = 984065;
  sub_23958E55C((uint64_t)&v283, (int32x4_t)xmmword_239F0EE68, v199, v200, v201);
  v203 = v202;
  v204 = strlen(v202);
  if (v204 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v205 = (void *)v204;
  if (v204 >= 0x17)
  {
    v207 = (v204 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v204 | 7) != 0x17)
      v207 = v204 | 7;
    v208 = v207 + 1;
    v206 = operator new(v207 + 1);
    v228[1] = v205;
    v229 = v208 | 0x8000000000000000;
    v228[0] = v206;
    goto LABEL_176;
  }
  HIBYTE(v229) = v204;
  v206 = v228;
  if (v204)
LABEL_176:
    memmove(v206, v203, (size_t)v205);
  *((_BYTE *)v205 + (_QWORD)v206) = 0;
  v209 = (_QWORD *)operator new();
  *v209 = &off_250ADF240;
  v209[1] = &v272;
  sub_23961580C((uint64_t)__p, (uint64_t)v228, (uint64_t)v209);
  v281[0] = (int8x16_t)xmmword_239F0EE7C;
  v281[1] = xmmword_239F0EE8C;
  v282 = 0;
  sub_2396EFE38((uint64_t)v281, (int32x4_t)xmmword_239F0EE7C, xmmword_239F0EE8C, v210, v211);
  v213 = v212;
  v214 = strlen(v212);
  if (v214 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v215 = (void *)v214;
  if (v214 >= 0x17)
  {
    v217 = (v214 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v214 | 7) != 0x17)
      v217 = v214 | 7;
    v218 = v217 + 1;
    v216 = operator new(v217 + 1);
    v226[1] = v215;
    v227 = v218 | 0x8000000000000000;
    v226[0] = v216;
    goto LABEL_184;
  }
  HIBYTE(v227) = v214;
  v216 = v226;
  if (v214)
LABEL_184:
    memmove(v216, v213, (size_t)v215);
  *((_BYTE *)v215 + (_QWORD)v216) = 0;
  v219 = (_QWORD *)operator new();
  *v219 = &off_250AFFEA8;
  v219[1] = a1 + 145;
  sub_23961580C((uint64_t)__p, (uint64_t)v226, (uint64_t)v219);
  if (SHIBYTE(v227) < 0)
  {
    operator delete(v226[0]);
    if ((SHIBYTE(v229) & 0x80000000) == 0)
    {
LABEL_187:
      if ((SHIBYTE(v231) & 0x80000000) == 0)
        goto LABEL_188;
      goto LABEL_222;
    }
  }
  else if ((SHIBYTE(v229) & 0x80000000) == 0)
  {
    goto LABEL_187;
  }
  operator delete(v228[0]);
  if ((SHIBYTE(v231) & 0x80000000) == 0)
  {
LABEL_188:
    if ((SHIBYTE(v233) & 0x80000000) == 0)
      goto LABEL_189;
    goto LABEL_223;
  }
LABEL_222:
  operator delete(v230[0]);
  if ((SHIBYTE(v233) & 0x80000000) == 0)
  {
LABEL_189:
    if ((SHIBYTE(v235) & 0x80000000) == 0)
      goto LABEL_190;
    goto LABEL_224;
  }
LABEL_223:
  operator delete(v232[0]);
  if ((SHIBYTE(v235) & 0x80000000) == 0)
  {
LABEL_190:
    if ((SHIBYTE(v237) & 0x80000000) == 0)
      goto LABEL_191;
    goto LABEL_225;
  }
LABEL_224:
  operator delete(v234[0]);
  if ((SHIBYTE(v237) & 0x80000000) == 0)
  {
LABEL_191:
    if ((SHIBYTE(v239) & 0x80000000) == 0)
      goto LABEL_192;
    goto LABEL_226;
  }
LABEL_225:
  operator delete(v236[0]);
  if ((SHIBYTE(v239) & 0x80000000) == 0)
  {
LABEL_192:
    if ((SHIBYTE(v241) & 0x80000000) == 0)
      goto LABEL_193;
    goto LABEL_227;
  }
LABEL_226:
  operator delete(v238[0]);
  if ((SHIBYTE(v241) & 0x80000000) == 0)
  {
LABEL_193:
    if ((SHIBYTE(v243) & 0x80000000) == 0)
      goto LABEL_194;
    goto LABEL_228;
  }
LABEL_227:
  operator delete(v240[0]);
  if ((SHIBYTE(v243) & 0x80000000) == 0)
  {
LABEL_194:
    if ((SHIBYTE(v245) & 0x80000000) == 0)
      goto LABEL_195;
    goto LABEL_229;
  }
LABEL_228:
  operator delete(v242[0]);
  if ((SHIBYTE(v245) & 0x80000000) == 0)
  {
LABEL_195:
    if ((SHIBYTE(v247) & 0x80000000) == 0)
      goto LABEL_196;
    goto LABEL_230;
  }
LABEL_229:
  operator delete(v244[0]);
  if ((SHIBYTE(v247) & 0x80000000) == 0)
  {
LABEL_196:
    if ((SHIBYTE(v249) & 0x80000000) == 0)
      goto LABEL_197;
    goto LABEL_231;
  }
LABEL_230:
  operator delete(v246[0]);
  if ((SHIBYTE(v249) & 0x80000000) == 0)
  {
LABEL_197:
    if ((SHIBYTE(v251) & 0x80000000) == 0)
      goto LABEL_198;
    goto LABEL_232;
  }
LABEL_231:
  operator delete(v248[0]);
  if ((SHIBYTE(v251) & 0x80000000) == 0)
  {
LABEL_198:
    if ((SHIBYTE(v253) & 0x80000000) == 0)
      goto LABEL_199;
    goto LABEL_233;
  }
LABEL_232:
  operator delete(v250[0]);
  if ((SHIBYTE(v253) & 0x80000000) == 0)
  {
LABEL_199:
    if ((SHIBYTE(v255) & 0x80000000) == 0)
      goto LABEL_200;
    goto LABEL_234;
  }
LABEL_233:
  operator delete(v252[0]);
  if ((SHIBYTE(v255) & 0x80000000) == 0)
  {
LABEL_200:
    if ((SHIBYTE(v257) & 0x80000000) == 0)
      goto LABEL_201;
    goto LABEL_235;
  }
LABEL_234:
  operator delete(v254[0]);
  if ((SHIBYTE(v257) & 0x80000000) == 0)
  {
LABEL_201:
    if ((SHIBYTE(v259) & 0x80000000) == 0)
      goto LABEL_202;
    goto LABEL_236;
  }
LABEL_235:
  operator delete(v256[0]);
  if ((SHIBYTE(v259) & 0x80000000) == 0)
  {
LABEL_202:
    if ((SHIBYTE(v261) & 0x80000000) == 0)
      goto LABEL_203;
    goto LABEL_237;
  }
LABEL_236:
  operator delete(v258[0]);
  if ((SHIBYTE(v261) & 0x80000000) == 0)
  {
LABEL_203:
    if ((SHIBYTE(v263) & 0x80000000) == 0)
      goto LABEL_204;
    goto LABEL_238;
  }
LABEL_237:
  operator delete(v260[0]);
  if ((SHIBYTE(v263) & 0x80000000) == 0)
  {
LABEL_204:
    if ((SHIBYTE(v265) & 0x80000000) == 0)
      goto LABEL_205;
    goto LABEL_239;
  }
LABEL_238:
  operator delete(v262[0]);
  if ((SHIBYTE(v265) & 0x80000000) == 0)
  {
LABEL_205:
    if ((SHIBYTE(v267) & 0x80000000) == 0)
      goto LABEL_206;
    goto LABEL_240;
  }
LABEL_239:
  operator delete(v264[0]);
  if ((SHIBYTE(v267) & 0x80000000) == 0)
  {
LABEL_206:
    if ((SHIBYTE(v269) & 0x80000000) == 0)
      goto LABEL_207;
LABEL_241:
    operator delete(v268[0]);
    if ((SHIBYTE(v271) & 0x80000000) == 0)
      goto LABEL_208;
    goto LABEL_242;
  }
LABEL_240:
  operator delete(v266[0]);
  if (SHIBYTE(v269) < 0)
    goto LABEL_241;
LABEL_207:
  if ((SHIBYTE(v271) & 0x80000000) == 0)
    goto LABEL_208;
LABEL_242:
  operator delete(__dst[0]);
LABEL_208:
  sub_2395902F0((uint64_t)__p, a2);
  v220 = v280;
  if (v280)
  {
    do
    {
      v221 = v220[5];
      if (v221)
        (*(void (**)(uint64_t))(*(_QWORD *)v221 + 8))(v221);
      v220 = (_QWORD *)*v220;
    }
    while (v220);
    v222 = (void **)v280;
    if (v280)
    {
      do
      {
        v225 = (void **)*v222;
        if (*((char *)v222 + 39) < 0)
          operator delete(v222[2]);
        operator delete(v222);
        v222 = v225;
      }
      while (v225);
    }
  }
  v223 = __p[0];
  __p[0] = 0;
  if (v223)
    operator delete(v223);
  return a2;
}

void sub_239ABF150(_Unwind_Exception *a1)
{
  sub_2395905C0((uint64_t)&STACK[0x250]);
  _Unwind_Resume(a1);
}

void sub_239ABF554(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ABF578(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ABBFA8(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239ABF5B4()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239ABF5EC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ABF610(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ABFD7C(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239ABF64C(uint64_t a1, uint64_t *a2, char a3)
{
  _DWORD *v4;
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int32x4_t v12;
  double v13;
  int32x4_t v14;
  unsigned __int8 *v15;
  size_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int8x16_t v22;
  double v23;
  int32x4_t v24;
  const char *v25;
  const char *v26;
  size_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int8x16_t v33;
  double v34;
  int32x4_t v35;
  const char *v36;
  const char *v37;
  size_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  int8x16_t v44;
  double v45;
  int32x4_t v46;
  const char *v47;
  const char *v48;
  size_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  void **v57;
  void *v58;
  void **v60;
  void *v61[2];
  unint64_t v62;
  void *v63[2];
  unint64_t v64;
  void *v65[2];
  unint64_t v66;
  void *v67[2];
  unint64_t v68;
  void *__dst[2];
  unint64_t v70;
  int v71;
  void *__p[2];
  void *v73;
  char v74[32];
  _OWORD v75[2];
  _OWORD v76[2];
  unsigned __int8 v77[24];
  uint64_t v78;
  int v79;
  uint64_t v80;

  v80 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD **)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v71 = 0;
  v78 = 0x7A516D61626B7C0ELL;
  v79 = 7044727;
  v5 = sub_23958E4C8((uint64_t)&v78);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v70 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v70) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF240;
  v11[1] = &v71;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  *(_OWORD *)v77 = xmmword_239F0FD90;
  *(_QWORD *)&v77[14] = 0xE08330D1E1802;
  v15 = sub_239A90BEC(v77, (int8x16_t)xmmword_239F0FD90, v12, v13, v14);
  v16 = strlen((const char *)v15);
  if (v16 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = (void *)v16;
  if (v16 >= 0x17)
  {
    v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17)
      v19 = v16 | 7;
    v20 = v19 + 1;
    v18 = operator new(v19 + 1);
    v67[1] = v17;
    v68 = v20 | 0x8000000000000000;
    v67[0] = v18;
    goto LABEL_16;
  }
  HIBYTE(v68) = v16;
  v18 = v67;
  if (v16)
LABEL_16:
    memmove(v18, v15, (size_t)v17);
  *((_BYTE *)v17 + (_QWORD)v18) = 0;
  v21 = (_QWORD *)operator new();
  *v21 = &off_250AFFF08;
  v21[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v67, (uint64_t)v21);
  v76[0] = xmmword_239F0FDA6;
  *(_OWORD *)((char *)v76 + 9) = *(__int128 *)((char *)&xmmword_239F0FDA6 + 9);
  sub_2396EFC88((uint64_t)v76, *(int32x4_t *)((char *)&xmmword_239F0FDA6 + 9), v22, v23, v24);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = (void *)v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = operator new(v30 + 1);
    v65[1] = v28;
    v66 = v31 | 0x8000000000000000;
    v65[0] = v29;
    goto LABEL_24;
  }
  HIBYTE(v66) = v27;
  v29 = v65;
  if (v27)
LABEL_24:
    memmove(v29, v26, (size_t)v28);
  *((_BYTE *)v28 + (_QWORD)v29) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250AFFF08;
  v32[1] = v4 + 10;
  sub_23961580C((uint64_t)__p, (uint64_t)v65, (uint64_t)v32);
  v75[0] = xmmword_239F0FDBF;
  *(_DWORD *)((char *)v75 + 15) = 1507345;
  sub_23958E450((uint64_t)v75, (int32x4_t)xmmword_239F0FDBF, v33, v34, v35);
  v37 = v36;
  v38 = strlen(v36);
  if (v38 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v39 = (void *)v38;
  if (v38 >= 0x17)
  {
    v41 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 | 7) != 0x17)
      v41 = v38 | 7;
    v42 = v41 + 1;
    v40 = operator new(v41 + 1);
    v63[1] = v39;
    v64 = v42 | 0x8000000000000000;
    v63[0] = v40;
    goto LABEL_32;
  }
  HIBYTE(v64) = v38;
  v40 = v63;
  if (v38)
LABEL_32:
    memmove(v40, v37, (size_t)v39);
  *((_BYTE *)v39 + (_QWORD)v40) = 0;
  v43 = (_QWORD *)operator new();
  *v43 = &off_250AFFF08;
  v43[1] = v4 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v63, (uint64_t)v43);
  strcpy(v74, "R'!7\r?3!976\r='&\r473&' 7!");
  sub_2396EFC88((uint64_t)v74, *(int32x4_t *)"76\r='&\r473&' 7!", v44, v45, v46);
  v48 = v47;
  v49 = strlen(v47);
  if (v49 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v50 = (void *)v49;
  if (v49 >= 0x17)
  {
    v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v49 | 7) != 0x17)
      v52 = v49 | 7;
    v53 = v52 + 1;
    v51 = operator new(v52 + 1);
    v61[1] = v50;
    v62 = v53 | 0x8000000000000000;
    v61[0] = v51;
    goto LABEL_40;
  }
  HIBYTE(v62) = v49;
  v51 = v61;
  if (v49)
LABEL_40:
    memmove(v51, v48, (size_t)v50);
  *((_BYTE *)v50 + (_QWORD)v51) = 0;
  v54 = (_QWORD *)operator new();
  *v54 = &off_250AE0220;
  v54[1] = v4 + 18;
  sub_23961580C((uint64_t)__p, (uint64_t)v61, (uint64_t)v54);
  if (SHIBYTE(v62) < 0)
  {
    operator delete(v61[0]);
    if ((SHIBYTE(v64) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v66) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_62;
    }
  }
  else if ((SHIBYTE(v64) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v63[0]);
  if ((SHIBYTE(v66) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v68) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_63:
    operator delete(v67[0]);
    if ((SHIBYTE(v70) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_64;
  }
LABEL_62:
  operator delete(v65[0]);
  if (SHIBYTE(v68) < 0)
    goto LABEL_63;
LABEL_45:
  if ((SHIBYTE(v70) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_64:
  operator delete(__dst[0]);
LABEL_46:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
    *v4 = v71;
  v55 = v73;
  if (v73)
  {
    do
    {
      v56 = v55[5];
      if (v56)
        (*(void (**)(uint64_t))(*(_QWORD *)v56 + 8))(v56);
      v55 = (_QWORD *)*v55;
    }
    while (v55);
    v57 = (void **)v73;
    if (v73)
    {
      do
      {
        v60 = (void **)*v57;
        if (*((char *)v57 + 39) < 0)
          operator delete(v57[2]);
        operator delete(v57);
        v57 = v60;
      }
      while (v60);
    }
  }
  v58 = __p[0];
  __p[0] = 0;
  if (v58)
    operator delete(v58);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239ABFC10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,_QWORD *__p)
{
  _QWORD *v43;
  uint64_t v44;
  void **v45;
  void **v46;

  v43 = __p;
  if (__p)
  {
    do
    {
      v44 = v43[5];
      if (v44)
        (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
      v43 = (_QWORD *)*v43;
    }
    while (v43);
    v45 = (void **)__p;
    do
    {
      v46 = (void **)*v45;
      if (*((char *)v45 + 39) < 0)
        operator delete(v45[2]);
      operator delete(v45);
      v45 = v46;
    }
    while (v46);
  }
  if (!a40)
    _Unwind_Resume(exception_object);
  operator delete(a40);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239ABFD7C(int *a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int32x4_t v12;
  double v13;
  int32x4_t v14;
  unsigned __int8 *v15;
  size_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int8x16_t v22;
  double v23;
  int32x4_t v24;
  const char *v25;
  const char *v26;
  size_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int8x16_t v33;
  double v34;
  int32x4_t v35;
  const char *v36;
  const char *v37;
  size_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  int8x16_t v44;
  double v45;
  int32x4_t v46;
  const char *v47;
  const char *v48;
  size_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  void **v57;
  void *v58;
  void **v60;
  void *v61[2];
  unint64_t v62;
  void *v63[2];
  unint64_t v64;
  void *v65[2];
  unint64_t v66;
  void *v67[2];
  unint64_t v68;
  void *__dst[2];
  unint64_t v70;
  int v71;
  void *__p[2];
  void *v73;
  _OWORD v74[2];
  _OWORD v75[2];
  _OWORD v76[2];
  char v77[24];
  uint64_t v78;
  int v79;
  uint64_t v80;

  v80 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v71 = *a1;
  v78 = 0x78536F6360697E0CLL;
  v79 = 6913141;
  v5 = sub_23958E4C8((uint64_t)&v78);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v70 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v70) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF240;
  v11[1] = &v71;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  strcpy(v77, ":TOWeW[NYR_IeSTNH[e^X");
  v15 = sub_239A90BEC((unsigned __int8 *)v77, *(int8x16_t *)":TOWeW[NYR_IeSTNH[e^X", v12, v13, v14);
  v16 = strlen((const char *)v15);
  if (v16 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = (void *)v16;
  if (v16 >= 0x17)
  {
    v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17)
      v19 = v16 | 7;
    v20 = v19 + 1;
    v18 = operator new(v19 + 1);
    v67[1] = v17;
    v68 = v20 | 0x8000000000000000;
    v67[0] = v18;
    goto LABEL_16;
  }
  HIBYTE(v68) = v16;
  v18 = v67;
  if (v16)
LABEL_16:
    memmove(v18, v15, (size_t)v17);
  *((_BYTE *)v17 + (_QWORD)v18) = 0;
  v21 = (_QWORD *)operator new();
  *v21 = &off_250AFFE48;
  v21[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v67, (uint64_t)v21);
  v76[0] = xmmword_239F0F014;
  *(_OWORD *)((char *)v76 + 9) = *(__int128 *)((char *)&xmmword_239F0F014 + 9);
  sub_2396EFC88((uint64_t)v76, *(int32x4_t *)((char *)&xmmword_239F0F014 + 9), v22, v23, v24);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = (void *)v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = operator new(v30 + 1);
    v65[1] = v28;
    v66 = v31 | 0x8000000000000000;
    v65[0] = v29;
    goto LABEL_24;
  }
  HIBYTE(v66) = v27;
  v29 = v65;
  if (v27)
LABEL_24:
    memmove(v29, v26, (size_t)v28);
  *((_BYTE *)v28 + (_QWORD)v29) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250AFFE48;
  v32[1] = a1 + 10;
  sub_23961580C((uint64_t)__p, (uint64_t)v65, (uint64_t)v32);
  v75[0] = xmmword_239F0F02D;
  *(_DWORD *)((char *)v75 + 15) = 3286324;
  sub_23958E450((uint64_t)v75, (int32x4_t)xmmword_239F0F02D, v33, v34, v35);
  v37 = v36;
  v38 = strlen(v36);
  if (v38 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v39 = (void *)v38;
  if (v38 >= 0x17)
  {
    v41 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 | 7) != 0x17)
      v41 = v38 | 7;
    v42 = v41 + 1;
    v40 = operator new(v41 + 1);
    v63[1] = v39;
    v64 = v42 | 0x8000000000000000;
    v63[0] = v40;
    goto LABEL_32;
  }
  HIBYTE(v64) = v38;
  v40 = v63;
  if (v38)
LABEL_32:
    memmove(v40, v37, (size_t)v39);
  *((_BYTE *)v39 + (_QWORD)v40) = 0;
  v43 = (_QWORD *)operator new();
  *v43 = &off_250AFFE48;
  v43[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v63, (uint64_t)v43);
  v74[0] = xmmword_239F0F040;
  *(_OWORD *)((char *)v74 + 9) = *(__int128 *)((char *)&xmmword_239F0F040 + 9);
  sub_2396EFC88((uint64_t)v74, *(int32x4_t *)((char *)&xmmword_239F0F040 + 9), v44, v45, v46);
  v48 = v47;
  v49 = strlen(v47);
  if (v49 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v50 = (void *)v49;
  if (v49 >= 0x17)
  {
    v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v49 | 7) != 0x17)
      v52 = v49 | 7;
    v53 = v52 + 1;
    v51 = operator new(v52 + 1);
    v61[1] = v50;
    v62 = v53 | 0x8000000000000000;
    v61[0] = v51;
    goto LABEL_40;
  }
  HIBYTE(v62) = v49;
  v51 = v61;
  if (v49)
LABEL_40:
    memmove(v51, v48, (size_t)v50);
  *((_BYTE *)v50 + (_QWORD)v51) = 0;
  v54 = (_QWORD *)operator new();
  *v54 = &off_250AFFEA8;
  v54[1] = a1 + 18;
  sub_23961580C((uint64_t)__p, (uint64_t)v61, (uint64_t)v54);
  if (SHIBYTE(v62) < 0)
  {
    operator delete(v61[0]);
    if ((SHIBYTE(v64) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v66) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v64) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v63[0]);
  if ((SHIBYTE(v66) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v68) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v67[0]);
    if ((SHIBYTE(v70) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v65[0]);
  if (SHIBYTE(v68) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v70) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_2395902F0((uint64_t)__p, a2);
  v55 = v73;
  if (v73)
  {
    do
    {
      v56 = v55[5];
      if (v56)
        (*(void (**)(uint64_t))(*(_QWORD *)v56 + 8))(v56);
      v55 = (_QWORD *)*v55;
    }
    while (v55);
    v57 = (void **)v73;
    if (v73)
    {
      do
      {
        v60 = (void **)*v57;
        if (*((char *)v57 + 39) < 0)
          operator delete(v57[2]);
        operator delete(v57);
        v57 = v60;
      }
      while (v60);
    }
  }
  v58 = __p[0];
  __p[0] = 0;
  if (v58)
    operator delete(v58);
  return a2;
}

void sub_239AC0320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,char a40)
{
  sub_2395905C0((uint64_t)&a40);
  _Unwind_Resume(a1);
}

void sub_239AC040C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AC0430(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ABDB50(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AC046C(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  const char *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int8x16_t v38;
  double v39;
  int32x4_t v40;
  const char *v41;
  const char *v42;
  size_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  int32x4_t v49;
  double v50;
  int32x4_t v51;
  unsigned __int8 *v52;
  size_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  int8x16_t v59;
  double v60;
  int32x4_t v61;
  const char *v62;
  const char *v63;
  size_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  const char *v70;
  const char *v71;
  size_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  const char *v78;
  const char *v79;
  size_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  int32x4_t v86;
  double v87;
  int32x4_t v88;
  unsigned __int8 *v89;
  size_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  const char *v96;
  size_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  int8x16_t v103;
  double v104;
  int32x4_t v105;
  const char *v106;
  const char *v107;
  size_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  int8x16_t *v114;
  size_t v115;
  void *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  const char *v121;
  size_t v122;
  void *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  int32x4_t v128;
  double v129;
  int32x4_t v130;
  unsigned __int8 *v131;
  size_t v132;
  void *v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  const char *v138;
  const char *v139;
  size_t v140;
  void *v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  const char *v146;
  size_t v147;
  void *v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  const char *v153;
  size_t v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  const char *v160;
  const char *v161;
  size_t v162;
  void *v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  int8x16_t v168;
  double v169;
  int32x4_t v170;
  const char *v171;
  const char *v172;
  size_t v173;
  void *v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  int8x16_t v179;
  double v180;
  int32x4_t v181;
  const char *v182;
  const char *v183;
  size_t v184;
  void *v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  const char *v190;
  const char *v191;
  size_t v192;
  void *v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  int8x16_t v198;
  double v199;
  int32x4_t v200;
  const char *v201;
  const char *v202;
  size_t v203;
  void *v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  double v209;
  int32x4_t v210;
  const char *v211;
  const char *v212;
  size_t v213;
  void *v214;
  void *v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  int v219;
  _QWORD *v220;
  uint64_t v221;
  void **v222;
  void *v223;
  void **v225;
  void *v226[2];
  unint64_t v227;
  void *v228[2];
  unint64_t v229;
  void *v230[2];
  unint64_t v231;
  void *v232[2];
  unint64_t v233;
  void *v234[2];
  unint64_t v235;
  void *v236[2];
  unint64_t v237;
  void *v238[2];
  unint64_t v239;
  void *v240[2];
  unint64_t v241;
  void *v242[2];
  unint64_t v243;
  void *v244[2];
  unint64_t v245;
  void *v246[2];
  unint64_t v247;
  void *v248[2];
  unint64_t v249;
  void *v250[2];
  unint64_t v251;
  void *v252[2];
  unint64_t v253;
  void *v254[2];
  unint64_t v255;
  void *v256[2];
  unint64_t v257;
  void *v258[2];
  unint64_t v259;
  void *v260[2];
  unint64_t v261;
  void *v262[2];
  unint64_t v263;
  void *v264[2];
  unint64_t v265;
  void *v266[2];
  unint64_t v267;
  void *v268[2];
  unint64_t v269;
  void *__dst[2];
  unint64_t v271;
  int v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  void *__p[2];
  void *v277;
  char v278[48];
  char v279[32];
  uint64_t v280;
  char v281[8];
  char v282[32];
  __int128 v283;
  int v284;
  __int128 v285;
  uint64_t v286;
  int v287;
  char v288[16];
  __int128 v289;
  char v290;
  char v291[32];
  uint64_t v292;
  int v293;
  int8x16_t v294[2];
  char v295[32];
  uint64_t v296;
  char v297;
  unsigned __int8 v298[32];
  __int128 v299;
  char v300[32];
  _OWORD v301[2];
  unsigned __int8 v302[32];
  _OWORD v303[2];
  _OWORD v304[2];
  char v305[32];
  _BYTE v306[21];
  uint64_t v307;

  v307 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v275 = 0;
  v274 = 0;
  v273 = 0;
  v272 = 0;
  *(_OWORD *)v306 = xmmword_239F0FACB;
  strcpy(&v306[13], "bufsnhi");
  sub_2396EFB50((uint64_t)v306, (int32x4_t)xmmword_239F0FACB, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    v271 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    __dst[1] = v11;
    goto LABEL_8;
  }
  HIBYTE(v271) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250ADF240;
  v15[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  strcpy(v305, "\x1BvzcD}nwwDro~izortu");
  sub_23958E55C((uint64_t)v305, *(int32x4_t *)"\x1BvzcD}nwwDro~izortu", v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v269 = v25 | 0x8000000000000000;
    v268[0] = v23;
    v268[1] = v22;
    goto LABEL_16;
  }
  HIBYTE(v269) = v21;
  v23 = v268;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250ADF240;
  v26[1] = v4 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v268, (uint64_t)v26);
  v304[0] = xmmword_239F0FAF4;
  *(_QWORD *)((char *)v304 + 13) = 0x1071A0F1C0BLL;
  sub_2396EFB50((uint64_t)v304, (int32x4_t)xmmword_239F0FAF4, v27, v28, v29);
  v31 = v30;
  v32 = strlen(v30);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v266[1] = v33;
    v267 = v36 | 0x8000000000000000;
    v266[0] = v34;
    goto LABEL_24;
  }
  HIBYTE(v267) = v32;
  v34 = v266;
  if (v32)
LABEL_24:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250ADF240;
  v37[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v266, (uint64_t)v37);
  v303[0] = xmmword_239F0FB09;
  *(_QWORD *)((char *)v303 + 15) = 0x121315081D0E09;
  sub_2396EFBE0((uint64_t)v303, (int32x4_t)xmmword_239F0FB09, v38, v39, v40);
  v42 = v41;
  v43 = strlen(v41);
  if (v43 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v44 = (void *)v43;
  if (v43 >= 0x17)
  {
    v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v43 | 7) != 0x17)
      v46 = v43 | 7;
    v47 = v46 + 1;
    v45 = operator new(v46 + 1);
    v264[1] = v44;
    v265 = v47 | 0x8000000000000000;
    v264[0] = v45;
    goto LABEL_32;
  }
  HIBYTE(v265) = v43;
  v45 = v264;
  if (v43)
LABEL_32:
    memmove(v45, v42, (size_t)v44);
  *((_BYTE *)v44 + (_QWORD)v45) = 0;
  v48 = (_QWORD *)operator new();
  *v48 = &off_250AE0670;
  v48[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v264, (uint64_t)v48);
  *(_OWORD *)v302 = xmmword_239F0FB20;
  *(_QWORD *)&v302[14] = 0x6F6E6875607374;
  v52 = sub_239A90BEC(v302, (int8x16_t)xmmword_239F0FB20, v49, v50, v51);
  v53 = strlen((const char *)v52);
  if (v53 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v54 = (void *)v53;
  if (v53 >= 0x17)
  {
    v56 = (v53 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v53 | 7) != 0x17)
      v56 = v53 | 7;
    v57 = v56 + 1;
    v55 = operator new(v56 + 1);
    v262[1] = v54;
    v263 = v57 | 0x8000000000000000;
    v262[0] = v55;
    goto LABEL_40;
  }
  HIBYTE(v263) = v53;
  v55 = v262;
  if (v53)
LABEL_40:
    memmove(v55, v52, (size_t)v54);
  *((_BYTE *)v54 + (_QWORD)v55) = 0;
  v58 = (_QWORD *)operator new();
  *v58 = &off_250AE0670;
  v58[1] = v4 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v262, (uint64_t)v58);
  v301[0] = xmmword_239F0FB36;
  *(_QWORD *)((char *)v301 + 15) = 0x69686E73667572;
  sub_2396EFBE0((uint64_t)v301, (int32x4_t)xmmword_239F0FB36, v59, v60, v61);
  v63 = v62;
  v64 = strlen(v62);
  if (v64 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v65 = (void *)v64;
  if (v64 >= 0x17)
  {
    v67 = (v64 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v64 | 7) != 0x17)
      v67 = v64 | 7;
    v68 = v67 + 1;
    v66 = operator new(v67 + 1);
    v260[1] = v65;
    v261 = v68 | 0x8000000000000000;
    v260[0] = v66;
    goto LABEL_48;
  }
  HIBYTE(v261) = v64;
  v66 = v260;
  if (v64)
LABEL_48:
    memmove(v66, v63, (size_t)v65);
  *((_BYTE *)v65 + (_QWORD)v66) = 0;
  v69 = (_QWORD *)operator new();
  *v69 = &off_250AE0670;
  v69[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v260, (uint64_t)v69);
  strcpy(v300, "1\\PInspnUDCPEX^_");
  sub_2396EFA24((uint64_t)v300);
  v71 = v70;
  v72 = strlen(v70);
  if (v72 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v73 = (void *)v72;
  if (v72 >= 0x17)
  {
    v75 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v72 | 7) != 0x17)
      v75 = v72 | 7;
    v76 = v75 + 1;
    v74 = operator new(v75 + 1);
    v258[1] = v73;
    v259 = v76 | 0x8000000000000000;
    v258[0] = v74;
    goto LABEL_56;
  }
  HIBYTE(v259) = v72;
  v74 = v258;
  if (v72)
LABEL_56:
    memmove(v74, v71, (size_t)v73);
  *((_BYTE *)v73 + (_QWORD)v74) = 0;
  v77 = (_QWORD *)operator new();
  *v77 = &off_250AE0670;
  v77[1] = v4 + 28;
  sub_23961580C((uint64_t)__p, (uint64_t)v258, (uint64_t)v77);
  v299 = xmmword_239F0BED0;
  sub_23950F8E4((uint64_t)&v299);
  v79 = v78;
  v80 = strlen(v78);
  if (v80 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v81 = (void *)v80;
  if (v80 >= 0x17)
  {
    v83 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17)
      v83 = v80 | 7;
    v84 = v83 + 1;
    v82 = operator new(v83 + 1);
    v256[1] = v81;
    v257 = v84 | 0x8000000000000000;
    v256[0] = v82;
    goto LABEL_64;
  }
  HIBYTE(v257) = v80;
  v82 = v256;
  if (v80)
LABEL_64:
    memmove(v82, v79, (size_t)v81);
  *((_BYTE *)v81 + (_QWORD)v82) = 0;
  v85 = (_QWORD *)operator new();
  *v85 = &off_250AE0220;
  v85[1] = v4 + 56;
  sub_23961580C((uint64_t)__p, (uint64_t)v256, (uint64_t)v85);
  *(_OWORD *)v298 = xmmword_239F0FB5E;
  *(_QWORD *)&v298[14] = 0x6B6360677C6A7DLL;
  v89 = sub_239A90BEC(v298, (int8x16_t)xmmword_239F0FB5E, v86, v87, v88);
  v90 = strlen((const char *)v89);
  if (v90 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v91 = (void *)v90;
  if (v90 >= 0x17)
  {
    v93 = (v90 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v90 | 7) != 0x17)
      v93 = v90 | 7;
    v94 = v93 + 1;
    v92 = operator new(v93 + 1);
    v254[1] = v91;
    v255 = v94 | 0x8000000000000000;
    v254[0] = v92;
    goto LABEL_72;
  }
  HIBYTE(v255) = v90;
  v92 = v254;
  if (v90)
LABEL_72:
    memmove(v92, v89, (size_t)v91);
  *((_BYTE *)v91 + (_QWORD)v92) = 0;
  v95 = (_QWORD *)operator new();
  *v95 = &off_250ADF360;
  v95[1] = v4 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v254, (uint64_t)v95);
  v296 = 0x1D0B171A0A1D0E78;
  v297 = 0;
  v96 = sub_239513718((char *)&v296);
  v97 = strlen(v96);
  if (v97 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v98 = (void *)v97;
  if (v97 >= 0x17)
  {
    v100 = (v97 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v97 | 7) != 0x17)
      v100 = v97 | 7;
    v101 = v100 + 1;
    v99 = operator new(v100 + 1);
    v252[1] = v98;
    v253 = v101 | 0x8000000000000000;
    v252[0] = v99;
    goto LABEL_80;
  }
  HIBYTE(v253) = v97;
  v99 = v252;
  if (v97)
LABEL_80:
    memmove(v99, v96, (size_t)v98);
  *((_BYTE *)v98 + (_QWORD)v99) = 0;
  v102 = (_QWORD *)operator new();
  *v102 = &off_250AE0220;
  v102[1] = v4 + 72;
  sub_23961580C((uint64_t)__p, (uint64_t)v252, (uint64_t)v102);
  strcpy(v295, "1RP]RD]PETnX_XEXP]nR^_UXEX^_TC");
  sub_2396EFF58((uint64_t)v295, *(int32x4_t *)"XP]nR^_UXEX^_TC", v103, v104, v105);
  v107 = v106;
  v108 = strlen(v106);
  if (v108 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v109 = (void *)v108;
  if (v108 >= 0x17)
  {
    v111 = (v108 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v108 | 7) != 0x17)
      v111 = v108 | 7;
    v112 = v111 + 1;
    v110 = operator new(v111 + 1);
    v250[1] = v109;
    v251 = v112 | 0x8000000000000000;
    v250[0] = v110;
    goto LABEL_88;
  }
  HIBYTE(v251) = v108;
  v110 = v250;
  if (v108)
LABEL_88:
    memmove(v110, v107, (size_t)v109);
  *((_BYTE *)v109 + (_QWORD)v110) = 0;
  v113 = (_QWORD *)operator new();
  *v113 = &off_250AE0220;
  v113[1] = v4 + 144;
  sub_23961580C((uint64_t)__p, (uint64_t)v250, (uint64_t)v113);
  strcpy(v294[0].i8, "(OZG]XwAF\\ZAF[AK[");
  v114 = sub_239A91B18(v294);
  v115 = strlen(v114->i8);
  if (v115 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v116 = (void *)v115;
  if (v115 >= 0x17)
  {
    v118 = (v115 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v115 | 7) != 0x17)
      v118 = v115 | 7;
    v119 = v118 + 1;
    v117 = operator new(v118 + 1);
    v248[1] = v116;
    v249 = v119 | 0x8000000000000000;
    v248[0] = v117;
    goto LABEL_96;
  }
  HIBYTE(v249) = v115;
  v117 = v248;
  if (v115)
LABEL_96:
    memmove(v117, v114, (size_t)v116);
  *((_BYTE *)v116 + (_QWORD)v117) = 0;
  v120 = (_QWORD *)operator new();
  *v120 = &off_250AE0220;
  v120[1] = v4 + 160;
  sub_23961580C((uint64_t)__p, (uint64_t)v248, (uint64_t)v120);
  v292 = 0x685A6964666A6305;
  v293 = 6316394;
  v121 = sub_23958E4C8((uint64_t)&v292);
  v122 = strlen(v121);
  if (v122 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v123 = (void *)v122;
  if (v122 >= 0x17)
  {
    v125 = (v122 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v122 | 7) != 0x17)
      v125 = v122 | 7;
    v126 = v125 + 1;
    v124 = operator new(v125 + 1);
    v246[1] = v123;
    v247 = v126 | 0x8000000000000000;
    v246[0] = v124;
    goto LABEL_104;
  }
  HIBYTE(v247) = v122;
  v124 = v246;
  if (v122)
LABEL_104:
    memmove(v124, v121, (size_t)v123);
  *((_BYTE *)v123 + (_QWORD)v124) = 0;
  v127 = (_QWORD *)operator new();
  *v127 = &off_250ADF240;
  v127[1] = (char *)&v275 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v246, (uint64_t)v127);
  strcpy(v291, "0@BY^SY@Q\\o@_Y^Do]_TU");
  v131 = sub_239A90BEC((unsigned __int8 *)v291, *(int8x16_t *)"0@BY^SY@Q\\o@_Y^Do]_TU", v128, v129, v130);
  v132 = strlen((const char *)v131);
  if (v132 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v133 = (void *)v132;
  if (v132 >= 0x17)
  {
    v135 = (v132 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v132 | 7) != 0x17)
      v135 = v132 | 7;
    v136 = v135 + 1;
    v134 = operator new(v135 + 1);
    v244[1] = v133;
    v245 = v136 | 0x8000000000000000;
    v244[0] = v134;
    goto LABEL_112;
  }
  HIBYTE(v245) = v132;
  v134 = v244;
  if (v132)
LABEL_112:
    memmove(v134, v131, (size_t)v133);
  *((_BYTE *)v133 + (_QWORD)v134) = 0;
  v137 = (_QWORD *)operator new();
  *v137 = &off_250ADF240;
  v137[1] = &v275;
  sub_23961580C((uint64_t)__p, (uint64_t)v244, (uint64_t)v137);
  v289 = xmmword_239F0FBBB;
  v290 = 0;
  sub_2396EFA24((uint64_t)&v289);
  v139 = v138;
  v140 = strlen(v138);
  if (v140 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v141 = (void *)v140;
  if (v140 >= 0x17)
  {
    v143 = (v140 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v140 | 7) != 0x17)
      v143 = v140 | 7;
    v144 = v143 + 1;
    v142 = operator new(v143 + 1);
    v242[1] = v141;
    v243 = v144 | 0x8000000000000000;
    v242[0] = v142;
    goto LABEL_120;
  }
  HIBYTE(v243) = v140;
  v142 = v242;
  if (v140)
LABEL_120:
    memmove(v142, v139, (size_t)v141);
  *((_BYTE *)v141 + (_QWORD)v142) = 0;
  v145 = (_QWORD *)operator new();
  *v145 = &off_250ADF240;
  v145[1] = (char *)&v274 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v242, (uint64_t)v145);
  strcpy(v288, "=MRNXbPRYX");
  v146 = (const char *)sub_23958E518((uint64_t)v288);
  v147 = strlen(v146);
  if (v147 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v148 = (void *)v147;
  if (v147 >= 0x17)
  {
    v150 = (v147 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v147 | 7) != 0x17)
      v150 = v147 | 7;
    v151 = v150 + 1;
    v149 = operator new(v150 + 1);
    v240[1] = v148;
    v241 = v151 | 0x8000000000000000;
    v240[0] = v149;
    goto LABEL_128;
  }
  HIBYTE(v241) = v147;
  v149 = v240;
  if (v147)
LABEL_128:
    memmove(v149, v146, (size_t)v148);
  *((_BYTE *)v148 + (_QWORD)v149) = 0;
  v152 = (_QWORD *)operator new();
  *v152 = &off_250ADF240;
  v152[1] = &v274;
  sub_23961580C((uint64_t)__p, (uint64_t)v240, (uint64_t)v152);
  v286 = 0xA380C0406151367;
  v287 = 131848;
  v153 = sub_23958E4C8((uint64_t)&v286);
  v154 = strlen(v153);
  if (v154 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v155 = (void *)v154;
  if (v154 >= 0x17)
  {
    v157 = (v154 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v154 | 7) != 0x17)
      v157 = v154 | 7;
    v158 = v157 + 1;
    v156 = operator new(v157 + 1);
    v238[1] = v155;
    v239 = v158 | 0x8000000000000000;
    v238[0] = v156;
    goto LABEL_136;
  }
  HIBYTE(v239) = v154;
  v156 = v238;
  if (v154)
LABEL_136:
    memmove(v156, v153, (size_t)v155);
  *((_BYTE *)v155 + (_QWORD)v156) = 0;
  v159 = (_QWORD *)operator new();
  *v159 = &off_250ADF240;
  v159[1] = (char *)&v273 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v238, (uint64_t)v159);
  v285 = xmmword_239F0BEE0;
  sub_23950F8E4((uint64_t)&v285);
  v161 = v160;
  v162 = strlen(v160);
  if (v162 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v163 = (void *)v162;
  if (v162 >= 0x17)
  {
    v165 = (v162 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v162 | 7) != 0x17)
      v165 = v162 | 7;
    v166 = v165 + 1;
    v164 = operator new(v165 + 1);
    v236[1] = v163;
    v237 = v166 | 0x8000000000000000;
    v236[0] = v164;
    goto LABEL_144;
  }
  HIBYTE(v237) = v162;
  v164 = v236;
  if (v162)
LABEL_144:
    memmove(v164, v161, (size_t)v163);
  *((_BYTE *)v163 + (_QWORD)v164) = 0;
  v167 = (_QWORD *)operator new();
  *v167 = &off_250ADF360;
  v167[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v236, (uint64_t)v167);
  v283 = xmmword_239F0FBCC;
  v284 = 7631487;
  sub_23958E55C((uint64_t)&v283, (int32x4_t)xmmword_239F0FBCC, v168, v169, v170);
  v172 = v171;
  v173 = strlen(v171);
  if (v173 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v174 = (void *)v173;
  if (v173 >= 0x17)
  {
    v176 = (v173 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v173 | 7) != 0x17)
      v176 = v173 | 7;
    v177 = v176 + 1;
    v175 = operator new(v176 + 1);
    v234[1] = v174;
    v235 = v177 | 0x8000000000000000;
    v234[0] = v175;
    goto LABEL_152;
  }
  HIBYTE(v235) = v173;
  v175 = v234;
  if (v173)
LABEL_152:
    memmove(v175, v172, (size_t)v174);
  *((_BYTE *)v174 + (_QWORD)v175) = 0;
  v178 = (_QWORD *)operator new();
  *v178 = &off_250ADF360;
  v178[1] = v4 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v234, (uint64_t)v178);
  strcpy(v282, "W'6%6:2#2%\b#8;2%6942");
  sub_2396EFB50((uint64_t)v282, *(int32x4_t *)"W'6%6:2#2%\b#8;2%6942", v179, v180, v181);
  v183 = v182;
  v184 = strlen(v182);
  if (v184 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v185 = (void *)v184;
  if (v184 >= 0x17)
  {
    v187 = (v184 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v184 | 7) != 0x17)
      v187 = v184 | 7;
    v188 = v187 + 1;
    v186 = operator new(v187 + 1);
    v232[1] = v185;
    v233 = v188 | 0x8000000000000000;
    v232[0] = v186;
    goto LABEL_160;
  }
  HIBYTE(v233) = v184;
  v186 = v232;
  if (v184)
LABEL_160:
    memmove(v186, v183, (size_t)v185);
  *((_BYTE *)v185 + (_QWORD)v186) = 0;
  v189 = (_QWORD *)operator new();
  *v189 = &off_250ADF360;
  v189[1] = v4 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v232, (uint64_t)v189);
  v280 = 0x7A60637F536D6E0CLL;
  sub_23958E5E0((uint64_t)&v280);
  v191 = v190;
  v192 = strlen(v190);
  if (v192 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v193 = (void *)v192;
  if (v192 >= 0x17)
  {
    v195 = (v192 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v192 | 7) != 0x17)
      v195 = v192 | 7;
    v196 = v195 + 1;
    v194 = operator new(v195 + 1);
    v230[1] = v193;
    v231 = v196 | 0x8000000000000000;
    v230[0] = v194;
    goto LABEL_168;
  }
  HIBYTE(v231) = v192;
  v194 = v230;
  if (v192)
LABEL_168:
    memmove(v194, v191, (size_t)v193);
  *((_BYTE *)v193 + (_QWORD)v194) = 0;
  v197 = (_QWORD *)operator new();
  *v197 = &off_250ADF240;
  v197[1] = &v273;
  sub_23961580C((uint64_t)__p, (uint64_t)v230, (uint64_t)v197);
  strcpy(v279, "D&%\x1B\"1((\x1B7+(2!6\x1B(-&");
  sub_23958E55C((uint64_t)v279, *(int32x4_t *)"D&%\x1B\"1((\x1B7+(2!6\x1B(-&", v198, v199, v200);
  v202 = v201;
  v203 = strlen(v201);
  if (v203 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v204 = (void *)v203;
  if (v203 >= 0x17)
  {
    v206 = (v203 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v203 | 7) != 0x17)
      v206 = v203 | 7;
    v207 = v206 + 1;
    v205 = operator new(v206 + 1);
    v228[1] = v204;
    v229 = v207 | 0x8000000000000000;
    v228[0] = v205;
    goto LABEL_176;
  }
  HIBYTE(v229) = v203;
  v205 = v228;
  if (v203)
LABEL_176:
    memmove(v205, v202, (size_t)v204);
  *((_BYTE *)v204 + (_QWORD)v205) = 0;
  v208 = (_QWORD *)operator new();
  *v208 = &off_250ADF240;
  v208[1] = &v272;
  sub_23961580C((uint64_t)__p, (uint64_t)v228, (uint64_t)v208);
  strcpy(v278, "1DBTn\\D]EXA]XRPEXGTnR^_UXEX^_X_V");
  sub_2396EFE38((uint64_t)v278, *(int32x4_t *)"1DBTn\\D]EXA]XRPEXGTnR^_UXEX^_X_V", *(int8x16_t *)"XGTnR^_UXEX^_X_V", v209, v210);
  v212 = v211;
  v213 = strlen(v211);
  if (v213 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v214 = (void *)v213;
  if (v213 >= 0x17)
  {
    v216 = (v213 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v213 | 7) != 0x17)
      v216 = v213 | 7;
    v217 = v216 + 1;
    v215 = operator new(v216 + 1);
    v226[1] = v214;
    v227 = v217 | 0x8000000000000000;
    v226[0] = v215;
    goto LABEL_184;
  }
  HIBYTE(v227) = v213;
  v215 = v226;
  if (v213)
LABEL_184:
    memmove(v215, v212, (size_t)v214);
  *((_BYTE *)v214 + (_QWORD)v215) = 0;
  v218 = (_QWORD *)operator new();
  *v218 = &off_250AE0220;
  v218[1] = v4 + 145;
  sub_23961580C((uint64_t)__p, (uint64_t)v226, (uint64_t)v218);
  if (SHIBYTE(v227) < 0)
  {
    operator delete(v226[0]);
    if ((SHIBYTE(v229) & 0x80000000) == 0)
    {
LABEL_187:
      if ((SHIBYTE(v231) & 0x80000000) == 0)
        goto LABEL_188;
      goto LABEL_224;
    }
  }
  else if ((SHIBYTE(v229) & 0x80000000) == 0)
  {
    goto LABEL_187;
  }
  operator delete(v228[0]);
  if ((SHIBYTE(v231) & 0x80000000) == 0)
  {
LABEL_188:
    if ((SHIBYTE(v233) & 0x80000000) == 0)
      goto LABEL_189;
    goto LABEL_225;
  }
LABEL_224:
  operator delete(v230[0]);
  if ((SHIBYTE(v233) & 0x80000000) == 0)
  {
LABEL_189:
    if ((SHIBYTE(v235) & 0x80000000) == 0)
      goto LABEL_190;
    goto LABEL_226;
  }
LABEL_225:
  operator delete(v232[0]);
  if ((SHIBYTE(v235) & 0x80000000) == 0)
  {
LABEL_190:
    if ((SHIBYTE(v237) & 0x80000000) == 0)
      goto LABEL_191;
    goto LABEL_227;
  }
LABEL_226:
  operator delete(v234[0]);
  if ((SHIBYTE(v237) & 0x80000000) == 0)
  {
LABEL_191:
    if ((SHIBYTE(v239) & 0x80000000) == 0)
      goto LABEL_192;
    goto LABEL_228;
  }
LABEL_227:
  operator delete(v236[0]);
  if ((SHIBYTE(v239) & 0x80000000) == 0)
  {
LABEL_192:
    if ((SHIBYTE(v241) & 0x80000000) == 0)
      goto LABEL_193;
    goto LABEL_229;
  }
LABEL_228:
  operator delete(v238[0]);
  if ((SHIBYTE(v241) & 0x80000000) == 0)
  {
LABEL_193:
    if ((SHIBYTE(v243) & 0x80000000) == 0)
      goto LABEL_194;
    goto LABEL_230;
  }
LABEL_229:
  operator delete(v240[0]);
  if ((SHIBYTE(v243) & 0x80000000) == 0)
  {
LABEL_194:
    if ((SHIBYTE(v245) & 0x80000000) == 0)
      goto LABEL_195;
    goto LABEL_231;
  }
LABEL_230:
  operator delete(v242[0]);
  if ((SHIBYTE(v245) & 0x80000000) == 0)
  {
LABEL_195:
    if ((SHIBYTE(v247) & 0x80000000) == 0)
      goto LABEL_196;
    goto LABEL_232;
  }
LABEL_231:
  operator delete(v244[0]);
  if ((SHIBYTE(v247) & 0x80000000) == 0)
  {
LABEL_196:
    if ((SHIBYTE(v249) & 0x80000000) == 0)
      goto LABEL_197;
    goto LABEL_233;
  }
LABEL_232:
  operator delete(v246[0]);
  if ((SHIBYTE(v249) & 0x80000000) == 0)
  {
LABEL_197:
    if ((SHIBYTE(v251) & 0x80000000) == 0)
      goto LABEL_198;
    goto LABEL_234;
  }
LABEL_233:
  operator delete(v248[0]);
  if ((SHIBYTE(v251) & 0x80000000) == 0)
  {
LABEL_198:
    if ((SHIBYTE(v253) & 0x80000000) == 0)
      goto LABEL_199;
    goto LABEL_235;
  }
LABEL_234:
  operator delete(v250[0]);
  if ((SHIBYTE(v253) & 0x80000000) == 0)
  {
LABEL_199:
    if ((SHIBYTE(v255) & 0x80000000) == 0)
      goto LABEL_200;
    goto LABEL_236;
  }
LABEL_235:
  operator delete(v252[0]);
  if ((SHIBYTE(v255) & 0x80000000) == 0)
  {
LABEL_200:
    if ((SHIBYTE(v257) & 0x80000000) == 0)
      goto LABEL_201;
    goto LABEL_237;
  }
LABEL_236:
  operator delete(v254[0]);
  if ((SHIBYTE(v257) & 0x80000000) == 0)
  {
LABEL_201:
    if ((SHIBYTE(v259) & 0x80000000) == 0)
      goto LABEL_202;
    goto LABEL_238;
  }
LABEL_237:
  operator delete(v256[0]);
  if ((SHIBYTE(v259) & 0x80000000) == 0)
  {
LABEL_202:
    if ((SHIBYTE(v261) & 0x80000000) == 0)
      goto LABEL_203;
    goto LABEL_239;
  }
LABEL_238:
  operator delete(v258[0]);
  if ((SHIBYTE(v261) & 0x80000000) == 0)
  {
LABEL_203:
    if ((SHIBYTE(v263) & 0x80000000) == 0)
      goto LABEL_204;
    goto LABEL_240;
  }
LABEL_239:
  operator delete(v260[0]);
  if ((SHIBYTE(v263) & 0x80000000) == 0)
  {
LABEL_204:
    if ((SHIBYTE(v265) & 0x80000000) == 0)
      goto LABEL_205;
    goto LABEL_241;
  }
LABEL_240:
  operator delete(v262[0]);
  if ((SHIBYTE(v265) & 0x80000000) == 0)
  {
LABEL_205:
    if ((SHIBYTE(v267) & 0x80000000) == 0)
      goto LABEL_206;
    goto LABEL_242;
  }
LABEL_241:
  operator delete(v264[0]);
  if ((SHIBYTE(v267) & 0x80000000) == 0)
  {
LABEL_206:
    if ((SHIBYTE(v269) & 0x80000000) == 0)
      goto LABEL_207;
LABEL_243:
    operator delete(v268[0]);
    if ((SHIBYTE(v271) & 0x80000000) == 0)
      goto LABEL_208;
    goto LABEL_244;
  }
LABEL_242:
  operator delete(v266[0]);
  if (SHIBYTE(v269) < 0)
    goto LABEL_243;
LABEL_207:
  if ((SHIBYTE(v271) & 0x80000000) == 0)
    goto LABEL_208;
LABEL_244:
  operator delete(__dst[0]);
LABEL_208:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
  {
    *(_BYTE *)(v4 + 146) = BYTE4(v275);
    *(_BYTE *)(v4 + 147) = v275;
    *(_BYTE *)(v4 + 148) = BYTE4(v274);
    *(_BYTE *)(v4 + 149) = v274;
    *(_BYTE *)(v4 + 150) = BYTE4(v273);
    v219 = v272;
    *(_DWORD *)(v4 + 164) = v273;
    *(_DWORD *)(v4 + 168) = v219;
  }
  v220 = v277;
  if (v277)
  {
    do
    {
      v221 = v220[5];
      if (v221)
        (*(void (**)(uint64_t))(*(_QWORD *)v221 + 8))(v221);
      v220 = (_QWORD *)*v220;
    }
    while (v220);
    v222 = (void **)v277;
    if (v277)
    {
      do
      {
        v225 = (void **)*v222;
        if (*((char *)v222 + 39) < 0)
          operator delete(v222[2]);
        operator delete(v222);
        v222 = v225;
      }
      while (v225);
    }
  }
  v223 = __p[0];
  __p[0] = 0;
  if (v223)
    operator delete(v223);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AC1AB8(_Unwind_Exception *a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  void **v6;

  v2 = (_QWORD *)STACK[0x260];
  if (STACK[0x260])
  {
    do
    {
      v3 = v2[5];
      if (v3)
        (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
      v2 = (_QWORD *)*v2;
    }
    while (v2);
    v4 = (void **)STACK[0x260];
    if (STACK[0x260])
    {
      do
      {
        v6 = (void **)*v4;
        if (*((char *)v4 + 39) < 0)
          operator delete(v4[2]);
        operator delete(v4);
        v4 = v6;
      }
      while (v6);
    }
  }
  v5 = (void *)STACK[0x250];
  STACK[0x250] = 0;
  if (!v5)
    _Unwind_Resume(a1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AC1F3C(int *a1, _QWORD *a2, char a3)
{
  int v5;
  int8x8_t *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  const char *v13;
  const char *v14;
  size_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int8x16_t v21;
  double v22;
  int32x4_t v23;
  const char *v24;
  const char *v25;
  size_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int8x16_t *v32;
  size_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  double v39;
  int32x4_t v40;
  const char *v41;
  const char *v42;
  size_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  double v49;
  int32x4_t v50;
  const char *v51;
  const char *v52;
  size_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  double v59;
  double v60;
  int16x8_t v61;
  const char *v62;
  const char *v63;
  size_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  double v70;
  int32x4_t v71;
  const char *v72;
  const char *v73;
  size_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  double v80;
  int16x8_t v81;
  int16x8_t v82;
  const char *v83;
  const char *v84;
  size_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  double v91;
  double v92;
  int16x8_t v93;
  const char *v94;
  const char *v95;
  size_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  const char *v102;
  size_t v103;
  void *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  int8x16_t v109;
  double v110;
  int32x4_t v111;
  const char *v112;
  const char *v113;
  size_t v114;
  void *v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  const char *v120;
  const char *v121;
  size_t v122;
  void *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  int8x16_t v128;
  double v129;
  int32x4_t v130;
  const char *v131;
  const char *v132;
  size_t v133;
  void *v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  const char *v139;
  const char *v140;
  size_t v141;
  void *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  int8x16_t v147;
  double v148;
  int32x4_t v149;
  const char *v150;
  const char *v151;
  size_t v152;
  void *v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  int8x16_t v158;
  double v159;
  int32x4_t v160;
  const char *v161;
  const char *v162;
  size_t v163;
  void *v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  int8x16_t v169;
  double v170;
  int32x4_t v171;
  const char *v172;
  const char *v173;
  size_t v174;
  void *v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  int8x16_t v180;
  double v181;
  int32x4_t v182;
  const char *v183;
  const char *v184;
  size_t v185;
  void *v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  int8x16_t *v191;
  size_t v192;
  void *v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  int8x16_t v198;
  double v199;
  int32x4_t v200;
  const char *v201;
  const char *v202;
  size_t v203;
  void *v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  int32x4_t v209;
  double v210;
  int32x4_t v211;
  unsigned __int8 *v212;
  size_t v213;
  void *v214;
  void *v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  double v219;
  int32x4_t v220;
  const char *v221;
  const char *v222;
  size_t v223;
  void *v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  int8x16_t *v229;
  size_t v230;
  void *v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  int8x16_t v236;
  double v237;
  int32x4_t v238;
  const char *v239;
  const char *v240;
  size_t v241;
  void *v242;
  void *v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  double v247;
  int32x4_t v248;
  const char *v249;
  const char *v250;
  size_t v251;
  void *v252;
  void *v253;
  uint64_t v254;
  uint64_t v255;
  _QWORD *v256;
  int8x16_t v257;
  double v258;
  int32x4_t v259;
  const char *v260;
  const char *v261;
  size_t v262;
  void *v263;
  void *v264;
  uint64_t v265;
  uint64_t v266;
  _QWORD *v267;
  int8x16_t v268;
  double v269;
  int32x4_t v270;
  const char *v271;
  const char *v272;
  size_t v273;
  void *v274;
  void *v275;
  uint64_t v276;
  uint64_t v277;
  _QWORD *v278;
  int16x8_t v279;
  const char *v280;
  const char *v281;
  size_t v282;
  void *v283;
  void *v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  const char *v288;
  const char *v289;
  size_t v290;
  void *v291;
  void *v292;
  uint64_t v293;
  uint64_t v294;
  _QWORD *v295;
  int8x16_t v296;
  double v297;
  int32x4_t v298;
  const char *v299;
  const char *v300;
  size_t v301;
  void *v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  int8x16_t v307;
  double v308;
  int32x4_t v309;
  const char *v310;
  const char *v311;
  size_t v312;
  void *v313;
  void *v314;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  int8x16_t v318;
  double v319;
  int32x4_t v320;
  const char *v321;
  const char *v322;
  size_t v323;
  void *v324;
  void *v325;
  uint64_t v326;
  uint64_t v327;
  _QWORD *v328;
  int8x16_t v329;
  double v330;
  int32x4_t v331;
  const char *v332;
  const char *v333;
  size_t v334;
  void *v335;
  void *v336;
  uint64_t v337;
  uint64_t v338;
  _QWORD *v339;
  int8x16_t v340;
  double v341;
  int32x4_t v342;
  const char *v343;
  const char *v344;
  size_t v345;
  void *v346;
  void *v347;
  uint64_t v348;
  uint64_t v349;
  _QWORD *v350;
  int8x16_t v351;
  double v352;
  int32x4_t v353;
  const char *v354;
  const char *v355;
  size_t v356;
  void *v357;
  void *v358;
  uint64_t v359;
  uint64_t v360;
  _QWORD *v361;
  int16x8_t v362;
  int16x8_t v363;
  const char *v364;
  const char *v365;
  size_t v366;
  void *v367;
  void *v368;
  uint64_t v369;
  uint64_t v370;
  _QWORD *v371;
  int8x16_t *v372;
  size_t v373;
  void *v374;
  void *v375;
  uint64_t v376;
  uint64_t v377;
  _QWORD *v378;
  double v379;
  double v380;
  int16x8_t v381;
  const char *v382;
  const char *v383;
  size_t v384;
  void *v385;
  void *v386;
  uint64_t v387;
  uint64_t v388;
  _QWORD *v389;
  int8x16_t v390;
  double v391;
  int32x4_t v392;
  const char *v393;
  const char *v394;
  size_t v395;
  void *v396;
  void *v397;
  uint64_t v398;
  uint64_t v399;
  _QWORD *v400;
  int8x16_t v401;
  double v402;
  int32x4_t v403;
  const char *v404;
  const char *v405;
  size_t v406;
  void *v407;
  void *v408;
  uint64_t v409;
  uint64_t v410;
  _QWORD *v411;
  _QWORD *v412;
  uint64_t v413;
  void **v414;
  void *v415;
  void **v417;
  void *v418[2];
  unint64_t v419;
  void *v420[2];
  unint64_t v421;
  void *v422[2];
  unint64_t v423;
  void *v424[2];
  unint64_t v425;
  void *v426[2];
  unint64_t v427;
  void *v428[2];
  unint64_t v429;
  void *v430[2];
  unint64_t v431;
  void *v432[2];
  unint64_t v433;
  void *v434[2];
  unint64_t v435;
  void *v436[2];
  unint64_t v437;
  void *v438[2];
  unint64_t v439;
  void *v440[2];
  unint64_t v441;
  void *v442[2];
  unint64_t v443;
  void *v444[2];
  unint64_t v445;
  void *v446[2];
  unint64_t v447;
  void *v448[2];
  unint64_t v449;
  void *v450[2];
  unint64_t v451;
  void *v452[2];
  unint64_t v453;
  void *v454[2];
  unint64_t v455;
  void *v456[2];
  unint64_t v457;
  void *v458[2];
  unint64_t v459;
  void *v460[2];
  unint64_t v461;
  void *v462[2];
  unint64_t v463;
  void *v464[2];
  unint64_t v465;
  void *v466[2];
  unint64_t v467;
  void *v468[2];
  unint64_t v469;
  void *v470[2];
  unint64_t v471;
  void *v472[2];
  unint64_t v473;
  void *v474[2];
  unint64_t v475;
  void *v476[2];
  unint64_t v477;
  void *v478[2];
  unint64_t v479;
  void *v480[2];
  unint64_t v481;
  void *v482[2];
  unint64_t v483;
  void *v484[2];
  unint64_t v485;
  void *v486[2];
  unint64_t v487;
  void *v488[2];
  unint64_t v489;
  void *v490[2];
  unint64_t v491;
  void *v492[2];
  unint64_t v493;
  void *v494[2];
  unint64_t v495;
  void *v496[2];
  unint64_t v497;
  void *__dst[2];
  unint64_t v499;
  int v500;
  int v501;
  void *__p[2];
  void *v503;
  _OWORD v504[2];
  _OWORD v505[2];
  __int128 v506;
  char v507[32];
  int8x16_t v508[2];
  __int128 v509;
  _OWORD v510[2];
  char v511[32];
  __int128 v512;
  uint64_t v513;
  unsigned __int8 v514[32];
  char v515[32];
  _OWORD v516[2];
  _OWORD v517[2];
  char v518[16];
  char v519[16];
  _OWORD v520[2];
  char v521[32];
  char v522[48];
  char v523[32];
  __int128 v524;
  __int16 v525;
  __int128 v526;
  char v527[16];
  unsigned __int8 v528[32];
  char v529[32];
  __int128 v530;
  __int16 v531;
  _OWORD v532[2];
  _OWORD v533[2];
  _OWORD v534[2];
  char v535[32];
  __int128 v536;
  char v537;
  __int128 v538;
  uint64_t v539;
  uint64_t v540;
  char v541[8];
  __int128 v542;
  uint64_t v543;
  uint64_t v544;
  char v545[8];
  __int128 v546;
  char v547[32];
  __int128 v548;
  _OWORD v549[2];
  _OWORD v550[2];
  _OWORD v551[2];
  __int16 v552;
  _OWORD v553[2];
  char v554[32];
  __int128 v555;
  __int16 v556;
  _OWORD v557[2];
  __int128 v558;
  char v559;
  int8x8_t v560[5];

  v560[2] = *(int8x8_t *)MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v5 = a1[1];
  v501 = *a1;
  v500 = v5;
  strcpy((char *)v560, "2AT_mFKBW");
  v6 = sub_23950FF84(v560);
  v7 = strlen((const char *)v6);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    v499 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    __dst[1] = v8;
    goto LABEL_8;
  }
  HIBYTE(v499) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250ADF240;
  v12[1] = &v501;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  v558 = xmmword_239F0EC13;
  v559 = 0;
  sub_2396EFA24((uint64_t)&v558);
  v14 = v13;
  v15 = strlen(v13);
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v16 = (void *)v15;
  if (v15 >= 0x17)
  {
    v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v18 = v15 | 7;
    v19 = v18 + 1;
    v17 = operator new(v18 + 1);
    v497 = v19 | 0x8000000000000000;
    v496[0] = v17;
    v496[1] = v16;
    goto LABEL_16;
  }
  HIBYTE(v497) = v15;
  v17 = v496;
  if (v15)
LABEL_16:
    memmove(v17, v14, (size_t)v16);
  *((_BYTE *)v16 + (_QWORD)v17) = 0;
  v20 = (_QWORD *)operator new();
  *v20 = &off_250ADF240;
  v20[1] = &v500;
  sub_23961580C((uint64_t)__p, (uint64_t)v496, (uint64_t)v20);
  v557[0] = xmmword_239F0EC24;
  *(_OWORD *)((char *)v557 + 14) = *(__int128 *)((char *)&xmmword_239F0EC24 + 14);
  sub_2396F0EE8((uint64_t)v557, *(int32x4_t *)((char *)&xmmword_239F0EC24 + 14), v21, v22, v23);
  v25 = v24;
  v26 = strlen(v24);
  if (v26 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v27 = (void *)v26;
  if (v26 >= 0x17)
  {
    v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v29 = v26 | 7;
    v30 = v29 + 1;
    v28 = operator new(v29 + 1);
    v495 = v30 | 0x8000000000000000;
    v494[0] = v28;
    v494[1] = v27;
    goto LABEL_24;
  }
  HIBYTE(v495) = v26;
  v28 = v494;
  if (v26)
LABEL_24:
    memmove(v28, v25, (size_t)v27);
  *((_BYTE *)v27 + (_QWORD)v28) = 0;
  v31 = (_QWORD *)operator new();
  *v31 = &off_250AFFEA8;
  v31[1] = a1 + 10;
  sub_23961580C((uint64_t)__p, (uint64_t)v494, (uint64_t)v31);
  v555 = xmmword_239F0EC42;
  v556 = 27;
  v32 = sub_239A91B18((int8x16_t *)&v555);
  v33 = strlen(v32->i8);
  if (v33 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v34 = (void *)v33;
  if (v33 >= 0x17)
  {
    v36 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17)
      v36 = v33 | 7;
    v37 = v36 + 1;
    v35 = operator new(v36 + 1);
    v493 = v37 | 0x8000000000000000;
    v492[0] = v35;
    v492[1] = v34;
    goto LABEL_32;
  }
  HIBYTE(v493) = v33;
  v35 = v492;
  if (v33)
LABEL_32:
    memmove(v35, v32, (size_t)v34);
  *((_BYTE *)v34 + (_QWORD)v35) = 0;
  v38 = (_QWORD *)operator new();
  *v38 = &off_250AFFEA8;
  v38[1] = (char *)a1 + 41;
  sub_23961580C((uint64_t)__p, (uint64_t)v492, (uint64_t)v38);
  strcpy(v554, "3^RKlAR]@RPlVAA\\AlRQ@\\_FGVlC\\@V");
  sub_2396F06F0((uint64_t)v554, *(int32x4_t *)"3^RKlAR]@RPlVAA\\AlRQ@\\_FGVlC\\@V", *(int8x16_t *)"AlRQ@\\_FGVlC\\@V", v39, v40);
  v42 = v41;
  v43 = strlen(v41);
  if (v43 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v44 = (void *)v43;
  if (v43 >= 0x17)
  {
    v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v43 | 7) != 0x17)
      v46 = v43 | 7;
    v47 = v46 + 1;
    v45 = operator new(v46 + 1);
    v491 = v47 | 0x8000000000000000;
    v490[0] = v45;
    v490[1] = v44;
    goto LABEL_40;
  }
  HIBYTE(v491) = v43;
  v45 = v490;
  if (v43)
LABEL_40:
    memmove(v45, v42, (size_t)v44);
  *((_BYTE *)v44 + (_QWORD)v45) = 0;
  v48 = (_QWORD *)operator new();
  *v48 = &off_250ADF570;
  v48[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v490, (uint64_t)v48);
  v553[0] = xmmword_239F0EC74;
  v553[1] = xmmword_239F0EC84;
  sub_2396F06F0((uint64_t)v553, (int32x4_t)xmmword_239F0EC74, xmmword_239F0EC84, v49, v50);
  v52 = v51;
  v53 = strlen(v51);
  if (v53 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v54 = (void *)v53;
  if (v53 >= 0x17)
  {
    v56 = (v53 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v53 | 7) != 0x17)
      v56 = v53 | 7;
    v57 = v56 + 1;
    v55 = operator new(v56 + 1);
    v489 = v57 | 0x8000000000000000;
    v488[0] = v55;
    v488[1] = v54;
    goto LABEL_48;
  }
  HIBYTE(v489) = v53;
  v55 = v488;
  if (v53)
LABEL_48:
    memmove(v55, v52, (size_t)v54);
  *((_BYTE *)v54 + (_QWORD)v55) = 0;
  v58 = (_QWORD *)operator new();
  *v58 = &off_250ADF570;
  v58[1] = a1 + 14;
  sub_23961580C((uint64_t)__p, (uint64_t)v488, (uint64_t)v58);
  v551[0] = xmmword_239F0EC94;
  v551[1] = *(_OWORD *)dbl_239F0ECA4;
  v552 = 18;
  sub_2396F0120((unsigned __int8 *)v551, (int16x8_t)xmmword_239F0EC94, dbl_239F0ECA4[0], v59, v60, v61);
  v63 = v62;
  v64 = strlen(v62);
  if (v64 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v65 = (void *)v64;
  if (v64 >= 0x17)
  {
    v67 = (v64 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v64 | 7) != 0x17)
      v67 = v64 | 7;
    v68 = v67 + 1;
    v66 = operator new(v67 + 1);
    v487 = v68 | 0x8000000000000000;
    v486[0] = v66;
    v486[1] = v65;
    goto LABEL_56;
  }
  HIBYTE(v487) = v64;
  v66 = v486;
  if (v64)
LABEL_56:
    memmove(v66, v63, (size_t)v65);
  *((_BYTE *)v65 + (_QWORD)v66) = 0;
  v69 = (_QWORD *)operator new();
  *v69 = &off_250ADF570;
  v69[1] = a1 + 38;
  sub_23961580C((uint64_t)__p, (uint64_t)v486, (uint64_t)v69);
  v550[0] = xmmword_239F0ECB6;
  v550[1] = xmmword_239F0ECC6;
  sub_2396F06F0((uint64_t)v550, (int32x4_t)xmmword_239F0ECB6, xmmword_239F0ECC6, v70, v71);
  v73 = v72;
  v74 = strlen(v72);
  if (v74 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v75 = (void *)v74;
  if (v74 >= 0x17)
  {
    v77 = (v74 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v74 | 7) != 0x17)
      v77 = v74 | 7;
    v78 = v77 + 1;
    v76 = operator new(v77 + 1);
    v485 = v78 | 0x8000000000000000;
    v484[0] = v76;
    v484[1] = v75;
    goto LABEL_64;
  }
  HIBYTE(v485) = v74;
  v76 = v484;
  if (v74)
LABEL_64:
    memmove(v76, v73, (size_t)v75);
  *((_BYTE *)v75 + (_QWORD)v76) = 0;
  v79 = (_QWORD *)operator new();
  *v79 = &off_250ADF570;
  v79[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v484, (uint64_t)v79);
  v548 = xmmword_239F0ECD6;
  v549[0] = *(_OWORD *)dbl_239F0ECE6;
  *(_OWORD *)((char *)v549 + 12) = *(_OWORD *)((char *)&dbl_239F0ECE6[1] + 4);
  sub_2396F0FE4((unsigned __int8 *)&v548, *(double *)((char *)&dbl_239F0ECE6[1] + 4), dbl_239F0ECE6[0], v80, v81, v82);
  v84 = v83;
  v85 = strlen(v83);
  if (v85 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v86 = (void *)v85;
  if (v85 >= 0x17)
  {
    v88 = (v85 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v85 | 7) != 0x17)
      v88 = v85 | 7;
    v89 = v88 + 1;
    v87 = operator new(v88 + 1);
    v483 = v89 | 0x8000000000000000;
    v482[0] = v87;
    v482[1] = v86;
    goto LABEL_72;
  }
  HIBYTE(v483) = v85;
  v87 = v482;
  if (v85)
LABEL_72:
    memmove(v87, v84, (size_t)v86);
  *((_BYTE *)v86 + (_QWORD)v87) = 0;
  v90 = (_QWORD *)operator new();
  *v90 = &off_250ADF570;
  v90[1] = a1 + 162;
  sub_23961580C((uint64_t)__p, (uint64_t)v482, (uint64_t)v90);
  v546 = xmmword_239F0ED02;
  strcpy(v547, "YtcvtilceroihYcttit");
  sub_2396F01D4((unsigned __int8 *)&v546, (int16x8_t)xmmword_239F0ED02, *(double *)"YtcvtilceroihYcttit", v91, v92, v93);
  v95 = v94;
  v96 = strlen(v94);
  if (v96 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v97 = (void *)v96;
  if (v96 >= 0x17)
  {
    v99 = (v96 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v96 | 7) != 0x17)
      v99 = v96 | 7;
    v100 = v99 + 1;
    v98 = operator new(v99 + 1);
    v481 = v100 | 0x8000000000000000;
    v480[0] = v98;
    v480[1] = v97;
    goto LABEL_80;
  }
  HIBYTE(v481) = v96;
  v98 = v480;
  if (v96)
LABEL_80:
    memmove(v98, v95, (size_t)v97);
  *((_BYTE *)v97 + (_QWORD)v98) = 0;
  v101 = (_QWORD *)operator new();
  *v101 = &off_250ADF570;
  v101[1] = a1 + 56;
  sub_23961580C((uint64_t)__p, (uint64_t)v480, (uint64_t)v101);
  v544 = 0x2C362A01332B305ELL;
  strcpy(v545, ";?:-");
  v102 = sub_239510ECC((uint64_t)&v544);
  v103 = strlen(v102);
  if (v103 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v104 = (void *)v103;
  if (v103 >= 0x17)
  {
    v106 = (v103 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v103 | 7) != 0x17)
      v106 = v103 | 7;
    v107 = v106 + 1;
    v105 = operator new(v106 + 1);
    v479 = v107 | 0x8000000000000000;
    v478[0] = v105;
    v478[1] = v104;
    goto LABEL_88;
  }
  HIBYTE(v479) = v103;
  v105 = v478;
  if (v103)
LABEL_88:
    memmove(v105, v102, (size_t)v104);
  *((_BYTE *)v104 + (_QWORD)v105) = 0;
  v108 = (_QWORD *)operator new();
  *v108 = &off_250AFFE48;
  v108[1] = a1 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v478, (uint64_t)v108);
  v542 = xmmword_239F0ED26;
  v543 = 0x677F64556F6D6BLL;
  sub_2396F1A4C((uint64_t)&v542, (int32x4_t)xmmword_239F0ED26, v109, v110, v111);
  v113 = v112;
  v114 = strlen(v112);
  if (v114 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v115 = (void *)v114;
  if (v114 >= 0x17)
  {
    v117 = (v114 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v114 | 7) != 0x17)
      v117 = v114 | 7;
    v118 = v117 + 1;
    v116 = operator new(v117 + 1);
    v477 = v118 | 0x8000000000000000;
    v476[0] = v116;
    v476[1] = v115;
    goto LABEL_96;
  }
  HIBYTE(v477) = v114;
  v116 = v476;
  if (v114)
LABEL_96:
    memmove(v116, v113, (size_t)v115);
  *((_BYTE *)v115 + (_QWORD)v116) = 0;
  v119 = (_QWORD *)operator new();
  *v119 = &off_250AFFE48;
  v119[1] = a1 + 58;
  sub_23961580C((uint64_t)__p, (uint64_t)v476, (uint64_t)v119);
  v540 = 0x63E303F37363A59;
  strcpy(v541, ";,7=5<");
  sub_23958E5E0((uint64_t)&v540);
  v121 = v120;
  v122 = strlen(v120);
  if (v122 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v123 = (void *)v122;
  if (v122 >= 0x17)
  {
    v125 = (v122 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v122 | 7) != 0x17)
      v125 = v122 | 7;
    v126 = v125 + 1;
    v124 = operator new(v125 + 1);
    v475 = v126 | 0x8000000000000000;
    v474[0] = v124;
    v474[1] = v123;
    goto LABEL_104;
  }
  HIBYTE(v475) = v122;
  v124 = v474;
  if (v122)
LABEL_104:
    memmove(v124, v121, (size_t)v123);
  *((_BYTE *)v123 + (_QWORD)v124) = 0;
  v127 = (_QWORD *)operator new();
  *v127 = &off_250B00088;
  v127[1] = a1 + 60;
  sub_23961580C((uint64_t)__p, (uint64_t)v474, (uint64_t)v127);
  v538 = xmmword_239F0EE9D;
  v539 = 0x7C6B7862617D51;
  sub_2396F1A4C((uint64_t)&v538, (int32x4_t)xmmword_239F0EE9D, v128, v129, v130);
  v132 = v131;
  v133 = strlen(v131);
  if (v133 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v134 = (void *)v133;
  if (v133 >= 0x17)
  {
    v136 = (v133 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v133 | 7) != 0x17)
      v136 = v133 | 7;
    v137 = v136 + 1;
    v135 = operator new(v136 + 1);
    v473 = v137 | 0x8000000000000000;
    v472[0] = v135;
    v472[1] = v134;
    goto LABEL_112;
  }
  HIBYTE(v473) = v133;
  v135 = v472;
  if (v133)
LABEL_112:
    memmove(v135, v132, (size_t)v134);
  *((_BYTE *)v134 + (_QWORD)v135) = 0;
  v138 = (_QWORD *)operator new();
  *v138 = &off_250AFFEA8;
  v138[1] = a1 + 126;
  sub_23961580C((uint64_t)__p, (uint64_t)v472, (uint64_t)v138);
  v536 = xmmword_239F0EEB5;
  v537 = 0;
  sub_2396EFA24((uint64_t)&v536);
  v140 = v139;
  v141 = strlen(v139);
  if (v141 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v142 = (void *)v141;
  if (v141 >= 0x17)
  {
    v144 = (v141 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v141 | 7) != 0x17)
      v144 = v141 | 7;
    v145 = v144 + 1;
    v143 = operator new(v144 + 1);
    v471 = v145 | 0x8000000000000000;
    v470[0] = v143;
    v470[1] = v142;
    goto LABEL_120;
  }
  HIBYTE(v471) = v141;
  v143 = v470;
  if (v141)
LABEL_120:
    memmove(v143, v140, (size_t)v142);
  *((_BYTE *)v142 + (_QWORD)v143) = 0;
  v146 = (_QWORD *)operator new();
  *v146 = &off_250AFFEA8;
  v146[1] = (char *)a1 + 505;
  sub_23961580C((uint64_t)__p, (uint64_t)v470, (uint64_t)v146);
  strcpy(v535, "7V[^PYhDQZh^QhVAV^[VU[R");
  sub_2396F1A4C((uint64_t)v535, *(int32x4_t *)"7V[^PYhDQZh^QhVAV^[VU[R", v147, v148, v149);
  v151 = v150;
  v152 = strlen(v150);
  if (v152 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v153 = (void *)v152;
  if (v152 >= 0x17)
  {
    v155 = (v152 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v152 | 7) != 0x17)
      v155 = v152 | 7;
    v156 = v155 + 1;
    v154 = operator new(v155 + 1);
    v469 = v156 | 0x8000000000000000;
    v468[0] = v154;
    v468[1] = v153;
    goto LABEL_128;
  }
  HIBYTE(v469) = v152;
  v154 = v468;
  if (v152)
LABEL_128:
    memmove(v154, v151, (size_t)v153);
  *((_BYTE *)v153 + (_QWORD)v154) = 0;
  v157 = (_QWORD *)operator new();
  *v157 = &off_250AFFEA8;
  v157[1] = (char *)a1 + 506;
  sub_23961580C((uint64_t)__p, (uint64_t)v468, (uint64_t)v157);
  v534[0] = xmmword_239F0EEDE;
  *(_OWORD *)((char *)v534 + 15) = *(__int128 *)((char *)&xmmword_239F0EEDE + 15);
  sub_2396EFF58((uint64_t)v534, *(int32x4_t *)((char *)&xmmword_239F0EEDE + 15), v158, v159, v160);
  v162 = v161;
  v163 = strlen(v161);
  if (v163 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v164 = (void *)v163;
  if (v163 >= 0x17)
  {
    v166 = (v163 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v163 | 7) != 0x17)
      v166 = v163 | 7;
    v167 = v166 + 1;
    v165 = operator new(v166 + 1);
    v467 = v167 | 0x8000000000000000;
    v466[0] = v165;
    v466[1] = v164;
    goto LABEL_136;
  }
  HIBYTE(v467) = v163;
  v165 = v466;
  if (v163)
LABEL_136:
    memmove(v165, v162, (size_t)v164);
  *((_BYTE *)v164 + (_QWORD)v165) = 0;
  v168 = (_QWORD *)operator new();
  *v168 = &off_250AFFEA8;
  v168[1] = (char *)a1 + 507;
  sub_23961580C((uint64_t)__p, (uint64_t)v466, (uint64_t)v168);
  v533[0] = xmmword_239F112DB;
  *(_QWORD *)((char *)v533 + 15) = 0x252C22212C2921;
  sub_2396EFBE0((uint64_t)v533, (int32x4_t)xmmword_239F112DB, v169, v170, v171);
  v173 = v172;
  v174 = strlen(v172);
  if (v174 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v175 = (void *)v174;
  if (v174 >= 0x17)
  {
    v177 = (v174 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v174 | 7) != 0x17)
      v177 = v174 | 7;
    v178 = v177 + 1;
    v176 = operator new(v177 + 1);
    v465 = v178 | 0x8000000000000000;
    v464[0] = v176;
    v464[1] = v175;
    goto LABEL_144;
  }
  HIBYTE(v465) = v174;
  v176 = v464;
  if (v174)
LABEL_144:
    memmove(v176, v173, (size_t)v175);
  *((_BYTE *)v175 + (_QWORD)v176) = 0;
  v179 = (_QWORD *)operator new();
  *v179 = &off_250AFFEA8;
  v179[1] = a1 + 148;
  sub_23961580C((uint64_t)__p, (uint64_t)v464, (uint64_t)v179);
  v532[0] = xmmword_239F0EEFD;
  *(_OWORD *)((char *)v532 + 9) = *(__int128 *)((char *)&xmmword_239F0EEFD + 9);
  sub_2396EFC88((uint64_t)v532, *(int32x4_t *)((char *)&xmmword_239F0EEFD + 9), v180, v181, v182);
  v184 = v183;
  v185 = strlen(v183);
  if (v185 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v186 = (void *)v185;
  if (v185 >= 0x17)
  {
    v188 = (v185 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v185 | 7) != 0x17)
      v188 = v185 | 7;
    v189 = v188 + 1;
    v187 = operator new(v188 + 1);
    v463 = v189 | 0x8000000000000000;
    v462[0] = v187;
    v462[1] = v186;
    goto LABEL_152;
  }
  HIBYTE(v463) = v185;
  v187 = v462;
  if (v185)
LABEL_152:
    memmove(v187, v184, (size_t)v186);
  *((_BYTE *)v186 + (_QWORD)v187) = 0;
  v190 = (_QWORD *)operator new();
  *v190 = &off_250ADF570;
  v190[1] = a1 + 150;
  sub_23961580C((uint64_t)__p, (uint64_t)v462, (uint64_t)v190);
  v530 = xmmword_239F0EF16;
  v531 = 97;
  v191 = sub_239A91B18((int8x16_t *)&v530);
  v192 = strlen(v191->i8);
  if (v192 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v193 = (void *)v192;
  if (v192 >= 0x17)
  {
    v195 = (v192 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v192 | 7) != 0x17)
      v195 = v192 | 7;
    v196 = v195 + 1;
    v194 = operator new(v195 + 1);
    v461 = v196 | 0x8000000000000000;
    v460[0] = v194;
    v460[1] = v193;
    goto LABEL_160;
  }
  HIBYTE(v461) = v192;
  v194 = v460;
  if (v192)
LABEL_160:
    memmove(v194, v191, (size_t)v193);
  *((_BYTE *)v193 + (_QWORD)v194) = 0;
  v197 = (_QWORD *)operator new();
  *v197 = &off_250ADF570;
  v197[1] = a1 + 152;
  sub_23961580C((uint64_t)__p, (uint64_t)v460, (uint64_t)v197);
  strcpy(v529, "!CCNY~BIDBJ~US@BJ~PT@MHUX");
  sub_239A93C04((unsigned __int8 *)v529, *(int32x4_t *)"J~US@BJ~PT@MHUX", v198, v199, v200);
  v202 = v201;
  v203 = strlen(v201);
  if (v203 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v204 = (void *)v203;
  if (v203 >= 0x17)
  {
    v206 = (v203 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v203 | 7) != 0x17)
      v206 = v203 | 7;
    v207 = v206 + 1;
    v205 = operator new(v206 + 1);
    v458[1] = v204;
    v459 = v207 | 0x8000000000000000;
    v458[0] = v205;
    goto LABEL_168;
  }
  HIBYTE(v459) = v203;
  v205 = v458;
  if (v203)
LABEL_168:
    memmove(v205, v202, (size_t)v204);
  *((_BYTE *)v204 + (_QWORD)v205) = 0;
  v208 = (_QWORD *)operator new();
  *v208 = &off_250AFFEA8;
  v208[1] = a1 + 154;
  sub_23961580C((uint64_t)__p, (uint64_t)v458, (uint64_t)v208);
  *(_OWORD *)v528 = xmmword_239F0EF42;
  *(_QWORD *)&v528[14] = 0x2B3A2F223B2920;
  v212 = sub_239A90BEC(v528, (int8x16_t)xmmword_239F0EF42, v209, v210, v211);
  v213 = strlen((const char *)v212);
  if (v213 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v214 = (void *)v213;
  if (v213 >= 0x17)
  {
    v216 = (v213 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v213 | 7) != 0x17)
      v216 = v213 | 7;
    v217 = v216 + 1;
    v215 = operator new(v216 + 1);
    v456[1] = v214;
    v457 = v217 | 0x8000000000000000;
    v456[0] = v215;
    goto LABEL_176;
  }
  HIBYTE(v457) = v213;
  v215 = v456;
  if (v213)
LABEL_176:
    memmove(v215, v212, (size_t)v214);
  *((_BYTE *)v214 + (_QWORD)v215) = 0;
  v218 = (_QWORD *)operator new();
  *v218 = &off_250AFFEA8;
  v218[1] = a1 + 164;
  sub_23961580C((uint64_t)__p, (uint64_t)v456, (uint64_t)v218);
  v526 = xmmword_239F0EF58;
  strcpy(v527, "YesjjohaYhskdct");
  sub_2396F06F0((uint64_t)&v526, (int32x4_t)xmmword_239F0EF58, *(int8x16_t *)"YesjjohaYhskdct", v219, v220);
  v222 = v221;
  v223 = strlen(v221);
  if (v223 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v224 = (void *)v223;
  if (v223 >= 0x17)
  {
    v226 = (v223 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v223 | 7) != 0x17)
      v226 = v223 | 7;
    v227 = v226 + 1;
    v225 = operator new(v226 + 1);
    v454[1] = v224;
    v455 = v227 | 0x8000000000000000;
    v454[0] = v225;
    goto LABEL_184;
  }
  HIBYTE(v455) = v223;
  v225 = v454;
  if (v223)
LABEL_184:
    memmove(v225, v222, (size_t)v224);
  *((_BYTE *)v224 + (_QWORD)v225) = 0;
  v228 = (_QWORD *)operator new();
  *v228 = &off_250AFFE48;
  v228[1] = a1 + 104;
  sub_23961580C((uint64_t)__p, (uint64_t)v454, (uint64_t)v228);
  v524 = xmmword_239F0EF78;
  v525 = 15;
  v229 = sub_239A91B18((int8x16_t *)&v524);
  v230 = strlen(v229->i8);
  if (v230 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v231 = (void *)v230;
  if (v230 >= 0x17)
  {
    v233 = (v230 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v230 | 7) != 0x17)
      v233 = v230 | 7;
    v234 = v233 + 1;
    v232 = operator new(v233 + 1);
    v452[1] = v231;
    v453 = v234 | 0x8000000000000000;
    v452[0] = v232;
    goto LABEL_192;
  }
  HIBYTE(v453) = v230;
  v232 = v452;
  if (v230)
LABEL_192:
    memmove(v232, v229, (size_t)v231);
  *((_BYTE *)v231 + (_QWORD)v232) = 0;
  v235 = (_QWORD *)operator new();
  *v235 = &off_250AFFE48;
  v235[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v452, (uint64_t)v235);
  strcpy(v523, "\"OKL}RCKP}KLNKGP}OCVAJ}LWO");
  sub_2396F1974((uint64_t)v523, *(int32x4_t *)"LNKGP}OCVAJ}LWO", v236, v237, v238);
  v240 = v239;
  v241 = strlen(v239);
  if (v241 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v242 = (void *)v241;
  if (v241 >= 0x17)
  {
    v244 = (v241 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v241 | 7) != 0x17)
      v244 = v241 | 7;
    v245 = v244 + 1;
    v243 = operator new(v244 + 1);
    v450[1] = v242;
    v451 = v245 | 0x8000000000000000;
    v450[0] = v243;
    goto LABEL_200;
  }
  HIBYTE(v451) = v241;
  v243 = v450;
  if (v241)
LABEL_200:
    memmove(v243, v240, (size_t)v242);
  *((_BYTE *)v242 + (_QWORD)v243) = 0;
  v246 = (_QWORD *)operator new();
  *v246 = &off_250AFFE48;
  v246[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v450, (uint64_t)v246);
  strcpy(v522, "*GCDuCDIXOYLGuCGKMOuCDFCOXuXK^CE");
  sub_2396EFE38((uint64_t)v522, *(int32x4_t *)"*GCDuCDIXOYLGuCGKMOuCDFCOXuXK^CE", *(int8x16_t *)"KMOuCDFCOXuXK^CE", v247, v248);
  v250 = v249;
  v251 = strlen(v249);
  if (v251 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v252 = (void *)v251;
  if (v251 >= 0x17)
  {
    v254 = (v251 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v251 | 7) != 0x17)
      v254 = v251 | 7;
    v255 = v254 + 1;
    v253 = operator new(v254 + 1);
    v448[1] = v252;
    v449 = v255 | 0x8000000000000000;
    v448[0] = v253;
    goto LABEL_208;
  }
  HIBYTE(v449) = v251;
  v253 = v448;
  if (v251)
LABEL_208:
    memmove(v253, v250, (size_t)v252);
  *((_BYTE *)v252 + (_QWORD)v253) = 0;
  v256 = (_QWORD *)operator new();
  *v256 = &off_250ADF570;
  v256[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v448, (uint64_t)v256);
  strcpy(v521, "2_[\\m[\\Q@WAT_m[_SUWm[\\^[W@m\\G_");
  sub_2396EFF58((uint64_t)v521, *(int32x4_t *)"_SUWm[\\^[W@m\\G_", v257, v258, v259);
  v261 = v260;
  v262 = strlen(v260);
  if (v262 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v263 = (void *)v262;
  if (v262 >= 0x17)
  {
    v265 = (v262 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v262 | 7) != 0x17)
      v265 = v262 | 7;
    v266 = v265 + 1;
    v264 = operator new(v265 + 1);
    v446[1] = v263;
    v447 = v266 | 0x8000000000000000;
    v446[0] = v264;
    goto LABEL_216;
  }
  HIBYTE(v447) = v262;
  v264 = v446;
  if (v262)
LABEL_216:
    memmove(v264, v261, (size_t)v263);
  *((_BYTE *)v263 + (_QWORD)v264) = 0;
  v267 = (_QWORD *)operator new();
  *v267 = &off_250ADF570;
  v267[1] = a1 + 6;
  sub_23961580C((uint64_t)__p, (uint64_t)v446, (uint64_t)v267);
  v520[0] = xmmword_239F0EFE5;
  *(_OWORD *)((char *)v520 + 9) = *(__int128 *)((char *)&xmmword_239F0EFE5 + 9);
  sub_2396EFC88((uint64_t)v520, *(int32x4_t *)((char *)&xmmword_239F0EFE5 + 9), v268, v269, v270);
  v272 = v271;
  v273 = strlen(v271);
  if (v273 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v274 = (void *)v273;
  if (v273 >= 0x17)
  {
    v276 = (v273 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v273 | 7) != 0x17)
      v276 = v273 | 7;
    v277 = v276 + 1;
    v275 = operator new(v276 + 1);
    v444[1] = v274;
    v445 = v277 | 0x8000000000000000;
    v444[0] = v275;
    goto LABEL_224;
  }
  HIBYTE(v445) = v273;
  v275 = v444;
  if (v273)
LABEL_224:
    memmove(v275, v272, (size_t)v274);
  *((_BYTE *)v274 + (_QWORD)v275) = 0;
  v278 = (_QWORD *)operator new();
  *v278 = &off_250ADF570;
  v278[1] = a1 + 146;
  sub_23961580C((uint64_t)__p, (uint64_t)v444, (uint64_t)v278);
  strcpy(v519, "R1=<4;5\r 7>=1");
  sub_23971A32C((uint64_t)v519, v279);
  v281 = v280;
  v282 = strlen(v280);
  if (v282 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v283 = (void *)v282;
  if (v282 >= 0x17)
  {
    v285 = (v282 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v282 | 7) != 0x17)
      v285 = v282 | 7;
    v286 = v285 + 1;
    v284 = operator new(v285 + 1);
    v442[1] = v283;
    v443 = v286 | 0x8000000000000000;
    v442[0] = v284;
    goto LABEL_232;
  }
  HIBYTE(v443) = v282;
  v284 = v442;
  if (v282)
LABEL_232:
    memmove(v284, v281, (size_t)v283);
  *((_BYTE *)v283 + (_QWORD)v284) = 0;
  v287 = (_QWORD *)operator new();
  *v287 = &off_250B000B8;
  v287[1] = a1 + 106;
  sub_23961580C((uint64_t)__p, (uint64_t)v442, (uint64_t)v287);
  strcpy(v518, "W4891>0\b0;5$1:");
  sub_23958E5E0((uint64_t)v518);
  v289 = v288;
  v290 = strlen(v288);
  if (v290 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v291 = (void *)v290;
  if (v290 >= 0x17)
  {
    v293 = (v290 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v290 | 7) != 0x17)
      v293 = v290 | 7;
    v294 = v293 + 1;
    v292 = operator new(v293 + 1);
    v440[1] = v291;
    v441 = v294 | 0x8000000000000000;
    v440[0] = v292;
    goto LABEL_240;
  }
  HIBYTE(v441) = v290;
  v292 = v440;
  if (v290)
LABEL_240:
    memmove(v292, v289, (size_t)v291);
  *((_BYTE *)v291 + (_QWORD)v292) = 0;
  v295 = (_QWORD *)operator new();
  *v295 = &off_250B000E8;
  v295[1] = a1 + 178;
  sub_23961580C((uint64_t)__p, (uint64_t)v440, (uint64_t)v295);
  v517[0] = xmmword_239F0F266;
  *(_OWORD *)((char *)v517 + 9) = *(__int128 *)((char *)&xmmword_239F0F266 + 9);
  sub_2396EFC88((uint64_t)v517, *(int32x4_t *)((char *)&xmmword_239F0F266 + 9), v296, v297, v298);
  v300 = v299;
  v301 = strlen(v299);
  if (v301 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v302 = (void *)v301;
  if (v301 >= 0x17)
  {
    v304 = (v301 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v301 | 7) != 0x17)
      v304 = v301 | 7;
    v305 = v304 + 1;
    v303 = operator new(v304 + 1);
    v438[1] = v302;
    v439 = v305 | 0x8000000000000000;
    v438[0] = v303;
    goto LABEL_248;
  }
  HIBYTE(v439) = v301;
  v303 = v438;
  if (v301)
LABEL_248:
    memmove(v303, v300, (size_t)v302);
  *((_BYTE *)v302 + (_QWORD)v303) = 0;
  v306 = (_QWORD *)operator new();
  *v306 = &off_250AFFEA8;
  v306[1] = (char *)a1 + 657;
  sub_23961580C((uint64_t)__p, (uint64_t)v438, (uint64_t)v306);
  v516[0] = xmmword_239F0F27F;
  *(_DWORD *)((char *)v516 + 15) = 1180936;
  sub_23958E450((uint64_t)v516, (int32x4_t)xmmword_239F0F27F, v307, v308, v309);
  v311 = v310;
  v312 = strlen(v310);
  if (v312 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v313 = (void *)v312;
  if (v312 >= 0x17)
  {
    v315 = (v312 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v312 | 7) != 0x17)
      v315 = v312 | 7;
    v316 = v315 + 1;
    v314 = operator new(v315 + 1);
    v436[1] = v313;
    v437 = v316 | 0x8000000000000000;
    v436[0] = v314;
    goto LABEL_256;
  }
  HIBYTE(v437) = v312;
  v314 = v436;
  if (v312)
LABEL_256:
    memmove(v314, v311, (size_t)v313);
  *((_BYTE *)v313 + (_QWORD)v314) = 0;
  v317 = (_QWORD *)operator new();
  *v317 = &off_250ADF480;
  v317[1] = a1 + 166;
  sub_23961580C((uint64_t)__p, (uint64_t)v436, (uint64_t)v317);
  strcpy(v515, "0]Y^oCESSUCCoY]QWUCo^E]");
  sub_2396F1A4C((uint64_t)v515, *(int32x4_t *)"0]Y^oCESSUCCoY]QWUCo^E]", v318, v319, v320);
  v322 = v321;
  v323 = strlen(v321);
  if (v323 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v324 = (void *)v323;
  if (v323 >= 0x17)
  {
    v326 = (v323 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v323 | 7) != 0x17)
      v326 = v323 | 7;
    v327 = v326 + 1;
    v325 = operator new(v326 + 1);
    v434[1] = v324;
    v435 = v327 | 0x8000000000000000;
    v434[0] = v325;
    goto LABEL_264;
  }
  HIBYTE(v435) = v323;
  v325 = v434;
  if (v323)
LABEL_264:
    memmove(v325, v322, (size_t)v324);
  *((_BYTE *)v324 + (_QWORD)v325) = 0;
  v328 = (_QWORD *)operator new();
  *v328 = &off_250AFFE48;
  v328[1] = a1 + 172;
  sub_23961580C((uint64_t)__p, (uint64_t)v434, (uint64_t)v328);
  *(_OWORD *)v514 = xmmword_239F0F2AA;
  *(_OWORD *)&v514[10] = *(__int128 *)((char *)&xmmword_239F0F2AA + 10);
  sub_239A93C04(v514, *(int32x4_t *)((char *)&xmmword_239F0F2AA + 10), v329, v330, v331);
  v333 = v332;
  v334 = strlen(v332);
  if (v334 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v335 = (void *)v334;
  if (v334 >= 0x17)
  {
    v337 = (v334 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v334 | 7) != 0x17)
      v337 = v334 | 7;
    v338 = v337 + 1;
    v336 = operator new(v337 + 1);
    v432[1] = v335;
    v433 = v338 | 0x8000000000000000;
    v432[0] = v336;
    goto LABEL_272;
  }
  HIBYTE(v433) = v334;
  v336 = v432;
  if (v334)
LABEL_272:
    memmove(v336, v333, (size_t)v335);
  *((_BYTE *)v335 + (_QWORD)v336) = 0;
  v339 = (_QWORD *)operator new();
  *v339 = &off_250AFFE48;
  v339[1] = a1 + 174;
  sub_23961580C((uint64_t)__p, (uint64_t)v432, (uint64_t)v339);
  v512 = xmmword_239F0F2C4;
  v513 = 0x11091223101D15;
  sub_2396F1A4C((uint64_t)&v512, (int32x4_t)xmmword_239F0F2C4, v340, v341, v342);
  v344 = v343;
  v345 = strlen(v343);
  if (v345 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v346 = (void *)v345;
  if (v345 >= 0x17)
  {
    v348 = (v345 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v345 | 7) != 0x17)
      v348 = v345 | 7;
    v349 = v348 + 1;
    v347 = operator new(v348 + 1);
    v430[1] = v346;
    v431 = v349 | 0x8000000000000000;
    v430[0] = v347;
    goto LABEL_280;
  }
  HIBYTE(v431) = v345;
  v347 = v430;
  if (v345)
LABEL_280:
    memmove(v347, v344, (size_t)v346);
  *((_BYTE *)v346 + (_QWORD)v347) = 0;
  v350 = (_QWORD *)operator new();
  *v350 = &off_250AFFE48;
  v350[1] = a1 + 158;
  sub_23961580C((uint64_t)__p, (uint64_t)v430, (uint64_t)v350);
  strcpy(v511, "&ASGTGHRCCyJGTACURyEIKVIHCHR");
  sub_2396EFD48((uint64_t)v511, *(int32x4_t *)"TACURyEIKVIHCHR", v351, v352, v353);
  v355 = v354;
  v356 = strlen(v354);
  if (v356 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v357 = (void *)v356;
  if (v356 >= 0x17)
  {
    v359 = (v356 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v356 | 7) != 0x17)
      v359 = v356 | 7;
    v360 = v359 + 1;
    v358 = operator new(v359 + 1);
    v428[1] = v357;
    v429 = v360 | 0x8000000000000000;
    v428[0] = v358;
    goto LABEL_288;
  }
  HIBYTE(v429) = v356;
  v358 = v428;
  if (v356)
LABEL_288:
    memmove(v358, v355, (size_t)v357);
  *((_BYTE *)v357 + (_QWORD)v358) = 0;
  v361 = (_QWORD *)operator new();
  *v361 = &off_250AFFEA8;
  v361[1] = a1 + 160;
  sub_23961580C((uint64_t)__p, (uint64_t)v428, (uint64_t)v361);
  v509 = xmmword_239F0F2F9;
  v510[0] = *(_OWORD *)dbl_239F0F309;
  *(_OWORD *)((char *)v510 + 11) = *(_OWORD *)((char *)&dbl_239F0F309[1] + 3);
  sub_2396F0B4C((unsigned __int8 *)&v509, *(double *)((char *)&dbl_239F0F309[1] + 3), dbl_239F0F309[0], v362, v363);
  v365 = v364;
  v366 = strlen(v364);
  if (v366 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v367 = (void *)v366;
  if (v366 >= 0x17)
  {
    v369 = (v366 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v366 | 7) != 0x17)
      v369 = v366 | 7;
    v370 = v369 + 1;
    v368 = operator new(v369 + 1);
    v426[1] = v367;
    v427 = v370 | 0x8000000000000000;
    v426[0] = v368;
    goto LABEL_296;
  }
  HIBYTE(v427) = v366;
  v368 = v426;
  if (v366)
LABEL_296:
    memmove(v368, v365, (size_t)v367);
  *((_BYTE *)v367 + (_QWORD)v368) = 0;
  v371 = (_QWORD *)operator new();
  *v371 = &off_250ADF570;
  v371[1] = a1 + 144;
  sub_23961580C((uint64_t)__p, (uint64_t)v426, (uint64_t)v371);
  strcpy(v508[0].i8, ".MA@HGIqOBGI@CK@Z");
  v372 = sub_239A91B18(v508);
  v373 = strlen(v372->i8);
  if (v373 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v374 = (void *)v373;
  if (v373 >= 0x17)
  {
    v376 = (v373 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v373 | 7) != 0x17)
      v376 = v373 | 7;
    v377 = v376 + 1;
    v375 = operator new(v376 + 1);
    v424[1] = v374;
    v425 = v377 | 0x8000000000000000;
    v424[0] = v375;
    goto LABEL_304;
  }
  HIBYTE(v425) = v373;
  v375 = v424;
  if (v373)
LABEL_304:
    memmove(v375, v372, (size_t)v374);
  *((_BYTE *)v374 + (_QWORD)v375) = 0;
  v378 = (_QWORD *)operator new();
  *v378 = &off_250B00148;
  v378[1] = a1 + 128;
  sub_23961580C((uint64_t)__p, (uint64_t)v424, (uint64_t)v378);
  v506 = xmmword_239F0F37F;
  sub_2396F02A0((unsigned __int8 *)&v506, 5.54750527e290, unk_239F0F38F, v379, v380, v381);
  v383 = v382;
  v384 = strlen(v382);
  if (v384 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v385 = (void *)v384;
  if (v384 >= 0x17)
  {
    v387 = (v384 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v384 | 7) != 0x17)
      v387 = v384 | 7;
    v388 = v387 + 1;
    v386 = operator new(v387 + 1);
    v422[1] = v385;
    v423 = v388 | 0x8000000000000000;
    v422[0] = v386;
    goto LABEL_312;
  }
  HIBYTE(v423) = v384;
  v386 = v422;
  if (v384)
LABEL_312:
    memmove(v386, v383, (size_t)v385);
  *((_BYTE *)v385 + (_QWORD)v386) = 0;
  v389 = (_QWORD *)operator new();
  *v389 = &off_250AFFEA8;
  v389[1] = a1 + 176;
  sub_23961580C((uint64_t)__p, (uint64_t)v422, (uint64_t)v389);
  v505[0] = xmmword_239F0F3A7;
  *(_OWORD *)((char *)v505 + 11) = *(__int128 *)((char *)&xmmword_239F0F3A7 + 11);
  sub_2396F1974((uint64_t)v505, *(int32x4_t *)((char *)&xmmword_239F0F3A7 + 11), v390, v391, v392);
  v394 = v393;
  v395 = strlen(v393);
  if (v395 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v396 = (void *)v395;
  if (v395 >= 0x17)
  {
    v398 = (v395 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v395 | 7) != 0x17)
      v398 = v395 | 7;
    v399 = v398 + 1;
    v397 = operator new(v398 + 1);
    v420[1] = v396;
    v421 = v399 | 0x8000000000000000;
    v420[0] = v397;
    goto LABEL_320;
  }
  HIBYTE(v421) = v395;
  v397 = v420;
  if (v395)
LABEL_320:
    memmove(v397, v394, (size_t)v396);
  *((_BYTE *)v396 + (_QWORD)v397) = 0;
  v400 = (_QWORD *)operator new();
  *v400 = &off_250AFFEA8;
  v400[1] = (char *)a1 + 705;
  sub_23961580C((uint64_t)__p, (uint64_t)v420, (uint64_t)v400);
  v504[0] = xmmword_239F0F3C2;
  *(_OWORD *)((char *)v504 + 11) = *(__int128 *)((char *)&xmmword_239F0F3C2 + 11);
  sub_2396F1974((uint64_t)v504, *(int32x4_t *)((char *)&xmmword_239F0F3C2 + 11), v401, v402, v403);
  v405 = v404;
  v406 = strlen(v404);
  if (v406 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v407 = (void *)v406;
  if (v406 >= 0x17)
  {
    v409 = (v406 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v406 | 7) != 0x17)
      v409 = v406 | 7;
    v410 = v409 + 1;
    v408 = operator new(v409 + 1);
    v418[1] = v407;
    v419 = v410 | 0x8000000000000000;
    v418[0] = v408;
    goto LABEL_328;
  }
  HIBYTE(v419) = v406;
  v408 = v418;
  if (v406)
LABEL_328:
    memmove(v408, v405, (size_t)v407);
  *((_BYTE *)v407 + (_QWORD)v408) = 0;
  v411 = (_QWORD *)operator new();
  *v411 = &off_250AFFEA8;
  v411[1] = (char *)a1 + 617;
  sub_23961580C((uint64_t)__p, (uint64_t)v418, (uint64_t)v411);
  if (SHIBYTE(v419) < 0)
  {
    operator delete(v418[0]);
    if ((SHIBYTE(v421) & 0x80000000) == 0)
    {
LABEL_331:
      if ((SHIBYTE(v423) & 0x80000000) == 0)
        goto LABEL_332;
      goto LABEL_384;
    }
  }
  else if ((SHIBYTE(v421) & 0x80000000) == 0)
  {
    goto LABEL_331;
  }
  operator delete(v420[0]);
  if ((SHIBYTE(v423) & 0x80000000) == 0)
  {
LABEL_332:
    if ((SHIBYTE(v425) & 0x80000000) == 0)
      goto LABEL_333;
    goto LABEL_385;
  }
LABEL_384:
  operator delete(v422[0]);
  if ((SHIBYTE(v425) & 0x80000000) == 0)
  {
LABEL_333:
    if ((SHIBYTE(v427) & 0x80000000) == 0)
      goto LABEL_334;
    goto LABEL_386;
  }
LABEL_385:
  operator delete(v424[0]);
  if ((SHIBYTE(v427) & 0x80000000) == 0)
  {
LABEL_334:
    if ((SHIBYTE(v429) & 0x80000000) == 0)
      goto LABEL_335;
    goto LABEL_387;
  }
LABEL_386:
  operator delete(v426[0]);
  if ((SHIBYTE(v429) & 0x80000000) == 0)
  {
LABEL_335:
    if ((SHIBYTE(v431) & 0x80000000) == 0)
      goto LABEL_336;
    goto LABEL_388;
  }
LABEL_387:
  operator delete(v428[0]);
  if ((SHIBYTE(v431) & 0x80000000) == 0)
  {
LABEL_336:
    if ((SHIBYTE(v433) & 0x80000000) == 0)
      goto LABEL_337;
    goto LABEL_389;
  }
LABEL_388:
  operator delete(v430[0]);
  if ((SHIBYTE(v433) & 0x80000000) == 0)
  {
LABEL_337:
    if ((SHIBYTE(v435) & 0x80000000) == 0)
      goto LABEL_338;
    goto LABEL_390;
  }
LABEL_389:
  operator delete(v432[0]);
  if ((SHIBYTE(v435) & 0x80000000) == 0)
  {
LABEL_338:
    if ((SHIBYTE(v437) & 0x80000000) == 0)
      goto LABEL_339;
    goto LABEL_391;
  }
LABEL_390:
  operator delete(v434[0]);
  if ((SHIBYTE(v437) & 0x80000000) == 0)
  {
LABEL_339:
    if ((SHIBYTE(v439) & 0x80000000) == 0)
      goto LABEL_340;
    goto LABEL_392;
  }
LABEL_391:
  operator delete(v436[0]);
  if ((SHIBYTE(v439) & 0x80000000) == 0)
  {
LABEL_340:
    if ((SHIBYTE(v441) & 0x80000000) == 0)
      goto LABEL_341;
    goto LABEL_393;
  }
LABEL_392:
  operator delete(v438[0]);
  if ((SHIBYTE(v441) & 0x80000000) == 0)
  {
LABEL_341:
    if ((SHIBYTE(v443) & 0x80000000) == 0)
      goto LABEL_342;
    goto LABEL_394;
  }
LABEL_393:
  operator delete(v440[0]);
  if ((SHIBYTE(v443) & 0x80000000) == 0)
  {
LABEL_342:
    if ((SHIBYTE(v445) & 0x80000000) == 0)
      goto LABEL_343;
    goto LABEL_395;
  }
LABEL_394:
  operator delete(v442[0]);
  if ((SHIBYTE(v445) & 0x80000000) == 0)
  {
LABEL_343:
    if ((SHIBYTE(v447) & 0x80000000) == 0)
      goto LABEL_344;
    goto LABEL_396;
  }
LABEL_395:
  operator delete(v444[0]);
  if ((SHIBYTE(v447) & 0x80000000) == 0)
  {
LABEL_344:
    if ((SHIBYTE(v449) & 0x80000000) == 0)
      goto LABEL_345;
    goto LABEL_397;
  }
LABEL_396:
  operator delete(v446[0]);
  if ((SHIBYTE(v449) & 0x80000000) == 0)
  {
LABEL_345:
    if ((SHIBYTE(v451) & 0x80000000) == 0)
      goto LABEL_346;
    goto LABEL_398;
  }
LABEL_397:
  operator delete(v448[0]);
  if ((SHIBYTE(v451) & 0x80000000) == 0)
  {
LABEL_346:
    if ((SHIBYTE(v453) & 0x80000000) == 0)
      goto LABEL_347;
    goto LABEL_399;
  }
LABEL_398:
  operator delete(v450[0]);
  if ((SHIBYTE(v453) & 0x80000000) == 0)
  {
LABEL_347:
    if ((SHIBYTE(v455) & 0x80000000) == 0)
      goto LABEL_348;
    goto LABEL_400;
  }
LABEL_399:
  operator delete(v452[0]);
  if ((SHIBYTE(v455) & 0x80000000) == 0)
  {
LABEL_348:
    if ((SHIBYTE(v457) & 0x80000000) == 0)
      goto LABEL_349;
    goto LABEL_401;
  }
LABEL_400:
  operator delete(v454[0]);
  if ((SHIBYTE(v457) & 0x80000000) == 0)
  {
LABEL_349:
    if ((SHIBYTE(v459) & 0x80000000) == 0)
      goto LABEL_350;
    goto LABEL_402;
  }
LABEL_401:
  operator delete(v456[0]);
  if ((SHIBYTE(v459) & 0x80000000) == 0)
  {
LABEL_350:
    if ((SHIBYTE(v461) & 0x80000000) == 0)
      goto LABEL_351;
    goto LABEL_403;
  }
LABEL_402:
  operator delete(v458[0]);
  if ((SHIBYTE(v461) & 0x80000000) == 0)
  {
LABEL_351:
    if ((SHIBYTE(v463) & 0x80000000) == 0)
      goto LABEL_352;
    goto LABEL_404;
  }
LABEL_403:
  operator delete(v460[0]);
  if ((SHIBYTE(v463) & 0x80000000) == 0)
  {
LABEL_352:
    if ((SHIBYTE(v465) & 0x80000000) == 0)
      goto LABEL_353;
    goto LABEL_405;
  }
LABEL_404:
  operator delete(v462[0]);
  if ((SHIBYTE(v465) & 0x80000000) == 0)
  {
LABEL_353:
    if ((SHIBYTE(v467) & 0x80000000) == 0)
      goto LABEL_354;
    goto LABEL_406;
  }
LABEL_405:
  operator delete(v464[0]);
  if ((SHIBYTE(v467) & 0x80000000) == 0)
  {
LABEL_354:
    if ((SHIBYTE(v469) & 0x80000000) == 0)
      goto LABEL_355;
    goto LABEL_407;
  }
LABEL_406:
  operator delete(v466[0]);
  if ((SHIBYTE(v469) & 0x80000000) == 0)
  {
LABEL_355:
    if ((SHIBYTE(v471) & 0x80000000) == 0)
      goto LABEL_356;
    goto LABEL_408;
  }
LABEL_407:
  operator delete(v468[0]);
  if ((SHIBYTE(v471) & 0x80000000) == 0)
  {
LABEL_356:
    if ((SHIBYTE(v473) & 0x80000000) == 0)
      goto LABEL_357;
    goto LABEL_409;
  }
LABEL_408:
  operator delete(v470[0]);
  if ((SHIBYTE(v473) & 0x80000000) == 0)
  {
LABEL_357:
    if ((SHIBYTE(v475) & 0x80000000) == 0)
      goto LABEL_358;
    goto LABEL_410;
  }
LABEL_409:
  operator delete(v472[0]);
  if ((SHIBYTE(v475) & 0x80000000) == 0)
  {
LABEL_358:
    if ((SHIBYTE(v477) & 0x80000000) == 0)
      goto LABEL_359;
    goto LABEL_411;
  }
LABEL_410:
  operator delete(v474[0]);
  if ((SHIBYTE(v477) & 0x80000000) == 0)
  {
LABEL_359:
    if ((SHIBYTE(v479) & 0x80000000) == 0)
      goto LABEL_360;
    goto LABEL_412;
  }
LABEL_411:
  operator delete(v476[0]);
  if ((SHIBYTE(v479) & 0x80000000) == 0)
  {
LABEL_360:
    if ((SHIBYTE(v481) & 0x80000000) == 0)
      goto LABEL_361;
    goto LABEL_413;
  }
LABEL_412:
  operator delete(v478[0]);
  if ((SHIBYTE(v481) & 0x80000000) == 0)
  {
LABEL_361:
    if ((SHIBYTE(v483) & 0x80000000) == 0)
      goto LABEL_362;
    goto LABEL_414;
  }
LABEL_413:
  operator delete(v480[0]);
  if ((SHIBYTE(v483) & 0x80000000) == 0)
  {
LABEL_362:
    if ((SHIBYTE(v485) & 0x80000000) == 0)
      goto LABEL_363;
    goto LABEL_415;
  }
LABEL_414:
  operator delete(v482[0]);
  if ((SHIBYTE(v485) & 0x80000000) == 0)
  {
LABEL_363:
    if ((SHIBYTE(v487) & 0x80000000) == 0)
      goto LABEL_364;
    goto LABEL_416;
  }
LABEL_415:
  operator delete(v484[0]);
  if ((SHIBYTE(v487) & 0x80000000) == 0)
  {
LABEL_364:
    if ((SHIBYTE(v489) & 0x80000000) == 0)
      goto LABEL_365;
    goto LABEL_417;
  }
LABEL_416:
  operator delete(v486[0]);
  if ((SHIBYTE(v489) & 0x80000000) == 0)
  {
LABEL_365:
    if ((SHIBYTE(v491) & 0x80000000) == 0)
      goto LABEL_366;
    goto LABEL_418;
  }
LABEL_417:
  operator delete(v488[0]);
  if ((SHIBYTE(v491) & 0x80000000) == 0)
  {
LABEL_366:
    if ((SHIBYTE(v493) & 0x80000000) == 0)
      goto LABEL_367;
    goto LABEL_419;
  }
LABEL_418:
  operator delete(v490[0]);
  if ((SHIBYTE(v493) & 0x80000000) == 0)
  {
LABEL_367:
    if ((SHIBYTE(v495) & 0x80000000) == 0)
      goto LABEL_368;
    goto LABEL_420;
  }
LABEL_419:
  operator delete(v492[0]);
  if ((SHIBYTE(v495) & 0x80000000) == 0)
  {
LABEL_368:
    if ((SHIBYTE(v497) & 0x80000000) == 0)
      goto LABEL_369;
LABEL_421:
    operator delete(v496[0]);
    if ((SHIBYTE(v499) & 0x80000000) == 0)
      goto LABEL_370;
    goto LABEL_422;
  }
LABEL_420:
  operator delete(v494[0]);
  if (SHIBYTE(v497) < 0)
    goto LABEL_421;
LABEL_369:
  if ((SHIBYTE(v499) & 0x80000000) == 0)
    goto LABEL_370;
LABEL_422:
  operator delete(__dst[0]);
LABEL_370:
  sub_2395902F0((uint64_t)__p, a2);
  v412 = v503;
  if (v503)
  {
    do
    {
      v413 = v412[5];
      if (v413)
        (*(void (**)(uint64_t))(*(_QWORD *)v413 + 8))(v413);
      v412 = (_QWORD *)*v412;
    }
    while (v412);
    v414 = (void **)v503;
    if (v503)
    {
      do
      {
        v417 = (void **)*v414;
        if (*((char *)v414 + 39) < 0)
          operator delete(v414[2]);
        operator delete(v414);
        v414 = v417;
      }
      while (v417);
    }
  }
  v415 = __p[0];
  __p[0] = 0;
  if (v415)
    operator delete(v415);
  return a2;
}

void sub_239AC45C8(_Unwind_Exception *a1)
{
  sub_2395905C0((uint64_t)&STACK[0x3F0]);
  _Unwind_Resume(a1);
}

void sub_239AC4CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a49 < 0)
    JUMPOUT(0x239AC4918);
  JUMPOUT(0x239AC4734);
}

void sub_239AC4CE4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AC4D08(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AB9D74(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AC4D44()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AC4D7C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AC4DA0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ABCA70(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AC4DDC()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AC4E14(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AC4E38(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ABFD7C(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AC4E74()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AC4EAC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AC4ED0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AC5620(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AC4F0C(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  double v5;
  double v6;
  int16x8_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  double v16;
  int16x8_t v17;
  const char *v18;
  const char *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  double v26;
  int16x8_t v27;
  const char *v28;
  const char *v29;
  size_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  double v36;
  int16x8_t v37;
  double v38;
  int16x8_t v39;
  unsigned __int8 *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int8x8_t *v47;
  size_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  void **v56;
  void *v57;
  void **v59;
  void *v60[2];
  unint64_t v61;
  void *v62[2];
  unint64_t v63;
  void *v64[2];
  unint64_t v65;
  void *v66[2];
  unint64_t v67;
  void *__dst[2];
  unint64_t v69;
  void *__p[2];
  void *v71;
  int8x8_t v72[2];
  __int128 v73;
  int8x16_t v74[2];
  __int128 v75;
  int16x8_t v76[2];
  __int128 v77;
  int16x8_t v78[2];
  _OWORD v79[2];
  uint64_t v80;
  uint64_t v81;

  v81 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v79[0] = xmmword_239F0F904;
  v79[1] = xmmword_239F0F914;
  v80 = 0x50D0E09120413;
  sub_2396F02A0((unsigned __int8 *)v79, 1.76535877e-284, xmmword_239F0F914, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v69 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v69) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFF08;
  v15[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v77 = xmmword_239F0F92C;
  v78[0] = xmmword_239F0F93C;
  *(uint64_t *)((char *)&v78[0].i64[1] + 7) = 0xE060502190F18;
  sub_2396F0804((unsigned __int8 *)&v77, 5.63206975e-241, xmmword_239F0F93C, v16, v17);
  v19 = v18;
  v20 = strlen(v18);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v66[1] = v21;
    v67 = v24 | 0x8000000000000000;
    v66[0] = v22;
    goto LABEL_16;
  }
  HIBYTE(v67) = v20;
  v22 = v66;
  if (v20)
LABEL_16:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250AFFF08;
  v25[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v66, (uint64_t)v25);
  v75 = xmmword_239F0F953;
  v76[0] = xmmword_239F0F963;
  *(uint64_t *)((char *)&v76[0].i64[1] + 7) = 0x1F171413081E09;
  sub_2396F0804((unsigned __int8 *)&v75, 2.78326591e-221, xmmword_239F0F963, v26, v27);
  v29 = v28;
  v30 = strlen(v28);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v31 = (void *)v30;
  if (v30 >= 0x17)
  {
    v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v33 = v30 | 7;
    v34 = v33 + 1;
    v32 = operator new(v33 + 1);
    v64[1] = v31;
    v65 = v34 | 0x8000000000000000;
    v64[0] = v32;
    goto LABEL_24;
  }
  HIBYTE(v65) = v30;
  v32 = v64;
  if (v30)
LABEL_24:
    memmove(v32, v29, (size_t)v31);
  *((_BYTE *)v31 + (_QWORD)v32) = 0;
  v35 = (_QWORD *)operator new();
  *v35 = &off_250ADF630;
  v35[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v64, (uint64_t)v35);
  v73 = xmmword_239F0F97A;
  v74[0] = xmmword_239F0F98A;
  *(uint64_t *)((char *)&v74[0].i64[1] + 6) = 0x373F3C3B203621;
  v40 = sub_239ABB30C((unsigned __int8 *)&v73, (int8x16_t)xmmword_239F0F97A, xmmword_239F0F98A, v36, v37, v38, v39);
  v41 = strlen((const char *)v40);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v62[1] = v42;
    v63 = v45 | 0x8000000000000000;
    v62[0] = v43;
    goto LABEL_32;
  }
  HIBYTE(v63) = v41;
  v43 = v62;
  if (v41)
LABEL_32:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250ADF630;
  v46[1] = v4 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v62, (uint64_t)v46);
  strcpy((char *)v72, "\acrufsnhi");
  v47 = sub_23950FF84(v72);
  v48 = strlen((const char *)v47);
  if (v48 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v49 = (void *)v48;
  if (v48 >= 0x17)
  {
    v51 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v48 | 7) != 0x17)
      v51 = v48 | 7;
    v52 = v51 + 1;
    v50 = operator new(v51 + 1);
    v60[1] = v49;
    v61 = v52 | 0x8000000000000000;
    v60[0] = v50;
    goto LABEL_40;
  }
  HIBYTE(v61) = v48;
  v50 = v60;
  if (v48)
LABEL_40:
    memmove(v50, v47, (size_t)v49);
  *((_BYTE *)v49 + (_QWORD)v50) = 0;
  v53 = (_QWORD *)operator new();
  *v53 = &off_250AE0670;
  v53[1] = v4 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v60, (uint64_t)v53);
  if (SHIBYTE(v61) < 0)
  {
    operator delete(v60[0]);
    if ((SHIBYTE(v63) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v65) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v63) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v62[0]);
  if ((SHIBYTE(v65) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v67) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v66[0]);
    if ((SHIBYTE(v69) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v64[0]);
  if (SHIBYTE(v67) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v69) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_23959479C((uint64_t)__p, a2);
  v54 = v71;
  if (v71)
  {
    do
    {
      v55 = v54[5];
      if (v55)
        (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
      v54 = (_QWORD *)*v54;
    }
    while (v54);
    v56 = (void **)v71;
    if (v71)
    {
      do
      {
        v59 = (void **)*v56;
        if (*((char *)v56 + 39) < 0)
          operator delete(v56[2]);
        operator delete(v56);
        v56 = v59;
      }
      while (v59);
    }
  }
  v57 = __p[0];
  __p[0] = 0;
  if (v57)
    operator delete(v57);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AC54B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,_QWORD *__p)
{
  _QWORD *v43;
  uint64_t v44;
  void **v45;
  void **v46;

  v43 = __p;
  if (__p)
  {
    do
    {
      v44 = v43[5];
      if (v44)
        (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
      v43 = (_QWORD *)*v43;
    }
    while (v43);
    v45 = (void **)__p;
    do
    {
      v46 = (void **)*v45;
      if (*((char *)v45 + 39) < 0)
        operator delete(v45[2]);
      operator delete(v45);
      v45 = v46;
    }
    while (v46);
  }
  if (!a40)
    _Unwind_Resume(exception_object);
  operator delete(a40);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AC5620(uint64_t a1, _QWORD *a2, char a3)
{
  double v5;
  double v6;
  int16x8_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  double v16;
  int16x8_t v17;
  const char *v18;
  const char *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  double v26;
  int16x8_t v27;
  const char *v28;
  const char *v29;
  size_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  double v36;
  int16x8_t v37;
  double v38;
  int16x8_t v39;
  unsigned __int8 *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int8x8_t *v47;
  size_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  void **v56;
  void *v57;
  void **v59;
  void *v60[2];
  unint64_t v61;
  void *v62[2];
  unint64_t v63;
  void *v64[2];
  unint64_t v65;
  void *v66[2];
  unint64_t v67;
  void *__dst[2];
  unint64_t v69;
  void *__p[2];
  void *v71;
  int8x8_t v72[2];
  __int128 v73;
  char v74[32];
  __int128 v75;
  int16x8_t v76[2];
  __int128 v77;
  int16x8_t v78[2];
  _OWORD v79[2];
  uint64_t v80;
  uint64_t v81;

  v81 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v79[0] = xmmword_239F0EB77;
  v79[1] = xmmword_239F0EB87;
  v80 = 0x7F777473687E69;
  sub_2396F02A0((unsigned __int8 *)v79, 1.38152047e306, xmmword_239F0EB87, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v69 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v69) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFE48;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v77 = xmmword_239F0EB9F;
  v78[0] = xmmword_239F0EBAF;
  *(uint64_t *)((char *)&v78[0].i64[1] + 7) = 0xA0201061D0B1CLL;
  sub_2396F0804((unsigned __int8 *)&v77, 2.64823913e-260, xmmword_239F0EBAF, v16, v17);
  v19 = v18;
  v20 = strlen(v18);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v66[1] = v21;
    v67 = v24 | 0x8000000000000000;
    v66[0] = v22;
    goto LABEL_16;
  }
  HIBYTE(v67) = v20;
  v22 = v66;
  if (v20)
LABEL_16:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250AFFE48;
  v25[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v66, (uint64_t)v25);
  v75 = xmmword_239F0EBC6;
  v76[0] = xmmword_239F0EBD6;
  *(uint64_t *)((char *)&v76[0].i64[1] + 7) = 0x181013140F190ELL;
  sub_2396F0804((unsigned __int8 *)&v75, 7.43417754e-207, xmmword_239F0EBD6, v26, v27);
  v29 = v28;
  v30 = strlen(v28);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v31 = (void *)v30;
  if (v30 >= 0x17)
  {
    v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v33 = v30 | 7;
    v34 = v33 + 1;
    v32 = operator new(v33 + 1);
    v64[1] = v31;
    v65 = v34 | 0x8000000000000000;
    v64[0] = v32;
    goto LABEL_24;
  }
  HIBYTE(v65) = v30;
  v32 = v64;
  if (v30)
LABEL_24:
    memmove(v32, v29, (size_t)v31);
  *((_BYTE *)v31 + (_QWORD)v32) = 0;
  v35 = (_QWORD *)operator new();
  *v35 = &off_250ADF480;
  v35[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v64, (uint64_t)v35);
  v73 = xmmword_239F0EBED;
  strcpy(v74, "^vhui^mnnrd^uisdrinme");
  v40 = sub_239ABB30C((unsigned __int8 *)&v73, (int8x16_t)xmmword_239F0EBED, *(int8x16_t *)"^vhui^mnnrd^uisdrinme", v36, v37, v38, v39);
  v41 = strlen((const char *)v40);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v62[1] = v42;
    v63 = v45 | 0x8000000000000000;
    v62[0] = v43;
    goto LABEL_32;
  }
  HIBYTE(v63) = v41;
  v43 = v62;
  if (v41)
LABEL_32:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250ADF480;
  v46[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v62, (uint64_t)v46);
  strcpy((char *)v72, "\acrufsnhi");
  v47 = sub_23950FF84(v72);
  v48 = strlen((const char *)v47);
  if (v48 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v49 = (void *)v48;
  if (v48 >= 0x17)
  {
    v51 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v48 | 7) != 0x17)
      v51 = v48 | 7;
    v52 = v51 + 1;
    v50 = operator new(v51 + 1);
    v60[1] = v49;
    v61 = v52 | 0x8000000000000000;
    v60[0] = v50;
    goto LABEL_40;
  }
  HIBYTE(v61) = v48;
  v50 = v60;
  if (v48)
LABEL_40:
    memmove(v50, v47, (size_t)v49);
  *((_BYTE *)v49 + (_QWORD)v50) = 0;
  v53 = (_QWORD *)operator new();
  *v53 = &off_250AE0580;
  v53[1] = a1 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v60, (uint64_t)v53);
  if (SHIBYTE(v61) < 0)
  {
    operator delete(v60[0]);
    if ((SHIBYTE(v63) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v65) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v63) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v62[0]);
  if ((SHIBYTE(v65) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v67) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v66[0]);
    if ((SHIBYTE(v69) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v64[0]);
  if (SHIBYTE(v67) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v69) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_2395902F0((uint64_t)__p, a2);
  v54 = v71;
  if (v71)
  {
    do
    {
      v55 = v54[5];
      if (v55)
        (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
      v54 = (_QWORD *)*v54;
    }
    while (v54);
    v56 = (void **)v71;
    if (v71)
    {
      do
      {
        v59 = (void **)*v56;
        if (*((char *)v56 + 39) < 0)
          operator delete(v56[2]);
        operator delete(v56);
        v56 = v59;
      }
      while (v59);
    }
  }
  v57 = __p[0];
  __p[0] = 0;
  if (v57)
    operator delete(v57);
  return a2;
}

void sub_239AC5BB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  sub_2395905C0((uint64_t)&a40);
  _Unwind_Resume(a1);
}

void sub_239AC5C9C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AC5CC0(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AC706C((uint64_t)&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AC5D0C(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t *v3;
  int v4;
  int v6;
  int v7;
  int i;
  _QWORD *exception;
  uint64_t v10;

  v3 = a2;
  v10 = *(_QWORD *)(a1 + 8);
  if (!a3)
    goto LABEL_4;
  v4 = std::istream::peek();
  if ((v4 & 0xFFFFFFFE) == 0xDE)
  {
    a2 = v3;
    a3 = 1;
LABEL_4:
    sub_239AC5E18(&v10, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  v6 = v4;
  std::istream::get();
  if (v6 == 221)
  {
    v7 = sub_2396162D4((uint64_t)v3, 221);
    if (*(_DWORD *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 32))
    {
      exception = __cxa_allocate_exception(8uLL);
      *exception = MEMORY[0x24BEDB8F0] + 16;
      __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
    }
    for (i = v7; i; --i)
      sub_239AC5E18(&v10, v3, 1);
  }
  else
  {
    sub_2396163F8(v3, v6);
  }
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AC5E18(uint64_t *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  int v23;
  uint64_t *v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  char i;
  unsigned int v37;
  int v38;
  int v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  int j;
  unsigned int v45;
  int v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56[2];
  uint64_t v57;
  uint64_t v58;
  void *__p;
  char v60;
  _BYTE v61[152];
  unint64_t v62;
  std::string v63;

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      _ZF = 1;
    else
      _ZF = v5 == 0;
    if (!_ZF)
    {
      v7 = *MEMORY[0x24BEDB7F0];
      v8 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v9 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v10 = v5 - 1;
      __asm { FMOV            V0.2D, #-1.0 }
      v50 = _Q0;
      v15 = MEMORY[0x24BEDB848] + 16;
      do
      {
        v16 = v10;
        memset(&v63, 0, sizeof(v63));
        v17 = std::istream::get();
        v18 = sub_2396162D4((uint64_t)a2, v17);
        if (v18)
        {
          std::string::resize(&v63, v18, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0)
        {
          *v63.__r_.__value_.__l.__data_ = 0;
          v63.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v63.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v63.__r_.__value_.__s + 23) = 0;
        }
        v62 = 0;
        sub_239593804((uint64_t)v56, (uint64_t)&v63, 24);
        MEMORY[0x23B83DD1C](v56, &v62);
        v52 = 0uLL;
        v53 = v50;
        v54 = v50;
        v55 = v50;
        sub_239AC6410((uint64_t)&v52, a2, 1);
        v19 = sub_239AC6CB0(*a1, v62, (uint64_t *)&v62);
        v21 = v54;
        v20 = v55;
        v22 = v53;
        *(_OWORD *)(v19 + 24) = v52;
        *(_OWORD *)(v19 + 40) = v22;
        *(_OWORD *)(v19 + 56) = v21;
        *(_OWORD *)(v19 + 72) = v20;
        v23 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        v56[0] = v7;
        *(uint64_t *)((char *)v56 + *(_QWORD *)(v7 - 24)) = v8;
        v57 = v9;
        v58 = v15;
        if (v60 < 0)
          operator delete(__p);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v61);
        if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v63.__r_.__value_.__l.__data_);
        if (v23)
          break;
        v10 = v16 - 1;
      }
      while (v16);
    }
  }
  else
  {
    v24 = a2 + 4;
    v25 = MEMORY[0x24BDAC740];
    while (1)
    {
      v26 = std::istream::peek();
      v27 = v26 <= 0x7F ? *(_DWORD *)(v25 + 4 * v26 + 60) & 0x4000 : __maskrune(v26, 0x4000uLL);
      v28 = *(_QWORD *)(*a2 - 24);
      if (!v27)
        break;
      if (!*(_DWORD *)((char *)v24 + v28))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v28 + 32) & 2) == 0)
    {
      v62 = 0;
      memset(&v63, 0, sizeof(v63));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v29 = std::istream::peek();
          v30 = v29 <= 0x7F ? *(_DWORD *)(v25 + 4 * v29 + 60) & 0x4000 : __maskrune(v29, 0x4000uLL);
          v31 = *(_QWORD *)(*a2 - 24);
          if (!v30)
            break;
          if (!*(_DWORD *)((char *)v24 + v31))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v31 + 32) & 2) == 0)
        {
          v32 = std::istream::peek() == 125;
          v33 = *MEMORY[0x24BEDB7F0];
          v48 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          v49 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          __asm { FMOV            V0.2D, #-1.0 }
          v47 = _Q0;
          v35 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v24 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v32)
          {
            if (!sub_239595A48((uint64_t)&v63, a2))
              goto LABEL_72;
            sub_2395EDF80((uint64_t)&v62, (uint64_t)&v63);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v24 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v24 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_72;
LABEL_45:
            std::istream::get();
            while (1)
            {
              v37 = std::istream::peek();
              v38 = v37 <= 0x7F ? *(_DWORD *)(v25 + 4 * v37 + 60) & 0x4000 : __maskrune(v37, 0x4000uLL);
              v39 = *(_DWORD *)((char *)v24 + *(_QWORD *)(*a2 - 24));
              if (!v38)
                break;
              if (!v39)
                goto LABEL_45;
            }
            if ((v39 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v56);
              if (sub_239596128(a2))
              {
                v52 = 0uLL;
                v53 = v47;
                v54 = v47;
                v55 = v47;
                sub_239AC6410((uint64_t)&v52, v56, 0);
                v40 = sub_239AC6CB0(*a1, v62, (uint64_t *)&v62);
                v42 = v54;
                v41 = v55;
                v43 = v53;
                *(_OWORD *)(v40 + 24) = v52;
                *(_OWORD *)(v40 + 40) = v43;
                *(_OWORD *)(v40 + 56) = v42;
                *(_OWORD *)(v40 + 72) = v41;
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v45 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_64;
                  if (v45 == 2097152000)
                    break;
                  if (v45 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v25 + 4 * (char)j + 60) & 0x4000) == 0)
                      goto LABEL_63;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    goto LABEL_63;
                  }
                  if ((*((_BYTE *)v24 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                  {
LABEL_63:
                    if (v45 != 738197504)
                      goto LABEL_65;
LABEL_64:
                    std::istream::get();
                    v32 = 0;
                    goto LABEL_67;
                  }
                  std::istream::get();
                }
                v32 = 1;
LABEL_67:
                v46 = 0;
              }
              else
              {
LABEL_65:
                v32 = 0;
                v46 = 1;
              }
              v56[0] = v33;
              *(uint64_t *)((char *)v56 + *(_QWORD *)(v33 - 24)) = v49;
              v57 = v48;
              v58 = v35;
              if (v60 < 0)
                operator delete(__p);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v61);
              if (!v46)
                continue;
            }
            goto LABEL_72;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_72:
      if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v63.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239AC63B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  if (*(char *)(v27 - 89) < 0)
    operator delete(*(void **)(v27 - 112));
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239AC6410(uint64_t a1, uint64_t *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int8x16_t v19;
  double v20;
  int32x4_t v21;
  const char *v22;
  const char *v23;
  size_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int8x16_t v30;
  double v31;
  int32x4_t v32;
  const char *v33;
  const char *v34;
  size_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int8x16_t v41;
  double v42;
  int32x4_t v43;
  const char *v44;
  const char *v45;
  size_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int32x4_t v52;
  double v53;
  int32x4_t v54;
  unsigned __int8 *v55;
  size_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  int8x16_t v62;
  double v63;
  int32x4_t v64;
  const char *v65;
  const char *v66;
  size_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  void **v75;
  void *v76;
  void **v78;
  void *v79[2];
  unint64_t v80;
  void *v81[2];
  unint64_t v82;
  void *v83[2];
  unint64_t v84;
  void *v85[2];
  unint64_t v86;
  void *v87[2];
  unint64_t v88;
  void *v89[2];
  unint64_t v90;
  void *__dst[2];
  unint64_t v92;
  void *__p[2];
  void *v94;
  _OWORD v95[2];
  unsigned __int8 v96[32];
  _OWORD v97[2];
  char v98[32];
  char v99[32];
  __int128 v100;
  __int16 v101;
  uint64_t v102;
  int v103;
  uint64_t v104;

  v104 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v102 = 0x2132341F2D352E40;
  v103 = 3353379;
  v5 = sub_23958E4C8((uint64_t)&v102);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v92 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v92) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFF08;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v100 = xmmword_239F0F874;
  v101 = 83;
  v12 = sub_239A91B18((int8x16_t *)&v100);
  v13 = strlen(v12->i8);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v89[1] = v14;
    v90 = v17 | 0x8000000000000000;
    v89[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v90) = v13;
  v15 = v89;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250AFFF08;
  v18[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v89, (uint64_t)v18);
  strcpy(v99, "'JBFIxUBWUHMxBUUHU");
  sub_23958E450((uint64_t)v99, *(int32x4_t *)"'JBFIxUBWUHMxBUUHU", v19, v20, v21);
  v23 = v22;
  v24 = strlen(v22);
  if (v24 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v25 = (void *)v24;
  if (v24 >= 0x17)
  {
    v27 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v24 | 7) != 0x17)
      v27 = v24 | 7;
    v28 = v27 + 1;
    v26 = operator new(v27 + 1);
    v87[1] = v25;
    v88 = v28 | 0x8000000000000000;
    v87[0] = v26;
    goto LABEL_24;
  }
  HIBYTE(v88) = v24;
  v26 = v87;
  if (v24)
LABEL_24:
    memmove(v26, v23, (size_t)v25);
  *((_BYTE *)v25 + (_QWORD)v26) = 0;
  v29 = (_QWORD *)operator new();
  *v29 = &off_250ADF360;
  v29[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v87, (uint64_t)v29);
  strcpy(v98, "+FNOBJEtYN[YDAtNYYDY");
  sub_2396EFB50((uint64_t)v98, *(int32x4_t *)"+FNOBJEtYN[YDAtNYYDY", v30, v31, v32);
  v34 = v33;
  v35 = strlen(v33);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v36 = (void *)v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = operator new(v38 + 1);
    v85[1] = v36;
    v86 = v39 | 0x8000000000000000;
    v85[0] = v37;
    goto LABEL_32;
  }
  HIBYTE(v86) = v35;
  v37 = v85;
  if (v35)
LABEL_32:
    memmove(v37, v34, (size_t)v36);
  *((_BYTE *)v36 + (_QWORD)v37) = 0;
  v40 = (_QWORD *)operator new();
  *v40 = &off_250ADF360;
  v40[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v85, (uint64_t)v40);
  v97[0] = xmmword_239F0F8AE;
  *(_QWORD *)((char *)v97 + 13) = 0x100D1010073D08;
  sub_2396EFB50((uint64_t)v97, (int32x4_t)xmmword_239F0F8AE, v41, v42, v43);
  v45 = v44;
  v46 = strlen(v44);
  if (v46 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v47 = (void *)v46;
  if (v46 >= 0x17)
  {
    v49 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v46 | 7) != 0x17)
      v49 = v46 | 7;
    v50 = v49 + 1;
    v48 = operator new(v49 + 1);
    v83[1] = v47;
    v84 = v50 | 0x8000000000000000;
    v83[0] = v48;
    goto LABEL_40;
  }
  HIBYTE(v84) = v46;
  v48 = v83;
  if (v46)
LABEL_40:
    memmove(v48, v45, (size_t)v47);
  *((_BYTE *)v47 + (_QWORD)v48) = 0;
  v51 = (_QWORD *)operator new();
  *v51 = &off_250AFFF38;
  v51[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v83, (uint64_t)v51);
  *(_OWORD *)v96 = xmmword_239F0F8C3;
  *(_QWORD *)&v96[14] = 0x7C617C7C6B517ALL;
  v55 = sub_239A90BEC(v96, (int8x16_t)xmmword_239F0F8C3, v52, v53, v54);
  v56 = strlen((const char *)v55);
  if (v56 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v57 = (void *)v56;
  if (v56 >= 0x17)
  {
    v59 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v56 | 7) != 0x17)
      v59 = v56 | 7;
    v60 = v59 + 1;
    v58 = operator new(v59 + 1);
    v81[1] = v57;
    v82 = v60 | 0x8000000000000000;
    v81[0] = v58;
    goto LABEL_48;
  }
  HIBYTE(v82) = v56;
  v58 = v81;
  if (v56)
LABEL_48:
    memmove(v58, v55, (size_t)v57);
  *((_BYTE *)v57 + (_QWORD)v58) = 0;
  v61 = (_QWORD *)operator new();
  *v61 = &off_250ADF360;
  v61[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v81, (uint64_t)v61);
  v95[0] = xmmword_239F0F8D9;
  *(_OWORD *)((char *)v95 + 9) = *(__int128 *)((char *)&xmmword_239F0F8D9 + 9);
  sub_2396EFC88((uint64_t)v95, *(int32x4_t *)((char *)&xmmword_239F0F8D9 + 9), v62, v63, v64);
  v66 = v65;
  v67 = strlen(v65);
  if (v67 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v68 = (void *)v67;
  if (v67 >= 0x17)
  {
    v70 = (v67 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v67 | 7) != 0x17)
      v70 = v67 | 7;
    v71 = v70 + 1;
    v69 = operator new(v70 + 1);
    v79[1] = v68;
    v80 = v71 | 0x8000000000000000;
    v79[0] = v69;
    goto LABEL_56;
  }
  HIBYTE(v80) = v67;
  v69 = v79;
  if (v67)
LABEL_56:
    memmove(v69, v66, (size_t)v68);
  *((_BYTE *)v68 + (_QWORD)v69) = 0;
  v72 = (_QWORD *)operator new();
  *v72 = &off_250ADF360;
  v72[1] = a1 + 56;
  sub_23961580C((uint64_t)__p, (uint64_t)v79, (uint64_t)v72);
  if (SHIBYTE(v80) < 0)
  {
    operator delete(v79[0]);
    if ((SHIBYTE(v82) & 0x80000000) == 0)
    {
LABEL_59:
      if ((SHIBYTE(v84) & 0x80000000) == 0)
        goto LABEL_60;
      goto LABEL_78;
    }
  }
  else if ((SHIBYTE(v82) & 0x80000000) == 0)
  {
    goto LABEL_59;
  }
  operator delete(v81[0]);
  if ((SHIBYTE(v84) & 0x80000000) == 0)
  {
LABEL_60:
    if ((SHIBYTE(v86) & 0x80000000) == 0)
      goto LABEL_61;
    goto LABEL_79;
  }
LABEL_78:
  operator delete(v83[0]);
  if ((SHIBYTE(v86) & 0x80000000) == 0)
  {
LABEL_61:
    if ((SHIBYTE(v88) & 0x80000000) == 0)
      goto LABEL_62;
    goto LABEL_80;
  }
LABEL_79:
  operator delete(v85[0]);
  if ((SHIBYTE(v88) & 0x80000000) == 0)
  {
LABEL_62:
    if ((SHIBYTE(v90) & 0x80000000) == 0)
      goto LABEL_63;
LABEL_81:
    operator delete(v89[0]);
    if ((SHIBYTE(v92) & 0x80000000) == 0)
      goto LABEL_64;
    goto LABEL_82;
  }
LABEL_80:
  operator delete(v87[0]);
  if (SHIBYTE(v90) < 0)
    goto LABEL_81;
LABEL_63:
  if ((SHIBYTE(v92) & 0x80000000) == 0)
    goto LABEL_64;
LABEL_82:
  operator delete(__dst[0]);
LABEL_64:
  sub_23959479C((uint64_t)__p, a2);
  v73 = v94;
  if (v94)
  {
    do
    {
      v74 = v73[5];
      if (v74)
        (*(void (**)(uint64_t))(*(_QWORD *)v74 + 8))(v74);
      v73 = (_QWORD *)*v73;
    }
    while (v73);
    v75 = (void **)v94;
    if (v94)
    {
      do
      {
        v78 = (void **)*v75;
        if (*((char *)v75 + 39) < 0)
          operator delete(v75[2]);
        operator delete(v75);
        v75 = v78;
      }
      while (v78);
    }
  }
  v76 = __p[0];
  __p[0] = 0;
  if (v76)
    operator delete(v76);
  return a2;
}

void sub_239AC6B70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,char a52)
{
  sub_2395905C0((uint64_t)&a52);
  _Unwind_Resume(a1);
}

char *sub_239AC6CB0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  size_t prime;
  unint64_t v25;
  uint8x8_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;

  v5 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = (char *)*v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = *((_QWORD *)v10 + 1);
            if (v12 == a2)
            {
              if (*((_QWORD *)v10 + 2) == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = *(char **)v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = *((_QWORD *)v10 + 1);
          if (v11 == a2)
          {
            if (*((_QWORD *)v10 + 2) == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = *(char **)v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v10 = (char *)operator new(0x58uLL);
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = v5;
  v13 = *a3;
  *((_QWORD *)v10 + 3) = 0;
  *((_QWORD *)v10 + 4) = 0;
  *((_QWORD *)v10 + 2) = v13;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(v10 + 40) = _Q0;
  *(_OWORD *)(v10 + 56) = _Q0;
  *(_OWORD *)(v10 + 72) = _Q0;
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (v7 && (float)(v20 * (float)v7) >= v19)
  {
    v5 = v3;
  }
  else
  {
    v21 = 1;
    if (v7 >= 3)
      v21 = (v7 & (v7 - 1)) != 0;
    v22 = v21 | (2 * v7);
    v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23)
      prime = v23;
    else
      prime = v22;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_35;
    if (prime < v7)
    {
      v25 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v26 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
      {
        v25 = std::__next_prime(v25);
      }
      else
      {
        v27 = 1 << -(char)__clz(v25 - 1);
        if (v25 >= 2)
          v25 = v27;
      }
      if (prime <= v25)
        prime = v25;
      if (prime < v7)
LABEL_35:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v5)
        v5 %= v7;
    }
    else
    {
      v5 &= v7 - 1;
    }
  }
  v28 = *(_QWORD *)a1;
  v29 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v29)
  {
    *(_QWORD *)v10 = *v29;
LABEL_58:
    *v29 = v10;
    goto LABEL_59;
  }
  *(_QWORD *)v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(v28 + 8 * v5) = a1 + 16;
  if (*(_QWORD *)v10)
  {
    v30 = *(_QWORD *)(*(_QWORD *)v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v30 >= v7)
        v30 %= v7;
    }
    else
    {
      v30 &= v7 - 1;
    }
    v29 = (_QWORD *)(*(_QWORD *)a1 + 8 * v30);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239AC6F88(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239AC6FA0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AC6FC4(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = v4 + 16;
  if (a3)
    sub_2395DA64C(v4, v5, (uint64_t)a2, 2uLL);
  else
    sub_2395A34D0(v4, v5, a2);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AC701C(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5[2];

  v5[0] = *(_QWORD *)(a1 + 8);
  v5[1] = 0;
  sub_2395DD33C(v5, a2, a3);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

_QWORD *sub_239AC706C(uint64_t a1, _QWORD *a2, int a3)
{
  unint64_t v5;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    if (*(_QWORD *)(*(_QWORD *)a1 + 24))
    {
      v7 = 0;
      v8 = *(_QWORD **)(*(_QWORD *)a1 + 16);
      do
      {
        if (v8)
        {
          v11 = 0;
          v9 = v8;
          do
          {
            v9 = (_QWORD *)*v9;
            v10 = v11 + 1;
          }
          while (v11++ <= 0x7FFFFFFD && v9 != 0);
        }
        else
        {
          v9 = 0;
          v10 = 0;
        }
        sub_239AC71C8(v8, v9, v10, a2, 1);
        v7 += 0x7FFFFFFFLL;
        v8 = v9;
      }
      while (v7 < *(_QWORD *)(*(_QWORD *)a1 + 24));
    }
  }
  else
  {
    sub_239AC71C8(*(_QWORD **)(*(_QWORD *)a1 + 16), 0, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239AC71C8(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4, int a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__p;
  int v20;
  unsigned __int8 v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  _DWORD v27[42];

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v27[38] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v10 = *MEMORY[0x24BEDB7F0];
        v11 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v13 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v22);
          std::ostream::operator<<();
          std::stringbuf::str();
          std::ostream::put();
          v14 = v21;
          if ((v21 & 0x80u) != 0)
            v14 = v20;
          v27[39] = v14;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          sub_239AC7574((uint64_t)(a1 + 3), a4, 1);
          if ((char)v21 < 0)
            operator delete(__p);
          v22[0] = v10;
          *(_QWORD *)((char *)v22 + *(_QWORD *)(v10 - 24)) = v11;
          v23 = v12;
          v24 = v13;
          if (v26 < 0)
            operator delete(v25);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v27);
          a1 = (_QWORD *)*a1;
        }
        while (a1 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v15 = *MEMORY[0x24BEDB7F0];
      v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v16 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v18 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v22);
        std::ostream::operator<<();
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        sub_239AC7574((uint64_t)(a1 + 3), a4, 0);
        a1 = (_QWORD *)*a1;
        if (a1 != a2)
          std::ostream::put();
        if ((char)v21 < 0)
          operator delete(__p);
        v22[0] = v15;
        *(_QWORD *)((char *)v22 + *(_QWORD *)(v15 - 24)) = v17;
        v23 = v16;
        v24 = v18;
        if (v26 < 0)
          operator delete(v25);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v27);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239AC752C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_239498ABC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AC7574(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int8x16_t v19;
  double v20;
  int32x4_t v21;
  const char *v22;
  const char *v23;
  size_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int8x16_t v30;
  double v31;
  int32x4_t v32;
  const char *v33;
  const char *v34;
  size_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int8x16_t v41;
  double v42;
  int32x4_t v43;
  const char *v44;
  const char *v45;
  size_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int32x4_t v52;
  double v53;
  int32x4_t v54;
  unsigned __int8 *v55;
  size_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  int8x16_t v62;
  double v63;
  int32x4_t v64;
  const char *v65;
  const char *v66;
  size_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  void **v75;
  void *v76;
  void **v78;
  void *v79[2];
  unint64_t v80;
  void *v81[2];
  unint64_t v82;
  void *v83[2];
  unint64_t v84;
  void *v85[2];
  unint64_t v86;
  void *v87[2];
  unint64_t v88;
  void *v89[2];
  unint64_t v90;
  void *__dst[2];
  unint64_t v92;
  void *__p[2];
  void *v94;
  _OWORD v95[2];
  unsigned __int8 v96[32];
  char v97[32];
  char v98[32];
  _OWORD v99[2];
  _BYTE v100[24];
  uint64_t v101;
  int v102;
  uint64_t v103;

  v103 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v101 = 0x7D6E68437169721CLL;
  v102 = 7305087;
  v5 = sub_23958E4C8((uint64_t)&v101);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v92 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v92) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFE48;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  strcpy(v100, "+E^Ft]JGBOt_YJH@X");
  v12 = sub_239A91B18((int8x16_t *)v100);
  v13 = strlen(v12->i8);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v89[1] = v14;
    v90 = v17 | 0x8000000000000000;
    v89[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v90) = v13;
  v15 = v89;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250AFFE48;
  v18[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v89, (uint64_t)v18);
  v99[0] = xmmword_239F0EAF9;
  *(_DWORD *)((char *)v99 + 15) = 204291;
  sub_23958E450((uint64_t)v99, (int32x4_t)xmmword_239F0EAF9, v19, v20, v21);
  v23 = v22;
  v24 = strlen(v22);
  if (v24 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v25 = (void *)v24;
  if (v24 >= 0x17)
  {
    v27 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v24 | 7) != 0x17)
      v27 = v24 | 7;
    v28 = v27 + 1;
    v26 = operator new(v27 + 1);
    v87[1] = v25;
    v88 = v28 | 0x8000000000000000;
    v87[0] = v26;
    goto LABEL_24;
  }
  HIBYTE(v88) = v24;
  v26 = v87;
  if (v24)
LABEL_24:
    memmove(v26, v23, (size_t)v25);
  *((_BYTE *)v25 + (_QWORD)v26) = 0;
  v29 = (_QWORD *)operator new();
  *v29 = &off_250ADF570;
  v29[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v87, (uint64_t)v29);
  v34 = v33;
  v35 = strlen(v33);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v36 = (void *)v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = operator new(v38 + 1);
    v85[1] = v36;
    v86 = v39 | 0x8000000000000000;
    v85[0] = v37;
    goto LABEL_32;
  }
  HIBYTE(v86) = v35;
  v37 = v85;
  if (v35)
LABEL_32:
    memmove(v37, v34, (size_t)v36);
  *((_BYTE *)v36 + (_QWORD)v37) = 0;
  v40 = (_QWORD *)operator new();
  *v40 = &off_250ADF570;
  v40[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v85, (uint64_t)v40);
  strcpy(v97, "5FAQQPCjGPEGZ_jPGGZG");
  sub_2396EFB50((uint64_t)v97, *(int32x4_t *)"5FAQQPCjGPEGZ_jPGGZG", v41, v42, v43);
  v45 = v44;
  v46 = strlen(v44);
  if (v46 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v47 = (void *)v46;
  if (v46 >= 0x17)
  {
    v49 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v46 | 7) != 0x17)
      v49 = v46 | 7;
    v50 = v49 + 1;
    v48 = operator new(v49 + 1);
    v83[1] = v47;
    v84 = v50 | 0x8000000000000000;
    v83[0] = v48;
    goto LABEL_40;
  }
  HIBYTE(v84) = v46;
  v48 = v83;
  if (v46)
LABEL_40:
    memmove(v48, v45, (size_t)v47);
  *((_BYTE *)v47 + (_QWORD)v48) = 0;
  v51 = (_QWORD *)operator new();
  *v51 = &off_250AFFE78;
  v51[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v83, (uint64_t)v51);
  *(_OWORD *)v96 = xmmword_239F0EB36;
  *(_QWORD *)&v96[14] = 0x190419190E341FLL;
  v55 = sub_239A90BEC(v96, (int8x16_t)xmmword_239F0EB36, v52, v53, v54);
  v56 = strlen((const char *)v55);
  if (v56 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v57 = (void *)v56;
  if (v56 >= 0x17)
  {
    v59 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v56 | 7) != 0x17)
      v59 = v56 | 7;
    v60 = v59 + 1;
    v58 = operator new(v59 + 1);
    v81[1] = v57;
    v82 = v60 | 0x8000000000000000;
    v81[0] = v58;
    goto LABEL_48;
  }
  HIBYTE(v82) = v56;
  v58 = v81;
  if (v56)
LABEL_48:
    memmove(v58, v55, (size_t)v57);
  *((_BYTE *)v57 + (_QWORD)v58) = 0;
  v61 = (_QWORD *)operator new();
  *v61 = &off_250ADF570;
  v61[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v81, (uint64_t)v61);
  v95[0] = xmmword_239F0EB4C;
  *(_OWORD *)((char *)v95 + 9) = *(__int128 *)((char *)&xmmword_239F0EB4C + 9);
  sub_2396EFC88((uint64_t)v95, *(int32x4_t *)((char *)&xmmword_239F0EB4C + 9), v62, v63, v64);
  v66 = v65;
  v67 = strlen(v65);
  if (v67 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v68 = (void *)v67;
  if (v67 >= 0x17)
  {
    v70 = (v67 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v67 | 7) != 0x17)
      v70 = v67 | 7;
    v71 = v70 + 1;
    v69 = operator new(v70 + 1);
    v79[1] = v68;
    v80 = v71 | 0x8000000000000000;
    v79[0] = v69;
    goto LABEL_56;
  }
  HIBYTE(v80) = v67;
  v69 = v79;
  if (v67)
LABEL_56:
    memmove(v69, v66, (size_t)v68);
  *((_BYTE *)v68 + (_QWORD)v69) = 0;
  v72 = (_QWORD *)operator new();
  *v72 = &off_250ADF570;
  v72[1] = a1 + 56;
  sub_23961580C((uint64_t)__p, (uint64_t)v79, (uint64_t)v72);
  if (SHIBYTE(v80) < 0)
  {
    operator delete(v79[0]);
    if ((SHIBYTE(v82) & 0x80000000) == 0)
    {
LABEL_59:
      if ((SHIBYTE(v84) & 0x80000000) == 0)
        goto LABEL_60;
      goto LABEL_78;
    }
  }
  else if ((SHIBYTE(v82) & 0x80000000) == 0)
  {
    goto LABEL_59;
  }
  operator delete(v81[0]);
  if ((SHIBYTE(v84) & 0x80000000) == 0)
  {
LABEL_60:
    if ((SHIBYTE(v86) & 0x80000000) == 0)
      goto LABEL_61;
    goto LABEL_79;
  }
LABEL_78:
  operator delete(v83[0]);
  if ((SHIBYTE(v86) & 0x80000000) == 0)
  {
LABEL_61:
    if ((SHIBYTE(v88) & 0x80000000) == 0)
      goto LABEL_62;
    goto LABEL_80;
  }
LABEL_79:
  operator delete(v85[0]);
  if ((SHIBYTE(v88) & 0x80000000) == 0)
  {
LABEL_62:
    if ((SHIBYTE(v90) & 0x80000000) == 0)
      goto LABEL_63;
LABEL_81:
    operator delete(v89[0]);
    if ((SHIBYTE(v92) & 0x80000000) == 0)
      goto LABEL_64;
    goto LABEL_82;
  }
LABEL_80:
  operator delete(v87[0]);
  if (SHIBYTE(v90) < 0)
    goto LABEL_81;
LABEL_63:
  if ((SHIBYTE(v92) & 0x80000000) == 0)
    goto LABEL_64;
LABEL_82:
  operator delete(__dst[0]);
LABEL_64:
  sub_2395902F0((uint64_t)__p, a2);
  v73 = v94;
  if (v94)
  {
    do
    {
      v74 = v73[5];
      if (v74)
        (*(void (**)(uint64_t))(*(_QWORD *)v74 + 8))(v74);
      v73 = (_QWORD *)*v73;
    }
    while (v73);
    v75 = (void **)v94;
    if (v94)
    {
      do
      {
        v78 = (void **)*v75;
        if (*((char *)v75 + 39) < 0)
          operator delete(v75[2]);
        operator delete(v75);
        v75 = v78;
      }
      while (v78);
    }
  }
  v76 = __p[0];
  __p[0] = 0;
  if (v76)
    operator delete(v76);
  return a2;
}

void sub_239AC7CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,char a52)
{
  sub_2395905C0((uint64_t)&a52);
  _Unwind_Resume(a1);
}

void sub_239AC7E18(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AC7E3C(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = v4 + 16;
  if (a3)
    sub_2395DA64C(v4, v5, (uint64_t)a2, 2uLL);
  else
    sub_2395A34D0(v4, v5, a2);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AC7E94()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AC7ECC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AC7EF0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ACC600(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AC7F2C(uint64_t a1, uint64_t *a2, char a3)
{
  sub_239AC7F6C(*(_QWORD *)(a1 + 8), a2, a3);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

uint64_t *sub_239AC7F6C(uint64_t a1, uint64_t *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int8x16_t *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int8x16_t v26;
  double v27;
  int32x4_t v28;
  const char *v29;
  const char *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int8x16_t *v37;
  size_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  int8x16_t v44;
  double v45;
  int32x4_t v46;
  const char *v47;
  const char *v48;
  size_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  const char *v55;
  size_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  int16x8_t v62;
  const char *v63;
  const char *v64;
  size_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  int8x16_t v71;
  double v72;
  int32x4_t v73;
  const char *v74;
  const char *v75;
  size_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  int8x16_t v82;
  double v83;
  int32x4_t v84;
  const char *v85;
  const char *v86;
  size_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  int8x16_t v93;
  double v94;
  int32x4_t v95;
  const char *v96;
  const char *v97;
  size_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  int8x16_t v104;
  double v105;
  int32x4_t v106;
  const char *v107;
  const char *v108;
  size_t v109;
  void *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  int8x16_t v115;
  double v116;
  int32x4_t v117;
  const char *v118;
  const char *v119;
  size_t v120;
  void *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  int8x16_t v126;
  double v127;
  int32x4_t v128;
  const char *v129;
  const char *v130;
  size_t v131;
  void *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  int8x16_t v137;
  double v138;
  int32x4_t v139;
  const char *v140;
  const char *v141;
  size_t v142;
  void *v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  int8x16_t v148;
  double v149;
  int32x4_t v150;
  const char *v151;
  const char *v152;
  size_t v153;
  void *v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  const char *v159;
  const char *v160;
  size_t v161;
  void *v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  int8x16_t v167;
  double v168;
  int32x4_t v169;
  const char *v170;
  const char *v171;
  size_t v172;
  void *v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  int8x16_t v178;
  double v179;
  int32x4_t v180;
  const char *v181;
  const char *v182;
  size_t v183;
  void *v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  double v189;
  double v190;
  int16x8_t v191;
  const char *v192;
  const char *v193;
  size_t v194;
  void *v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  double v200;
  int16x8_t v201;
  const char *v202;
  const char *v203;
  size_t v204;
  void *v205;
  void *v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  int8x16_t v210;
  double v211;
  int32x4_t v212;
  const char *v213;
  const char *v214;
  size_t v215;
  void *v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  int8x16_t v221;
  double v222;
  int32x4_t v223;
  const char *v224;
  const char *v225;
  size_t v226;
  void *v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  double v232;
  int32x4_t v233;
  const char *v234;
  const char *v235;
  size_t v236;
  void *v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD *v241;
  int8x16_t v242;
  double v243;
  int32x4_t v244;
  const char *v245;
  const char *v246;
  size_t v247;
  void *v248;
  void *v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  int8x16_t v253;
  double v254;
  int32x4_t v255;
  const char *v256;
  const char *v257;
  size_t v258;
  void *v259;
  void *v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  int8x16_t v264;
  double v265;
  int32x4_t v266;
  const char *v267;
  const char *v268;
  size_t v269;
  void *v270;
  void *v271;
  uint64_t v272;
  uint64_t v273;
  _QWORD *v274;
  int8x16_t v275;
  double v276;
  int32x4_t v277;
  const char *v278;
  const char *v279;
  size_t v280;
  void *v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  _QWORD *v285;
  int8x16_t v286;
  double v287;
  int32x4_t v288;
  const char *v289;
  const char *v290;
  size_t v291;
  void *v292;
  void *v293;
  uint64_t v294;
  uint64_t v295;
  _QWORD *v296;
  int8x16_t v297;
  double v298;
  int32x4_t v299;
  const char *v300;
  const char *v301;
  size_t v302;
  void *v303;
  void *v304;
  uint64_t v305;
  uint64_t v306;
  _QWORD *v307;
  int8x16_t v308;
  double v309;
  int32x4_t v310;
  const char *v311;
  const char *v312;
  size_t v313;
  void *v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  _QWORD *v318;
  int8x16_t v319;
  double v320;
  int32x4_t v321;
  const char *v322;
  const char *v323;
  size_t v324;
  void *v325;
  void *v326;
  uint64_t v327;
  uint64_t v328;
  _QWORD *v329;
  double v330;
  int16x8_t v331;
  int16x8_t v332;
  const char *v333;
  const char *v334;
  size_t v335;
  void *v336;
  void *v337;
  uint64_t v338;
  uint64_t v339;
  _QWORD *v340;
  int16x8_t v341;
  int16x8_t v342;
  const char *v343;
  const char *v344;
  size_t v345;
  void *v346;
  void *v347;
  uint64_t v348;
  uint64_t v349;
  _QWORD *v350;
  const char *v351;
  const char *v352;
  size_t v353;
  void *v354;
  void *v355;
  uint64_t v356;
  uint64_t v357;
  _QWORD *v358;
  int8x16_t v359;
  double v360;
  int32x4_t v361;
  const char *v362;
  const char *v363;
  size_t v364;
  void *v365;
  void *v366;
  uint64_t v367;
  uint64_t v368;
  _QWORD *v369;
  double v370;
  int32x4_t v371;
  const char *v372;
  const char *v373;
  size_t v374;
  void *v375;
  void *v376;
  uint64_t v377;
  uint64_t v378;
  _QWORD *v379;
  int8x16_t v380;
  double v381;
  int32x4_t v382;
  const char *v383;
  const char *v384;
  size_t v385;
  void *v386;
  void *v387;
  uint64_t v388;
  uint64_t v389;
  _QWORD *v390;
  int8x16_t v391;
  double v392;
  int32x4_t v393;
  const char *v394;
  const char *v395;
  size_t v396;
  void *v397;
  void *v398;
  uint64_t v399;
  uint64_t v400;
  _QWORD *v401;
  int8x16_t v402;
  double v403;
  int32x4_t v404;
  const char *v405;
  const char *v406;
  size_t v407;
  void *v408;
  void *v409;
  uint64_t v410;
  uint64_t v411;
  _QWORD *v412;
  int8x16_t v413;
  double v414;
  int32x4_t v415;
  const char *v416;
  const char *v417;
  size_t v418;
  void *v419;
  void *v420;
  uint64_t v421;
  uint64_t v422;
  _QWORD *v423;
  int8x16_t v424;
  double v425;
  int32x4_t v426;
  const char *v427;
  const char *v428;
  size_t v429;
  void *v430;
  void *v431;
  uint64_t v432;
  uint64_t v433;
  _QWORD *v434;
  int8x16_t *v435;
  size_t v436;
  void *v437;
  void *v438;
  uint64_t v439;
  uint64_t v440;
  _QWORD *v441;
  int8x16_t v442;
  double v443;
  int32x4_t v444;
  const char *v445;
  const char *v446;
  size_t v447;
  void *v448;
  void *v449;
  uint64_t v450;
  uint64_t v451;
  _QWORD *v452;
  const char *v453;
  const char *v454;
  size_t v455;
  void *v456;
  void *v457;
  uint64_t v458;
  uint64_t v459;
  _QWORD *v460;
  int8x16_t v461;
  double v462;
  int32x4_t v463;
  const char *v464;
  const char *v465;
  size_t v466;
  void *v467;
  void *v468;
  uint64_t v469;
  uint64_t v470;
  _QWORD *v471;
  double v472;
  double v473;
  int16x8_t v474;
  const char *v475;
  const char *v476;
  size_t v477;
  void *v478;
  void *v479;
  uint64_t v480;
  uint64_t v481;
  _QWORD *v482;
  int8x16_t v483;
  double v484;
  int32x4_t v485;
  const char *v486;
  const char *v487;
  size_t v488;
  void *v489;
  void *v490;
  uint64_t v491;
  uint64_t v492;
  _QWORD *v493;
  int8x16_t v494;
  double v495;
  int32x4_t v496;
  const char *v497;
  const char *v498;
  size_t v499;
  void *v500;
  void *v501;
  uint64_t v502;
  uint64_t v503;
  _QWORD *v504;
  double v505;
  int16x8_t v506;
  const char *v507;
  const char *v508;
  size_t v509;
  void *v510;
  void *v511;
  uint64_t v512;
  uint64_t v513;
  _QWORD *v514;
  double v515;
  int16x8_t v516;
  const char *v517;
  const char *v518;
  size_t v519;
  void *v520;
  void *v521;
  uint64_t v522;
  uint64_t v523;
  _QWORD *v524;
  uint64_t v525;
  _QWORD *v526;
  uint64_t v527;
  uint64_t v528;
  _QWORD *v529;
  uint64_t v530;
  _QWORD *v531;
  uint64_t v532;
  void **v533;
  void *v534;
  void **v536;
  void *__p[2];
  unint64_t v538;
  void *v539[2];
  unint64_t v540;
  void *v541[2];
  unint64_t v542;
  void *v543[2];
  unint64_t v544;
  void *v545[2];
  unint64_t v546;
  void *v547[2];
  unint64_t v548;
  void *v549[2];
  unint64_t v550;
  void *v551[2];
  unint64_t v552;
  void *v553[2];
  unint64_t v554;
  void *v555[2];
  unint64_t v556;
  void *v557[2];
  unint64_t v558;
  void *v559[2];
  unint64_t v560;
  void *v561[2];
  unint64_t v562;
  void *v563[2];
  unint64_t v564;
  void *v565[2];
  unint64_t v566;
  void *v567[2];
  unint64_t v568;
  void *v569[2];
  unint64_t v570;
  void *v571[2];
  unint64_t v572;
  void *v573[2];
  unint64_t v574;
  void *v575[2];
  unint64_t v576;
  void *v577[2];
  unint64_t v578;
  void *v579[2];
  unint64_t v580;
  void *v581[2];
  unint64_t v582;
  void *v583[2];
  unint64_t v584;
  void *v585[2];
  unint64_t v586;
  void *v587[2];
  unint64_t v588;
  void *v589[2];
  unint64_t v590;
  void *v591[2];
  unint64_t v592;
  void *v593[2];
  unint64_t v594;
  void *v595[2];
  unint64_t v596;
  void *v597[2];
  unint64_t v598;
  void *v599[2];
  unint64_t v600;
  void *v601[2];
  unint64_t v602;
  void *v603[2];
  unint64_t v604;
  void *v605[2];
  unint64_t v606;
  void *v607[2];
  unint64_t v608;
  void *v609[2];
  unint64_t v610;
  void *v611[2];
  unint64_t v612;
  void *v613[2];
  unint64_t v614;
  void *v615[2];
  unint64_t v616;
  void *v617[2];
  unint64_t v618;
  void *v619[2];
  unint64_t v620;
  void *v621[2];
  unint64_t v622;
  void *v623[2];
  unint64_t v624;
  void *v625[2];
  unint64_t v626;
  void *v627[2];
  unint64_t v628;
  void *v629[2];
  unint64_t v630;
  void *v631[2];
  unint64_t v632;
  void *v633[2];
  unint64_t v634;
  void *v635[2];
  unint64_t v636;
  void *__dst[2];
  unint64_t v638;
  void *v639[2];
  void *v640;
  uint64_t v641;
  void *v642;
  unint64_t *v643;
  uint64_t v644;
  void *v645;
  unint64_t *v646;
  uint64_t v647;
  char v648[48];
  char v649[48];
  unsigned __int8 v650[32];
  char v651[32];
  _OWORD v652[2];
  int v653;
  _OWORD v654[2];
  uint64_t v655;
  char v656[8];
  char v657[32];
  int8x16_t v658[2];
  char v659[32];
  char v660[32];
  _OWORD v661[2];
  _OWORD v662[2];
  char v663[32];
  _OWORD v664[2];
  char v665;
  char v666[32];
  uint64_t v667;
  char v668[8];
  char v669[48];
  __int128 v670;
  __int128 v671;
  __int128 v672;
  _OWORD v673[2];
  _OWORD v674[2];
  char v675[32];
  char v676[32];
  char v677[32];
  _OWORD v678[2];
  _OWORD v679[2];
  _OWORD v680[2];
  __int128 v681;
  char v682[16];
  char v683[32];
  char v684[32];
  __int128 v685;
  int16x8_t v686[2];
  _OWORD v687[2];
  int v688;
  char v689[32];
  _OWORD v690[2];
  char v691[32];
  char v692[32];
  _OWORD v693[2];
  char v694[32];
  _OWORD v695[2];
  _OWORD v696[2];
  _OWORD v697[2];
  char v698[32];
  __int128 v699;
  int v700;
  char v701[16];
  uint64_t v702;
  char v703[8];
  char v704[32];
  int8x16_t v705[2];
  _OWORD v706[2];
  __int128 v707;
  __int16 v708;
  uint64_t v709;
  int v710;
  char v711[16];
  uint64_t v712;

  v712 = *MEMORY[0x24BDAC8D0];
  v646 = 0;
  v645 = 0;
  v647 = 0;
  v643 = 0;
  v642 = 0;
  v644 = 0;
  v641 = 0;
  sub_2396157EC((uint64_t)v639, a3);
  strcpy(v711, "1_D\\nRP\\TCPB");
  v5 = sub_239510ECC((uint64_t)v711);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    v638 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    __dst[1] = v7;
    goto LABEL_8;
  }
  HIBYTE(v638) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFF08;
  v11[1] = a1 + 8;
  sub_23961580C((uint64_t)v639, (uint64_t)__dst, (uint64_t)v11);
  v709 = 0x222E2A1C2E362D43;
  v710 = 3155492;
  v12 = sub_23958E4C8((uint64_t)&v709);
  v13 = strlen(v12);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v636 = v17 | 0x8000000000000000;
    v635[0] = v15;
    v635[1] = v14;
    goto LABEL_16;
  }
  HIBYTE(v636) = v13;
  v15 = v635;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250AFFF08;
  v18[1] = a1 + 16;
  sub_23961580C((uint64_t)v639, (uint64_t)v635, (uint64_t)v18);
  v707 = xmmword_239F0F3DD;
  v708 = 124;
  v19 = sub_239A91B18((int8x16_t *)&v707);
  v20 = strlen(v19->i8);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v634 = v24 | 0x8000000000000000;
    v633[0] = v22;
    v633[1] = v21;
    goto LABEL_24;
  }
  HIBYTE(v634) = v20;
  v22 = v633;
  if (v20)
LABEL_24:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250AFFF08;
  v25[1] = a1 + 24;
  sub_23961580C((uint64_t)v639, (uint64_t)v633, (uint64_t)v25);
  v706[0] = xmmword_239F0F3EF;
  *(_DWORD *)((char *)v706 + 15) = 728351;
  sub_23958E450((uint64_t)v706, (int32x4_t)xmmword_239F0F3EF, v26, v27, v28);
  v30 = v29;
  v31 = strlen(v29);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v632 = v35 | 0x8000000000000000;
    v631[0] = v33;
    v631[1] = v32;
    goto LABEL_32;
  }
  HIBYTE(v632) = v31;
  v33 = v631;
  if (v31)
LABEL_32:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250AFFF08;
  v36[1] = a1 + 32;
  sub_23961580C((uint64_t)v639, (uint64_t)v631, (uint64_t)v36);
  strcpy(v705[0].i8, "1_D\\nGP]XUnECPRZB");
  v37 = sub_239A91B18(v705);
  v38 = strlen(v37->i8);
  if (v38 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v39 = (void *)v38;
  if (v38 >= 0x17)
  {
    v41 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 | 7) != 0x17)
      v41 = v38 | 7;
    v42 = v41 + 1;
    v40 = operator new(v41 + 1);
    v630 = v42 | 0x8000000000000000;
    v629[0] = v40;
    v629[1] = v39;
    goto LABEL_40;
  }
  HIBYTE(v630) = v38;
  v40 = v629;
  if (v38)
LABEL_40:
    memmove(v40, v37, (size_t)v39);
  *((_BYTE *)v39 + (_QWORD)v40) = 0;
  v43 = (_QWORD *)operator new();
  *v43 = &off_250AFFF08;
  v43[1] = a1 + 40;
  sub_23961580C((uint64_t)v639, (uint64_t)v629, (uint64_t)v43);
  strcpy(v704, "(F]Ew^IDALwXZGBMK\\AGF[");
  sub_2396EFBE0((uint64_t)v704, *(int32x4_t *)"(F]Ew^IDALwXZGBMK\\AGF[", v44, v45, v46);
  v48 = v47;
  v49 = strlen(v47);
  if (v49 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v50 = (void *)v49;
  if (v49 >= 0x17)
  {
    v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v49 | 7) != 0x17)
      v52 = v49 | 7;
    v53 = v52 + 1;
    v51 = operator new(v52 + 1);
    v628 = v53 | 0x8000000000000000;
    v627[0] = v51;
    v627[1] = v50;
    goto LABEL_48;
  }
  HIBYTE(v628) = v49;
  v51 = v627;
  if (v49)
LABEL_48:
    memmove(v51, v48, (size_t)v50);
  *((_BYTE *)v50 + (_QWORD)v51) = 0;
  v54 = (_QWORD *)operator new();
  *v54 = &off_250AFFF08;
  v54[1] = a1 + 48;
  sub_23961580C((uint64_t)v639, (uint64_t)v627, (uint64_t)v54);
  v702 = 0x6C64755A68706B05;
  strcpy(v703, "wv");
  v55 = (const char *)sub_23958E518((uint64_t)&v702);
  v56 = strlen(v55);
  if (v56 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v57 = (void *)v56;
  if (v56 >= 0x17)
  {
    v59 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v56 | 7) != 0x17)
      v59 = v56 | 7;
    v60 = v59 + 1;
    v58 = operator new(v59 + 1);
    v626 = v60 | 0x8000000000000000;
    v625[0] = v58;
    v625[1] = v57;
    goto LABEL_56;
  }
  HIBYTE(v626) = v56;
  v58 = v625;
  if (v56)
LABEL_56:
    memmove(v58, v55, (size_t)v57);
  *((_BYTE *)v57 + (_QWORD)v58) = 0;
  v61 = (_QWORD *)operator new();
  *v61 = &off_250AFFF08;
  v61[1] = a1 + 56;
  sub_23961580C((uint64_t)v639, (uint64_t)v625, (uint64_t)v61);
  strcpy(v701, "0^E]oCUW]U^DC");
  sub_23971A32C((uint64_t)v701, v62);
  v64 = v63;
  v65 = strlen(v63);
  if (v65 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v66 = (void *)v65;
  if (v65 >= 0x17)
  {
    v68 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v65 | 7) != 0x17)
      v68 = v65 | 7;
    v69 = v68 + 1;
    v67 = operator new(v68 + 1);
    v624 = v69 | 0x8000000000000000;
    v623[0] = v67;
    v623[1] = v66;
    goto LABEL_64;
  }
  HIBYTE(v624) = v65;
  v67 = v623;
  if (v65)
LABEL_64:
    memmove(v67, v64, (size_t)v66);
  *((_BYTE *)v66 + (_QWORD)v67) = 0;
  v70 = (_QWORD *)operator new();
  *v70 = &off_250AFFF08;
  v70[1] = a1 + 64;
  sub_23961580C((uint64_t)v639, (uint64_t)v623, (uint64_t)v70);
  v699 = xmmword_239F0F42B;
  v700 = 6709627;
  sub_23958E55C((uint64_t)&v699, (int32x4_t)xmmword_239F0F42B, v71, v72, v73);
  v75 = v74;
  v76 = strlen(v74);
  if (v76 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v77 = (void *)v76;
  if (v76 >= 0x17)
  {
    v79 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v76 | 7) != 0x17)
      v79 = v76 | 7;
    v80 = v79 + 1;
    v78 = operator new(v79 + 1);
    v622 = v80 | 0x8000000000000000;
    v621[0] = v78;
    v621[1] = v77;
    goto LABEL_72;
  }
  HIBYTE(v622) = v76;
  v78 = v621;
  if (v76)
LABEL_72:
    memmove(v78, v75, (size_t)v77);
  *((_BYTE *)v77 + (_QWORD)v78) = 0;
  v81 = (_QWORD *)operator new();
  *v81 = &off_250AFFF08;
  v81[1] = a1 + 72;
  sub_23961580C((uint64_t)v639, (uint64_t)v621, (uint64_t)v81);
  strcpy(v698, "=MXO^XSIbOXYHSY\\SIbMORWX^ITRSN");
  sub_2396EFF58((uint64_t)v698, *(int32x4_t *)"\\SIbMORWX^ITRSN", v82, v83, v84);
  v86 = v85;
  v87 = strlen(v85);
  if (v87 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v88 = (void *)v87;
  if (v87 >= 0x17)
  {
    v90 = (v87 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v87 | 7) != 0x17)
      v90 = v87 | 7;
    v91 = v90 + 1;
    v89 = operator new(v90 + 1);
    v620 = v91 | 0x8000000000000000;
    v619[0] = v89;
    v619[1] = v88;
    goto LABEL_80;
  }
  HIBYTE(v620) = v87;
  v89 = v619;
  if (v87)
LABEL_80:
    memmove(v89, v86, (size_t)v88);
  *((_BYTE *)v88 + (_QWORD)v89) = 0;
  v92 = (_QWORD *)operator new();
  *v92 = &off_250ADF360;
  v92[1] = a1 + 80;
  sub_23961580C((uint64_t)v639, (uint64_t)v619, (uint64_t)v92);
  v697[0] = xmmword_239F0F45E;
  *(_OWORD *)((char *)v697 + 9) = *(__int128 *)((char *)&xmmword_239F0F45E + 9);
  sub_2396EFC88((uint64_t)v697, *(int32x4_t *)((char *)&xmmword_239F0F45E + 9), v93, v94, v95);
  v97 = v96;
  v98 = strlen(v96);
  if (v98 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v99 = (void *)v98;
  if (v98 >= 0x17)
  {
    v101 = (v98 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v98 | 7) != 0x17)
      v101 = v98 | 7;
    v102 = v101 + 1;
    v100 = operator new(v101 + 1);
    v618 = v102 | 0x8000000000000000;
    v617[0] = v100;
    v617[1] = v99;
    goto LABEL_88;
  }
  HIBYTE(v618) = v98;
  v100 = v617;
  if (v98)
LABEL_88:
    memmove(v100, v97, (size_t)v99);
  *((_BYTE *)v99 + (_QWORD)v100) = 0;
  v103 = (_QWORD *)operator new();
  *v103 = &off_250ADF360;
  v103[1] = a1 + 88;
  sub_23961580C((uint64_t)v639, (uint64_t)v617, (uint64_t)v103);
  v696[0] = xmmword_239F0F477;
  *(_QWORD *)((char *)v696 + 15) = 0x3C3E383430062BLL;
  sub_2396EFBE0((uint64_t)v696, (int32x4_t)xmmword_239F0F477, v104, v105, v106);
  v108 = v107;
  v109 = strlen(v107);
  if (v109 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v110 = (void *)v109;
  if (v109 >= 0x17)
  {
    v112 = (v109 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v109 | 7) != 0x17)
      v112 = v109 | 7;
    v113 = v112 + 1;
    v111 = operator new(v112 + 1);
    v616 = v113 | 0x8000000000000000;
    v615[0] = v111;
    v615[1] = v110;
    goto LABEL_96;
  }
  HIBYTE(v616) = v109;
  v111 = v615;
  if (v109)
LABEL_96:
    memmove(v111, v108, (size_t)v110);
  *((_BYTE *)v110 + (_QWORD)v111) = 0;
  v114 = (_QWORD *)operator new();
  *v114 = &off_250ADF360;
  v114[1] = a1 + 96;
  sub_23961580C((uint64_t)v639, (uint64_t)v615, (uint64_t)v114);
  v695[0] = xmmword_239F0F48E;
  *(_DWORD *)((char *)v695 + 15) = 7955830;
  sub_23958E450((uint64_t)v695, (int32x4_t)xmmword_239F0F48E, v115, v116, v117);
  v119 = v118;
  v120 = strlen(v118);
  if (v120 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v121 = (void *)v120;
  if (v120 >= 0x17)
  {
    v123 = (v120 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v120 | 7) != 0x17)
      v123 = v120 | 7;
    v124 = v123 + 1;
    v122 = operator new(v123 + 1);
    v614 = v124 | 0x8000000000000000;
    v613[0] = v122;
    v613[1] = v121;
    goto LABEL_104;
  }
  HIBYTE(v614) = v120;
  v122 = v613;
  if (v120)
LABEL_104:
    memmove(v122, v119, (size_t)v121);
  *((_BYTE *)v121 + (_QWORD)v122) = 0;
  v125 = (_QWORD *)operator new();
  *v125 = &off_250ADF360;
  v125[1] = a1 + 104;
  sub_23961580C((uint64_t)v639, (uint64_t)v613, (uint64_t)v125);
  strcpy(v694, "W:269\b%2'%8=\b2%%8%");
  sub_23958E450((uint64_t)v694, *(int32x4_t *)"W:269\b%2'%8=\b2%%8%", v126, v127, v128);
  v130 = v129;
  v131 = strlen(v129);
  if (v131 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v132 = (void *)v131;
  if (v131 >= 0x17)
  {
    v134 = (v131 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v131 | 7) != 0x17)
      v134 = v131 | 7;
    v135 = v134 + 1;
    v133 = operator new(v134 + 1);
    v612 = v135 | 0x8000000000000000;
    v611[0] = v133;
    v611[1] = v132;
    goto LABEL_112;
  }
  HIBYTE(v612) = v131;
  v133 = v611;
  if (v131)
LABEL_112:
    memmove(v133, v130, (size_t)v132);
  *((_BYTE *)v132 + (_QWORD)v133) = 0;
  v136 = (_QWORD *)operator new();
  *v136 = &off_250ADF360;
  v136[1] = a1 + 112;
  sub_23961580C((uint64_t)v639, (uint64_t)v611, (uint64_t)v136);
  v693[0] = xmmword_239F0F4B4;
  *(_QWORD *)((char *)v693 + 13) = 0x7E637E7E695366;
  sub_2396EFB50((uint64_t)v693, (int32x4_t)xmmword_239F0F4B4, v137, v138, v139);
  v141 = v140;
  v142 = strlen(v140);
  if (v142 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v143 = (void *)v142;
  if (v142 >= 0x17)
  {
    v145 = (v142 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v142 | 7) != 0x17)
      v145 = v142 | 7;
    v146 = v145 + 1;
    v144 = operator new(v145 + 1);
    v610 = v146 | 0x8000000000000000;
    v609[0] = v144;
    v609[1] = v143;
    goto LABEL_120;
  }
  HIBYTE(v610) = v142;
  v144 = v609;
  if (v142)
LABEL_120:
    memmove(v144, v141, (size_t)v143);
  *((_BYTE *)v143 + (_QWORD)v144) = 0;
  v147 = (_QWORD *)operator new();
  *v147 = &off_250ADF360;
  v147[1] = a1 + 136;
  sub_23961580C((uint64_t)v639, (uint64_t)v609, (uint64_t)v147);
  strcpy(v692, "D70  !2\x1B6!46+.\x1B!66+6");
  sub_2396EFB50((uint64_t)v692, *(int32x4_t *)"D70  !2\x1B6!46+.\x1B!66+6", v148, v149, v150);
  v152 = v151;
  v153 = strlen(v151);
  if (v153 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v154 = (void *)v153;
  if (v153 >= 0x17)
  {
    v156 = (v153 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v153 | 7) != 0x17)
      v156 = v153 | 7;
    v157 = v156 + 1;
    v155 = operator new(v156 + 1);
    v608 = v157 | 0x8000000000000000;
    v607[0] = v155;
    v607[1] = v154;
    goto LABEL_128;
  }
  HIBYTE(v608) = v153;
  v155 = v607;
  if (v153)
LABEL_128:
    memmove(v155, v152, (size_t)v154);
  *((_BYTE *)v154 + (_QWORD)v155) = 0;
  v158 = (_QWORD *)operator new();
  *v158 = &off_250AFFF38;
  v158[1] = a1 + 120;
  sub_23961580C((uint64_t)v639, (uint64_t)v607, (uint64_t)v158);
  strcpy(v691, "1_D\\nACX^CnA^BTB");
  sub_2396EFA24((uint64_t)v691);
  v160 = v159;
  v161 = strlen(v159);
  if (v161 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v162 = (void *)v161;
  if (v161 >= 0x17)
  {
    v164 = (v161 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v161 | 7) != 0x17)
      v164 = v161 | 7;
    v165 = v164 + 1;
    v163 = operator new(v164 + 1);
    v606 = v165 | 0x8000000000000000;
    v605[0] = v163;
    v605[1] = v162;
    goto LABEL_136;
  }
  HIBYTE(v606) = v161;
  v163 = v605;
  if (v161)
LABEL_136:
    memmove(v163, v160, (size_t)v162);
  *((_BYTE *)v162 + (_QWORD)v163) = 0;
  v166 = (_QWORD *)operator new();
  *v166 = &off_250AFFF08;
  v166[1] = a1 + 144;
  sub_23961580C((uint64_t)v639, (uint64_t)v605, (uint64_t)v166);
  v690[0] = xmmword_239F0F4EF;
  *(_OWORD *)((char *)v690 + 11) = *(__int128 *)((char *)&xmmword_239F0F4EF + 11);
  sub_2396F1974((uint64_t)v690, *(int32x4_t *)((char *)&xmmword_239F0F4EF + 11), v167, v168, v169);
  v171 = v170;
  v172 = strlen(v170);
  if (v172 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v173 = (void *)v172;
  if (v172 >= 0x17)
  {
    v175 = (v172 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v172 | 7) != 0x17)
      v175 = v172 | 7;
    v176 = v175 + 1;
    v174 = operator new(v175 + 1);
    v604 = v176 | 0x8000000000000000;
    v603[0] = v174;
    v603[1] = v173;
    goto LABEL_144;
  }
  HIBYTE(v604) = v172;
  v174 = v603;
  if (v172)
LABEL_144:
    memmove(v174, v171, (size_t)v173);
  *((_BYTE *)v173 + (_QWORD)v174) = 0;
  v177 = (_QWORD *)operator new();
  *v177 = &off_250ADF360;
  v177[1] = a1 + 152;
  sub_23961580C((uint64_t)v639, (uint64_t)v603, (uint64_t)v177);
  strcpy(v689, "4YQP]UZkD[GQkUX]SZYQZ@kQFF[F");
  sub_2396EFD48((uint64_t)v689, *(int32x4_t *)"UX]SZYQZ@kQFF[F", v178, v179, v180);
  v182 = v181;
  v183 = strlen(v181);
  if (v183 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v184 = (void *)v183;
  if (v183 >= 0x17)
  {
    v186 = (v183 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v183 | 7) != 0x17)
      v186 = v183 | 7;
    v187 = v186 + 1;
    v185 = operator new(v186 + 1);
    v602 = v187 | 0x8000000000000000;
    v601[0] = v185;
    v601[1] = v184;
    goto LABEL_152;
  }
  HIBYTE(v602) = v183;
  v185 = v601;
  if (v183)
LABEL_152:
    memmove(v185, v182, (size_t)v184);
  *((_BYTE *)v184 + (_QWORD)v185) = 0;
  v188 = (_QWORD *)operator new();
  *v188 = &off_250ADF360;
  v188[1] = a1 + 160;
  sub_23961580C((uint64_t)v639, (uint64_t)v601, (uint64_t)v188);
  v687[0] = xmmword_239F0F527;
  v687[1] = *(_OWORD *)dbl_239F0F537;
  v688 = 3416608;
  sub_2396F01D4((unsigned __int8 *)v687, (int16x8_t)xmmword_239F0F527, dbl_239F0F537[0], v189, v190, v191);
  v193 = v192;
  v194 = strlen(v192);
  if (v194 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v195 = (void *)v194;
  if (v194 >= 0x17)
  {
    v197 = (v194 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v194 | 7) != 0x17)
      v197 = v194 | 7;
    v198 = v197 + 1;
    v196 = operator new(v197 + 1);
    v600 = v198 | 0x8000000000000000;
    v599[0] = v196;
    v599[1] = v195;
    goto LABEL_160;
  }
  HIBYTE(v600) = v194;
  v196 = v599;
  if (v194)
LABEL_160:
    memmove(v196, v193, (size_t)v195);
  *((_BYTE *)v195 + (_QWORD)v196) = 0;
  v199 = (_QWORD *)operator new();
  *v199 = &off_250AFFF08;
  v199[1] = a1 + 168;
  sub_23961580C((uint64_t)v639, (uint64_t)v599, (uint64_t)v199);
  v685 = xmmword_239F0F54B;
  v686[0] = xmmword_239F0F55B;
  *(uint64_t *)((char *)&v686[0].i64[1] + 7) = 0x3150815141E19;
  sub_2396F0804((unsigned __int8 *)&v685, 1.73693916e-173, xmmword_239F0F55B, v200, v201);
  v203 = v202;
  v204 = strlen(v202);
  if (v204 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v205 = (void *)v204;
  if (v204 >= 0x17)
  {
    v207 = (v204 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v204 | 7) != 0x17)
      v207 = v204 | 7;
    v208 = v207 + 1;
    v206 = operator new(v207 + 1);
    v598 = v208 | 0x8000000000000000;
    v597[0] = v206;
    v597[1] = v205;
    goto LABEL_168;
  }
  HIBYTE(v598) = v204;
  v206 = v597;
  if (v204)
LABEL_168:
    memmove(v206, v203, (size_t)v205);
  *((_BYTE *)v205 + (_QWORD)v206) = 0;
  v209 = (_QWORD *)operator new();
  *v209 = &off_250ADF630;
  v209[1] = a1 + 176;
  sub_23961580C((uint64_t)v639, (uint64_t)v597, (uint64_t)v209);
  strcpy(v684, "$IAEJ{CVERMP]{EHMCJIAJP{AVVKV");
  sub_2396F0EE8((uint64_t)v684, *(int32x4_t *)"EHMCJIAJP{AVVKV", v210, v211, v212);
  v214 = v213;
  v215 = strlen(v213);
  if (v215 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v216 = (void *)v215;
  if (v215 >= 0x17)
  {
    v218 = (v215 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v215 | 7) != 0x17)
      v218 = v215 | 7;
    v219 = v218 + 1;
    v217 = operator new(v218 + 1);
    v596 = v219 | 0x8000000000000000;
    v595[0] = v217;
    v595[1] = v216;
    goto LABEL_176;
  }
  HIBYTE(v596) = v215;
  v217 = v595;
  if (v215)
LABEL_176:
    memmove(v217, v214, (size_t)v216);
  *((_BYTE *)v216 + (_QWORD)v217) = 0;
  v220 = (_QWORD *)operator new();
  *v220 = &off_250ADF360;
  v220[1] = a1 + 200;
  sub_23961580C((uint64_t)v639, (uint64_t)v595, (uint64_t)v220);
  strcpy(v683, ">PKSaWPNKJaYL_HWJW[M");
  sub_2396EFB50((uint64_t)v683, *(int32x4_t *)">PKSaWPNKJaYL_HWJW[M", v221, v222, v223);
  v225 = v224;
  v226 = strlen(v224);
  if (v226 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v227 = (void *)v226;
  if (v226 >= 0x17)
  {
    v229 = (v226 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v226 | 7) != 0x17)
      v229 = v226 | 7;
    v230 = v229 + 1;
    v228 = operator new(v229 + 1);
    v594 = v230 | 0x8000000000000000;
    v593[0] = v228;
    v593[1] = v227;
    goto LABEL_184;
  }
  HIBYTE(v594) = v226;
  v228 = v593;
  if (v226)
LABEL_184:
    memmove(v228, v225, (size_t)v227);
  *((_BYTE *)v227 + (_QWORD)v228) = 0;
  v231 = (_QWORD *)operator new();
  *v231 = &off_250AFFF08;
  v231[1] = a1 + 216;
  sub_23961580C((uint64_t)v639, (uint64_t)v593, (uint64_t)v231);
  v681 = xmmword_239F0F5A5;
  strcpy(v682, "|qtzspxsiBxooro");
  sub_2396F06F0((uint64_t)&v681, (int32x4_t)xmmword_239F0F5A5, *(int8x16_t *)"|qtzspxsiBxooro", v232, v233);
  v235 = v234;
  v236 = strlen(v234);
  if (v236 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v237 = (void *)v236;
  if (v236 >= 0x17)
  {
    v239 = (v236 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v236 | 7) != 0x17)
      v239 = v236 | 7;
    v240 = v239 + 1;
    v238 = operator new(v239 + 1);
    v592 = v240 | 0x8000000000000000;
    v591[0] = v238;
    v591[1] = v237;
    goto LABEL_192;
  }
  HIBYTE(v592) = v236;
  v238 = v591;
  if (v236)
LABEL_192:
    memmove(v238, v235, (size_t)v237);
  *((_BYTE *)v237 + (_QWORD)v238) = 0;
  v241 = (_QWORD *)operator new();
  *v241 = &off_250ADF360;
  v241[1] = a1 + 208;
  sub_23961580C((uint64_t)v639, (uint64_t)v591, (uint64_t)v241);
  v680[0] = xmmword_239F0F5C5;
  *(_OWORD *)((char *)v680 + 15) = *(__int128 *)((char *)&xmmword_239F0F5C5 + 15);
  sub_2396EFF58((uint64_t)v680, *(int32x4_t *)((char *)&xmmword_239F0F5C5 + 15), v242, v243, v244);
  v246 = v245;
  v247 = strlen(v245);
  if (v247 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v248 = (void *)v247;
  if (v247 >= 0x17)
  {
    v250 = (v247 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v247 | 7) != 0x17)
      v250 = v247 | 7;
    v251 = v250 + 1;
    v249 = operator new(v250 + 1);
    v590 = v251 | 0x8000000000000000;
    v589[0] = v249;
    v589[1] = v248;
    goto LABEL_200;
  }
  HIBYTE(v590) = v247;
  v249 = v589;
  if (v247)
LABEL_200:
    memmove(v249, v246, (size_t)v248);
  *((_BYTE *)v248 + (_QWORD)v249) = 0;
  v252 = (_QWORD *)operator new();
  *v252 = &off_250AFFF08;
  v252[1] = a1 + 224;
  sub_23961580C((uint64_t)v639, (uint64_t)v589, (uint64_t)v252);
  v679[0] = xmmword_239F0F5E4;
  *(_OWORD *)((char *)v679 + 9) = *(__int128 *)((char *)&xmmword_239F0F5E4 + 9);
  sub_2396EFC88((uint64_t)v679, *(int32x4_t *)((char *)&xmmword_239F0F5E4 + 9), v253, v254, v255);
  v257 = v256;
  v258 = strlen(v256);
  if (v258 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v259 = (void *)v258;
  if (v258 >= 0x17)
  {
    v261 = (v258 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v258 | 7) != 0x17)
      v261 = v258 | 7;
    v262 = v261 + 1;
    v260 = operator new(v261 + 1);
    v588 = v262 | 0x8000000000000000;
    v587[0] = v260;
    v587[1] = v259;
    goto LABEL_208;
  }
  HIBYTE(v588) = v258;
  v260 = v587;
  if (v258)
LABEL_208:
    memmove(v260, v257, (size_t)v259);
  *((_BYTE *)v259 + (_QWORD)v260) = 0;
  v263 = (_QWORD *)operator new();
  *v263 = &off_250AFFF08;
  v263[1] = a1 + 248;
  sub_23961580C((uint64_t)v639, (uint64_t)v587, (uint64_t)v263);
  v678[0] = xmmword_239F0F5FD;
  *(_OWORD *)((char *)v678 + 12) = *(__int128 *)((char *)&xmmword_239F0F5FD + 12);
  sub_2396B946C((uint64_t)v678, *(int32x4_t *)((char *)&xmmword_239F0F5FD + 12), v264, v265, v266);
  v268 = v267;
  v269 = strlen(v267);
  if (v269 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v270 = (void *)v269;
  if (v269 >= 0x17)
  {
    v272 = (v269 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v269 | 7) != 0x17)
      v272 = v269 | 7;
    v273 = v272 + 1;
    v271 = operator new(v272 + 1);
    v586 = v273 | 0x8000000000000000;
    v585[0] = v271;
    v585[1] = v270;
    goto LABEL_216;
  }
  HIBYTE(v586) = v269;
  v271 = v585;
  if (v269)
LABEL_216:
    memmove(v271, v268, (size_t)v270);
  *((_BYTE *)v270 + (_QWORD)v271) = 0;
  v274 = (_QWORD *)operator new();
  *v274 = &off_250AFFF08;
  v274[1] = a1 + 256;
  sub_23961580C((uint64_t)v639, (uint64_t)v585, (uint64_t)v274);
  v279 = v278;
  v280 = strlen(v278);
  if (v280 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v281 = (void *)v280;
  if (v280 >= 0x17)
  {
    v283 = (v280 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v280 | 7) != 0x17)
      v283 = v280 | 7;
    v284 = v283 + 1;
    v282 = operator new(v283 + 1);
    v584 = v284 | 0x8000000000000000;
    v583[0] = v282;
    v583[1] = v281;
    goto LABEL_224;
  }
  HIBYTE(v584) = v280;
  v282 = v583;
  if (v280)
LABEL_224:
    memmove(v282, v279, (size_t)v281);
  *((_BYTE *)v281 + (_QWORD)v282) = 0;
  v285 = (_QWORD *)operator new();
  *v285 = &off_250AFFF08;
  v285[1] = a1 + 264;
  sub_23961580C((uint64_t)v639, (uint64_t)v583, (uint64_t)v285);
  strcpy(v676, "U; 8\n3<;49\n74\n<!0'4!<:;&");
  sub_2396EFC88((uint64_t)v676, *(int32x4_t *)"9\n74\n<!0'4!<:;&", v286, v287, v288);
  v290 = v289;
  v291 = strlen(v289);
  if (v291 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v292 = (void *)v291;
  if (v291 >= 0x17)
  {
    v294 = (v291 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v291 | 7) != 0x17)
      v294 = v291 | 7;
    v295 = v294 + 1;
    v293 = operator new(v294 + 1);
    v582 = v295 | 0x8000000000000000;
    v581[0] = v293;
    v581[1] = v292;
    goto LABEL_232;
  }
  HIBYTE(v582) = v291;
  v293 = v581;
  if (v291)
LABEL_232:
    memmove(v293, v290, (size_t)v292);
  *((_BYTE *)v292 + (_QWORD)v293) = 0;
  v296 = (_QWORD *)operator new();
  *v296 = &off_250AFFF08;
  v296[1] = a1 + 272;
  sub_23961580C((uint64_t)v639, (uint64_t)v581, (uint64_t)v296);
  strcpy(v675, ":JUI_e[VS]TW_TNeNRH_IRUV^");
  sub_239A93C04((unsigned __int8 *)v675, *(int32x4_t *)"TW_TNeNRH_IRUV^", v297, v298, v299);
  v301 = v300;
  v302 = strlen(v300);
  if (v302 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v303 = (void *)v302;
  if (v302 >= 0x17)
  {
    v305 = (v302 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v302 | 7) != 0x17)
      v305 = v302 | 7;
    v306 = v305 + 1;
    v304 = operator new(v305 + 1);
    v580 = v306 | 0x8000000000000000;
    v579[0] = v304;
    v579[1] = v303;
    goto LABEL_240;
  }
  HIBYTE(v580) = v302;
  v304 = v579;
  if (v302)
LABEL_240:
    memmove(v304, v301, (size_t)v303);
  *((_BYTE *)v303 + (_QWORD)v304) = 0;
  v307 = (_QWORD *)operator new();
  *v307 = &off_250ADF360;
  v307[1] = a1 + 232;
  sub_23961580C((uint64_t)v639, (uint64_t)v579, (uint64_t)v307);
  v674[0] = xmmword_239F0F664;
  *(_OWORD *)((char *)v674 + 13) = *(__int128 *)((char *)&xmmword_239F0F664 + 13);
  sub_2396EFD48((uint64_t)v674, *(int32x4_t *)((char *)&xmmword_239F0F664 + 13), v308, v309, v310);
  v312 = v311;
  v313 = strlen(v311);
  if (v313 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v314 = (void *)v313;
  if (v313 >= 0x17)
  {
    v316 = (v313 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v313 | 7) != 0x17)
      v316 = v313 | 7;
    v317 = v316 + 1;
    v315 = operator new(v316 + 1);
    v577[1] = v314;
    v578 = v317 | 0x8000000000000000;
    v577[0] = v315;
    goto LABEL_248;
  }
  HIBYTE(v578) = v313;
  v315 = v577;
  if (v313)
LABEL_248:
    memmove(v315, v312, (size_t)v314);
  *((_BYTE *)v314 + (_QWORD)v315) = 0;
  v318 = (_QWORD *)operator new();
  *v318 = &off_250ADF360;
  v318[1] = a1 + 240;
  sub_23961580C((uint64_t)v639, (uint64_t)v577, (uint64_t)v318);
  v673[0] = xmmword_239F0F681;
  *(_QWORD *)((char *)v673 + 15) = 0x81E031E1F1512;
  sub_2396EFBE0((uint64_t)v673, (int32x4_t)xmmword_239F0F681, v319, v320, v321);
  v323 = v322;
  v324 = strlen(v322);
  if (v324 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v325 = (void *)v324;
  if (v324 >= 0x17)
  {
    v327 = (v324 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v324 | 7) != 0x17)
      v327 = v324 | 7;
    v328 = v327 + 1;
    v326 = operator new(v327 + 1);
    v575[1] = v325;
    v576 = v328 | 0x8000000000000000;
    v575[0] = v326;
    goto LABEL_256;
  }
  HIBYTE(v576) = v324;
  v326 = v575;
  if (v324)
LABEL_256:
    memmove(v326, v323, (size_t)v325);
  *((_BYTE *)v325 + (_QWORD)v326) = 0;
  v329 = (_QWORD *)operator new();
  *v329 = &off_250ADF630;
  v329[1] = a1 + 280;
  sub_23961580C((uint64_t)v639, (uint64_t)v575, (uint64_t)v329);
  v670 = xmmword_239F0F698;
  v671 = *(_OWORD *)dbl_239F0F6A8;
  v672 = xmmword_239F0F6B8;
  sub_2396F0480((unsigned __int8 *)&v670, 2.00731686e-221, dbl_239F0F6A8[0], v330, v331, v332);
  v334 = v333;
  v335 = strlen(v333);
  if (v335 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v336 = (void *)v335;
  if (v335 >= 0x17)
  {
    v338 = (v335 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v335 | 7) != 0x17)
      v338 = v335 | 7;
    v339 = v338 + 1;
    v337 = operator new(v338 + 1);
    v573[1] = v336;
    v574 = v339 | 0x8000000000000000;
    v573[0] = v337;
    goto LABEL_264;
  }
  HIBYTE(v574) = v335;
  v337 = v573;
  if (v335)
LABEL_264:
    memmove(v337, v334, (size_t)v336);
  *((_BYTE *)v336 + (_QWORD)v337) = 0;
  v340 = (_QWORD *)operator new();
  *v340 = &off_250ADF630;
  v340[1] = &v645;
  sub_23961580C((uint64_t)v639, (uint64_t)v573, (uint64_t)v340);
  strcpy(v669, "6R_EWTZSRi_[WQSi_XRSNSEiTOiFYESi@SD_P_UWB_YX");
  sub_2396F0DB0((unsigned __int8 *)v669, *(double *)"ESi@SD_P_UWB_YX", *(double *)"_XRSNSEiTOiFYESi@SD_P_UWB_YX", v341, v342);
  v344 = v343;
  v345 = strlen(v343);
  if (v345 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v346 = (void *)v345;
  if (v345 >= 0x17)
  {
    v348 = (v345 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v345 | 7) != 0x17)
      v348 = v345 | 7;
    v349 = v348 + 1;
    v347 = operator new(v348 + 1);
    v571[1] = v346;
    v572 = v349 | 0x8000000000000000;
    v571[0] = v347;
    goto LABEL_272;
  }
  HIBYTE(v572) = v345;
  v347 = v571;
  if (v345)
LABEL_272:
    memmove(v347, v344, (size_t)v346);
  *((_BYTE *)v346 + (_QWORD)v347) = 0;
  v350 = (_QWORD *)operator new();
  *v350 = &off_250ADF630;
  v350[1] = &v642;
  sub_23961580C((uint64_t)v639, (uint64_t)v571, (uint64_t)v350);
  v667 = 0x212137311D312B42;
  strcpy(v668, "'11$7.");
  sub_23958E5E0((uint64_t)&v667);
  v352 = v351;
  v353 = strlen(v351);
  if (v353 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v354 = (void *)v353;
  if (v353 >= 0x17)
  {
    v356 = (v353 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v353 | 7) != 0x17)
      v356 = v353 | 7;
    v357 = v356 + 1;
    v355 = operator new(v356 + 1);
    v569[1] = v354;
    v570 = v357 | 0x8000000000000000;
    v569[0] = v355;
    goto LABEL_280;
  }
  HIBYTE(v570) = v353;
  v355 = v569;
  if (v353)
LABEL_280:
    memmove(v355, v352, (size_t)v354);
  *((_BYTE *)v354 + (_QWORD)v355) = 0;
  v358 = (_QWORD *)operator new();
  *v358 = &off_250AE0220;
  v358[1] = a1 + 352;
  sub_23961580C((uint64_t)v639, (uint64_t)v569, (uint64_t)v358);
  strcpy(v666, "U<&\n%:&0\n49<2;80;!\n& 660&&3 9");
  sub_2396F0EE8((uint64_t)v666, *(int32x4_t *)"80;!\n& 660&&3 9", v359, v360, v361);
  v363 = v362;
  v364 = strlen(v362);
  if (v364 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v365 = (void *)v364;
  if (v364 >= 0x17)
  {
    v367 = (v364 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v364 | 7) != 0x17)
      v367 = v364 | 7;
    v368 = v367 + 1;
    v366 = operator new(v367 + 1);
    v567[1] = v365;
    v568 = v368 | 0x8000000000000000;
    v567[0] = v366;
    goto LABEL_288;
  }
  HIBYTE(v568) = v364;
  v366 = v567;
  if (v364)
LABEL_288:
    memmove(v366, v363, (size_t)v365);
  *((_BYTE *)v365 + (_QWORD)v366) = 0;
  v369 = (_QWORD *)operator new();
  *v369 = &off_250AE0220;
  v369[1] = a1 + 353;
  sub_23961580C((uint64_t)v639, (uint64_t)v567, (uint64_t)v369);
  v664[0] = xmmword_239F0F713;
  v664[1] = xmmword_239F0F723;
  v665 = 0;
  sub_2396EFE38((uint64_t)v664, (int32x4_t)xmmword_239F0F713, xmmword_239F0F723, v370, v371);
  v373 = v372;
  v374 = strlen(v372);
  if (v374 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v375 = (void *)v374;
  if (v374 >= 0x17)
  {
    v377 = (v374 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v374 | 7) != 0x17)
      v377 = v374 | 7;
    v378 = v377 + 1;
    v376 = operator new(v377 + 1);
    v565[1] = v375;
    v566 = v378 | 0x8000000000000000;
    v565[0] = v376;
    goto LABEL_296;
  }
  HIBYTE(v566) = v374;
  v376 = v565;
  if (v374)
LABEL_296:
    memmove(v376, v373, (size_t)v375);
  *((_BYTE *)v375 + (_QWORD)v376) = 0;
  v379 = (_QWORD *)operator new();
  *v379 = &off_250AE0220;
  v379[1] = a1 + 354;
  sub_23961580C((uint64_t)v639, (uint64_t)v565, (uint64_t)v379);
  strcpy(v663, "\x1BrhDhxzw~Dzwr|uv~uoDhnxx~hh}nw");
  sub_2396EFF58((uint64_t)v663, *(int32x4_t *)"v~uoDhnxx~hh}nw", v380, v381, v382);
  v384 = v383;
  v385 = strlen(v383);
  if (v385 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v386 = (void *)v385;
  if (v385 >= 0x17)
  {
    v388 = (v385 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v385 | 7) != 0x17)
      v388 = v385 | 7;
    v389 = v388 + 1;
    v387 = operator new(v388 + 1);
    v563[1] = v386;
    v564 = v389 | 0x8000000000000000;
    v563[0] = v387;
    goto LABEL_304;
  }
  HIBYTE(v564) = v385;
  v387 = v563;
  if (v385)
LABEL_304:
    memmove(v387, v384, (size_t)v386);
  *((_BYTE *)v386 + (_QWORD)v387) = 0;
  v390 = (_QWORD *)operator new();
  *v390 = &off_250AE0220;
  v390[1] = a1 + 355;
  sub_23961580C((uint64_t)v639, (uint64_t)v563, (uint64_t)v390);
  v662[0] = xmmword_239F0F753;
  *(_DWORD *)((char *)v662 + 15) = 591897;
  sub_23958E450((uint64_t)v662, (int32x4_t)xmmword_239F0F753, v391, v392, v393);
  v395 = v394;
  v396 = strlen(v394);
  if (v396 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v397 = (void *)v396;
  if (v396 >= 0x17)
  {
    v399 = (v396 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v396 | 7) != 0x17)
      v399 = v396 | 7;
    v400 = v399 + 1;
    v398 = operator new(v399 + 1);
    v561[1] = v397;
    v562 = v400 | 0x8000000000000000;
    v561[0] = v398;
    goto LABEL_312;
  }
  HIBYTE(v562) = v396;
  v398 = v561;
  if (v396)
LABEL_312:
    memmove(v398, v395, (size_t)v397);
  *((_BYTE *)v397 + (_QWORD)v398) = 0;
  v401 = (_QWORD *)operator new();
  *v401 = &off_250AE0220;
  v401[1] = a1 + 356;
  sub_23961580C((uint64_t)v639, (uint64_t)v561, (uint64_t)v401);
  v661[0] = xmmword_239F0F766;
  *(_DWORD *)((char *)v661 + 15) = 1512976;
  sub_23958E450((uint64_t)v661, (int32x4_t)xmmword_239F0F766, v402, v403, v404);
  v406 = v405;
  v407 = strlen(v405);
  if (v407 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v408 = (void *)v407;
  if (v407 >= 0x17)
  {
    v410 = (v407 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v407 | 7) != 0x17)
      v410 = v407 | 7;
    v411 = v410 + 1;
    v409 = operator new(v410 + 1);
    v559[1] = v408;
    v560 = v411 | 0x8000000000000000;
    v559[0] = v409;
    goto LABEL_320;
  }
  HIBYTE(v560) = v407;
  v409 = v559;
  if (v407)
LABEL_320:
    memmove(v409, v406, (size_t)v408);
  *((_BYTE *)v408 + (_QWORD)v409) = 0;
  v412 = (_QWORD *)operator new();
  *v412 = &off_250AE0670;
  v412[1] = a1 + 452;
  sub_23961580C((uint64_t)v639, (uint64_t)v559, (uint64_t)v412);
  strcpy(v660, "D(+'%(\x1B&%\x1B 16%0-+*");
  sub_23958E450((uint64_t)v660, *(int32x4_t *)"D(+'%(\x1B&%\x1B 16%0-+*", v413, v414, v415);
  v417 = v416;
  v418 = strlen(v416);
  if (v418 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v419 = (void *)v418;
  if (v418 >= 0x17)
  {
    v421 = (v418 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v418 | 7) != 0x17)
      v421 = v418 | 7;
    v422 = v421 + 1;
    v420 = operator new(v421 + 1);
    v557[1] = v419;
    v558 = v422 | 0x8000000000000000;
    v557[0] = v420;
    goto LABEL_328;
  }
  HIBYTE(v558) = v418;
  v420 = v557;
  if (v418)
LABEL_328:
    memmove(v420, v417, (size_t)v419);
  *((_BYTE *)v419 + (_QWORD)v420) = 0;
  v423 = (_QWORD *)operator new();
  *v423 = &off_250AE0670;
  v423[1] = a1 + 456;
  sub_23961580C((uint64_t)v639, (uint64_t)v557, (uint64_t)v423);
  strcpy(v659, "/\\JBFpIZCCpMNpKZ]N[F@A");
  sub_2396EFBE0((uint64_t)v659, *(int32x4_t *)"/\\JBFpIZCCpMNpKZ]N[F@A", v424, v425, v426);
  v428 = v427;
  v429 = strlen(v427);
  if (v429 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v430 = (void *)v429;
  if (v429 >= 0x17)
  {
    v432 = (v429 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v429 | 7) != 0x17)
      v432 = v429 | 7;
    v433 = v432 + 1;
    v431 = operator new(v432 + 1);
    v555[1] = v430;
    v556 = v433 | 0x8000000000000000;
    v555[0] = v431;
    goto LABEL_336;
  }
  HIBYTE(v556) = v429;
  v431 = v555;
  if (v429)
LABEL_336:
    memmove(v431, v428, (size_t)v430);
  *((_BYTE *)v430 + (_QWORD)v431) = 0;
  v434 = (_QWORD *)operator new();
  *v434 = &off_250AE0670;
  v434[1] = a1 + 460;
  sub_23961580C((uint64_t)v639, (uint64_t)v555, (uint64_t)v434);
  strcpy(v658[0].i8, "'ARKKxEFxCRUFSNHI");
  v435 = sub_239A91B18(v658);
  v436 = strlen(v435->i8);
  if (v436 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v437 = (void *)v436;
  if (v436 >= 0x17)
  {
    v439 = (v436 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v436 | 7) != 0x17)
      v439 = v436 | 7;
    v440 = v439 + 1;
    v438 = operator new(v439 + 1);
    v553[1] = v437;
    v554 = v440 | 0x8000000000000000;
    v553[0] = v438;
    goto LABEL_344;
  }
  HIBYTE(v554) = v436;
  v438 = v553;
  if (v436)
LABEL_344:
    memmove(v438, v435, (size_t)v437);
  *((_BYTE *)v437 + (_QWORD)v438) = 0;
  v441 = (_QWORD *)operator new();
  *v441 = &off_250AE0670;
  v441[1] = a1 + 464;
  sub_23961580C((uint64_t)v639, (uint64_t)v553, (uint64_t)v441);
  strcpy(v657, ">XWP_Ra\\_aZKL_JWQP");
  sub_23958E450((uint64_t)v657, *(int32x4_t *)">XWP_Ra\\_aZKL_JWQP", v442, v443, v444);
  v446 = v445;
  v447 = strlen(v445);
  if (v447 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v448 = (void *)v447;
  if (v447 >= 0x17)
  {
    v450 = (v447 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v447 | 7) != 0x17)
      v450 = v447 | 7;
    v451 = v450 + 1;
    v449 = operator new(v450 + 1);
    v551[1] = v448;
    v552 = v451 | 0x8000000000000000;
    v551[0] = v449;
    goto LABEL_352;
  }
  HIBYTE(v552) = v447;
  v449 = v551;
  if (v447)
LABEL_352:
    memmove(v449, v446, (size_t)v448);
  *((_BYTE *)v448 + (_QWORD)v449) = 0;
  v452 = (_QWORD *)operator new();
  *v452 = &off_250AE0670;
  v452[1] = a1 + 468;
  sub_23961580C((uint64_t)v639, (uint64_t)v551, (uint64_t)v452);
  v655 = 0x53B283F373B395ALL;
  strcpy(v656, "75.354");
  sub_23958E5E0((uint64_t)&v655);
  v454 = v453;
  v455 = strlen(v453);
  if (v455 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v456 = (void *)v455;
  if (v455 >= 0x17)
  {
    v458 = (v455 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v455 | 7) != 0x17)
      v458 = v455 | 7;
    v459 = v458 + 1;
    v457 = operator new(v458 + 1);
    v549[1] = v456;
    v550 = v459 | 0x8000000000000000;
    v549[0] = v457;
    goto LABEL_360;
  }
  HIBYTE(v550) = v455;
  v457 = v549;
  if (v455)
LABEL_360:
    memmove(v457, v454, (size_t)v456);
  *((_BYTE *)v456 + (_QWORD)v457) = 0;
  v460 = (_QWORD *)operator new();
  *v460 = &off_250ADF240;
  v460[1] = (char *)&v641 + 4;
  sub_23961580C((uint64_t)v639, (uint64_t)v549, (uint64_t)v460);
  v654[0] = xmmword_239F0F7C8;
  *(_OWORD *)((char *)v654 + 11) = *(__int128 *)((char *)&xmmword_239F0F7C8 + 11);
  sub_2396F1974((uint64_t)v654, *(int32x4_t *)((char *)&xmmword_239F0F7C8 + 11), v461, v462, v463);
  v465 = v464;
  v466 = strlen(v464);
  if (v466 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v467 = (void *)v466;
  if (v466 >= 0x17)
  {
    v469 = (v466 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v466 | 7) != 0x17)
      v469 = v466 | 7;
    v470 = v469 + 1;
    v468 = operator new(v469 + 1);
    v547[1] = v467;
    v548 = v470 | 0x8000000000000000;
    v547[0] = v468;
    goto LABEL_368;
  }
  HIBYTE(v548) = v466;
  v468 = v547;
  if (v466)
LABEL_368:
    memmove(v468, v465, (size_t)v467);
  *((_BYTE *)v467 + (_QWORD)v468) = 0;
  v471 = (_QWORD *)operator new();
  *v471 = &off_250AFFF08;
  v471[1] = a1 + 360;
  sub_23961580C((uint64_t)v639, (uint64_t)v547, (uint64_t)v471);
  v652[0] = xmmword_239F0F7E3;
  v652[1] = *(_OWORD *)dbl_239F0F7F3;
  v653 = 2241577;
  sub_2396F01D4((unsigned __int8 *)v652, (int16x8_t)xmmword_239F0F7E3, dbl_239F0F7F3[0], v472, v473, v474);
  v476 = v475;
  v477 = strlen(v475);
  if (v477 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v478 = (void *)v477;
  if (v477 >= 0x17)
  {
    v480 = (v477 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v477 | 7) != 0x17)
      v480 = v477 | 7;
    v481 = v480 + 1;
    v479 = operator new(v480 + 1);
    v545[1] = v478;
    v546 = v481 | 0x8000000000000000;
    v545[0] = v479;
    goto LABEL_376;
  }
  HIBYTE(v546) = v477;
  v479 = v545;
  if (v477)
LABEL_376:
    memmove(v479, v476, (size_t)v478);
  *((_BYTE *)v478 + (_QWORD)v479) = 0;
  v482 = (_QWORD *)operator new();
  *v482 = &off_250ADF630;
  v482[1] = a1 + 368;
  sub_23961580C((uint64_t)v639, (uint64_t)v545, (uint64_t)v482);
  strcpy(v651, "*IKGOXKuGE^CEDuZKXKGO^OXY");
  sub_239A93C04((unsigned __int8 *)v651, *(int32x4_t *)"^CEDuZKXKGO^OXY", v483, v484, v485);
  v487 = v486;
  v488 = strlen(v486);
  if (v488 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v489 = (void *)v488;
  if (v488 >= 0x17)
  {
    v491 = (v488 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v488 | 7) != 0x17)
      v491 = v488 | 7;
    v492 = v491 + 1;
    v490 = operator new(v491 + 1);
    v543[1] = v489;
    v544 = v492 | 0x8000000000000000;
    v543[0] = v490;
    goto LABEL_384;
  }
  HIBYTE(v544) = v488;
  v490 = v543;
  if (v488)
LABEL_384:
    memmove(v490, v487, (size_t)v489);
  *((_BYTE *)v489 + (_QWORD)v490) = 0;
  v493 = (_QWORD *)operator new();
  *v493 = &off_250AFFF68;
  v493[1] = a1 + 392;
  sub_23961580C((uint64_t)v639, (uint64_t)v543, (uint64_t)v493);
  *(_OWORD *)v650 = xmmword_239F0F807;
  *(_OWORD *)&v650[10] = *(__int128 *)((char *)&xmmword_239F0F807 + 10);
  sub_239A93C04(v650, *(int32x4_t *)((char *)&xmmword_239F0F807 + 10), v494, v495, v496);
  v498 = v497;
  v499 = strlen(v497);
  if (v499 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v500 = (void *)v499;
  if (v499 >= 0x17)
  {
    v502 = (v499 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v499 | 7) != 0x17)
      v502 = v499 | 7;
    v503 = v502 + 1;
    v501 = operator new(v502 + 1);
    v541[1] = v500;
    v542 = v503 | 0x8000000000000000;
    v541[0] = v501;
    goto LABEL_392;
  }
  HIBYTE(v542) = v499;
  v501 = v541;
  if (v499)
LABEL_392:
    memmove(v501, v498, (size_t)v500);
  *((_BYTE *)v500 + (_QWORD)v501) = 0;
  v504 = (_QWORD *)operator new();
  *v504 = &off_250ADF240;
  v504[1] = &v641;
  sub_23961580C((uint64_t)v639, (uint64_t)v541, (uint64_t)v504);
  strcpy(v649, "W6!0\b126#\"%2\b#%>690\";6#>89\b%6#>8\b>9\b:6$<");
  sub_2396F08F4((unsigned __int8 *)v649, *(double *)"9\b%6#>8\b>9\b:6$<", *(int16x8_t *)"690\";6#>89\b%6#>8\b>9\b:6$<",
    v505,
    v506);
  v508 = v507;
  v509 = strlen(v507);
  if (v509 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v510 = (void *)v509;
  if (v509 >= 0x17)
  {
    v512 = (v509 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v509 | 7) != 0x17)
      v512 = v509 | 7;
    v513 = v512 + 1;
    v511 = operator new(v512 + 1);
    v539[1] = v510;
    v540 = v513 | 0x8000000000000000;
    v539[0] = v511;
    goto LABEL_400;
  }
  HIBYTE(v540) = v509;
  v511 = v539;
  if (v509)
LABEL_400:
    memmove(v511, v508, (size_t)v510);
  *((_BYTE *)v510 + (_QWORD)v511) = 0;
  v514 = (_QWORD *)operator new();
  *v514 = &off_250AE0670;
  v514[1] = a1 + 472;
  sub_23961580C((uint64_t)v639, (uint64_t)v539, (uint64_t)v514);
  v518 = v517;
  v519 = strlen(v517);
  if (v519 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v520 = (void *)v519;
  if (v519 >= 0x17)
  {
    v522 = (v519 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v519 | 7) != 0x17)
      v522 = v519 | 7;
    v523 = v522 + 1;
    v521 = operator new(v522 + 1);
    __p[1] = v520;
    v538 = v523 | 0x8000000000000000;
    __p[0] = v521;
    goto LABEL_408;
  }
  HIBYTE(v538) = v519;
  v521 = __p;
  if (v519)
LABEL_408:
    memmove(v521, v518, (size_t)v520);
  *((_BYTE *)v520 + (_QWORD)v521) = 0;
  v524 = (_QWORD *)operator new();
  *v524 = &off_250AE0670;
  v524[1] = a1 + 476;
  sub_23961580C((uint64_t)v639, (uint64_t)__p, (uint64_t)v524);
  if (SHIBYTE(v538) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v540) & 0x80000000) == 0)
    {
LABEL_411:
      if ((SHIBYTE(v542) & 0x80000000) == 0)
        goto LABEL_412;
      goto LABEL_464;
    }
  }
  else if ((SHIBYTE(v540) & 0x80000000) == 0)
  {
    goto LABEL_411;
  }
  operator delete(v539[0]);
  if ((SHIBYTE(v542) & 0x80000000) == 0)
  {
LABEL_412:
    if ((SHIBYTE(v544) & 0x80000000) == 0)
      goto LABEL_413;
    goto LABEL_465;
  }
LABEL_464:
  operator delete(v541[0]);
  if ((SHIBYTE(v544) & 0x80000000) == 0)
  {
LABEL_413:
    if ((SHIBYTE(v546) & 0x80000000) == 0)
      goto LABEL_414;
    goto LABEL_466;
  }
LABEL_465:
  operator delete(v543[0]);
  if ((SHIBYTE(v546) & 0x80000000) == 0)
  {
LABEL_414:
    if ((SHIBYTE(v548) & 0x80000000) == 0)
      goto LABEL_415;
    goto LABEL_467;
  }
LABEL_466:
  operator delete(v545[0]);
  if ((SHIBYTE(v548) & 0x80000000) == 0)
  {
LABEL_415:
    if ((SHIBYTE(v550) & 0x80000000) == 0)
      goto LABEL_416;
    goto LABEL_468;
  }
LABEL_467:
  operator delete(v547[0]);
  if ((SHIBYTE(v550) & 0x80000000) == 0)
  {
LABEL_416:
    if ((SHIBYTE(v552) & 0x80000000) == 0)
      goto LABEL_417;
    goto LABEL_469;
  }
LABEL_468:
  operator delete(v549[0]);
  if ((SHIBYTE(v552) & 0x80000000) == 0)
  {
LABEL_417:
    if ((SHIBYTE(v554) & 0x80000000) == 0)
      goto LABEL_418;
    goto LABEL_470;
  }
LABEL_469:
  operator delete(v551[0]);
  if ((SHIBYTE(v554) & 0x80000000) == 0)
  {
LABEL_418:
    if ((SHIBYTE(v556) & 0x80000000) == 0)
      goto LABEL_419;
    goto LABEL_471;
  }
LABEL_470:
  operator delete(v553[0]);
  if ((SHIBYTE(v556) & 0x80000000) == 0)
  {
LABEL_419:
    if ((SHIBYTE(v558) & 0x80000000) == 0)
      goto LABEL_420;
    goto LABEL_472;
  }
LABEL_471:
  operator delete(v555[0]);
  if ((SHIBYTE(v558) & 0x80000000) == 0)
  {
LABEL_420:
    if ((SHIBYTE(v560) & 0x80000000) == 0)
      goto LABEL_421;
    goto LABEL_473;
  }
LABEL_472:
  operator delete(v557[0]);
  if ((SHIBYTE(v560) & 0x80000000) == 0)
  {
LABEL_421:
    if ((SHIBYTE(v562) & 0x80000000) == 0)
      goto LABEL_422;
    goto LABEL_474;
  }
LABEL_473:
  operator delete(v559[0]);
  if ((SHIBYTE(v562) & 0x80000000) == 0)
  {
LABEL_422:
    if ((SHIBYTE(v564) & 0x80000000) == 0)
      goto LABEL_423;
    goto LABEL_475;
  }
LABEL_474:
  operator delete(v561[0]);
  if ((SHIBYTE(v564) & 0x80000000) == 0)
  {
LABEL_423:
    if ((SHIBYTE(v566) & 0x80000000) == 0)
      goto LABEL_424;
    goto LABEL_476;
  }
LABEL_475:
  operator delete(v563[0]);
  if ((SHIBYTE(v566) & 0x80000000) == 0)
  {
LABEL_424:
    if ((SHIBYTE(v568) & 0x80000000) == 0)
      goto LABEL_425;
    goto LABEL_477;
  }
LABEL_476:
  operator delete(v565[0]);
  if ((SHIBYTE(v568) & 0x80000000) == 0)
  {
LABEL_425:
    if ((SHIBYTE(v570) & 0x80000000) == 0)
      goto LABEL_426;
    goto LABEL_478;
  }
LABEL_477:
  operator delete(v567[0]);
  if ((SHIBYTE(v570) & 0x80000000) == 0)
  {
LABEL_426:
    if ((SHIBYTE(v572) & 0x80000000) == 0)
      goto LABEL_427;
    goto LABEL_479;
  }
LABEL_478:
  operator delete(v569[0]);
  if ((SHIBYTE(v572) & 0x80000000) == 0)
  {
LABEL_427:
    if ((SHIBYTE(v574) & 0x80000000) == 0)
      goto LABEL_428;
    goto LABEL_480;
  }
LABEL_479:
  operator delete(v571[0]);
  if ((SHIBYTE(v574) & 0x80000000) == 0)
  {
LABEL_428:
    if ((SHIBYTE(v576) & 0x80000000) == 0)
      goto LABEL_429;
    goto LABEL_481;
  }
LABEL_480:
  operator delete(v573[0]);
  if ((SHIBYTE(v576) & 0x80000000) == 0)
  {
LABEL_429:
    if ((SHIBYTE(v578) & 0x80000000) == 0)
      goto LABEL_430;
    goto LABEL_482;
  }
LABEL_481:
  operator delete(v575[0]);
  if ((SHIBYTE(v578) & 0x80000000) == 0)
  {
LABEL_430:
    if ((SHIBYTE(v580) & 0x80000000) == 0)
      goto LABEL_431;
    goto LABEL_483;
  }
LABEL_482:
  operator delete(v577[0]);
  if ((SHIBYTE(v580) & 0x80000000) == 0)
  {
LABEL_431:
    if ((SHIBYTE(v582) & 0x80000000) == 0)
      goto LABEL_432;
    goto LABEL_484;
  }
LABEL_483:
  operator delete(v579[0]);
  if ((SHIBYTE(v582) & 0x80000000) == 0)
  {
LABEL_432:
    if ((SHIBYTE(v584) & 0x80000000) == 0)
      goto LABEL_433;
    goto LABEL_485;
  }
LABEL_484:
  operator delete(v581[0]);
  if ((SHIBYTE(v584) & 0x80000000) == 0)
  {
LABEL_433:
    if ((SHIBYTE(v586) & 0x80000000) == 0)
      goto LABEL_434;
    goto LABEL_486;
  }
LABEL_485:
  operator delete(v583[0]);
  if ((SHIBYTE(v586) & 0x80000000) == 0)
  {
LABEL_434:
    if ((SHIBYTE(v588) & 0x80000000) == 0)
      goto LABEL_435;
    goto LABEL_487;
  }
LABEL_486:
  operator delete(v585[0]);
  if ((SHIBYTE(v588) & 0x80000000) == 0)
  {
LABEL_435:
    if ((SHIBYTE(v590) & 0x80000000) == 0)
      goto LABEL_436;
    goto LABEL_488;
  }
LABEL_487:
  operator delete(v587[0]);
  if ((SHIBYTE(v590) & 0x80000000) == 0)
  {
LABEL_436:
    if ((SHIBYTE(v592) & 0x80000000) == 0)
      goto LABEL_437;
    goto LABEL_489;
  }
LABEL_488:
  operator delete(v589[0]);
  if ((SHIBYTE(v592) & 0x80000000) == 0)
  {
LABEL_437:
    if ((SHIBYTE(v594) & 0x80000000) == 0)
      goto LABEL_438;
    goto LABEL_490;
  }
LABEL_489:
  operator delete(v591[0]);
  if ((SHIBYTE(v594) & 0x80000000) == 0)
  {
LABEL_438:
    if ((SHIBYTE(v596) & 0x80000000) == 0)
      goto LABEL_439;
    goto LABEL_491;
  }
LABEL_490:
  operator delete(v593[0]);
  if ((SHIBYTE(v596) & 0x80000000) == 0)
  {
LABEL_439:
    if ((SHIBYTE(v598) & 0x80000000) == 0)
      goto LABEL_440;
    goto LABEL_492;
  }
LABEL_491:
  operator delete(v595[0]);
  if ((SHIBYTE(v598) & 0x80000000) == 0)
  {
LABEL_440:
    if ((SHIBYTE(v600) & 0x80000000) == 0)
      goto LABEL_441;
    goto LABEL_493;
  }
LABEL_492:
  operator delete(v597[0]);
  if ((SHIBYTE(v600) & 0x80000000) == 0)
  {
LABEL_441:
    if ((SHIBYTE(v602) & 0x80000000) == 0)
      goto LABEL_442;
    goto LABEL_494;
  }
LABEL_493:
  operator delete(v599[0]);
  if ((SHIBYTE(v602) & 0x80000000) == 0)
  {
LABEL_442:
    if ((SHIBYTE(v604) & 0x80000000) == 0)
      goto LABEL_443;
    goto LABEL_495;
  }
LABEL_494:
  operator delete(v601[0]);
  if ((SHIBYTE(v604) & 0x80000000) == 0)
  {
LABEL_443:
    if ((SHIBYTE(v606) & 0x80000000) == 0)
      goto LABEL_444;
    goto LABEL_496;
  }
LABEL_495:
  operator delete(v603[0]);
  if ((SHIBYTE(v606) & 0x80000000) == 0)
  {
LABEL_444:
    if ((SHIBYTE(v608) & 0x80000000) == 0)
      goto LABEL_445;
    goto LABEL_497;
  }
LABEL_496:
  operator delete(v605[0]);
  if ((SHIBYTE(v608) & 0x80000000) == 0)
  {
LABEL_445:
    if ((SHIBYTE(v610) & 0x80000000) == 0)
      goto LABEL_446;
    goto LABEL_498;
  }
LABEL_497:
  operator delete(v607[0]);
  if ((SHIBYTE(v610) & 0x80000000) == 0)
  {
LABEL_446:
    if ((SHIBYTE(v612) & 0x80000000) == 0)
      goto LABEL_447;
    goto LABEL_499;
  }
LABEL_498:
  operator delete(v609[0]);
  if ((SHIBYTE(v612) & 0x80000000) == 0)
  {
LABEL_447:
    if ((SHIBYTE(v614) & 0x80000000) == 0)
      goto LABEL_448;
    goto LABEL_500;
  }
LABEL_499:
  operator delete(v611[0]);
  if ((SHIBYTE(v614) & 0x80000000) == 0)
  {
LABEL_448:
    if ((SHIBYTE(v616) & 0x80000000) == 0)
      goto LABEL_449;
    goto LABEL_501;
  }
LABEL_500:
  operator delete(v613[0]);
  if ((SHIBYTE(v616) & 0x80000000) == 0)
  {
LABEL_449:
    if ((SHIBYTE(v618) & 0x80000000) == 0)
      goto LABEL_450;
    goto LABEL_502;
  }
LABEL_501:
  operator delete(v615[0]);
  if ((SHIBYTE(v618) & 0x80000000) == 0)
  {
LABEL_450:
    if ((SHIBYTE(v620) & 0x80000000) == 0)
      goto LABEL_451;
    goto LABEL_503;
  }
LABEL_502:
  operator delete(v617[0]);
  if ((SHIBYTE(v620) & 0x80000000) == 0)
  {
LABEL_451:
    if ((SHIBYTE(v622) & 0x80000000) == 0)
      goto LABEL_452;
    goto LABEL_504;
  }
LABEL_503:
  operator delete(v619[0]);
  if ((SHIBYTE(v622) & 0x80000000) == 0)
  {
LABEL_452:
    if ((SHIBYTE(v624) & 0x80000000) == 0)
      goto LABEL_453;
    goto LABEL_505;
  }
LABEL_504:
  operator delete(v621[0]);
  if ((SHIBYTE(v624) & 0x80000000) == 0)
  {
LABEL_453:
    if ((SHIBYTE(v626) & 0x80000000) == 0)
      goto LABEL_454;
    goto LABEL_506;
  }
LABEL_505:
  operator delete(v623[0]);
  if ((SHIBYTE(v626) & 0x80000000) == 0)
  {
LABEL_454:
    if ((SHIBYTE(v628) & 0x80000000) == 0)
      goto LABEL_455;
    goto LABEL_507;
  }
LABEL_506:
  operator delete(v625[0]);
  if ((SHIBYTE(v628) & 0x80000000) == 0)
  {
LABEL_455:
    if ((SHIBYTE(v630) & 0x80000000) == 0)
      goto LABEL_456;
    goto LABEL_508;
  }
LABEL_507:
  operator delete(v627[0]);
  if ((SHIBYTE(v630) & 0x80000000) == 0)
  {
LABEL_456:
    if ((SHIBYTE(v632) & 0x80000000) == 0)
      goto LABEL_457;
    goto LABEL_509;
  }
LABEL_508:
  operator delete(v629[0]);
  if ((SHIBYTE(v632) & 0x80000000) == 0)
  {
LABEL_457:
    if ((SHIBYTE(v634) & 0x80000000) == 0)
      goto LABEL_458;
    goto LABEL_510;
  }
LABEL_509:
  operator delete(v631[0]);
  if ((SHIBYTE(v634) & 0x80000000) == 0)
  {
LABEL_458:
    if ((SHIBYTE(v636) & 0x80000000) == 0)
      goto LABEL_459;
LABEL_511:
    operator delete(v635[0]);
    if ((SHIBYTE(v638) & 0x80000000) == 0)
      goto LABEL_460;
    goto LABEL_512;
  }
LABEL_510:
  operator delete(v633[0]);
  if (SHIBYTE(v636) < 0)
    goto LABEL_511;
LABEL_459:
  if ((SHIBYTE(v638) & 0x80000000) == 0)
    goto LABEL_460;
LABEL_512:
  operator delete(__dst[0]);
LABEL_460:
  sub_23959479C((uint64_t)v639, a2);
  *(_BYTE *)(a1 + 357) = BYTE4(v641);
  *(_DWORD *)(a1 + 448) = v641;
  sub_239ACBA38((_QWORD **)&v670, (unint64_t *)v645, v646);
  v525 = a1 + 312;
  sub_239421038(a1 + 304, *(_QWORD **)(a1 + 312));
  v526 = (_QWORD *)*((_QWORD *)&v670 + 1);
  *(_QWORD *)(a1 + 304) = v670;
  *(_QWORD *)(a1 + 312) = v526;
  v527 = v671;
  *(_QWORD *)(a1 + 320) = v671;
  if (v527)
  {
    v526[2] = v525;
    *(_QWORD *)&v670 = (char *)&v670 + 8;
    *((_QWORD *)&v670 + 1) = 0;
    *(_QWORD *)&v671 = 0;
    v526 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 304) = v525;
  }
  sub_239421038((uint64_t)&v670, v526);
  sub_239ACBA38((_QWORD **)&v670, (unint64_t *)v642, v643);
  v528 = a1 + 336;
  sub_239421038(a1 + 328, *(_QWORD **)(a1 + 336));
  v529 = (_QWORD *)*((_QWORD *)&v670 + 1);
  *(_QWORD *)(a1 + 328) = v670;
  *(_QWORD *)(a1 + 336) = v529;
  v530 = v671;
  *(_QWORD *)(a1 + 344) = v671;
  if (v530)
  {
    v529[2] = v528;
    *(_QWORD *)&v670 = (char *)&v670 + 8;
    *((_QWORD *)&v670 + 1) = 0;
    *(_QWORD *)&v671 = 0;
    v529 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 328) = v528;
  }
  sub_239421038((uint64_t)&v670, v529);
  v531 = v640;
  if (v640)
  {
    do
    {
      v532 = v531[5];
      if (v532)
        (*(void (**)(uint64_t))(*(_QWORD *)v532 + 8))(v532);
      v531 = (_QWORD *)*v531;
    }
    while (v531);
    v533 = (void **)v640;
    if (v640)
    {
      do
      {
        v536 = (void **)*v533;
        if (*((char *)v533 + 39) < 0)
          operator delete(v533[2]);
        operator delete(v533);
        v533 = v536;
      }
      while (v536);
    }
  }
  v534 = v639[0];
  v639[0] = 0;
  if (v534)
    operator delete(v534);
  if (v642)
  {
    v643 = (unint64_t *)v642;
    operator delete(v642);
  }
  if (v645)
  {
    v646 = (unint64_t *)v645;
    operator delete(v645);
  }
  return a2;
}

void sub_239ACB060(_Unwind_Exception *a1)
{
  void *v2;
  void *v3;

  sub_2395905C0((uint64_t)&STACK[0x4C8]);
  v2 = (void *)STACK[0x500];
  if (STACK[0x500])
  {
    STACK[0x508] = (unint64_t)v2;
    operator delete(v2);
    v3 = (void *)STACK[0x518];
    if (!STACK[0x518])
LABEL_3:
      _Unwind_Resume(a1);
  }
  else
  {
    v3 = (void *)STACK[0x518];
    if (!STACK[0x518])
      goto LABEL_3;
  }
  STACK[0x520] = (unint64_t)v3;
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_239ACB964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0)
    JUMPOUT(0x239ACB464);
  JUMPOUT(0x239ACB1D8);
}

int8x16_t sub_239ACB974(unsigned __int8 *a1, int16x8_t a2, double a3, double a4, int16x8_t a5)
{
  unsigned int v5;
  __int32 v6;
  int16x8_t v7;
  int32x4_t v8;
  int8x16_t v9;
  int32x4_t v10;
  int16x8_t v11;
  int32x4_t v12;
  int8x16_t result;

  v5 = *a1;
  v6 = a1[10];
  a2.i32[0] = v5;
  v7 = a2;
  *(__int16 *)((char *)a2.i16 + 1) = a1[25];
  a5.i32[0] = a1[26];
  a5.i8[4] = a1[27];
  *(__int16 *)((char *)a5.i16 + 1) = a5.u8[4];
  v8 = (int32x4_t)vzip1q_s16(a2, a5);
  a5.i32[0] = *((_DWORD *)a1 + 7);
  v9 = (int8x16_t)vzip1q_s32(v8, (int32x4_t)a5);
  a5.i64[0] = *(_QWORD *)(a1 + 17);
  a5.i8[8] = *a1;
  a5.i8[15] = a1[32];
  v10 = (int32x4_t)vqtbl1q_s8((int8x16_t)a5, (int8x16_t)xmmword_239EC65D0);
  v11 = (int16x8_t)veorq_s8(vqtbl1q_s8(v9, (int8x16_t)xmmword_239EC65C0), (int8x16_t)v10);
  *(int16x8_t *)(a1 + 17) = v11;
  *(int8x8_t *)v10.i8 = vdup_n_s8(v5);
  *(int8x8_t *)v11.i8 = veor_s8(*(int8x8_t *)v10.i8, *(int8x8_t *)(a1 + 33));
  v10.i32[0] = *((_DWORD *)a1 + 3);
  *(_QWORD *)(a1 + 33) = v11.i64[0];
  a1[41] = 0;
  v7.i8[1] = a1[9];
  v11.i32[0] = v6;
  v11.i8[4] = a1[11];
  v11.i8[1] = v11.i8[4];
  v12 = (int32x4_t)vzip1q_s16(v7, v11);
  v7.i64[0] = *(_QWORD *)(a1 + 1);
  v7.i8[8] = v5;
  v7.i8[15] = a1[16];
  result = veorq_s8(vqtbl1q_s8((int8x16_t)vzip1q_s32(v12, v10), (int8x16_t)xmmword_239EC65C0), vqtbl1q_s8((int8x16_t)v7, (int8x16_t)xmmword_239EC65D0));
  *(int8x16_t *)(a1 + 1) = result;
  return result;
}

_QWORD **sub_239ACBA38(_QWORD **a1, unint64_t *a2, unint64_t *a3)
{
  _QWORD *v4;
  unint64_t *v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;

  a1[1] = 0;
  v4 = a1 + 1;
  a1[2] = 0;
  *a1 = a1 + 1;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      v7 = (uint64_t **)sub_239A63130(a1, v4, &v14, &v13, *v6);
      if (!*v7)
      {
        v8 = v7;
        v9 = (uint64_t *)operator new(0x28uLL);
        v9[4] = *v6;
        v10 = v14;
        *v9 = 0;
        v9[1] = 0;
        v9[2] = v10;
        *v8 = v9;
        v11 = (_QWORD *)**a1;
        if (v11)
        {
          *a1 = v11;
          v9 = *v8;
        }
        sub_2394213B8(a1[1], v9);
        a1[2] = (_QWORD *)((char *)a1[2] + 1);
      }
      ++v6;
    }
    while (v6 != a3);
  }
  return a1;
}

void sub_239ACBB14(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239421038(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_239ACBB30(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ACBB54(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = v4 + 56;
  if (a3)
    sub_2395DA64C(v4, v5, (uint64_t)a2, 7uLL);
  else
    sub_2395A34D0(v4, v5, a2);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239ACBBAC(uint64_t a1, _QWORD *a2, int a3)
{
  char **v4;
  int v5;
  unsigned int v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  char **v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char *v25;
  unsigned int v26;
  int v27;
  int v28;
  unint64_t v29;
  char *v30;
  int i;
  unsigned int v32;
  char v33;
  unsigned int v34;
  int v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD v43[11];
  char v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  std::string v48;
  uint64_t v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v4 = *(char ***)(a1 + 8);
  if (a3)
  {
    v5 = std::istream::get();
    if ((v5 - 196) > 2)
    {
      v19 = v4;
      if ((v5 & 0xFFFFFFFE) == 0xDC)
      {
        v20 = sub_2396162D4((uint64_t)a2, v5);
        if (v20)
        {
          v21 = v20;
          v41 = 0;
          sub_2395A1290((uint64_t)&v41, (uint64_t)a2, 1);
          *v19 = v41;
          if (v21 != 1)
          {
            v41 = 0;
            sub_2395A1290((uint64_t)&v41, (uint64_t)a2, 1);
            v19[1] = v41;
            if (v21 != 2)
            {
              v41 = 0;
              sub_2395A1290((uint64_t)&v41, (uint64_t)a2, 1);
              v19[2] = v41;
              if (v21 != 3)
              {
                v41 = 0;
                sub_2395A1290((uint64_t)&v41, (uint64_t)a2, 1);
                v19[3] = v41;
                if (v21 != 4)
                {
                  v41 = 0;
                  sub_2395A1290((uint64_t)&v41, (uint64_t)a2, 1);
                  v19[4] = v41;
                  if (v21 != 5)
                  {
                    v41 = 0;
                    sub_2395A1290((uint64_t)&v41, (uint64_t)a2, 1);
                    v19[5] = v41;
                    if (v21 != 6)
                    {
                      v41 = 0;
                      sub_2395A1290((uint64_t)&v41, (uint64_t)a2, 1);
                      v19[6] = v41;
                      if (v21 != 7)
                      {
                        v22 = v21 - 7;
                        do
                        {
                          v41 = 0;
                          sub_2395A1290((uint64_t)&v41, (uint64_t)a2, 1);
                          --v22;
                        }
                        while (v22);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      else if (v5 == 223)
      {
        v47 = 0;
        memset(&v48, 0, sizeof(v48));
        std::istream::read();
        std::istream::read();
        std::istream::read();
        std::istream::read();
      }
    }
    else
    {
      v6 = sub_2396162D4((uint64_t)a2, v5);
      v41 = 0;
      v42 = 0;
      v43[0] = 0;
      sub_23945E108((uint64_t)&v41, v6);
      std::istream::read();
      v7 = v41;
      v8 = v42 - v41;
      if (v42 != v41)
      {
        v9 = v8 >> 3;
        if ((unint64_t)(v8 >> 3) <= 1)
          v9 = 1;
        *v4 = *(char **)v41;
        if ((unint64_t)v8 < 0x10)
          goto LABEL_15;
        v4[1] = (char *)*((_QWORD *)v7 + 1);
        if (v9 == 2)
          goto LABEL_15;
        v4[2] = (char *)*((_QWORD *)v7 + 2);
        if (v9 == 3)
          goto LABEL_15;
        v4[3] = (char *)*((_QWORD *)v7 + 3);
        if (v9 == 4)
          goto LABEL_15;
        v4[4] = (char *)*((_QWORD *)v7 + 4);
        if (v9 == 5)
          goto LABEL_15;
        v4[5] = (char *)*((_QWORD *)v7 + 5);
        if (v9 == 6)
          goto LABEL_15;
        v4[6] = (char *)*((_QWORD *)v7 + 6);
        v10 = v9 - 7;
        if (!v10)
          goto LABEL_15;
        do
          --v10;
        while (v10);
      }
      if (v7)
      {
LABEL_15:
        v42 = v7;
        operator delete(v7);
      }
    }
  }
  else
  {
    v11 = a2 + 4;
    v12 = MEMORY[0x24BDAC740];
    while (1)
    {
      v13 = std::istream::peek();
      v14 = v13 <= 0x7F ? *(_DWORD *)(v12 + 4 * v13 + 60) & 0x4000 : __maskrune(v13, 0x4000uLL);
      v15 = *(_QWORD *)(*a2 - 24);
      if (!v14)
        break;
      if (!*(_DWORD *)((char *)v11 + v15))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v15 + 32) & 2) == 0 && std::istream::get() == 91)
    {
      while (1)
      {
        v16 = std::istream::peek();
        v17 = v16 <= 0x7F ? *(_DWORD *)(v12 + 4 * v16 + 60) & 0x4000 : __maskrune(v16, 0x4000uLL);
        v18 = *(_QWORD *)(*a2 - 24);
        if (!v17)
          break;
        if (!*(_DWORD *)((char *)v11 + v18))
          std::istream::get();
      }
      if ((*((_BYTE *)a2 + v18 + 32) & 2) == 0)
      {
        v23 = 0;
        v24 = 0;
        v25 = (char *)*MEMORY[0x24BEDB7F0];
        v39 = *(char **)(MEMORY[0x24BEDB7F0] + 64);
        v40 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v38 = MEMORY[0x24BEDB848] + 16;
        while ((*((_BYTE *)v11 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && (v24 & 1) == 0)
        {
          while (1)
          {
            v26 = std::istream::peek();
            v27 = v26 <= 0x7F ? *(_DWORD *)(v12 + 4 * v26 + 60) & 0x4000 : __maskrune(v26, 0x4000uLL);
            v28 = *(_DWORD *)((char *)v11 + *(_QWORD *)(*a2 - 24));
            if (!v27)
              break;
            if (!v28)
              std::istream::get();
          }
          if ((v28 & 2) == 0)
          {
            sub_2394988CC((uint64_t)&v41);
            v46 = v43;
            if (sub_239596128(a2))
            {
              v29 = v23;
              v30 = (char *)v43 + *(_QWORD *)(v43[0] - 24);
              if ((v30[32] & 5) == 0)
              {
                (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v30 + 5) + 32))(&v48, *((_QWORD *)v30 + 5), 0, 1, 16);
                if (v49 >= 1)
                {
                  v48.__r_.__value_.__r.__words[0] = 0;
                  MEMORY[0x23B83DCEC](&v41, &v48);
                  if (v23 <= 6)
                    v4[v23] = (char *)v48.__r_.__value_.__r.__words[0];
                  v29 = v23 + 1;
                }
              }
              for (i = std::istream::peek(); ; i = std::istream::peek())
              {
                v32 = i << 24;
                if (i << 24 == 738197504)
                  goto LABEL_71;
                if (v32 == 1560281088)
                {
                  v23 = v29;
                  v24 = 1;
                  goto LABEL_73;
                }
                if (v32 <= 0x7F000000)
                {
                  if ((*(_DWORD *)(v12 + 4 * (char)i + 60) & 0x4000) == 0)
                    break;
                }
                else if (!__maskrune((char)i, 0x4000uLL))
                {
                  break;
                }
                if ((*((_BYTE *)v11 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                  break;
                std::istream::get();
              }
              if (v32 == 738197504)
              {
LABEL_71:
                std::istream::get();
                v23 = v29;
                v24 = 0;
LABEL_73:
                v33 = 1;
                goto LABEL_76;
              }
              v23 = v29;
            }
            v33 = 0;
            v24 = 0;
LABEL_76:
            v41 = v25;
            *(char **)((char *)&v41 + *((_QWORD *)v25 - 3)) = v39;
            v43[0] = v40;
            v43[1] = v38;
            if (v44 < 0)
              operator delete((void *)v43[9]);
            std::streambuf::~streambuf();
            std::iostream::~basic_iostream();
            MEMORY[0x23B83E250](&v45);
            if ((v33 & 1) != 0)
              continue;
          }
          return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
        }
        while (1)
        {
          v34 = std::istream::peek();
          v35 = v34 <= 0x7F ? *(_DWORD *)(v12 + 4 * v34 + 60) & 0x4000 : __maskrune(v34, 0x4000uLL);
          v36 = *(_QWORD *)(*a2 - 24);
          if (!v35)
            break;
          if (!*(_DWORD *)((char *)v11 + v36))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v36 + 32) & 2) == 0)
          std::istream::get();
      }
    }
  }
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239ACC530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56)
{
  uint64_t v56;

  if (*(char *)(v56 - 209) < 0)
  {
    operator delete(*(void **)(v56 - 232));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239ACC600(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  const char *v13;
  size_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int8x16_t *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  const char *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int8x16_t *v38;
  size_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int8x16_t v45;
  double v46;
  int32x4_t v47;
  const char *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  const char *v56;
  size_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  int16x8_t v63;
  const char *v64;
  const char *v65;
  size_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  int8x16_t v72;
  double v73;
  int32x4_t v74;
  const char *v75;
  const char *v76;
  size_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  int8x16_t v83;
  double v84;
  int32x4_t v85;
  const char *v86;
  const char *v87;
  size_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  int8x16_t v94;
  double v95;
  int32x4_t v96;
  const char *v97;
  const char *v98;
  size_t v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  int8x16_t v105;
  double v106;
  int32x4_t v107;
  const char *v108;
  const char *v109;
  size_t v110;
  void *v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  int8x16_t v116;
  double v117;
  int32x4_t v118;
  const char *v119;
  const char *v120;
  size_t v121;
  void *v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  int8x16_t v127;
  double v128;
  int32x4_t v129;
  const char *v130;
  const char *v131;
  size_t v132;
  void *v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  int8x16_t v138;
  double v139;
  int32x4_t v140;
  const char *v141;
  const char *v142;
  size_t v143;
  void *v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  int8x16_t v149;
  double v150;
  int32x4_t v151;
  const char *v152;
  const char *v153;
  size_t v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  const char *v160;
  const char *v161;
  size_t v162;
  void *v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  int8x16_t v168;
  double v169;
  int32x4_t v170;
  const char *v171;
  const char *v172;
  size_t v173;
  void *v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  int8x16_t v179;
  double v180;
  int32x4_t v181;
  const char *v182;
  const char *v183;
  size_t v184;
  void *v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  double v190;
  double v191;
  int16x8_t v192;
  const char *v193;
  const char *v194;
  size_t v195;
  void *v196;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  double v201;
  int16x8_t v202;
  const char *v203;
  const char *v204;
  size_t v205;
  void *v206;
  void *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  int8x16_t v211;
  double v212;
  int32x4_t v213;
  const char *v214;
  const char *v215;
  size_t v216;
  void *v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  _QWORD *v221;
  double v222;
  int32x4_t v223;
  const char *v224;
  const char *v225;
  size_t v226;
  void *v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  int8x16_t v232;
  double v233;
  int32x4_t v234;
  const char *v235;
  const char *v236;
  size_t v237;
  void *v238;
  void *v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  int8x16_t v243;
  double v244;
  int32x4_t v245;
  const char *v246;
  const char *v247;
  size_t v248;
  void *v249;
  void *v250;
  uint64_t v251;
  uint64_t v252;
  _QWORD *v253;
  int8x16_t v254;
  double v255;
  int32x4_t v256;
  const char *v257;
  const char *v258;
  size_t v259;
  void *v260;
  void *v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  int8x16_t v265;
  double v266;
  int32x4_t v267;
  const char *v268;
  const char *v269;
  size_t v270;
  void *v271;
  void *v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  int8x16_t v276;
  double v277;
  int32x4_t v278;
  const char *v279;
  const char *v280;
  size_t v281;
  void *v282;
  void *v283;
  uint64_t v284;
  uint64_t v285;
  _QWORD *v286;
  int8x16_t v287;
  double v288;
  int32x4_t v289;
  const char *v290;
  const char *v291;
  size_t v292;
  void *v293;
  void *v294;
  uint64_t v295;
  uint64_t v296;
  _QWORD *v297;
  int8x16_t v298;
  double v299;
  int32x4_t v300;
  const char *v301;
  const char *v302;
  size_t v303;
  void *v304;
  void *v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  int8x16_t v309;
  double v310;
  int32x4_t v311;
  const char *v312;
  const char *v313;
  size_t v314;
  void *v315;
  void *v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  int8x16_t v320;
  double v321;
  int32x4_t v322;
  const char *v323;
  const char *v324;
  size_t v325;
  void *v326;
  void *v327;
  uint64_t v328;
  uint64_t v329;
  _QWORD *v330;
  double v331;
  int16x8_t v332;
  int16x8_t v333;
  const char *v334;
  const char *v335;
  size_t v336;
  void *v337;
  void *v338;
  uint64_t v339;
  uint64_t v340;
  _QWORD *v341;
  int16x8_t v342;
  int16x8_t v343;
  const char *v344;
  const char *v345;
  size_t v346;
  void *v347;
  void *v348;
  uint64_t v349;
  uint64_t v350;
  _QWORD *v351;
  const char *v352;
  const char *v353;
  size_t v354;
  void *v355;
  void *v356;
  uint64_t v357;
  uint64_t v358;
  _QWORD *v359;
  int8x16_t v360;
  double v361;
  int32x4_t v362;
  const char *v363;
  const char *v364;
  size_t v365;
  void *v366;
  void *v367;
  uint64_t v368;
  uint64_t v369;
  _QWORD *v370;
  double v371;
  int32x4_t v372;
  const char *v373;
  const char *v374;
  size_t v375;
  void *v376;
  void *v377;
  uint64_t v378;
  uint64_t v379;
  _QWORD *v380;
  int8x16_t v381;
  double v382;
  int32x4_t v383;
  const char *v384;
  const char *v385;
  size_t v386;
  void *v387;
  void *v388;
  uint64_t v389;
  uint64_t v390;
  _QWORD *v391;
  int8x16_t v392;
  double v393;
  int32x4_t v394;
  const char *v395;
  const char *v396;
  size_t v397;
  void *v398;
  void *v399;
  uint64_t v400;
  uint64_t v401;
  _QWORD *v402;
  int8x16_t v403;
  double v404;
  int32x4_t v405;
  const char *v406;
  const char *v407;
  size_t v408;
  void *v409;
  void *v410;
  uint64_t v411;
  uint64_t v412;
  _QWORD *v413;
  int8x16_t v414;
  double v415;
  int32x4_t v416;
  const char *v417;
  const char *v418;
  size_t v419;
  void *v420;
  void *v421;
  uint64_t v422;
  uint64_t v423;
  _QWORD *v424;
  int8x16_t v425;
  double v426;
  int32x4_t v427;
  const char *v428;
  const char *v429;
  size_t v430;
  void *v431;
  void *v432;
  uint64_t v433;
  uint64_t v434;
  _QWORD *v435;
  int8x16_t *v436;
  size_t v437;
  void *v438;
  void *v439;
  uint64_t v440;
  uint64_t v441;
  _QWORD *v442;
  int8x16_t v443;
  double v444;
  int32x4_t v445;
  const char *v446;
  const char *v447;
  size_t v448;
  void *v449;
  void *v450;
  uint64_t v451;
  uint64_t v452;
  _QWORD *v453;
  const char *v454;
  const char *v455;
  size_t v456;
  void *v457;
  void *v458;
  uint64_t v459;
  uint64_t v460;
  _QWORD *v461;
  int8x16_t v462;
  double v463;
  int32x4_t v464;
  const char *v465;
  const char *v466;
  size_t v467;
  void *v468;
  void *v469;
  uint64_t v470;
  uint64_t v471;
  _QWORD *v472;
  double v473;
  double v474;
  int16x8_t v475;
  const char *v476;
  const char *v477;
  size_t v478;
  void *v479;
  void *v480;
  uint64_t v481;
  uint64_t v482;
  _QWORD *v483;
  int8x16_t v484;
  double v485;
  int32x4_t v486;
  const char *v487;
  const char *v488;
  size_t v489;
  void *v490;
  void *v491;
  uint64_t v492;
  uint64_t v493;
  _QWORD *v494;
  int8x16_t v495;
  double v496;
  int32x4_t v497;
  const char *v498;
  const char *v499;
  size_t v500;
  void *v501;
  void *v502;
  uint64_t v503;
  uint64_t v504;
  _QWORD *v505;
  double v506;
  int16x8_t v507;
  const char *v508;
  const char *v509;
  size_t v510;
  void *v511;
  void *v512;
  uint64_t v513;
  uint64_t v514;
  _QWORD *v515;
  int16x8_t v516;
  double v517;
  int16x8_t v518;
  const char *v519;
  const char *v520;
  size_t v521;
  void *v522;
  void *v523;
  uint64_t v524;
  uint64_t v525;
  _QWORD *v526;
  _QWORD *v527;
  uint64_t v528;
  void **v529;
  void *v530;
  void **v532;
  void *v533[2];
  unint64_t v534;
  void *v535[2];
  unint64_t v536;
  void *v537[2];
  unint64_t v538;
  void *v539[2];
  unint64_t v540;
  void *v541[2];
  unint64_t v542;
  void *v543[2];
  unint64_t v544;
  void *v545[2];
  unint64_t v546;
  void *v547[2];
  unint64_t v548;
  void *v549[2];
  unint64_t v550;
  void *v551[2];
  unint64_t v552;
  void *v553[2];
  unint64_t v554;
  void *v555[2];
  unint64_t v556;
  void *v557[2];
  unint64_t v558;
  void *v559[2];
  unint64_t v560;
  void *v561[2];
  unint64_t v562;
  void *v563[2];
  unint64_t v564;
  void *v565[2];
  unint64_t v566;
  void *v567[2];
  unint64_t v568;
  void *v569[2];
  unint64_t v570;
  void *v571[2];
  unint64_t v572;
  void *v573[2];
  unint64_t v574;
  void *v575[2];
  unint64_t v576;
  void *v577[2];
  unint64_t v578;
  void *v579[2];
  unint64_t v580;
  void *v581[2];
  unint64_t v582;
  void *v583[2];
  unint64_t v584;
  void *v585[2];
  unint64_t v586;
  void *v587[2];
  unint64_t v588;
  void *v589[2];
  unint64_t v590;
  void *v591[2];
  unint64_t v592;
  void *v593[2];
  unint64_t v594;
  void *v595[2];
  unint64_t v596;
  void *v597[2];
  unint64_t v598;
  void *v599[2];
  unint64_t v600;
  void *v601[2];
  unint64_t v602;
  void *v603[2];
  unint64_t v604;
  void *v605[2];
  unint64_t v606;
  void *v607[2];
  unint64_t v608;
  void *v609[2];
  unint64_t v610;
  void *v611[2];
  unint64_t v612;
  void *v613[2];
  unint64_t v614;
  void *v615[2];
  unint64_t v616;
  void *v617[2];
  unint64_t v618;
  void *v619[2];
  unint64_t v620;
  void *v621[2];
  unint64_t v622;
  void *v623[2];
  unint64_t v624;
  void *v625[2];
  unint64_t v626;
  void *v627[2];
  unint64_t v628;
  void *v629[2];
  unint64_t v630;
  void *v631[2];
  unint64_t v632;
  void *__dst[2];
  unint64_t v634;
  void *__p[2];
  void *v636;
  int v637;
  int v638;
  void *v639[3];
  void *v640[3];
  __int128 v641;
  _OWORD v642[2];
  __int128 v643;
  char v644[32];
  unsigned __int8 v645[32];
  unsigned __int8 v646[32];
  _OWORD v647[2];
  int v648;
  _OWORD v649[2];
  uint64_t v650;
  int v651;
  __int16 v652;
  char v653;
  char v654[32];
  __int128 v655;
  __int16 v656;
  char v657[32];
  _OWORD v658[2];
  _OWORD v659[2];
  char v660[32];
  _OWORD v661[2];
  char v662[48];
  _OWORD v663[2];
  char v664[16];
  __int128 v665;
  char v666[32];
  char v667[48];
  char v668[32];
  _OWORD v669[2];
  unsigned __int8 v670[32];
  _OWORD v671[2];
  __int128 v672;
  uint64_t v673;
  _OWORD v674[2];
  _OWORD v675[2];
  _OWORD v676[2];
  _OWORD v677[2];
  _OWORD v678[2];
  _OWORD v679[2];
  char v680[48];
  _OWORD v681[2];
  int v682;
  _OWORD v683[2];
  _OWORD v684[2];
  __int128 v685;
  char v686;
  _OWORD v687[2];
  _OWORD v688[2];
  char v689[32];
  _OWORD v690[2];
  char v691[32];
  _OWORD v692[2];
  _OWORD v693[2];
  __int128 v694;
  int v695;
  uint64_t v696;
  char v697[8];
  char v698[16];
  char v699[32];
  __int128 v700;
  __int16 v701;
  _OWORD v702[2];
  __int128 v703;
  __int16 v704;
  char v705[16];
  uint64_t v706;
  char v707[8];
  uint64_t v708;

  v708 = *MEMORY[0x24BDAC8D0];
  sub_239ACFF50(v640, *(_QWORD **)(a1 + 304), (_QWORD *)(a1 + 312));
  sub_239ACFF50(v639, *(_QWORD **)(a1 + 328), (_QWORD *)(a1 + 336));
  v638 = *(unsigned __int8 *)(a1 + 357);
  v637 = *(_DWORD *)(a1 + 448);
  sub_2396157EC((uint64_t)__p, a3);
  v706 = 0x3C30320E3C243F51;
  strcpy(v707, "4#0\"");
  v6 = sub_239510ECC((uint64_t)&v706);
  v7 = strlen(v6);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    v634 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    __dst[1] = v8;
    goto LABEL_8;
  }
  HIBYTE(v634) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250AFFE48;
  v12[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  strcpy(v705, "*D_GuCGKMOY");
  v13 = sub_23958E4C8((uint64_t)v705);
  v14 = strlen(v13);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v15 = (void *)v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    v632 = v18 | 0x8000000000000000;
    v631[0] = v16;
    v631[1] = v15;
    goto LABEL_16;
  }
  HIBYTE(v632) = v14;
  v16 = v631;
  if (v14)
LABEL_16:
    memmove(v16, v13, (size_t)v15);
  *((_BYTE *)v15 + (_QWORD)v16) = 0;
  v19 = (_QWORD *)operator new();
  *v19 = &off_250AFFE48;
  v19[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v631, (uint64_t)v19);
  v703 = xmmword_239F0E636;
  v704 = 52;
  v20 = sub_239A91B18((int8x16_t *)&v703);
  v21 = strlen(v20->i8);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v630 = v25 | 0x8000000000000000;
    v629[0] = v23;
    v629[1] = v22;
    goto LABEL_24;
  }
  HIBYTE(v630) = v21;
  v23 = v629;
  if (v21)
LABEL_24:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AFFE48;
  v26[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v629, (uint64_t)v26);
  v702[0] = xmmword_239F0E648;
  *(_DWORD *)((char *)v702 + 15) = 1050116;
  sub_23958E450((uint64_t)v702, (int32x4_t)xmmword_239F0E648, v27, v28, v29);
  v31 = v30;
  v32 = strlen(v30);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v628 = v36 | 0x8000000000000000;
    v627[0] = v34;
    v627[1] = v33;
    goto LABEL_32;
  }
  HIBYTE(v628) = v32;
  v34 = v627;
  if (v32)
LABEL_32:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250AFFE48;
  v37[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v627, (uint64_t)v37);
  v700 = xmmword_239F0E65B;
  v701 = 40;
  v38 = sub_239A91B18((int8x16_t *)&v700);
  v39 = strlen(v38->i8);
  if (v39 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v40 = (void *)v39;
  if (v39 >= 0x17)
  {
    v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v39 | 7) != 0x17)
      v42 = v39 | 7;
    v43 = v42 + 1;
    v41 = operator new(v42 + 1);
    v626 = v43 | 0x8000000000000000;
    v625[0] = v41;
    v625[1] = v40;
    goto LABEL_40;
  }
  HIBYTE(v626) = v39;
  v41 = v625;
  if (v39)
LABEL_40:
    memmove(v41, v38, (size_t)v40);
  *((_BYTE *)v40 + (_QWORD)v41) = 0;
  v44 = (_QWORD *)operator new();
  *v44 = &off_250AFFE48;
  v44[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v625, (uint64_t)v44);
  strcpy(v699, "+E^Ft]JGBOt[YDANH_BDEX");
  sub_2396EFBE0((uint64_t)v699, *(int32x4_t *)"+E^Ft]JGBOt[YDANH_BDEX", v45, v46, v47);
  v49 = v48;
  v50 = strlen(v48);
  if (v50 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v51 = (void *)v50;
  if (v50 >= 0x17)
  {
    v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v50 | 7) != 0x17)
      v53 = v50 | 7;
    v54 = v53 + 1;
    v52 = operator new(v53 + 1);
    v624 = v54 | 0x8000000000000000;
    v623[0] = v52;
    v623[1] = v51;
    goto LABEL_48;
  }
  HIBYTE(v624) = v50;
  v52 = v623;
  if (v50)
LABEL_48:
    memmove(v52, v49, (size_t)v51);
  *((_BYTE *)v51 + (_QWORD)v52) = 0;
  v55 = (_QWORD *)operator new();
  *v55 = &off_250AFFE48;
  v55[1] = a1 + 48;
  sub_23961580C((uint64_t)__p, (uint64_t)v623, (uint64_t)v55);
  strcpy(v698, "!OTL~Q@HSR");
  v56 = (const char *)sub_23958E518((uint64_t)v698);
  v57 = strlen(v56);
  if (v57 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v58 = (void *)v57;
  if (v57 >= 0x17)
  {
    v60 = (v57 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v57 | 7) != 0x17)
      v60 = v57 | 7;
    v61 = v60 + 1;
    v59 = operator new(v60 + 1);
    v622 = v61 | 0x8000000000000000;
    v621[0] = v59;
    v621[1] = v58;
    goto LABEL_56;
  }
  HIBYTE(v622) = v57;
  v59 = v621;
  if (v57)
LABEL_56:
    memmove(v59, v56, (size_t)v58);
  *((_BYTE *)v58 + (_QWORD)v59) = 0;
  v62 = (_QWORD *)operator new();
  *v62 = &off_250AFFE48;
  v62[1] = a1 + 56;
  sub_23961580C((uint64_t)__p, (uint64_t)v621, (uint64_t)v62);
  v696 = 0x696B7D51637B600ELL;
  sub_23971A32C((uint64_t)&v696, v63);
  v65 = v64;
  v66 = strlen(v64);
  if (v66 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v67 = (void *)v66;
  if (v66 >= 0x17)
  {
    v69 = (v66 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v66 | 7) != 0x17)
      v69 = v66 | 7;
    v70 = v69 + 1;
    v68 = operator new(v69 + 1);
    v620 = v70 | 0x8000000000000000;
    v619[0] = v68;
    v619[1] = v67;
    goto LABEL_64;
  }
  HIBYTE(v620) = v66;
  v68 = v619;
  if (v66)
LABEL_64:
    memmove(v68, v65, (size_t)v67);
  *((_BYTE *)v67 + (_QWORD)v68) = 0;
  v71 = (_QWORD *)operator new();
  *v71 = &off_250AFFE48;
  v71[1] = a1 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v619, (uint64_t)v71);
  v694 = xmmword_239F0E684;
  v695 = 2037762;
  sub_23958E55C((uint64_t)&v694, (int32x4_t)xmmword_239F0E684, v72, v73, v74);
  v76 = v75;
  v77 = strlen(v75);
  if (v77 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v78 = (void *)v77;
  if (v77 >= 0x17)
  {
    v80 = (v77 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v77 | 7) != 0x17)
      v80 = v77 | 7;
    v81 = v80 + 1;
    v79 = operator new(v80 + 1);
    v618 = v81 | 0x8000000000000000;
    v617[0] = v79;
    v617[1] = v78;
    goto LABEL_72;
  }
  HIBYTE(v618) = v77;
  v79 = v617;
  if (v77)
LABEL_72:
    memmove(v79, v76, (size_t)v78);
  *((_BYTE *)v78 + (_QWORD)v79) = 0;
  v82 = (_QWORD *)operator new();
  *v82 = &off_250AFFE48;
  v82[1] = a1 + 72;
  sub_23961580C((uint64_t)__p, (uint64_t)v617, (uint64_t)v82);
  v693[0] = xmmword_239F0E698;
  *(_OWORD *)((char *)v693 + 15) = *(__int128 *)((char *)&xmmword_239F0E698 + 15);
  sub_2396EFF58((uint64_t)v693, *(int32x4_t *)((char *)&xmmword_239F0E698 + 15), v83, v84, v85);
  v87 = v86;
  v88 = strlen(v86);
  if (v88 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v89 = (void *)v88;
  if (v88 >= 0x17)
  {
    v91 = (v88 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v88 | 7) != 0x17)
      v91 = v88 | 7;
    v92 = v91 + 1;
    v90 = operator new(v91 + 1);
    v616 = v92 | 0x8000000000000000;
    v615[0] = v90;
    v615[1] = v89;
    goto LABEL_80;
  }
  HIBYTE(v616) = v88;
  v90 = v615;
  if (v88)
LABEL_80:
    memmove(v90, v87, (size_t)v89);
  *((_BYTE *)v89 + (_QWORD)v90) = 0;
  v93 = (_QWORD *)operator new();
  *v93 = &off_250ADF570;
  v93[1] = a1 + 80;
  sub_23961580C((uint64_t)__p, (uint64_t)v615, (uint64_t)v93);
  v692[0] = xmmword_239F0E6B7;
  *(_OWORD *)((char *)v692 + 9) = *(__int128 *)((char *)&xmmword_239F0E6B7 + 9);
  sub_2396EFC88((uint64_t)v692, *(int32x4_t *)((char *)&xmmword_239F0E6B7 + 9), v94, v95, v96);
  v98 = v97;
  v99 = strlen(v97);
  if (v99 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v100 = (void *)v99;
  if (v99 >= 0x17)
  {
    v102 = (v99 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v99 | 7) != 0x17)
      v102 = v99 | 7;
    v103 = v102 + 1;
    v101 = operator new(v102 + 1);
    v614 = v103 | 0x8000000000000000;
    v613[0] = v101;
    v613[1] = v100;
    goto LABEL_88;
  }
  HIBYTE(v614) = v99;
  v101 = v613;
  if (v99)
LABEL_88:
    memmove(v101, v98, (size_t)v100);
  *((_BYTE *)v100 + (_QWORD)v101) = 0;
  v104 = (_QWORD *)operator new();
  *v104 = &off_250ADF570;
  v104[1] = a1 + 88;
  sub_23961580C((uint64_t)__p, (uint64_t)v613, (uint64_t)v104);
  strcpy(v691, "R?73<\r& 319!\r\"7 \r;?357");
  sub_2396EFBE0((uint64_t)v691, *(int32x4_t *)"R?73<\r& 319!\r\"7 \r;?357", v105, v106, v107);
  v109 = v108;
  v110 = strlen(v108);
  if (v110 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v111 = (void *)v110;
  if (v110 >= 0x17)
  {
    v113 = (v110 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v110 | 7) != 0x17)
      v113 = v110 | 7;
    v114 = v113 + 1;
    v112 = operator new(v113 + 1);
    v612 = v114 | 0x8000000000000000;
    v611[0] = v112;
    v611[1] = v111;
    goto LABEL_96;
  }
  HIBYTE(v612) = v110;
  v112 = v611;
  if (v110)
LABEL_96:
    memmove(v112, v109, (size_t)v111);
  *((_BYTE *)v111 + (_QWORD)v112) = 0;
  v115 = (_QWORD *)operator new();
  *v115 = &off_250ADF570;
  v115[1] = a1 + 96;
  sub_23961580C((uint64_t)__p, (uint64_t)v611, (uint64_t)v115);
  v690[0] = xmmword_239F0E6E7;
  *(_DWORD *)((char *)v690 + 15) = 6584427;
  sub_23958E450((uint64_t)v690, (int32x4_t)xmmword_239F0E6E7, v116, v117, v118);
  v120 = v119;
  v121 = strlen(v119);
  if (v121 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v122 = (void *)v121;
  if (v121 >= 0x17)
  {
    v124 = (v121 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v121 | 7) != 0x17)
      v124 = v121 | 7;
    v125 = v124 + 1;
    v123 = operator new(v124 + 1);
    v610 = v125 | 0x8000000000000000;
    v609[0] = v123;
    v609[1] = v122;
    goto LABEL_104;
  }
  HIBYTE(v610) = v121;
  v123 = v609;
  if (v121)
LABEL_104:
    memmove(v123, v120, (size_t)v122);
  *((_BYTE *)v122 + (_QWORD)v123) = 0;
  v126 = (_QWORD *)operator new();
  *v126 = &off_250ADF570;
  v126[1] = a1 + 104;
  sub_23961580C((uint64_t)__p, (uint64_t)v609, (uint64_t)v126);
  strcpy(v689, ":W_[TeH_JHUPe_HHUH");
  sub_23958E450((uint64_t)v689, *(int32x4_t *)":W_[TeH_JHUPe_HHUH", v127, v128, v129);
  v131 = v130;
  v132 = strlen(v130);
  if (v132 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v133 = (void *)v132;
  if (v132 >= 0x17)
  {
    v135 = (v132 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v132 | 7) != 0x17)
      v135 = v132 | 7;
    v136 = v135 + 1;
    v134 = operator new(v135 + 1);
    v608 = v136 | 0x8000000000000000;
    v607[0] = v134;
    v607[1] = v133;
    goto LABEL_112;
  }
  HIBYTE(v608) = v132;
  v134 = v607;
  if (v132)
LABEL_112:
    memmove(v134, v131, (size_t)v133);
  *((_BYTE *)v133 + (_QWORD)v134) = 0;
  v137 = (_QWORD *)operator new();
  *v137 = &off_250ADF570;
  v137[1] = a1 + 112;
  sub_23961580C((uint64_t)__p, (uint64_t)v607, (uint64_t)v137);
  v688[0] = xmmword_239F0E70D;
  *(_QWORD *)((char *)v688 + 13) = 0x607D6060774D78;
  sub_2396EFB50((uint64_t)v688, (int32x4_t)xmmword_239F0E70D, v138, v139, v140);
  v142 = v141;
  v143 = strlen(v141);
  if (v143 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v144 = (void *)v143;
  if (v143 >= 0x17)
  {
    v146 = (v143 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v143 | 7) != 0x17)
      v146 = v143 | 7;
    v147 = v146 + 1;
    v145 = operator new(v146 + 1);
    v606 = v147 | 0x8000000000000000;
    v605[0] = v145;
    v605[1] = v144;
    goto LABEL_120;
  }
  HIBYTE(v606) = v143;
  v145 = v605;
  if (v143)
LABEL_120:
    memmove(v145, v142, (size_t)v144);
  *((_BYTE *)v144 + (_QWORD)v145) = 0;
  v148 = (_QWORD *)operator new();
  *v148 = &off_250ADF570;
  v148[1] = a1 + 136;
  sub_23961580C((uint64_t)__p, (uint64_t)v605, (uint64_t)v148);
  v687[0] = xmmword_239F0E722;
  *(_QWORD *)((char *)v687 + 13) = 0x322F3232251F2ALL;
  sub_2396EFB50((uint64_t)v687, (int32x4_t)xmmword_239F0E722, v149, v150, v151);
  v153 = v152;
  v154 = strlen(v152);
  if (v154 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v155 = (void *)v154;
  if (v154 >= 0x17)
  {
    v157 = (v154 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v154 | 7) != 0x17)
      v157 = v154 | 7;
    v158 = v157 + 1;
    v156 = operator new(v157 + 1);
    v604 = v158 | 0x8000000000000000;
    v603[0] = v156;
    v603[1] = v155;
    goto LABEL_128;
  }
  HIBYTE(v604) = v154;
  v156 = v603;
  if (v154)
LABEL_128:
    memmove(v156, v153, (size_t)v155);
  *((_BYTE *)v155 + (_QWORD)v156) = 0;
  v159 = (_QWORD *)operator new();
  *v159 = &off_250AFFE78;
  v159[1] = a1 + 120;
  sub_23961580C((uint64_t)__p, (uint64_t)v603, (uint64_t)v159);
  v685 = xmmword_239F0E737;
  v686 = 0;
  sub_2396EFA24((uint64_t)&v685);
  v161 = v160;
  v162 = strlen(v160);
  if (v162 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v163 = (void *)v162;
  if (v162 >= 0x17)
  {
    v165 = (v162 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v162 | 7) != 0x17)
      v165 = v162 | 7;
    v166 = v165 + 1;
    v164 = operator new(v165 + 1);
    v602 = v166 | 0x8000000000000000;
    v601[0] = v164;
    v601[1] = v163;
    goto LABEL_136;
  }
  HIBYTE(v602) = v162;
  v164 = v601;
  if (v162)
LABEL_136:
    memmove(v164, v161, (size_t)v163);
  *((_BYTE *)v163 + (_QWORD)v164) = 0;
  v167 = (_QWORD *)operator new();
  *v167 = &off_250AFFE48;
  v167[1] = a1 + 144;
  sub_23961580C((uint64_t)__p, (uint64_t)v601, (uint64_t)v167);
  v684[0] = xmmword_239F0E748;
  *(_OWORD *)((char *)v684 + 11) = *(__int128 *)((char *)&xmmword_239F0E748 + 11);
  sub_2396F1974((uint64_t)v684, *(int32x4_t *)((char *)&xmmword_239F0E748 + 11), v168, v169, v170);
  v172 = v171;
  v173 = strlen(v171);
  if (v173 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v174 = (void *)v173;
  if (v173 >= 0x17)
  {
    v176 = (v173 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v173 | 7) != 0x17)
      v176 = v173 | 7;
    v177 = v176 + 1;
    v175 = operator new(v176 + 1);
    v600 = v177 | 0x8000000000000000;
    v599[0] = v175;
    v599[1] = v174;
    goto LABEL_144;
  }
  HIBYTE(v600) = v173;
  v175 = v599;
  if (v173)
LABEL_144:
    memmove(v175, v172, (size_t)v174);
  *((_BYTE *)v174 + (_QWORD)v175) = 0;
  v178 = (_QWORD *)operator new();
  *v178 = &off_250ADF570;
  v178[1] = a1 + 152;
  sub_23961580C((uint64_t)__p, (uint64_t)v599, (uint64_t)v178);
  v683[0] = xmmword_239F0E763;
  *(_OWORD *)((char *)v683 + 13) = *(__int128 *)((char *)&xmmword_239F0E763 + 13);
  sub_2396EFD48((uint64_t)v683, *(int32x4_t *)((char *)&xmmword_239F0E763 + 13), v179, v180, v181);
  v183 = v182;
  v184 = strlen(v182);
  if (v184 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v185 = (void *)v184;
  if (v184 >= 0x17)
  {
    v187 = (v184 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v184 | 7) != 0x17)
      v187 = v184 | 7;
    v188 = v187 + 1;
    v186 = operator new(v187 + 1);
    v598 = v188 | 0x8000000000000000;
    v597[0] = v186;
    v597[1] = v185;
    goto LABEL_152;
  }
  HIBYTE(v598) = v184;
  v186 = v597;
  if (v184)
LABEL_152:
    memmove(v186, v183, (size_t)v185);
  *((_BYTE *)v185 + (_QWORD)v186) = 0;
  v189 = (_QWORD *)operator new();
  *v189 = &off_250ADF570;
  v189[1] = a1 + 160;
  sub_23961580C((uint64_t)__p, (uint64_t)v597, (uint64_t)v189);
  v681[0] = xmmword_239F0E780;
  v681[1] = *(_OWORD *)dbl_239F0E790;
  v682 = 662558;
  sub_2396F01D4((unsigned __int8 *)v681, (int16x8_t)xmmword_239F0E780, dbl_239F0E790[0], v190, v191, v192);
  v194 = v193;
  v195 = strlen(v193);
  if (v195 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v196 = (void *)v195;
  if (v195 >= 0x17)
  {
    v198 = (v195 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v195 | 7) != 0x17)
      v198 = v195 | 7;
    v199 = v198 + 1;
    v197 = operator new(v198 + 1);
    v596 = v199 | 0x8000000000000000;
    v595[0] = v197;
    v595[1] = v196;
    goto LABEL_160;
  }
  HIBYTE(v596) = v195;
  v197 = v595;
  if (v195)
LABEL_160:
    memmove(v197, v194, (size_t)v196);
  *((_BYTE *)v196 + (_QWORD)v197) = 0;
  v200 = (_QWORD *)operator new();
  *v200 = &off_250AFFE48;
  v200[1] = a1 + 168;
  sub_23961580C((uint64_t)__p, (uint64_t)v595, (uint64_t)v200);
  v204 = v203;
  v205 = strlen(v203);
  if (v205 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v206 = (void *)v205;
  if (v205 >= 0x17)
  {
    v208 = (v205 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v205 | 7) != 0x17)
      v208 = v205 | 7;
    v209 = v208 + 1;
    v207 = operator new(v208 + 1);
    v594 = v209 | 0x8000000000000000;
    v593[0] = v207;
    v593[1] = v206;
    goto LABEL_168;
  }
  HIBYTE(v594) = v205;
  v207 = v593;
  if (v205)
LABEL_168:
    memmove(v207, v204, (size_t)v206);
  *((_BYTE *)v206 + (_QWORD)v207) = 0;
  v210 = (_QWORD *)operator new();
  *v210 = &off_250ADF480;
  v210[1] = a1 + 176;
  sub_23961580C((uint64_t)__p, (uint64_t)v593, (uint64_t)v210);
  v679[0] = xmmword_239F0E7CB;
  *(_OWORD *)((char *)v679 + 14) = *(__int128 *)((char *)&xmmword_239F0E7CB + 14);
  sub_2396F0EE8((uint64_t)v679, *(int32x4_t *)((char *)&xmmword_239F0E7CB + 14), v211, v212, v213);
  v215 = v214;
  v216 = strlen(v214);
  if (v216 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v217 = (void *)v216;
  if (v216 >= 0x17)
  {
    v219 = (v216 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v216 | 7) != 0x17)
      v219 = v216 | 7;
    v220 = v219 + 1;
    v218 = operator new(v219 + 1);
    v592 = v220 | 0x8000000000000000;
    v591[0] = v218;
    v591[1] = v217;
    goto LABEL_176;
  }
  HIBYTE(v592) = v216;
  v218 = v591;
  if (v216)
LABEL_176:
    memmove(v218, v215, (size_t)v217);
  *((_BYTE *)v217 + (_QWORD)v218) = 0;
  v221 = (_QWORD *)operator new();
  *v221 = &off_250ADF570;
  v221[1] = a1 + 200;
  sub_23961580C((uint64_t)__p, (uint64_t)v591, (uint64_t)v221);
  v678[0] = xmmword_239F0E7E9;
  v678[1] = xmmword_239F0E7F9;
  sub_2396F06F0((uint64_t)v678, (int32x4_t)xmmword_239F0E7E9, xmmword_239F0E7F9, v222, v223);
  v225 = v224;
  v226 = strlen(v224);
  if (v226 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v227 = (void *)v226;
  if (v226 >= 0x17)
  {
    v229 = (v226 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v226 | 7) != 0x17)
      v229 = v226 | 7;
    v230 = v229 + 1;
    v228 = operator new(v229 + 1);
    v590 = v230 | 0x8000000000000000;
    v589[0] = v228;
    v589[1] = v227;
    goto LABEL_184;
  }
  HIBYTE(v590) = v226;
  v228 = v589;
  if (v226)
LABEL_184:
    memmove(v228, v225, (size_t)v227);
  *((_BYTE *)v227 + (_QWORD)v228) = 0;
  v231 = (_QWORD *)operator new();
  *v231 = &off_250ADF570;
  v231[1] = a1 + 208;
  sub_23961580C((uint64_t)__p, (uint64_t)v589, (uint64_t)v231);
  v677[0] = xmmword_239F0E809;
  *(_QWORD *)((char *)v677 + 13) = 0x32242835283720;
  sub_2396EFB50((uint64_t)v677, (int32x4_t)xmmword_239F0E809, v232, v233, v234);
  v236 = v235;
  v237 = strlen(v235);
  if (v237 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v238 = (void *)v237;
  if (v237 >= 0x17)
  {
    v240 = (v237 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v237 | 7) != 0x17)
      v240 = v237 | 7;
    v241 = v240 + 1;
    v239 = operator new(v240 + 1);
    v588 = v241 | 0x8000000000000000;
    v587[0] = v239;
    v587[1] = v238;
    goto LABEL_192;
  }
  HIBYTE(v588) = v237;
  v239 = v587;
  if (v237)
LABEL_192:
    memmove(v239, v236, (size_t)v238);
  *((_BYTE *)v238 + (_QWORD)v239) = 0;
  v242 = (_QWORD *)operator new();
  *v242 = &off_250AFFE48;
  v242[1] = a1 + 216;
  sub_23961580C((uint64_t)__p, (uint64_t)v587, (uint64_t)v242);
  v676[0] = xmmword_239F0E81E;
  *(_OWORD *)((char *)v676 + 15) = *(__int128 *)((char *)&xmmword_239F0E81E + 15);
  sub_2396EFF58((uint64_t)v676, *(int32x4_t *)((char *)&xmmword_239F0E81E + 15), v243, v244, v245);
  v247 = v246;
  v248 = strlen(v246);
  if (v248 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v249 = (void *)v248;
  if (v248 >= 0x17)
  {
    v251 = (v248 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v248 | 7) != 0x17)
      v251 = v248 | 7;
    v252 = v251 + 1;
    v250 = operator new(v251 + 1);
    v586 = v252 | 0x8000000000000000;
    v585[0] = v250;
    v585[1] = v249;
    goto LABEL_200;
  }
  HIBYTE(v586) = v248;
  v250 = v585;
  if (v248)
LABEL_200:
    memmove(v250, v247, (size_t)v249);
  *((_BYTE *)v249 + (_QWORD)v250) = 0;
  v253 = (_QWORD *)operator new();
  *v253 = &off_250AFFE48;
  v253[1] = a1 + 224;
  sub_23961580C((uint64_t)__p, (uint64_t)v585, (uint64_t)v253);
  v675[0] = xmmword_239F0E83D;
  *(_OWORD *)((char *)v675 + 9) = *(__int128 *)((char *)&xmmword_239F0E83D + 9);
  sub_2396EFC88((uint64_t)v675, *(int32x4_t *)((char *)&xmmword_239F0E83D + 9), v254, v255, v256);
  v258 = v257;
  v259 = strlen(v257);
  if (v259 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v260 = (void *)v259;
  if (v259 >= 0x17)
  {
    v262 = (v259 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v259 | 7) != 0x17)
      v262 = v259 | 7;
    v263 = v262 + 1;
    v261 = operator new(v262 + 1);
    v584 = v263 | 0x8000000000000000;
    v583[0] = v261;
    v583[1] = v260;
    goto LABEL_208;
  }
  HIBYTE(v584) = v259;
  v261 = v583;
  if (v259)
LABEL_208:
    memmove(v261, v258, (size_t)v260);
  *((_BYTE *)v260 + (_QWORD)v261) = 0;
  v264 = (_QWORD *)operator new();
  *v264 = &off_250AFFE48;
  v264[1] = a1 + 248;
  sub_23961580C((uint64_t)__p, (uint64_t)v583, (uint64_t)v264);
  v674[0] = xmmword_239F0E856;
  *(_OWORD *)((char *)v674 + 12) = *(__int128 *)((char *)&xmmword_239F0E856 + 12);
  sub_2396B946C((uint64_t)v674, *(int32x4_t *)((char *)&xmmword_239F0E856 + 12), v265, v266, v267);
  v269 = v268;
  v270 = strlen(v268);
  if (v270 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v271 = (void *)v270;
  if (v270 >= 0x17)
  {
    v273 = (v270 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v270 | 7) != 0x17)
      v273 = v270 | 7;
    v274 = v273 + 1;
    v272 = operator new(v273 + 1);
    v582 = v274 | 0x8000000000000000;
    v581[0] = v272;
    v581[1] = v271;
    goto LABEL_216;
  }
  HIBYTE(v582) = v270;
  v272 = v581;
  if (v270)
LABEL_216:
    memmove(v272, v269, (size_t)v271);
  *((_BYTE *)v271 + (_QWORD)v272) = 0;
  v275 = (_QWORD *)operator new();
  *v275 = &off_250AFFE48;
  v275[1] = a1 + 256;
  sub_23961580C((uint64_t)__p, (uint64_t)v581, (uint64_t)v275);
  v672 = xmmword_239F0E872;
  v673 = 0x677A7B7D607566;
  sub_2396F1A4C((uint64_t)&v672, (int32x4_t)xmmword_239F0E872, v276, v277, v278);
  v280 = v279;
  v281 = strlen(v279);
  if (v281 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v282 = (void *)v281;
  if (v281 >= 0x17)
  {
    v284 = (v281 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v281 | 7) != 0x17)
      v284 = v281 | 7;
    v285 = v284 + 1;
    v283 = operator new(v284 + 1);
    v580 = v285 | 0x8000000000000000;
    v579[0] = v283;
    v579[1] = v282;
    goto LABEL_224;
  }
  HIBYTE(v580) = v281;
  v283 = v579;
  if (v281)
LABEL_224:
    memmove(v283, v280, (size_t)v282);
  *((_BYTE *)v282 + (_QWORD)v283) = 0;
  v286 = (_QWORD *)operator new();
  *v286 = &off_250AFFE48;
  v286[1] = a1 + 264;
  sub_23961580C((uint64_t)__p, (uint64_t)v579, (uint64_t)v286);
  v671[0] = xmmword_239F0E88A;
  *(_OWORD *)((char *)v671 + 9) = *(__int128 *)((char *)&xmmword_239F0E88A + 9);
  sub_2396EFC88((uint64_t)v671, *(int32x4_t *)((char *)&xmmword_239F0E88A + 9), v287, v288, v289);
  v291 = v290;
  v292 = strlen(v290);
  if (v292 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v293 = (void *)v292;
  if (v292 >= 0x17)
  {
    v295 = (v292 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v292 | 7) != 0x17)
      v295 = v292 | 7;
    v296 = v295 + 1;
    v294 = operator new(v295 + 1);
    v578 = v296 | 0x8000000000000000;
    v577[0] = v294;
    v577[1] = v293;
    goto LABEL_232;
  }
  HIBYTE(v578) = v292;
  v294 = v577;
  if (v292)
LABEL_232:
    memmove(v294, v291, (size_t)v293);
  *((_BYTE *)v293 + (_QWORD)v294) = 0;
  v297 = (_QWORD *)operator new();
  *v297 = &off_250AFFE48;
  v297[1] = a1 + 272;
  sub_23961580C((uint64_t)__p, (uint64_t)v577, (uint64_t)v297);
  *(_OWORD *)v670 = xmmword_239F0E8A3;
  *(_OWORD *)&v670[10] = *(__int128 *)((char *)&xmmword_239F0E8A3 + 10);
  sub_239A93C04(v670, *(int32x4_t *)((char *)&xmmword_239F0E8A3 + 10), v298, v299, v300);
  v302 = v301;
  v303 = strlen(v301);
  if (v303 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v304 = (void *)v303;
  if (v303 >= 0x17)
  {
    v306 = (v303 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v303 | 7) != 0x17)
      v306 = v303 | 7;
    v307 = v306 + 1;
    v305 = operator new(v306 + 1);
    v576 = v307 | 0x8000000000000000;
    v575[0] = v305;
    v575[1] = v304;
    goto LABEL_240;
  }
  HIBYTE(v576) = v303;
  v305 = v575;
  if (v303)
LABEL_240:
    memmove(v305, v302, (size_t)v304);
  *((_BYTE *)v304 + (_QWORD)v305) = 0;
  v308 = (_QWORD *)operator new();
  *v308 = &off_250ADF570;
  v308[1] = a1 + 232;
  sub_23961580C((uint64_t)__p, (uint64_t)v575, (uint64_t)v308);
  v669[0] = xmmword_239F0E8BD;
  *(_OWORD *)((char *)v669 + 13) = *(__int128 *)((char *)&xmmword_239F0E8BD + 13);
  sub_2396EFD48((uint64_t)v669, *(int32x4_t *)((char *)&xmmword_239F0E8BD + 13), v309, v310, v311);
  v313 = v312;
  v314 = strlen(v312);
  if (v314 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v315 = (void *)v314;
  if (v314 >= 0x17)
  {
    v317 = (v314 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v314 | 7) != 0x17)
      v317 = v314 | 7;
    v318 = v317 + 1;
    v316 = operator new(v317 + 1);
    v573[1] = v315;
    v574 = v318 | 0x8000000000000000;
    v573[0] = v316;
    goto LABEL_248;
  }
  HIBYTE(v574) = v314;
  v316 = v573;
  if (v314)
LABEL_248:
    memmove(v316, v313, (size_t)v315);
  *((_BYTE *)v315 + (_QWORD)v316) = 0;
  v319 = (_QWORD *)operator new();
  *v319 = &off_250ADF570;
  v319[1] = a1 + 240;
  sub_23961580C((uint64_t)__p, (uint64_t)v573, (uint64_t)v319);
  strcpy(v668, "\"KLTCNKF}KOCEG}KLFGZGQ");
  sub_2396EFBE0((uint64_t)v668, *(int32x4_t *)"\"KLTCNKF}KOCEG}KLFGZGQ", v320, v321, v322);
  v324 = v323;
  v325 = strlen(v323);
  if (v325 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v326 = (void *)v325;
  if (v325 >= 0x17)
  {
    v328 = (v325 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v325 | 7) != 0x17)
      v328 = v325 | 7;
    v329 = v328 + 1;
    v327 = operator new(v328 + 1);
    v571[1] = v326;
    v572 = v329 | 0x8000000000000000;
    v571[0] = v327;
    goto LABEL_256;
  }
  HIBYTE(v572) = v325;
  v327 = v571;
  if (v325)
LABEL_256:
    memmove(v327, v324, (size_t)v326);
  *((_BYTE *)v326 + (_QWORD)v327) = 0;
  v330 = (_QWORD *)operator new();
  *v330 = &off_250ADF480;
  v330[1] = a1 + 280;
  sub_23961580C((uint64_t)__p, (uint64_t)v571, (uint64_t)v330);
  strcpy(v667, "%ALVDGI@AzLHDB@zLKA@]@VzG\\zV@BH@KQzS@WLCLFDQLJK");
  sub_2396F0480((unsigned __int8 *)v667, *(double *)"KQzS@WLCLFDQLJK", *(double *)"LKA@]@VzG\\zV@BH@KQzS@WLCLFDQLJK", v331, v332, v333);
  v335 = v334;
  v336 = strlen(v334);
  if (v336 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v337 = (void *)v336;
  if (v336 >= 0x17)
  {
    v339 = (v336 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v336 | 7) != 0x17)
      v339 = v336 | 7;
    v340 = v339 + 1;
    v338 = operator new(v339 + 1);
    v569[1] = v337;
    v570 = v340 | 0x8000000000000000;
    v569[0] = v338;
    goto LABEL_264;
  }
  HIBYTE(v570) = v336;
  v338 = v569;
  if (v336)
LABEL_264:
    memmove(v338, v335, (size_t)v337);
  *((_BYTE *)v337 + (_QWORD)v338) = 0;
  v341 = (_QWORD *)operator new();
  *v341 = &off_250ADF630;
  v341[1] = v640;
  sub_23961580C((uint64_t)__p, (uint64_t)v569, (uint64_t)v341);
  v665 = xmmword_239F0E921;
  strcpy(v666, "~ysrordHunHgxdrHare~q~tvc~xy");
  sub_2396F0DB0((unsigned __int8 *)&v665, *(double *)"drHare~q~tvc~xy", *(double *)"~ysrordHunHgxdrHare~q~tvc~xy", v342, v343);
  v345 = v344;
  v346 = strlen(v344);
  if (v346 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v347 = (void *)v346;
  if (v346 >= 0x17)
  {
    v349 = (v346 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v346 | 7) != 0x17)
      v349 = v346 | 7;
    v350 = v349 + 1;
    v348 = operator new(v349 + 1);
    v567[1] = v347;
    v568 = v350 | 0x8000000000000000;
    v567[0] = v348;
    goto LABEL_272;
  }
  HIBYTE(v568) = v346;
  v348 = v567;
  if (v346)
LABEL_272:
    memmove(v348, v345, (size_t)v347);
  *((_BYTE *)v347 + (_QWORD)v348) = 0;
  v351 = (_QWORD *)operator new();
  *v351 = &off_250ADF630;
  v351[1] = v639;
  sub_23961580C((uint64_t)__p, (uint64_t)v567, (uint64_t)v351);
  strcpy(v664, ">WMaMK]][MMXKR");
  sub_23958E5E0((uint64_t)v664);
  v353 = v352;
  v354 = strlen(v352);
  if (v354 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v355 = (void *)v354;
  if (v354 >= 0x17)
  {
    v357 = (v354 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v354 | 7) != 0x17)
      v357 = v354 | 7;
    v358 = v357 + 1;
    v356 = operator new(v357 + 1);
    v565[1] = v355;
    v566 = v358 | 0x8000000000000000;
    v565[0] = v356;
    goto LABEL_280;
  }
  HIBYTE(v566) = v354;
  v356 = v565;
  if (v354)
LABEL_280:
    memmove(v356, v353, (size_t)v355);
  *((_BYTE *)v355 + (_QWORD)v356) = 0;
  v359 = (_QWORD *)operator new();
  *v359 = &off_250AFFEA8;
  v359[1] = a1 + 352;
  sub_23961580C((uint64_t)__p, (uint64_t)v565, (uint64_t)v359);
  v663[0] = xmmword_239F0E94E;
  *(_OWORD *)((char *)v663 + 14) = *(__int128 *)((char *)&xmmword_239F0E94E + 14);
  sub_2396F0EE8((uint64_t)v663, *(int32x4_t *)((char *)&xmmword_239F0E94E + 14), v360, v361, v362);
  v364 = v363;
  v365 = strlen(v363);
  if (v365 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v366 = (void *)v365;
  if (v365 >= 0x17)
  {
    v368 = (v365 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v365 | 7) != 0x17)
      v368 = v365 | 7;
    v369 = v368 + 1;
    v367 = operator new(v368 + 1);
    v563[1] = v366;
    v564 = v369 | 0x8000000000000000;
    v563[0] = v367;
    goto LABEL_288;
  }
  HIBYTE(v564) = v365;
  v367 = v563;
  if (v365)
LABEL_288:
    memmove(v367, v364, (size_t)v366);
  *((_BYTE *)v366 + (_QWORD)v367) = 0;
  v370 = (_QWORD *)operator new();
  *v370 = &off_250AFFEA8;
  v370[1] = a1 + 353;
  sub_23961580C((uint64_t)__p, (uint64_t)v563, (uint64_t)v370);
  strcpy(v662, "$MW{CVERMP]{EHMCJIAJP{WQGGAWWBQH");
  sub_2396EFE38((uint64_t)v662, *(int32x4_t *)"$MW{CVERMP]{EHMCJIAJP{WQGGAWWBQH", *(int8x16_t *)"JIAJP{WQGGAWWBQH", v371, v372);
  v374 = v373;
  v375 = strlen(v373);
  if (v375 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v376 = (void *)v375;
  if (v375 >= 0x17)
  {
    v378 = (v375 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v375 | 7) != 0x17)
      v378 = v375 | 7;
    v379 = v378 + 1;
    v377 = operator new(v378 + 1);
    v561[1] = v376;
    v562 = v379 | 0x8000000000000000;
    v561[0] = v377;
    goto LABEL_296;
  }
  HIBYTE(v562) = v375;
  v377 = v561;
  if (v375)
LABEL_296:
    memmove(v377, v374, (size_t)v376);
  *((_BYTE *)v376 + (_QWORD)v377) = 0;
  v380 = (_QWORD *)operator new();
  *v380 = &off_250AFFEA8;
  v380[1] = a1 + 354;
  sub_23961580C((uint64_t)__p, (uint64_t)v561, (uint64_t)v380);
  v661[0] = xmmword_239F0E98D;
  *(_OWORD *)((char *)v661 + 15) = *(__int128 *)((char *)&xmmword_239F0E98D + 15);
  sub_2396EFF58((uint64_t)v661, *(int32x4_t *)((char *)&xmmword_239F0E98D + 15), v381, v382, v383);
  v385 = v384;
  v386 = strlen(v384);
  if (v386 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v387 = (void *)v386;
  if (v386 >= 0x17)
  {
    v389 = (v386 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v386 | 7) != 0x17)
      v389 = v386 | 7;
    v390 = v389 + 1;
    v388 = operator new(v389 + 1);
    v559[1] = v387;
    v560 = v390 | 0x8000000000000000;
    v559[0] = v388;
    goto LABEL_304;
  }
  HIBYTE(v560) = v386;
  v388 = v559;
  if (v386)
LABEL_304:
    memmove(v388, v385, (size_t)v387);
  *((_BYTE *)v387 + (_QWORD)v388) = 0;
  v391 = (_QWORD *)operator new();
  *v391 = &off_250AFFEA8;
  v391[1] = a1 + 355;
  sub_23961580C((uint64_t)__p, (uint64_t)v559, (uint64_t)v391);
  strcpy(v660, "(A[wJJGPwM[\\AEI\\ML");
  sub_23958E450((uint64_t)v660, *(int32x4_t *)"(A[wJJGPwM[\\AEI\\ML", v392, v393, v394);
  v396 = v395;
  v397 = strlen(v395);
  if (v397 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v398 = (void *)v397;
  if (v397 >= 0x17)
  {
    v400 = (v397 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v397 | 7) != 0x17)
      v400 = v397 | 7;
    v401 = v400 + 1;
    v399 = operator new(v400 + 1);
    v557[1] = v398;
    v558 = v401 | 0x8000000000000000;
    v557[0] = v399;
    goto LABEL_312;
  }
  HIBYTE(v558) = v397;
  v399 = v557;
  if (v397)
LABEL_312:
    memmove(v399, v396, (size_t)v398);
  *((_BYTE *)v398 + (_QWORD)v399) = 0;
  v402 = (_QWORD *)operator new();
  *v402 = &off_250AFFEA8;
  v402[1] = a1 + 356;
  sub_23961580C((uint64_t)__p, (uint64_t)v557, (uint64_t)v402);
  v659[0] = xmmword_239F0E9BF;
  *(_DWORD *)((char *)v659 + 15) = 8027005;
  sub_23958E450((uint64_t)v659, (int32x4_t)xmmword_239F0E9BF, v403, v404, v405);
  v407 = v406;
  v408 = strlen(v406);
  if (v408 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v409 = (void *)v408;
  if (v408 >= 0x17)
  {
    v411 = (v408 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v408 | 7) != 0x17)
      v411 = v408 | 7;
    v412 = v411 + 1;
    v410 = operator new(v411 + 1);
    v555[1] = v409;
    v556 = v412 | 0x8000000000000000;
    v555[0] = v410;
    goto LABEL_320;
  }
  HIBYTE(v556) = v408;
  v410 = v555;
  if (v408)
LABEL_320:
    memmove(v410, v407, (size_t)v409);
  *((_BYTE *)v409 + (_QWORD)v410) = 0;
  v413 = (_QWORD *)operator new();
  *v413 = &off_250AE0580;
  v413[1] = a1 + 452;
  sub_23961580C((uint64_t)__p, (uint64_t)v555, (uint64_t)v413);
  v658[0] = xmmword_239F0E9D2;
  *(_DWORD *)((char *)v658 + 15) = 3355188;
  sub_23958E450((uint64_t)v658, (int32x4_t)xmmword_239F0E9D2, v414, v415, v416);
  v418 = v417;
  v419 = strlen(v417);
  if (v419 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v420 = (void *)v419;
  if (v419 >= 0x17)
  {
    v422 = (v419 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v419 | 7) != 0x17)
      v422 = v419 | 7;
    v423 = v422 + 1;
    v421 = operator new(v422 + 1);
    v553[1] = v420;
    v554 = v423 | 0x8000000000000000;
    v553[0] = v421;
    goto LABEL_328;
  }
  HIBYTE(v554) = v419;
  v421 = v553;
  if (v419)
LABEL_328:
    memmove(v421, v418, (size_t)v420);
  *((_BYTE *)v420 + (_QWORD)v421) = 0;
  v424 = (_QWORD *)operator new();
  *v424 = &off_250AE0580;
  v424[1] = a1 + 456;
  sub_23961580C((uint64_t)__p, (uint64_t)v553, (uint64_t)v424);
  strcpy(v657, "=NXPTb[HQQb_\\bYHO\\ITRS");
  sub_2396EFBE0((uint64_t)v657, *(int32x4_t *)"=NXPTb[HQQb_\\bYHO\\ITRS", v425, v426, v427);
  v429 = v428;
  v430 = strlen(v428);
  if (v430 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v431 = (void *)v430;
  if (v430 >= 0x17)
  {
    v433 = (v430 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v430 | 7) != 0x17)
      v433 = v430 | 7;
    v434 = v433 + 1;
    v432 = operator new(v433 + 1);
    v551[1] = v431;
    v552 = v434 | 0x8000000000000000;
    v551[0] = v432;
    goto LABEL_336;
  }
  HIBYTE(v552) = v430;
  v432 = v551;
  if (v430)
LABEL_336:
    memmove(v432, v429, (size_t)v431);
  *((_BYTE *)v431 + (_QWORD)v432) = 0;
  v435 = (_QWORD *)operator new();
  *v435 = &off_250AE0580;
  v435[1] = a1 + 460;
  sub_23961580C((uint64_t)__p, (uint64_t)v551, (uint64_t)v435);
  v655 = xmmword_239F0E9FC;
  v656 = 115;
  v436 = sub_239A91B18((int8x16_t *)&v655);
  v437 = strlen(v436->i8);
  if (v437 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v438 = (void *)v437;
  if (v437 >= 0x17)
  {
    v440 = (v437 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v437 | 7) != 0x17)
      v440 = v437 | 7;
    v441 = v440 + 1;
    v439 = operator new(v440 + 1);
    v549[1] = v438;
    v550 = v441 | 0x8000000000000000;
    v549[0] = v439;
    goto LABEL_344;
  }
  HIBYTE(v550) = v437;
  v439 = v549;
  if (v437)
LABEL_344:
    memmove(v439, v436, (size_t)v438);
  *((_BYTE *)v438 + (_QWORD)v439) = 0;
  v442 = (_QWORD *)operator new();
  *v442 = &off_250AE0580;
  v442[1] = a1 + 464;
  sub_23961580C((uint64_t)__p, (uint64_t)v549, (uint64_t)v442);
  strcpy(v654, "\"DKLCN}@C}FWPCVKML");
  sub_23958E450((uint64_t)v654, *(int32x4_t *)"\"DKLCN}@C}FWPCVKML", v443, v444, v445);
  v447 = v446;
  v448 = strlen(v446);
  if (v448 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v449 = (void *)v448;
  if (v448 >= 0x17)
  {
    v451 = (v448 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v448 | 7) != 0x17)
      v451 = v448 | 7;
    v452 = v451 + 1;
    v450 = operator new(v451 + 1);
    v547[1] = v449;
    v548 = v452 | 0x8000000000000000;
    v547[0] = v450;
    goto LABEL_352;
  }
  HIBYTE(v548) = v448;
  v450 = v547;
  if (v448)
LABEL_352:
    memmove(v450, v447, (size_t)v449);
  *((_BYTE *)v449 + (_QWORD)v450) = 0;
  v453 = (_QWORD *)operator new();
  *v453 = &off_250AE0580;
  v453[1] = a1 + 468;
  sub_23961580C((uint64_t)__p, (uint64_t)v547, (uint64_t)v453);
  v650 = 0x2B15061119151774;
  v653 = 0;
  v652 = 6683;
  v651 = 486546201;
  sub_23958E5E0((uint64_t)&v650);
  v455 = v454;
  v456 = strlen(v454);
  if (v456 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v457 = (void *)v456;
  if (v456 >= 0x17)
  {
    v459 = (v456 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v456 | 7) != 0x17)
      v459 = v456 | 7;
    v460 = v459 + 1;
    v458 = operator new(v459 + 1);
    v545[1] = v457;
    v546 = v460 | 0x8000000000000000;
    v545[0] = v458;
    goto LABEL_360;
  }
  HIBYTE(v546) = v456;
  v458 = v545;
  if (v456)
LABEL_360:
    memmove(v458, v455, (size_t)v457);
  *((_BYTE *)v457 + (_QWORD)v458) = 0;
  v461 = (_QWORD *)operator new();
  *v461 = &off_250ADF240;
  v461[1] = &v638;
  sub_23961580C((uint64_t)__p, (uint64_t)v545, (uint64_t)v461);
  v649[0] = xmmword_239F0EA21;
  *(_OWORD *)((char *)v649 + 11) = *(__int128 *)((char *)&xmmword_239F0EA21 + 11);
  sub_2396F1974((uint64_t)v649, *(int32x4_t *)((char *)&xmmword_239F0EA21 + 11), v462, v463, v464);
  v466 = v465;
  v467 = strlen(v465);
  if (v467 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v468 = (void *)v467;
  if (v467 >= 0x17)
  {
    v470 = (v467 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v467 | 7) != 0x17)
      v470 = v467 | 7;
    v471 = v470 + 1;
    v469 = operator new(v470 + 1);
    v543[1] = v468;
    v544 = v471 | 0x8000000000000000;
    v543[0] = v469;
    goto LABEL_368;
  }
  HIBYTE(v544) = v467;
  v469 = v543;
  if (v467)
LABEL_368:
    memmove(v469, v466, (size_t)v468);
  *((_BYTE *)v468 + (_QWORD)v469) = 0;
  v472 = (_QWORD *)operator new();
  *v472 = &off_250AFFE48;
  v472[1] = a1 + 360;
  sub_23961580C((uint64_t)__p, (uint64_t)v543, (uint64_t)v472);
  v647[0] = xmmword_239F0EA3C;
  v647[1] = *(_OWORD *)dbl_239F0EA4C;
  v648 = 3681843;
  sub_2396F01D4((unsigned __int8 *)v647, (int16x8_t)xmmword_239F0EA3C, dbl_239F0EA4C[0], v473, v474, v475);
  v477 = v476;
  v478 = strlen(v476);
  if (v478 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v479 = (void *)v478;
  if (v478 >= 0x17)
  {
    v481 = (v478 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v478 | 7) != 0x17)
      v481 = v478 | 7;
    v482 = v481 + 1;
    v480 = operator new(v481 + 1);
    v541[1] = v479;
    v542 = v482 | 0x8000000000000000;
    v541[0] = v480;
    goto LABEL_376;
  }
  HIBYTE(v542) = v478;
  v480 = v541;
  if (v478)
LABEL_376:
    memmove(v480, v477, (size_t)v479);
  *((_BYTE *)v479 + (_QWORD)v480) = 0;
  v483 = (_QWORD *)operator new();
  *v483 = &off_250ADF480;
  v483[1] = a1 + 368;
  sub_23961580C((uint64_t)__p, (uint64_t)v541, (uint64_t)v483);
  *(_OWORD *)v646 = xmmword_239F0EA60;
  *(_OWORD *)&v646[10] = *(__int128 *)((char *)&xmmword_239F0EA60 + 10);
  sub_239A93C04(v646, *(int32x4_t *)((char *)&xmmword_239F0EA60 + 10), v484, v485, v486);
  v488 = v487;
  v489 = strlen(v487);
  if (v489 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v490 = (void *)v489;
  if (v489 >= 0x17)
  {
    v492 = (v489 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v489 | 7) != 0x17)
      v492 = v489 | 7;
    v493 = v492 + 1;
    v491 = operator new(v492 + 1);
    v539[1] = v490;
    v540 = v493 | 0x8000000000000000;
    v539[0] = v491;
    goto LABEL_384;
  }
  HIBYTE(v540) = v489;
  v491 = v539;
  if (v489)
LABEL_384:
    memmove(v491, v488, (size_t)v490);
  *((_BYTE *)v490 + (_QWORD)v491) = 0;
  v494 = (_QWORD *)operator new();
  *v494 = &off_250AFFED8;
  v494[1] = a1 + 392;
  sub_23961580C((uint64_t)__p, (uint64_t)v539, (uint64_t)v494);
  *(_OWORD *)v645 = xmmword_239F0EA7A;
  *(_OWORD *)&v645[10] = *(__int128 *)((char *)&xmmword_239F0EA7A + 10);
  sub_239A93C04(v645, *(int32x4_t *)((char *)&xmmword_239F0EA7A + 10), v495, v496, v497);
  v499 = v498;
  v500 = strlen(v498);
  if (v500 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v501 = (void *)v500;
  if (v500 >= 0x17)
  {
    v503 = (v500 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v500 | 7) != 0x17)
      v503 = v500 | 7;
    v504 = v503 + 1;
    v502 = operator new(v503 + 1);
    v537[1] = v501;
    v538 = v504 | 0x8000000000000000;
    v537[0] = v502;
    goto LABEL_392;
  }
  HIBYTE(v538) = v500;
  v502 = v537;
  if (v500)
LABEL_392:
    memmove(v502, v499, (size_t)v501);
  *((_BYTE *)v501 + (_QWORD)v502) = 0;
  v505 = (_QWORD *)operator new();
  *v505 = &off_250ADF240;
  v505[1] = &v637;
  sub_23961580C((uint64_t)__p, (uint64_t)v537, (uint64_t)v505);
  v643 = xmmword_239F0EA94;
  strcpy(v644, "|szhq|itrsBo|itrBtsBp|nv");
  sub_2396F08F4((unsigned __int8 *)&v643, *(double *)"sBo|itrBtsBp|nv", *(int16x8_t *)"|szhq|itrsBo|itrBtsBp|nv", v506, v507);
  v509 = v508;
  v510 = strlen(v508);
  if (v510 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v511 = (void *)v510;
  if (v510 >= 0x17)
  {
    v513 = (v510 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v510 | 7) != 0x17)
      v513 = v510 | 7;
    v514 = v513 + 1;
    v512 = operator new(v513 + 1);
    v535[1] = v511;
    v536 = v514 | 0x8000000000000000;
    v535[0] = v512;
    goto LABEL_400;
  }
  HIBYTE(v536) = v510;
  v512 = v535;
  if (v510)
LABEL_400:
    memmove(v512, v509, (size_t)v511);
  *((_BYTE *)v511 + (_QWORD)v512) = 0;
  v515 = (_QWORD *)operator new();
  *v515 = &off_250AE0580;
  v515[1] = a1 + 472;
  sub_23961580C((uint64_t)__p, (uint64_t)v535, (uint64_t)v515);
  v641 = xmmword_239F0EABD;
  v642[0] = *(_OWORD *)dbl_239F0EACD;
  *(_OWORD *)((char *)v642 + 10) = *(_OWORD *)((char *)&dbl_239F0EACD[1] + 2);
  sub_2396F05DC((unsigned __int8 *)&v641, *(double *)((char *)&dbl_239F0EACD[1] + 2), dbl_239F0EACD[0], v516, v517, v518);
  v520 = v519;
  v521 = strlen(v519);
  if (v521 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v522 = (void *)v521;
  if (v521 >= 0x17)
  {
    v524 = (v521 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v521 | 7) != 0x17)
      v524 = v521 | 7;
    v525 = v524 + 1;
    v523 = operator new(v524 + 1);
    v533[1] = v522;
    v534 = v525 | 0x8000000000000000;
    v533[0] = v523;
    goto LABEL_408;
  }
  HIBYTE(v534) = v521;
  v523 = v533;
  if (v521)
LABEL_408:
    memmove(v523, v520, (size_t)v522);
  *((_BYTE *)v522 + (_QWORD)v523) = 0;
  v526 = (_QWORD *)operator new();
  *v526 = &off_250AE0580;
  v526[1] = a1 + 476;
  sub_23961580C((uint64_t)__p, (uint64_t)v533, (uint64_t)v526);
  if (SHIBYTE(v534) < 0)
  {
    operator delete(v533[0]);
    if ((SHIBYTE(v536) & 0x80000000) == 0)
    {
LABEL_411:
      if ((SHIBYTE(v538) & 0x80000000) == 0)
        goto LABEL_412;
      goto LABEL_478;
    }
  }
  else if ((SHIBYTE(v536) & 0x80000000) == 0)
  {
    goto LABEL_411;
  }
  operator delete(v535[0]);
  if ((SHIBYTE(v538) & 0x80000000) == 0)
  {
LABEL_412:
    if ((SHIBYTE(v540) & 0x80000000) == 0)
      goto LABEL_413;
    goto LABEL_479;
  }
LABEL_478:
  operator delete(v537[0]);
  if ((SHIBYTE(v540) & 0x80000000) == 0)
  {
LABEL_413:
    if ((SHIBYTE(v542) & 0x80000000) == 0)
      goto LABEL_414;
    goto LABEL_480;
  }
LABEL_479:
  operator delete(v539[0]);
  if ((SHIBYTE(v542) & 0x80000000) == 0)
  {
LABEL_414:
    if ((SHIBYTE(v544) & 0x80000000) == 0)
      goto LABEL_415;
    goto LABEL_481;
  }
LABEL_480:
  operator delete(v541[0]);
  if ((SHIBYTE(v544) & 0x80000000) == 0)
  {
LABEL_415:
    if ((SHIBYTE(v546) & 0x80000000) == 0)
      goto LABEL_416;
    goto LABEL_482;
  }
LABEL_481:
  operator delete(v543[0]);
  if ((SHIBYTE(v546) & 0x80000000) == 0)
  {
LABEL_416:
    if ((SHIBYTE(v548) & 0x80000000) == 0)
      goto LABEL_417;
    goto LABEL_483;
  }
LABEL_482:
  operator delete(v545[0]);
  if ((SHIBYTE(v548) & 0x80000000) == 0)
  {
LABEL_417:
    if ((SHIBYTE(v550) & 0x80000000) == 0)
      goto LABEL_418;
    goto LABEL_484;
  }
LABEL_483:
  operator delete(v547[0]);
  if ((SHIBYTE(v550) & 0x80000000) == 0)
  {
LABEL_418:
    if ((SHIBYTE(v552) & 0x80000000) == 0)
      goto LABEL_419;
    goto LABEL_485;
  }
LABEL_484:
  operator delete(v549[0]);
  if ((SHIBYTE(v552) & 0x80000000) == 0)
  {
LABEL_419:
    if ((SHIBYTE(v554) & 0x80000000) == 0)
      goto LABEL_420;
    goto LABEL_486;
  }
LABEL_485:
  operator delete(v551[0]);
  if ((SHIBYTE(v554) & 0x80000000) == 0)
  {
LABEL_420:
    if ((SHIBYTE(v556) & 0x80000000) == 0)
      goto LABEL_421;
    goto LABEL_487;
  }
LABEL_486:
  operator delete(v553[0]);
  if ((SHIBYTE(v556) & 0x80000000) == 0)
  {
LABEL_421:
    if ((SHIBYTE(v558) & 0x80000000) == 0)
      goto LABEL_422;
    goto LABEL_488;
  }
LABEL_487:
  operator delete(v555[0]);
  if ((SHIBYTE(v558) & 0x80000000) == 0)
  {
LABEL_422:
    if ((SHIBYTE(v560) & 0x80000000) == 0)
      goto LABEL_423;
    goto LABEL_489;
  }
LABEL_488:
  operator delete(v557[0]);
  if ((SHIBYTE(v560) & 0x80000000) == 0)
  {
LABEL_423:
    if ((SHIBYTE(v562) & 0x80000000) == 0)
      goto LABEL_424;
    goto LABEL_490;
  }
LABEL_489:
  operator delete(v559[0]);
  if ((SHIBYTE(v562) & 0x80000000) == 0)
  {
LABEL_424:
    if ((SHIBYTE(v564) & 0x80000000) == 0)
      goto LABEL_425;
    goto LABEL_491;
  }
LABEL_490:
  operator delete(v561[0]);
  if ((SHIBYTE(v564) & 0x80000000) == 0)
  {
LABEL_425:
    if ((SHIBYTE(v566) & 0x80000000) == 0)
      goto LABEL_426;
    goto LABEL_492;
  }
LABEL_491:
  operator delete(v563[0]);
  if ((SHIBYTE(v566) & 0x80000000) == 0)
  {
LABEL_426:
    if ((SHIBYTE(v568) & 0x80000000) == 0)
      goto LABEL_427;
    goto LABEL_493;
  }
LABEL_492:
  operator delete(v565[0]);
  if ((SHIBYTE(v568) & 0x80000000) == 0)
  {
LABEL_427:
    if ((SHIBYTE(v570) & 0x80000000) == 0)
      goto LABEL_428;
    goto LABEL_494;
  }
LABEL_493:
  operator delete(v567[0]);
  if ((SHIBYTE(v570) & 0x80000000) == 0)
  {
LABEL_428:
    if ((SHIBYTE(v572) & 0x80000000) == 0)
      goto LABEL_429;
    goto LABEL_495;
  }
LABEL_494:
  operator delete(v569[0]);
  if ((SHIBYTE(v572) & 0x80000000) == 0)
  {
LABEL_429:
    if ((SHIBYTE(v574) & 0x80000000) == 0)
      goto LABEL_430;
    goto LABEL_496;
  }
LABEL_495:
  operator delete(v571[0]);
  if ((SHIBYTE(v574) & 0x80000000) == 0)
  {
LABEL_430:
    if ((SHIBYTE(v576) & 0x80000000) == 0)
      goto LABEL_431;
    goto LABEL_497;
  }
LABEL_496:
  operator delete(v573[0]);
  if ((SHIBYTE(v576) & 0x80000000) == 0)
  {
LABEL_431:
    if ((SHIBYTE(v578) & 0x80000000) == 0)
      goto LABEL_432;
    goto LABEL_498;
  }
LABEL_497:
  operator delete(v575[0]);
  if ((SHIBYTE(v578) & 0x80000000) == 0)
  {
LABEL_432:
    if ((SHIBYTE(v580) & 0x80000000) == 0)
      goto LABEL_433;
    goto LABEL_499;
  }
LABEL_498:
  operator delete(v577[0]);
  if ((SHIBYTE(v580) & 0x80000000) == 0)
  {
LABEL_433:
    if ((SHIBYTE(v582) & 0x80000000) == 0)
      goto LABEL_434;
    goto LABEL_500;
  }
LABEL_499:
  operator delete(v579[0]);
  if ((SHIBYTE(v582) & 0x80000000) == 0)
  {
LABEL_434:
    if ((SHIBYTE(v584) & 0x80000000) == 0)
      goto LABEL_435;
    goto LABEL_501;
  }
LABEL_500:
  operator delete(v581[0]);
  if ((SHIBYTE(v584) & 0x80000000) == 0)
  {
LABEL_435:
    if ((SHIBYTE(v586) & 0x80000000) == 0)
      goto LABEL_436;
    goto LABEL_502;
  }
LABEL_501:
  operator delete(v583[0]);
  if ((SHIBYTE(v586) & 0x80000000) == 0)
  {
LABEL_436:
    if ((SHIBYTE(v588) & 0x80000000) == 0)
      goto LABEL_437;
    goto LABEL_503;
  }
LABEL_502:
  operator delete(v585[0]);
  if ((SHIBYTE(v588) & 0x80000000) == 0)
  {
LABEL_437:
    if ((SHIBYTE(v590) & 0x80000000) == 0)
      goto LABEL_438;
    goto LABEL_504;
  }
LABEL_503:
  operator delete(v587[0]);
  if ((SHIBYTE(v590) & 0x80000000) == 0)
  {
LABEL_438:
    if ((SHIBYTE(v592) & 0x80000000) == 0)
      goto LABEL_439;
    goto LABEL_505;
  }
LABEL_504:
  operator delete(v589[0]);
  if ((SHIBYTE(v592) & 0x80000000) == 0)
  {
LABEL_439:
    if ((SHIBYTE(v594) & 0x80000000) == 0)
      goto LABEL_440;
    goto LABEL_506;
  }
LABEL_505:
  operator delete(v591[0]);
  if ((SHIBYTE(v594) & 0x80000000) == 0)
  {
LABEL_440:
    if ((SHIBYTE(v596) & 0x80000000) == 0)
      goto LABEL_441;
    goto LABEL_507;
  }
LABEL_506:
  operator delete(v593[0]);
  if ((SHIBYTE(v596) & 0x80000000) == 0)
  {
LABEL_441:
    if ((SHIBYTE(v598) & 0x80000000) == 0)
      goto LABEL_442;
    goto LABEL_508;
  }
LABEL_507:
  operator delete(v595[0]);
  if ((SHIBYTE(v598) & 0x80000000) == 0)
  {
LABEL_442:
    if ((SHIBYTE(v600) & 0x80000000) == 0)
      goto LABEL_443;
    goto LABEL_509;
  }
LABEL_508:
  operator delete(v597[0]);
  if ((SHIBYTE(v600) & 0x80000000) == 0)
  {
LABEL_443:
    if ((SHIBYTE(v602) & 0x80000000) == 0)
      goto LABEL_444;
    goto LABEL_510;
  }
LABEL_509:
  operator delete(v599[0]);
  if ((SHIBYTE(v602) & 0x80000000) == 0)
  {
LABEL_444:
    if ((SHIBYTE(v604) & 0x80000000) == 0)
      goto LABEL_445;
    goto LABEL_511;
  }
LABEL_510:
  operator delete(v601[0]);
  if ((SHIBYTE(v604) & 0x80000000) == 0)
  {
LABEL_445:
    if ((SHIBYTE(v606) & 0x80000000) == 0)
      goto LABEL_446;
    goto LABEL_512;
  }
LABEL_511:
  operator delete(v603[0]);
  if ((SHIBYTE(v606) & 0x80000000) == 0)
  {
LABEL_446:
    if ((SHIBYTE(v608) & 0x80000000) == 0)
      goto LABEL_447;
    goto LABEL_513;
  }
LABEL_512:
  operator delete(v605[0]);
  if ((SHIBYTE(v608) & 0x80000000) == 0)
  {
LABEL_447:
    if ((SHIBYTE(v610) & 0x80000000) == 0)
      goto LABEL_448;
    goto LABEL_514;
  }
LABEL_513:
  operator delete(v607[0]);
  if ((SHIBYTE(v610) & 0x80000000) == 0)
  {
LABEL_448:
    if ((SHIBYTE(v612) & 0x80000000) == 0)
      goto LABEL_449;
    goto LABEL_515;
  }
LABEL_514:
  operator delete(v609[0]);
  if ((SHIBYTE(v612) & 0x80000000) == 0)
  {
LABEL_449:
    if ((SHIBYTE(v614) & 0x80000000) == 0)
      goto LABEL_450;
    goto LABEL_516;
  }
LABEL_515:
  operator delete(v611[0]);
  if ((SHIBYTE(v614) & 0x80000000) == 0)
  {
LABEL_450:
    if ((SHIBYTE(v616) & 0x80000000) == 0)
      goto LABEL_451;
    goto LABEL_517;
  }
LABEL_516:
  operator delete(v613[0]);
  if ((SHIBYTE(v616) & 0x80000000) == 0)
  {
LABEL_451:
    if ((SHIBYTE(v618) & 0x80000000) == 0)
      goto LABEL_452;
    goto LABEL_518;
  }
LABEL_517:
  operator delete(v615[0]);
  if ((SHIBYTE(v618) & 0x80000000) == 0)
  {
LABEL_452:
    if ((SHIBYTE(v620) & 0x80000000) == 0)
      goto LABEL_453;
    goto LABEL_519;
  }
LABEL_518:
  operator delete(v617[0]);
  if ((SHIBYTE(v620) & 0x80000000) == 0)
  {
LABEL_453:
    if ((SHIBYTE(v622) & 0x80000000) == 0)
      goto LABEL_454;
    goto LABEL_520;
  }
LABEL_519:
  operator delete(v619[0]);
  if ((SHIBYTE(v622) & 0x80000000) == 0)
  {
LABEL_454:
    if ((SHIBYTE(v624) & 0x80000000) == 0)
      goto LABEL_455;
    goto LABEL_521;
  }
LABEL_520:
  operator delete(v621[0]);
  if ((SHIBYTE(v624) & 0x80000000) == 0)
  {
LABEL_455:
    if ((SHIBYTE(v626) & 0x80000000) == 0)
      goto LABEL_456;
    goto LABEL_522;
  }
LABEL_521:
  operator delete(v623[0]);
  if ((SHIBYTE(v626) & 0x80000000) == 0)
  {
LABEL_456:
    if ((SHIBYTE(v628) & 0x80000000) == 0)
      goto LABEL_457;
    goto LABEL_523;
  }
LABEL_522:
  operator delete(v625[0]);
  if ((SHIBYTE(v628) & 0x80000000) == 0)
  {
LABEL_457:
    if ((SHIBYTE(v630) & 0x80000000) == 0)
      goto LABEL_458;
    goto LABEL_524;
  }
LABEL_523:
  operator delete(v627[0]);
  if ((SHIBYTE(v630) & 0x80000000) == 0)
  {
LABEL_458:
    if ((SHIBYTE(v632) & 0x80000000) == 0)
      goto LABEL_459;
LABEL_525:
    operator delete(v631[0]);
    if ((SHIBYTE(v634) & 0x80000000) == 0)
      goto LABEL_460;
    goto LABEL_526;
  }
LABEL_524:
  operator delete(v629[0]);
  if (SHIBYTE(v632) < 0)
    goto LABEL_525;
LABEL_459:
  if ((SHIBYTE(v634) & 0x80000000) == 0)
    goto LABEL_460;
LABEL_526:
  operator delete(__dst[0]);
LABEL_460:
  sub_2395902F0((uint64_t)__p, a2);
  v527 = v636;
  if (v636)
  {
    do
    {
      v528 = v527[5];
      if (v528)
        (*(void (**)(uint64_t))(*(_QWORD *)v528 + 8))(v528);
      v527 = (_QWORD *)*v527;
    }
    while (v527);
    v529 = (void **)v636;
    if (v636)
    {
      do
      {
        v532 = (void **)*v529;
        if (*((char *)v529 + 39) < 0)
          operator delete(v529[2]);
        operator delete(v529);
        v529 = v532;
      }
      while (v532);
    }
  }
  v530 = __p[0];
  __p[0] = 0;
  if (v530)
    operator delete(v530);
  if (v639[0])
  {
    v639[1] = v639[0];
    operator delete(v639[0]);
  }
  if (v640[0])
  {
    v640[1] = v640[0];
    operator delete(v640[0]);
  }
  return a2;
}

void sub_239ACF640(_Unwind_Exception *a1)
{
  void *v2;
  void *v3;

  sub_2395905C0((uint64_t)&STACK[0x4D8]);
  v2 = (void *)STACK[0x510];
  if (STACK[0x510])
  {
    STACK[0x518] = (unint64_t)v2;
    operator delete(v2);
  }
  v3 = (void *)STACK[0x528];
  if (!STACK[0x528])
    _Unwind_Resume(a1);
  STACK[0x530] = (unint64_t)v3;
  operator delete(v3);
  _Unwind_Resume(a1);
}

_QWORD *sub_239ACFF50(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2 != a3)
  {
    v5 = a2;
    v6 = 0;
    v7 = a2;
    do
    {
      v8 = v6;
      v9 = (_QWORD *)v7[1];
      if (v9)
      {
        do
        {
          v10 = v9;
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          v10 = (_QWORD *)v7[2];
          v11 = *v10 == (_QWORD)v7;
          v7 = v10;
        }
        while (!v11);
      }
      ++v6;
      v7 = v10;
    }
    while (v10 != a3);
    if (v8 >= 0x1FFFFFFFFFFFFFFFLL)
      sub_2394189F8();
    v12 = operator new(8 * v6);
    *a1 = v12;
    a1[1] = v12;
    a1[2] = &v12[v6];
    do
    {
      *v12 = v5[4];
      v13 = (_QWORD *)v5[1];
      if (v13)
      {
        do
        {
          v14 = v13;
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          v14 = (_QWORD *)v5[2];
          v11 = *v14 == (_QWORD)v5;
          v5 = v14;
        }
        while (!v11);
      }
      ++v12;
      v5 = v14;
    }
    while (v14 != a3);
    a1[1] = v12;
  }
  return a1;
}

void sub_239AD005C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_239AD007C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD00A0(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = v4 + 56;
  if (a3)
    sub_2395DA64C(v4, v5, (uint64_t)a2, 7uLL);
  else
    sub_2395A34D0(v4, v5, a2);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AD00F8()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

__n128 sub_239AD012C(uint64_t a1)
{
  __n128 result;

  *(_QWORD *)a1 = 2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = xmmword_239F0BEF0;
  *(_QWORD *)(a1 + 32) = 3;
  *(_WORD *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 128) = 0x3FE0000000000000;
  *(_QWORD *)(a1 + 136) = 4;
  *(_OWORD *)(a1 + 48) = xmmword_239F0BF00;
  *(_OWORD *)(a1 + 64) = xmmword_239F0BF10;
  *(int64x2_t *)(a1 + 80) = vdupq_n_s64(5uLL);
  *(_OWORD *)(a1 + 96) = xmmword_239EC67E0;
  *(_OWORD *)(a1 + 112) = xmmword_239F0BF20;
  *(_OWORD *)(a1 + 144) = xmmword_239F0BF30;
  *(_OWORD *)(a1 + 160) = xmmword_239F0BF40;
  *(_OWORD *)(a1 + 176) = xmmword_239F0BF60;
  *(_OWORD *)(a1 + 192) = xmmword_239F0BF70;
  *(_OWORD *)(a1 + 208) = xmmword_239F0BF50;
  *(_QWORD *)(a1 + 224) = 0x4010000000000000;
  *(_QWORD *)(a1 + 232) = 20;
  __asm { FMOV            V0.4S, #-1.0 }
  *(__n128 *)(a1 + 256) = result;
  *(_OWORD *)(a1 + 272) = xmmword_239F0BF90;
  *(_QWORD *)(a1 + 288) = 0x3D719799812DEA11;
  *(_BYTE *)(a1 + 296) = 1;
  *(_QWORD *)(a1 + 304) = 0x3FF0000000000000;
  *(_BYTE *)(a1 + 312) = 1;
  *(_QWORD *)(a1 + 344) = 0;
  *(_QWORD *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 384) = 33685761;
  *(_WORD *)(a1 + 388) = 258;
  *(_BYTE *)(a1 + 390) = 1;
  *(_BYTE *)(a1 + 400) = 1;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 416) = 8;
  *(_DWORD *)(a1 + 424) = 3;
  *(int64x2_t *)(a1 + 464) = vdupq_n_s64(0xFuLL);
  *(_DWORD *)(a1 + 504) = 16842753;
  *(_OWORD *)(a1 + 544) = xmmword_239EC67F0;
  *(_OWORD *)(a1 + 512) = xmmword_239F0BFA0;
  *(_OWORD *)(a1 + 576) = xmmword_239F0BFB0;
  *(_OWORD *)(a1 + 688) = xmmword_239F0BFC0;
  *(int64x2_t *)(a1 + 720) = vdupq_n_s64(0x4049000000000000uLL);
  *(_OWORD *)(a1 + 736) = xmmword_239F0BFD0;
  *(_OWORD *)(a1 + 784) = xmmword_239F0BFE0;
  *(_OWORD *)(a1 + 800) = xmmword_239F0BFF0;
  *(_QWORD *)(a1 + 760) = 0x100000032;
  *(_QWORD *)(a1 + 832) = 0x100000032;
  *(_OWORD *)(a1 + 848) = xmmword_239F0C000;
  *(_OWORD *)(a1 + 944) = xmmword_239F0C010;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_BYTE *)(a1 + 480) = 0;
  *(_BYTE *)(a1 + 488) = 0;
  *(_BYTE *)(a1 + 496) = 0;
  *(_BYTE *)(a1 + 568) = 0;
  *(_QWORD *)(a1 + 536) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 528) = 3;
  *(_QWORD *)(a1 + 560) = 0x3FD3333333333333;
  *(_BYTE *)(a1 + 592) = 1;
  *(_QWORD *)(a1 + 600) = 0x3FEFEF9DB22D0E56;
  *(_QWORD *)(a1 + 608) = 0x3FF0000000000000;
  *(_WORD *)(a1 + 616) = 1;
  *(_QWORD *)(a1 + 632) = 5;
  *(_BYTE *)(a1 + 640) = 1;
  *(_QWORD *)(a1 + 648) = 0x4010000000000000;
  *(_WORD *)(a1 + 656) = 0;
  *(_QWORD *)(a1 + 680) = 0;
  *(_WORD *)(a1 + 704) = 1;
  *(_DWORD *)(a1 + 768) = 2;
  *(_WORD *)(a1 + 752) = 257;
  *(_BYTE *)(a1 + 754) = 1;
  *(_QWORD *)(a1 + 776) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 816) = 0x3FE3333333333333;
  *(_WORD *)(a1 + 824) = 257;
  *(_QWORD *)(a1 + 840) = 0x3FB999999999999ALL;
  *(_WORD *)(a1 + 864) = 257;
  *(_BYTE *)(a1 + 866) = 1;
  *(_WORD *)(a1 + 880) = 256;
  *(_QWORD *)(a1 + 888) = 8;
  *(_QWORD *)(a1 + 896) = 10;
  *(_QWORD *)(a1 + 936) = 0x3EB0C6F7A0B5ED8DLL;
  *(_QWORD *)(a1 + 1008) = 0;
  *(_QWORD *)(a1 + 1040) = 0;
  *(_DWORD *)(a1 + 1048) = 33685761;
  *(_WORD *)(a1 + 1052) = 258;
  *(_BYTE *)(a1 + 1054) = 1;
  *(_BYTE *)(a1 + 1064) = 1;
  *(_QWORD *)(a1 + 1056) = 0;
  *(_BYTE *)(a1 + 960) = 1;
  *(_QWORD *)(a1 + 968) = 0x3FD3333333333333;
  *(_BYTE *)(a1 + 976) = 1;
  *(_QWORD *)(a1 + 712) = 0;
  *(_OWORD *)(a1 + 240) = xmmword_239F0BF80;
  *(_QWORD *)(a1 + 404) = 0;
  *(_QWORD *)(a1 + 620) = 0x200000000;
  *(_OWORD *)(a1 + 664) = 0u;
  *(_QWORD *)(a1 + 868) = 0x40A0000042480000;
  *(_QWORD *)(a1 + 1068) = 0;
  *(_OWORD *)(a1 + 904) = xmmword_239F0C020;
  *(__n128 *)(a1 + 920) = result;
  return result;
}

_QWORD *sub_239AD0424(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  const char *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int16x8_t v26;
  const char *v27;
  const char *v28;
  size_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  const char *v35;
  size_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  void **v44;
  void *v45;
  void **v47;
  void *v48[2];
  unint64_t v49;
  void *v50[2];
  unint64_t v51;
  void *v52[2];
  unint64_t v53;
  void *v54[2];
  unint64_t v55;
  void *__dst[2];
  unint64_t v57;
  void *__p[2];
  void *v59;
  char v60[16];
  char v61[16];
  uint64_t v62;
  int v63;
  __int128 v64;
  __int16 v65;
  uint64_t v66;
  int v67;
  char v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v66 = 0x25161B1815161D7ALL;
  v68 = 0;
  v67 = 354161683;
  v5 = sub_239510ECC((uint64_t)&v66);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v57 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v57) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250B00268;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v64 = xmmword_239F0EB65;
  v65 = 7;
  v12 = sub_239A91B18((int8x16_t *)&v64);
  v13 = strlen(v12->i8);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v54[1] = v14;
    v55 = v17 | 0x8000000000000000;
    v54[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v55) = v13;
  v15 = v54;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250B00298;
  v18[1] = a1 + 552;
  sub_23961580C((uint64_t)__p, (uint64_t)v54, (uint64_t)v18);
  v62 = 0x6300C00030A1D6FLL;
  v63 = 2305;
  v19 = sub_23958E4C8((uint64_t)&v62);
  v20 = strlen(v19);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v52[1] = v21;
    v53 = v24 | 0x8000000000000000;
    v52[0] = v22;
    goto LABEL_24;
  }
  HIBYTE(v53) = v20;
  v22 = v52;
  if (v20)
LABEL_24:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250B002C8;
  v25[1] = a1 + 480;
  sub_23961580C((uint64_t)__p, (uint64_t)v52, (uint64_t)v25);
  strcpy(v61, "'URISNJBxNIAH");
  sub_23971A32C((uint64_t)v61, v26);
  v28 = v27;
  v29 = strlen(v27);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    v50[1] = v30;
    v51 = v33 | 0x8000000000000000;
    v50[0] = v31;
    goto LABEL_32;
  }
  HIBYTE(v51) = v29;
  v31 = v50;
  if (v29)
LABEL_32:
    memmove(v31, v28, (size_t)v30);
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  v34 = (_QWORD *)operator new();
  *v34 = &off_250B002F8;
  v34[1] = a1 + 592;
  sub_23961580C((uint64_t)__p, (uint64_t)v50, (uint64_t)v34);
  strcpy(v60, "X-+=<\a;76>1?");
  v35 = sub_239510ECC((uint64_t)v60);
  v36 = strlen(v35);
  if (v36 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v37 = (void *)v36;
  if (v36 >= 0x17)
  {
    v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v36 | 7) != 0x17)
      v39 = v36 | 7;
    v40 = v39 + 1;
    v38 = operator new(v39 + 1);
    v48[1] = v37;
    v49 = v40 | 0x8000000000000000;
    v48[0] = v38;
    goto LABEL_40;
  }
  HIBYTE(v49) = v36;
  v38 = v48;
  if (v36)
LABEL_40:
    memmove(v38, v35, (size_t)v37);
  *((_BYTE *)v37 + (_QWORD)v38) = 0;
  v41 = (_QWORD *)operator new();
  *v41 = &off_250B00328;
  v41[1] = a1 + 664;
  sub_23961580C((uint64_t)__p, (uint64_t)v48, (uint64_t)v41);
  if (SHIBYTE(v49) < 0)
  {
    operator delete(v48[0]);
    if ((SHIBYTE(v51) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v53) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v51) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v50[0]);
  if ((SHIBYTE(v53) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v55) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v54[0]);
    if ((SHIBYTE(v57) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v52[0]);
  if (SHIBYTE(v55) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v57) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_2395902F0((uint64_t)__p, a2);
  v42 = v59;
  if (v59)
  {
    do
    {
      v43 = v42[5];
      if (v43)
        (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
      v42 = (_QWORD *)*v42;
    }
    while (v42);
    v44 = (void **)v59;
    if (v59)
    {
      do
      {
        v47 = (void **)*v44;
        if (*((char *)v44 + 39) < 0)
          operator delete(v44[2]);
        operator delete(v44);
        v44 = v47;
      }
      while (v47);
    }
  }
  v45 = __p[0];
  __p[0] = 0;
  if (v45)
    operator delete(v45);
  return a2;
}

void sub_239AD09E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  sub_2395905C0((uint64_t)&a40);
  _Unwind_Resume(a1);
}

void sub_239AD0ACC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD0AF0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AC1F3C(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AD0B2C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AD0B64(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD0B88(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AC5620(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AD0BC4()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AD0BFC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD0C20(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AC706C((uint64_t)&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AD0C6C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AD0CA4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD0CC8(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ACC600(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AD0D04()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AD0D3C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD0D60(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (!*(_BYTE *)(v3 + 712))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239AE2404(v3, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AD0DCC(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v5;
  const char *v6;
  const char *v7;
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int8x16_t v14;
  double v15;
  int32x4_t v16;
  const char *v17;
  const char *v18;
  size_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int8x16_t v25;
  double v26;
  int32x4_t v27;
  const char *v28;
  const char *v29;
  size_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int8x16_t v36;
  double v37;
  int32x4_t v38;
  const char *v39;
  const char *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int8x16_t v47;
  double v48;
  int32x4_t v49;
  const char *v50;
  const char *v51;
  size_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  double v58;
  int32x4_t v59;
  const char *v60;
  const char *v61;
  size_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  int8x16_t v68;
  double v69;
  int32x4_t v70;
  const char *v71;
  const char *v72;
  size_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  int32x4_t v79;
  double v80;
  int32x4_t v81;
  unsigned __int8 *v82;
  size_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  int32x4_t v89;
  double v90;
  int32x4_t v91;
  unsigned __int8 *v92;
  size_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  int8x16_t *v99;
  size_t v100;
  void *v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  int16x8_t v106;
  const char *v107;
  const char *v108;
  size_t v109;
  void *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  int8x16_t v115;
  double v116;
  int32x4_t v117;
  const char *v118;
  const char *v119;
  size_t v120;
  void *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  int8x16_t v126;
  double v127;
  int32x4_t v128;
  const char *v129;
  const char *v130;
  size_t v131;
  void *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  int8x16_t v137;
  double v138;
  int32x4_t v139;
  const char *v140;
  const char *v141;
  size_t v142;
  void *v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  int8x16_t v148;
  double v149;
  int32x4_t v150;
  const char *v151;
  const char *v152;
  size_t v153;
  void *v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  int8x16_t v159;
  double v160;
  int32x4_t v161;
  const char *v162;
  const char *v163;
  size_t v164;
  void *v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  int8x16_t *v170;
  size_t v171;
  void *v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  const char *v177;
  size_t v178;
  void *v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  _QWORD *v184;
  uint64_t v185;
  void **v186;
  void *v187;
  void **v188;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void *v203[2];
  unint64_t v204;
  void *v205[2];
  unint64_t v206;
  void *v207[2];
  unint64_t v208;
  void *v209[2];
  unint64_t v210;
  void *v211[2];
  unint64_t v212;
  void *v213[2];
  unint64_t v214;
  void *v215[2];
  unint64_t v216;
  void *v217[2];
  unint64_t v218;
  void *v219[2];
  unint64_t v220;
  void *v221[2];
  unint64_t v222;
  void *v223[2];
  unint64_t v224;
  void *v225[2];
  unint64_t v226;
  void *v227[2];
  unint64_t v228;
  void *v229[2];
  unint64_t v230;
  void *v231[2];
  unint64_t v232;
  void *v233[2];
  unint64_t v234;
  void *v235[2];
  unint64_t v236;
  void *__dst[2];
  unint64_t v238;
  void *__p[2];
  void *v240;
  char v241[16];
  int8x16_t v242[2];
  char v243[32];
  unsigned __int8 v244[32];
  char v245[32];
  _OWORD v246[2];
  _OWORD v247[2];
  uint64_t v248;
  int v249;
  __int16 v250;
  int8x16_t v251[2];
  unsigned __int8 v252[32];
  char v253[32];
  _OWORD v254[2];
  char v255[32];
  char v256[32];
  _OWORD v257[2];
  _OWORD v258[2];
  __int128 v259;
  uint64_t v260;
  char v261[24];
  uint64_t v262;

  v262 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 8);
  sub_239AD233C((uint64_t)&v190);
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v261, "1_D\\nX\\PVTnAPXCB");
  sub_2396EFA24((uint64_t)v261);
  v7 = v6;
  v8 = strlen(v6);
  if (v8 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v10 = (void **)operator new(v11 + 1);
    v238 = v12 | 0x8000000000000000;
    __dst[0] = v10;
    __dst[1] = v9;
    goto LABEL_8;
  }
  HIBYTE(v238) = v8;
  v10 = __dst;
  if (v8)
LABEL_8:
    memmove(v10, v7, (size_t)v9);
  *((_BYTE *)v9 + (_QWORD)v10) = 0;
  v13 = (_QWORD *)operator new();
  *v13 = &off_250AFFF08;
  v13[1] = &v190;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v13);
  v259 = xmmword_239F0DEE9;
  v260 = 0x30312A22331C27;
  sub_2396F1A4C((uint64_t)&v259, (int32x4_t)xmmword_239F0DEE9, v14, v15, v16);
  v18 = v17;
  v19 = strlen(v17);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v20 = (void *)v19;
  if (v19 >= 0x17)
  {
    v22 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v22 = v19 | 7;
    v23 = v22 + 1;
    v21 = operator new(v22 + 1);
    v236 = v23 | 0x8000000000000000;
    v235[0] = v21;
    v235[1] = v20;
    goto LABEL_16;
  }
  HIBYTE(v236) = v19;
  v21 = v235;
  if (v19)
LABEL_16:
    memmove(v21, v18, (size_t)v20);
  *((_BYTE *)v20 + (_QWORD)v21) = 0;
  v24 = (_QWORD *)operator new();
  *v24 = &off_250AFFF08;
  v24[1] = (char *)&v190 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v235, (uint64_t)v24);
  v258[0] = xmmword_239F0DF01;
  *(_OWORD *)((char *)v258 + 13) = *(__int128 *)((char *)&xmmword_239F0DF01 + 13);
  sub_2396EFD48((uint64_t)v258, *(int32x4_t *)((char *)&xmmword_239F0DF01 + 13), v25, v26, v27);
  v29 = v28;
  v30 = strlen(v28);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v31 = (void *)v30;
  if (v30 >= 0x17)
  {
    v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v33 = v30 | 7;
    v34 = v33 + 1;
    v32 = operator new(v33 + 1);
    v234 = v34 | 0x8000000000000000;
    v233[0] = v32;
    v233[1] = v31;
    goto LABEL_24;
  }
  HIBYTE(v234) = v30;
  v32 = v233;
  if (v30)
LABEL_24:
    memmove(v32, v29, (size_t)v31);
  *((_BYTE *)v31 + (_QWORD)v32) = 0;
  v35 = (_QWORD *)operator new();
  *v35 = &off_250AF3AD0;
  v35[1] = &v194;
  sub_23961580C((uint64_t)__p, (uint64_t)v233, (uint64_t)v35);
  v257[0] = xmmword_239F0DF1E;
  *(_OWORD *)((char *)v257 + 13) = *(__int128 *)((char *)&xmmword_239F0DF1E + 13);
  sub_2396EFD48((uint64_t)v257, *(int32x4_t *)((char *)&xmmword_239F0DF1E + 13), v36, v37, v38);
  v40 = v39;
  v41 = strlen(v39);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v232 = v45 | 0x8000000000000000;
    v231[0] = v43;
    v231[1] = v42;
    goto LABEL_32;
  }
  HIBYTE(v232) = v41;
  v43 = v231;
  if (v41)
LABEL_32:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250AF3AD0;
  v46[1] = &v195;
  sub_23961580C((uint64_t)__p, (uint64_t)v231, (uint64_t)v46);
  strcpy(v256, "1CT\\^GTUnAPXCBnSHnRP\\TCPnP_V]T");
  sub_2396EFF58((uint64_t)v256, *(int32x4_t *)"SHnRP\\TCPnP_V]T", v47, v48, v49);
  v51 = v50;
  v52 = strlen(v50);
  if (v52 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v53 = (void *)v52;
  if (v52 >= 0x17)
  {
    v55 = (v52 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v52 | 7) != 0x17)
      v55 = v52 | 7;
    v56 = v55 + 1;
    v54 = operator new(v55 + 1);
    v230 = v56 | 0x8000000000000000;
    v229[0] = v54;
    v229[1] = v53;
    goto LABEL_40;
  }
  HIBYTE(v230) = v52;
  v54 = v229;
  if (v52)
LABEL_40:
    memmove(v54, v51, (size_t)v53);
  *((_BYTE *)v53 + (_QWORD)v54) = 0;
  v57 = (_QWORD *)operator new();
  *v57 = &off_250AF3AD0;
  v57[1] = &v196;
  sub_23961580C((uint64_t)__p, (uint64_t)v229, (uint64_t)v57);
  strcpy(v255, "(ZMEG^MLwXIAZ[wJQwZMDI\\A^MwXG[M");
  sub_2396F06F0((uint64_t)v255, *(int32x4_t *)"(ZMEG^MLwXIAZ[wJQwZMDI\\A^MwXG[M", *(int8x16_t *)"QwZMDI\\A^MwXG[M", v58, v59);
  v61 = v60;
  v62 = strlen(v60);
  if (v62 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v63 = (void *)v62;
  if (v62 >= 0x17)
  {
    v65 = (v62 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v62 | 7) != 0x17)
      v65 = v62 | 7;
    v66 = v65 + 1;
    v64 = operator new(v65 + 1);
    v228 = v66 | 0x8000000000000000;
    v227[0] = v64;
    v227[1] = v63;
    goto LABEL_48;
  }
  HIBYTE(v228) = v62;
  v64 = v227;
  if (v62)
LABEL_48:
    memmove(v64, v61, (size_t)v63);
  *((_BYTE *)v63 + (_QWORD)v64) = 0;
  v67 = (_QWORD *)operator new();
  *v67 = &off_250AF3AD0;
  v67[1] = &v197;
  sub_23961580C((uint64_t)__p, (uint64_t)v227, (uint64_t)v67);
  v254[0] = xmmword_239F0DF7A;
  *(_QWORD *)((char *)v254 + 15) = 0x76606D66716468;
  sub_2396EFBE0((uint64_t)v254, (int32x4_t)xmmword_239F0DF7A, v68, v69, v70);
  v72 = v71;
  v73 = strlen(v71);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = (void *)v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    v226 = v77 | 0x8000000000000000;
    v225[0] = v75;
    v225[1] = v74;
    goto LABEL_56;
  }
  HIBYTE(v226) = v73;
  v75 = v225;
  if (v73)
LABEL_56:
    memmove(v75, v72, (size_t)v74);
  *((_BYTE *)v74 + (_QWORD)v75) = 0;
  v78 = (_QWORD *)operator new();
  *v78 = &off_250AFFF08;
  v78[1] = &v191;
  sub_23961580C((uint64_t)__p, (uint64_t)v225, (uint64_t)v78);
  strcpy(v253, "0]UQ^oXY^\\YUBo]QDSXUC");
  v82 = sub_239A90BEC((unsigned __int8 *)v253, *(int8x16_t *)"0]UQ^oXY^\\YUBo]QDSXUC", v79, v80, v81);
  v83 = strlen((const char *)v82);
  if (v83 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v84 = (void *)v83;
  if (v83 >= 0x17)
  {
    v86 = (v83 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v83 | 7) != 0x17)
      v86 = v83 | 7;
    v87 = v86 + 1;
    v85 = operator new(v86 + 1);
    v224 = v87 | 0x8000000000000000;
    v223[0] = v85;
    v223[1] = v84;
    goto LABEL_64;
  }
  HIBYTE(v224) = v83;
  v85 = v223;
  if (v83)
LABEL_64:
    memmove(v85, v82, (size_t)v84);
  *((_BYTE *)v84 + (_QWORD)v85) = 0;
  v88 = (_QWORD *)operator new();
  *v88 = &off_250AFFF08;
  v88[1] = &v192;
  sub_23961580C((uint64_t)__p, (uint64_t)v223, (uint64_t)v88);
  *(_OWORD *)v252 = xmmword_239F0DFA7;
  *(_QWORD *)&v252[14] = 0x66707D76617478;
  v92 = sub_239A90BEC(v252, (int8x16_t)xmmword_239F0DFA7, v89, v90, v91);
  v93 = strlen((const char *)v92);
  if (v93 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v94 = (void *)v93;
  if (v93 >= 0x17)
  {
    v96 = (v93 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v93 | 7) != 0x17)
      v96 = v93 | 7;
    v97 = v96 + 1;
    v95 = operator new(v96 + 1);
    v222 = v97 | 0x8000000000000000;
    v221[0] = v95;
    v221[1] = v94;
    goto LABEL_72;
  }
  HIBYTE(v222) = v93;
  v95 = v221;
  if (v93)
LABEL_72:
    memmove(v95, v92, (size_t)v94);
  *((_BYTE *)v94 + (_QWORD)v95) = 0;
  v98 = (_QWORD *)operator new();
  *v98 = &off_250AFFF08;
  v98[1] = &v193;
  sub_23961580C((uint64_t)__p, (uint64_t)v221, (uint64_t)v98);
  strcpy(v251[0].i8, "=OXMROIbMXObTP\\ZX");
  v99 = sub_239A91B18(v251);
  v100 = strlen(v99->i8);
  if (v100 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v101 = (void *)v100;
  if (v100 >= 0x17)
  {
    v103 = (v100 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v100 | 7) != 0x17)
      v103 = v100 | 7;
    v104 = v103 + 1;
    v102 = operator new(v103 + 1);
    v220 = v104 | 0x8000000000000000;
    v219[0] = v102;
    v219[1] = v101;
    goto LABEL_80;
  }
  HIBYTE(v220) = v100;
  v102 = v219;
  if (v100)
LABEL_80:
    memmove(v102, v99, (size_t)v101);
  *((_BYTE *)v101 + (_QWORD)v102) = 0;
  v105 = (_QWORD *)operator new();
  *v105 = &off_250AF3B00;
  v105[1] = &v198;
  sub_23961580C((uint64_t)__p, (uint64_t)v219, (uint64_t)v105);
  v248 = 0x20A0E1309121567;
  v250 = 8;
  v249 = 17370680;
  sub_23971A32C((uint64_t)&v248, v106);
  v108 = v107;
  v109 = strlen(v107);
  if (v109 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v110 = (void *)v109;
  if (v109 >= 0x17)
  {
    v112 = (v109 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v109 | 7) != 0x17)
      v112 = v109 | 7;
    v113 = v112 + 1;
    v111 = operator new(v112 + 1);
    v218 = v113 | 0x8000000000000000;
    v217[0] = v111;
    v217[1] = v110;
    goto LABEL_88;
  }
  HIBYTE(v218) = v109;
  v111 = v217;
  if (v109)
LABEL_88:
    memmove(v111, v108, (size_t)v110);
  *((_BYTE *)v110 + (_QWORD)v111) = 0;
  v114 = (_QWORD *)operator new();
  *v114 = &off_250AFFFF8;
  v114[1] = &v199;
  sub_23961580C((uint64_t)__p, (uint64_t)v217, (uint64_t)v114);
  v247[0] = xmmword_239F0E06A;
  *(_OWORD *)((char *)v247 + 12) = *(__int128 *)((char *)&xmmword_239F0E06A + 12);
  sub_2396B946C((uint64_t)v247, *(int32x4_t *)((char *)&xmmword_239F0E06A + 12), v115, v116, v117);
  v119 = v118;
  v120 = strlen(v118);
  if (v120 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v121 = (void *)v120;
  if (v120 >= 0x17)
  {
    v123 = (v120 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v120 | 7) != 0x17)
      v123 = v120 | 7;
    v124 = v123 + 1;
    v122 = operator new(v123 + 1);
    v216 = v124 | 0x8000000000000000;
    v215[0] = v122;
    v215[1] = v121;
    goto LABEL_96;
  }
  HIBYTE(v216) = v120;
  v122 = v215;
  if (v120)
LABEL_96:
    memmove(v122, v119, (size_t)v121);
  *((_BYTE *)v121 + (_QWORD)v122) = 0;
  v125 = (_QWORD *)operator new();
  *v125 = &off_250AE0220;
  v125[1] = &v200;
  sub_23961580C((uint64_t)__p, (uint64_t)v215, (uint64_t)v125);
  v246[0] = xmmword_239F0E086;
  *(_OWORD *)((char *)v246 + 13) = *(__int128 *)((char *)&xmmword_239F0E086 + 13);
  sub_2396EFD48((uint64_t)v246, *(int32x4_t *)((char *)&xmmword_239F0E086 + 13), v126, v127, v128);
  v130 = v129;
  v131 = strlen(v129);
  if (v131 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v132 = (void *)v131;
  if (v131 >= 0x17)
  {
    v134 = (v131 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v131 | 7) != 0x17)
      v134 = v131 | 7;
    v135 = v134 + 1;
    v133 = operator new(v134 + 1);
    v214 = v135 | 0x8000000000000000;
    v213[0] = v133;
    v213[1] = v132;
    goto LABEL_104;
  }
  HIBYTE(v214) = v131;
  v133 = v213;
  if (v131)
LABEL_104:
    memmove(v133, v130, (size_t)v132);
  *((_BYTE *)v132 + (_QWORD)v133) = 0;
  v136 = (_QWORD *)operator new();
  *v136 = &off_250AE0220;
  v136[1] = (char *)&v200 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v213, (uint64_t)v136);
  strcpy(v245, "W>$\b'%>8%\b2/#%>9$>4\b6'';>23");
  sub_2396B946C((uint64_t)v245, *(int32x4_t *)"#%>9$>4\b6'';>23", v137, v138, v139);
  v141 = v140;
  v142 = strlen(v140);
  if (v142 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v143 = (void *)v142;
  if (v142 >= 0x17)
  {
    v145 = (v142 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v142 | 7) != 0x17)
      v145 = v142 | 7;
    v146 = v145 + 1;
    v144 = operator new(v145 + 1);
    v212 = v146 | 0x8000000000000000;
    v211[0] = v144;
    v211[1] = v143;
    goto LABEL_112;
  }
  HIBYTE(v212) = v142;
  v144 = v211;
  if (v142)
LABEL_112:
    memmove(v144, v141, (size_t)v143);
  *((_BYTE *)v143 + (_QWORD)v144) = 0;
  v147 = (_QWORD *)operator new();
  *v147 = &off_250AE0220;
  v147[1] = (char *)&v200 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v211, (uint64_t)v147);
  *(_OWORD *)v244 = xmmword_239F0E0BF;
  *(_OWORD *)&v244[10] = *(__int128 *)((char *)&xmmword_239F0E0BF + 10);
  sub_239A93C04(v244, *(int32x4_t *)((char *)&xmmword_239F0E0BF + 10), v148, v149, v150);
  v152 = v151;
  v153 = strlen(v151);
  if (v153 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v154 = (void *)v153;
  if (v153 >= 0x17)
  {
    v156 = (v153 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v153 | 7) != 0x17)
      v156 = v153 | 7;
    v157 = v156 + 1;
    v155 = operator new(v156 + 1);
    v210 = v157 | 0x8000000000000000;
    v209[0] = v155;
    v209[1] = v154;
    goto LABEL_120;
  }
  HIBYTE(v210) = v153;
  v155 = v209;
  if (v153)
LABEL_120:
    memmove(v155, v152, (size_t)v154);
  *((_BYTE *)v154 + (_QWORD)v155) = 0;
  v158 = (_QWORD *)operator new();
  *v158 = &off_250AE0220;
  v158[1] = (char *)&v200 + 3;
  sub_23961580C((uint64_t)__p, (uint64_t)v209, (uint64_t)v158);
  strcpy(v243, "D-7\x1B46-+6\x1B+&.!'0\x1B06%'/\x1B%44(-! ");
  sub_2396EFF58((uint64_t)v243, *(int32x4_t *)"0\x1B06%'/\x1B%44(-! ", v159, v160, v161);
  v163 = v162;
  v164 = strlen(v162);
  if (v164 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v165 = (void *)v164;
  if (v164 >= 0x17)
  {
    v167 = (v164 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v164 | 7) != 0x17)
      v167 = v164 | 7;
    v168 = v167 + 1;
    v166 = operator new(v167 + 1);
    v208 = v168 | 0x8000000000000000;
    v207[0] = v166;
    v207[1] = v165;
    goto LABEL_128;
  }
  HIBYTE(v208) = v164;
  v166 = v207;
  if (v164)
LABEL_128:
    memmove(v166, v163, (size_t)v165);
  *((_BYTE *)v165 + (_QWORD)v166) = 0;
  v169 = (_QWORD *)operator new();
  *v169 = &off_250AE0220;
  v169[1] = (char *)&v200 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v207, (uint64_t)v169);
  strcpy(v242[0].i8, "1CTA^CEnCTECXTGP]");
  v170 = sub_239A91B18(v242);
  v171 = strlen(v170->i8);
  if (v171 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v172 = (void *)v171;
  if (v171 >= 0x17)
  {
    v174 = (v171 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v171 | 7) != 0x17)
      v174 = v171 | 7;
    v175 = v174 + 1;
    v173 = operator new(v174 + 1);
    v206 = v175 | 0x8000000000000000;
    v205[0] = v173;
    v205[1] = v172;
    goto LABEL_136;
  }
  HIBYTE(v206) = v171;
  v173 = v205;
  if (v171)
LABEL_136:
    memmove(v173, v170, (size_t)v172);
  *((_BYTE *)v172 + (_QWORD)v173) = 0;
  v176 = (_QWORD *)operator new();
  *v176 = &off_250AF3B30;
  v176[1] = &v201;
  sub_23961580C((uint64_t)__p, (uint64_t)v205, (uint64_t)v176);
  strcpy(v241, "\rx~hiRnbckdj");
  v177 = sub_239510ECC((uint64_t)v241);
  v178 = strlen(v177);
  if (v178 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v179 = (void *)v178;
  if (v178 >= 0x17)
  {
    v181 = (v178 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v178 | 7) != 0x17)
      v181 = v178 | 7;
    v182 = v181 + 1;
    v180 = operator new(v181 + 1);
    v204 = v182 | 0x8000000000000000;
    v203[0] = v180;
    v203[1] = v179;
    goto LABEL_144;
  }
  HIBYTE(v204) = v178;
  v180 = v203;
  if (v178)
LABEL_144:
    memmove(v180, v177, (size_t)v179);
  *((_BYTE *)v179 + (_QWORD)v180) = 0;
  v183 = (_QWORD *)operator new();
  *v183 = &off_250AF3B90;
  v183[1] = &v202;
  sub_23961580C((uint64_t)__p, (uint64_t)v203, (uint64_t)v183);
  if (SHIBYTE(v204) < 0)
  {
    operator delete(v203[0]);
    if ((SHIBYTE(v206) & 0x80000000) == 0)
    {
LABEL_147:
      if ((SHIBYTE(v208) & 0x80000000) == 0)
        goto LABEL_148;
      goto LABEL_178;
    }
  }
  else if ((SHIBYTE(v206) & 0x80000000) == 0)
  {
    goto LABEL_147;
  }
  operator delete(v205[0]);
  if ((SHIBYTE(v208) & 0x80000000) == 0)
  {
LABEL_148:
    if ((SHIBYTE(v210) & 0x80000000) == 0)
      goto LABEL_149;
    goto LABEL_179;
  }
LABEL_178:
  operator delete(v207[0]);
  if ((SHIBYTE(v210) & 0x80000000) == 0)
  {
LABEL_149:
    if ((SHIBYTE(v212) & 0x80000000) == 0)
      goto LABEL_150;
    goto LABEL_180;
  }
LABEL_179:
  operator delete(v209[0]);
  if ((SHIBYTE(v212) & 0x80000000) == 0)
  {
LABEL_150:
    if ((SHIBYTE(v214) & 0x80000000) == 0)
      goto LABEL_151;
    goto LABEL_181;
  }
LABEL_180:
  operator delete(v211[0]);
  if ((SHIBYTE(v214) & 0x80000000) == 0)
  {
LABEL_151:
    if ((SHIBYTE(v216) & 0x80000000) == 0)
      goto LABEL_152;
    goto LABEL_182;
  }
LABEL_181:
  operator delete(v213[0]);
  if ((SHIBYTE(v216) & 0x80000000) == 0)
  {
LABEL_152:
    if ((SHIBYTE(v218) & 0x80000000) == 0)
      goto LABEL_153;
    goto LABEL_183;
  }
LABEL_182:
  operator delete(v215[0]);
  if ((SHIBYTE(v218) & 0x80000000) == 0)
  {
LABEL_153:
    if ((SHIBYTE(v220) & 0x80000000) == 0)
      goto LABEL_154;
    goto LABEL_184;
  }
LABEL_183:
  operator delete(v217[0]);
  if ((SHIBYTE(v220) & 0x80000000) == 0)
  {
LABEL_154:
    if ((SHIBYTE(v222) & 0x80000000) == 0)
      goto LABEL_155;
    goto LABEL_185;
  }
LABEL_184:
  operator delete(v219[0]);
  if ((SHIBYTE(v222) & 0x80000000) == 0)
  {
LABEL_155:
    if ((SHIBYTE(v224) & 0x80000000) == 0)
      goto LABEL_156;
    goto LABEL_186;
  }
LABEL_185:
  operator delete(v221[0]);
  if ((SHIBYTE(v224) & 0x80000000) == 0)
  {
LABEL_156:
    if ((SHIBYTE(v226) & 0x80000000) == 0)
      goto LABEL_157;
    goto LABEL_187;
  }
LABEL_186:
  operator delete(v223[0]);
  if ((SHIBYTE(v226) & 0x80000000) == 0)
  {
LABEL_157:
    if ((SHIBYTE(v228) & 0x80000000) == 0)
      goto LABEL_158;
    goto LABEL_188;
  }
LABEL_187:
  operator delete(v225[0]);
  if ((SHIBYTE(v228) & 0x80000000) == 0)
  {
LABEL_158:
    if ((SHIBYTE(v230) & 0x80000000) == 0)
      goto LABEL_159;
    goto LABEL_189;
  }
LABEL_188:
  operator delete(v227[0]);
  if ((SHIBYTE(v230) & 0x80000000) == 0)
  {
LABEL_159:
    if ((SHIBYTE(v232) & 0x80000000) == 0)
      goto LABEL_160;
    goto LABEL_190;
  }
LABEL_189:
  operator delete(v229[0]);
  if ((SHIBYTE(v232) & 0x80000000) == 0)
  {
LABEL_160:
    if ((SHIBYTE(v234) & 0x80000000) == 0)
      goto LABEL_161;
    goto LABEL_191;
  }
LABEL_190:
  operator delete(v231[0]);
  if ((SHIBYTE(v234) & 0x80000000) == 0)
  {
LABEL_161:
    if ((SHIBYTE(v236) & 0x80000000) == 0)
      goto LABEL_162;
LABEL_192:
    operator delete(v235[0]);
    if ((SHIBYTE(v238) & 0x80000000) == 0)
      goto LABEL_163;
    goto LABEL_193;
  }
LABEL_191:
  operator delete(v233[0]);
  if (SHIBYTE(v236) < 0)
    goto LABEL_192;
LABEL_162:
  if ((SHIBYTE(v238) & 0x80000000) == 0)
    goto LABEL_163;
LABEL_193:
  operator delete(__dst[0]);
LABEL_163:
  sub_23959479C((uint64_t)__p, a2);
  v184 = v240;
  if (v240)
  {
    do
    {
      v185 = v184[5];
      if (v185)
        (*(void (**)(uint64_t))(*(_QWORD *)v185 + 8))(v185);
      v184 = (_QWORD *)*v184;
    }
    while (v184);
    v186 = (void **)v240;
    if (v240)
    {
      do
      {
        v188 = (void **)*v186;
        if (*((char *)v186 + 39) < 0)
          operator delete(v186[2]);
        operator delete(v186);
        v186 = v188;
      }
      while (v188);
    }
  }
  v187 = __p[0];
  __p[0] = 0;
  if (v187)
    operator delete(v187);
  if (*(_BYTE *)(v5 + 712))
  {
    sub_239AD2508(v5, &v190);
  }
  else
  {
    sub_239A5EC2C(v5, &v190);
    *(_BYTE *)(v5 + 712) = 1;
  }
  sub_239A6177C((uint64_t)&v190);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AD2008(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2395905C0((uint64_t)&STACK[0x480]);
  sub_239A6177C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239AD22A4()
{
  JUMPOUT(0x239AD2234);
}

uint64_t sub_239AD233C(uint64_t a1)
{
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v5;

  *(_QWORD *)(a1 + 48) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = a1 + 48;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = a1 + 72;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = a1 + 96;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = a1 + 120;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_QWORD *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 168) = 1065353216;
  *(_QWORD *)(a1 + 240) = 0;
  *(_QWORD *)(a1 + 248) = 0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_DWORD *)(a1 + 224) = 0;
  *(_BYTE *)(a1 + 256) = 1;
  *(std::chrono::system_clock::time_point *)(a1 + 192) = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a1 + 220) = (float)((float)v5 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a1 + 256) = 1;
  *(_BYTE *)(a1 + 268) = 0;
  *(_DWORD *)(a1 + 264) = 0;
  *(_BYTE *)(a1 + 272) = 1;
  *(_DWORD *)(a1 + 276) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_DWORD *)(a1 + 288) = -1082130432;
  *(_QWORD *)(a1 + 296) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 304) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_DWORD *)(a1 + 344) = 1065353216;
  *(_OWORD *)(a1 + 352) = xmmword_239F0C030;
  *(_DWORD *)(a1 + 368) = -1082130432;
  sub_239AE2278(a1 + 376);
  return a1;
}

void sub_239AD24A0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  _QWORD **v4;
  _QWORD **v5;
  _QWORD **v6;
  _QWORD **v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v12;

  v9 = v8;
  v10 = v3;
  sub_239A63464(v9);
  v12 = *v10;
  if (*v10)
  {
    *(_QWORD *)(v1 + 240) = v12;
    operator delete(v12);
  }
  sub_239420950(v2);
  sub_239A61F08(*v7);
  sub_239A61F08(*v6);
  sub_239A61F08(*v5);
  sub_239A61F08(*v4);
  _Unwind_Resume(a1);
}

uint64_t sub_239AD2508(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t i;
  uint64_t *v9;
  __int128 v10;
  __int128 v11;
  uint64_t *v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  int v19;
  __int128 v20;
  __int128 v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t j;
  uint64_t *v25;
  uint64_t *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  if ((__int128 *)a1 != a2)
  {
    sub_239AD28A8((uint64_t **)(a1 + 40), *((_QWORD **)a2 + 5), (_QWORD *)a2 + 6);
    sub_239AD28A8((uint64_t **)(a1 + 64), *((_QWORD **)a2 + 8), (_QWORD *)a2 + 9);
    sub_239AD28A8((uint64_t **)(a1 + 88), *((_QWORD **)a2 + 11), (_QWORD *)a2 + 12);
    sub_239AD28A8((uint64_t **)(a1 + 112), *((_QWORD **)a2 + 14), (_QWORD *)a2 + 15);
    *(_DWORD *)(a1 + 168) = *((_DWORD *)a2 + 42);
    v6 = (uint64_t *)*((_QWORD *)a2 + 19);
    v7 = *(_QWORD *)(a1 + 144);
    if (!v7)
      goto LABEL_8;
    for (i = 0; i != v7; ++i)
      *(_QWORD *)(*(_QWORD *)(a1 + 136) + 8 * i) = 0;
    v9 = *(uint64_t **)(a1 + 152);
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    if (v9)
    {
      while (v6)
      {
        v9[2] = v6[2];
        v10 = *(_OWORD *)(v6 + 3);
        v11 = *(_OWORD *)(v6 + 5);
        *(_OWORD *)(v9 + 7) = *(_OWORD *)(v6 + 7);
        *(_OWORD *)(v9 + 5) = v11;
        *(_OWORD *)(v9 + 3) = v10;
        v12 = (uint64_t *)*v9;
        sub_239A997F8(a1 + 136, v9);
        v6 = (uint64_t *)*v6;
        v9 = v12;
        if (!v12)
          goto LABEL_8;
      }
      do
      {
        v17 = (uint64_t *)*v9;
        operator delete(v9);
        v9 = v17;
      }
      while (v17);
    }
    else
    {
LABEL_8:
      while (v6)
      {
        v13 = operator new(0x48uLL);
        *v13 = 0;
        v15 = *((_OWORD *)v6 + 2);
        v14 = *((_OWORD *)v6 + 3);
        v16 = *((_OWORD *)v6 + 1);
        v13[8] = v6[8];
        *((_OWORD *)v13 + 2) = v15;
        *((_OWORD *)v13 + 3) = v14;
        *((_OWORD *)v13 + 1) = v16;
        v13[1] = v13[2];
        sub_239A997F8(a1 + 136, v13);
        v6 = (uint64_t *)*v6;
      }
    }
  }
  *(_OWORD *)(a1 + 176) = a2[11];
  *(_QWORD *)(a1 + 192) = *((_QWORD *)a2 + 24);
  *(_OWORD *)(a1 + 200) = *(__int128 *)((char *)a2 + 200);
  v18 = *((_QWORD *)a2 + 27);
  *(_DWORD *)(a1 + 224) = *((_DWORD *)a2 + 56);
  *(_QWORD *)(a1 + 216) = v18;
  if ((__int128 *)a1 != a2)
  {
    sub_23942156C((_QWORD *)(a1 + 232), *((char **)a2 + 29), *((char **)a2 + 30), (uint64_t)(*((_QWORD *)a2 + 30) - *((_QWORD *)a2 + 29)) >> 2);
    *(_BYTE *)(a1 + 256) = *((_BYTE *)a2 + 256);
    v19 = *((_DWORD *)a2 + 66);
    *(_BYTE *)(a1 + 268) = *((_BYTE *)a2 + 268);
    *(_DWORD *)(a1 + 264) = v19;
    v20 = a2[17];
    v21 = a2[18];
    *(_QWORD *)(a1 + 304) = *((_QWORD *)a2 + 38);
    *(_OWORD *)(a1 + 272) = v20;
    *(_OWORD *)(a1 + 288) = v21;
    *(_DWORD *)(a1 + 344) = *((_DWORD *)a2 + 86);
    v22 = (uint64_t *)*((_QWORD *)a2 + 41);
    v23 = *(_QWORD *)(a1 + 320);
    if (!v23)
      goto LABEL_19;
    for (j = 0; j != v23; ++j)
      *(_QWORD *)(*(_QWORD *)(a1 + 312) + 8 * j) = 0;
    v25 = *(uint64_t **)(a1 + 328);
    *(_QWORD *)(a1 + 328) = 0;
    *(_QWORD *)(a1 + 336) = 0;
    if (v25)
    {
      while (v22)
      {
        v25[2] = v22[2];
        *(_OWORD *)(v25 + 3) = *(_OWORD *)(v22 + 3);
        v26 = (uint64_t *)*v25;
        sub_239A997F8(a1 + 312, v25);
        v22 = (uint64_t *)*v22;
        v25 = v26;
        if (!v26)
          goto LABEL_19;
      }
      do
      {
        v29 = (uint64_t *)*v25;
        operator delete(v25);
        v25 = v29;
      }
      while (v29);
    }
    else
    {
LABEL_19:
      while (v22)
      {
        v27 = operator new(0x28uLL);
        *(_QWORD *)v27 = 0;
        v28 = v22[4];
        v27[1] = *((_OWORD *)v22 + 1);
        *((_QWORD *)v27 + 4) = v28;
        *((_QWORD *)v27 + 1) = *((_QWORD *)v27 + 2);
        sub_239A997F8(a1 + 312, v27);
        v22 = (uint64_t *)*v22;
      }
    }
    v30 = a2[22];
    *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
    *(_OWORD *)(a1 + 352) = v30;
    v31 = *(__int128 *)((char *)a2 + 376);
    *(_OWORD *)(a1 + 388) = *(__int128 *)((char *)a2 + 388);
    *(_OWORD *)(a1 + 376) = v31;
    sub_23945D3D0((_QWORD *)(a1 + 408), *((char **)a2 + 51), *((char **)a2 + 52), (uint64_t)(*((_QWORD *)a2 + 52) - *((_QWORD *)a2 + 51)) >> 3);
  }
  std::string::operator=((std::string *)(a1 + 432), (const std::string *)a2 + 18);
  v32 = *(__int128 *)((char *)a2 + 504);
  v34 = *(__int128 *)((char *)a2 + 456);
  v33 = *(__int128 *)((char *)a2 + 472);
  *(_OWORD *)(a1 + 488) = *(__int128 *)((char *)a2 + 488);
  *(_OWORD *)(a1 + 504) = v32;
  *(_OWORD *)(a1 + 456) = v34;
  *(_OWORD *)(a1 + 472) = v33;
  v35 = *(__int128 *)((char *)a2 + 568);
  v37 = *(__int128 *)((char *)a2 + 520);
  v36 = *(__int128 *)((char *)a2 + 536);
  *(_OWORD *)(a1 + 552) = *(__int128 *)((char *)a2 + 552);
  *(_OWORD *)(a1 + 568) = v35;
  *(_OWORD *)(a1 + 520) = v37;
  *(_OWORD *)(a1 + 536) = v36;
  v38 = *(__int128 *)((char *)a2 + 632);
  v40 = *(__int128 *)((char *)a2 + 584);
  v39 = *(__int128 *)((char *)a2 + 600);
  *(_OWORD *)(a1 + 616) = *(__int128 *)((char *)a2 + 616);
  *(_OWORD *)(a1 + 632) = v38;
  *(_OWORD *)(a1 + 584) = v40;
  *(_OWORD *)(a1 + 600) = v39;
  v41 = *(__int128 *)((char *)a2 + 696);
  v43 = *(__int128 *)((char *)a2 + 648);
  v42 = *(__int128 *)((char *)a2 + 664);
  *(_OWORD *)(a1 + 680) = *(__int128 *)((char *)a2 + 680);
  *(_OWORD *)(a1 + 696) = v41;
  *(_OWORD *)(a1 + 648) = v43;
  *(_OWORD *)(a1 + 664) = v42;
  return a1;
}

void sub_239AD2830(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  __cxa_begin_catch(a1);
  do
  {
    v2 = (_QWORD *)*v1;
    operator delete(v1);
    v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_239AD284C()
{
  __break(1u);
}

void sub_239AD2880(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239AD2890()
{
  void *v0;

  operator delete(v0);
  JUMPOUT(0x239AD28A0);
}

void sub_239AD28A8(uint64_t **a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  _QWORD *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t *v16;
  uint64_t **v17;
  uint64_t **v18;
  unsigned int v19;
  uint64_t *v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *i;
  uint64_t **v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t **v31;
  uint64_t **v32;
  unsigned int v33;
  uint64_t *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t *v37;

  v4 = a2;
  if (a1[2])
  {
    v6 = (uint64_t **)*a1;
    v8 = a1 + 1;
    v7 = a1[1];
    *a1 = (uint64_t *)(a1 + 1);
    v7[2] = 0;
    a1[2] = 0;
    a1[1] = 0;
    v9 = v6[1] ? v6[1] : (uint64_t *)v6;
    if (v9)
    {
      v10 = (uint64_t *)v9[2];
      if (v10)
      {
        v11 = (uint64_t *)*v10;
        if ((uint64_t *)*v10 == v9)
        {
          *v10 = 0;
          while (1)
          {
            v37 = (_QWORD *)v10[1];
            if (!v37)
              break;
            do
            {
              v10 = v37;
              v37 = (_QWORD *)*v37;
            }
            while (v37);
          }
        }
        else
        {
          for (v10[1] = 0; v11; v11 = (uint64_t *)v10[1])
          {
            do
            {
              v10 = v11;
              v11 = (uint64_t *)*v11;
            }
            while (v11);
          }
        }
      }
      if (a2 != a3)
      {
        v12 = v9;
        v13 = v4;
        do
        {
          v9 = v10;
          v14 = *((_DWORD *)v13 + 7);
          v15 = *((_DWORD *)v13 + 8);
          *((_DWORD *)v12 + 7) = v14;
          *((_DWORD *)v12 + 8) = v15;
          v16 = *v8;
          v17 = a1 + 1;
          v18 = a1 + 1;
          if (*v8)
          {
            do
            {
              while (1)
              {
                v17 = v16;
                v19 = *((_DWORD *)v16 + 7);
                if (v14 >= v19 && (v19 < v14 || v15 >= *((_DWORD *)v16 + 8)))
                  break;
                v16 = (uint64_t *)*v16;
                v18 = (uint64_t **)v17;
                if (!*v17)
                  goto LABEL_21;
              }
              v16 = (uint64_t *)v16[1];
            }
            while (v16);
            v18 = (uint64_t **)(v17 + 1);
          }
LABEL_21:
          *v12 = 0;
          v12[1] = 0;
          v12[2] = (uint64_t)v17;
          *v18 = v12;
          v20 = (uint64_t *)**a1;
          if (v20)
          {
            *a1 = v20;
            v12 = *v18;
          }
          sub_2394213B8(a1[1], v12);
          a1[2] = (uint64_t *)((char *)a1[2] + 1);
          if (v10)
          {
            v10 = (uint64_t *)v10[2];
            if (v10)
            {
              v23 = (_QWORD *)*v10;
              if ((uint64_t *)*v10 == v9)
              {
                *v10 = 0;
                while (1)
                {
                  v24 = (_QWORD *)v10[1];
                  if (!v24)
                    break;
                  do
                  {
                    v10 = v24;
                    v24 = (_QWORD *)*v24;
                  }
                  while (v24);
                }
              }
              else
              {
                for (v10[1] = 0; v23; v23 = (_QWORD *)v10[1])
                {
                  do
                  {
                    v10 = v23;
                    v23 = (_QWORD *)*v23;
                  }
                  while (v23);
                }
              }
            }
          }
          else
          {
            v10 = 0;
          }
          v21 = (_QWORD *)v13[1];
          if (v21)
          {
            do
            {
              v4 = v21;
              v21 = (_QWORD *)*v21;
            }
            while (v21);
          }
          else
          {
            do
            {
              v4 = (_QWORD *)v13[2];
              v22 = *v4 == (_QWORD)v13;
              v13 = v4;
            }
            while (!v22);
          }
          if (!v9)
            break;
          v12 = v9;
          v13 = v4;
        }
        while (v4 != a3);
      }
      sub_239A61F08(v9);
      if (v10)
      {
        for (i = (_QWORD *)v10[2]; i; i = (_QWORD *)i[2])
          v10 = i;
        sub_239A61F08(v10);
      }
    }
  }
  if (v4 != a3)
  {
    v26 = a1 + 1;
    do
    {
      v27 = (uint64_t *)operator new(0x28uLL);
      v28 = v27;
      v29 = *(_QWORD *)((char *)v4 + 28);
      *(uint64_t *)((char *)v27 + 28) = v29;
      v30 = *v26;
      v31 = a1 + 1;
      v32 = a1 + 1;
      if (*v26)
      {
        do
        {
          while (1)
          {
            v31 = (uint64_t **)v30;
            v33 = *((_DWORD *)v30 + 7);
            if (v33 <= v29 && (v33 < v29 || *((_DWORD *)v30 + 8) <= HIDWORD(v29)))
              break;
            v30 = (uint64_t *)*v30;
            v32 = v31;
            if (!*v31)
              goto LABEL_58;
          }
          v30 = (uint64_t *)v30[1];
        }
        while (v30);
        v32 = v31 + 1;
      }
LABEL_58:
      *v27 = 0;
      v27[1] = 0;
      v27[2] = (uint64_t)v31;
      *v32 = v27;
      v34 = (uint64_t *)**a1;
      if (v34)
      {
        *a1 = v34;
        v28 = *v32;
      }
      sub_2394213B8(a1[1], v28);
      a1[2] = (uint64_t *)((char *)a1[2] + 1);
      v35 = (_QWORD *)v4[1];
      if (v35)
      {
        do
        {
          v36 = v35;
          v35 = (_QWORD *)*v35;
        }
        while (v35);
      }
      else
      {
        do
        {
          v36 = (_QWORD *)v4[2];
          v22 = *v36 == (_QWORD)v4;
          v4 = v36;
        }
        while (!v22);
      }
      v4 = v36;
    }
    while (v36 != a3);
  }
}

void sub_239AD2BB0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD2BD4(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ADA8C4(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AD2C10(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  double v19;
  int16x8_t v20;
  const char *v21;
  const char *v22;
  size_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  double v29;
  double v30;
  int16x8_t v31;
  const char *v32;
  const char *v33;
  size_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  double v40;
  int32x4_t v41;
  const char *v42;
  const char *v43;
  size_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  double v50;
  int16x8_t v51;
  const char *v52;
  const char *v53;
  size_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  int8x16_t v60;
  double v61;
  int32x4_t v62;
  const char *v63;
  const char *v64;
  size_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  const char *v71;
  const char *v72;
  size_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  const char *v79;
  const char *v80;
  size_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  int16x8_t v87;
  const char *v88;
  const char *v89;
  size_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  const char *v96;
  const char *v97;
  size_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  double v104;
  int16x8_t v105;
  const char *v106;
  const char *v107;
  size_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  int8x16_t v114;
  double v115;
  int32x4_t v116;
  const char *v117;
  const char *v118;
  size_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  const char *v125;
  size_t v126;
  void *v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  const char *v132;
  const char *v133;
  size_t v134;
  void *v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  int8x16_t v140;
  double v141;
  int32x4_t v142;
  const char *v143;
  const char *v144;
  size_t v145;
  void *v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  int16x8_t v151;
  const char *v152;
  const char *v153;
  size_t v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  const char *v160;
  size_t v161;
  void *v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  double v167;
  int32x4_t v168;
  const char *v169;
  const char *v170;
  size_t v171;
  void *v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  int8x16_t *v177;
  size_t v178;
  void *v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  int8x16_t v184;
  double v185;
  int32x4_t v186;
  const char *v187;
  const char *v188;
  size_t v189;
  void *v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  _QWORD *v195;
  uint64_t v196;
  void **v197;
  void *v198;
  void **v200;
  void *v201[2];
  unint64_t v202;
  void *v203[2];
  unint64_t v204;
  void *v205[2];
  unint64_t v206;
  void *v207[2];
  unint64_t v208;
  void *v209[2];
  unint64_t v210;
  void *v211[2];
  unint64_t v212;
  void *v213[2];
  unint64_t v214;
  void *v215[2];
  unint64_t v216;
  void *v217[2];
  unint64_t v218;
  void *v219[2];
  unint64_t v220;
  void *v221[2];
  unint64_t v222;
  void *v223[2];
  unint64_t v224;
  void *v225[2];
  unint64_t v226;
  void *v227[2];
  unint64_t v228;
  void *v229[2];
  unint64_t v230;
  void *v231[2];
  unint64_t v232;
  void *v233[2];
  unint64_t v234;
  void *v235[2];
  unint64_t v236;
  void *v237[2];
  unint64_t v238;
  void *v239[2];
  unint64_t v240;
  void *__dst[2];
  unint64_t v242;
  void *__p[2];
  void *v244;
  uint64_t v245;
  __int128 v246;
  uint64_t v247;
  __int128 v248;
  __int16 v249;
  _OWORD v250[2];
  char v251;
  uint64_t v252;
  int v253;
  char v254[16];
  char v255[32];
  __int128 v256;
  char v257;
  char v258[16];
  char v259[32];
  __int128 v260;
  _OWORD v261[2];
  __int128 v262;
  char v263;
  uint64_t v264;
  int v265;
  __int16 v266;
  uint64_t v267;
  char v268[8];
  __int128 v269;
  _OWORD v270[2];
  __int128 v271;
  _OWORD v272[2];
  _OWORD v273[2];
  _OWORD v274[2];
  __int16 v275;
  __int128 v276;
  _OWORD v277[2];
  _BYTE v278[24];
  uint64_t v279;
  char v280[8];
  uint64_t v281;

  v281 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  v245 = 0;
  sub_2396157EC((uint64_t)__p, a3);
  v279 = 0x78627E55677F640ALL;
  strcpy(v280, "okny");
  v5 = sub_239510ECC((uint64_t)&v279);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v242 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v242) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF240;
  v11[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  strcpy(v278, "5XTMjGT[FTVjPGGZG");
  v12 = sub_239A91B18((int8x16_t *)v278);
  v13 = strlen(v12->i8);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v239[1] = v14;
    v240 = v17 | 0x8000000000000000;
    v239[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v240) = v13;
  v15 = v239;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250ADF360;
  v18[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v239, (uint64_t)v18);
  v276 = xmmword_239F0E29A;
  v277[0] = *(_OWORD *)dbl_239F0E2AA;
  *(_QWORD *)((char *)v277 + 13) = 0x4021F0A19340FLL;
  sub_2396F11DC((unsigned __int8 *)&v276, (int16x8_t)xmmword_239F0E29A, dbl_239F0E2AA[0], v19, v20);
  v22 = v21;
  v23 = strlen(v21);
  if (v23 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v24 = (void *)v23;
  if (v23 >= 0x17)
  {
    v26 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v23 | 7) != 0x17)
      v26 = v23 | 7;
    v27 = v26 + 1;
    v25 = operator new(v26 + 1);
    v237[1] = v24;
    v238 = v27 | 0x8000000000000000;
    v237[0] = v25;
    goto LABEL_24;
  }
  HIBYTE(v238) = v23;
  v25 = v237;
  if (v23)
LABEL_24:
    memmove(v25, v22, (size_t)v24);
  *((_BYTE *)v24 + (_QWORD)v25) = 0;
  v28 = (_QWORD *)operator new();
  *v28 = &off_250ADF360;
  v28[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v237, (uint64_t)v28);
  v274[0] = xmmword_239F0E2BF;
  v274[1] = *(_OWORD *)dbl_239F0E2CF;
  v275 = 1;
  sub_2396F0120((unsigned __int8 *)v274, (int16x8_t)xmmword_239F0E2BF, dbl_239F0E2CF[0], v29, v30, v31);
  v33 = v32;
  v34 = strlen(v32);
  if (v34 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v35 = (void *)v34;
  if (v34 >= 0x17)
  {
    v37 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v34 | 7) != 0x17)
      v37 = v34 | 7;
    v38 = v37 + 1;
    v36 = operator new(v37 + 1);
    v235[1] = v35;
    v236 = v38 | 0x8000000000000000;
    v235[0] = v36;
    goto LABEL_32;
  }
  HIBYTE(v236) = v34;
  v36 = v235;
  if (v34)
LABEL_32:
    memmove(v36, v33, (size_t)v35);
  *((_BYTE *)v35 + (_QWORD)v36) = 0;
  v39 = (_QWORD *)operator new();
  *v39 = &off_250AE0220;
  v39[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v235, (uint64_t)v39);
  v273[0] = xmmword_239F0E2E1;
  v273[1] = xmmword_239F0E2F1;
  sub_2396F06F0((uint64_t)v273, (int32x4_t)xmmword_239F0E2E1, xmmword_239F0E2F1, v40, v41);
  v43 = v42;
  v44 = strlen(v42);
  if (v44 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v45 = (void *)v44;
  if (v44 >= 0x17)
  {
    v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v44 | 7) != 0x17)
      v47 = v44 | 7;
    v48 = v47 + 1;
    v46 = operator new(v47 + 1);
    v233[1] = v45;
    v234 = v48 | 0x8000000000000000;
    v233[0] = v46;
    goto LABEL_40;
  }
  HIBYTE(v234) = v44;
  v46 = v233;
  if (v44)
LABEL_40:
    memmove(v46, v43, (size_t)v45);
  *((_BYTE *)v45 + (_QWORD)v46) = 0;
  v49 = (_QWORD *)operator new();
  *v49 = &off_250AE0220;
  v49[1] = v4 + 25;
  sub_23961580C((uint64_t)__p, (uint64_t)v233, (uint64_t)v49);
  v271 = xmmword_239F0E301;
  v272[0] = *(_OWORD *)dbl_239F0E311;
  *(_DWORD *)((char *)v272 + 15) = 1905690;
  sub_2396F0060((unsigned __int8 *)&v271, (int16x8_t)xmmword_239F0E301, dbl_239F0E311[0], v50, v51);
  v53 = v52;
  v54 = strlen(v52);
  if (v54 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v55 = (void *)v54;
  if (v54 >= 0x17)
  {
    v57 = (v54 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v54 | 7) != 0x17)
      v57 = v54 | 7;
    v58 = v57 + 1;
    v56 = operator new(v57 + 1);
    v231[1] = v55;
    v232 = v58 | 0x8000000000000000;
    v231[0] = v56;
    goto LABEL_48;
  }
  HIBYTE(v232) = v54;
  v56 = v231;
  if (v54)
LABEL_48:
    memmove(v56, v53, (size_t)v55);
  *((_BYTE *)v55 + (_QWORD)v56) = 0;
  v59 = (_QWORD *)operator new();
  *v59 = &off_250AE0220;
  v59[1] = v4 + 26;
  sub_23961580C((uint64_t)__p, (uint64_t)v231, (uint64_t)v59);
  v270[0] = xmmword_239F0E324;
  *(_OWORD *)((char *)v270 + 9) = *(__int128 *)((char *)&xmmword_239F0E324 + 9);
  sub_2396EFC88((uint64_t)v270, *(int32x4_t *)((char *)&xmmword_239F0E324 + 9), v60, v61, v62);
  v64 = v63;
  v65 = strlen(v63);
  if (v65 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v66 = (void *)v65;
  if (v65 >= 0x17)
  {
    v68 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v65 | 7) != 0x17)
      v68 = v65 | 7;
    v69 = v68 + 1;
    v67 = operator new(v68 + 1);
    v229[1] = v66;
    v230 = v69 | 0x8000000000000000;
    v229[0] = v67;
    goto LABEL_56;
  }
  HIBYTE(v230) = v65;
  v67 = v229;
  if (v65)
LABEL_56:
    memmove(v67, v64, (size_t)v66);
  *((_BYTE *)v66 + (_QWORD)v67) = 0;
  v70 = (_QWORD *)operator new();
  *v70 = &off_250AE0220;
  v70[1] = v4 + 27;
  sub_23961580C((uint64_t)__p, (uint64_t)v229, (uint64_t)v70);
  v269 = xmmword_239F0C040;
  sub_23950F8E4((uint64_t)&v269);
  v72 = v71;
  v73 = strlen(v71);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = (void *)v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    v227[1] = v74;
    v228 = v77 | 0x8000000000000000;
    v227[0] = v75;
    goto LABEL_64;
  }
  HIBYTE(v228) = v73;
  v75 = v227;
  if (v73)
LABEL_64:
    memmove(v75, v72, (size_t)v74);
  *((_BYTE *)v74 + (_QWORD)v75) = 0;
  v78 = (_QWORD *)operator new();
  *v78 = &off_250AE0670;
  v78[1] = v4 + 80;
  sub_23961580C((uint64_t)__p, (uint64_t)v227, (uint64_t)v78);
  v267 = 0x3928142D2D222F4BLL;
  strcpy(v268, "\"?.9\"*");
  sub_23958E5E0((uint64_t)&v267);
  v80 = v79;
  v81 = strlen(v79);
  if (v81 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v82 = (void *)v81;
  if (v81 >= 0x17)
  {
    v84 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v81 | 7) != 0x17)
      v84 = v81 | 7;
    v85 = v84 + 1;
    v83 = operator new(v84 + 1);
    v225[1] = v82;
    v226 = v85 | 0x8000000000000000;
    v225[0] = v83;
    goto LABEL_72;
  }
  HIBYTE(v226) = v81;
  v83 = v225;
  if (v81)
LABEL_72:
    memmove(v83, v80, (size_t)v82);
  *((_BYTE *)v82 + (_QWORD)v83) = 0;
  v86 = (_QWORD *)operator new();
  *v86 = &off_250AE0670;
  v86[1] = v4 + 84;
  sub_23961580C((uint64_t)__p, (uint64_t)v225, (uint64_t)v86);
  v264 = 0x25161B0F0E0F177ALL;
  v266 = 17;
  v265 = 421466649;
  sub_23971A32C((uint64_t)&v264, v87);
  v89 = v88;
  v90 = strlen(v88);
  if (v90 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v91 = (void *)v90;
  if (v90 >= 0x17)
  {
    v93 = (v90 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v90 | 7) != 0x17)
      v93 = v90 | 7;
    v94 = v93 + 1;
    v92 = operator new(v93 + 1);
    v223[1] = v91;
    v224 = v94 | 0x8000000000000000;
    v223[0] = v92;
    goto LABEL_80;
  }
  HIBYTE(v224) = v90;
  v92 = v223;
  if (v90)
LABEL_80:
    memmove(v92, v89, (size_t)v91);
  *((_BYTE *)v91 + (_QWORD)v92) = 0;
  v95 = (_QWORD *)operator new();
  *v95 = &off_250AE0220;
  v95[1] = v4 + 88;
  sub_23961580C((uint64_t)__p, (uint64_t)v223, (uint64_t)v95);
  v262 = xmmword_239F0E33D;
  v263 = 0;
  sub_2396EFA24((uint64_t)&v262);
  v97 = v96;
  v98 = strlen(v96);
  if (v98 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v99 = (void *)v98;
  if (v98 >= 0x17)
  {
    v101 = (v98 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v98 | 7) != 0x17)
      v101 = v98 | 7;
    v102 = v101 + 1;
    v100 = operator new(v101 + 1);
    v221[1] = v99;
    v222 = v102 | 0x8000000000000000;
    v221[0] = v100;
    goto LABEL_88;
  }
  HIBYTE(v222) = v98;
  v100 = v221;
  if (v98)
LABEL_88:
    memmove(v100, v97, (size_t)v99);
  *((_BYTE *)v99 + (_QWORD)v100) = 0;
  v103 = (_QWORD *)operator new();
  *v103 = &off_250ADF240;
  v103[1] = &v245;
  sub_23961580C((uint64_t)__p, (uint64_t)v221, (uint64_t)v103);
  v260 = xmmword_239F0E34E;
  v261[0] = *(_OWORD *)dbl_239F0E35E;
  *(_DWORD *)((char *)v261 + 15) = 1842442;
  sub_2396F0060((unsigned __int8 *)&v260, (int16x8_t)xmmword_239F0E34E, dbl_239F0E35E[0], v104, v105);
  v107 = v106;
  v108 = strlen(v106);
  if (v108 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v109 = (void *)v108;
  if (v108 >= 0x17)
  {
    v111 = (v108 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v108 | 7) != 0x17)
      v111 = v108 | 7;
    v112 = v111 + 1;
    v110 = operator new(v111 + 1);
    v219[1] = v109;
    v220 = v112 | 0x8000000000000000;
    v219[0] = v110;
    goto LABEL_96;
  }
  HIBYTE(v220) = v108;
  v110 = v219;
  if (v108)
LABEL_96:
    memmove(v110, v107, (size_t)v109);
  *((_BYTE *)v109 + (_QWORD)v110) = 0;
  v113 = (_QWORD *)operator new();
  *v113 = &off_250AFFF08;
  v113[1] = v4 + 120;
  sub_23961580C((uint64_t)__p, (uint64_t)v219, (uint64_t)v113);
  strcpy(v259, "'JBSFKxJF_xIRJxABFSRUBT");
  sub_2396F1A4C((uint64_t)v259, *(int32x4_t *)"'JBSFKxJF_xIRJxABFSRUBT", v114, v115, v116);
  v118 = v117;
  v119 = strlen(v117);
  if (v119 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v120 = (void *)v119;
  if (v119 >= 0x17)
  {
    v122 = (v119 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v119 | 7) != 0x17)
      v122 = v119 | 7;
    v123 = v122 + 1;
    v121 = operator new(v122 + 1);
    v217[1] = v120;
    v218 = v123 | 0x8000000000000000;
    v217[0] = v121;
    goto LABEL_104;
  }
  HIBYTE(v218) = v119;
  v121 = v217;
  if (v119)
LABEL_104:
    memmove(v121, v118, (size_t)v120);
  *((_BYTE *)v120 + (_QWORD)v121) = 0;
  v124 = (_QWORD *)operator new();
  *v124 = &off_250ADF420;
  v124[1] = v4 + 92;
  sub_23961580C((uint64_t)__p, (uint64_t)v217, (uint64_t)v124);
  strcpy(v258, "X?(-\a1<+");
  v125 = sub_239513718(v258);
  v126 = strlen(v125);
  if (v126 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v127 = (void *)v126;
  if (v126 >= 0x17)
  {
    v129 = (v126 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v126 | 7) != 0x17)
      v129 = v126 | 7;
    v130 = v129 + 1;
    v128 = operator new(v129 + 1);
    v215[1] = v127;
    v216 = v130 | 0x8000000000000000;
    v215[0] = v128;
    goto LABEL_112;
  }
  HIBYTE(v216) = v126;
  v128 = v215;
  if (v126)
LABEL_112:
    memmove(v128, v125, (size_t)v127);
  *((_BYTE *)v127 + (_QWORD)v128) = 0;
  v131 = (_QWORD *)operator new();
  *v131 = &off_250ADF630;
  v131[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v215, (uint64_t)v131);
  v256 = xmmword_239F0E389;
  v257 = 0;
  sub_2396EFA24((uint64_t)&v256);
  v133 = v132;
  v134 = strlen(v132);
  if (v134 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v135 = (void *)v134;
  if (v134 >= 0x17)
  {
    v137 = (v134 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v134 | 7) != 0x17)
      v137 = v134 | 7;
    v138 = v137 + 1;
    v136 = operator new(v137 + 1);
    v213[1] = v135;
    v214 = v138 | 0x8000000000000000;
    v213[0] = v136;
    goto LABEL_120;
  }
  HIBYTE(v214) = v134;
  v136 = v213;
  if (v134)
LABEL_120:
    memmove(v136, v133, (size_t)v135);
  *((_BYTE *)v135 + (_QWORD)v136) = 0;
  v139 = (_QWORD *)operator new();
  *v139 = &off_250AE0220;
  v139[1] = v4 + 97;
  sub_23961580C((uint64_t)__p, (uint64_t)v213, (uint64_t)v139);
  strcpy(v255, "\ngcdUe|oxfkzUxk~ce");
  sub_23958E450((uint64_t)v255, *(int32x4_t *)"\ngcdUe|oxfkzUxk~ce", v140, v141, v142);
  v144 = v143;
  v145 = strlen(v143);
  if (v145 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v146 = (void *)v145;
  if (v145 >= 0x17)
  {
    v148 = (v145 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v145 | 7) != 0x17)
      v148 = v145 | 7;
    v149 = v148 + 1;
    v147 = operator new(v148 + 1);
    v211[1] = v146;
    v212 = v149 | 0x8000000000000000;
    v211[0] = v147;
    goto LABEL_128;
  }
  HIBYTE(v212) = v145;
  v147 = v211;
  if (v145)
LABEL_128:
    memmove(v147, v144, (size_t)v146);
  *((_BYTE *)v146 + (_QWORD)v147) = 0;
  v150 = (_QWORD *)operator new();
  *v150 = &off_250ADF360;
  v150[1] = v4 + 112;
  sub_23961580C((uint64_t)__p, (uint64_t)v211, (uint64_t)v150);
  strcpy(v254, "-@LYNEH_rYT]H");
  sub_23971A32C((uint64_t)v254, v151);
  v153 = v152;
  v154 = strlen(v152);
  if (v154 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v155 = (void *)v154;
  if (v154 >= 0x17)
  {
    v157 = (v154 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v154 | 7) != 0x17)
      v157 = v154 | 7;
    v158 = v157 + 1;
    v156 = operator new(v157 + 1);
    v209[1] = v155;
    v210 = v158 | 0x8000000000000000;
    v209[0] = v156;
    goto LABEL_136;
  }
  HIBYTE(v210) = v154;
  v156 = v209;
  if (v154)
LABEL_136:
    memmove(v156, v153, (size_t)v155);
  *((_BYTE *)v155 + (_QWORD)v156) = 0;
  v159 = (_QWORD *)operator new();
  *v159 = &off_250ADF240;
  v159[1] = (char *)&v245 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v209, (uint64_t)v159);
  v252 = 0x9251F12191B197ALL;
  v253 = 2031635;
  v160 = sub_23958E4C8((uint64_t)&v252);
  v161 = strlen(v160);
  if (v161 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v162 = (void *)v161;
  if (v161 >= 0x17)
  {
    v164 = (v161 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v161 | 7) != 0x17)
      v164 = v161 | 7;
    v165 = v164 + 1;
    v163 = operator new(v164 + 1);
    v207[1] = v162;
    v208 = v165 | 0x8000000000000000;
    v207[0] = v163;
    goto LABEL_144;
  }
  HIBYTE(v208) = v161;
  v163 = v207;
  if (v161)
LABEL_144:
    memmove(v163, v160, (size_t)v162);
  *((_BYTE *)v162 + (_QWORD)v163) = 0;
  v166 = (_QWORD *)operator new();
  *v166 = &off_250ADF240;
  v166[1] = v4 + 332;
  sub_23961580C((uint64_t)__p, (uint64_t)v207, (uint64_t)v166);
  v250[0] = xmmword_239F0E3AD;
  v250[1] = xmmword_239F0E3BD;
  v251 = 0;
  sub_2396EFE38((uint64_t)v250, (int32x4_t)xmmword_239F0E3AD, xmmword_239F0E3BD, v167, v168);
  v170 = v169;
  v171 = strlen(v169);
  if (v171 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v172 = (void *)v171;
  if (v171 >= 0x17)
  {
    v174 = (v171 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v171 | 7) != 0x17)
      v174 = v171 | 7;
    v175 = v174 + 1;
    v173 = operator new(v174 + 1);
    v205[1] = v172;
    v206 = v175 | 0x8000000000000000;
    v205[0] = v173;
    goto LABEL_152;
  }
  HIBYTE(v206) = v171;
  v173 = v205;
  if (v171)
LABEL_152:
    memmove(v173, v170, (size_t)v172);
  *((_BYTE *)v172 + (_QWORD)v173) = 0;
  v176 = (_QWORD *)operator new();
  *v176 = &off_250AE0670;
  v176[1] = v4 + 132;
  sub_23961580C((uint64_t)__p, (uint64_t)v205, (uint64_t)v176);
  v248 = xmmword_239F0E570;
  v249 = 23;
  v177 = sub_239A91B18((int8x16_t *)&v248);
  v178 = strlen(v177->i8);
  if (v178 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v179 = (void *)v178;
  if (v178 >= 0x17)
  {
    v181 = (v178 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v178 | 7) != 0x17)
      v181 = v178 | 7;
    v182 = v181 + 1;
    v180 = operator new(v181 + 1);
    v203[1] = v179;
    v204 = v182 | 0x8000000000000000;
    v203[0] = v180;
    goto LABEL_160;
  }
  HIBYTE(v204) = v178;
  v180 = v203;
  if (v178)
LABEL_160:
    memmove(v180, v177, (size_t)v179);
  *((_BYTE *)v179 + (_QWORD)v180) = 0;
  v183 = (_QWORD *)operator new();
  *v183 = &off_250AF3BC0;
  v183[1] = v4 + 136;
  sub_23961580C((uint64_t)__p, (uint64_t)v203, (uint64_t)v183);
  v246 = xmmword_239F0E60D;
  v247 = 0x747D7A7B706772;
  sub_2396F1A4C((uint64_t)&v246, (int32x4_t)xmmword_239F0E60D, v184, v185, v186);
  v188 = v187;
  v189 = strlen(v187);
  if (v189 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v190 = (void *)v189;
  if (v189 >= 0x17)
  {
    v192 = (v189 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v189 | 7) != 0x17)
      v192 = v189 | 7;
    v193 = v192 + 1;
    v191 = operator new(v192 + 1);
    v201[1] = v190;
    v202 = v193 | 0x8000000000000000;
    v201[0] = v191;
    goto LABEL_168;
  }
  HIBYTE(v202) = v189;
  v191 = v201;
  if (v189)
LABEL_168:
    memmove(v191, v188, (size_t)v190);
  *((_BYTE *)v190 + (_QWORD)v191) = 0;
  v194 = (_QWORD *)operator new();
  *v194 = &off_250AF3CB0;
  v194[1] = v4 + 296;
  sub_23961580C((uint64_t)__p, (uint64_t)v201, (uint64_t)v194);
  if (SHIBYTE(v202) < 0)
  {
    operator delete(v201[0]);
    if ((SHIBYTE(v204) & 0x80000000) == 0)
    {
LABEL_171:
      if ((SHIBYTE(v206) & 0x80000000) == 0)
        goto LABEL_172;
      goto LABEL_206;
    }
  }
  else if ((SHIBYTE(v204) & 0x80000000) == 0)
  {
    goto LABEL_171;
  }
  operator delete(v203[0]);
  if ((SHIBYTE(v206) & 0x80000000) == 0)
  {
LABEL_172:
    if ((SHIBYTE(v208) & 0x80000000) == 0)
      goto LABEL_173;
    goto LABEL_207;
  }
LABEL_206:
  operator delete(v205[0]);
  if ((SHIBYTE(v208) & 0x80000000) == 0)
  {
LABEL_173:
    if ((SHIBYTE(v210) & 0x80000000) == 0)
      goto LABEL_174;
    goto LABEL_208;
  }
LABEL_207:
  operator delete(v207[0]);
  if ((SHIBYTE(v210) & 0x80000000) == 0)
  {
LABEL_174:
    if ((SHIBYTE(v212) & 0x80000000) == 0)
      goto LABEL_175;
    goto LABEL_209;
  }
LABEL_208:
  operator delete(v209[0]);
  if ((SHIBYTE(v212) & 0x80000000) == 0)
  {
LABEL_175:
    if ((SHIBYTE(v214) & 0x80000000) == 0)
      goto LABEL_176;
    goto LABEL_210;
  }
LABEL_209:
  operator delete(v211[0]);
  if ((SHIBYTE(v214) & 0x80000000) == 0)
  {
LABEL_176:
    if ((SHIBYTE(v216) & 0x80000000) == 0)
      goto LABEL_177;
    goto LABEL_211;
  }
LABEL_210:
  operator delete(v213[0]);
  if ((SHIBYTE(v216) & 0x80000000) == 0)
  {
LABEL_177:
    if ((SHIBYTE(v218) & 0x80000000) == 0)
      goto LABEL_178;
    goto LABEL_212;
  }
LABEL_211:
  operator delete(v215[0]);
  if ((SHIBYTE(v218) & 0x80000000) == 0)
  {
LABEL_178:
    if ((SHIBYTE(v220) & 0x80000000) == 0)
      goto LABEL_179;
    goto LABEL_213;
  }
LABEL_212:
  operator delete(v217[0]);
  if ((SHIBYTE(v220) & 0x80000000) == 0)
  {
LABEL_179:
    if ((SHIBYTE(v222) & 0x80000000) == 0)
      goto LABEL_180;
    goto LABEL_214;
  }
LABEL_213:
  operator delete(v219[0]);
  if ((SHIBYTE(v222) & 0x80000000) == 0)
  {
LABEL_180:
    if ((SHIBYTE(v224) & 0x80000000) == 0)
      goto LABEL_181;
    goto LABEL_215;
  }
LABEL_214:
  operator delete(v221[0]);
  if ((SHIBYTE(v224) & 0x80000000) == 0)
  {
LABEL_181:
    if ((SHIBYTE(v226) & 0x80000000) == 0)
      goto LABEL_182;
    goto LABEL_216;
  }
LABEL_215:
  operator delete(v223[0]);
  if ((SHIBYTE(v226) & 0x80000000) == 0)
  {
LABEL_182:
    if ((SHIBYTE(v228) & 0x80000000) == 0)
      goto LABEL_183;
    goto LABEL_217;
  }
LABEL_216:
  operator delete(v225[0]);
  if ((SHIBYTE(v228) & 0x80000000) == 0)
  {
LABEL_183:
    if ((SHIBYTE(v230) & 0x80000000) == 0)
      goto LABEL_184;
    goto LABEL_218;
  }
LABEL_217:
  operator delete(v227[0]);
  if ((SHIBYTE(v230) & 0x80000000) == 0)
  {
LABEL_184:
    if ((SHIBYTE(v232) & 0x80000000) == 0)
      goto LABEL_185;
    goto LABEL_219;
  }
LABEL_218:
  operator delete(v229[0]);
  if ((SHIBYTE(v232) & 0x80000000) == 0)
  {
LABEL_185:
    if ((SHIBYTE(v234) & 0x80000000) == 0)
      goto LABEL_186;
    goto LABEL_220;
  }
LABEL_219:
  operator delete(v231[0]);
  if ((SHIBYTE(v234) & 0x80000000) == 0)
  {
LABEL_186:
    if ((SHIBYTE(v236) & 0x80000000) == 0)
      goto LABEL_187;
    goto LABEL_221;
  }
LABEL_220:
  operator delete(v233[0]);
  if ((SHIBYTE(v236) & 0x80000000) == 0)
  {
LABEL_187:
    if ((SHIBYTE(v238) & 0x80000000) == 0)
      goto LABEL_188;
    goto LABEL_222;
  }
LABEL_221:
  operator delete(v235[0]);
  if ((SHIBYTE(v238) & 0x80000000) == 0)
  {
LABEL_188:
    if ((SHIBYTE(v240) & 0x80000000) == 0)
      goto LABEL_189;
LABEL_223:
    operator delete(v239[0]);
    if ((SHIBYTE(v242) & 0x80000000) == 0)
      goto LABEL_190;
    goto LABEL_224;
  }
LABEL_222:
  operator delete(v237[0]);
  if (SHIBYTE(v240) < 0)
    goto LABEL_223;
LABEL_189:
  if ((SHIBYTE(v242) & 0x80000000) == 0)
    goto LABEL_190;
LABEL_224:
  operator delete(__dst[0]);
LABEL_190:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
  {
    *(_BYTE *)(v4 + 128) = BYTE4(v245);
    *(_BYTE *)(v4 + 96) = v245;
  }
  v195 = v244;
  if (v244)
  {
    do
    {
      v196 = v195[5];
      if (v196)
        (*(void (**)(uint64_t))(*(_QWORD *)v196 + 8))(v196);
      v195 = (_QWORD *)*v195;
    }
    while (v195);
    v197 = (void **)v244;
    if (v244)
    {
      do
      {
        v200 = (void **)*v197;
        if (*((char *)v197 + 39) < 0)
          operator delete(v197[2]);
        operator delete(v197);
        v197 = v200;
      }
      while (v200);
    }
  }
  v198 = __p[0];
  __p[0] = 0;
  if (v198)
    operator delete(v198);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AD4098(_Unwind_Exception *a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  void **v6;

  v2 = (_QWORD *)STACK[0x218];
  if (STACK[0x218])
  {
    do
    {
      v3 = v2[5];
      if (v3)
        (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
      v2 = (_QWORD *)*v2;
    }
    while (v2);
    v4 = (void **)STACK[0x218];
    if (STACK[0x218])
    {
      do
      {
        v6 = (void **)*v4;
        if (*((char *)v4 + 39) < 0)
          operator delete(v4[2]);
        operator delete(v4);
        v4 = v6;
      }
      while (v6);
    }
  }
  v5 = (void *)STACK[0x208];
  STACK[0x208] = 0;
  if (!v5)
    _Unwind_Resume(a1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

void sub_239AD44B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a70;

  if (a70 < 0)
    JUMPOUT(0x239AD4214);
  JUMPOUT(0x239AD430CLL);
}

void sub_239AD44C8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD44EC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD4C2C(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AD4528(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  double v27;
  int32x4_t v28;
  const char *v29;
  const char *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int8x16_t v37;
  double v38;
  int32x4_t v39;
  const char *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int8x16_t v48;
  double v49;
  int32x4_t v50;
  const char *v51;
  const char *v52;
  size_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  void **v61;
  void *v62;
  void **v64;
  void *v65[2];
  unint64_t v66;
  void *v67[2];
  unint64_t v68;
  void *v69[2];
  unint64_t v70;
  void *v71[2];
  unint64_t v72;
  void *__dst[2];
  unint64_t v74;
  void *__p[2];
  void *v76;
  _OWORD v77[2];
  char v78[32];
  char v79[48];
  _OWORD v80[2];
  __int128 v81;
  uint64_t v82;
  uint64_t v83;

  v83 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v81 = xmmword_239F0E582;
  v82 = 0x342E2921323433;
  sub_2396F1A4C((uint64_t)&v81, (int32x4_t)xmmword_239F0E582, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v74 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v74) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AE0220;
  v15[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v80[0] = xmmword_239F0E59A;
  *(_OWORD *)((char *)v80 + 12) = *(__int128 *)((char *)&xmmword_239F0E59A + 12);
  sub_2396B946C((uint64_t)v80, *(int32x4_t *)((char *)&xmmword_239F0E59A + 12), v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v71[1] = v22;
    v72 = v25 | 0x8000000000000000;
    v71[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v72) = v21;
  v23 = v71;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AE0220;
  v26[1] = v4 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v71, (uint64_t)v26);
  strcpy(v79, "'UBKFSNQBxWHTBxDHITNTSBID^xDOBDL");
  sub_2396EFE38((uint64_t)v79, *(int32x4_t *)"'UBKFSNQBxWHTBxDHITNTSBID^xDOBDL", *(int8x16_t *)"HITNTSBID^xDOBDL", v27, v28);
  v30 = v29;
  v31 = strlen(v29);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v69[1] = v32;
    v70 = v35 | 0x8000000000000000;
    v69[0] = v33;
    goto LABEL_24;
  }
  HIBYTE(v70) = v31;
  v33 = v69;
  if (v31)
LABEL_24:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250AE0220;
  v36[1] = v4 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v69, (uint64_t)v36);
  strcpy(v78, "+N[B[DGJYtOBX_JEHNt_CYNXCDGO");
  sub_2396EFD48((uint64_t)v78, *(int32x4_t *)"_JEHNt_CYNXCDGO", v37, v38, v39);
  v41 = v40;
  v42 = strlen(v40);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v67[1] = v43;
    v68 = v46 | 0x8000000000000000;
    v67[0] = v44;
    goto LABEL_32;
  }
  HIBYTE(v68) = v42;
  v44 = v67;
  if (v42)
LABEL_32:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250ADF360;
  v47[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v67, (uint64_t)v47);
  v77[0] = xmmword_239F0E5F4;
  *(_OWORD *)((char *)v77 + 9) = *(__int128 *)((char *)&xmmword_239F0E5F4 + 9);
  sub_2396EFC88((uint64_t)v77, *(int32x4_t *)((char *)&xmmword_239F0E5F4 + 9), v48, v49, v50);
  v52 = v51;
  v53 = strlen(v51);
  if (v53 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v54 = (void *)v53;
  if (v53 >= 0x17)
  {
    v56 = (v53 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v53 | 7) != 0x17)
      v56 = v53 | 7;
    v57 = v56 + 1;
    v55 = operator new(v56 + 1);
    v65[1] = v54;
    v66 = v57 | 0x8000000000000000;
    v65[0] = v55;
    goto LABEL_40;
  }
  HIBYTE(v66) = v53;
  v55 = v65;
  if (v53)
LABEL_40:
    memmove(v55, v52, (size_t)v54);
  *((_BYTE *)v54 + (_QWORD)v55) = 0;
  v58 = (_QWORD *)operator new();
  *v58 = &off_250ADF360;
  v58[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v65, (uint64_t)v58);
  if (SHIBYTE(v66) < 0)
  {
    operator delete(v65[0]);
    if ((SHIBYTE(v68) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v70) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v68) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v67[0]);
  if ((SHIBYTE(v70) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v72) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v71[0]);
    if ((SHIBYTE(v74) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v69[0]);
  if (SHIBYTE(v72) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v74) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_23959479C((uint64_t)__p, a2);
  v59 = v76;
  if (v76)
  {
    do
    {
      v60 = v59[5];
      if (v60)
        (*(void (**)(uint64_t))(*(_QWORD *)v60 + 8))(v60);
      v59 = (_QWORD *)*v59;
    }
    while (v59);
    v61 = (void **)v76;
    if (v76)
    {
      do
      {
        v64 = (void **)*v61;
        if (*((char *)v61 + 39) < 0)
          operator delete(v61[2]);
        operator delete(v61);
        v61 = v64;
      }
      while (v64);
    }
  }
  v62 = __p[0];
  __p[0] = 0;
  if (v62)
    operator delete(v62);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AD4AC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,_QWORD *__p)
{
  _QWORD *v43;
  uint64_t v44;
  void **v45;
  void **v46;

  v43 = __p;
  if (__p)
  {
    do
    {
      v44 = v43[5];
      if (v44)
        (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
      v43 = (_QWORD *)*v43;
    }
    while (v43);
    v45 = (void **)__p;
    do
    {
      v46 = (void **)*v45;
      if (*((char *)v45 + 39) < 0)
        operator delete(v45[2]);
      operator delete(v45);
      v45 = v46;
    }
    while (v46);
  }
  if (!a40)
    _Unwind_Resume(exception_object);
  operator delete(a40);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AD4C2C(uint64_t a1, _QWORD *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  double v27;
  int32x4_t v28;
  const char *v29;
  const char *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int8x16_t v37;
  double v38;
  int32x4_t v39;
  const char *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int8x16_t v48;
  double v49;
  int32x4_t v50;
  const char *v51;
  const char *v52;
  size_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  void **v61;
  void *v62;
  void **v64;
  void *v65[2];
  unint64_t v66;
  void *v67[2];
  unint64_t v68;
  void *v69[2];
  unint64_t v70;
  void *v71[2];
  unint64_t v72;
  void *__dst[2];
  unint64_t v74;
  void *__p[2];
  void *v76;
  _OWORD v77[2];
  char v78[32];
  int8x16_t v79[2];
  char v80;
  _OWORD v81[2];
  __int128 v82;
  uint64_t v83;
  uint64_t v84;

  v84 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v82 = xmmword_239F0DE52;
  v83 = 0x7A60676F7C7A7DLL;
  sub_2396F1A4C((uint64_t)&v82, (int32x4_t)xmmword_239F0DE52, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v74 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v74) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFEA8;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v81[0] = xmmword_239F0DE6A;
  *(_OWORD *)((char *)v81 + 12) = *(__int128 *)((char *)&xmmword_239F0DE6A + 12);
  sub_2396B946C((uint64_t)v81, *(int32x4_t *)((char *)&xmmword_239F0DE6A + 12), v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v71[1] = v22;
    v72 = v25 | 0x8000000000000000;
    v71[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v72) = v21;
  v23 = v71;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AFFEA8;
  v26[1] = a1 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v71, (uint64_t)v26);
  v79[0] = (int8x16_t)xmmword_239F0DE86;
  v79[1] = xmmword_239F0DE96;
  v80 = 0;
  sub_2396EFE38((uint64_t)v79, (int32x4_t)xmmword_239F0DE86, xmmword_239F0DE96, v27, v28);
  v30 = v29;
  v31 = strlen(v29);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v69[1] = v32;
    v70 = v35 | 0x8000000000000000;
    v69[0] = v33;
    goto LABEL_24;
  }
  HIBYTE(v70) = v31;
  v33 = v69;
  if (v31)
LABEL_24:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250AFFEA8;
  v36[1] = a1 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v69, (uint64_t)v36);
  strcpy(v78, "+N[B[DGJYtOBX_JEHNt_CYNXCDGO");
  sub_2396EFD48((uint64_t)v78, *(int32x4_t *)"_JEHNt_CYNXCDGO", v37, v38, v39);
  v41 = v40;
  v42 = strlen(v40);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v67[1] = v43;
    v68 = v46 | 0x8000000000000000;
    v67[0] = v44;
    goto LABEL_32;
  }
  HIBYTE(v68) = v42;
  v44 = v67;
  if (v42)
LABEL_32:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250ADF570;
  v47[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v67, (uint64_t)v47);
  v77[0] = xmmword_239F0DEA7;
  *(_OWORD *)((char *)v77 + 9) = *(__int128 *)((char *)&xmmword_239F0DEA7 + 9);
  sub_2396EFC88((uint64_t)v77, *(int32x4_t *)((char *)&xmmword_239F0DEA7 + 9), v48, v49, v50);
  v52 = v51;
  v53 = strlen(v51);
  if (v53 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v54 = (void *)v53;
  if (v53 >= 0x17)
  {
    v56 = (v53 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v53 | 7) != 0x17)
      v56 = v53 | 7;
    v57 = v56 + 1;
    v55 = operator new(v56 + 1);
    v65[1] = v54;
    v66 = v57 | 0x8000000000000000;
    v65[0] = v55;
    goto LABEL_40;
  }
  HIBYTE(v66) = v53;
  v55 = v65;
  if (v53)
LABEL_40:
    memmove(v55, v52, (size_t)v54);
  *((_BYTE *)v54 + (_QWORD)v55) = 0;
  v58 = (_QWORD *)operator new();
  *v58 = &off_250ADF570;
  v58[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v65, (uint64_t)v58);
  if (SHIBYTE(v66) < 0)
  {
    operator delete(v65[0]);
    if ((SHIBYTE(v68) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v70) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v68) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v67[0]);
  if ((SHIBYTE(v70) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v72) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v71[0]);
    if ((SHIBYTE(v74) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v69[0]);
  if (SHIBYTE(v72) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v74) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_2395902F0((uint64_t)__p, a2);
  v59 = v76;
  if (v76)
  {
    do
    {
      v60 = v59[5];
      if (v60)
        (*(void (**)(uint64_t))(*(_QWORD *)v60 + 8))(v60);
      v59 = (_QWORD *)*v59;
    }
    while (v59);
    v61 = (void **)v76;
    if (v76)
    {
      do
      {
        v64 = (void **)*v61;
        if (*((char *)v61 + 39) < 0)
          operator delete(v61[2]);
        operator delete(v61);
        v61 = v64;
      }
      while (v64);
    }
  }
  v62 = __p[0];
  __p[0] = 0;
  if (v62)
    operator delete(v62);
  return a2;
}

void sub_239AD51AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  sub_2395905C0((uint64_t)&a40);
  _Unwind_Resume(a1);
}

void sub_239AD5298(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD52BC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD95E8(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AD52F8(uint64_t a1, uint64_t *a2, char a3)
{
  _DWORD *v4;
  const char *v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int32x4_t v13;
  double v14;
  int32x4_t v15;
  unsigned __int8 *v16;
  size_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  const char *v23;
  size_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  const char *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  const char *v37;
  size_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  int8x16_t v44;
  double v45;
  int32x4_t v46;
  const char *v47;
  const char *v48;
  size_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int8x16_t v55;
  double v56;
  int32x4_t v57;
  const char *v58;
  const char *v59;
  size_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  double v66;
  double v67;
  int16x8_t v68;
  const char *v69;
  const char *v70;
  size_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  int8x16_t v77;
  double v78;
  int32x4_t v79;
  const char *v80;
  const char *v81;
  size_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  const char *v88;
  size_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  const char *v95;
  size_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  int8x16_t v102;
  double v103;
  int32x4_t v104;
  const char *v105;
  const char *v106;
  size_t v107;
  void *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  int8x16_t v113;
  double v114;
  int32x4_t v115;
  const char *v116;
  const char *v117;
  size_t v118;
  void *v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  int8x16_t v124;
  double v125;
  int32x4_t v126;
  const char *v127;
  const char *v128;
  size_t v129;
  void *v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  void **v137;
  void *v138;
  void **v140;
  void *v141[2];
  unint64_t v142;
  void *v143[2];
  unint64_t v144;
  void *v145[2];
  unint64_t v146;
  void *v147[2];
  unint64_t v148;
  void *v149[2];
  unint64_t v150;
  void *v151[2];
  unint64_t v152;
  void *v153[2];
  unint64_t v154;
  void *v155[2];
  unint64_t v156;
  void *v157[2];
  unint64_t v158;
  void *v159[2];
  unint64_t v160;
  void *v161[2];
  unint64_t v162;
  void *v163[2];
  unint64_t v164;
  void *v165[2];
  unint64_t v166;
  void *__dst[2];
  unint64_t v168;
  uint64_t v169;
  void *__p[2];
  void *v171;
  char v172[32];
  _OWORD v173[2];
  char v174[32];
  uint64_t v175;
  char v176[8];
  char v177[16];
  char v178[32];
  _OWORD v179[2];
  uint64_t v180;
  _OWORD v181[2];
  _OWORD v182[2];
  uint64_t v183;
  char v184[8];
  uint64_t v185;
  int v186;
  char v187;
  uint64_t v188;
  char v189[8];
  unsigned __int8 v190[32];
  __int128 v191;
  uint64_t v192;

  v192 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD **)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v169 = 0;
  v191 = xmmword_239F0C050;
  sub_23950F8E4((uint64_t)&v191);
  v6 = v5;
  v7 = strlen(v5);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v168 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v168) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250ADF240;
  v12[1] = &v169;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  *(_OWORD *)v190 = xmmword_239F0E3CE;
  *(_QWORD *)&v190[14] = 0x7A7B7072407871;
  v16 = sub_239A90BEC(v190, (int8x16_t)xmmword_239F0E3CE, v13, v14, v15);
  v17 = strlen((const char *)v16);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v18 = (void *)v17;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    v19 = operator new(v20 + 1);
    v165[1] = v18;
    v166 = v21 | 0x8000000000000000;
    v165[0] = v19;
    goto LABEL_16;
  }
  HIBYTE(v166) = v17;
  v19 = v165;
  if (v17)
LABEL_16:
    memmove(v19, v16, (size_t)v18);
  *((_BYTE *)v18 + (_QWORD)v19) = 0;
  v22 = (_QWORD *)operator new();
  *v22 = &off_250ADF240;
  v22[1] = (char *)&v169 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v165, (uint64_t)v22);
  v188 = 0x607A664D7F677C12;
  strcpy(v189, "wsva");
  v23 = sub_239510ECC((uint64_t)&v188);
  v24 = strlen(v23);
  if (v24 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v25 = (void *)v24;
  if (v24 >= 0x17)
  {
    v27 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v24 | 7) != 0x17)
      v27 = v24 | 7;
    v28 = v27 + 1;
    v26 = operator new(v27 + 1);
    v163[1] = v25;
    v164 = v28 | 0x8000000000000000;
    v163[0] = v26;
    goto LABEL_24;
  }
  HIBYTE(v164) = v24;
  v26 = v163;
  if (v24)
LABEL_24:
    memmove(v26, v23, (size_t)v25);
  *((_BYTE *)v25 + (_QWORD)v26) = 0;
  v29 = (_QWORD *)operator new();
  *v29 = &off_250ADF420;
  v29[1] = v4 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v163, (uint64_t)v29);
  v185 = 0x1A1604281A021977;
  v187 = 0;
  v186 = 68295431;
  v30 = sub_239510ECC((uint64_t)&v185);
  v31 = strlen(v30);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v161[1] = v32;
    v162 = v35 | 0x8000000000000000;
    v161[0] = v33;
    goto LABEL_32;
  }
  HIBYTE(v162) = v31;
  v33 = v161;
  if (v31)
LABEL_32:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250ADF240;
  v36[1] = v4 + 27;
  sub_23961580C((uint64_t)__p, (uint64_t)v161, (uint64_t)v36);
  v183 = 0x6075794B79617A14;
  strcpy(v184, "w|qg");
  v37 = sub_239510ECC((uint64_t)&v183);
  v38 = strlen(v37);
  if (v38 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v39 = (void *)v38;
  if (v38 >= 0x17)
  {
    v41 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 | 7) != 0x17)
      v41 = v38 | 7;
    v42 = v41 + 1;
    v40 = operator new(v41 + 1);
    v159[1] = v39;
    v160 = v42 | 0x8000000000000000;
    v159[0] = v40;
    goto LABEL_40;
  }
  HIBYTE(v160) = v38;
  v40 = v159;
  if (v38)
LABEL_40:
    memmove(v40, v37, (size_t)v39);
  *((_BYTE *)v39 + (_QWORD)v40) = 0;
  v43 = (_QWORD *)operator new();
  *v43 = &off_250ADF240;
  v43[1] = v4 + 28;
  sub_23961580C((uint64_t)__p, (uint64_t)v159, (uint64_t)v43);
  v182[0] = xmmword_239F0E3E4;
  *(_QWORD *)((char *)v182 + 13) = 0x222D1F39322F2DLL;
  sub_2396EFB50((uint64_t)v182, (int32x4_t)xmmword_239F0E3E4, v44, v45, v46);
  v48 = v47;
  v49 = strlen(v47);
  if (v49 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v50 = (void *)v49;
  if (v49 >= 0x17)
  {
    v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v49 | 7) != 0x17)
      v52 = v49 | 7;
    v53 = v52 + 1;
    v51 = operator new(v52 + 1);
    v157[1] = v50;
    v158 = v53 | 0x8000000000000000;
    v157[0] = v51;
    goto LABEL_48;
  }
  HIBYTE(v158) = v49;
  v51 = v157;
  if (v49)
LABEL_48:
    memmove(v51, v48, (size_t)v50);
  *((_BYTE *)v50 + (_QWORD)v51) = 0;
  v54 = (_QWORD *)operator new();
  *v54 = &off_250AE0670;
  v54[1] = v4 + 26;
  sub_23961580C((uint64_t)__p, (uint64_t)v157, (uint64_t)v54);
  v181[0] = xmmword_239F0E3F9;
  *(_QWORD *)((char *)v181 + 13) = 0xF081217241015;
  sub_2396EFB50((uint64_t)v181, (int32x4_t)xmmword_239F0E3F9, v55, v56, v57);
  v59 = v58;
  v60 = strlen(v58);
  if (v60 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v61 = (void *)v60;
  if (v60 >= 0x17)
  {
    v63 = (v60 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v60 | 7) != 0x17)
      v63 = v60 | 7;
    v64 = v63 + 1;
    v62 = operator new(v63 + 1);
    v155[1] = v61;
    v156 = v64 | 0x8000000000000000;
    v155[0] = v62;
    goto LABEL_56;
  }
  HIBYTE(v156) = v60;
  v62 = v155;
  if (v60)
LABEL_56:
    memmove(v62, v59, (size_t)v61);
  *((_BYTE *)v61 + (_QWORD)v62) = 0;
  v65 = (_QWORD *)operator new();
  *v65 = &off_250AE0220;
  v65[1] = v4 + 29;
  sub_23961580C((uint64_t)__p, (uint64_t)v155, (uint64_t)v65);
  v179[0] = xmmword_239F0E40E;
  v179[1] = xmmword_239F0E41E;
  v180 = 0x616C7B68647F79;
  sub_2396F02A0((unsigned __int8 *)v179, 5.23182875e156, xmmword_239F0E41E, v66, v67, v68);
  v70 = v69;
  v71 = strlen(v69);
  if (v71 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v72 = (void *)v71;
  if (v71 >= 0x17)
  {
    v74 = (v71 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v71 | 7) != 0x17)
      v74 = v71 | 7;
    v75 = v74 + 1;
    v73 = operator new(v74 + 1);
    v153[1] = v72;
    v154 = v75 | 0x8000000000000000;
    v153[0] = v73;
    goto LABEL_64;
  }
  HIBYTE(v154) = v71;
  v73 = v153;
  if (v71)
LABEL_64:
    memmove(v73, v70, (size_t)v72);
  *((_BYTE *)v72 + (_QWORD)v73) = 0;
  v76 = (_QWORD *)operator new();
  *v76 = &off_250AFFF08;
  v76[1] = v4 + 30;
  sub_23961580C((uint64_t)__p, (uint64_t)v153, (uint64_t)v76);
  strcpy(v178, "\"WQG}OCQIGF}MWV}DGCVWPGQ");
  sub_2396EFC88((uint64_t)v178, *(int32x4_t *)"GF}MWV}DGCVWPGQ", v77, v78, v79);
  v81 = v80;
  v82 = strlen(v80);
  if (v82 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v83 = (void *)v82;
  if (v82 >= 0x17)
  {
    v85 = (v82 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v82 | 7) != 0x17)
      v85 = v82 | 7;
    v86 = v85 + 1;
    v84 = operator new(v85 + 1);
    v151[1] = v83;
    v152 = v86 | 0x8000000000000000;
    v151[0] = v84;
    goto LABEL_72;
  }
  HIBYTE(v152) = v82;
  v84 = v151;
  if (v82)
LABEL_72:
    memmove(v84, v81, (size_t)v83);
  *((_BYTE *)v83 + (_QWORD)v84) = 0;
  v87 = (_QWORD *)operator new();
  *v87 = &off_250AE0220;
  v87[1] = (char *)v4 + 117;
  sub_23961580C((uint64_t)__p, (uint64_t)v151, (uint64_t)v87);
  strcpy(v177, "%VDS@zHJA@I");
  v88 = sub_23958E4C8((uint64_t)v177);
  v89 = strlen(v88);
  if (v89 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v90 = (void *)v89;
  if (v89 >= 0x17)
  {
    v92 = (v89 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v89 | 7) != 0x17)
      v92 = v89 | 7;
    v93 = v92 + 1;
    v91 = operator new(v92 + 1);
    v149[1] = v90;
    v150 = v93 | 0x8000000000000000;
    v149[0] = v91;
    goto LABEL_80;
  }
  HIBYTE(v150) = v89;
  v91 = v149;
  if (v89)
LABEL_80:
    memmove(v91, v88, (size_t)v90);
  *((_BYTE *)v90 + (_QWORD)v91) = 0;
  v94 = (_QWORD *)operator new();
  *v94 = &off_250AE0220;
  v94[1] = v4 + 38;
  sub_23961580C((uint64_t)__p, (uint64_t)v149, (uint64_t)v94);
  v175 = 0x48707E7179787417;
  strcpy(v176, "a{vs");
  v95 = sub_239510ECC((uint64_t)&v175);
  v96 = strlen(v95);
  if (v96 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v97 = (void *)v96;
  if (v96 >= 0x17)
  {
    v99 = (v96 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v96 | 7) != 0x17)
      v99 = v96 | 7;
    v100 = v99 + 1;
    v98 = operator new(v99 + 1);
    v147[1] = v97;
    v148 = v100 | 0x8000000000000000;
    v147[0] = v98;
    goto LABEL_88;
  }
  HIBYTE(v148) = v96;
  v98 = v147;
  if (v96)
LABEL_88:
    memmove(v98, v95, (size_t)v97);
  *((_BYTE *)v97 + (_QWORD)v98) = 0;
  v101 = (_QWORD *)operator new();
  *v101 = &off_250AF3BF0;
  v101[1] = v4 + 3;
  sub_23961580C((uint64_t)__p, (uint64_t)v147, (uint64_t)v101);
  strcpy(v174, ">]QPXWYaOK[LGa[FN_PMWQP");
  sub_2396F1A4C((uint64_t)v174, *(int32x4_t *)">]QPXWYaOK[LGa[FN_PMWQP", v102, v103, v104);
  v106 = v105;
  v107 = strlen(v105);
  if (v107 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v108 = (void *)v107;
  if (v107 >= 0x17)
  {
    v110 = (v107 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v107 | 7) != 0x17)
      v110 = v107 | 7;
    v111 = v110 + 1;
    v109 = operator new(v110 + 1);
    v145[1] = v108;
    v146 = v111 | 0x8000000000000000;
    v145[0] = v109;
    goto LABEL_96;
  }
  HIBYTE(v146) = v107;
  v109 = v145;
  if (v107)
LABEL_96:
    memmove(v109, v106, (size_t)v108);
  *((_BYTE *)v108 + (_QWORD)v109) = 0;
  v112 = (_QWORD *)operator new();
  *v112 = &off_250AF3C20;
  v112[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v145, (uint64_t)v112);
  v173[0] = xmmword_239F0E4BF;
  *(_OWORD *)((char *)v173 + 13) = *(__int128 *)((char *)&xmmword_239F0E4BF + 13);
  sub_2396EFD48((uint64_t)v173, *(int32x4_t *)((char *)&xmmword_239F0E4BF + 13), v113, v114, v115);
  v117 = v116;
  v118 = strlen(v116);
  if (v118 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v119 = (void *)v118;
  if (v118 >= 0x17)
  {
    v121 = (v118 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v118 | 7) != 0x17)
      v121 = v118 | 7;
    v122 = v121 + 1;
    v120 = operator new(v121 + 1);
    v143[1] = v119;
    v144 = v122 | 0x8000000000000000;
    v143[0] = v120;
    goto LABEL_104;
  }
  HIBYTE(v144) = v118;
  v120 = v143;
  if (v118)
LABEL_104:
    memmove(v120, v117, (size_t)v119);
  *((_BYTE *)v119 + (_QWORD)v120) = 0;
  v123 = (_QWORD *)operator new();
  *v123 = &off_250AF3C50;
  v123[1] = v4 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v143, (uint64_t)v123);
  strcpy(v172, "$GKJBMC{CQM@A@{VAPVMAREH");
  sub_2396EFC88((uint64_t)v172, *(int32x4_t *)"QM@A@{VAPVMAREH", v124, v125, v126);
  v128 = v127;
  v129 = strlen(v127);
  if (v129 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v130 = (void *)v129;
  if (v129 >= 0x17)
  {
    v132 = (v129 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v129 | 7) != 0x17)
      v132 = v129 | 7;
    v133 = v132 + 1;
    v131 = operator new(v132 + 1);
    v141[1] = v130;
    v142 = v133 | 0x8000000000000000;
    v141[0] = v131;
    goto LABEL_112;
  }
  HIBYTE(v142) = v129;
  v131 = v141;
  if (v129)
LABEL_112:
    memmove(v131, v128, (size_t)v130);
  *((_BYTE *)v130 + (_QWORD)v131) = 0;
  v134 = (_QWORD *)operator new();
  *v134 = &off_250AF3C80;
  v134[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v141, (uint64_t)v134);
  if (SHIBYTE(v142) < 0)
  {
    operator delete(v141[0]);
    if ((SHIBYTE(v144) & 0x80000000) == 0)
    {
LABEL_115:
      if ((SHIBYTE(v146) & 0x80000000) == 0)
        goto LABEL_116;
      goto LABEL_143;
    }
  }
  else if ((SHIBYTE(v144) & 0x80000000) == 0)
  {
    goto LABEL_115;
  }
  operator delete(v143[0]);
  if ((SHIBYTE(v146) & 0x80000000) == 0)
  {
LABEL_116:
    if ((SHIBYTE(v148) & 0x80000000) == 0)
      goto LABEL_117;
    goto LABEL_144;
  }
LABEL_143:
  operator delete(v145[0]);
  if ((SHIBYTE(v148) & 0x80000000) == 0)
  {
LABEL_117:
    if ((SHIBYTE(v150) & 0x80000000) == 0)
      goto LABEL_118;
    goto LABEL_145;
  }
LABEL_144:
  operator delete(v147[0]);
  if ((SHIBYTE(v150) & 0x80000000) == 0)
  {
LABEL_118:
    if ((SHIBYTE(v152) & 0x80000000) == 0)
      goto LABEL_119;
    goto LABEL_146;
  }
LABEL_145:
  operator delete(v149[0]);
  if ((SHIBYTE(v152) & 0x80000000) == 0)
  {
LABEL_119:
    if ((SHIBYTE(v154) & 0x80000000) == 0)
      goto LABEL_120;
    goto LABEL_147;
  }
LABEL_146:
  operator delete(v151[0]);
  if ((SHIBYTE(v154) & 0x80000000) == 0)
  {
LABEL_120:
    if ((SHIBYTE(v156) & 0x80000000) == 0)
      goto LABEL_121;
    goto LABEL_148;
  }
LABEL_147:
  operator delete(v153[0]);
  if ((SHIBYTE(v156) & 0x80000000) == 0)
  {
LABEL_121:
    if ((SHIBYTE(v158) & 0x80000000) == 0)
      goto LABEL_122;
    goto LABEL_149;
  }
LABEL_148:
  operator delete(v155[0]);
  if ((SHIBYTE(v158) & 0x80000000) == 0)
  {
LABEL_122:
    if ((SHIBYTE(v160) & 0x80000000) == 0)
      goto LABEL_123;
    goto LABEL_150;
  }
LABEL_149:
  operator delete(v157[0]);
  if ((SHIBYTE(v160) & 0x80000000) == 0)
  {
LABEL_123:
    if ((SHIBYTE(v162) & 0x80000000) == 0)
      goto LABEL_124;
    goto LABEL_151;
  }
LABEL_150:
  operator delete(v159[0]);
  if ((SHIBYTE(v162) & 0x80000000) == 0)
  {
LABEL_124:
    if ((SHIBYTE(v164) & 0x80000000) == 0)
      goto LABEL_125;
    goto LABEL_152;
  }
LABEL_151:
  operator delete(v161[0]);
  if ((SHIBYTE(v164) & 0x80000000) == 0)
  {
LABEL_125:
    if ((SHIBYTE(v166) & 0x80000000) == 0)
      goto LABEL_126;
LABEL_153:
    operator delete(v165[0]);
    if ((SHIBYTE(v168) & 0x80000000) == 0)
      goto LABEL_127;
    goto LABEL_154;
  }
LABEL_152:
  operator delete(v163[0]);
  if (SHIBYTE(v166) < 0)
    goto LABEL_153;
LABEL_126:
  if ((SHIBYTE(v168) & 0x80000000) == 0)
    goto LABEL_127;
LABEL_154:
  operator delete(__dst[0]);
LABEL_127:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
  {
    *v4 = HIDWORD(v169);
    v4[1] = v169;
  }
  v135 = v171;
  if (v171)
  {
    do
    {
      v136 = v135[5];
      if (v136)
        (*(void (**)(uint64_t))(*(_QWORD *)v136 + 8))(v136);
      v135 = (_QWORD *)*v135;
    }
    while (v135);
    v137 = (void **)v171;
    if (v171)
    {
      do
      {
        v140 = (void **)*v137;
        if (*((char *)v137 + 39) < 0)
          operator delete(v137[2]);
        operator delete(v137);
        v137 = v140;
      }
      while (v140);
    }
  }
  v138 = __p[0];
  __p[0] = 0;
  if (v138)
    operator delete(v138);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AD611C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,_QWORD *__p)
{
  _QWORD *v56;
  uint64_t v57;
  void **v58;
  void **v59;

  v56 = __p;
  if (__p)
  {
    do
    {
      v57 = v56[5];
      if (v57)
        (*(void (**)(uint64_t))(*(_QWORD *)v57 + 8))(v57);
      v56 = (_QWORD *)*v56;
    }
    while (v56);
    v58 = (void **)__p;
    do
    {
      v59 = (void **)*v58;
      if (*((char *)v58 + 39) < 0)
        operator delete(v58[2]);
      operator delete(v58);
      v58 = v59;
    }
    while (v59);
  }
  if (!a53)
    _Unwind_Resume(a1);
  operator delete(a53);
  _Unwind_Resume(a1);
}

void sub_239AD6418(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD643C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD6C9C(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AD6478(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int8x8_t *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int8x16_t v19;
  double v20;
  int32x4_t v21;
  const char *v22;
  const char *v23;
  size_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int8x16_t v30;
  double v31;
  int32x4_t v32;
  const char *v33;
  const char *v34;
  size_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  double v41;
  double v42;
  int16x8_t v43;
  const char *v44;
  const char *v45;
  size_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  double v52;
  double v53;
  int16x8_t v54;
  const char *v55;
  const char *v56;
  size_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  void **v65;
  void *v66;
  void **v68;
  void *v69[2];
  unint64_t v70;
  void *v71[2];
  unint64_t v72;
  void *v73[2];
  unint64_t v74;
  void *v75[2];
  unint64_t v76;
  void *v77[2];
  unint64_t v78;
  void *__dst[2];
  unint64_t v80;
  void *__p[2];
  void *v82;
  _OWORD v83[2];
  uint64_t v84;
  __int128 v85;
  char v86[32];
  char v87[32];
  char v88[24];
  uint64_t v89;
  char v90;
  uint64_t v91;
  __int16 v92;
  uint64_t v93;

  v93 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v91 = 0x211173C1A0163;
  v92 = 8;
  v5 = sub_23950FF84((int8x8_t *)&v91);
  v6 = strlen((const char *)v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v80 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v80) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AE0220;
  v11[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v89 = 0x3E28342B0422395BLL;
  v90 = 0;
  v12 = sub_239513718((char *)&v89);
  v13 = strlen(v12);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v77[1] = v14;
    v78 = v17 | 0x8000000000000000;
    v77[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v78) = v13;
  v15 = v77;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250AE0220;
  v18[1] = v4 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v77, (uint64_t)v18);
  strcpy(v88, "+FBEtE^FtHDFFDEt_YJH@X");
  sub_2396EFBE0((uint64_t)v88, *(int32x4_t *)"+FBEtE^FtHDFFDEt_YJH@X", v19, v20, v21);
  v23 = v22;
  v24 = strlen(v22);
  if (v24 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v25 = (void *)v24;
  if (v24 >= 0x17)
  {
    v27 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v24 | 7) != 0x17)
      v27 = v24 | 7;
    v28 = v27 + 1;
    v26 = operator new(v27 + 1);
    v75[1] = v25;
    v76 = v28 | 0x8000000000000000;
    v75[0] = v26;
    goto LABEL_24;
  }
  HIBYTE(v76) = v24;
  v26 = v75;
  if (v24)
LABEL_24:
    memmove(v26, v23, (size_t)v25);
  *((_BYTE *)v25 + (_QWORD)v26) = 0;
  v29 = (_QWORD *)operator new();
  *v29 = &off_250AFFF08;
  v29[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v75, (uint64_t)v29);
  strcpy(v87, "!L@Y~C@RDMHOD~@OFMD");
  sub_23958E55C((uint64_t)v87, *(int32x4_t *)"!L@Y~C@RDMHOD~@OFMD", v30, v31, v32);
  v34 = v33;
  v35 = strlen(v33);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v36 = (void *)v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = operator new(v38 + 1);
    v73[1] = v36;
    v74 = v39 | 0x8000000000000000;
    v73[0] = v37;
    goto LABEL_32;
  }
  HIBYTE(v74) = v35;
  v37 = v73;
  if (v35)
LABEL_32:
    memmove(v37, v34, (size_t)v36);
  *((_BYTE *)v36 + (_QWORD)v37) = 0;
  v40 = (_QWORD *)operator new();
  *v40 = &off_250ADF360;
  v40[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v73, (uint64_t)v40);
  v85 = xmmword_239F0E507;
  sub_2396F02A0((unsigned __int8 *)&v85, 3.17381799e190, unk_239F0E517, v41, v42, v43);
  v45 = v44;
  v46 = strlen(v44);
  if (v46 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v47 = (void *)v46;
  if (v46 >= 0x17)
  {
    v49 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v46 | 7) != 0x17)
      v49 = v46 | 7;
    v50 = v49 + 1;
    v48 = operator new(v49 + 1);
    v71[1] = v47;
    v72 = v50 | 0x8000000000000000;
    v71[0] = v48;
    goto LABEL_40;
  }
  HIBYTE(v72) = v46;
  v48 = v71;
  if (v46)
LABEL_40:
    memmove(v48, v45, (size_t)v47);
  *((_BYTE *)v47 + (_QWORD)v48) = 0;
  v51 = (_QWORD *)operator new();
  *v51 = &off_250ADF360;
  v51[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v71, (uint64_t)v51);
  v83[0] = xmmword_239F0E52F;
  v83[1] = xmmword_239F0E53F;
  v84 = 0x203051F020D1CLL;
  sub_2396F02A0((unsigned __int8 *)v83, 5.06217418e-284, xmmword_239F0E53F, v52, v53, v54);
  v56 = v55;
  v57 = strlen(v55);
  if (v57 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v58 = (void *)v57;
  if (v57 >= 0x17)
  {
    v60 = (v57 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v57 | 7) != 0x17)
      v60 = v57 | 7;
    v61 = v60 + 1;
    v59 = operator new(v60 + 1);
    v69[1] = v58;
    v70 = v61 | 0x8000000000000000;
    v69[0] = v59;
    goto LABEL_48;
  }
  HIBYTE(v70) = v57;
  v59 = v69;
  if (v57)
LABEL_48:
    memmove(v59, v56, (size_t)v58);
  *((_BYTE *)v58 + (_QWORD)v59) = 0;
  v62 = (_QWORD *)operator new();
  *v62 = &off_250ADF360;
  v62[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v69, (uint64_t)v62);
  if (SHIBYTE(v70) < 0)
  {
    operator delete(v69[0]);
    if ((SHIBYTE(v72) & 0x80000000) == 0)
    {
LABEL_51:
      if ((SHIBYTE(v74) & 0x80000000) == 0)
        goto LABEL_52;
      goto LABEL_69;
    }
  }
  else if ((SHIBYTE(v72) & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v71[0]);
  if ((SHIBYTE(v74) & 0x80000000) == 0)
  {
LABEL_52:
    if ((SHIBYTE(v76) & 0x80000000) == 0)
      goto LABEL_53;
    goto LABEL_70;
  }
LABEL_69:
  operator delete(v73[0]);
  if ((SHIBYTE(v76) & 0x80000000) == 0)
  {
LABEL_53:
    if ((SHIBYTE(v78) & 0x80000000) == 0)
      goto LABEL_54;
LABEL_71:
    operator delete(v77[0]);
    if ((SHIBYTE(v80) & 0x80000000) == 0)
      goto LABEL_55;
    goto LABEL_72;
  }
LABEL_70:
  operator delete(v75[0]);
  if (SHIBYTE(v78) < 0)
    goto LABEL_71;
LABEL_54:
  if ((SHIBYTE(v80) & 0x80000000) == 0)
    goto LABEL_55;
LABEL_72:
  operator delete(__dst[0]);
LABEL_55:
  sub_23959479C((uint64_t)__p, a2);
  v63 = v82;
  if (v82)
  {
    do
    {
      v64 = v63[5];
      if (v64)
        (*(void (**)(uint64_t))(*(_QWORD *)v64 + 8))(v64);
      v63 = (_QWORD *)*v63;
    }
    while (v63);
    v65 = (void **)v82;
    if (v82)
    {
      do
      {
        v68 = (void **)*v65;
        if (*((char *)v65 + 39) < 0)
          operator delete(v65[2]);
        operator delete(v65);
        v65 = v68;
      }
      while (v68);
    }
  }
  v66 = __p[0];
  __p[0] = 0;
  if (v66)
    operator delete(v66);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AD6B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,_QWORD *__p)
{
  _QWORD *v48;
  uint64_t v49;
  void **v50;
  void **v51;

  v48 = __p;
  if (__p)
  {
    do
    {
      v49 = v48[5];
      if (v49)
        (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
      v48 = (_QWORD *)*v48;
    }
    while (v48);
    v50 = (void **)__p;
    do
    {
      v51 = (void **)*v50;
      if (*((char *)v50 + 39) < 0)
        operator delete(v50[2]);
      operator delete(v50);
      v50 = v51;
    }
    while (v51);
  }
  if (!a45)
    _Unwind_Resume(exception_object);
  operator delete(a45);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AD6C9C(uint64_t a1, _QWORD *a2, char a3)
{
  int8x8_t *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int8x16_t v19;
  double v20;
  int32x4_t v21;
  const char *v22;
  const char *v23;
  size_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int8x16_t v30;
  double v31;
  int32x4_t v32;
  const char *v33;
  const char *v34;
  size_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  double v41;
  double v42;
  int16x8_t v43;
  const char *v44;
  const char *v45;
  size_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  double v52;
  double v53;
  int16x8_t v54;
  const char *v55;
  const char *v56;
  size_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  void **v65;
  void *v66;
  void **v68;
  void *v69[2];
  unint64_t v70;
  void *v71[2];
  unint64_t v72;
  void *v73[2];
  unint64_t v74;
  void *v75[2];
  unint64_t v76;
  void *v77[2];
  unint64_t v78;
  void *__dst[2];
  unint64_t v80;
  void *__p[2];
  void *v82;
  __int128 v83;
  char v84[32];
  char v85[48];
  __int128 v86;
  int v87;
  char v88[24];
  uint64_t v89;
  char v90;
  uint64_t v91;
  __int16 v92;
  uint64_t v93;

  v93 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v91 = 0x777566604B6D7614;
  v92 = 127;
  v5 = sub_23950FF84((int8x8_t *)&v91);
  v6 = strlen((const char *)v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v80 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v80) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFEA8;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v89 = 0x160A153A1C0765;
  v90 = 0;
  v12 = sub_239513718((char *)&v89);
  v13 = strlen(v12);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v77[1] = v14;
    v78 = v17 | 0x8000000000000000;
    v77[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v78) = v13;
  v15 = v77;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250AFFEA8;
  v18[1] = a1 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v77, (uint64_t)v18);
  strcpy(v88, "R?;<\r<'?\r1=??=<\r& 319!");
  sub_2396EFBE0((uint64_t)v88, *(int32x4_t *)"R?;<\r<'?\r1=??=<\r& 319!", v19, v20, v21);
  v23 = v22;
  v24 = strlen(v22);
  if (v24 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v25 = (void *)v24;
  if (v24 >= 0x17)
  {
    v27 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v24 | 7) != 0x17)
      v27 = v24 | 7;
    v28 = v27 + 1;
    v26 = operator new(v27 + 1);
    v75[1] = v25;
    v76 = v28 | 0x8000000000000000;
    v75[0] = v26;
    goto LABEL_24;
  }
  HIBYTE(v76) = v24;
  v26 = v75;
  if (v24)
LABEL_24:
    memmove(v26, v23, (size_t)v25);
  *((_BYTE *)v25 + (_QWORD)v26) = 0;
  v29 = (_QWORD *)operator new();
  *v29 = &off_250AFFE48;
  v29[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v75, (uint64_t)v29);
  v86 = xmmword_239F0DDC3;
  v87 = 6905963;
  sub_23958E55C((uint64_t)&v86, (int32x4_t)xmmword_239F0DDC3, v30, v31, v32);
  v34 = v33;
  v35 = strlen(v33);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v36 = (void *)v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = operator new(v38 + 1);
    v73[1] = v36;
    v74 = v39 | 0x8000000000000000;
    v73[0] = v37;
    goto LABEL_32;
  }
  HIBYTE(v74) = v35;
  v37 = v73;
  if (v35)
LABEL_32:
    memmove(v37, v34, (size_t)v36);
  *((_BYTE *)v36 + (_QWORD)v37) = 0;
  v40 = (_QWORD *)operator new();
  *v40 = &off_250ADF570;
  v40[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v73, (uint64_t)v40);
  strcpy(v85, ":W[BeJHSTYSJ[Ve[BSIe[T]V_e\\UHeH_^OYNSUT");
  sub_2396F02A0((unsigned __int8 *)v85, *(double *)":W[BeJHSTYSJ[Ve[BSIe[T]V_e\\UHeH_^OYNSUT", *(int16x8_t *)"BSIe[T]V_e\\UHeH_^OYNSUT", v41, v42, v43);
  v45 = v44;
  v46 = strlen(v44);
  if (v46 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v47 = (void *)v46;
  if (v46 >= 0x17)
  {
    v49 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v46 | 7) != 0x17)
      v49 = v46 | 7;
    v50 = v49 + 1;
    v48 = operator new(v49 + 1);
    v71[1] = v47;
    v72 = v50 | 0x8000000000000000;
    v71[0] = v48;
    goto LABEL_40;
  }
  HIBYTE(v72) = v46;
  v48 = v71;
  if (v46)
LABEL_40:
    memmove(v48, v45, (size_t)v47);
  *((_BYTE *)v47 + (_QWORD)v48) = 0;
  v51 = (_QWORD *)operator new();
  *v51 = &off_250ADF570;
  v51[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v71, (uint64_t)v51);
  v83 = xmmword_239F0DDFF;
  sub_2396F02A0((unsigned __int8 *)&v83, 1.94906206e286, unk_239F0DE0F, v52, v53, v54);
  v56 = v55;
  v57 = strlen(v55);
  if (v57 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v58 = (void *)v57;
  if (v57 >= 0x17)
  {
    v60 = (v57 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v57 | 7) != 0x17)
      v60 = v57 | 7;
    v61 = v60 + 1;
    v59 = operator new(v60 + 1);
    v69[1] = v58;
    v70 = v61 | 0x8000000000000000;
    v69[0] = v59;
    goto LABEL_48;
  }
  HIBYTE(v70) = v57;
  v59 = v69;
  if (v57)
LABEL_48:
    memmove(v59, v56, (size_t)v58);
  *((_BYTE *)v58 + (_QWORD)v59) = 0;
  v62 = (_QWORD *)operator new();
  *v62 = &off_250ADF570;
  v62[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v69, (uint64_t)v62);
  if (SHIBYTE(v70) < 0)
  {
    operator delete(v69[0]);
    if ((SHIBYTE(v72) & 0x80000000) == 0)
    {
LABEL_51:
      if ((SHIBYTE(v74) & 0x80000000) == 0)
        goto LABEL_52;
      goto LABEL_69;
    }
  }
  else if ((SHIBYTE(v72) & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v71[0]);
  if ((SHIBYTE(v74) & 0x80000000) == 0)
  {
LABEL_52:
    if ((SHIBYTE(v76) & 0x80000000) == 0)
      goto LABEL_53;
    goto LABEL_70;
  }
LABEL_69:
  operator delete(v73[0]);
  if ((SHIBYTE(v76) & 0x80000000) == 0)
  {
LABEL_53:
    if ((SHIBYTE(v78) & 0x80000000) == 0)
      goto LABEL_54;
LABEL_71:
    operator delete(v77[0]);
    if ((SHIBYTE(v80) & 0x80000000) == 0)
      goto LABEL_55;
    goto LABEL_72;
  }
LABEL_70:
  operator delete(v75[0]);
  if (SHIBYTE(v78) < 0)
    goto LABEL_71;
LABEL_54:
  if ((SHIBYTE(v80) & 0x80000000) == 0)
    goto LABEL_55;
LABEL_72:
  operator delete(__dst[0]);
LABEL_55:
  sub_2395902F0((uint64_t)__p, a2);
  v63 = v82;
  if (v82)
  {
    do
    {
      v64 = v63[5];
      if (v64)
        (*(void (**)(uint64_t))(*(_QWORD *)v64 + 8))(v64);
      v63 = (_QWORD *)*v63;
    }
    while (v63);
    v65 = (void **)v82;
    if (v82)
    {
      do
      {
        v68 = (void **)*v65;
        if (*((char *)v65 + 39) < 0)
          operator delete(v65[2]);
        operator delete(v65);
        v65 = v68;
      }
      while (v68);
    }
  }
  v66 = __p[0];
  __p[0] = 0;
  if (v66)
    operator delete(v66);
  return a2;
}

void sub_239AD7310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,char a45)
{
  sub_2395905C0((uint64_t)&a45);
  _Unwind_Resume(a1);
}

void sub_239AD7428(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD744C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD7858(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AD7488(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t v12;
  double v13;
  int32x4_t v14;
  const char *v15;
  const char *v16;
  size_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void **v25;
  void *v26;
  void **v28;
  void *v29[2];
  unint64_t v30;
  void *__dst[2];
  unint64_t v32;
  void *__p[2];
  void *v34;
  _OWORD v35[2];
  char v36[16];
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v36, "\airjXjfsdobt");
  v5 = sub_239510ECC((uint64_t)v36);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v32 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v32) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFF08;
  v11[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v35[0] = xmmword_239F0E4A3;
  *(_OWORD *)((char *)v35 + 12) = *(__int128 *)((char *)&xmmword_239F0E4A3 + 12);
  sub_2396B946C((uint64_t)v35, *(int32x4_t *)((char *)&xmmword_239F0E4A3 + 12), v12, v13, v14);
  v16 = v15;
  v17 = strlen(v15);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v18 = (void *)v17;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    v19 = operator new(v20 + 1);
    v29[1] = v18;
    v30 = v21 | 0x8000000000000000;
    v29[0] = v19;
    goto LABEL_16;
  }
  HIBYTE(v30) = v17;
  v19 = v29;
  if (v17)
LABEL_16:
    memmove(v19, v16, (size_t)v18);
  *((_BYTE *)v18 + (_QWORD)v19) = 0;
  v22 = (_QWORD *)operator new();
  *v22 = &off_250AFFF08;
  v22[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v29, (uint64_t)v22);
  if (SHIBYTE(v30) < 0)
  {
    operator delete(v29[0]);
    if ((SHIBYTE(v32) & 0x80000000) == 0)
      goto LABEL_19;
  }
  else if ((SHIBYTE(v32) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(__dst[0]);
LABEL_19:
  sub_23959479C((uint64_t)__p, a2);
  v23 = v34;
  if (v34)
  {
    do
    {
      v24 = v23[5];
      if (v24)
        (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
      v23 = (_QWORD *)*v23;
    }
    while (v23);
    v25 = (void **)v34;
    if (v34)
    {
      do
      {
        v28 = (void **)*v25;
        if (*((char *)v25 + 39) < 0)
          operator delete(v25[2]);
        operator delete(v25);
        v25 = v28;
      }
      while (v28);
    }
  }
  v26 = __p[0];
  __p[0] = 0;
  if (v26)
    operator delete(v26);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AD7770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,_QWORD *__p)
{
  _QWORD *v24;
  uint64_t v25;
  void **v26;
  void **v27;

  v24 = __p;
  if (__p)
  {
    do
    {
      v25 = v24[5];
      if (v25)
        (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
      v24 = (_QWORD *)*v24;
    }
    while (v24);
    v26 = (void **)__p;
    do
    {
      v27 = (void **)*v26;
      if (*((char *)v26 + 39) < 0)
        operator delete(v26[2]);
      operator delete(v26);
      v26 = v27;
    }
    while (v27);
  }
  if (!a21)
    _Unwind_Resume(exception_object);
  operator delete(a21);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AD7858(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t v12;
  double v13;
  int32x4_t v14;
  const char *v15;
  const char *v16;
  size_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void **v25;
  void *v26;
  void **v28;
  void *v29[2];
  unint64_t v30;
  void *__dst[2];
  unint64_t v32;
  void *__p[2];
  void *v34;
  _OWORD v35[2];
  char v36[16];
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v36, "*D_GuGK^IBOY");
  v5 = sub_239510ECC((uint64_t)v36);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v32 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v32) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFE48;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v35[0] = xmmword_239F0DD73;
  *(_OWORD *)((char *)v35 + 12) = *(__int128 *)((char *)&xmmword_239F0DD73 + 12);
  sub_2396B946C((uint64_t)v35, *(int32x4_t *)((char *)&xmmword_239F0DD73 + 12), v12, v13, v14);
  v16 = v15;
  v17 = strlen(v15);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v18 = (void *)v17;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    v19 = operator new(v20 + 1);
    v29[1] = v18;
    v30 = v21 | 0x8000000000000000;
    v29[0] = v19;
    goto LABEL_16;
  }
  HIBYTE(v30) = v17;
  v19 = v29;
  if (v17)
LABEL_16:
    memmove(v19, v16, (size_t)v18);
  *((_BYTE *)v18 + (_QWORD)v19) = 0;
  v22 = (_QWORD *)operator new();
  *v22 = &off_250AFFE48;
  v22[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v29, (uint64_t)v22);
  if (SHIBYTE(v30) < 0)
  {
    operator delete(v29[0]);
    if ((SHIBYTE(v32) & 0x80000000) == 0)
      goto LABEL_19;
  }
  else if ((SHIBYTE(v32) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(__dst[0]);
LABEL_19:
  sub_2395902F0((uint64_t)__p, a2);
  v23 = v34;
  if (v34)
  {
    do
    {
      v24 = v23[5];
      if (v24)
        (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
      v23 = (_QWORD *)*v23;
    }
    while (v23);
    v25 = (void **)v34;
    if (v34)
    {
      do
      {
        v28 = (void **)*v25;
        if (*((char *)v25 + 39) < 0)
          operator delete(v25[2]);
        operator delete(v25);
        v25 = v28;
      }
      while (v28);
    }
  }
  v26 = __p[0];
  __p[0] = 0;
  if (v26)
    operator delete(v26);
  return a2;
}

void sub_239AD7B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  sub_2395905C0((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_239AD7B7C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD7BA0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD81F8(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AD7BDC(uint64_t a1, uint64_t *a2, char a3)
{
  _DWORD *v4;
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x8_t *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  const char *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  void **v40;
  void *v41;
  void **v43;
  void *v44[2];
  unint64_t v45;
  void *v46[2];
  unint64_t v47;
  void *v48[2];
  unint64_t v49;
  void *__dst[2];
  unint64_t v51;
  void *__p[2];
  void *v53;
  int v54;
  _OWORD v55[2];
  __int128 v56;
  char v57;
  uint64_t v58;
  __int16 v59;
  uint64_t v60;
  char v61;
  uint64_t v62;

  v62 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD **)(a1 + 8);
  v54 = 0;
  sub_2396157EC((uint64_t)__p, a3);
  v60 = 0x253039341F253140;
  v61 = 0;
  v5 = sub_239513718((char *)&v60);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v51 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v51) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF240;
  v11[1] = &v54;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v58 = 0x3817081338021667;
  v59 = 12;
  v12 = sub_23950FF84((int8x8_t *)&v58);
  v13 = strlen((const char *)v12);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v48[1] = v14;
    v49 = v17 | 0x8000000000000000;
    v48[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v49) = v13;
  v15 = v48;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250ADF420;
  v18[1] = v4 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v48, (uint64_t)v18);
  v56 = xmmword_239F0E463;
  v57 = 0;
  sub_2396EFA24((uint64_t)&v56);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v46[1] = v22;
    v47 = v25 | 0x8000000000000000;
    v46[0] = v23;
    goto LABEL_24;
  }
  HIBYTE(v47) = v21;
  v23 = v46;
  if (v21)
LABEL_24:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250ADF360;
  v26[1] = v4 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v46, (uint64_t)v26);
  v55[0] = xmmword_239F0E474;
  *(_QWORD *)((char *)v55 + 15) = 0x76426D72694271;
  sub_2396EFBE0((uint64_t)v55, (int32x4_t)xmmword_239F0E474, v27, v28, v29);
  v31 = v30;
  v32 = strlen(v30);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v44[1] = v33;
    v45 = v36 | 0x8000000000000000;
    v44[0] = v34;
    goto LABEL_32;
  }
  HIBYTE(v45) = v32;
  v34 = v44;
  if (v32)
LABEL_32:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250AE0220;
  v37[1] = v4 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v44, (uint64_t)v37);
  if (SHIBYTE(v45) < 0)
  {
    operator delete(v44[0]);
    if ((SHIBYTE(v47) & 0x80000000) == 0)
    {
LABEL_35:
      if ((SHIBYTE(v49) & 0x80000000) == 0)
        goto LABEL_36;
LABEL_53:
      operator delete(v48[0]);
      if ((SHIBYTE(v51) & 0x80000000) == 0)
        goto LABEL_37;
      goto LABEL_54;
    }
  }
  else if ((SHIBYTE(v47) & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(v46[0]);
  if (SHIBYTE(v49) < 0)
    goto LABEL_53;
LABEL_36:
  if ((SHIBYTE(v51) & 0x80000000) == 0)
    goto LABEL_37;
LABEL_54:
  operator delete(__dst[0]);
LABEL_37:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
    *v4 = v54;
  v38 = v53;
  if (v53)
  {
    do
    {
      v39 = v38[5];
      if (v39)
        (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
      v38 = (_QWORD *)*v38;
    }
    while (v38);
    v40 = (void **)v53;
    if (v53)
    {
      do
      {
        v43 = (void **)*v40;
        if (*((char *)v40 + 39) < 0)
          operator delete(v40[2]);
        operator delete(v40);
        v40 = v43;
      }
      while (v43);
    }
  }
  v41 = __p[0];
  __p[0] = 0;
  if (v41)
    operator delete(v41);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AD80B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,_QWORD *__p)
{
  _QWORD *v37;
  uint64_t v38;
  void **v39;
  void **v40;

  v37 = __p;
  if (__p)
  {
    do
    {
      v38 = v37[5];
      if (v38)
        (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
      v37 = (_QWORD *)*v37;
    }
    while (v37);
    v39 = (void **)__p;
    do
    {
      v40 = (void **)*v39;
      if (*((char *)v39 + 39) < 0)
        operator delete(v39[2]);
      operator delete(v39);
      v39 = v40;
    }
    while (v40);
  }
  if (!a34)
    _Unwind_Resume(exception_object);
  operator delete(a34);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AD81F8(int *a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x8_t *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  const char *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  void **v40;
  void *v41;
  void **v43;
  void *v44[2];
  unint64_t v45;
  void *v46[2];
  unint64_t v47;
  void *v48[2];
  unint64_t v49;
  void *__dst[2];
  unint64_t v51;
  void *__p[2];
  void *v53;
  int v54;
  _OWORD v55[2];
  __int128 v56;
  char v57;
  int8x8_t v58[2];
  uint64_t v59;
  char v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v54 = *a1;
  sub_2396157EC((uint64_t)__p, a3);
  v59 = 0x1C09000D261C0879;
  v60 = 0;
  v5 = sub_239513718((char *)&v59);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v51 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v51) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF240;
  v11[1] = &v54;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v12 = sub_23950FF84(v58);
  v13 = strlen((const char *)v12);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v48[1] = v14;
    v49 = v17 | 0x8000000000000000;
    v48[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v49) = v13;
  v15 = v48;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250ADF750;
  v18[1] = a1 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v48, (uint64_t)v18);
  v56 = xmmword_239F0DD33;
  v57 = 0;
  sub_2396EFA24((uint64_t)&v56);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v46[1] = v22;
    v47 = v25 | 0x8000000000000000;
    v46[0] = v23;
    goto LABEL_24;
  }
  HIBYTE(v47) = v21;
  v23 = v46;
  if (v21)
LABEL_24:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250ADF570;
  v26[1] = a1 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v46, (uint64_t)v26);
  v55[0] = xmmword_239F0DD44;
  *(_QWORD *)((char *)v55 + 15) = 0x27133C23381320;
  sub_2396EFBE0((uint64_t)v55, (int32x4_t)xmmword_239F0DD44, v27, v28, v29);
  v31 = v30;
  v32 = strlen(v30);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v44[1] = v33;
    v45 = v36 | 0x8000000000000000;
    v44[0] = v34;
    goto LABEL_32;
  }
  HIBYTE(v45) = v32;
  v34 = v44;
  if (v32)
LABEL_32:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250AFFEA8;
  v37[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v44, (uint64_t)v37);
  if (SHIBYTE(v45) < 0)
  {
    operator delete(v44[0]);
    if ((SHIBYTE(v47) & 0x80000000) == 0)
    {
LABEL_35:
      if ((SHIBYTE(v49) & 0x80000000) == 0)
        goto LABEL_36;
LABEL_51:
      operator delete(v48[0]);
      if ((SHIBYTE(v51) & 0x80000000) == 0)
        goto LABEL_37;
      goto LABEL_52;
    }
  }
  else if ((SHIBYTE(v47) & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(v46[0]);
  if (SHIBYTE(v49) < 0)
    goto LABEL_51;
LABEL_36:
  if ((SHIBYTE(v51) & 0x80000000) == 0)
    goto LABEL_37;
LABEL_52:
  operator delete(__dst[0]);
LABEL_37:
  sub_2395902F0((uint64_t)__p, a2);
  v38 = v53;
  if (v53)
  {
    do
    {
      v39 = v38[5];
      if (v39)
        (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
      v38 = (_QWORD *)*v38;
    }
    while (v38);
    v40 = (void **)v53;
    if (v53)
    {
      do
      {
        v43 = (void **)*v40;
        if (*((char *)v40 + 39) < 0)
          operator delete(v40[2]);
        operator delete(v40);
        v40 = v43;
      }
      while (v43);
    }
  }
  v41 = __p[0];
  __p[0] = 0;
  if (v41)
    operator delete(v41);
  return a2;
}

void sub_239AD86B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,char a34)
{
  sub_2395905C0((uint64_t)&a34);
  _Unwind_Resume(a1);
}

void sub_239AD8774(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AD8798(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD8F34(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AD87D4(uint64_t a1, uint64_t *a2, char a3)
{
  _DWORD *v4;
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int16x8_t v16;
  const char *v17;
  const char *v18;
  size_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  const char *v25;
  const char *v26;
  size_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  const char *v33;
  size_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  const char *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  void **v49;
  void *v50;
  void **v52;
  void *v53[2];
  unint64_t v54;
  void *v55[2];
  unint64_t v56;
  void *v57[2];
  unint64_t v58;
  void *v59[2];
  unint64_t v60;
  void *__dst[2];
  unint64_t v62;
  uint64_t v63;
  void *__p[2];
  void *v65;
  uint64_t v66;
  char v67[8];
  char v68[16];
  char v69[16];
  char v70[16];
  char v71[24];
  uint64_t v72;

  v72 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD **)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v63 = 0;
  strcpy(v71, "D2(% \x1B*+6)%(->%0-+*");
  sub_23958E55C((uint64_t)v71, *(int32x4_t *)"D2(% \x1B*+6)%(->%0-+*", v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v62 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v62) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250ADF240;
  v15[1] = (char *)&v63 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  strcpy(v70, "/YCNKp\\L@]FAH");
  sub_23971A32C((uint64_t)v70, v16);
  v18 = v17;
  v19 = strlen(v17);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v20 = (void *)v19;
  if (v19 >= 0x17)
  {
    v22 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v22 = v19 | 7;
    v23 = v22 + 1;
    v21 = operator new(v22 + 1);
    v59[1] = v20;
    v60 = v23 | 0x8000000000000000;
    v59[0] = v21;
    goto LABEL_16;
  }
  HIBYTE(v60) = v19;
  v21 = v59;
  if (v19)
LABEL_16:
    memmove(v21, v18, (size_t)v20);
  *((_BYTE *)v20 + (_QWORD)v21) = 0;
  v24 = (_QWORD *)operator new();
  *v24 = &off_250ADF240;
  v24[1] = &v63;
  sub_23961580C((uint64_t)__p, (uint64_t)v59, (uint64_t)v24);
  strcpy(v69, "'TJLxSOUBTOHKC");
  sub_23958E5E0((uint64_t)v69);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = (void *)v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = operator new(v30 + 1);
    v57[1] = v28;
    v58 = v31 | 0x8000000000000000;
    v57[0] = v29;
    goto LABEL_24;
  }
  HIBYTE(v58) = v27;
  v29 = v57;
  if (v27)
LABEL_24:
    memmove(v29, v26, (size_t)v28);
  *((_BYTE *)v28 + (_QWORD)v29) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250AE0670;
  v32[1] = v4 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v57, (uint64_t)v32);
  strcpy(v68, ">MSUaNQI[L");
  v33 = (const char *)sub_23958E518((uint64_t)v68);
  v34 = strlen(v33);
  if (v34 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v35 = (void *)v34;
  if (v34 >= 0x17)
  {
    v37 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v34 | 7) != 0x17)
      v37 = v34 | 7;
    v38 = v37 + 1;
    v36 = operator new(v37 + 1);
    v55[1] = v35;
    v56 = v38 | 0x8000000000000000;
    v55[0] = v36;
    goto LABEL_32;
  }
  HIBYTE(v56) = v34;
  v36 = v55;
  if (v34)
LABEL_32:
    memmove(v36, v33, (size_t)v35);
  *((_BYTE *)v35 + (_QWORD)v36) = 0;
  v39 = (_QWORD *)operator new();
  *v39 = &off_250AE0670;
  v39[1] = v4 + 3;
  sub_23961580C((uint64_t)__p, (uint64_t)v55, (uint64_t)v39);
  v66 = 0x2A0523362A2A3B5ALL;
  strcpy(v67, "9;");
  v40 = (const char *)sub_23958E518((uint64_t)&v66);
  v41 = strlen(v40);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v53[1] = v42;
    v54 = v45 | 0x8000000000000000;
    v53[0] = v43;
    goto LABEL_40;
  }
  HIBYTE(v54) = v41;
  v43 = v53;
  if (v41)
LABEL_40:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250AE0220;
  v46[1] = v4 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v53, (uint64_t)v46);
  if (SHIBYTE(v54) < 0)
  {
    operator delete(v53[0]);
    if ((SHIBYTE(v56) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v58) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_62;
    }
  }
  else if ((SHIBYTE(v56) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v55[0]);
  if ((SHIBYTE(v58) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v60) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_63:
    operator delete(v59[0]);
    if ((SHIBYTE(v62) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_64;
  }
LABEL_62:
  operator delete(v57[0]);
  if (SHIBYTE(v60) < 0)
    goto LABEL_63;
LABEL_45:
  if ((SHIBYTE(v62) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_64:
  operator delete(__dst[0]);
LABEL_46:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
  {
    *v4 = HIDWORD(v63);
    v4[1] = v63;
  }
  v47 = v65;
  if (v65)
  {
    do
    {
      v48 = v47[5];
      if (v48)
        (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
      v47 = (_QWORD *)*v47;
    }
    while (v47);
    v49 = (void **)v65;
    if (v65)
    {
      do
      {
        v52 = (void **)*v49;
        if (*((char *)v49 + 39) < 0)
          operator delete(v49[2]);
        operator delete(v49);
        v49 = v52;
      }
      while (v52);
    }
  }
  v50 = __p[0];
  __p[0] = 0;
  if (v50)
    operator delete(v50);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AD8DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,_QWORD *__p)
{
  _QWORD *v43;
  uint64_t v44;
  void **v45;
  void **v46;

  v43 = __p;
  if (__p)
  {
    do
    {
      v44 = v43[5];
      if (v44)
        (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
      v43 = (_QWORD *)*v43;
    }
    while (v43);
    v45 = (void **)__p;
    do
    {
      v46 = (void **)*v45;
      if (*((char *)v45 + 39) < 0)
        operator delete(v45[2]);
      operator delete(v45);
      v45 = v46;
    }
    while (v46);
  }
  if (!a40)
    _Unwind_Resume(exception_object);
  operator delete(a40);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AD8F34(int *a1, _QWORD *a2, char a3)
{
  int v5;
  int8x16_t v6;
  double v7;
  int32x4_t v8;
  const char *v9;
  const char *v10;
  size_t v11;
  void *v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int16x8_t v17;
  const char *v18;
  const char *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  const char *v26;
  const char *v27;
  size_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  const char *v34;
  size_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  void **v50;
  void *v51;
  void **v53;
  void *v54[2];
  unint64_t v55;
  void *v56[2];
  unint64_t v57;
  void *v58[2];
  unint64_t v59;
  void *v60[2];
  unint64_t v61;
  void *__dst[2];
  unint64_t v63;
  int v64;
  int v65;
  void *__p[2];
  void *v67;
  char v68[16];
  uint64_t v69;
  char v70[8];
  char v71[16];
  uint64_t v72;
  char v73[8];
  __int128 v74;
  int v75;
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v5 = *a1;
  v64 = a1[1];
  v65 = v5;
  v74 = xmmword_239F0DD1F;
  v75 = 8158587;
  sub_23958E55C((uint64_t)&v74, (int32x4_t)xmmword_239F0DD1F, v6, v7, v8);
  v10 = v9;
  v11 = strlen(v9);
  if (v11 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v12 = (void *)v11;
  if (v11 >= 0x17)
  {
    v14 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v14 = v11 | 7;
    v15 = v14 + 1;
    v13 = (void **)operator new(v14 + 1);
    __dst[1] = v12;
    v63 = v15 | 0x8000000000000000;
    __dst[0] = v13;
    goto LABEL_8;
  }
  HIBYTE(v63) = v11;
  v13 = __dst;
  if (v11)
LABEL_8:
    memmove(v13, v10, (size_t)v12);
  *((_BYTE *)v12 + (_QWORD)v13) = 0;
  v16 = (_QWORD *)operator new();
  *v16 = &off_250ADF240;
  v16[1] = &v65;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v16);
  v72 = 0x32220E35303D2751;
  strcpy(v73, ">#8?6");
  sub_23971A32C((uint64_t)&v72, v17);
  v19 = v18;
  v20 = strlen(v18);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v60[1] = v21;
    v61 = v24 | 0x8000000000000000;
    v60[0] = v22;
    goto LABEL_16;
  }
  HIBYTE(v61) = v20;
  v22 = v60;
  if (v20)
LABEL_16:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250ADF240;
  v25[1] = &v64;
  sub_23961580C((uint64_t)__p, (uint64_t)v60, (uint64_t)v25);
  strcpy(v71, "*YGAu^BXOYBEFN");
  sub_23958E5E0((uint64_t)v71);
  v27 = v26;
  v28 = strlen(v26);
  if (v28 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v29 = (void *)v28;
  if (v28 >= 0x17)
  {
    v31 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v28 | 7) != 0x17)
      v31 = v28 | 7;
    v32 = v31 + 1;
    v30 = operator new(v31 + 1);
    v58[1] = v29;
    v59 = v32 | 0x8000000000000000;
    v58[0] = v30;
    goto LABEL_24;
  }
  HIBYTE(v59) = v28;
  v30 = v58;
  if (v28)
LABEL_24:
    memmove(v30, v27, (size_t)v29);
  *((_BYTE *)v29 + (_QWORD)v30) = 0;
  v33 = (_QWORD *)operator new();
  *v33 = &off_250AE0580;
  v33[1] = a1 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v58, (uint64_t)v33);
  v69 = 0x243C230C383E2053;
  strcpy(v70, "6!");
  v34 = (const char *)sub_23958E518((uint64_t)&v69);
  v35 = strlen(v34);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v36 = (void *)v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = operator new(v38 + 1);
    v56[1] = v36;
    v57 = v39 | 0x8000000000000000;
    v56[0] = v37;
    goto LABEL_32;
  }
  HIBYTE(v57) = v35;
  v37 = v56;
  if (v35)
LABEL_32:
    memmove(v37, v34, (size_t)v36);
  *((_BYTE *)v36 + (_QWORD)v37) = 0;
  v40 = (_QWORD *)operator new();
  *v40 = &off_250AE0580;
  v40[1] = a1 + 3;
  sub_23961580C((uint64_t)__p, (uint64_t)v56, (uint64_t)v40);
  strcpy(v68, "W6'';.\b'46");
  v41 = (const char *)sub_23958E518((uint64_t)v68);
  v42 = strlen(v41);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v54[1] = v43;
    v55 = v46 | 0x8000000000000000;
    v54[0] = v44;
    goto LABEL_40;
  }
  HIBYTE(v55) = v42;
  v44 = v54;
  if (v42)
LABEL_40:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250AFFEA8;
  v47[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v54, (uint64_t)v47);
  if (SHIBYTE(v55) < 0)
  {
    operator delete(v54[0]);
    if ((SHIBYTE(v57) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v59) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v57) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v56[0]);
  if ((SHIBYTE(v59) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v61) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v60[0]);
    if ((SHIBYTE(v63) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v58[0]);
  if (SHIBYTE(v61) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v63) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_2395902F0((uint64_t)__p, a2);
  v48 = v67;
  if (v67)
  {
    do
    {
      v49 = v48[5];
      if (v49)
        (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
      v48 = (_QWORD *)*v48;
    }
    while (v48);
    v50 = (void **)v67;
    if (v67)
    {
      do
      {
        v53 = (void **)*v50;
        if (*((char *)v50 + 39) < 0)
          operator delete(v50[2]);
        operator delete(v50);
        v50 = v53;
      }
      while (v53);
    }
  }
  v51 = __p[0];
  __p[0] = 0;
  if (v51)
    operator delete(v51);
  return a2;
}

void sub_239AD9500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,char a40)
{
  sub_2395905C0((uint64_t)&a40);
  _Unwind_Resume(a1);
}

void sub_239AD95C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if ((a20 & 0x80000000) == 0)
    JUMPOUT(0x239AD95CCLL);
  JUMPOUT(0x239AD956CLL);
}

_QWORD *sub_239AD95E8(int *a1, _QWORD *a2, char a3)
{
  int v5;
  const char *v6;
  const char *v7;
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int32x4_t v14;
  double v15;
  int32x4_t v16;
  unsigned __int8 *v17;
  size_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  const char *v24;
  size_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  const char *v38;
  size_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int8x16_t v45;
  double v46;
  int32x4_t v47;
  const char *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int8x16_t v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  double v67;
  double v68;
  int16x8_t v69;
  const char *v70;
  const char *v71;
  size_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  int8x16_t v78;
  double v79;
  int32x4_t v80;
  const char *v81;
  const char *v82;
  size_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  const char *v89;
  size_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  const char *v96;
  size_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  int8x16_t v103;
  double v104;
  int32x4_t v105;
  const char *v106;
  const char *v107;
  size_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  int8x16_t v114;
  double v115;
  int32x4_t v116;
  const char *v117;
  const char *v118;
  size_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  int8x16_t v125;
  double v126;
  int32x4_t v127;
  const char *v128;
  const char *v129;
  size_t v130;
  void *v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  void **v138;
  void *v139;
  void **v141;
  void *v142[2];
  unint64_t v143;
  void *v144[2];
  unint64_t v145;
  void *v146[2];
  unint64_t v147;
  void *v148[2];
  unint64_t v149;
  void *v150[2];
  unint64_t v151;
  void *v152[2];
  unint64_t v153;
  void *v154[2];
  unint64_t v155;
  void *v156[2];
  unint64_t v157;
  void *v158[2];
  unint64_t v159;
  void *v160[2];
  unint64_t v161;
  void *v162[2];
  unint64_t v163;
  void *v164[2];
  unint64_t v165;
  void *v166[2];
  unint64_t v167;
  void *__dst[2];
  unint64_t v169;
  int v170;
  int v171;
  void *__p[2];
  void *v173;
  _OWORD v174[2];
  _OWORD v175[2];
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  char v180;
  uint64_t v181;
  int v182;
  _OWORD v183[2];
  _OWORD v184[2];
  uint64_t v185;
  char v186[32];
  _OWORD v187[2];
  char v188[16];
  uint64_t v189;
  char v190[8];
  uint64_t v191;
  char v192[8];
  char v193[32];
  __int128 v194;
  uint64_t v195;

  v195 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v5 = *a1;
  v171 = a1[1];
  v170 = v5;
  v194 = xmmword_239F0C060;
  sub_23950F8E4((uint64_t)&v194);
  v7 = v6;
  v8 = strlen(v6);
  if (v8 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v10 = (void **)operator new(v11 + 1);
    __dst[1] = v9;
    v169 = v12 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_8;
  }
  HIBYTE(v169) = v8;
  v10 = __dst;
  if (v8)
LABEL_8:
    memmove(v10, v7, (size_t)v9);
  *((_BYTE *)v9 + (_QWORD)v10) = 0;
  v13 = (_QWORD *)operator new();
  *v13 = &off_250ADF240;
  v13[1] = &v171;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v13);
  strcpy(v193, "([IEXDMwGZLMZAFOwEGLM");
  v17 = sub_239A90BEC((unsigned __int8 *)v193, *(int8x16_t *)"([IEXDMwGZLMZAFOwEGLM", v14, v15, v16);
  v18 = strlen((const char *)v17);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = (void *)v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    v20 = operator new(v21 + 1);
    v166[1] = v19;
    v167 = v22 | 0x8000000000000000;
    v166[0] = v20;
    goto LABEL_16;
  }
  HIBYTE(v167) = v18;
  v20 = v166;
  if (v18)
LABEL_16:
    memmove(v20, v17, (size_t)v19);
  *((_BYTE *)v19 + (_QWORD)v20) = 0;
  v23 = (_QWORD *)operator new();
  *v23 = &off_250ADF240;
  v23[1] = &v170;
  sub_23961580C((uint64_t)__p, (uint64_t)v166, (uint64_t)v23);
  v191 = 0x667C604B79617A14;
  strcpy(v192, "qupg");
  v24 = sub_239510ECC((uint64_t)&v191);
  v25 = strlen(v24);
  if (v25 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v26 = (void *)v25;
  if (v25 >= 0x17)
  {
    v28 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v25 | 7) != 0x17)
      v28 = v25 | 7;
    v29 = v28 + 1;
    v27 = operator new(v28 + 1);
    v164[1] = v26;
    v165 = v29 | 0x8000000000000000;
    v164[0] = v27;
    goto LABEL_24;
  }
  HIBYTE(v165) = v25;
  v27 = v164;
  if (v25)
LABEL_24:
    memmove(v27, v24, (size_t)v26);
  *((_BYTE *)v26 + (_QWORD)v27) = 0;
  v30 = (_QWORD *)operator new();
  *v30 = &off_250ADF750;
  v30[1] = a1 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v164, (uint64_t)v30);
  v189 = 0x303C2E023028335DLL;
  strcpy(v190, "-18.");
  v31 = sub_239510ECC((uint64_t)&v189);
  v32 = strlen(v31);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v162[1] = v33;
    v163 = v36 | 0x8000000000000000;
    v162[0] = v34;
    goto LABEL_32;
  }
  HIBYTE(v163) = v32;
  v34 = v162;
  if (v32)
LABEL_32:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250ADF5A0;
  v37[1] = a1 + 27;
  sub_23961580C((uint64_t)__p, (uint64_t)v162, (uint64_t)v37);
  strcpy(v188, "=SHPbP\\I^UXN");
  v38 = sub_239510ECC((uint64_t)v188);
  v39 = strlen(v38);
  if (v39 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v40 = (void *)v39;
  if (v39 >= 0x17)
  {
    v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v39 | 7) != 0x17)
      v42 = v39 | 7;
    v43 = v42 + 1;
    v41 = operator new(v42 + 1);
    v160[1] = v40;
    v161 = v43 | 0x8000000000000000;
    v160[0] = v41;
    goto LABEL_40;
  }
  HIBYTE(v161) = v39;
  v41 = v160;
  if (v39)
LABEL_40:
    memmove(v41, v38, (size_t)v40);
  *((_BYTE *)v40 + (_QWORD)v41) = 0;
  v44 = (_QWORD *)operator new();
  *v44 = &off_250ADF5A0;
  v44[1] = a1 + 28;
  sub_23961580C((uint64_t)__p, (uint64_t)v160, (uint64_t)v44);
  v187[0] = xmmword_239F0DCB4;
  *(_QWORD *)((char *)v187 + 13) = 0x7F7042646F7270;
  sub_2396EFB50((uint64_t)v187, (int32x4_t)xmmword_239F0DCB4, v45, v46, v47);
  v49 = v48;
  v50 = strlen(v48);
  if (v50 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v51 = (void *)v50;
  if (v50 >= 0x17)
  {
    v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v50 | 7) != 0x17)
      v53 = v50 | 7;
    v54 = v53 + 1;
    v52 = operator new(v53 + 1);
    v158[1] = v51;
    v159 = v54 | 0x8000000000000000;
    v158[0] = v52;
    goto LABEL_48;
  }
  HIBYTE(v159) = v50;
  v52 = v158;
  if (v50)
LABEL_48:
    memmove(v52, v49, (size_t)v51);
  *((_BYTE *)v51 + (_QWORD)v52) = 0;
  v55 = (_QWORD *)operator new();
  *v55 = &off_250AE0580;
  v55[1] = a1 + 26;
  sub_23961580C((uint64_t)__p, (uint64_t)v158, (uint64_t)v55);
  strcpy(v186, "\"QCTG}DWNN}PCLI}NKQV");
  sub_2396EFB50((uint64_t)v186, *(int32x4_t *)"\"QCTG}DWNN}PCLI}NKQV", v56, v57, v58);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v156[1] = v62;
    v157 = v65 | 0x8000000000000000;
    v156[0] = v63;
    goto LABEL_56;
  }
  HIBYTE(v157) = v61;
  v63 = v156;
  if (v61)
LABEL_56:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AFFEA8;
  v66[1] = a1 + 29;
  sub_23961580C((uint64_t)__p, (uint64_t)v156, (uint64_t)v66);
  v184[0] = xmmword_239F0DCDE;
  v184[1] = xmmword_239F0DCEE;
  v185 = 0x181502111D0600;
  sub_2396F02A0((unsigned __int8 *)v184, 3.07075531e-188, xmmword_239F0DCEE, v67, v68, v69);
  v71 = v70;
  v72 = strlen(v70);
  if (v72 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v73 = (void *)v72;
  if (v72 >= 0x17)
  {
    v75 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v72 | 7) != 0x17)
      v75 = v72 | 7;
    v76 = v75 + 1;
    v74 = operator new(v75 + 1);
    v154[1] = v73;
    v155 = v76 | 0x8000000000000000;
    v154[0] = v74;
    goto LABEL_64;
  }
  HIBYTE(v155) = v72;
  v74 = v154;
  if (v72)
LABEL_64:
    memmove(v74, v71, (size_t)v73);
  *((_BYTE *)v73 + (_QWORD)v74) = 0;
  v77 = (_QWORD *)operator new();
  *v77 = &off_250AFFE48;
  v77[1] = a1 + 30;
  sub_23961580C((uint64_t)__p, (uint64_t)v154, (uint64_t)v77);
  v183[0] = xmmword_239F0DD06;
  *(_OWORD *)((char *)v183 + 9) = *(__int128 *)((char *)&xmmword_239F0DD06 + 9);
  sub_2396EFC88((uint64_t)v183, *(int32x4_t *)((char *)&xmmword_239F0DD06 + 9), v78, v79, v80);
  v82 = v81;
  v83 = strlen(v81);
  if (v83 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v84 = (void *)v83;
  if (v83 >= 0x17)
  {
    v86 = (v83 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v83 | 7) != 0x17)
      v86 = v83 | 7;
    v87 = v86 + 1;
    v85 = operator new(v86 + 1);
    v152[1] = v84;
    v153 = v87 | 0x8000000000000000;
    v152[0] = v85;
    goto LABEL_72;
  }
  HIBYTE(v153) = v83;
  v85 = v152;
  if (v83)
LABEL_72:
    memmove(v85, v82, (size_t)v84);
  *((_BYTE *)v84 + (_QWORD)v85) = 0;
  v88 = (_QWORD *)operator new();
  *v88 = &off_250AFFEA8;
  v88[1] = (char *)a1 + 117;
  sub_23961580C((uint64_t)__p, (uint64_t)v152, (uint64_t)v88);
  v181 = 0x2426142E3D2A384BLL;
  v182 = 2567727;
  v89 = sub_23958E4C8((uint64_t)&v181);
  v90 = strlen(v89);
  if (v90 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v91 = (void *)v90;
  if (v90 >= 0x17)
  {
    v93 = (v90 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v90 | 7) != 0x17)
      v93 = v90 | 7;
    v94 = v93 + 1;
    v92 = operator new(v93 + 1);
    v150[1] = v91;
    v151 = v94 | 0x8000000000000000;
    v150[0] = v92;
    goto LABEL_80;
  }
  HIBYTE(v151) = v90;
  v92 = v150;
  if (v90)
LABEL_80:
    memmove(v92, v89, (size_t)v91);
  *((_BYTE *)v91 + (_QWORD)v92) = 0;
  v95 = (_QWORD *)operator new();
  *v95 = &off_250AFFEA8;
  v95[1] = a1 + 38;
  sub_23961580C((uint64_t)__p, (uint64_t)v150, (uint64_t)v95);
  v178 = 0x38000E0109080467;
  v180 = 0;
  v179 = 50727697;
  v96 = sub_239510ECC((uint64_t)&v178);
  v97 = strlen(v96);
  if (v97 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v98 = (void *)v97;
  if (v97 >= 0x17)
  {
    v100 = (v97 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v97 | 7) != 0x17)
      v100 = v97 | 7;
    v101 = v100 + 1;
    v99 = operator new(v100 + 1);
    v148[1] = v98;
    v149 = v101 | 0x8000000000000000;
    v148[0] = v99;
    goto LABEL_88;
  }
  HIBYTE(v149) = v97;
  v99 = v148;
  if (v97)
LABEL_88:
    memmove(v99, v96, (size_t)v98);
  *((_BYTE *)v98 + (_QWORD)v99) = 0;
  v102 = (_QWORD *)operator new();
  *v102 = &off_250AF39E0;
  v102[1] = a1 + 3;
  sub_23961580C((uint64_t)__p, (uint64_t)v148, (uint64_t)v102);
  v176 = xmmword_239F0DD5B;
  v177 = 0x6D6C6A706D6273;
  sub_2396F1A4C((uint64_t)&v176, (int32x4_t)xmmword_239F0DD5B, v103, v104, v105);
  v107 = v106;
  v108 = strlen(v106);
  if (v108 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v109 = (void *)v108;
  if (v108 >= 0x17)
  {
    v111 = (v108 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v108 | 7) != 0x17)
      v111 = v108 | 7;
    v112 = v111 + 1;
    v110 = operator new(v111 + 1);
    v146[1] = v109;
    v147 = v112 | 0x8000000000000000;
    v146[0] = v110;
    goto LABEL_96;
  }
  HIBYTE(v147) = v108;
  v110 = v146;
  if (v108)
LABEL_96:
    memmove(v110, v107, (size_t)v109);
  *((_BYTE *)v109 + (_QWORD)v110) = 0;
  v113 = (_QWORD *)operator new();
  *v113 = &off_250AF3A10;
  v113[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v146, (uint64_t)v113);
  v175[0] = xmmword_239F0DD8F;
  *(_OWORD *)((char *)v175 + 13) = *(__int128 *)((char *)&xmmword_239F0DD8F + 13);
  sub_2396EFD48((uint64_t)v175, *(int32x4_t *)((char *)&xmmword_239F0DD8F + 13), v114, v115, v116);
  v118 = v117;
  v119 = strlen(v117);
  if (v119 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v120 = (void *)v119;
  if (v119 >= 0x17)
  {
    v122 = (v119 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v119 | 7) != 0x17)
      v122 = v119 | 7;
    v123 = v122 + 1;
    v121 = operator new(v122 + 1);
    v144[1] = v120;
    v145 = v123 | 0x8000000000000000;
    v144[0] = v121;
    goto LABEL_104;
  }
  HIBYTE(v145) = v119;
  v121 = v144;
  if (v119)
LABEL_104:
    memmove(v121, v118, (size_t)v120);
  *((_BYTE *)v120 + (_QWORD)v121) = 0;
  v124 = (_QWORD *)operator new();
  *v124 = &off_250AF3A40;
  v124[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v144, (uint64_t)v124);
  v174[0] = xmmword_239F0DE27;
  *(_OWORD *)((char *)v174 + 9) = *(__int128 *)((char *)&xmmword_239F0DE27 + 9);
  sub_2396EFC88((uint64_t)v174, *(int32x4_t *)((char *)&xmmword_239F0DE27 + 9), v125, v126, v127);
  v129 = v128;
  v130 = strlen(v128);
  if (v130 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v131 = (void *)v130;
  if (v130 >= 0x17)
  {
    v133 = (v130 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v130 | 7) != 0x17)
      v133 = v130 | 7;
    v134 = v133 + 1;
    v132 = operator new(v133 + 1);
    v142[1] = v131;
    v143 = v134 | 0x8000000000000000;
    v142[0] = v132;
    goto LABEL_112;
  }
  HIBYTE(v143) = v130;
  v132 = v142;
  if (v130)
LABEL_112:
    memmove(v132, v129, (size_t)v131);
  *((_BYTE *)v131 + (_QWORD)v132) = 0;
  v135 = (_QWORD *)operator new();
  *v135 = &off_250AF3A70;
  v135[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v142, (uint64_t)v135);
  if (SHIBYTE(v143) < 0)
  {
    operator delete(v142[0]);
    if ((SHIBYTE(v145) & 0x80000000) == 0)
    {
LABEL_115:
      if ((SHIBYTE(v147) & 0x80000000) == 0)
        goto LABEL_116;
      goto LABEL_141;
    }
  }
  else if ((SHIBYTE(v145) & 0x80000000) == 0)
  {
    goto LABEL_115;
  }
  operator delete(v144[0]);
  if ((SHIBYTE(v147) & 0x80000000) == 0)
  {
LABEL_116:
    if ((SHIBYTE(v149) & 0x80000000) == 0)
      goto LABEL_117;
    goto LABEL_142;
  }
LABEL_141:
  operator delete(v146[0]);
  if ((SHIBYTE(v149) & 0x80000000) == 0)
  {
LABEL_117:
    if ((SHIBYTE(v151) & 0x80000000) == 0)
      goto LABEL_118;
    goto LABEL_143;
  }
LABEL_142:
  operator delete(v148[0]);
  if ((SHIBYTE(v151) & 0x80000000) == 0)
  {
LABEL_118:
    if ((SHIBYTE(v153) & 0x80000000) == 0)
      goto LABEL_119;
    goto LABEL_144;
  }
LABEL_143:
  operator delete(v150[0]);
  if ((SHIBYTE(v153) & 0x80000000) == 0)
  {
LABEL_119:
    if ((SHIBYTE(v155) & 0x80000000) == 0)
      goto LABEL_120;
    goto LABEL_145;
  }
LABEL_144:
  operator delete(v152[0]);
  if ((SHIBYTE(v155) & 0x80000000) == 0)
  {
LABEL_120:
    if ((SHIBYTE(v157) & 0x80000000) == 0)
      goto LABEL_121;
    goto LABEL_146;
  }
LABEL_145:
  operator delete(v154[0]);
  if ((SHIBYTE(v157) & 0x80000000) == 0)
  {
LABEL_121:
    if ((SHIBYTE(v159) & 0x80000000) == 0)
      goto LABEL_122;
    goto LABEL_147;
  }
LABEL_146:
  operator delete(v156[0]);
  if ((SHIBYTE(v159) & 0x80000000) == 0)
  {
LABEL_122:
    if ((SHIBYTE(v161) & 0x80000000) == 0)
      goto LABEL_123;
    goto LABEL_148;
  }
LABEL_147:
  operator delete(v158[0]);
  if ((SHIBYTE(v161) & 0x80000000) == 0)
  {
LABEL_123:
    if ((SHIBYTE(v163) & 0x80000000) == 0)
      goto LABEL_124;
    goto LABEL_149;
  }
LABEL_148:
  operator delete(v160[0]);
  if ((SHIBYTE(v163) & 0x80000000) == 0)
  {
LABEL_124:
    if ((SHIBYTE(v165) & 0x80000000) == 0)
      goto LABEL_125;
    goto LABEL_150;
  }
LABEL_149:
  operator delete(v162[0]);
  if ((SHIBYTE(v165) & 0x80000000) == 0)
  {
LABEL_125:
    if ((SHIBYTE(v167) & 0x80000000) == 0)
      goto LABEL_126;
LABEL_151:
    operator delete(v166[0]);
    if ((SHIBYTE(v169) & 0x80000000) == 0)
      goto LABEL_127;
    goto LABEL_152;
  }
LABEL_150:
  operator delete(v164[0]);
  if (SHIBYTE(v167) < 0)
    goto LABEL_151;
LABEL_126:
  if ((SHIBYTE(v169) & 0x80000000) == 0)
    goto LABEL_127;
LABEL_152:
  operator delete(__dst[0]);
LABEL_127:
  sub_2395902F0((uint64_t)__p, a2);
  v136 = v173;
  if (v173)
  {
    do
    {
      v137 = v136[5];
      if (v137)
        (*(void (**)(uint64_t))(*(_QWORD *)v137 + 8))(v137);
      v136 = (_QWORD *)*v136;
    }
    while (v136);
    v138 = (void **)v173;
    if (v173)
    {
      do
      {
        v141 = (void **)*v138;
        if (*((char *)v138 + 39) < 0)
          operator delete(v138[2]);
        operator delete(v138);
        v138 = v141;
      }
      while (v141);
    }
  }
  v139 = __p[0];
  __p[0] = 0;
  if (v139)
    operator delete(v139);
  return a2;
}

void sub_239ADA3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  sub_2395905C0((uint64_t)&a53);
  _Unwind_Resume(a1);
}

void sub_239ADA668(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADA68C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD6C9C(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239ADA6C8()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239ADA700(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADA724(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD7858(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239ADA760()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239ADA798(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADA7BC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD81F8(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239ADA7F8()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239ADA830(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADA854(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD8F34(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239ADA890()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

_QWORD *sub_239ADA8C4(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  double v19;
  int16x8_t v20;
  const char *v21;
  const char *v22;
  size_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  double v29;
  double v30;
  int16x8_t v31;
  const char *v32;
  const char *v33;
  size_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  double v40;
  int32x4_t v41;
  const char *v42;
  const char *v43;
  size_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  double v50;
  int16x8_t v51;
  const char *v52;
  const char *v53;
  size_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  int8x16_t v60;
  double v61;
  int32x4_t v62;
  const char *v63;
  const char *v64;
  size_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  const char *v71;
  const char *v72;
  size_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  const char *v79;
  const char *v80;
  size_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  int16x8_t v87;
  const char *v88;
  const char *v89;
  size_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  const char *v96;
  const char *v97;
  size_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  double v104;
  int16x8_t v105;
  const char *v106;
  const char *v107;
  size_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  int8x16_t v114;
  double v115;
  int32x4_t v116;
  const char *v117;
  const char *v118;
  size_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  const char *v125;
  size_t v126;
  void *v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  const char *v132;
  const char *v133;
  size_t v134;
  void *v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  int8x16_t v140;
  double v141;
  int32x4_t v142;
  const char *v143;
  const char *v144;
  size_t v145;
  void *v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  int16x8_t v151;
  const char *v152;
  const char *v153;
  size_t v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  const char *v160;
  size_t v161;
  void *v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  double v167;
  int32x4_t v168;
  const char *v169;
  const char *v170;
  size_t v171;
  void *v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  int8x16_t *v177;
  size_t v178;
  void *v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  int8x16_t v184;
  double v185;
  int32x4_t v186;
  const char *v187;
  const char *v188;
  size_t v189;
  void *v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  _QWORD *v195;
  uint64_t v196;
  void **v197;
  void *v198;
  void **v200;
  void *v201[2];
  unint64_t v202;
  void *v203[2];
  unint64_t v204;
  void *v205[2];
  unint64_t v206;
  void *v207[2];
  unint64_t v208;
  void *v209[2];
  unint64_t v210;
  void *v211[2];
  unint64_t v212;
  void *v213[2];
  unint64_t v214;
  void *v215[2];
  unint64_t v216;
  void *v217[2];
  unint64_t v218;
  void *v219[2];
  unint64_t v220;
  void *v221[2];
  unint64_t v222;
  void *v223[2];
  unint64_t v224;
  void *v225[2];
  unint64_t v226;
  void *v227[2];
  unint64_t v228;
  void *v229[2];
  unint64_t v230;
  void *v231[2];
  unint64_t v232;
  void *v233[2];
  unint64_t v234;
  void *v235[2];
  unint64_t v236;
  void *v237[2];
  unint64_t v238;
  void *v239[2];
  unint64_t v240;
  void *__dst[2];
  unint64_t v242;
  int v243;
  int v244;
  void *__p[2];
  void *v246;
  char v247[32];
  __int128 v248;
  __int16 v249;
  _OWORD v250[2];
  char v251;
  uint64_t v252;
  int v253;
  char v254[16];
  char v255[32];
  __int128 v256;
  char v257;
  char v258[16];
  __int128 v259;
  uint64_t v260;
  char v261[48];
  __int128 v262;
  char v263;
  char v264[16];
  uint64_t v265;
  char v266[8];
  __int128 v267;
  char v268[32];
  __int128 v269;
  _OWORD v270[2];
  _OWORD v271[2];
  _OWORD v272[2];
  __int16 v273;
  __int128 v274;
  _OWORD v275[2];
  __int128 v276;
  __int16 v277;
  uint64_t v278;
  char v279[8];
  uint64_t v280;

  v280 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v244 = *(unsigned __int8 *)(a1 + 128);
  v243 = *(unsigned __int8 *)(a1 + 96);
  v278 = 0x2F3529023028335DLL;
  strcpy(v279, "8<9.");
  v5 = sub_239510ECC((uint64_t)&v278);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v242 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v242) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF5A0;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v276 = xmmword_239F0DB58;
  v277 = 62;
  v12 = sub_239A91B18((int8x16_t *)&v276);
  v13 = strlen(v12->i8);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v239[1] = v14;
    v240 = v17 | 0x8000000000000000;
    v239[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v240) = v13;
  v15 = v239;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250ADF570;
  v18[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v239, (uint64_t)v18);
  v274 = xmmword_239F0DB6A;
  v275[0] = *(_OWORD *)dbl_239F0DB7A;
  *(_QWORD *)((char *)v275 + 13) = 0xD0B1603103D06;
  sub_2396F11DC((unsigned __int8 *)&v274, (int16x8_t)xmmword_239F0DB6A, dbl_239F0DB7A[0], v19, v20);
  v22 = v21;
  v23 = strlen(v21);
  if (v23 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v24 = (void *)v23;
  if (v23 >= 0x17)
  {
    v26 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v23 | 7) != 0x17)
      v26 = v23 | 7;
    v27 = v26 + 1;
    v25 = operator new(v26 + 1);
    v237[1] = v24;
    v238 = v27 | 0x8000000000000000;
    v237[0] = v25;
    goto LABEL_24;
  }
  HIBYTE(v238) = v23;
  v25 = v237;
  if (v23)
LABEL_24:
    memmove(v25, v22, (size_t)v24);
  *((_BYTE *)v24 + (_QWORD)v25) = 0;
  v28 = (_QWORD *)operator new();
  *v28 = &off_250ADF570;
  v28[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v237, (uint64_t)v28);
  v272[0] = xmmword_239F0DB8F;
  v272[1] = *(_OWORD *)dbl_239F0DB9F;
  v273 = 123;
  sub_2396F0120((unsigned __int8 *)v272, (int16x8_t)xmmword_239F0DB8F, dbl_239F0DB9F[0], v29, v30, v31);
  v33 = v32;
  v34 = strlen(v32);
  if (v34 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v35 = (void *)v34;
  if (v34 >= 0x17)
  {
    v37 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v34 | 7) != 0x17)
      v37 = v34 | 7;
    v38 = v37 + 1;
    v36 = operator new(v37 + 1);
    v235[1] = v35;
    v236 = v38 | 0x8000000000000000;
    v235[0] = v36;
    goto LABEL_32;
  }
  HIBYTE(v236) = v34;
  v36 = v235;
  if (v34)
LABEL_32:
    memmove(v36, v33, (size_t)v35);
  *((_BYTE *)v35 + (_QWORD)v36) = 0;
  v39 = (_QWORD *)operator new();
  *v39 = &off_250AFFEA8;
  v39[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v235, (uint64_t)v39);
  v271[0] = xmmword_239F0DBB1;
  v271[1] = xmmword_239F0DBC1;
  sub_2396F06F0((uint64_t)v271, (int32x4_t)xmmword_239F0DBB1, xmmword_239F0DBC1, v40, v41);
  v43 = v42;
  v44 = strlen(v42);
  if (v44 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v45 = (void *)v44;
  if (v44 >= 0x17)
  {
    v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v44 | 7) != 0x17)
      v47 = v44 | 7;
    v48 = v47 + 1;
    v46 = operator new(v47 + 1);
    v233[1] = v45;
    v234 = v48 | 0x8000000000000000;
    v233[0] = v46;
    goto LABEL_40;
  }
  HIBYTE(v234) = v44;
  v46 = v233;
  if (v44)
LABEL_40:
    memmove(v46, v43, (size_t)v45);
  *((_BYTE *)v45 + (_QWORD)v46) = 0;
  v49 = (_QWORD *)operator new();
  *v49 = &off_250AFFEA8;
  v49[1] = a1 + 25;
  sub_23961580C((uint64_t)__p, (uint64_t)v233, (uint64_t)v49);
  v269 = xmmword_239F0DBD1;
  v270[0] = *(_OWORD *)dbl_239F0DBE1;
  *(_DWORD *)((char *)v270 + 15) = 199172;
  sub_2396F0060((unsigned __int8 *)&v269, (int16x8_t)xmmword_239F0DBD1, dbl_239F0DBE1[0], v50, v51);
  v53 = v52;
  v54 = strlen(v52);
  if (v54 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v55 = (void *)v54;
  if (v54 >= 0x17)
  {
    v57 = (v54 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v54 | 7) != 0x17)
      v57 = v54 | 7;
    v58 = v57 + 1;
    v56 = operator new(v57 + 1);
    v231[1] = v55;
    v232 = v58 | 0x8000000000000000;
    v231[0] = v56;
    goto LABEL_48;
  }
  HIBYTE(v232) = v54;
  v56 = v231;
  if (v54)
LABEL_48:
    memmove(v56, v53, (size_t)v55);
  *((_BYTE *)v55 + (_QWORD)v56) = 0;
  v59 = (_QWORD *)operator new();
  *v59 = &off_250AFFEA8;
  v59[1] = a1 + 26;
  sub_23961580C((uint64_t)__p, (uint64_t)v231, (uint64_t)v59);
  strcpy(v268, "(][MwEI[CMLwG]\\wNMI\\]ZM[");
  sub_2396EFC88((uint64_t)v268, *(int32x4_t *)"MLwG]\\wNMI\\]ZM[", v60, v61, v62);
  v64 = v63;
  v65 = strlen(v63);
  if (v65 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v66 = (void *)v65;
  if (v65 >= 0x17)
  {
    v68 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v65 | 7) != 0x17)
      v68 = v65 | 7;
    v69 = v68 + 1;
    v67 = operator new(v68 + 1);
    v229[1] = v66;
    v230 = v69 | 0x8000000000000000;
    v229[0] = v67;
    goto LABEL_56;
  }
  HIBYTE(v230) = v65;
  v67 = v229;
  if (v65)
LABEL_56:
    memmove(v67, v64, (size_t)v66);
  *((_BYTE *)v66 + (_QWORD)v67) = 0;
  v70 = (_QWORD *)operator new();
  *v70 = &off_250AFFEA8;
  v70[1] = a1 + 27;
  sub_23961580C((uint64_t)__p, (uint64_t)v229, (uint64_t)v70);
  v267 = xmmword_239F0C070;
  sub_23950F8E4((uint64_t)&v267);
  v72 = v71;
  v73 = strlen(v71);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = (void *)v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    v227[1] = v74;
    v228 = v77 | 0x8000000000000000;
    v227[0] = v75;
    goto LABEL_64;
  }
  HIBYTE(v228) = v73;
  v75 = v227;
  if (v73)
LABEL_64:
    memmove(v75, v72, (size_t)v74);
  *((_BYTE *)v74 + (_QWORD)v75) = 0;
  v78 = (_QWORD *)operator new();
  *v78 = &off_250AE0580;
  v78[1] = a1 + 80;
  sub_23961580C((uint64_t)__p, (uint64_t)v227, (uint64_t)v78);
  v265 = 0x62734F7676797410;
  strcpy(v266, "ydubyq");
  sub_23958E5E0((uint64_t)&v265);
  v80 = v79;
  v81 = strlen(v79);
  if (v81 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v82 = (void *)v81;
  if (v81 >= 0x17)
  {
    v84 = (v81 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v81 | 7) != 0x17)
      v84 = v81 | 7;
    v85 = v84 + 1;
    v83 = operator new(v84 + 1);
    v225[1] = v82;
    v226 = v85 | 0x8000000000000000;
    v225[0] = v83;
    goto LABEL_72;
  }
  HIBYTE(v226) = v81;
  v83 = v225;
  if (v81)
LABEL_72:
    memmove(v83, v80, (size_t)v82);
  *((_BYTE *)v82 + (_QWORD)v83) = 0;
  v86 = (_QWORD *)operator new();
  *v86 = &off_250AE0580;
  v86[1] = a1 + 84;
  sub_23961580C((uint64_t)__p, (uint64_t)v225, (uint64_t)v86);
  strcpy(v264, ":WONO[VeYR_YQ");
  sub_23971A32C((uint64_t)v264, v87);
  v89 = v88;
  v90 = strlen(v88);
  if (v90 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v91 = (void *)v90;
  if (v90 >= 0x17)
  {
    v93 = (v90 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v90 | 7) != 0x17)
      v93 = v90 | 7;
    v94 = v93 + 1;
    v92 = operator new(v93 + 1);
    v223[1] = v91;
    v224 = v94 | 0x8000000000000000;
    v223[0] = v92;
    goto LABEL_80;
  }
  HIBYTE(v224) = v90;
  v92 = v223;
  if (v90)
LABEL_80:
    memmove(v92, v89, (size_t)v91);
  *((_BYTE *)v91 + (_QWORD)v92) = 0;
  v95 = (_QWORD *)operator new();
  *v95 = &off_250AFFEA8;
  v95[1] = a1 + 88;
  sub_23961580C((uint64_t)__p, (uint64_t)v223, (uint64_t)v95);
  v262 = xmmword_239F0DC0D;
  v263 = 0;
  sub_2396EFA24((uint64_t)&v262);
  v97 = v96;
  v98 = strlen(v96);
  if (v98 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v99 = (void *)v98;
  if (v98 >= 0x17)
  {
    v101 = (v98 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v98 | 7) != 0x17)
      v101 = v98 | 7;
    v102 = v101 + 1;
    v100 = operator new(v101 + 1);
    v221[1] = v99;
    v222 = v102 | 0x8000000000000000;
    v221[0] = v100;
    goto LABEL_88;
  }
  HIBYTE(v222) = v98;
  v100 = v221;
  if (v98)
LABEL_88:
    memmove(v100, v97, (size_t)v99);
  *((_BYTE *)v99 + (_QWORD)v100) = 0;
  v103 = (_QWORD *)operator new();
  *v103 = &off_250ADF240;
  v103[1] = &v243;
  sub_23961580C((uint64_t)__p, (uint64_t)v221, (uint64_t)v103);
  strcpy(v261, "/G@ZHGp[]NA\\I@]BpAZBp_JNDpLCZ\\[J]\\");
  sub_2396F0060((unsigned __int8 *)v261, *(int16x8_t *)"/G@ZHGp[]NA\\I@]BpAZBp_JNDpLCZ\\[J]\\", *(double *)"pAZBp_JNDpLCZ\\[J]\\", v104, v105);
  v107 = v106;
  v108 = strlen(v106);
  if (v108 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v109 = (void *)v108;
  if (v108 >= 0x17)
  {
    v111 = (v108 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v108 | 7) != 0x17)
      v111 = v108 | 7;
    v112 = v111 + 1;
    v110 = operator new(v111 + 1);
    v219[1] = v109;
    v220 = v112 | 0x8000000000000000;
    v219[0] = v110;
    goto LABEL_96;
  }
  HIBYTE(v220) = v108;
  v110 = v219;
  if (v108)
LABEL_96:
    memmove(v110, v107, (size_t)v109);
  *((_BYTE *)v109 + (_QWORD)v110) = 0;
  v113 = (_QWORD *)operator new();
  *v113 = &off_250AFFE48;
  v113[1] = a1 + 120;
  sub_23961580C((uint64_t)__p, (uint64_t)v219, (uint64_t)v113);
  v259 = xmmword_239F0DC41;
  v260 = 0x6A7C6B6C6D787CLL;
  sub_2396F1A4C((uint64_t)&v259, (int32x4_t)xmmword_239F0DC41, v114, v115, v116);
  v118 = v117;
  v119 = strlen(v117);
  if (v119 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v120 = (void *)v119;
  if (v119 >= 0x17)
  {
    v122 = (v119 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v119 | 7) != 0x17)
      v122 = v119 | 7;
    v123 = v122 + 1;
    v121 = operator new(v122 + 1);
    v217[1] = v120;
    v218 = v123 | 0x8000000000000000;
    v217[0] = v121;
    goto LABEL_104;
  }
  HIBYTE(v218) = v119;
  v121 = v217;
  if (v119)
LABEL_104:
    memmove(v121, v118, (size_t)v120);
  *((_BYTE *)v120 + (_QWORD)v121) = 0;
  v124 = (_QWORD *)operator new();
  *v124 = &off_250ADF750;
  v124[1] = a1 + 92;
  sub_23961580C((uint64_t)__p, (uint64_t)v217, (uint64_t)v124);
  strcpy(v258, "5RE@j\\QF");
  v125 = sub_239513718(v258);
  v126 = strlen(v125);
  if (v126 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v127 = (void *)v126;
  if (v126 >= 0x17)
  {
    v129 = (v126 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v126 | 7) != 0x17)
      v129 = v126 | 7;
    v130 = v129 + 1;
    v128 = operator new(v129 + 1);
    v215[1] = v127;
    v216 = v130 | 0x8000000000000000;
    v215[0] = v128;
    goto LABEL_112;
  }
  HIBYTE(v216) = v126;
  v128 = v215;
  if (v126)
LABEL_112:
    memmove(v128, v125, (size_t)v127);
  *((_BYTE *)v127 + (_QWORD)v128) = 0;
  v131 = (_QWORD *)operator new();
  *v131 = &off_250ADF480;
  v131[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v215, (uint64_t)v131);
  v256 = xmmword_239F0DC59;
  v257 = 0;
  sub_2396EFA24((uint64_t)&v256);
  v133 = v132;
  v134 = strlen(v132);
  if (v134 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v135 = (void *)v134;
  if (v134 >= 0x17)
  {
    v137 = (v134 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v134 | 7) != 0x17)
      v137 = v134 | 7;
    v138 = v137 + 1;
    v136 = operator new(v137 + 1);
    v213[1] = v135;
    v214 = v138 | 0x8000000000000000;
    v213[0] = v136;
    goto LABEL_120;
  }
  HIBYTE(v214) = v134;
  v136 = v213;
  if (v134)
LABEL_120:
    memmove(v136, v133, (size_t)v135);
  *((_BYTE *)v135 + (_QWORD)v136) = 0;
  v139 = (_QWORD *)operator new();
  *v139 = &off_250AFFEA8;
  v139[1] = a1 + 97;
  sub_23961580C((uint64_t)__p, (uint64_t)v213, (uint64_t)v139);
  strcpy(v255, "0]Y^o_FUB\\Q@oBQDY_");
  sub_23958E450((uint64_t)v255, *(int32x4_t *)"0]Y^o_FUB\\Q@oBQDY_", v140, v141, v142);
  v144 = v143;
  v145 = strlen(v143);
  if (v145 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v146 = (void *)v145;
  if (v145 >= 0x17)
  {
    v148 = (v145 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v145 | 7) != 0x17)
      v148 = v145 | 7;
    v149 = v148 + 1;
    v147 = operator new(v148 + 1);
    v211[1] = v146;
    v212 = v149 | 0x8000000000000000;
    v211[0] = v147;
    goto LABEL_128;
  }
  HIBYTE(v212) = v145;
  v147 = v211;
  if (v145)
LABEL_128:
    memmove(v147, v144, (size_t)v146);
  *((_BYTE *)v146 + (_QWORD)v147) = 0;
  v150 = (_QWORD *)operator new();
  *v150 = &off_250ADF570;
  v150[1] = a1 + 112;
  sub_23961580C((uint64_t)__p, (uint64_t)v211, (uint64_t)v150);
  strcpy(v254, "2_SFQZW@mFKBW");
  sub_23971A32C((uint64_t)v254, v151);
  v153 = v152;
  v154 = strlen(v152);
  if (v154 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v155 = (void *)v154;
  if (v154 >= 0x17)
  {
    v157 = (v154 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v154 | 7) != 0x17)
      v157 = v154 | 7;
    v158 = v157 + 1;
    v156 = operator new(v157 + 1);
    v209[1] = v155;
    v210 = v158 | 0x8000000000000000;
    v209[0] = v156;
    goto LABEL_136;
  }
  HIBYTE(v210) = v154;
  v156 = v209;
  if (v154)
LABEL_136:
    memmove(v156, v153, (size_t)v155);
  *((_BYTE *)v155 + (_QWORD)v156) = 0;
  v159 = (_QWORD *)operator new();
  *v159 = &off_250ADF240;
  v159[1] = &v244;
  sub_23961580C((uint64_t)__p, (uint64_t)v209, (uint64_t)v159);
  v252 = 0xE2218151E1C1E7DLL;
  v253 = 1574676;
  v160 = sub_23958E4C8((uint64_t)&v252);
  v161 = strlen(v160);
  if (v161 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v162 = (void *)v161;
  if (v161 >= 0x17)
  {
    v164 = (v161 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v161 | 7) != 0x17)
      v164 = v161 | 7;
    v165 = v164 + 1;
    v163 = operator new(v164 + 1);
    v207[1] = v162;
    v208 = v165 | 0x8000000000000000;
    v207[0] = v163;
    goto LABEL_144;
  }
  HIBYTE(v208) = v161;
  v163 = v207;
  if (v161)
LABEL_144:
    memmove(v163, v160, (size_t)v162);
  *((_BYTE *)v162 + (_QWORD)v163) = 0;
  v166 = (_QWORD *)operator new();
  *v166 = &off_250ADF5A0;
  v166[1] = a1 + 332;
  sub_23961580C((uint64_t)__p, (uint64_t)v207, (uint64_t)v166);
  v250[0] = xmmword_239F0DC7D;
  v250[1] = xmmword_239F0DC8D;
  v251 = 0;
  sub_2396EFE38((uint64_t)v250, (int32x4_t)xmmword_239F0DC7D, xmmword_239F0DC8D, v167, v168);
  v170 = v169;
  v171 = strlen(v169);
  if (v171 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v172 = (void *)v171;
  if (v171 >= 0x17)
  {
    v174 = (v171 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v171 | 7) != 0x17)
      v174 = v171 | 7;
    v175 = v174 + 1;
    v173 = operator new(v174 + 1);
    v205[1] = v172;
    v206 = v175 | 0x8000000000000000;
    v205[0] = v173;
    goto LABEL_152;
  }
  HIBYTE(v206) = v171;
  v173 = v205;
  if (v171)
LABEL_152:
    memmove(v173, v170, (size_t)v172);
  *((_BYTE *)v172 + (_QWORD)v173) = 0;
  v176 = (_QWORD *)operator new();
  *v176 = &off_250AE0580;
  v176[1] = a1 + 132;
  sub_23961580C((uint64_t)__p, (uint64_t)v205, (uint64_t)v176);
  v248 = xmmword_239F0DE40;
  v249 = 4;
  v177 = sub_239A91B18((int8x16_t *)&v248);
  v178 = strlen(v177->i8);
  if (v178 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v179 = (void *)v178;
  if (v178 >= 0x17)
  {
    v181 = (v178 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v178 | 7) != 0x17)
      v181 = v178 | 7;
    v182 = v181 + 1;
    v180 = operator new(v181 + 1);
    v203[1] = v179;
    v204 = v182 | 0x8000000000000000;
    v203[0] = v180;
    goto LABEL_160;
  }
  HIBYTE(v204) = v178;
  v180 = v203;
  if (v178)
LABEL_160:
    memmove(v180, v177, (size_t)v179);
  *((_BYTE *)v179 + (_QWORD)v180) = 0;
  v183 = (_QWORD *)operator new();
  *v183 = &off_250AF39B0;
  v183[1] = a1 + 136;
  sub_23961580C((uint64_t)__p, (uint64_t)v203, (uint64_t)v183);
  strcpy(v247, "3P\\]UZTlTFZWVWl^RGP[Z]T");
  sub_2396F1A4C((uint64_t)v247, *(int32x4_t *)"3P\\]UZTlTFZWVWl^RGP[Z]T", v184, v185, v186);
  v188 = v187;
  v189 = strlen(v187);
  if (v189 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v190 = (void *)v189;
  if (v189 >= 0x17)
  {
    v192 = (v189 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v189 | 7) != 0x17)
      v192 = v189 | 7;
    v193 = v192 + 1;
    v191 = operator new(v192 + 1);
    v201[1] = v190;
    v202 = v193 | 0x8000000000000000;
    v201[0] = v191;
    goto LABEL_168;
  }
  HIBYTE(v202) = v189;
  v191 = v201;
  if (v189)
LABEL_168:
    memmove(v191, v188, (size_t)v190);
  *((_BYTE *)v190 + (_QWORD)v191) = 0;
  v194 = (_QWORD *)operator new();
  *v194 = &off_250AF3AA0;
  v194[1] = a1 + 296;
  sub_23961580C((uint64_t)__p, (uint64_t)v201, (uint64_t)v194);
  if (SHIBYTE(v202) < 0)
  {
    operator delete(v201[0]);
    if ((SHIBYTE(v204) & 0x80000000) == 0)
    {
LABEL_171:
      if ((SHIBYTE(v206) & 0x80000000) == 0)
        goto LABEL_172;
      goto LABEL_204;
    }
  }
  else if ((SHIBYTE(v204) & 0x80000000) == 0)
  {
    goto LABEL_171;
  }
  operator delete(v203[0]);
  if ((SHIBYTE(v206) & 0x80000000) == 0)
  {
LABEL_172:
    if ((SHIBYTE(v208) & 0x80000000) == 0)
      goto LABEL_173;
    goto LABEL_205;
  }
LABEL_204:
  operator delete(v205[0]);
  if ((SHIBYTE(v208) & 0x80000000) == 0)
  {
LABEL_173:
    if ((SHIBYTE(v210) & 0x80000000) == 0)
      goto LABEL_174;
    goto LABEL_206;
  }
LABEL_205:
  operator delete(v207[0]);
  if ((SHIBYTE(v210) & 0x80000000) == 0)
  {
LABEL_174:
    if ((SHIBYTE(v212) & 0x80000000) == 0)
      goto LABEL_175;
    goto LABEL_207;
  }
LABEL_206:
  operator delete(v209[0]);
  if ((SHIBYTE(v212) & 0x80000000) == 0)
  {
LABEL_175:
    if ((SHIBYTE(v214) & 0x80000000) == 0)
      goto LABEL_176;
    goto LABEL_208;
  }
LABEL_207:
  operator delete(v211[0]);
  if ((SHIBYTE(v214) & 0x80000000) == 0)
  {
LABEL_176:
    if ((SHIBYTE(v216) & 0x80000000) == 0)
      goto LABEL_177;
    goto LABEL_209;
  }
LABEL_208:
  operator delete(v213[0]);
  if ((SHIBYTE(v216) & 0x80000000) == 0)
  {
LABEL_177:
    if ((SHIBYTE(v218) & 0x80000000) == 0)
      goto LABEL_178;
    goto LABEL_210;
  }
LABEL_209:
  operator delete(v215[0]);
  if ((SHIBYTE(v218) & 0x80000000) == 0)
  {
LABEL_178:
    if ((SHIBYTE(v220) & 0x80000000) == 0)
      goto LABEL_179;
    goto LABEL_211;
  }
LABEL_210:
  operator delete(v217[0]);
  if ((SHIBYTE(v220) & 0x80000000) == 0)
  {
LABEL_179:
    if ((SHIBYTE(v222) & 0x80000000) == 0)
      goto LABEL_180;
    goto LABEL_212;
  }
LABEL_211:
  operator delete(v219[0]);
  if ((SHIBYTE(v222) & 0x80000000) == 0)
  {
LABEL_180:
    if ((SHIBYTE(v224) & 0x80000000) == 0)
      goto LABEL_181;
    goto LABEL_213;
  }
LABEL_212:
  operator delete(v221[0]);
  if ((SHIBYTE(v224) & 0x80000000) == 0)
  {
LABEL_181:
    if ((SHIBYTE(v226) & 0x80000000) == 0)
      goto LABEL_182;
    goto LABEL_214;
  }
LABEL_213:
  operator delete(v223[0]);
  if ((SHIBYTE(v226) & 0x80000000) == 0)
  {
LABEL_182:
    if ((SHIBYTE(v228) & 0x80000000) == 0)
      goto LABEL_183;
    goto LABEL_215;
  }
LABEL_214:
  operator delete(v225[0]);
  if ((SHIBYTE(v228) & 0x80000000) == 0)
  {
LABEL_183:
    if ((SHIBYTE(v230) & 0x80000000) == 0)
      goto LABEL_184;
    goto LABEL_216;
  }
LABEL_215:
  operator delete(v227[0]);
  if ((SHIBYTE(v230) & 0x80000000) == 0)
  {
LABEL_184:
    if ((SHIBYTE(v232) & 0x80000000) == 0)
      goto LABEL_185;
    goto LABEL_217;
  }
LABEL_216:
  operator delete(v229[0]);
  if ((SHIBYTE(v232) & 0x80000000) == 0)
  {
LABEL_185:
    if ((SHIBYTE(v234) & 0x80000000) == 0)
      goto LABEL_186;
    goto LABEL_218;
  }
LABEL_217:
  operator delete(v231[0]);
  if ((SHIBYTE(v234) & 0x80000000) == 0)
  {
LABEL_186:
    if ((SHIBYTE(v236) & 0x80000000) == 0)
      goto LABEL_187;
    goto LABEL_219;
  }
LABEL_218:
  operator delete(v233[0]);
  if ((SHIBYTE(v236) & 0x80000000) == 0)
  {
LABEL_187:
    if ((SHIBYTE(v238) & 0x80000000) == 0)
      goto LABEL_188;
    goto LABEL_220;
  }
LABEL_219:
  operator delete(v235[0]);
  if ((SHIBYTE(v238) & 0x80000000) == 0)
  {
LABEL_188:
    if ((SHIBYTE(v240) & 0x80000000) == 0)
      goto LABEL_189;
LABEL_221:
    operator delete(v239[0]);
    if ((SHIBYTE(v242) & 0x80000000) == 0)
      goto LABEL_190;
    goto LABEL_222;
  }
LABEL_220:
  operator delete(v237[0]);
  if (SHIBYTE(v240) < 0)
    goto LABEL_221;
LABEL_189:
  if ((SHIBYTE(v242) & 0x80000000) == 0)
    goto LABEL_190;
LABEL_222:
  operator delete(__dst[0]);
LABEL_190:
  sub_2395902F0((uint64_t)__p, a2);
  v195 = v246;
  if (v246)
  {
    do
    {
      v196 = v195[5];
      if (v196)
        (*(void (**)(uint64_t))(*(_QWORD *)v196 + 8))(v196);
      v195 = (_QWORD *)*v195;
    }
    while (v195);
    v197 = (void **)v246;
    if (v246)
    {
      do
      {
        v200 = (void **)*v197;
        if (*((char *)v197 + 39) < 0)
          operator delete(v197[2]);
        operator delete(v197);
        v197 = v200;
      }
      while (v200);
    }
  }
  v198 = __p[0];
  __p[0] = 0;
  if (v198)
    operator delete(v198);
  return a2;
}

void sub_239ADBD2C(_Unwind_Exception *a1)
{
  sub_2395905C0((uint64_t)&STACK[0x200]);
  _Unwind_Resume(a1);
}

void sub_239ADC0D8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADC0FC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD4C2C(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239ADC138()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239ADC170(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADC194(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD95E8(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239ADC1D0()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239ADC208(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADC22C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ADE92C(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239ADC268(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  const char *v16;
  size_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  double v23;
  int32x4_t v24;
  const char *v25;
  const char *v26;
  size_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  const char *v33;
  const char *v34;
  size_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int8x16_t v41;
  double v42;
  int32x4_t v43;
  const char *v44;
  const char *v45;
  size_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int8x16_t v52;
  double v53;
  int32x4_t v54;
  const char *v55;
  const char *v56;
  size_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  int8x16_t v63;
  double v64;
  int32x4_t v65;
  const char *v66;
  const char *v67;
  size_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  int8x16_t *v74;
  size_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  int8x16_t v81;
  double v82;
  int32x4_t v83;
  const char *v84;
  const char *v85;
  size_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  int8x16_t v92;
  double v93;
  int32x4_t v94;
  const char *v95;
  const char *v96;
  size_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  int8x16_t v103;
  double v104;
  int32x4_t v105;
  const char *v106;
  const char *v107;
  size_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  int8x16_t v114;
  double v115;
  int32x4_t v116;
  const char *v117;
  const char *v118;
  size_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  int8x16_t v125;
  double v126;
  int32x4_t v127;
  const char *v128;
  const char *v129;
  size_t v130;
  void *v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  void **v138;
  void *v139;
  void **v141;
  void *v142[2];
  unint64_t v143;
  void *v144[2];
  unint64_t v145;
  void *v146[2];
  unint64_t v147;
  void *v148[2];
  unint64_t v149;
  void *v150[2];
  unint64_t v151;
  void *v152[2];
  unint64_t v153;
  void *v154[2];
  unint64_t v155;
  void *v156[2];
  unint64_t v157;
  void *v158[2];
  unint64_t v159;
  void *v160[2];
  unint64_t v161;
  void *v162[2];
  unint64_t v163;
  void *v164[2];
  unint64_t v165;
  void *__dst[2];
  unint64_t v167;
  void *__p[2];
  void *v169;
  char v170[32];
  char v171[32];
  _OWORD v172[2];
  unsigned __int8 v173[32];
  __int128 v174;
  int v175;
  int8x16_t v176[2];
  _OWORD v177[2];
  _OWORD v178[2];
  _OWORD v179[2];
  __int128 v180;
  char v181;
  char v182[32];
  uint64_t v183;
  int v184;
  __int128 v185;
  uint64_t v186;
  uint64_t v187;

  v187 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v185 = xmmword_239F0E0F8;
  v186 = 0x7C6B7A7D6F6851;
  sub_2396F1A4C((uint64_t)&v185, (int32x4_t)xmmword_239F0E0F8, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v167 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v167) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AE0220;
  v15[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v183 = 0x787076427068731DLL;
  v184 = 7238524;
  v16 = sub_23958E4C8((uint64_t)&v183);
  v17 = strlen(v16);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v18 = (void *)v17;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    v19 = operator new(v20 + 1);
    v164[1] = v18;
    v165 = v21 | 0x8000000000000000;
    v164[0] = v19;
    goto LABEL_16;
  }
  HIBYTE(v165) = v17;
  v19 = v164;
  if (v17)
LABEL_16:
    memmove(v19, v16, (size_t)v18);
  *((_BYTE *)v18 + (_QWORD)v19) = 0;
  v22 = (_QWORD *)operator new();
  *v22 = &off_250ADF420;
  v22[1] = v4 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v164, (uint64_t)v22);
  strcpy(v182, "7SBEVC^XYh\\ZRVYDh^Y^C^V[^MVC^XY");
  sub_2396F06F0((uint64_t)v182, *(int32x4_t *)"7SBEVC^XYh\\ZRVYDh^Y^C^V[^MVC^XY", *(int8x16_t *)"h^Y^C^V[^MVC^XY", v23, v24);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = (void *)v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = operator new(v30 + 1);
    v162[1] = v28;
    v163 = v31 | 0x8000000000000000;
    v162[0] = v29;
    goto LABEL_24;
  }
  HIBYTE(v163) = v27;
  v29 = v162;
  if (v27)
LABEL_24:
    memmove(v29, v26, (size_t)v28);
  *((_BYTE *)v28 + (_QWORD)v29) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250AE0670;
  v32[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v162, (uint64_t)v32);
  v180 = xmmword_239F0E130;
  v181 = 0;
  sub_2396EFA24((uint64_t)&v180);
  v34 = v33;
  v35 = strlen(v33);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v36 = (void *)v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = operator new(v38 + 1);
    v160[1] = v36;
    v161 = v39 | 0x8000000000000000;
    v160[0] = v37;
    goto LABEL_32;
  }
  HIBYTE(v161) = v35;
  v37 = v160;
  if (v35)
LABEL_32:
    memmove(v37, v34, (size_t)v36);
  *((_BYTE *)v36 + (_QWORD)v37) = 0;
  v40 = (_QWORD *)operator new();
  *v40 = &off_250AE0670;
  v40[1] = v4 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v160, (uint64_t)v40);
  v179[0] = xmmword_239F0E141;
  *(_QWORD *)((char *)v179 + 15) = 0x332E2F29342132;
  sub_2396EFBE0((uint64_t)v179, (int32x4_t)xmmword_239F0E141, v41, v42, v43);
  v45 = v44;
  v46 = strlen(v44);
  if (v46 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v47 = (void *)v46;
  if (v46 >= 0x17)
  {
    v49 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v46 | 7) != 0x17)
      v49 = v46 | 7;
    v50 = v49 + 1;
    v48 = operator new(v49 + 1);
    v158[1] = v47;
    v159 = v50 | 0x8000000000000000;
    v158[0] = v48;
    goto LABEL_40;
  }
  HIBYTE(v159) = v46;
  v48 = v158;
  if (v46)
LABEL_40:
    memmove(v48, v45, (size_t)v47);
  *((_BYTE *)v47 + (_QWORD)v48) = 0;
  v51 = (_QWORD *)operator new();
  *v51 = &off_250AE0670;
  v51[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v158, (uint64_t)v51);
  v178[0] = xmmword_239F0E158;
  *(_OWORD *)((char *)v178 + 11) = *(__int128 *)((char *)&xmmword_239F0E158 + 11);
  sub_2396F1974((uint64_t)v178, *(int32x4_t *)((char *)&xmmword_239F0E158 + 11), v52, v53, v54);
  v56 = v55;
  v57 = strlen(v55);
  if (v57 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v58 = (void *)v57;
  if (v57 >= 0x17)
  {
    v60 = (v57 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v57 | 7) != 0x17)
      v60 = v57 | 7;
    v61 = v60 + 1;
    v59 = operator new(v60 + 1);
    v156[1] = v58;
    v157 = v61 | 0x8000000000000000;
    v156[0] = v59;
    goto LABEL_48;
  }
  HIBYTE(v157) = v57;
  v59 = v156;
  if (v57)
LABEL_48:
    memmove(v59, v56, (size_t)v58);
  *((_BYTE *)v58 + (_QWORD)v59) = 0;
  v62 = (_QWORD *)operator new();
  *v62 = &off_250ADF360;
  v62[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v156, (uint64_t)v62);
  v177[0] = xmmword_239F0E173;
  *(_OWORD *)((char *)v177 + 9) = *(__int128 *)((char *)&xmmword_239F0E173 + 9);
  sub_2396EFC88((uint64_t)v177, *(int32x4_t *)((char *)&xmmword_239F0E173 + 9), v63, v64, v65);
  v67 = v66;
  v68 = strlen(v66);
  if (v68 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v69 = (void *)v68;
  if (v68 >= 0x17)
  {
    v71 = (v68 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v68 | 7) != 0x17)
      v71 = v68 | 7;
    v72 = v71 + 1;
    v70 = operator new(v71 + 1);
    v154[1] = v69;
    v155 = v72 | 0x8000000000000000;
    v154[0] = v70;
    goto LABEL_56;
  }
  HIBYTE(v155) = v68;
  v70 = v154;
  if (v68)
LABEL_56:
    memmove(v70, v67, (size_t)v69);
  *((_BYTE *)v69 + (_QWORD)v70) = 0;
  v73 = (_QWORD *)operator new();
  *v73 = &off_250ADF360;
  v73[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v154, (uint64_t)v73);
  strcpy(v176[0].i8, "!SDQNSU~QDS~HL@FD");
  v74 = sub_239A91B18(v176);
  v75 = strlen(v74->i8);
  if (v75 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v76 = (void *)v75;
  if (v75 >= 0x17)
  {
    v78 = (v75 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v75 | 7) != 0x17)
      v78 = v75 | 7;
    v79 = v78 + 1;
    v77 = operator new(v78 + 1);
    v152[1] = v76;
    v153 = v79 | 0x8000000000000000;
    v152[0] = v77;
    goto LABEL_64;
  }
  HIBYTE(v153) = v75;
  v77 = v152;
  if (v75)
LABEL_64:
    memmove(v77, v74, (size_t)v76);
  *((_BYTE *)v76 + (_QWORD)v77) = 0;
  v80 = (_QWORD *)operator new();
  *v80 = &off_250AF3B60;
  v80[1] = v4 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v152, (uint64_t)v80);
  v174 = xmmword_239F0E1F8;
  v175 = 2240312;
  sub_23958E55C((uint64_t)&v174, (int32x4_t)xmmword_239F0E1F8, v81, v82, v83);
  v85 = v84;
  v86 = strlen(v84);
  if (v86 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v87 = (void *)v86;
  if (v86 >= 0x17)
  {
    v89 = (v86 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v86 | 7) != 0x17)
      v89 = v86 | 7;
    v90 = v89 + 1;
    v88 = operator new(v89 + 1);
    v150[1] = v87;
    v151 = v90 | 0x8000000000000000;
    v150[0] = v88;
    goto LABEL_72;
  }
  HIBYTE(v151) = v86;
  v88 = v150;
  if (v86)
LABEL_72:
    memmove(v88, v85, (size_t)v87);
  *((_BYTE *)v87 + (_QWORD)v88) = 0;
  v91 = (_QWORD *)operator new();
  *v91 = &off_250AE0670;
  v91[1] = v4 + 80;
  sub_23961580C((uint64_t)__p, (uint64_t)v150, (uint64_t)v91);
  *(_OWORD *)v173 = xmmword_239F0E20C;
  *(_OWORD *)&v173[10] = *(__int128 *)((char *)&xmmword_239F0E20C + 10);
  sub_239A93C04(v173, *(int32x4_t *)((char *)&xmmword_239F0E20C + 10), v92, v93, v94);
  v96 = v95;
  v97 = strlen(v95);
  if (v97 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v98 = (void *)v97;
  if (v97 >= 0x17)
  {
    v100 = (v97 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v97 | 7) != 0x17)
      v100 = v97 | 7;
    v101 = v100 + 1;
    v99 = operator new(v100 + 1);
    v148[1] = v98;
    v149 = v101 | 0x8000000000000000;
    v148[0] = v99;
    goto LABEL_80;
  }
  HIBYTE(v149) = v97;
  v99 = v148;
  if (v97)
LABEL_80:
    memmove(v99, v96, (size_t)v98);
  *((_BYTE *)v98 + (_QWORD)v99) = 0;
  v102 = (_QWORD *)operator new();
  *v102 = &off_250AE0670;
  v102[1] = v4 + 84;
  sub_23961580C((uint64_t)__p, (uint64_t)v148, (uint64_t)v102);
  v172[0] = xmmword_239F0E226;
  *(_OWORD *)((char *)v172 + 11) = *(__int128 *)((char *)&xmmword_239F0E226 + 11);
  sub_2396F1974((uint64_t)v172, *(int32x4_t *)((char *)&xmmword_239F0E226 + 11), v103, v104, v105);
  v107 = v106;
  v108 = strlen(v106);
  if (v108 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v109 = (void *)v108;
  if (v108 >= 0x17)
  {
    v111 = (v108 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v108 | 7) != 0x17)
      v111 = v108 | 7;
    v112 = v111 + 1;
    v110 = operator new(v111 + 1);
    v146[1] = v109;
    v147 = v112 | 0x8000000000000000;
    v146[0] = v110;
    goto LABEL_88;
  }
  HIBYTE(v147) = v108;
  v110 = v146;
  if (v108)
LABEL_88:
    memmove(v110, v107, (size_t)v109);
  *((_BYTE *)v109 + (_QWORD)v110) = 0;
  v113 = (_QWORD *)operator new();
  *v113 = &off_250AE0670;
  v113[1] = v4 + 88;
  sub_23961580C((uint64_t)__p, (uint64_t)v146, (uint64_t)v113);
  strcpy(v171, "\"CTE}TU}JKV}QAMPG}KL}OCQI");
  sub_239A93C04((unsigned __int8 *)v171, *(int32x4_t *)"V}QAMPG}KL}OCQI", v114, v115, v116);
  v118 = v117;
  v119 = strlen(v117);
  if (v119 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v120 = (void *)v119;
  if (v119 >= 0x17)
  {
    v122 = (v119 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v119 | 7) != 0x17)
      v122 = v119 | 7;
    v123 = v122 + 1;
    v121 = operator new(v122 + 1);
    v144[1] = v120;
    v145 = v123 | 0x8000000000000000;
    v144[0] = v121;
    goto LABEL_96;
  }
  HIBYTE(v145) = v119;
  v121 = v144;
  if (v119)
LABEL_96:
    memmove(v121, v118, (size_t)v120);
  *((_BYTE *)v120 + (_QWORD)v121) = 0;
  v124 = (_QWORD *)operator new();
  *v124 = &off_250AE0670;
  v124[1] = v4 + 92;
  sub_23961580C((uint64_t)__p, (uint64_t)v144, (uint64_t)v124);
  strcpy(v170, "*K\\Mu\\]uBC^uYIEXOuE_^uGKYA");
  sub_2396F1974((uint64_t)v170, *(int32x4_t *)"uYIEXOuE_^uGKYA", v125, v126, v127);
  v129 = v128;
  v130 = strlen(v128);
  if (v130 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v131 = (void *)v130;
  if (v130 >= 0x17)
  {
    v133 = (v130 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v130 | 7) != 0x17)
      v133 = v130 | 7;
    v134 = v133 + 1;
    v132 = operator new(v133 + 1);
    v142[1] = v131;
    v143 = v134 | 0x8000000000000000;
    v142[0] = v132;
    goto LABEL_104;
  }
  HIBYTE(v143) = v130;
  v132 = v142;
  if (v130)
LABEL_104:
    memmove(v132, v129, (size_t)v131);
  *((_BYTE *)v131 + (_QWORD)v132) = 0;
  v135 = (_QWORD *)operator new();
  *v135 = &off_250AE0670;
  v135[1] = v4 + 96;
  sub_23961580C((uint64_t)__p, (uint64_t)v142, (uint64_t)v135);
  if (SHIBYTE(v143) < 0)
  {
    operator delete(v142[0]);
    if ((SHIBYTE(v145) & 0x80000000) == 0)
    {
LABEL_107:
      if ((SHIBYTE(v147) & 0x80000000) == 0)
        goto LABEL_108;
      goto LABEL_132;
    }
  }
  else if ((SHIBYTE(v145) & 0x80000000) == 0)
  {
    goto LABEL_107;
  }
  operator delete(v144[0]);
  if ((SHIBYTE(v147) & 0x80000000) == 0)
  {
LABEL_108:
    if ((SHIBYTE(v149) & 0x80000000) == 0)
      goto LABEL_109;
    goto LABEL_133;
  }
LABEL_132:
  operator delete(v146[0]);
  if ((SHIBYTE(v149) & 0x80000000) == 0)
  {
LABEL_109:
    if ((SHIBYTE(v151) & 0x80000000) == 0)
      goto LABEL_110;
    goto LABEL_134;
  }
LABEL_133:
  operator delete(v148[0]);
  if ((SHIBYTE(v151) & 0x80000000) == 0)
  {
LABEL_110:
    if ((SHIBYTE(v153) & 0x80000000) == 0)
      goto LABEL_111;
    goto LABEL_135;
  }
LABEL_134:
  operator delete(v150[0]);
  if ((SHIBYTE(v153) & 0x80000000) == 0)
  {
LABEL_111:
    if ((SHIBYTE(v155) & 0x80000000) == 0)
      goto LABEL_112;
    goto LABEL_136;
  }
LABEL_135:
  operator delete(v152[0]);
  if ((SHIBYTE(v155) & 0x80000000) == 0)
  {
LABEL_112:
    if ((SHIBYTE(v157) & 0x80000000) == 0)
      goto LABEL_113;
    goto LABEL_137;
  }
LABEL_136:
  operator delete(v154[0]);
  if ((SHIBYTE(v157) & 0x80000000) == 0)
  {
LABEL_113:
    if ((SHIBYTE(v159) & 0x80000000) == 0)
      goto LABEL_114;
    goto LABEL_138;
  }
LABEL_137:
  operator delete(v156[0]);
  if ((SHIBYTE(v159) & 0x80000000) == 0)
  {
LABEL_114:
    if ((SHIBYTE(v161) & 0x80000000) == 0)
      goto LABEL_115;
    goto LABEL_139;
  }
LABEL_138:
  operator delete(v158[0]);
  if ((SHIBYTE(v161) & 0x80000000) == 0)
  {
LABEL_115:
    if ((SHIBYTE(v163) & 0x80000000) == 0)
      goto LABEL_116;
    goto LABEL_140;
  }
LABEL_139:
  operator delete(v160[0]);
  if ((SHIBYTE(v163) & 0x80000000) == 0)
  {
LABEL_116:
    if ((SHIBYTE(v165) & 0x80000000) == 0)
      goto LABEL_117;
LABEL_141:
    operator delete(v164[0]);
    if ((SHIBYTE(v167) & 0x80000000) == 0)
      goto LABEL_118;
    goto LABEL_142;
  }
LABEL_140:
  operator delete(v162[0]);
  if (SHIBYTE(v165) < 0)
    goto LABEL_141;
LABEL_117:
  if ((SHIBYTE(v167) & 0x80000000) == 0)
    goto LABEL_118;
LABEL_142:
  operator delete(__dst[0]);
LABEL_118:
  sub_23959479C((uint64_t)__p, a2);
  v136 = v169;
  if (v169)
  {
    do
    {
      v137 = v136[5];
      if (v137)
        (*(void (**)(uint64_t))(*(_QWORD *)v137 + 8))(v137);
      v136 = (_QWORD *)*v136;
    }
    while (v136);
    v138 = (void **)v169;
    if (v169)
    {
      do
      {
        v141 = (void **)*v138;
        if (*((char *)v138 + 39) < 0)
          operator delete(v138[2]);
        operator delete(v138);
        v138 = v141;
      }
      while (v141);
    }
  }
  v139 = __p[0];
  __p[0] = 0;
  if (v139)
    operator delete(v139);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239ADCF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,_QWORD *__p)
{
  _QWORD *v52;
  uint64_t v53;
  void **v54;
  void **v55;

  v52 = __p;
  if (__p)
  {
    do
    {
      v53 = v52[5];
      if (v53)
        (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
      v52 = (_QWORD *)*v52;
    }
    while (v52);
    v54 = (void **)__p;
    do
    {
      v55 = (void **)*v54;
      if (*((char *)v54 + 39) < 0)
        operator delete(v54[2]);
      operator delete(v54);
      v54 = v55;
    }
    while (v55);
  }
  if (!a49)
    _Unwind_Resume(a1);
  operator delete(a49);
  _Unwind_Resume(a1);
}

void sub_239ADD210(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADD234(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239ADDED0((uint64_t)&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239ADD280(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t *v3;
  int v4;
  int v6;
  int v7;
  int i;
  _QWORD *exception;
  uint64_t v10;

  v3 = a2;
  v10 = *(_QWORD *)(a1 + 8);
  if (!a3)
    goto LABEL_4;
  v4 = std::istream::peek();
  if ((v4 & 0xFFFFFFFE) == 0xDE)
  {
    a2 = v3;
    a3 = 1;
LABEL_4:
    sub_239ADD38C(&v10, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  v6 = v4;
  std::istream::get();
  if (v6 == 221)
  {
    v7 = sub_2396162D4((uint64_t)v3, 221);
    if (*(_DWORD *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 32))
    {
      exception = __cxa_allocate_exception(8uLL);
      *exception = MEMORY[0x24BEDB8F0] + 16;
      __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
    }
    for (i = v7; i; --i)
      sub_239ADD38C(&v10, v3, 1);
  }
  else
  {
    sub_2396163F8(v3, v6);
  }
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239ADD38C(uint64_t *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t *v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v33;
  char i;
  unsigned int v35;
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  int j;
  unsigned int v41;
  int v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v48;
  uint64_t v49[2];
  uint64_t v50;
  uint64_t v51;
  void *__p;
  char v53;
  _BYTE v54[152];
  unint64_t v55;
  std::string v56;
  _QWORD *v57[2];

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      _ZF = 1;
    else
      _ZF = v5 == 0;
    if (!_ZF)
    {
      v7 = *MEMORY[0x24BEDB7F0];
      v9 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v8 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v10 = v5 - 1;
      __asm { FMOV            V0.4S, #-1.0 }
      v46 = _Q0;
      v15 = MEMORY[0x24BEDB848] + 16;
      do
      {
        v16 = v10;
        memset(&v56, 0, sizeof(v56));
        v17 = std::istream::get();
        v18 = sub_2396162D4((uint64_t)a2, v17);
        if (v18)
        {
          std::string::resize(&v56, v18, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
        {
          *v56.__r_.__value_.__l.__data_ = 0;
          v56.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v56.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v56.__r_.__value_.__s + 23) = 0;
        }
        v55 = 0;
        sub_239593804((uint64_t)v49, (uint64_t)&v56, 24);
        MEMORY[0x23B83DD1C](v49, &v55);
        v48 = v46;
        sub_239ADD97C((uint64_t)&v48, a2, 1);
        v19 = *a1;
        v57[0] = &v55;
        v20 = sub_239434260(v19, &v55, (uint64_t)&unk_239EC6E98, v57);
        *(_OWORD *)(v20 + 24) = v48;
        v21 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        v49[0] = v7;
        *(uint64_t *)((char *)v49 + *(_QWORD *)(v7 - 24)) = v9;
        v50 = v8;
        v51 = v15;
        if (v53 < 0)
          operator delete(__p);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v54);
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v56.__r_.__value_.__l.__data_);
        if (v21)
          break;
        v10 = v16 - 1;
      }
      while (v16);
    }
  }
  else
  {
    v22 = a2 + 4;
    v23 = MEMORY[0x24BDAC740];
    while (1)
    {
      v24 = std::istream::peek();
      v25 = v24 <= 0x7F ? *(_DWORD *)(v23 + 4 * v24 + 60) & 0x4000 : __maskrune(v24, 0x4000uLL);
      v26 = *(_QWORD *)(*a2 - 24);
      if (!v25)
        break;
      if (!*(_DWORD *)((char *)v22 + v26))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v26 + 32) & 2) == 0)
    {
      v55 = 0;
      memset(&v56, 0, sizeof(v56));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v27 = std::istream::peek();
          v28 = v27 <= 0x7F ? *(_DWORD *)(v23 + 4 * v27 + 60) & 0x4000 : __maskrune(v27, 0x4000uLL);
          v29 = *(_QWORD *)(*a2 - 24);
          if (!v28)
            break;
          if (!*(_DWORD *)((char *)v22 + v29))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v29 + 32) & 2) == 0)
        {
          v30 = std::istream::peek() == 125;
          v31 = *MEMORY[0x24BEDB7F0];
          v44 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          v45 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          __asm { FMOV            V0.4S, #-1.0 }
          v43 = _Q0;
          v33 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v22 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v30)
          {
            if (!sub_239595A48((uint64_t)&v56, a2))
              goto LABEL_72;
            sub_2395EDF80((uint64_t)&v55, (uint64_t)&v56);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v22 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v22 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_72;
LABEL_45:
            std::istream::get();
            while (1)
            {
              v35 = std::istream::peek();
              v36 = v35 <= 0x7F ? *(_DWORD *)(v23 + 4 * v35 + 60) & 0x4000 : __maskrune(v35, 0x4000uLL);
              v37 = *(_DWORD *)((char *)v22 + *(_QWORD *)(*a2 - 24));
              if (!v36)
                break;
              if (!v37)
                goto LABEL_45;
            }
            if ((v37 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v49);
              if (sub_239596128(a2))
              {
                v48 = v43;
                sub_239ADD97C((uint64_t)&v48, v49, 0);
                v38 = *a1;
                v57[0] = &v55;
                v39 = sub_239434260(v38, &v55, (uint64_t)&unk_239EC6E98, v57);
                *(_OWORD *)(v39 + 24) = v48;
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v41 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_64;
                  if (v41 == 2097152000)
                    break;
                  if (v41 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v23 + 4 * (char)j + 60) & 0x4000) == 0)
                      goto LABEL_63;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    goto LABEL_63;
                  }
                  if ((*((_BYTE *)v22 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                  {
LABEL_63:
                    if (v41 != 738197504)
                      goto LABEL_65;
LABEL_64:
                    std::istream::get();
                    v30 = 0;
                    goto LABEL_67;
                  }
                  std::istream::get();
                }
                v30 = 1;
LABEL_67:
                v42 = 0;
              }
              else
              {
LABEL_65:
                v30 = 0;
                v42 = 1;
              }
              v49[0] = v31;
              *(uint64_t *)((char *)v49 + *(_QWORD *)(v31 - 24)) = v45;
              v50 = v44;
              v51 = v33;
              if (v53 < 0)
                operator delete(__p);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v54);
              if (!v42)
                continue;
            }
            goto LABEL_72;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_72:
      if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v56.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239ADD924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  uint64_t v21;

  if (*(char *)(v21 - 105) < 0)
    operator delete(*(void **)(v21 - 128));
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239ADD97C(uint64_t a1, uint64_t *a2, char a3)
{
  int32x4_t v5;
  double v6;
  int32x4_t v7;
  unsigned __int8 *v8;
  size_t v9;
  void *v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int8x16_t v15;
  double v16;
  int32x4_t v17;
  const char *v18;
  const char *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int32x4_t v26;
  double v27;
  int32x4_t v28;
  unsigned __int8 *v29;
  size_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int8x16_t v36;
  double v37;
  int32x4_t v38;
  const char *v39;
  const char *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  void **v49;
  void *v50;
  void **v52;
  void *v53[2];
  unint64_t v54;
  void *v55[2];
  unint64_t v56;
  void *v57[2];
  unint64_t v58;
  void *__dst[2];
  unint64_t v60;
  void *__p[2];
  void *v62;
  _OWORD v63[2];
  unsigned __int8 v64[32];
  _OWORD v65[2];
  unsigned __int8 v66[24];
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  *(_OWORD *)v66 = xmmword_239F0E18C;
  *(_QWORD *)&v66[14] = 0x30283A36043532;
  v8 = sub_239A90BEC(v66, (int8x16_t)xmmword_239F0E18C, v5, v6, v7);
  v9 = strlen((const char *)v8);
  if (v9 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v10 = (void *)v9;
  if (v9 >= 0x17)
  {
    v12 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v12 = v9 | 7;
    v13 = v12 + 1;
    v11 = (void **)operator new(v12 + 1);
    __dst[1] = v10;
    v60 = v13 | 0x8000000000000000;
    __dst[0] = v11;
    goto LABEL_8;
  }
  HIBYTE(v60) = v9;
  v11 = __dst;
  if (v9)
LABEL_8:
    memmove(v11, v8, (size_t)v10);
  *((_BYTE *)v10 + (_QWORD)v11) = 0;
  v14 = (_QWORD *)operator new();
  *v14 = &off_250AE0670;
  v14[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v14);
  v65[0] = xmmword_239F0E1A2;
  *(_QWORD *)((char *)v65 + 15) = 0xB13010D3F1415;
  sub_2396EFBE0((uint64_t)v65, (int32x4_t)xmmword_239F0E1A2, v15, v16, v17);
  v19 = v18;
  v20 = strlen(v18);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v57[1] = v21;
    v58 = v24 | 0x8000000000000000;
    v57[0] = v22;
    goto LABEL_16;
  }
  HIBYTE(v58) = v20;
  v22 = v57;
  if (v20)
LABEL_16:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250AE0670;
  v25[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v57, (uint64_t)v25);
  *(_OWORD *)v64 = xmmword_239F0E1B9;
  *(_QWORD *)&v64[14] = 0xB13010D3F0E09;
  v29 = sub_239A90BEC(v64, (int8x16_t)xmmword_239F0E1B9, v26, v27, v28);
  v30 = strlen((const char *)v29);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v31 = (void *)v30;
  if (v30 >= 0x17)
  {
    v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v33 = v30 | 7;
    v34 = v33 + 1;
    v32 = operator new(v33 + 1);
    v55[1] = v31;
    v56 = v34 | 0x8000000000000000;
    v55[0] = v32;
    goto LABEL_24;
  }
  HIBYTE(v56) = v30;
  v32 = v55;
  if (v30)
LABEL_24:
    memmove(v32, v29, (size_t)v31);
  *((_BYTE *)v31 + (_QWORD)v32) = 0;
  v35 = (_QWORD *)operator new();
  *v35 = &off_250AE0670;
  v35[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v55, (uint64_t)v35);
  v63[0] = xmmword_239F0E1CF;
  *(_QWORD *)((char *)v63 + 15) = 0x810020E3C1716;
  sub_2396EFBE0((uint64_t)v63, (int32x4_t)xmmword_239F0E1CF, v36, v37, v38);
  v40 = v39;
  v41 = strlen(v39);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v53[1] = v42;
    v54 = v45 | 0x8000000000000000;
    v53[0] = v43;
    goto LABEL_32;
  }
  HIBYTE(v54) = v41;
  v43 = v53;
  if (v41)
LABEL_32:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250AE0670;
  v46[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v53, (uint64_t)v46);
  if (SHIBYTE(v54) < 0)
  {
    operator delete(v53[0]);
    if ((SHIBYTE(v56) & 0x80000000) == 0)
    {
LABEL_35:
      if ((SHIBYTE(v58) & 0x80000000) == 0)
        goto LABEL_36;
LABEL_51:
      operator delete(v57[0]);
      if ((SHIBYTE(v60) & 0x80000000) == 0)
        goto LABEL_37;
      goto LABEL_52;
    }
  }
  else if ((SHIBYTE(v56) & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(v55[0]);
  if (SHIBYTE(v58) < 0)
    goto LABEL_51;
LABEL_36:
  if ((SHIBYTE(v60) & 0x80000000) == 0)
    goto LABEL_37;
LABEL_52:
  operator delete(__dst[0]);
LABEL_37:
  sub_23959479C((uint64_t)__p, a2);
  v47 = v62;
  if (v62)
  {
    do
    {
      v48 = v47[5];
      if (v48)
        (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
      v47 = (_QWORD *)*v47;
    }
    while (v47);
    v49 = (void **)v62;
    if (v62)
    {
      do
      {
        v52 = (void **)*v49;
        if (*((char *)v49 + 39) < 0)
          operator delete(v49[2]);
        operator delete(v49);
        v49 = v52;
      }
      while (v52);
    }
  }
  v50 = __p[0];
  __p[0] = 0;
  if (v50)
    operator delete(v50);
  return a2;
}

void sub_239ADDE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33)
{
  sub_2395905C0((uint64_t)&a33);
  _Unwind_Resume(a1);
}

void sub_239ADDEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if ((a23 & 0x80000000) == 0)
    JUMPOUT(0x239ADDEACLL);
  JUMPOUT(0x239ADDEA4);
}

_QWORD *sub_239ADDED0(uint64_t a1, _QWORD *a2, int a3)
{
  unint64_t v5;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    if (*(_QWORD *)(*(_QWORD *)a1 + 24))
    {
      v7 = 0;
      v8 = *(_QWORD **)(*(_QWORD *)a1 + 16);
      do
      {
        if (v8)
        {
          v11 = 0;
          v9 = v8;
          do
          {
            v9 = (_QWORD *)*v9;
            v10 = v11 + 1;
          }
          while (v11++ <= 0x7FFFFFFD && v9 != 0);
        }
        else
        {
          v9 = 0;
          v10 = 0;
        }
        sub_239ADE02C(v8, v9, v10, a2, 1);
        v7 += 0x7FFFFFFFLL;
        v8 = v9;
      }
      while (v7 < *(_QWORD *)(*(_QWORD *)a1 + 24));
    }
  }
  else
  {
    sub_239ADE02C(*(_QWORD **)(*(_QWORD *)a1 + 16), 0, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239ADE02C(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4, int a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__p;
  int v20;
  unsigned __int8 v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  _DWORD v27[42];

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v27[38] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v10 = *MEMORY[0x24BEDB7F0];
        v11 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v13 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v22);
          std::ostream::operator<<();
          std::stringbuf::str();
          std::ostream::put();
          v14 = v21;
          if ((v21 & 0x80u) != 0)
            v14 = v20;
          v27[39] = v14;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          sub_239ADE3D8((uint64_t)(a1 + 3), a4, 1);
          if ((char)v21 < 0)
            operator delete(__p);
          v22[0] = v10;
          *(_QWORD *)((char *)v22 + *(_QWORD *)(v10 - 24)) = v11;
          v23 = v12;
          v24 = v13;
          if (v26 < 0)
            operator delete(v25);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v27);
          a1 = (_QWORD *)*a1;
        }
        while (a1 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v15 = *MEMORY[0x24BEDB7F0];
      v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v16 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v18 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v22);
        std::ostream::operator<<();
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        sub_239ADE3D8((uint64_t)(a1 + 3), a4, 0);
        a1 = (_QWORD *)*a1;
        if (a1 != a2)
          std::ostream::put();
        if ((char)v21 < 0)
          operator delete(__p);
        v22[0] = v15;
        *(_QWORD *)((char *)v22 + *(_QWORD *)(v15 - 24)) = v17;
        v23 = v16;
        v24 = v18;
        if (v26 < 0)
          operator delete(v25);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v27);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239ADE390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_239498ABC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

_QWORD *sub_239ADE3D8(uint64_t a1, _QWORD *a2, char a3)
{
  int32x4_t v5;
  double v6;
  int32x4_t v7;
  unsigned __int8 *v8;
  size_t v9;
  void *v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int8x16_t v15;
  double v16;
  int32x4_t v17;
  const char *v18;
  const char *v19;
  size_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int32x4_t v26;
  double v27;
  int32x4_t v28;
  unsigned __int8 *v29;
  size_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int8x16_t v36;
  double v37;
  int32x4_t v38;
  const char *v39;
  const char *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  void **v49;
  void *v50;
  void **v52;
  void *v53[2];
  unint64_t v54;
  void *v55[2];
  unint64_t v56;
  void *v57[2];
  unint64_t v58;
  void *__dst[2];
  unint64_t v60;
  void *__p[2];
  void *v62;
  _OWORD v63[2];
  char v64[32];
  _OWORD v65[2];
  unsigned __int8 v66[24];
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  *(_OWORD *)v66 = xmmword_239F0DA5C;
  strcpy((char *)&v66[14], "ohYkgum");
  v8 = sub_239A90BEC(v66, (int8x16_t)xmmword_239F0DA5C, v5, v6, v7);
  v9 = strlen((const char *)v8);
  if (v9 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v10 = (void *)v9;
  if (v9 >= 0x17)
  {
    v12 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v12 = v9 | 7;
    v13 = v12 + 1;
    v11 = (void **)operator new(v12 + 1);
    __dst[1] = v10;
    v60 = v13 | 0x8000000000000000;
    __dst[0] = v11;
    goto LABEL_8;
  }
  HIBYTE(v60) = v9;
  v11 = __dst;
  if (v9)
LABEL_8:
    memmove(v11, v8, (size_t)v10);
  *((_BYTE *)v10 + (_QWORD)v11) = 0;
  v14 = (_QWORD *)operator new();
  *v14 = &off_250AE0580;
  v14[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v14);
  v65[0] = xmmword_239F0DA72;
  *(_QWORD *)((char *)v65 + 15) = 0x352D3F33012A2BLL;
  sub_2396EFBE0((uint64_t)v65, (int32x4_t)xmmword_239F0DA72, v15, v16, v17);
  v19 = v18;
  v20 = strlen(v18);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = (void *)v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = operator new(v23 + 1);
    v57[1] = v21;
    v58 = v24 | 0x8000000000000000;
    v57[0] = v22;
    goto LABEL_16;
  }
  HIBYTE(v58) = v20;
  v22 = v57;
  if (v20)
LABEL_16:
    memmove(v22, v19, (size_t)v21);
  *((_BYTE *)v21 + (_QWORD)v22) = 0;
  v25 = (_QWORD *)operator new();
  *v25 = &off_250AE0580;
  v25[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v57, (uint64_t)v25);
  strcpy(v64, "\n|}Ubc~UyiexoUcdUgkya");
  v29 = sub_239A90BEC((unsigned __int8 *)v64, *(int8x16_t *)"\n|}Ubc~UyiexoUcdUgkya", v26, v27, v28);
  v30 = strlen((const char *)v29);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v31 = (void *)v30;
  if (v30 >= 0x17)
  {
    v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v33 = v30 | 7;
    v34 = v33 + 1;
    v32 = operator new(v33 + 1);
    v55[1] = v31;
    v56 = v34 | 0x8000000000000000;
    v55[0] = v32;
    goto LABEL_24;
  }
  HIBYTE(v56) = v30;
  v32 = v55;
  if (v30)
LABEL_24:
    memmove(v32, v29, (size_t)v31);
  *((_BYTE *)v31 + (_QWORD)v32) = 0;
  v35 = (_QWORD *)operator new();
  *v35 = &off_250AE0580;
  v35[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v55, (uint64_t)v35);
  v63[0] = xmmword_239F0DA9F;
  *(_QWORD *)((char *)v63 + 15) = 0x322A3834062D2CLL;
  sub_2396EFBE0((uint64_t)v63, (int32x4_t)xmmword_239F0DA9F, v36, v37, v38);
  v40 = v39;
  v41 = strlen(v39);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v53[1] = v42;
    v54 = v45 | 0x8000000000000000;
    v53[0] = v43;
    goto LABEL_32;
  }
  HIBYTE(v54) = v41;
  v43 = v53;
  if (v41)
LABEL_32:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250AE0580;
  v46[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v53, (uint64_t)v46);
  if (SHIBYTE(v54) < 0)
  {
    operator delete(v53[0]);
    if ((SHIBYTE(v56) & 0x80000000) == 0)
    {
LABEL_35:
      if ((SHIBYTE(v58) & 0x80000000) == 0)
        goto LABEL_36;
LABEL_51:
      operator delete(v57[0]);
      if ((SHIBYTE(v60) & 0x80000000) == 0)
        goto LABEL_37;
      goto LABEL_52;
    }
  }
  else if ((SHIBYTE(v56) & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(v55[0]);
  if (SHIBYTE(v58) < 0)
    goto LABEL_51;
LABEL_36:
  if ((SHIBYTE(v60) & 0x80000000) == 0)
    goto LABEL_37;
LABEL_52:
  operator delete(__dst[0]);
LABEL_37:
  sub_2395902F0((uint64_t)__p, a2);
  v47 = v62;
  if (v62)
  {
    do
    {
      v48 = v47[5];
      if (v48)
        (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
      v47 = (_QWORD *)*v47;
    }
    while (v47);
    v49 = (void **)v62;
    if (v62)
    {
      do
      {
        v52 = (void **)*v49;
        if (*((char *)v49 + 39) < 0)
          operator delete(v49[2]);
        operator delete(v49);
        v49 = v52;
      }
      while (v52);
    }
  }
  v50 = __p[0];
  __p[0] = 0;
  if (v50)
    operator delete(v50);
  return a2;
}

void sub_239ADE870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33)
{
  sub_2395905C0((uint64_t)&a33);
  _Unwind_Resume(a1);
}

_QWORD *sub_239ADE92C(uint64_t a1, _QWORD *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  const char *v16;
  size_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  double v23;
  int32x4_t v24;
  const char *v25;
  const char *v26;
  size_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  const char *v33;
  const char *v34;
  size_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int8x16_t v41;
  double v42;
  int32x4_t v43;
  const char *v44;
  const char *v45;
  size_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int8x16_t v52;
  double v53;
  int32x4_t v54;
  const char *v55;
  const char *v56;
  size_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  int8x16_t v63;
  double v64;
  int32x4_t v65;
  const char *v66;
  const char *v67;
  size_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  int8x16_t *v74;
  size_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  int8x16_t v81;
  double v82;
  int32x4_t v83;
  const char *v84;
  const char *v85;
  size_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  int8x16_t v92;
  double v93;
  int32x4_t v94;
  const char *v95;
  const char *v96;
  size_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  int8x16_t v103;
  double v104;
  int32x4_t v105;
  const char *v106;
  const char *v107;
  size_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  int8x16_t v114;
  double v115;
  int32x4_t v116;
  const char *v117;
  const char *v118;
  size_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  int8x16_t v125;
  double v126;
  int32x4_t v127;
  const char *v128;
  const char *v129;
  size_t v130;
  void *v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  void **v138;
  void *v139;
  void **v141;
  void *v142[2];
  unint64_t v143;
  void *v144[2];
  unint64_t v145;
  void *v146[2];
  unint64_t v147;
  void *v148[2];
  unint64_t v149;
  void *v150[2];
  unint64_t v151;
  void *v152[2];
  unint64_t v153;
  void *v154[2];
  unint64_t v155;
  void *v156[2];
  unint64_t v157;
  void *v158[2];
  unint64_t v159;
  void *v160[2];
  unint64_t v161;
  void *v162[2];
  unint64_t v163;
  void *v164[2];
  unint64_t v165;
  void *__dst[2];
  unint64_t v167;
  void *__p[2];
  void *v169;
  _OWORD v170[2];
  char v171[32];
  _OWORD v172[2];
  char v173[32];
  __int128 v174;
  int v175;
  __int128 v176;
  __int16 v177;
  char v178[32];
  _OWORD v179[2];
  _OWORD v180[2];
  char v181[32];
  char v182[32];
  uint64_t v183;
  int v184;
  char v185[24];
  uint64_t v186;

  v186 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v185, "2[AmUWFF[\\UmVWAQmTSAFW@");
  sub_2396F1A4C((uint64_t)v185, *(int32x4_t *)"2[AmUWFF[\\UmVWAQmTSAFW@", v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v167 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v167) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFEA8;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v183 = 0x2B232511233B204ELL;
  v184 = 4005935;
  v16 = sub_23958E4C8((uint64_t)&v183);
  v17 = strlen(v16);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v18 = (void *)v17;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    v19 = operator new(v20 + 1);
    v164[1] = v18;
    v165 = v21 | 0x8000000000000000;
    v164[0] = v19;
    goto LABEL_16;
  }
  HIBYTE(v165) = v17;
  v19 = v164;
  if (v17)
LABEL_16:
    memmove(v19, v16, (size_t)v18);
  *((_BYTE *)v18 + (_QWORD)v19) = 0;
  v22 = (_QWORD *)operator new();
  *v22 = &off_250ADF750;
  v22[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v164, (uint64_t)v22);
  strcpy(v182, "R6' 3&;=<\r9?73<!\r;<;&;3>;(3&;=<");
  sub_2396F06F0((uint64_t)v182, *(int32x4_t *)"R6' 3&;=<\r9?73<!\r;<;&;3>;(3&;=<",
    *(int8x16_t *)"\r;<;&;3>;(3&;=<",
    v23,
    v24);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = (void *)v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = operator new(v30 + 1);
    v162[1] = v28;
    v163 = v31 | 0x8000000000000000;
    v162[0] = v29;
    goto LABEL_24;
  }
  HIBYTE(v163) = v27;
  v29 = v162;
  if (v27)
LABEL_24:
    memmove(v29, v26, (size_t)v28);
  *((_BYTE *)v28 + (_QWORD)v29) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250AE0580;
  v32[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v162, (uint64_t)v32);
  strcpy(v181, "W3\"%6#>89\b<:269$");
  sub_2396EFA24((uint64_t)v181);
  v34 = v33;
  v35 = strlen(v33);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v36 = (void *)v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = operator new(v38 + 1);
    v160[1] = v36;
    v161 = v39 | 0x8000000000000000;
    v160[0] = v37;
    goto LABEL_32;
  }
  HIBYTE(v161) = v35;
  v37 = v160;
  if (v35)
LABEL_32:
    memmove(v37, v34, (size_t)v36);
  *((_BYTE *)v36 + (_QWORD)v37) = 0;
  v40 = (_QWORD *)operator new();
  *v40 = &off_250AE0580;
  v40[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v160, (uint64_t)v40);
  v180[0] = xmmword_239F0DA11;
  *(_QWORD *)((char *)v180 + 15) = 0x3E232224392C3FLL;
  sub_2396EFBE0((uint64_t)v180, (int32x4_t)xmmword_239F0DA11, v41, v42, v43);
  v45 = v44;
  v46 = strlen(v44);
  if (v46 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v47 = (void *)v46;
  if (v46 >= 0x17)
  {
    v49 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v46 | 7) != 0x17)
      v49 = v46 | 7;
    v50 = v49 + 1;
    v48 = operator new(v49 + 1);
    v158[1] = v47;
    v159 = v50 | 0x8000000000000000;
    v158[0] = v48;
    goto LABEL_40;
  }
  HIBYTE(v159) = v46;
  v48 = v158;
  if (v46)
LABEL_40:
    memmove(v48, v45, (size_t)v47);
  *((_BYTE *)v47 + (_QWORD)v48) = 0;
  v51 = (_QWORD *)operator new();
  *v51 = &off_250AE0580;
  v51[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v158, (uint64_t)v51);
  v179[0] = xmmword_239F0DA28;
  *(_OWORD *)((char *)v179 + 11) = *(__int128 *)((char *)&xmmword_239F0DA28 + 11);
  sub_2396F1974((uint64_t)v179, *(int32x4_t *)((char *)&xmmword_239F0DA28 + 11), v52, v53, v54);
  v56 = v55;
  v57 = strlen(v55);
  if (v57 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v58 = (void *)v57;
  if (v57 >= 0x17)
  {
    v60 = (v57 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v57 | 7) != 0x17)
      v60 = v57 | 7;
    v61 = v60 + 1;
    v59 = operator new(v60 + 1);
    v156[1] = v58;
    v157 = v61 | 0x8000000000000000;
    v156[0] = v59;
    goto LABEL_48;
  }
  HIBYTE(v157) = v57;
  v59 = v156;
  if (v57)
LABEL_48:
    memmove(v59, v56, (size_t)v58);
  *((_BYTE *)v58 + (_QWORD)v59) = 0;
  v62 = (_QWORD *)operator new();
  *v62 = &off_250ADF570;
  v62[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v156, (uint64_t)v62);
  strcpy(v178, "0]UQ^o[]UQ^CoVY^Q\\oUBB_B");
  sub_2396EFC88((uint64_t)v178, *(int32x4_t *)"Q^CoVY^Q\\oUBB_B", v63, v64, v65);
  v67 = v66;
  v68 = strlen(v66);
  if (v68 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v69 = (void *)v68;
  if (v68 >= 0x17)
  {
    v71 = (v68 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v68 | 7) != 0x17)
      v71 = v68 | 7;
    v72 = v71 + 1;
    v70 = operator new(v71 + 1);
    v154[1] = v69;
    v155 = v72 | 0x8000000000000000;
    v154[0] = v70;
    goto LABEL_56;
  }
  HIBYTE(v155) = v68;
  v70 = v154;
  if (v68)
LABEL_56:
    memmove(v70, v67, (size_t)v69);
  *((_BYTE *)v69 + (_QWORD)v70) = 0;
  v73 = (_QWORD *)operator new();
  *v73 = &off_250ADF570;
  v73[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v154, (uint64_t)v73);
  v176 = xmmword_239F0DAB6;
  v177 = 32;
  v74 = sub_239A91B18((int8x16_t *)&v176);
  v75 = strlen(v74->i8);
  if (v75 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v76 = (void *)v75;
  if (v75 >= 0x17)
  {
    v78 = (v75 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v75 | 7) != 0x17)
      v78 = v75 | 7;
    v79 = v78 + 1;
    v77 = operator new(v78 + 1);
    v152[1] = v76;
    v153 = v79 | 0x8000000000000000;
    v152[0] = v77;
    goto LABEL_64;
  }
  HIBYTE(v153) = v75;
  v77 = v152;
  if (v75)
LABEL_64:
    memmove(v77, v74, (size_t)v76);
  *((_BYTE *)v76 + (_QWORD)v77) = 0;
  v80 = (_QWORD *)operator new();
  *v80 = &off_250AF3950;
  v80[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v152, (uint64_t)v80);
  v174 = xmmword_239F0DAC8;
  v175 = 1056010;
  sub_23958E55C((uint64_t)&v174, (int32x4_t)xmmword_239F0DAC8, v81, v82, v83);
  v85 = v84;
  v86 = strlen(v84);
  if (v86 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v87 = (void *)v86;
  if (v86 >= 0x17)
  {
    v89 = (v86 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v86 | 7) != 0x17)
      v89 = v86 | 7;
    v90 = v89 + 1;
    v88 = operator new(v89 + 1);
    v150[1] = v87;
    v151 = v90 | 0x8000000000000000;
    v150[0] = v88;
    goto LABEL_72;
  }
  HIBYTE(v151) = v86;
  v88 = v150;
  if (v86)
LABEL_72:
    memmove(v88, v85, (size_t)v87);
  *((_BYTE *)v87 + (_QWORD)v88) = 0;
  v91 = (_QWORD *)operator new();
  *v91 = &off_250AE0580;
  v91[1] = a1 + 80;
  sub_23961580C((uint64_t)__p, (uint64_t)v150, (uint64_t)v91);
  strcpy(v173, "&GPAyTGROIyNORyPQyOHyKGUM");
  sub_239A93C04((unsigned __int8 *)v173, *(int32x4_t *)"yNORyPQyOHyKGUM", v92, v93, v94);
  v96 = v95;
  v97 = strlen(v95);
  if (v97 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v98 = (void *)v97;
  if (v97 >= 0x17)
  {
    v100 = (v97 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v97 | 7) != 0x17)
      v100 = v97 | 7;
    v101 = v100 + 1;
    v99 = operator new(v100 + 1);
    v148[1] = v98;
    v149 = v101 | 0x8000000000000000;
    v148[0] = v99;
    goto LABEL_80;
  }
  HIBYTE(v149) = v97;
  v99 = v148;
  if (v97)
LABEL_80:
    memmove(v99, v96, (size_t)v98);
  *((_BYTE *)v98 + (_QWORD)v99) = 0;
  v102 = (_QWORD *)operator new();
  *v102 = &off_250AE0580;
  v102[1] = a1 + 84;
  sub_23961580C((uint64_t)__p, (uint64_t)v148, (uint64_t)v102);
  v172[0] = xmmword_239F0DAF6;
  *(_OWORD *)((char *)v172 + 11) = *(__int128 *)((char *)&xmmword_239F0DAF6 + 11);
  sub_2396F1974((uint64_t)v172, *(int32x4_t *)((char *)&xmmword_239F0DAF6 + 11), v103, v104, v105);
  v107 = v106;
  v108 = strlen(v106);
  if (v108 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v109 = (void *)v108;
  if (v108 >= 0x17)
  {
    v111 = (v108 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v108 | 7) != 0x17)
      v111 = v108 | 7;
    v112 = v111 + 1;
    v110 = operator new(v111 + 1);
    v146[1] = v109;
    v147 = v112 | 0x8000000000000000;
    v146[0] = v110;
    goto LABEL_88;
  }
  HIBYTE(v147) = v108;
  v110 = v146;
  if (v108)
LABEL_88:
    memmove(v110, v107, (size_t)v109);
  *((_BYTE *)v109 + (_QWORD)v110) = 0;
  v113 = (_QWORD *)operator new();
  *v113 = &off_250AE0580;
  v113[1] = a1 + 88;
  sub_23961580C((uint64_t)__p, (uint64_t)v146, (uint64_t)v113);
  strcpy(v171, ".OXIqXYqFGZq]MA\\KqG@qCO]E");
  sub_239A93C04((unsigned __int8 *)v171, *(int32x4_t *)"Zq]MA\\KqG@qCO]E", v114, v115, v116);
  v118 = v117;
  v119 = strlen(v117);
  if (v119 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v120 = (void *)v119;
  if (v119 >= 0x17)
  {
    v122 = (v119 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v119 | 7) != 0x17)
      v122 = v119 | 7;
    v123 = v122 + 1;
    v121 = operator new(v122 + 1);
    v144[1] = v120;
    v145 = v123 | 0x8000000000000000;
    v144[0] = v121;
    goto LABEL_96;
  }
  HIBYTE(v145) = v119;
  v121 = v144;
  if (v119)
LABEL_96:
    memmove(v121, v118, (size_t)v120);
  *((_BYTE *)v120 + (_QWORD)v121) = 0;
  v124 = (_QWORD *)operator new();
  *v124 = &off_250AE0580;
  v124[1] = a1 + 92;
  sub_23961580C((uint64_t)__p, (uint64_t)v144, (uint64_t)v124);
  v170[0] = xmmword_239F0DB2B;
  *(_OWORD *)((char *)v170 + 11) = *(__int128 *)((char *)&xmmword_239F0DB2B + 11);
  sub_2396F1974((uint64_t)v170, *(int32x4_t *)((char *)&xmmword_239F0DB2B + 11), v125, v126, v127);
  v129 = v128;
  v130 = strlen(v128);
  if (v130 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v131 = (void *)v130;
  if (v130 >= 0x17)
  {
    v133 = (v130 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v130 | 7) != 0x17)
      v133 = v130 | 7;
    v134 = v133 + 1;
    v132 = operator new(v133 + 1);
    v142[1] = v131;
    v143 = v134 | 0x8000000000000000;
    v142[0] = v132;
    goto LABEL_104;
  }
  HIBYTE(v143) = v130;
  v132 = v142;
  if (v130)
LABEL_104:
    memmove(v132, v129, (size_t)v131);
  *((_BYTE *)v131 + (_QWORD)v132) = 0;
  v135 = (_QWORD *)operator new();
  *v135 = &off_250AE0580;
  v135[1] = a1 + 96;
  sub_23961580C((uint64_t)__p, (uint64_t)v142, (uint64_t)v135);
  if (SHIBYTE(v143) < 0)
  {
    operator delete(v142[0]);
    if ((SHIBYTE(v145) & 0x80000000) == 0)
    {
LABEL_107:
      if ((SHIBYTE(v147) & 0x80000000) == 0)
        goto LABEL_108;
      goto LABEL_132;
    }
  }
  else if ((SHIBYTE(v145) & 0x80000000) == 0)
  {
    goto LABEL_107;
  }
  operator delete(v144[0]);
  if ((SHIBYTE(v147) & 0x80000000) == 0)
  {
LABEL_108:
    if ((SHIBYTE(v149) & 0x80000000) == 0)
      goto LABEL_109;
    goto LABEL_133;
  }
LABEL_132:
  operator delete(v146[0]);
  if ((SHIBYTE(v149) & 0x80000000) == 0)
  {
LABEL_109:
    if ((SHIBYTE(v151) & 0x80000000) == 0)
      goto LABEL_110;
    goto LABEL_134;
  }
LABEL_133:
  operator delete(v148[0]);
  if ((SHIBYTE(v151) & 0x80000000) == 0)
  {
LABEL_110:
    if ((SHIBYTE(v153) & 0x80000000) == 0)
      goto LABEL_111;
    goto LABEL_135;
  }
LABEL_134:
  operator delete(v150[0]);
  if ((SHIBYTE(v153) & 0x80000000) == 0)
  {
LABEL_111:
    if ((SHIBYTE(v155) & 0x80000000) == 0)
      goto LABEL_112;
    goto LABEL_136;
  }
LABEL_135:
  operator delete(v152[0]);
  if ((SHIBYTE(v155) & 0x80000000) == 0)
  {
LABEL_112:
    if ((SHIBYTE(v157) & 0x80000000) == 0)
      goto LABEL_113;
    goto LABEL_137;
  }
LABEL_136:
  operator delete(v154[0]);
  if ((SHIBYTE(v157) & 0x80000000) == 0)
  {
LABEL_113:
    if ((SHIBYTE(v159) & 0x80000000) == 0)
      goto LABEL_114;
    goto LABEL_138;
  }
LABEL_137:
  operator delete(v156[0]);
  if ((SHIBYTE(v159) & 0x80000000) == 0)
  {
LABEL_114:
    if ((SHIBYTE(v161) & 0x80000000) == 0)
      goto LABEL_115;
    goto LABEL_139;
  }
LABEL_138:
  operator delete(v158[0]);
  if ((SHIBYTE(v161) & 0x80000000) == 0)
  {
LABEL_115:
    if ((SHIBYTE(v163) & 0x80000000) == 0)
      goto LABEL_116;
    goto LABEL_140;
  }
LABEL_139:
  operator delete(v160[0]);
  if ((SHIBYTE(v163) & 0x80000000) == 0)
  {
LABEL_116:
    if ((SHIBYTE(v165) & 0x80000000) == 0)
      goto LABEL_117;
LABEL_141:
    operator delete(v164[0]);
    if ((SHIBYTE(v167) & 0x80000000) == 0)
      goto LABEL_118;
    goto LABEL_142;
  }
LABEL_140:
  operator delete(v162[0]);
  if (SHIBYTE(v165) < 0)
    goto LABEL_141;
LABEL_117:
  if ((SHIBYTE(v167) & 0x80000000) == 0)
    goto LABEL_118;
LABEL_142:
  operator delete(__dst[0]);
LABEL_118:
  sub_2395902F0((uint64_t)__p, a2);
  v136 = v169;
  if (v169)
  {
    do
    {
      v137 = v136[5];
      if (v137)
        (*(void (**)(uint64_t))(*(_QWORD *)v137 + 8))(v137);
      v136 = (_QWORD *)*v136;
    }
    while (v136);
    v138 = (void **)v169;
    if (v169)
    {
      do
      {
        v141 = (void **)*v138;
        if (*((char *)v138 + 39) < 0)
          operator delete(v138[2]);
        operator delete(v138);
        v138 = v141;
      }
      while (v141);
    }
  }
  v139 = __p[0];
  __p[0] = 0;
  if (v139)
    operator delete(v139);
  return a2;
}

void sub_239ADF5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2395905C0((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_239ADF838(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADF85C(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239ADDED0((uint64_t)&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239ADF8A8()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239ADF8E0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239ADF904(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AE07D4((uint64_t)&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239ADF950(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t *v3;
  int v4;
  int v6;
  int v7;
  int i;
  _QWORD *exception;
  uint64_t v10;

  v3 = a2;
  v10 = *(_QWORD *)(a1 + 8);
  if (!a3)
    goto LABEL_4;
  v4 = std::istream::peek();
  if ((v4 & 0xFFFFFFFE) == 0xDE)
  {
    a2 = v3;
    a3 = 1;
LABEL_4:
    sub_239ADFA5C(&v10, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  v6 = v4;
  std::istream::get();
  if (v6 == 221)
  {
    v7 = sub_2396162D4((uint64_t)v3, 221);
    if (*(_DWORD *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 32))
    {
      exception = __cxa_allocate_exception(8uLL);
      *exception = MEMORY[0x24BEDB8F0] + 16;
      __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
    }
    for (i = v7; i; --i)
      sub_239ADFA5C(&v10, v3, 1);
  }
  else
  {
    sub_2396163F8(v3, v6);
  }
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239ADFA5C(uint64_t *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  int v19;
  uint64_t *v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  char i;
  unsigned int v32;
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  int j;
  unsigned int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48[2];
  uint64_t v49;
  uint64_t v50;
  void *__p;
  char v52;
  _BYTE v53[152];
  unint64_t v54;
  std::string v55;
  _QWORD *v56[2];

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      v6 = 1;
    else
      v6 = v5 == 0;
    if (!v6)
    {
      v7 = *MEMORY[0x24BEDB7F0];
      v9 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v8 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v10 = v5 - 1;
      v11 = MEMORY[0x24BEDB848] + 16;
      do
      {
        v12 = v10;
        memset(&v55, 0, sizeof(v55));
        v13 = std::istream::get();
        v14 = sub_2396162D4((uint64_t)a2, v13);
        if (v14)
        {
          std::string::resize(&v55, v14, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
        {
          *v55.__r_.__value_.__l.__data_ = 0;
          v55.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v55.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v55.__r_.__value_.__s + 23) = 0;
        }
        v54 = 0;
        sub_239593804((uint64_t)v48, (uint64_t)&v55, 24);
        MEMORY[0x23B83DD1C](v48, &v54);
        v46 = 0u;
        v47 = 0u;
        v45 = 0u;
        sub_239AE005C((uint64_t)&v45, a2, 1);
        v15 = *a1;
        v56[0] = &v54;
        v16 = sub_239475234(v15, &v54, (uint64_t)&unk_239EC6E98, v56);
        v18 = v46;
        v17 = v47;
        *(_OWORD *)(v16 + 24) = v45;
        *(_OWORD *)(v16 + 40) = v18;
        *(_OWORD *)(v16 + 56) = v17;
        v19 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        v48[0] = v7;
        *(uint64_t *)((char *)v48 + *(_QWORD *)(v7 - 24)) = v9;
        v49 = v8;
        v50 = v11;
        if (v52 < 0)
          operator delete(__p);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v53);
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v55.__r_.__value_.__l.__data_);
        if (v19)
          break;
        v10 = v12 - 1;
      }
      while (v12);
    }
  }
  else
  {
    v20 = a2 + 4;
    v21 = MEMORY[0x24BDAC740];
    while (1)
    {
      v22 = std::istream::peek();
      v23 = v22 <= 0x7F ? *(_DWORD *)(v21 + 4 * v22 + 60) & 0x4000 : __maskrune(v22, 0x4000uLL);
      v24 = *(_QWORD *)(*a2 - 24);
      if (!v23)
        break;
      if (!*(_DWORD *)((char *)v20 + v24))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v24 + 32) & 2) == 0)
    {
      v54 = 0;
      memset(&v55, 0, sizeof(v55));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v25 = std::istream::peek();
          v26 = v25 <= 0x7F ? *(_DWORD *)(v21 + 4 * v25 + 60) & 0x4000 : __maskrune(v25, 0x4000uLL);
          v27 = *(_QWORD *)(*a2 - 24);
          if (!v26)
            break;
          if (!*(_DWORD *)((char *)v20 + v27))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v27 + 32) & 2) == 0)
        {
          v28 = std::istream::peek() == 125;
          v29 = *MEMORY[0x24BEDB7F0];
          v42 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          v43 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          v30 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v20 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v28)
          {
            if (!sub_239595A48((uint64_t)&v55, a2))
              goto LABEL_72;
            sub_2395EDF80((uint64_t)&v54, (uint64_t)&v55);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v20 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v20 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_72;
LABEL_45:
            std::istream::get();
            while (1)
            {
              v32 = std::istream::peek();
              v33 = v32 <= 0x7F ? *(_DWORD *)(v21 + 4 * v32 + 60) & 0x4000 : __maskrune(v32, 0x4000uLL);
              v34 = *(_DWORD *)((char *)v20 + *(_QWORD *)(*a2 - 24));
              if (!v33)
                break;
              if (!v34)
                goto LABEL_45;
            }
            if ((v34 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v48);
              if (sub_239596128(a2))
              {
                v46 = 0u;
                v47 = 0u;
                v45 = 0u;
                sub_239AE005C((uint64_t)&v45, v48, 0);
                v35 = *a1;
                v56[0] = &v54;
                v36 = sub_239475234(v35, &v54, (uint64_t)&unk_239EC6E98, v56);
                v38 = v46;
                v37 = v47;
                *(_OWORD *)(v36 + 24) = v45;
                *(_OWORD *)(v36 + 40) = v38;
                *(_OWORD *)(v36 + 56) = v37;
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v40 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_64;
                  if (v40 == 2097152000)
                    break;
                  if (v40 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v21 + 4 * (char)j + 60) & 0x4000) == 0)
                      goto LABEL_63;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    goto LABEL_63;
                  }
                  if ((*((_BYTE *)v20 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                  {
LABEL_63:
                    if (v40 != 738197504)
                      goto LABEL_65;
LABEL_64:
                    std::istream::get();
                    v28 = 0;
                    goto LABEL_67;
                  }
                  std::istream::get();
                }
                v28 = 1;
LABEL_67:
                v41 = 0;
              }
              else
              {
LABEL_65:
                v28 = 0;
                v41 = 1;
              }
              v48[0] = v29;
              *(uint64_t *)((char *)v48 + *(_QWORD *)(v29 - 24)) = v43;
              v49 = v42;
              v50 = v30;
              if (v52 < 0)
                operator delete(__p);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v53);
              if (!v41)
                continue;
            }
            goto LABEL_72;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_72:
      if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v55.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239AE0004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v23;

  if (*(char *)(v23 - 105) < 0)
    operator delete(*(void **)(v23 - 128));
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239AE005C(uint64_t a1, uint64_t *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int32x4_t v27;
  double v28;
  int32x4_t v29;
  unsigned __int8 *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int32x4_t v37;
  double v38;
  int32x4_t v39;
  unsigned __int8 *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  double v47;
  int16x8_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  void **v69;
  void *v70;
  void **v72;
  void *v73[2];
  unint64_t v74;
  void *v75[2];
  unint64_t v76;
  void *v77[2];
  unint64_t v78;
  void *v79[2];
  unint64_t v80;
  void *v81[2];
  unint64_t v82;
  void *__dst[2];
  unint64_t v84;
  void *__p[2];
  void *v86;
  _OWORD v87[2];
  char v88;
  __int128 v89;
  _OWORD v90[2];
  unsigned __int8 v91[32];
  unsigned __int8 v92[32];
  _OWORD v93[2];
  __int128 v94;
  int v95;
  uint64_t v96;

  v96 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v94 = xmmword_239F0DFBD;
  v95 = 131864;
  sub_23958E55C((uint64_t)&v94, (int32x4_t)xmmword_239F0DFBD, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v84 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v84) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFF08;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v93[0] = xmmword_239F0DFD1;
  *(_QWORD *)((char *)v93 + 15) = 0x6375787364717DLL;
  sub_2396EFBE0((uint64_t)v93, (int32x4_t)xmmword_239F0DFD1, v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v81[1] = v22;
    v82 = v25 | 0x8000000000000000;
    v81[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v82) = v21;
  v23 = v81;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AFFF08;
  v26[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v81, (uint64_t)v26);
  *(_OWORD *)v92 = xmmword_239F0DFE8;
  *(_QWORD *)&v92[14] = 0x1204090215000CLL;
  v30 = sub_239A90BEC(v92, (int8x16_t)xmmword_239F0DFE8, v27, v28, v29);
  v31 = strlen((const char *)v30);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v79[1] = v32;
    v80 = v35 | 0x8000000000000000;
    v79[0] = v33;
    goto LABEL_24;
  }
  HIBYTE(v80) = v31;
  v33 = v79;
  if (v31)
LABEL_24:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250AFFF08;
  v36[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v79, (uint64_t)v36);
  *(_OWORD *)v91 = xmmword_239F0DFFE;
  *(_QWORD *)&v91[14] = 0x190F02091E0B07;
  v40 = sub_239A90BEC(v91, (int8x16_t)xmmword_239F0DFFE, v37, v38, v39);
  v41 = strlen((const char *)v40);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v77[1] = v42;
    v78 = v45 | 0x8000000000000000;
    v77[0] = v43;
    goto LABEL_32;
  }
  HIBYTE(v78) = v41;
  v43 = v77;
  if (v41)
LABEL_32:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250AFFF08;
  v46[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v77, (uint64_t)v46);
  v89 = xmmword_239F0E014;
  v90[0] = *(_OWORD *)dbl_239F0E024;
  *(_DWORD *)((char *)v90 + 15) = 1971996;
  sub_2396F0060((unsigned __int8 *)&v89, (int16x8_t)xmmword_239F0E014, dbl_239F0E024[0], v47, v48);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v75[1] = v52;
    v76 = v55 | 0x8000000000000000;
    v75[0] = v53;
    goto LABEL_40;
  }
  HIBYTE(v76) = v51;
  v53 = v75;
  if (v51)
LABEL_40:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250AFFF08;
  v56[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v75, (uint64_t)v56);
  v87[0] = xmmword_239F0E037;
  v87[1] = xmmword_239F0E047;
  v88 = 0;
  sub_2396EFE38((uint64_t)v87, (int32x4_t)xmmword_239F0E037, xmmword_239F0E047, v57, v58);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v73[1] = v62;
    v74 = v65 | 0x8000000000000000;
    v73[0] = v63;
    goto LABEL_48;
  }
  HIBYTE(v74) = v61;
  v63 = v73;
  if (v61)
LABEL_48:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AFFF08;
  v66[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v73, (uint64_t)v66);
  if (SHIBYTE(v74) < 0)
  {
    operator delete(v73[0]);
    if ((SHIBYTE(v76) & 0x80000000) == 0)
    {
LABEL_51:
      if ((SHIBYTE(v78) & 0x80000000) == 0)
        goto LABEL_52;
      goto LABEL_69;
    }
  }
  else if ((SHIBYTE(v76) & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v75[0]);
  if ((SHIBYTE(v78) & 0x80000000) == 0)
  {
LABEL_52:
    if ((SHIBYTE(v80) & 0x80000000) == 0)
      goto LABEL_53;
    goto LABEL_70;
  }
LABEL_69:
  operator delete(v77[0]);
  if ((SHIBYTE(v80) & 0x80000000) == 0)
  {
LABEL_53:
    if ((SHIBYTE(v82) & 0x80000000) == 0)
      goto LABEL_54;
LABEL_71:
    operator delete(v81[0]);
    if ((SHIBYTE(v84) & 0x80000000) == 0)
      goto LABEL_55;
    goto LABEL_72;
  }
LABEL_70:
  operator delete(v79[0]);
  if (SHIBYTE(v82) < 0)
    goto LABEL_71;
LABEL_54:
  if ((SHIBYTE(v84) & 0x80000000) == 0)
    goto LABEL_55;
LABEL_72:
  operator delete(__dst[0]);
LABEL_55:
  sub_23959479C((uint64_t)__p, a2);
  v67 = v86;
  if (v86)
  {
    do
    {
      v68 = v67[5];
      if (v68)
        (*(void (**)(uint64_t))(*(_QWORD *)v68 + 8))(v68);
      v67 = (_QWORD *)*v67;
    }
    while (v67);
    v69 = (void **)v86;
    if (v86)
    {
      do
      {
        v72 = (void **)*v69;
        if (*((char *)v69 + 39) < 0)
          operator delete(v69[2]);
        operator delete(v69);
        v69 = v72;
      }
      while (v72);
    }
  }
  v70 = __p[0];
  __p[0] = 0;
  if (v70)
    operator delete(v70);
  return a2;
}

void sub_239AE06C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,char a45)
{
  sub_2395905C0((uint64_t)&a45);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AE07D4(uint64_t a1, _QWORD *a2, int a3)
{
  unint64_t v5;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    if (*(_QWORD *)(*(_QWORD *)a1 + 24))
    {
      v7 = 0;
      v8 = *(_QWORD **)(*(_QWORD *)a1 + 16);
      do
      {
        if (v8)
        {
          v11 = 0;
          v9 = v8;
          do
          {
            v9 = (_QWORD *)*v9;
            v10 = v11 + 1;
          }
          while (v11++ <= 0x7FFFFFFD && v9 != 0);
        }
        else
        {
          v9 = 0;
          v10 = 0;
        }
        sub_239AE0930(v8, v9, v10, a2, 1);
        v7 += 0x7FFFFFFFLL;
        v8 = v9;
      }
      while (v7 < *(_QWORD *)(*(_QWORD *)a1 + 24));
    }
  }
  else
  {
    sub_239AE0930(*(_QWORD **)(*(_QWORD *)a1 + 16), 0, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239AE0930(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4, int a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__p;
  int v20;
  unsigned __int8 v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  _DWORD v27[42];

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v27[38] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v10 = *MEMORY[0x24BEDB7F0];
        v11 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v13 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v22);
          std::ostream::operator<<();
          std::stringbuf::str();
          std::ostream::put();
          v14 = v21;
          if ((v21 & 0x80u) != 0)
            v14 = v20;
          v27[39] = v14;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          sub_239AE0CDC((uint64_t)(a1 + 3), a4, 1);
          if ((char)v21 < 0)
            operator delete(__p);
          v22[0] = v10;
          *(_QWORD *)((char *)v22 + *(_QWORD *)(v10 - 24)) = v11;
          v23 = v12;
          v24 = v13;
          if (v26 < 0)
            operator delete(v25);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v27);
          a1 = (_QWORD *)*a1;
        }
        while (a1 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v15 = *MEMORY[0x24BEDB7F0];
      v17 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v16 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v18 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v22);
        std::ostream::operator<<();
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        sub_239AE0CDC((uint64_t)(a1 + 3), a4, 0);
        a1 = (_QWORD *)*a1;
        if (a1 != a2)
          std::ostream::put();
        if ((char)v21 < 0)
          operator delete(__p);
        v22[0] = v15;
        *(_QWORD *)((char *)v22 + *(_QWORD *)(v15 - 24)) = v17;
        v23 = v16;
        v24 = v18;
        if (v26 < 0)
          operator delete(v25);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v27);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239AE0C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_239498ABC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AE0CDC(uint64_t a1, _QWORD *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int32x4_t v27;
  double v28;
  int32x4_t v29;
  unsigned __int8 *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int32x4_t v37;
  double v38;
  int32x4_t v39;
  unsigned __int8 *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  double v47;
  int16x8_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  void **v69;
  void *v70;
  void **v72;
  void *v73[2];
  unint64_t v74;
  void *v75[2];
  unint64_t v76;
  void *v77[2];
  unint64_t v78;
  void *v79[2];
  unint64_t v80;
  void *v81[2];
  unint64_t v82;
  void *__dst[2];
  unint64_t v84;
  void *__p[2];
  void *v86;
  char v87[48];
  __int128 v88;
  char v89[32];
  unsigned __int8 v90[32];
  unsigned __int8 v91[32];
  char v92[32];
  char v93[24];
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v93, "\airjXqbunanbcXwfnut");
  sub_23958E55C((uint64_t)v93, *(int32x4_t *)"\airjXqbunanbcXwfnut", v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v84 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v84) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFE48;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  strcpy(v92, "\x1Bv~zuDknozorm~Dvzoxs~h");
  sub_2396EFBE0((uint64_t)v92, *(int32x4_t *)"\x1Bv~zuDknozorm~Dvzoxs~h", v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v81[1] = v22;
    v82 = v25 | 0x8000000000000000;
    v81[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v82) = v21;
  v23 = v81;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AFFE48;
  v26[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v81, (uint64_t)v26);
  *(_OWORD *)v91 = xmmword_239F0D8B8;
  *(_QWORD *)&v91[14] = 0x1D0B060D1A0F03;
  v30 = sub_239A90BEC(v91, (int8x16_t)xmmword_239F0D8B8, v27, v28, v29);
  v31 = strlen((const char *)v30);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v79[1] = v32;
    v80 = v35 | 0x8000000000000000;
    v79[0] = v33;
    goto LABEL_24;
  }
  HIBYTE(v80) = v31;
  v33 = v79;
  if (v31)
LABEL_24:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250AFFE48;
  v36[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v79, (uint64_t)v36);
  *(_OWORD *)v90 = xmmword_239F0D8CE;
  *(_QWORD *)&v90[14] = 0xF19141F081D11;
  v40 = sub_239A90BEC(v90, (int8x16_t)xmmword_239F0D8CE, v37, v38, v39);
  v41 = strlen((const char *)v40);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v77[1] = v42;
    v78 = v45 | 0x8000000000000000;
    v77[0] = v43;
    goto LABEL_32;
  }
  HIBYTE(v78) = v41;
  v43 = v77;
  if (v41)
LABEL_32:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250AFFE48;
  v46[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v77, (uint64_t)v46);
  v88 = xmmword_239F0D8E4;
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v75[1] = v52;
    v76 = v55 | 0x8000000000000000;
    v75[0] = v53;
    goto LABEL_40;
  }
  HIBYTE(v76) = v51;
  v53 = v75;
  if (v51)
LABEL_40:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250AFFE48;
  v56[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v75, (uint64_t)v56);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v73[1] = v62;
    v74 = v65 | 0x8000000000000000;
    v73[0] = v63;
    goto LABEL_48;
  }
  HIBYTE(v74) = v61;
  v63 = v73;
  if (v61)
LABEL_48:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AFFE48;
  v66[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v73, (uint64_t)v66);
  if (SHIBYTE(v74) < 0)
  {
    operator delete(v73[0]);
    if ((SHIBYTE(v76) & 0x80000000) == 0)
    {
LABEL_51:
      if ((SHIBYTE(v78) & 0x80000000) == 0)
        goto LABEL_52;
      goto LABEL_69;
    }
  }
  else if ((SHIBYTE(v76) & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v75[0]);
  if ((SHIBYTE(v78) & 0x80000000) == 0)
  {
LABEL_52:
    if ((SHIBYTE(v80) & 0x80000000) == 0)
      goto LABEL_53;
    goto LABEL_70;
  }
LABEL_69:
  operator delete(v77[0]);
  if ((SHIBYTE(v80) & 0x80000000) == 0)
  {
LABEL_53:
    if ((SHIBYTE(v82) & 0x80000000) == 0)
      goto LABEL_54;
LABEL_71:
    operator delete(v81[0]);
    if ((SHIBYTE(v84) & 0x80000000) == 0)
      goto LABEL_55;
    goto LABEL_72;
  }
LABEL_70:
  operator delete(v79[0]);
  if (SHIBYTE(v82) < 0)
    goto LABEL_71;
LABEL_54:
  if ((SHIBYTE(v84) & 0x80000000) == 0)
    goto LABEL_55;
LABEL_72:
  operator delete(__dst[0]);
LABEL_55:
  sub_2395902F0((uint64_t)__p, a2);
  v67 = v86;
  if (v86)
  {
    do
    {
      v68 = v67[5];
      if (v68)
        (*(void (**)(uint64_t))(*(_QWORD *)v68 + 8))(v68);
      v67 = (_QWORD *)*v67;
    }
    while (v67);
    v69 = (void **)v86;
    if (v86)
    {
      do
      {
        v72 = (void **)*v69;
        if (*((char *)v69 + 39) < 0)
          operator delete(v69[2]);
        operator delete(v69);
        v69 = v72;
      }
      while (v72);
    }
  }
  v70 = __p[0];
  __p[0] = 0;
  if (v70)
    operator delete(v70);
  return a2;
}

void sub_239AE1340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,char a45)
{
  sub_2395905C0((uint64_t)&a45);
  _Unwind_Resume(a1);
}

void sub_239AE1458(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE147C(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(a1 + 8);
  v6 = (_QWORD *)(v4 + 8);
  v5 = *(_QWORD **)v4;
  if (a3)
    sub_239AE2074(v5, v6, (uint64_t)a2, *(_QWORD *)(v4 + 16));
  else
    sub_239AE21A0(v5, v6);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AE14D8(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD **v5;
  _QWORD *v6;
  int v7;
  unsigned int v8;
  std::string *v9;
  std::string *v10;
  uint64_t v11;
  std::string::value_type *v12;
  _QWORD **v13;
  _QWORD *v14;
  uint64_t **v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t data_low;
  uint64_t v34;
  uint64_t **v35;
  _QWORD **v36;
  _QWORD *v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t *v40;
  _QWORD *v41;
  char v42;
  unsigned int v43;
  int v44;
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t **v49;
  _QWORD **v50;
  _QWORD *v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t *v54;
  _QWORD *v55;
  int i;
  unsigned int v57;
  char v58;
  unsigned int v59;
  int v60;
  uint64_t v61;
  std::string *v62;
  uint64_t v64;
  std::string *v65;
  std::string *v66;
  uint64_t v67;
  _QWORD *v68;
  std::string *v69;
  std::string *v70;
  _QWORD v71[11];
  char v72;
  uint64_t v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  std::string v77;
  uint64_t v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD ***)(a1 + 8);
  v6 = v5 + 1;
  sub_239A61F08(v5[1]);
  *v5 = v5 + 1;
  v5[2] = 0;
  v68 = v5 + 1;
  v5[1] = 0;
  if (!a3)
  {
    v22 = a2 + 4;
    v23 = MEMORY[0x24BDAC740];
    while (1)
    {
      v24 = std::istream::peek();
      v25 = v24 <= 0x7F ? *(_DWORD *)(v23 + 4 * v24 + 60) & 0x4000 : __maskrune(v24, 0x4000uLL);
      v26 = *(_QWORD *)(*a2 - 24);
      if (!v25)
        break;
      if (!*(_DWORD *)((char *)v22 + v26))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v26 + 32) & 2) != 0 || std::istream::get() != 91)
      return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
    while (1)
    {
      v27 = std::istream::peek();
      v28 = v27 <= 0x7F ? *(_DWORD *)(v23 + 4 * v27 + 60) & 0x4000 : __maskrune(v27, 0x4000uLL);
      v29 = *(_QWORD *)(*a2 - 24);
      if (!v28)
        break;
      if (!*(_DWORD *)((char *)v22 + v29))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v29 + 32) & 2) != 0)
      return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
    v42 = 0;
    v65 = *(std::string **)(MEMORY[0x24BEDB7F0] + 64);
    v66 = (std::string *)*MEMORY[0x24BEDB7F0];
    v67 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    v64 = MEMORY[0x24BEDB848] + 16;
    while (1)
    {
      if ((*((_BYTE *)v22 + *(_QWORD *)(*a2 - 24)) & 2) != 0 || (v42 & 1) != 0)
      {
        while (1)
        {
          v59 = std::istream::peek();
          v60 = v59 <= 0x7F ? *(_DWORD *)(v23 + 4 * v59 + 60) & 0x4000 : __maskrune(v59, 0x4000uLL);
          v61 = *(_QWORD *)(*a2 - 24);
          if (!v60)
            break;
          if (!*(_DWORD *)((char *)v22 + v61))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v61 + 32) & 2) == 0)
          std::istream::get();
        return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
      }
      while (1)
      {
        v43 = std::istream::peek();
        v44 = v43 <= 0x7F ? *(_DWORD *)(v23 + 4 * v43 + 60) & 0x4000 : __maskrune(v43, 0x4000uLL);
        v45 = *(_DWORD *)((char *)v22 + *(_QWORD *)(*a2 - 24));
        if (!v44)
          break;
        if (!v45)
          std::istream::get();
      }
      if ((v45 & 2) != 0)
        return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
      sub_2394988CC((uint64_t)&v69);
      if (!sub_239596128(a2))
        goto LABEL_90;
      v46 = (char *)v71 + *(_QWORD *)(v71[0] - 24);
      if ((v46[32] & 5) != 0)
        goto LABEL_79;
      (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v46 + 5) + 32))(&v77, *((_QWORD *)v46 + 5), 0, 1, 16);
      if (v78 < 1)
        goto LABEL_79;
      v77.__r_.__value_.__r.__words[0] = (std::string::size_type)&v74;
      v77.__r_.__value_.__l.__size_ = 0;
      sub_2395E2258((uint64_t *)&v77, &v69, 0);
      v47 = v74;
      v48 = v75;
      v49 = v5 + 1;
      v50 = v5 + 1;
      v51 = (_QWORD *)*v6;
      if (*v6)
        break;
LABEL_76:
      v54 = (uint64_t *)operator new(0x28uLL);
      *(uint64_t *)((char *)v54 + 28) = v47 | (v48 << 32);
      *v54 = 0;
      v54[1] = 0;
      v54[2] = (uint64_t)v50;
      *v49 = v54;
      v55 = (_QWORD *)**v5;
      if (v55)
      {
        *v5 = v55;
        v54 = *v49;
      }
      sub_2394213B8(v5[1], v54);
      v5[2] = (_QWORD *)((char *)v5[2] + 1);
LABEL_79:
      for (i = std::istream::peek(); ; i = std::istream::peek())
      {
        v57 = i << 24;
        if (i << 24 == 738197504)
          goto LABEL_89;
        if (v57 == 1560281088)
        {
          v42 = 1;
LABEL_92:
          v58 = 1;
          goto LABEL_93;
        }
        if (v57 <= 0x7F000000)
        {
          if ((*(_DWORD *)(v23 + 4 * (char)i + 60) & 0x4000) == 0)
            break;
        }
        else if (!__maskrune((char)i, 0x4000uLL))
        {
          break;
        }
        if ((*((_BYTE *)v22 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
          break;
        std::istream::get();
      }
      if (v57 == 738197504)
      {
LABEL_89:
        std::istream::get();
        v42 = 0;
        goto LABEL_92;
      }
LABEL_90:
      v58 = 0;
      v42 = 0;
LABEL_93:
      v69 = v66;
      *(std::string **)((char *)&v69 + v66[-1].__r_.__value_.__r.__words[0]) = v65;
      v71[0] = v67;
      v71[1] = v64;
      if (v72 < 0)
        operator delete((void *)v71[9]);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x23B83E250](&v73);
      if ((v58 & 1) == 0)
        return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
    }
    while (1)
    {
      v50 = (_QWORD **)v51;
      v52 = *((_DWORD *)v51 + 7);
      if (v74 < v52)
        goto LABEL_69;
      if (v52 < v74)
      {
LABEL_74:
        v51 = v50[1];
        if (!v51)
        {
          v49 = v50 + 1;
          goto LABEL_76;
        }
      }
      else
      {
        v53 = *((_DWORD *)v50 + 8);
        if (v75 >= v53)
        {
          if (v53 >= v75)
            goto LABEL_79;
          goto LABEL_74;
        }
LABEL_69:
        v51 = *v50;
        v49 = v50;
        if (!*v50)
          goto LABEL_76;
      }
    }
  }
  v7 = std::istream::get();
  if ((v7 - 196) <= 2)
  {
    v8 = sub_2396162D4((uint64_t)a2, v7);
    v69 = 0;
    v70 = 0;
    v71[0] = 0;
    sub_2394FBB68((void **)&v69, v8);
    std::istream::read();
    v10 = v69;
    v9 = v70;
    if (v70 == v69)
    {
      v10 = v70;
      if (v70)
        goto LABEL_106;
      return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
    }
    v11 = 0;
    while (1)
    {
      v12 = &v10->__r_.__value_.__s.__data_[8 * v11];
      v13 = v5 + 1;
      v14 = (_QWORD *)*v68;
      v15 = v5 + 1;
      if (*v68)
        break;
LABEL_14:
      v20 = (uint64_t *)operator new(0x28uLL);
      *(uint64_t *)((char *)v20 + 28) = *(_QWORD *)v12;
      *v20 = 0;
      v20[1] = 0;
      v20[2] = (uint64_t)v13;
      *v15 = v20;
      v21 = (_QWORD *)**v5;
      if (v21)
      {
        *v5 = v21;
        v20 = *v15;
      }
      sub_2394213B8(v5[1], v20);
      v5[2] = (_QWORD *)((char *)v5[2] + 1);
      v10 = v69;
      v9 = v70;
LABEL_17:
      if (++v11 >= (unint64_t)(((char *)v9 - (char *)v10) >> 3))
      {
        if (!v10)
          return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
LABEL_106:
        v70 = v10;
        v62 = v10;
LABEL_107:
        operator delete(v62);
        return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
      }
    }
    v16 = *(_DWORD *)v12;
    v17 = *((_DWORD *)v12 + 1);
    while (1)
    {
      v13 = (_QWORD **)v14;
      v18 = *((_DWORD *)v14 + 7);
      if (v16 < v18)
        goto LABEL_7;
      if (v18 < v16)
      {
LABEL_12:
        v14 = v13[1];
        if (!v14)
        {
          v15 = v13 + 1;
          goto LABEL_14;
        }
      }
      else
      {
        v19 = *((_DWORD *)v13 + 8);
        if (v17 >= v19)
        {
          if (v19 >= v17)
            goto LABEL_17;
          goto LABEL_12;
        }
LABEL_7:
        v14 = *v13;
        v15 = v13;
        if (!*v13)
          goto LABEL_14;
      }
    }
  }
  if ((v7 & 0xFFFFFFFE) == 0xDC)
  {
    v30 = sub_2396162D4((uint64_t)a2, v7);
    if (!v30)
      return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
    v31 = 0;
    v32 = v30;
    while (1)
    {
      v69 = &v77;
      v70 = 0;
      sub_2395E2258((uint64_t *)&v69, a2, 1);
      data_low = LODWORD(v77.__r_.__value_.__l.__data_);
      v34 = HIDWORD(v77.__r_.__value_.__r.__words[0]);
      v35 = v5 + 1;
      v36 = v5 + 1;
      v37 = (_QWORD *)*v68;
      if (!*v68)
        goto LABEL_47;
      do
      {
        while (1)
        {
          v36 = (_QWORD **)v37;
          v38 = *((_DWORD *)v37 + 7);
          if (LODWORD(v77.__r_.__value_.__l.__data_) >= v38)
          {
            if (v38 < LODWORD(v77.__r_.__value_.__l.__data_))
              goto LABEL_45;
            v39 = *((_DWORD *)v36 + 8);
            if (HIDWORD(v77.__r_.__value_.__r.__words[0]) >= v39)
              break;
          }
          v37 = *v36;
          v35 = v36;
          if (!*v36)
            goto LABEL_47;
        }
        if (v39 >= HIDWORD(v77.__r_.__value_.__r.__words[0]))
          goto LABEL_50;
LABEL_45:
        v37 = v36[1];
      }
      while (v37);
      v35 = v36 + 1;
LABEL_47:
      v40 = (uint64_t *)operator new(0x28uLL);
      *(uint64_t *)((char *)v40 + 28) = data_low | (v34 << 32);
      *v40 = 0;
      v40[1] = 0;
      v40[2] = (uint64_t)v36;
      *v35 = v40;
      v41 = (_QWORD *)**v5;
      if (v41)
      {
        *v5 = v41;
        v40 = *v35;
      }
      sub_2394213B8(v5[1], v40);
      v5[2] = (_QWORD *)((char *)v5[2] + 1);
LABEL_50:
      if (++v31 == v32)
        return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
    }
  }
  if (v7 == 223)
  {
    v76 = 0;
    memset(&v77, 0, sizeof(v77));
    std::istream::read();
    std::istream::read();
    std::istream::read();
    std::istream::read();
    if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0)
    {
      v62 = (std::string *)v77.__r_.__value_.__r.__words[0];
      goto LABEL_107;
    }
  }
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AE1F8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *__p,uint64_t a58)
{
  uint64_t v58;

  if (*(char *)(v58 - 209) < 0)
  {
    operator delete(*(void **)(v58 - 232));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AE2074(_QWORD *a1, _QWORD *a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *exception;
  uint64_t v13;
  uint64_t v14;

  std::ostream::put();
  if (HIDWORD(a4))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = MEMORY[0x24BEDB8F0] + 16;
    __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
  }
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  result = std::ostream::write();
  if (a1 != a2)
  {
    do
    {
      v13 = *(_QWORD *)((char *)a1 + 28);
      result = sub_2395E2134((uint64_t)&v13, (uint64_t)&v14, a3, 2uLL);
      v9 = (_QWORD *)a1[1];
      if (v9)
      {
        do
        {
          v10 = v9;
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          v10 = (_QWORD *)a1[2];
          v11 = *v10 == (_QWORD)a1;
          a1 = v10;
        }
        while (!v11);
      }
      a1 = v10;
    }
    while (v10 != a2);
  }
  return result;
}

uint64_t sub_239AE21A0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  BOOL v6;

  std::ostream::put();
  if (a1 != a2)
  {
    while (1)
    {
      std::ostream::put();
      std::ostream::operator<<();
      std::ostream::put();
      std::ostream::operator<<();
      std::ostream::put();
      v4 = (_QWORD *)a1[1];
      v5 = a1;
      if (v4)
      {
        do
        {
          a1 = v4;
          v4 = (_QWORD *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          a1 = (_QWORD *)v5[2];
          v6 = *a1 == (_QWORD)v5;
          v5 = a1;
        }
        while (!v6);
      }
      if (a1 == a2)
        break;
      std::ostream::put();
    }
  }
  return std::ostream::put();
}

uint64_t sub_239AE2278(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  *(_OWORD *)(a1 + 8) = xmmword_239EC6680;
  *(_DWORD *)(a1 + 24) = 257;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_QWORD *)(a1 + 80) = 0x45D1B0003F4CCCCDLL;
  *(_BYTE *)(a1 + 88) = 1;
  *(_DWORD *)(a1 + 92) = 0x3FFF;
  *(_WORD *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 104) = xmmword_239EC6690;
  *(_QWORD *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 132) = 981668463;
  *(_OWORD *)(a1 + 136) = xmmword_239EC66A0;
  *(_DWORD *)(a1 + 152) = 1;
  *(_QWORD *)(a1 + 156) = 0x404000003C23D70ALL;
  *(_BYTE *)(a1 + 164) = 0;
  *(_BYTE *)(a1 + 168) = 1;
  *(_QWORD *)(a1 + 172) = 0x600000008;
  *(_OWORD *)(a1 + 184) = xmmword_239EC66B0;
  *(_WORD *)(a1 + 200) = 256;
  *(_QWORD *)(a1 + 208) = 15;
  *(_OWORD *)(a1 + 216) = xmmword_239EC66C0;
  *(_QWORD *)(a1 + 232) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 240) = 2139095039;
  *(_QWORD *)(a1 + 244) = 0x1EFFFFFFFFLL;
  *(_WORD *)(a1 + 252) = 0;
  *(_BYTE *)(a1 + 254) = 1;
  *(_QWORD *)(a1 + 256) = 0;
  *(_QWORD *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0;
  *(_BYTE *)(a1 + 280) = 1;
  *(_BYTE *)(a1 + 288) = 1;
  *(_WORD *)(a1 + 296) = 0;
  *(_BYTE *)(a1 + 298) = 1;
  *(_OWORD *)(a1 + 304) = xmmword_239EC66D0;
  *(_QWORD *)(a1 + 320) = 0x200000000;
  *(_DWORD *)(a1 + 328) = qos_class_self();
  *(_DWORD *)(a1 + 332) = 100;
  return a1;
}

void sub_239AE23C8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  if (*(char *)(v1 + 79) < 0)
  {
    operator delete(*(void **)(v1 + 56));
    v4 = *v2;
    if (!*v2)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v4 = *v2;
    if (!*v2)
      goto LABEL_3;
  }
  *(_QWORD *)(v1 + 40) = v4;
  operator delete(v4);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AE2404(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int8x16_t v13;
  double v14;
  int32x4_t v15;
  const char *v16;
  const char *v17;
  size_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int8x16_t v24;
  double v25;
  int32x4_t v26;
  const char *v27;
  const char *v28;
  size_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int8x16_t v35;
  double v36;
  int32x4_t v37;
  const char *v38;
  const char *v39;
  size_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int8x16_t v46;
  double v47;
  int32x4_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int8x16_t v67;
  double v68;
  int32x4_t v69;
  const char *v70;
  const char *v71;
  size_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  int32x4_t v78;
  double v79;
  int32x4_t v80;
  unsigned __int8 *v81;
  size_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  int32x4_t v88;
  double v89;
  int32x4_t v90;
  unsigned __int8 *v91;
  size_t v92;
  void *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  int8x16_t *v98;
  size_t v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  int16x8_t v105;
  const char *v106;
  const char *v107;
  size_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  int8x16_t v114;
  double v115;
  int32x4_t v116;
  const char *v117;
  const char *v118;
  size_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  int8x16_t v125;
  double v126;
  int32x4_t v127;
  const char *v128;
  const char *v129;
  size_t v130;
  void *v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  int8x16_t v136;
  double v137;
  int32x4_t v138;
  const char *v139;
  const char *v140;
  size_t v141;
  void *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  int8x16_t v147;
  double v148;
  int32x4_t v149;
  const char *v150;
  const char *v151;
  size_t v152;
  void *v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  int8x16_t v158;
  double v159;
  int32x4_t v160;
  const char *v161;
  const char *v162;
  size_t v163;
  void *v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  int8x16_t *v169;
  size_t v170;
  void *v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  const char *v176;
  size_t v177;
  void *v178;
  void *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  _QWORD *v183;
  uint64_t v184;
  void **v185;
  void *v186;
  void **v188;
  void *v189[2];
  unint64_t v190;
  void *v191[2];
  unint64_t v192;
  void *v193[2];
  unint64_t v194;
  void *v195[2];
  unint64_t v196;
  void *v197[2];
  unint64_t v198;
  void *v199[2];
  unint64_t v200;
  void *v201[2];
  unint64_t v202;
  void *v203[2];
  unint64_t v204;
  void *v205[2];
  unint64_t v206;
  void *v207[2];
  unint64_t v208;
  void *v209[2];
  unint64_t v210;
  void *v211[2];
  unint64_t v212;
  void *v213[2];
  unint64_t v214;
  void *v215[2];
  unint64_t v216;
  void *v217[2];
  unint64_t v218;
  void *v219[2];
  unint64_t v220;
  void *v221[2];
  unint64_t v222;
  void *__dst[2];
  unint64_t v224;
  void *__p[2];
  void *v226;
  char v227[16];
  __int128 v228;
  __int16 v229;
  char v230[32];
  unsigned __int8 v231[32];
  _OWORD v232[2];
  _OWORD v233[2];
  char v234[32];
  char v235[16];
  int8x16_t v236[2];
  unsigned __int8 v237[32];
  unsigned __int8 v238[32];
  _OWORD v239[2];
  __int128 v240;
  char v241[16];
  char v242[32];
  char v243[32];
  _OWORD v244[2];
  __int128 v245;
  uint64_t v246;
  char v247[24];
  uint64_t v248;

  v248 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v247, "4ZAYk]YUSQkDU]FG");
  sub_2396EFA24((uint64_t)v247);
  v6 = v5;
  v7 = strlen(v5);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v224 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v224) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250AFFE48;
  v12[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  v245 = xmmword_239F0D7B9;
  v246 = 0x34352E26371823;
  sub_2396F1A4C((uint64_t)&v245, (int32x4_t)xmmword_239F0D7B9, v13, v14, v15);
  v17 = v16;
  v18 = strlen(v16);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = (void *)v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    v20 = operator new(v21 + 1);
    v221[1] = v19;
    v222 = v22 | 0x8000000000000000;
    v221[0] = v20;
    goto LABEL_16;
  }
  HIBYTE(v222) = v18;
  v20 = v221;
  if (v18)
LABEL_16:
    memmove(v20, v17, (size_t)v19);
  *((_BYTE *)v19 + (_QWORD)v20) = 0;
  v23 = (_QWORD *)operator new();
  *v23 = &off_250AFFE48;
  v23[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v221, (uint64_t)v23);
  v244[0] = xmmword_239F0D7D1;
  *(_OWORD *)((char *)v244 + 13) = *(__int128 *)((char *)&xmmword_239F0D7D1 + 13);
  sub_2396EFD48((uint64_t)v244, *(int32x4_t *)((char *)&xmmword_239F0D7D1 + 13), v24, v25, v26);
  v28 = v27;
  v29 = strlen(v27);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    v219[1] = v30;
    v220 = v33 | 0x8000000000000000;
    v219[0] = v31;
    goto LABEL_24;
  }
  HIBYTE(v220) = v29;
  v31 = v219;
  if (v29)
LABEL_24:
    memmove(v31, v28, (size_t)v30);
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  v34 = (_QWORD *)operator new();
  *v34 = &off_250AF38C0;
  v34[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v219, (uint64_t)v34);
  strcpy(v243, "$E@@A@{TEMVW{F]{GEIAVE{EJCHA");
  sub_2396EFD48((uint64_t)v243, *(int32x4_t *)"F]{GEIAVE{EJCHA", v35, v36, v37);
  v39 = v38;
  v40 = strlen(v38);
  if (v40 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v41 = (void *)v40;
  if (v40 >= 0x17)
  {
    v43 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v40 | 7) != 0x17)
      v43 = v40 | 7;
    v44 = v43 + 1;
    v42 = operator new(v43 + 1);
    v217[1] = v41;
    v218 = v44 | 0x8000000000000000;
    v217[0] = v42;
    goto LABEL_32;
  }
  HIBYTE(v218) = v40;
  v42 = v217;
  if (v40)
LABEL_32:
    memmove(v42, v39, (size_t)v41);
  *((_BYTE *)v41 + (_QWORD)v42) = 0;
  v45 = (_QWORD *)operator new();
  *v45 = &off_250AF38C0;
  v45[1] = a1 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v217, (uint64_t)v45);
  strcpy(v242, ">L[SQH[ZaN_WLMa\\Ga]_S[L_a_PYR[");
  sub_2396EFF58((uint64_t)v242, *(int32x4_t *)"\\Ga]_S[L_a_PYR[", v46, v47, v48);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v215[1] = v52;
    v216 = v55 | 0x8000000000000000;
    v215[0] = v53;
    goto LABEL_40;
  }
  HIBYTE(v216) = v51;
  v53 = v215;
  if (v51)
LABEL_40:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250AF38C0;
  v56[1] = a1 + 88;
  sub_23961580C((uint64_t)__p, (uint64_t)v215, (uint64_t)v56);
  v240 = xmmword_239F0D82A;
  strcpy(v241, "dBoxq|itkxBmrnx");
  sub_2396F06F0((uint64_t)&v240, (int32x4_t)xmmword_239F0D82A, *(int8x16_t *)"dBoxq|itkxBmrnx", v57, v58);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v213[1] = v62;
    v214 = v65 | 0x8000000000000000;
    v213[0] = v63;
    goto LABEL_48;
  }
  HIBYTE(v214) = v61;
  v63 = v213;
  if (v61)
LABEL_48:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AF38C0;
  v66[1] = a1 + 112;
  sub_23961580C((uint64_t)__p, (uint64_t)v213, (uint64_t)v66);
  v239[0] = xmmword_239F0D84A;
  *(_QWORD *)((char *)v239 + 15) = 0xF19141F081D11;
  sub_2396EFBE0((uint64_t)v239, (int32x4_t)xmmword_239F0D84A, v67, v68, v69);
  v71 = v70;
  v72 = strlen(v70);
  if (v72 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v73 = (void *)v72;
  if (v72 >= 0x17)
  {
    v75 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v72 | 7) != 0x17)
      v75 = v72 | 7;
    v76 = v75 + 1;
    v74 = operator new(v75 + 1);
    v211[1] = v73;
    v212 = v76 | 0x8000000000000000;
    v211[0] = v74;
    goto LABEL_56;
  }
  HIBYTE(v212) = v72;
  v74 = v211;
  if (v72)
LABEL_56:
    memmove(v74, v71, (size_t)v73);
  *((_BYTE *)v73 + (_QWORD)v74) = 0;
  v77 = (_QWORD *)operator new();
  *v77 = &off_250AFFE48;
  v77[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v211, (uint64_t)v77);
  *(_OWORD *)v238 = xmmword_239F0D861;
  *(_QWORD *)&v238[14] = 0x3A2C212A3D2824;
  v81 = sub_239A90BEC(v238, (int8x16_t)xmmword_239F0D861, v78, v79, v80);
  v82 = strlen((const char *)v81);
  if (v82 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v83 = (void *)v82;
  if (v82 >= 0x17)
  {
    v85 = (v82 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v82 | 7) != 0x17)
      v85 = v82 | 7;
    v86 = v85 + 1;
    v84 = operator new(v85 + 1);
    v209[1] = v83;
    v210 = v86 | 0x8000000000000000;
    v209[0] = v84;
    goto LABEL_64;
  }
  HIBYTE(v210) = v82;
  v84 = v209;
  if (v82)
LABEL_64:
    memmove(v84, v81, (size_t)v83);
  *((_BYTE *)v83 + (_QWORD)v84) = 0;
  v87 = (_QWORD *)operator new();
  *v87 = &off_250AFFE48;
  v87[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v209, (uint64_t)v87);
  *(_OWORD *)v237 = xmmword_239F0D877;
  *(_QWORD *)&v237[14] = 0x161B1007121ELL;
  v91 = sub_239A90BEC(v237, (int8x16_t)xmmword_239F0D877, v88, v89, v90);
  v92 = strlen((const char *)v91);
  if (v92 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v93 = (void *)v92;
  if (v92 >= 0x17)
  {
    v95 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v92 | 7) != 0x17)
      v95 = v92 | 7;
    v96 = v95 + 1;
    v94 = operator new(v95 + 1);
    v207[1] = v93;
    v208 = v96 | 0x8000000000000000;
    v207[0] = v94;
    goto LABEL_72;
  }
  HIBYTE(v208) = v92;
  v94 = v207;
  if (v92)
LABEL_72:
    memmove(v94, v91, (size_t)v93);
  *((_BYTE *)v93 + (_QWORD)v94) = 0;
  v97 = (_QWORD *)operator new();
  *v97 = &off_250AFFE48;
  v97[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v207, (uint64_t)v97);
  v98 = sub_239A91B18(v236);
  v99 = strlen(v98->i8);
  if (v99 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v100 = (void *)v99;
  if (v99 >= 0x17)
  {
    v102 = (v99 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v99 | 7) != 0x17)
      v102 = v99 | 7;
    v103 = v102 + 1;
    v101 = operator new(v102 + 1);
    v205[1] = v100;
    v206 = v103 | 0x8000000000000000;
    v205[0] = v101;
    goto LABEL_80;
  }
  HIBYTE(v206) = v99;
  v101 = v205;
  if (v99)
LABEL_80:
    memmove(v101, v98, (size_t)v100);
  *((_BYTE *)v100 + (_QWORD)v101) = 0;
  v104 = (_QWORD *)operator new();
  *v104 = &off_250AF38F0;
  v104[1] = a1 + 136;
  sub_23961580C((uint64_t)__p, (uint64_t)v205, (uint64_t)v104);
  strcpy(v235, "U' ;!<80\n<;3:");
  sub_23971A32C((uint64_t)v235, v105);
  v107 = v106;
  v108 = strlen(v106);
  if (v108 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v109 = (void *)v108;
  if (v108 >= 0x17)
  {
    v111 = (v108 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v108 | 7) != 0x17)
      v111 = v108 | 7;
    v112 = v111 + 1;
    v110 = operator new(v111 + 1);
    v203[1] = v109;
    v204 = v112 | 0x8000000000000000;
    v203[0] = v110;
    goto LABEL_88;
  }
  HIBYTE(v204) = v108;
  v110 = v203;
  if (v108)
LABEL_88:
    memmove(v110, v107, (size_t)v109);
  *((_BYTE *)v109 + (_QWORD)v110) = 0;
  v113 = (_QWORD *)operator new();
  *v113 = &off_250B002F8;
  v113[1] = a1 + 192;
  sub_23961580C((uint64_t)__p, (uint64_t)v203, (uint64_t)v113);
  strcpy(v234, ":SIeJHSUHeSTNHSTISYe[JJVS_^");
  sub_2396B946C((uint64_t)v234, *(int32x4_t *)"NHSTISYe[JJVS_^", v114, v115, v116);
  v118 = v117;
  v119 = strlen(v117);
  if (v119 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v120 = (void *)v119;
  if (v119 >= 0x17)
  {
    v122 = (v119 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v119 | 7) != 0x17)
      v122 = v119 | 7;
    v123 = v122 + 1;
    v121 = operator new(v122 + 1);
    v201[1] = v120;
    v202 = v123 | 0x8000000000000000;
    v201[0] = v121;
    goto LABEL_96;
  }
  HIBYTE(v202) = v119;
  v121 = v201;
  if (v119)
LABEL_96:
    memmove(v121, v118, (size_t)v120);
  *((_BYTE *)v120 + (_QWORD)v121) = 0;
  v124 = (_QWORD *)operator new();
  *v124 = &off_250AFFEA8;
  v124[1] = a1 + 264;
  sub_23961580C((uint64_t)__p, (uint64_t)v201, (uint64_t)v124);
  v233[0] = xmmword_239F0D956;
  *(_OWORD *)((char *)v233 + 13) = *(__int128 *)((char *)&xmmword_239F0D956 + 13);
  sub_2396EFD48((uint64_t)v233, *(int32x4_t *)((char *)&xmmword_239F0D956 + 13), v125, v126, v127);
  v129 = v128;
  v130 = strlen(v128);
  if (v130 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v131 = (void *)v130;
  if (v130 >= 0x17)
  {
    v133 = (v130 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v130 | 7) != 0x17)
      v133 = v130 | 7;
    v134 = v133 + 1;
    v132 = operator new(v133 + 1);
    v199[1] = v131;
    v200 = v134 | 0x8000000000000000;
    v199[0] = v132;
    goto LABEL_104;
  }
  HIBYTE(v200) = v130;
  v132 = v199;
  if (v130)
LABEL_104:
    memmove(v132, v129, (size_t)v131);
  *((_BYTE *)v131 + (_QWORD)v132) = 0;
  v135 = (_QWORD *)operator new();
  *v135 = &off_250AFFEA8;
  v135[1] = a1 + 265;
  sub_23961580C((uint64_t)__p, (uint64_t)v199, (uint64_t)v135);
  v232[0] = xmmword_239F0D973;
  *(_OWORD *)((char *)v232 + 12) = *(__int128 *)((char *)&xmmword_239F0D973 + 12);
  sub_2396B946C((uint64_t)v232, *(int32x4_t *)((char *)&xmmword_239F0D973 + 12), v136, v137, v138);
  v140 = v139;
  v141 = strlen(v139);
  if (v141 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v142 = (void *)v141;
  if (v141 >= 0x17)
  {
    v144 = (v141 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v141 | 7) != 0x17)
      v144 = v141 | 7;
    v145 = v144 + 1;
    v143 = operator new(v144 + 1);
    v197[1] = v142;
    v198 = v145 | 0x8000000000000000;
    v197[0] = v143;
    goto LABEL_112;
  }
  HIBYTE(v198) = v141;
  v143 = v197;
  if (v141)
LABEL_112:
    memmove(v143, v140, (size_t)v142);
  *((_BYTE *)v142 + (_QWORD)v143) = 0;
  v146 = (_QWORD *)operator new();
  *v146 = &off_250AFFEA8;
  v146[1] = a1 + 266;
  sub_23961580C((uint64_t)__p, (uint64_t)v197, (uint64_t)v146);
  *(_OWORD *)v231 = xmmword_239F0D98F;
  *(_OWORD *)&v231[10] = *(__int128 *)((char *)&xmmword_239F0D98F + 10);
  sub_239A93C04(v231, *(int32x4_t *)((char *)&xmmword_239F0D98F + 10), v147, v148, v149);
  v151 = v150;
  v152 = strlen(v150);
  if (v152 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v153 = (void *)v152;
  if (v152 >= 0x17)
  {
    v155 = (v152 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v152 | 7) != 0x17)
      v155 = v152 | 7;
    v156 = v155 + 1;
    v154 = operator new(v155 + 1);
    v195[1] = v153;
    v196 = v156 | 0x8000000000000000;
    v195[0] = v154;
    goto LABEL_120;
  }
  HIBYTE(v196) = v152;
  v154 = v195;
  if (v152)
LABEL_120:
    memmove(v154, v151, (size_t)v153);
  *((_BYTE *)v153 + (_QWORD)v154) = 0;
  v157 = (_QWORD *)operator new();
  *v157 = &off_250AFFEA8;
  v157[1] = a1 + 267;
  sub_23961580C((uint64_t)__p, (uint64_t)v195, (uint64_t)v157);
  strcpy(v230, "6_EiFD_YDiYT\\SUBiBDWU]iWFFZ_SR");
  sub_2396EFF58((uint64_t)v230, *(int32x4_t *)"BiBDWU]iWFFZ_SR", v158, v159, v160);
  v162 = v161;
  v163 = strlen(v161);
  if (v163 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v164 = (void *)v163;
  if (v163 >= 0x17)
  {
    v166 = (v163 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v163 | 7) != 0x17)
      v166 = v163 | 7;
    v167 = v166 + 1;
    v165 = operator new(v166 + 1);
    v193[1] = v164;
    v194 = v167 | 0x8000000000000000;
    v193[0] = v165;
    goto LABEL_128;
  }
  HIBYTE(v194) = v163;
  v165 = v193;
  if (v163)
LABEL_128:
    memmove(v165, v162, (size_t)v164);
  *((_BYTE *)v164 + (_QWORD)v165) = 0;
  v168 = (_QWORD *)operator new();
  *v168 = &off_250AFFEA8;
  v168[1] = a1 + 268;
  sub_23961580C((uint64_t)__p, (uint64_t)v193, (uint64_t)v168);
  v228 = xmmword_239F0DB46;
  v229 = 46;
  v169 = sub_239A91B18((int8x16_t *)&v228);
  v170 = strlen(v169->i8);
  if (v170 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v171 = (void *)v170;
  if (v170 >= 0x17)
  {
    v173 = (v170 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v170 | 7) != 0x17)
      v173 = v170 | 7;
    v174 = v173 + 1;
    v172 = operator new(v173 + 1);
    v191[1] = v171;
    v192 = v174 | 0x8000000000000000;
    v191[0] = v172;
    goto LABEL_136;
  }
  HIBYTE(v192) = v170;
  v172 = v191;
  if (v170)
LABEL_136:
    memmove(v172, v169, (size_t)v171);
  *((_BYTE *)v171 + (_QWORD)v172) = 0;
  v175 = (_QWORD *)operator new();
  *v175 = &off_250AF3920;
  v175[1] = a1 + 272;
  sub_23961580C((uint64_t)__p, (uint64_t)v191, (uint64_t)v175);
  strcpy(v227, "U &01\n6:;3<2");
  v176 = sub_239510ECC((uint64_t)v227);
  v177 = strlen(v176);
  if (v177 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v178 = (void *)v177;
  if (v177 >= 0x17)
  {
    v180 = (v177 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v177 | 7) != 0x17)
      v180 = v177 | 7;
    v181 = v180 + 1;
    v179 = operator new(v180 + 1);
    v189[1] = v178;
    v190 = v181 | 0x8000000000000000;
    v189[0] = v179;
    goto LABEL_144;
  }
  HIBYTE(v190) = v177;
  v179 = v189;
  if (v177)
LABEL_144:
    memmove(v179, v176, (size_t)v178);
  *((_BYTE *)v178 + (_QWORD)v179) = 0;
  v182 = (_QWORD *)operator new();
  *v182 = &off_250AF3980;
  v182[1] = a1 + 376;
  sub_23961580C((uint64_t)__p, (uint64_t)v189, (uint64_t)v182);
  if (SHIBYTE(v190) < 0)
  {
    operator delete(v189[0]);
    if ((SHIBYTE(v192) & 0x80000000) == 0)
    {
LABEL_147:
      if ((SHIBYTE(v194) & 0x80000000) == 0)
        goto LABEL_148;
      goto LABEL_177;
    }
  }
  else if ((SHIBYTE(v192) & 0x80000000) == 0)
  {
    goto LABEL_147;
  }
  operator delete(v191[0]);
  if ((SHIBYTE(v194) & 0x80000000) == 0)
  {
LABEL_148:
    if ((SHIBYTE(v196) & 0x80000000) == 0)
      goto LABEL_149;
    goto LABEL_178;
  }
LABEL_177:
  operator delete(v193[0]);
  if ((SHIBYTE(v196) & 0x80000000) == 0)
  {
LABEL_149:
    if ((SHIBYTE(v198) & 0x80000000) == 0)
      goto LABEL_150;
    goto LABEL_179;
  }
LABEL_178:
  operator delete(v195[0]);
  if ((SHIBYTE(v198) & 0x80000000) == 0)
  {
LABEL_150:
    if ((SHIBYTE(v200) & 0x80000000) == 0)
      goto LABEL_151;
    goto LABEL_180;
  }
LABEL_179:
  operator delete(v197[0]);
  if ((SHIBYTE(v200) & 0x80000000) == 0)
  {
LABEL_151:
    if ((SHIBYTE(v202) & 0x80000000) == 0)
      goto LABEL_152;
    goto LABEL_181;
  }
LABEL_180:
  operator delete(v199[0]);
  if ((SHIBYTE(v202) & 0x80000000) == 0)
  {
LABEL_152:
    if ((SHIBYTE(v204) & 0x80000000) == 0)
      goto LABEL_153;
    goto LABEL_182;
  }
LABEL_181:
  operator delete(v201[0]);
  if ((SHIBYTE(v204) & 0x80000000) == 0)
  {
LABEL_153:
    if ((SHIBYTE(v206) & 0x80000000) == 0)
      goto LABEL_154;
    goto LABEL_183;
  }
LABEL_182:
  operator delete(v203[0]);
  if ((SHIBYTE(v206) & 0x80000000) == 0)
  {
LABEL_154:
    if ((SHIBYTE(v208) & 0x80000000) == 0)
      goto LABEL_155;
    goto LABEL_184;
  }
LABEL_183:
  operator delete(v205[0]);
  if ((SHIBYTE(v208) & 0x80000000) == 0)
  {
LABEL_155:
    if ((SHIBYTE(v210) & 0x80000000) == 0)
      goto LABEL_156;
    goto LABEL_185;
  }
LABEL_184:
  operator delete(v207[0]);
  if ((SHIBYTE(v210) & 0x80000000) == 0)
  {
LABEL_156:
    if ((SHIBYTE(v212) & 0x80000000) == 0)
      goto LABEL_157;
    goto LABEL_186;
  }
LABEL_185:
  operator delete(v209[0]);
  if ((SHIBYTE(v212) & 0x80000000) == 0)
  {
LABEL_157:
    if ((SHIBYTE(v214) & 0x80000000) == 0)
      goto LABEL_158;
    goto LABEL_187;
  }
LABEL_186:
  operator delete(v211[0]);
  if ((SHIBYTE(v214) & 0x80000000) == 0)
  {
LABEL_158:
    if ((SHIBYTE(v216) & 0x80000000) == 0)
      goto LABEL_159;
    goto LABEL_188;
  }
LABEL_187:
  operator delete(v213[0]);
  if ((SHIBYTE(v216) & 0x80000000) == 0)
  {
LABEL_159:
    if ((SHIBYTE(v218) & 0x80000000) == 0)
      goto LABEL_160;
    goto LABEL_189;
  }
LABEL_188:
  operator delete(v215[0]);
  if ((SHIBYTE(v218) & 0x80000000) == 0)
  {
LABEL_160:
    if ((SHIBYTE(v220) & 0x80000000) == 0)
      goto LABEL_161;
    goto LABEL_190;
  }
LABEL_189:
  operator delete(v217[0]);
  if ((SHIBYTE(v220) & 0x80000000) == 0)
  {
LABEL_161:
    if ((SHIBYTE(v222) & 0x80000000) == 0)
      goto LABEL_162;
LABEL_191:
    operator delete(v221[0]);
    if ((SHIBYTE(v224) & 0x80000000) == 0)
      goto LABEL_163;
    goto LABEL_192;
  }
LABEL_190:
  operator delete(v219[0]);
  if (SHIBYTE(v222) < 0)
    goto LABEL_191;
LABEL_162:
  if ((SHIBYTE(v224) & 0x80000000) == 0)
    goto LABEL_163;
LABEL_192:
  operator delete(__dst[0]);
LABEL_163:
  sub_2395902F0((uint64_t)__p, a2);
  v183 = v226;
  if (v226)
  {
    do
    {
      v184 = v183[5];
      if (v184)
        (*(void (**)(uint64_t))(*(_QWORD *)v184 + 8))(v184);
      v183 = (_QWORD *)*v183;
    }
    while (v183);
    v185 = (void **)v226;
    if (v226)
    {
      do
      {
        v188 = (void **)*v185;
        if (*((char *)v185 + 39) < 0)
          operator delete(v185[2]);
        operator delete(v185);
        v185 = v188;
      }
      while (v188);
    }
  }
  v186 = __p[0];
  __p[0] = 0;
  if (v186)
    operator delete(v186);
  return a2;
}

void sub_239AE3560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,void *a60,uint64_t a61,uint64_t a62,char a63)
{
  sub_2395905C0((uint64_t)&a63);
  _Unwind_Resume(a1);
}

void sub_239AE3888(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE38AC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ADA8C4(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AE38E8()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AE3920(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE3944(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239ADE92C(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AE3980()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AE39B8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE39DC(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  sub_239AE07D4((uint64_t)&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AE3A28()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AE3A60(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE3A84(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(a1 + 8);
  v6 = (_QWORD *)(v4 + 8);
  v5 = *(_QWORD **)v4;
  if (a3)
    sub_239AE2074(v5, v6, (uint64_t)a2, *(_QWORD *)(v4 + 16));
  else
    sub_239AE21A0(v5, v6);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AE3AE0()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AE3B18(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE3B3C(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (!*(_BYTE *)(v3 + 192))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239AE85DC(v3, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AE3BA8(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int8x16_t v13;
  double v14;
  int32x4_t v15;
  const char *v16;
  const char *v17;
  size_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  double v24;
  int32x4_t v25;
  const char *v26;
  const char *v27;
  size_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  double v34;
  double v35;
  int16x8_t v36;
  const char *v37;
  const char *v38;
  size_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int8x16_t v45;
  double v46;
  int32x4_t v47;
  const char *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int8x16_t v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int8x8_t *v67;
  size_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  int8x16_t *v74;
  size_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  int16x8_t v81;
  const char *v82;
  const char *v83;
  size_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  const char *v90;
  const char *v91;
  size_t v92;
  void *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  int8x16_t v98;
  double v99;
  int32x4_t v100;
  const char *v101;
  const char *v102;
  size_t v103;
  void *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  const char *v109;
  size_t v110;
  void *v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  void **v118;
  void *v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  char *v126;
  void **v128;
  __int128 v129;
  __int128 v130;
  int v131;
  _QWORD *v132;
  _QWORD *v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  void *v138;
  char *v139;
  char v140;
  _OWORD v141[3];
  uint64_t v142;
  void *v143[2];
  unint64_t v144;
  void *v145[2];
  unint64_t v146;
  void *v147[2];
  unint64_t v148;
  void *v149[2];
  unint64_t v150;
  void *v151[2];
  unint64_t v152;
  void *v153[2];
  unint64_t v154;
  void *v155[2];
  unint64_t v156;
  void *v157[2];
  unint64_t v158;
  void *v159[2];
  unint64_t v160;
  void *v161[2];
  unint64_t v162;
  void *v163[2];
  unint64_t v164;
  void *__dst[2];
  unint64_t v166;
  int v167;
  void *__p[2];
  void *v169;
  char v170[16];
  _OWORD v171[2];
  __int128 v172;
  char v173;
  uint64_t v174;
  int v175;
  __int16 v176;
  __int128 v177;
  __int16 v178;
  int8x8_t v179[2];
  char v180[32];
  _OWORD v181[2];
  _OWORD v182[2];
  __int16 v183;
  char v184[48];
  _BYTE v185[25];
  char v186[16];
  uint64_t v187;

  v187 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 8);
  sub_239420EF4((uint64_t)&v129);
  sub_2396157EC((uint64_t)__p, a3);
  v167 = 3;
  strcpy(v186, "1_D\\nX\\PVTB");
  v6 = sub_23958E4C8((uint64_t)v186);
  v7 = strlen(v6);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    __dst[1] = v8;
    v166 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_8;
  }
  HIBYTE(v166) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250AFFF08;
  v12[1] = &v129;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  *(_OWORD *)v185 = xmmword_239F0D5DE;
  *(_OWORD *)&v185[9] = *(__int128 *)((char *)&xmmword_239F0D5DE + 9);
  sub_2396EFC88((uint64_t)v185, *(int32x4_t *)((char *)&xmmword_239F0D5DE + 9), v13, v14, v15);
  v17 = v16;
  v18 = strlen(v16);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = (void *)v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    v20 = operator new(v21 + 1);
    v163[1] = v19;
    v164 = v22 | 0x8000000000000000;
    v163[0] = v20;
    goto LABEL_16;
  }
  HIBYTE(v164) = v18;
  v20 = v163;
  if (v18)
LABEL_16:
    memmove(v20, v17, (size_t)v19);
  *((_BYTE *)v19 + (_QWORD)v20) = 0;
  v23 = (_QWORD *)operator new();
  *v23 = &off_250AFFF08;
  v23[1] = (char *)&v129 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v163, (uint64_t)v23);
  strcpy(v184, "4YQUZkRQU@AFQGk]ZkYUG_kDQFk]YUSQ");
  sub_2396EFE38((uint64_t)v184, *(int32x4_t *)"4YQUZkRQU@AFQGk]ZkYUG_kDQFk]YUSQ", *(int8x16_t *)"ZkYUG_kDQFk]YUSQ", v24, v25);
  v27 = v26;
  v28 = strlen(v26);
  if (v28 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v29 = (void *)v28;
  if (v28 >= 0x17)
  {
    v31 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v28 | 7) != 0x17)
      v31 = v28 | 7;
    v32 = v31 + 1;
    v30 = operator new(v31 + 1);
    v161[1] = v29;
    v162 = v32 | 0x8000000000000000;
    v161[0] = v30;
    goto LABEL_24;
  }
  HIBYTE(v162) = v28;
  v30 = v161;
  if (v28)
LABEL_24:
    memmove(v30, v27, (size_t)v29);
  *((_BYTE *)v29 + (_QWORD)v30) = 0;
  v33 = (_QWORD *)operator new();
  *v33 = &off_250ADF240;
  v33[1] = &v130;
  sub_23961580C((uint64_t)__p, (uint64_t)v161, (uint64_t)v33);
  v182[0] = xmmword_239F0D618;
  v182[1] = *(_OWORD *)dbl_239F0D628;
  v183 = 34;
  sub_2396F0120((unsigned __int8 *)v182, (int16x8_t)xmmword_239F0D618, dbl_239F0D628[0], v34, v35, v36);
  v38 = v37;
  v39 = strlen(v37);
  if (v39 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v40 = (void *)v39;
  if (v39 >= 0x17)
  {
    v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v39 | 7) != 0x17)
      v42 = v39 | 7;
    v43 = v42 + 1;
    v41 = operator new(v42 + 1);
    v159[1] = v40;
    v160 = v43 | 0x8000000000000000;
    v159[0] = v41;
    goto LABEL_32;
  }
  HIBYTE(v160) = v39;
  v41 = v159;
  if (v39)
LABEL_32:
    memmove(v41, v38, (size_t)v40);
  *((_BYTE *)v40 + (_QWORD)v41) = 0;
  v44 = (_QWORD *)operator new();
  *v44 = &off_250ADF240;
  v44[1] = (char *)&v130 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v159, (uint64_t)v44);
  v181[0] = xmmword_239F0D63A;
  *(_OWORD *)((char *)v181 + 11) = *(__int128 *)((char *)&xmmword_239F0D63A + 11);
  sub_2396F1974((uint64_t)v181, *(int32x4_t *)((char *)&xmmword_239F0D63A + 11), v45, v46, v47);
  v49 = v48;
  v50 = strlen(v48);
  if (v50 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v51 = (void *)v50;
  if (v50 >= 0x17)
  {
    v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v50 | 7) != 0x17)
      v53 = v50 | 7;
    v54 = v53 + 1;
    v52 = operator new(v53 + 1);
    v157[1] = v51;
    v158 = v54 | 0x8000000000000000;
    v157[0] = v52;
    goto LABEL_40;
  }
  HIBYTE(v158) = v50;
  v52 = v157;
  if (v50)
LABEL_40:
    memmove(v52, v49, (size_t)v51);
  *((_BYTE *)v51 + (_QWORD)v52) = 0;
  v55 = (_QWORD *)operator new();
  *v55 = &off_250AE0670;
  v55[1] = (char *)&v130 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v157, (uint64_t)v55);
  strcpy(v180, "$ERC{PA\\PQVA{WGKVA{KQP{IEWO");
  sub_2396B946C((uint64_t)v180, *(int32x4_t *)"{WGKVA{KQP{IEWO", v56, v57, v58);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v155[1] = v62;
    v156 = v65 | 0x8000000000000000;
    v155[0] = v63;
    goto LABEL_48;
  }
  HIBYTE(v156) = v61;
  v63 = v155;
  if (v61)
LABEL_48:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AE0670;
  v66[1] = (char *)&v130 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v155, (uint64_t)v66);
  strcpy((char *)v179, ">WS_Y[aYN");
  v67 = sub_23950FF84(v179);
  v68 = strlen((const char *)v67);
  if (v68 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v69 = (void *)v68;
  if (v68 >= 0x17)
  {
    v71 = (v68 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v68 | 7) != 0x17)
      v71 = v68 | 7;
    v72 = v71 + 1;
    v70 = operator new(v71 + 1);
    v153[1] = v69;
    v154 = v72 | 0x8000000000000000;
    v153[0] = v70;
    goto LABEL_56;
  }
  HIBYTE(v154) = v68;
  v70 = v153;
  if (v68)
LABEL_56:
    memmove(v70, v67, (size_t)v69);
  *((_BYTE *)v69 + (_QWORD)v70) = 0;
  v73 = (_QWORD *)operator new();
  *v73 = &off_250AE0670;
  v73[1] = &v131;
  sub_23961580C((uint64_t)__p, (uint64_t)v153, (uint64_t)v73);
  v177 = xmmword_239F0D6CD;
  v178 = 120;
  v74 = sub_239A91B18((int8x16_t *)&v177);
  v75 = strlen(v74->i8);
  if (v75 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v76 = (void *)v75;
  if (v75 >= 0x17)
  {
    v78 = (v75 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v75 | 7) != 0x17)
      v78 = v75 | 7;
    v79 = v78 + 1;
    v77 = operator new(v78 + 1);
    v151[1] = v76;
    v152 = v79 | 0x8000000000000000;
    v151[0] = v77;
    goto LABEL_64;
  }
  HIBYTE(v152) = v75;
  v77 = v151;
  if (v75)
LABEL_64:
    memmove(v77, v74, (size_t)v76);
  *((_BYTE *)v76 + (_QWORD)v77) = 0;
  v80 = (_QWORD *)operator new();
  *v80 = &off_250AF3830;
  v80[1] = &v132;
  sub_23961580C((uint64_t)__p, (uint64_t)v151, (uint64_t)v80);
  v174 = 0x1911150812090E7CLL;
  v176 = 19;
  v175 = 437392675;
  sub_23971A32C((uint64_t)&v174, v81);
  v83 = v82;
  v84 = strlen(v82);
  if (v84 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v85 = (void *)v84;
  if (v84 >= 0x17)
  {
    v87 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v84 | 7) != 0x17)
      v87 = v84 | 7;
    v88 = v87 + 1;
    v86 = operator new(v87 + 1);
    v149[1] = v85;
    v150 = v88 | 0x8000000000000000;
    v149[0] = v86;
    goto LABEL_72;
  }
  HIBYTE(v150) = v84;
  v86 = v149;
  if (v84)
LABEL_72:
    memmove(v86, v83, (size_t)v85);
  *((_BYTE *)v85 + (_QWORD)v86) = 0;
  v89 = (_QWORD *)operator new();
  *v89 = &off_250AFFFF8;
  v89[1] = &v134;
  sub_23961580C((uint64_t)__p, (uint64_t)v149, (uint64_t)v89);
  v172 = xmmword_239F0D6DF;
  v173 = 0;
  sub_2396EFA24((uint64_t)&v172);
  v91 = v90;
  v92 = strlen(v90);
  if (v92 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v93 = (void *)v92;
  if (v92 >= 0x17)
  {
    v95 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v92 | 7) != 0x17)
      v95 = v92 | 7;
    v96 = v95 + 1;
    v94 = operator new(v95 + 1);
    v147[1] = v93;
    v148 = v96 | 0x8000000000000000;
    v147[0] = v94;
    goto LABEL_80;
  }
  HIBYTE(v148) = v92;
  v94 = v147;
  if (v92)
LABEL_80:
    memmove(v94, v91, (size_t)v93);
  *((_BYTE *)v93 + (_QWORD)v94) = 0;
  v97 = (_QWORD *)operator new();
  *v97 = &off_250AE0220;
  v97[1] = v141;
  sub_23961580C((uint64_t)__p, (uint64_t)v147, (uint64_t)v97);
  v171[0] = xmmword_239F0D6F0;
  *(_OWORD *)((char *)v171 + 11) = *(__int128 *)((char *)&xmmword_239F0D6F0 + 11);
  sub_2396F1974((uint64_t)v171, *(int32x4_t *)((char *)&xmmword_239F0D6F0 + 11), v98, v99, v100);
  v102 = v101;
  v103 = strlen(v101);
  if (v103 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v104 = (void *)v103;
  if (v103 >= 0x17)
  {
    v106 = (v103 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v103 | 7) != 0x17)
      v106 = v103 | 7;
    v107 = v106 + 1;
    v105 = operator new(v106 + 1);
    v145[1] = v104;
    v146 = v107 | 0x8000000000000000;
    v145[0] = v105;
    goto LABEL_88;
  }
  HIBYTE(v146) = v103;
  v105 = v145;
  if (v103)
LABEL_88:
    memmove(v105, v102, (size_t)v104);
  *((_BYTE *)v104 + (_QWORD)v105) = 0;
  v108 = (_QWORD *)operator new();
  *v108 = &off_250ADF240;
  v108[1] = &v167;
  sub_23961580C((uint64_t)__p, (uint64_t)v145, (uint64_t)v108);
  v109 = sub_239510ECC((uint64_t)v170);
  v110 = strlen(v109);
  if (v110 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v111 = (void *)v110;
  if (v110 >= 0x17)
  {
    v113 = (v110 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v110 | 7) != 0x17)
      v113 = v110 | 7;
    v114 = v113 + 1;
    v112 = operator new(v113 + 1);
    v143[1] = v111;
    v144 = v114 | 0x8000000000000000;
    v143[0] = v112;
    goto LABEL_96;
  }
  HIBYTE(v144) = v110;
  v112 = v143;
  if (v110)
LABEL_96:
    memmove(v112, v109, (size_t)v111);
  *((_BYTE *)v111 + (_QWORD)v112) = 0;
  v115 = (_QWORD *)operator new();
  *v115 = &off_250AF3860;
  v115[1] = (char *)v141 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v143, (uint64_t)v115);
  if (SHIBYTE(v144) < 0)
  {
    operator delete(v143[0]);
    if ((SHIBYTE(v146) & 0x80000000) == 0)
    {
LABEL_99:
      if ((SHIBYTE(v148) & 0x80000000) == 0)
        goto LABEL_100;
      goto LABEL_130;
    }
  }
  else if ((SHIBYTE(v146) & 0x80000000) == 0)
  {
    goto LABEL_99;
  }
  operator delete(v145[0]);
  if ((SHIBYTE(v148) & 0x80000000) == 0)
  {
LABEL_100:
    if ((SHIBYTE(v150) & 0x80000000) == 0)
      goto LABEL_101;
    goto LABEL_131;
  }
LABEL_130:
  operator delete(v147[0]);
  if ((SHIBYTE(v150) & 0x80000000) == 0)
  {
LABEL_101:
    if ((SHIBYTE(v152) & 0x80000000) == 0)
      goto LABEL_102;
    goto LABEL_132;
  }
LABEL_131:
  operator delete(v149[0]);
  if ((SHIBYTE(v152) & 0x80000000) == 0)
  {
LABEL_102:
    if ((SHIBYTE(v154) & 0x80000000) == 0)
      goto LABEL_103;
    goto LABEL_133;
  }
LABEL_132:
  operator delete(v151[0]);
  if ((SHIBYTE(v154) & 0x80000000) == 0)
  {
LABEL_103:
    if ((SHIBYTE(v156) & 0x80000000) == 0)
      goto LABEL_104;
    goto LABEL_134;
  }
LABEL_133:
  operator delete(v153[0]);
  if ((SHIBYTE(v156) & 0x80000000) == 0)
  {
LABEL_104:
    if ((SHIBYTE(v158) & 0x80000000) == 0)
      goto LABEL_105;
    goto LABEL_135;
  }
LABEL_134:
  operator delete(v155[0]);
  if ((SHIBYTE(v158) & 0x80000000) == 0)
  {
LABEL_105:
    if ((SHIBYTE(v160) & 0x80000000) == 0)
      goto LABEL_106;
    goto LABEL_136;
  }
LABEL_135:
  operator delete(v157[0]);
  if ((SHIBYTE(v160) & 0x80000000) == 0)
  {
LABEL_106:
    if ((SHIBYTE(v162) & 0x80000000) == 0)
      goto LABEL_107;
    goto LABEL_137;
  }
LABEL_136:
  operator delete(v159[0]);
  if ((SHIBYTE(v162) & 0x80000000) == 0)
  {
LABEL_107:
    if ((SHIBYTE(v164) & 0x80000000) == 0)
      goto LABEL_108;
LABEL_138:
    operator delete(v163[0]);
    if ((SHIBYTE(v166) & 0x80000000) == 0)
      goto LABEL_109;
    goto LABEL_139;
  }
LABEL_137:
  operator delete(v161[0]);
  if (SHIBYTE(v164) < 0)
    goto LABEL_138;
LABEL_108:
  if ((SHIBYTE(v166) & 0x80000000) == 0)
    goto LABEL_109;
LABEL_139:
  operator delete(__dst[0]);
LABEL_109:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
    DWORD1(v141[0]) = v167;
  v116 = v169;
  if (v169)
  {
    do
    {
      v117 = v116[5];
      if (v117)
        (*(void (**)(uint64_t))(*(_QWORD *)v117 + 8))(v117);
      v116 = (_QWORD *)*v116;
    }
    while (v116);
    v118 = (void **)v169;
    if (v169)
    {
      do
      {
        v128 = (void **)*v118;
        if (*((char *)v118 + 39) < 0)
          operator delete(v118[2]);
        operator delete(v118);
        v118 = v128;
      }
      while (v128);
    }
  }
  v119 = __p[0];
  __p[0] = 0;
  if (v119)
    operator delete(v119);
  if (!*(_BYTE *)(v5 + 192))
  {
    sub_239AE4BA8(v5, &v129);
    *(_BYTE *)(v5 + 192) = 1;
    v126 = (char *)v138;
    if (!v138)
      goto LABEL_124;
    goto LABEL_123;
  }
  v120 = v129;
  v121 = v130;
  *(_DWORD *)(v5 + 32) = v131;
  *(_OWORD *)v5 = v120;
  *(_OWORD *)(v5 + 16) = v121;
  if (&v129 != (__int128 *)v5)
  {
    sub_239421078((_QWORD *)(v5 + 40), v132, &v133);
    *(_OWORD *)(v5 + 64) = v134;
    *(_QWORD *)(v5 + 80) = v135;
    v122 = v136;
    *(_DWORD *)(v5 + 96) = v137;
    *(_QWORD *)(v5 + 88) = v122;
    sub_23942156C((_QWORD *)(v5 + 104), (char *)v138, v139, (v139 - (_BYTE *)v138) >> 2);
  }
  *(_BYTE *)(v5 + 128) = v140;
  v123 = v141[0];
  v124 = v141[1];
  v125 = v141[2];
  *(_QWORD *)(v5 + 184) = v142;
  *(_OWORD *)(v5 + 168) = v125;
  *(_OWORD *)(v5 + 152) = v124;
  *(_OWORD *)(v5 + 136) = v123;
  v126 = (char *)v138;
  if (v138)
  {
LABEL_123:
    v139 = v126;
    operator delete(v126);
  }
LABEL_124:
  sub_239421038((uint64_t)&v132, v133);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AE48E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  _QWORD *v72;
  uint64_t v73;
  void **v74;
  void *v75;
  void **v76;

  v72 = (_QWORD *)STACK[0x200];
  if (STACK[0x200])
  {
    do
    {
      v73 = v72[5];
      if (v73)
        (*(void (**)(uint64_t))(*(_QWORD *)v73 + 8))(v73);
      v72 = (_QWORD *)*v72;
    }
    while (v72);
    v74 = (void **)STACK[0x200];
    if (STACK[0x200])
    {
      do
      {
        v76 = (void **)*v74;
        if (*((char *)v74 + 39) < 0)
          operator delete(v74[2]);
        operator delete(v74);
        v74 = v76;
      }
      while (v76);
    }
  }
  v75 = __p;
  __p = 0;
  if (v75)
    operator delete(v75);
  if (a23)
  {
    a24 = (uint64_t)a23;
    operator delete(a23);
  }
  sub_239421038((uint64_t)&a15, (_QWORD *)a16);
  _Unwind_Resume(a1);
}

void sub_239AE4B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (!a23)
    JUMPOUT(0x239AE4AC8);
  JUMPOUT(0x239AE4AC0);
}

uint64_t sub_239AE4BA8(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  int v8;
  _BYTE *v9;
  _BYTE *v10;
  int64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *a2;
  v5 = a2[1];
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 40) = a1 + 48;
  *(_QWORD *)(a1 + 56) = 0;
  sub_239A634AC((uint64_t *)(a1 + 40), *((_QWORD **)a2 + 5), (_QWORD *)a2 + 6);
  v6 = a2[4];
  v7 = a2[5];
  v8 = *((_DWORD *)a2 + 24);
  *(_QWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  v10 = (_BYTE *)*((_QWORD *)a2 + 13);
  v9 = (_BYTE *)*((_QWORD *)a2 + 14);
  v11 = v9 - v10;
  if (v9 != v10)
  {
    if (v11 < 0)
      sub_2394189F8();
    v12 = (char *)operator new(v9 - v10);
    *(_QWORD *)(a1 + 104) = v12;
    *(_QWORD *)(a1 + 112) = v12;
    v13 = &v12[4 * (v11 >> 2)];
    *(_QWORD *)(a1 + 120) = v13;
    memcpy(v12, v10, v11);
    *(_QWORD *)(a1 + 112) = v13;
  }
  *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
  v14 = *(__int128 *)((char *)a2 + 136);
  v15 = *(__int128 *)((char *)a2 + 152);
  v16 = *(__int128 *)((char *)a2 + 168);
  *(_QWORD *)(a1 + 184) = *((_QWORD *)a2 + 23);
  *(_OWORD *)(a1 + 168) = v16;
  *(_OWORD *)(a1 + 152) = v15;
  *(_OWORD *)(a1 + 136) = v14;
  return a1;
}

void sub_239AE4CA4(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD **v2;

  sub_239421038(v1, *v2);
  _Unwind_Resume(a1);
}

void sub_239AE4CD8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE4CFC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AE5C2C(*(_DWORD **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AE4D38(uint64_t a1, uint64_t *a2, char a3)
{
  _DWORD *v4;
  int16x8_t v5;
  const char *v6;
  const char *v7;
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int8x16_t *v14;
  size_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  const char *v21;
  size_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int8x16_t v28;
  double v29;
  int32x4_t v30;
  const char *v31;
  const char *v32;
  size_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  const char *v39;
  size_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int8x16_t v46;
  double v47;
  int32x4_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  int8x16_t v57;
  double v58;
  int32x4_t v59;
  const char *v60;
  const char *v61;
  size_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  int8x16_t v68;
  double v69;
  int32x4_t v70;
  const char *v71;
  const char *v72;
  size_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  int8x16_t v79;
  double v80;
  int32x4_t v81;
  const char *v82;
  const char *v83;
  size_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  int8x16_t *v90;
  size_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  int8x16_t v97;
  double v98;
  int32x4_t v99;
  const char *v100;
  const char *v101;
  size_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  const char *v108;
  size_t v109;
  void *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  int v115;
  _QWORD *v116;
  uint64_t v117;
  void **v118;
  void *v119;
  void **v121;
  void *v122[2];
  unint64_t v123;
  void *v124[2];
  unint64_t v125;
  void *v126[2];
  unint64_t v127;
  void *v128[2];
  unint64_t v129;
  void *v130[2];
  unint64_t v131;
  void *v132[2];
  unint64_t v133;
  void *v134[2];
  unint64_t v135;
  void *v136[2];
  unint64_t v137;
  void *v138[2];
  unint64_t v139;
  void *v140[2];
  unint64_t v141;
  void *v142[2];
  unint64_t v143;
  void *__dst[2];
  unint64_t v145;
  int v146;
  int v147;
  uint64_t v148;
  void *__p[2];
  void *v150;
  uint64_t v151;
  char v152[8];
  char v153[32];
  int8x16_t v154[2];
  _OWORD v155[2];
  char v156[32];
  char v157[32];
  char v158[32];
  uint64_t v159;
  __int16 v160;
  char v161;
  _OWORD v162[2];
  uint64_t v163;
  char v164[8];
  _BYTE v165[24];
  uint64_t v166;
  char v167[8];
  uint64_t v168;

  v168 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD **)(a1 + 8);
  *(double *)v5.i64 = sub_2396157EC((uint64_t)__p, a3);
  v148 = 0;
  v147 = 2;
  v146 = 3;
  v166 = 0x69636751766F630ELL;
  strcpy(v167, "Q}gtk");
  sub_23971A32C((uint64_t)&v166, v5);
  v7 = v6;
  v8 = strlen(v6);
  if (v8 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v10 = (void **)operator new(v11 + 1);
    __dst[1] = v9;
    v145 = v12 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_8;
  }
  HIBYTE(v145) = v8;
  v10 = __dst;
  if (v8)
LABEL_8:
    memmove(v10, v7, (size_t)v9);
  *((_BYTE *)v9 + (_QWORD)v10) = 0;
  v13 = (_QWORD *)operator new();
  *v13 = &off_250ADF240;
  v13[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v13);
  strcpy(v165, "!OTL~R@LQMDE~JQUR");
  v14 = sub_239A91B18((int8x16_t *)v165);
  v15 = strlen(v14->i8);
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v16 = (void *)v15;
  if (v15 >= 0x17)
  {
    v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v18 = v15 | 7;
    v19 = v18 + 1;
    v17 = operator new(v18 + 1);
    v142[1] = v16;
    v143 = v19 | 0x8000000000000000;
    v142[0] = v17;
    goto LABEL_16;
  }
  HIBYTE(v143) = v15;
  v17 = v142;
  if (v15)
LABEL_16:
    memmove(v17, v14, (size_t)v16);
  *((_BYTE *)v16 + (_QWORD)v17) = 0;
  v20 = (_QWORD *)operator new();
  *v20 = &off_250ADF240;
  v20[1] = v4 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v142, (uint64_t)v20);
  v163 = 0x3C263A11233B204ELL;
  strcpy(v164, "+/*=");
  v21 = sub_239510ECC((uint64_t)&v163);
  v22 = strlen(v21);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = (void *)v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    v140[1] = v23;
    v141 = v26 | 0x8000000000000000;
    v140[0] = v24;
    goto LABEL_24;
  }
  HIBYTE(v141) = v22;
  v24 = v140;
  if (v22)
LABEL_24:
    memmove(v24, v21, (size_t)v23);
  *((_BYTE *)v23 + (_QWORD)v24) = 0;
  v27 = (_QWORD *)operator new();
  *v27 = &off_250ADF240;
  v27[1] = v4 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v140, (uint64_t)v27);
  v162[0] = xmmword_239F0D71D;
  *(_DWORD *)((char *)v162 + 15) = 8348003;
  sub_23958E450((uint64_t)v162, (int32x4_t)xmmword_239F0D71D, v28, v29, v30);
  v32 = v31;
  v33 = strlen(v31);
  if (v33 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v34 = (void *)v33;
  if (v33 >= 0x17)
  {
    v36 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17)
      v36 = v33 | 7;
    v37 = v36 + 1;
    v35 = operator new(v36 + 1);
    v138[1] = v34;
    v139 = v37 | 0x8000000000000000;
    v138[0] = v35;
    goto LABEL_32;
  }
  HIBYTE(v139) = v33;
  v35 = v138;
  if (v33)
LABEL_32:
    memmove(v35, v32, (size_t)v34);
  *((_BYTE *)v34 + (_QWORD)v35) = 0;
  v38 = (_QWORD *)operator new();
  *v38 = &off_250ADF240;
  v38[1] = &v148;
  sub_23961580C((uint64_t)__p, (uint64_t)v138, (uint64_t)v38);
  v159 = 0x1E13380414020367;
  v161 = 0;
  v160 = 535;
  v39 = (const char *)sub_23958E518((uint64_t)&v159);
  v40 = strlen(v39);
  if (v40 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v41 = (void *)v40;
  if (v40 >= 0x17)
  {
    v43 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v40 | 7) != 0x17)
      v43 = v40 | 7;
    v44 = v43 + 1;
    v42 = operator new(v43 + 1);
    v136[1] = v41;
    v137 = v44 | 0x8000000000000000;
    v136[0] = v42;
    goto LABEL_40;
  }
  HIBYTE(v137) = v40;
  v42 = v136;
  if (v40)
LABEL_40:
    memmove(v42, v39, (size_t)v41);
  *((_BYTE *)v41 + (_QWORD)v42) = 0;
  v45 = (_QWORD *)operator new();
  *v45 = &off_250ADF240;
  v45[1] = (char *)&v148 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v136, (uint64_t)v45);
  strcpy(v158, "\"WQG}OCQI}KD}CTCKNC@NG");
  sub_2396EFBE0((uint64_t)v158, *(int32x4_t *)"\"WQG}OCQI}KD}CTCKNC@NG", v46, v47, v48);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v134[1] = v52;
    v135 = v55 | 0x8000000000000000;
    v134[0] = v53;
    goto LABEL_48;
  }
  HIBYTE(v135) = v51;
  v53 = v134;
  if (v51)
LABEL_48:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250AE0220;
  v56[1] = v4 + 5;
  sub_23961580C((uint64_t)__p, (uint64_t)v134, (uint64_t)v56);
  strcpy(v157, "*GFuIEGZ_^OuZFK^LEXG");
  sub_2396EFB50((uint64_t)v157, *(int32x4_t *)"*GFuIEGZ_^OuZFK^LEXG", v57, v58, v59);
  v61 = v60;
  v62 = strlen(v60);
  if (v62 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v63 = (void *)v62;
  if (v62 >= 0x17)
  {
    v65 = (v62 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v62 | 7) != 0x17)
      v65 = v62 | 7;
    v66 = v65 + 1;
    v64 = operator new(v65 + 1);
    v132[1] = v63;
    v133 = v66 | 0x8000000000000000;
    v132[0] = v64;
    goto LABEL_56;
  }
  HIBYTE(v133) = v62;
  v64 = v132;
  if (v62)
LABEL_56:
    memmove(v64, v61, (size_t)v63);
  *((_BYTE *)v63 + (_QWORD)v64) = 0;
  v67 = (_QWORD *)operator new();
  *v67 = &off_250ADF240;
  v67[1] = &v147;
  sub_23961580C((uint64_t)__p, (uint64_t)v132, (uint64_t)v67);
  strcpy(v156, "2Q]\\F@SAFmFZ@WAZ]^V");
  sub_23958E55C((uint64_t)v156, *(int32x4_t *)"2Q]\\F@SAFmFZ@WAZ]^V", v68, v69, v70);
  v72 = v71;
  v73 = strlen(v71);
  if (v73 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v74 = (void *)v73;
  if (v73 >= 0x17)
  {
    v76 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v73 | 7) != 0x17)
      v76 = v73 | 7;
    v77 = v76 + 1;
    v75 = operator new(v76 + 1);
    v130[1] = v74;
    v131 = v77 | 0x8000000000000000;
    v130[0] = v75;
    goto LABEL_64;
  }
  HIBYTE(v131) = v73;
  v75 = v130;
  if (v73)
LABEL_64:
    memmove(v75, v72, (size_t)v74);
  *((_BYTE *)v74 + (_QWORD)v75) = 0;
  v78 = (_QWORD *)operator new();
  *v78 = &off_250AE0670;
  v78[1] = v4 + 7;
  sub_23961580C((uint64_t)__p, (uint64_t)v130, (uint64_t)v78);
  v155[0] = xmmword_239F0D770;
  *(_DWORD *)((char *)v155 + 15) = 2105639;
  sub_23958E450((uint64_t)v155, (int32x4_t)xmmword_239F0D770, v79, v80, v81);
  v83 = v82;
  v84 = strlen(v82);
  if (v84 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v85 = (void *)v84;
  if (v84 >= 0x17)
  {
    v87 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v84 | 7) != 0x17)
      v87 = v84 | 7;
    v88 = v87 + 1;
    v86 = operator new(v87 + 1);
    v128[1] = v85;
    v129 = v88 | 0x8000000000000000;
    v128[0] = v86;
    goto LABEL_72;
  }
  HIBYTE(v129) = v84;
  v86 = v128;
  if (v84)
LABEL_72:
    memmove(v86, v83, (size_t)v85);
  *((_BYTE *)v85 + (_QWORD)v86) = 0;
  v89 = (_QWORD *)operator new();
  *v89 = &off_250AE0220;
  v89[1] = v4 + 9;
  sub_23961580C((uint64_t)__p, (uint64_t)v128, (uint64_t)v89);
  strcpy(v154[0].i8, "R?'>&;\r&: 736\r6=5");
  v90 = sub_239A91B18(v154);
  v91 = strlen(v90->i8);
  if (v91 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v92 = (void *)v91;
  if (v91 >= 0x17)
  {
    v94 = (v91 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v91 | 7) != 0x17)
      v94 = v91 | 7;
    v95 = v94 + 1;
    v93 = operator new(v94 + 1);
    v126[1] = v92;
    v127 = v95 | 0x8000000000000000;
    v126[0] = v93;
    goto LABEL_80;
  }
  HIBYTE(v127) = v91;
  v93 = v126;
  if (v91)
LABEL_80:
    memmove(v93, v90, (size_t)v92);
  *((_BYTE *)v92 + (_QWORD)v93) = 0;
  v96 = (_QWORD *)operator new();
  *v96 = &off_250AE0220;
  v96[1] = (char *)v4 + 37;
  sub_23961580C((uint64_t)__p, (uint64_t)v126, (uint64_t)v96);
  strcpy(v153, "W<'#\b32#24#8%\b#.'2");
  sub_23958E450((uint64_t)v153, *(int32x4_t *)"W<'#\b32#24#8%\b#.'2", v97, v98, v99);
  v101 = v100;
  v102 = strlen(v100);
  if (v102 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v103 = (void *)v102;
  if (v102 >= 0x17)
  {
    v105 = (v102 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v102 | 7) != 0x17)
      v105 = v102 | 7;
    v106 = v105 + 1;
    v104 = operator new(v105 + 1);
    v124[1] = v103;
    v125 = v106 | 0x8000000000000000;
    v124[0] = v104;
    goto LABEL_88;
  }
  HIBYTE(v125) = v102;
  v104 = v124;
  if (v102)
LABEL_88:
    memmove(v104, v101, (size_t)v103);
  *((_BYTE *)v103 + (_QWORD)v104) = 0;
  v107 = (_QWORD *)operator new();
  *v107 = &off_250ADF240;
  v107[1] = &v146;
  sub_23961580C((uint64_t)__p, (uint64_t)v124, (uint64_t)v107);
  v151 = 0x392E22122038234DLL;
  strcpy(v152, ",;(>");
  v108 = sub_239510ECC((uint64_t)&v151);
  v109 = strlen(v108);
  if (v109 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v110 = (void *)v109;
  if (v109 >= 0x17)
  {
    v112 = (v109 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v109 | 7) != 0x17)
      v112 = v109 | 7;
    v113 = v112 + 1;
    v111 = operator new(v112 + 1);
    v122[1] = v110;
    v123 = v113 | 0x8000000000000000;
    v122[0] = v111;
    goto LABEL_96;
  }
  HIBYTE(v123) = v109;
  v111 = v122;
  if (v109)
LABEL_96:
    memmove(v111, v108, (size_t)v110);
  *((_BYTE *)v110 + (_QWORD)v111) = 0;
  v114 = (_QWORD *)operator new();
  *v114 = &off_250ADF240;
  v114[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v122, (uint64_t)v114);
  if (SHIBYTE(v123) < 0)
  {
    operator delete(v122[0]);
    if ((SHIBYTE(v125) & 0x80000000) == 0)
    {
LABEL_99:
      if ((SHIBYTE(v127) & 0x80000000) == 0)
        goto LABEL_100;
      goto LABEL_125;
    }
  }
  else if ((SHIBYTE(v125) & 0x80000000) == 0)
  {
    goto LABEL_99;
  }
  operator delete(v124[0]);
  if ((SHIBYTE(v127) & 0x80000000) == 0)
  {
LABEL_100:
    if ((SHIBYTE(v129) & 0x80000000) == 0)
      goto LABEL_101;
    goto LABEL_126;
  }
LABEL_125:
  operator delete(v126[0]);
  if ((SHIBYTE(v129) & 0x80000000) == 0)
  {
LABEL_101:
    if ((SHIBYTE(v131) & 0x80000000) == 0)
      goto LABEL_102;
    goto LABEL_127;
  }
LABEL_126:
  operator delete(v128[0]);
  if ((SHIBYTE(v131) & 0x80000000) == 0)
  {
LABEL_102:
    if ((SHIBYTE(v133) & 0x80000000) == 0)
      goto LABEL_103;
    goto LABEL_128;
  }
LABEL_127:
  operator delete(v130[0]);
  if ((SHIBYTE(v133) & 0x80000000) == 0)
  {
LABEL_103:
    if ((SHIBYTE(v135) & 0x80000000) == 0)
      goto LABEL_104;
    goto LABEL_129;
  }
LABEL_128:
  operator delete(v132[0]);
  if ((SHIBYTE(v135) & 0x80000000) == 0)
  {
LABEL_104:
    if ((SHIBYTE(v137) & 0x80000000) == 0)
      goto LABEL_105;
    goto LABEL_130;
  }
LABEL_129:
  operator delete(v134[0]);
  if ((SHIBYTE(v137) & 0x80000000) == 0)
  {
LABEL_105:
    if ((SHIBYTE(v139) & 0x80000000) == 0)
      goto LABEL_106;
    goto LABEL_131;
  }
LABEL_130:
  operator delete(v136[0]);
  if ((SHIBYTE(v139) & 0x80000000) == 0)
  {
LABEL_106:
    if ((SHIBYTE(v141) & 0x80000000) == 0)
      goto LABEL_107;
    goto LABEL_132;
  }
LABEL_131:
  operator delete(v138[0]);
  if ((SHIBYTE(v141) & 0x80000000) == 0)
  {
LABEL_107:
    if ((SHIBYTE(v143) & 0x80000000) == 0)
      goto LABEL_108;
LABEL_133:
    operator delete(v142[0]);
    if ((SHIBYTE(v145) & 0x80000000) == 0)
      goto LABEL_109;
    goto LABEL_134;
  }
LABEL_132:
  operator delete(v140[0]);
  if (SHIBYTE(v143) < 0)
    goto LABEL_133;
LABEL_108:
  if ((SHIBYTE(v145) & 0x80000000) == 0)
    goto LABEL_109;
LABEL_134:
  operator delete(__dst[0]);
LABEL_109:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
  {
    v115 = v148;
    v4[3] = HIDWORD(v148);
    v4[4] = v115;
    v4[6] = v147;
    v4[10] = v146;
  }
  v116 = v150;
  if (v150)
  {
    do
    {
      v117 = v116[5];
      if (v117)
        (*(void (**)(uint64_t))(*(_QWORD *)v117 + 8))(v117);
      v116 = (_QWORD *)*v116;
    }
    while (v116);
    v118 = (void **)v150;
    if (v150)
    {
      do
      {
        v121 = (void **)*v118;
        if (*((char *)v118 + 39) < 0)
          operator delete(v118[2]);
        operator delete(v118);
        v118 = v121;
      }
      while (v121);
    }
  }
  v119 = __p[0];
  __p[0] = 0;
  if (v119)
    operator delete(v119);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AE598C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,_QWORD *__p)
{
  _QWORD *v50;
  uint64_t v51;
  void **v52;
  void **v53;

  v50 = __p;
  if (__p)
  {
    do
    {
      v51 = v50[5];
      if (v51)
        (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
      v50 = (_QWORD *)*v50;
    }
    while (v50);
    v52 = (void **)__p;
    do
    {
      v53 = (void **)*v52;
      if (*((char *)v52 + 39) < 0)
        operator delete(v52[2]);
      operator delete(v52);
      v52 = v53;
    }
    while (v53);
  }
  if (!a47)
    _Unwind_Resume(a1);
  operator delete(a47);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AE5C2C(_DWORD *a1, _QWORD *a2, char a3)
{
  int16x8_t v5;
  int v6;
  const char *v7;
  const char *v8;
  size_t v9;
  void *v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int8x16_t *v15;
  size_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  const char *v22;
  size_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int8x16_t v29;
  double v30;
  int32x4_t v31;
  const char *v32;
  const char *v33;
  size_t v34;
  void *v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int8x16_t v48;
  double v49;
  int32x4_t v50;
  const char *v51;
  const char *v52;
  size_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  int8x16_t v59;
  double v60;
  int32x4_t v61;
  const char *v62;
  const char *v63;
  size_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int8x16_t v70;
  double v71;
  int32x4_t v72;
  const char *v73;
  const char *v74;
  size_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  int8x16_t v81;
  double v82;
  int32x4_t v83;
  const char *v84;
  const char *v85;
  size_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  int8x16_t *v92;
  size_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  int8x16_t v99;
  double v100;
  int32x4_t v101;
  const char *v102;
  const char *v103;
  size_t v104;
  void *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  const char *v110;
  size_t v111;
  void *v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  void **v119;
  void *v120;
  void **v122;
  void *v123[2];
  unint64_t v124;
  void *v125[2];
  unint64_t v126;
  void *v127[2];
  unint64_t v128;
  void *v129[2];
  unint64_t v130;
  void *v131[2];
  unint64_t v132;
  void *v133[2];
  unint64_t v134;
  void *v135[2];
  unint64_t v136;
  void *v137[2];
  unint64_t v138;
  void *v139[2];
  unint64_t v140;
  void *v141[2];
  unint64_t v142;
  void *v143[2];
  unint64_t v144;
  void *__dst[2];
  unint64_t v146;
  int v147;
  int v148;
  int v149;
  int v150;
  void *__p[2];
  void *v152;
  uint64_t v153;
  int v154;
  char v155;
  _OWORD v156[2];
  __int128 v157;
  __int16 v158;
  _OWORD v159[2];
  __int128 v160;
  int v161;
  char v162[32];
  _OWORD v163[2];
  char v164[16];
  _OWORD v165[2];
  uint64_t v166;
  char v167[8];
  _BYTE v168[24];
  uint64_t v169;
  int v170;
  __int16 v171;
  uint64_t v172;

  v172 = *MEMORY[0x24BDAC8D0];
  *(double *)v5.i64 = sub_2396157EC((uint64_t)__p, a3);
  v6 = a1[4];
  v150 = a1[3];
  v149 = v6;
  v148 = a1[6];
  v147 = a1[10];
  v169 = 0x60C083E19000C61;
  v171 = 4;
  v170 = 453513790;
  sub_23971A32C((uint64_t)&v169, v5);
  v8 = v7;
  v9 = strlen(v7);
  if (v9 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v10 = (void *)v9;
  if (v9 >= 0x17)
  {
    v12 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v12 = v9 | 7;
    v13 = v12 + 1;
    v11 = (void **)operator new(v12 + 1);
    __dst[1] = v10;
    v146 = v13 | 0x8000000000000000;
    __dst[0] = v11;
    goto LABEL_8;
  }
  HIBYTE(v146) = v9;
  v11 = __dst;
  if (v9)
LABEL_8:
    memmove(v11, v8, (size_t)v10);
  *((_BYTE *)v10 + (_QWORD)v11) = 0;
  v14 = (_QWORD *)operator new();
  *v14 = &off_250ADF5A0;
  v14[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v14);
  strcpy(v168, "0^E]oCQ]@\\UTo[@DC");
  v15 = sub_239A91B18((int8x16_t *)v168);
  v16 = strlen(v15->i8);
  if (v16 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = (void *)v16;
  if (v16 >= 0x17)
  {
    v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17)
      v19 = v16 | 7;
    v20 = v19 + 1;
    v18 = operator new(v19 + 1);
    v143[1] = v17;
    v144 = v20 | 0x8000000000000000;
    v143[0] = v18;
    goto LABEL_16;
  }
  HIBYTE(v144) = v16;
  v18 = v143;
  if (v16)
LABEL_16:
    memmove(v18, v15, (size_t)v17);
  *((_BYTE *)v17 + (_QWORD)v18) = 0;
  v21 = (_QWORD *)operator new();
  *v21 = &off_250ADF5A0;
  v21[1] = a1 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v143, (uint64_t)v21);
  v166 = 0x372D311A28302B45;
  strcpy(v167, " $!6");
  v22 = sub_239510ECC((uint64_t)&v166);
  v23 = strlen(v22);
  if (v23 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v24 = (void *)v23;
  if (v23 >= 0x17)
  {
    v26 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v23 | 7) != 0x17)
      v26 = v23 | 7;
    v27 = v26 + 1;
    v25 = operator new(v26 + 1);
    v141[1] = v24;
    v142 = v27 | 0x8000000000000000;
    v141[0] = v25;
    goto LABEL_24;
  }
  HIBYTE(v142) = v23;
  v25 = v141;
  if (v23)
LABEL_24:
    memmove(v25, v22, (size_t)v24);
  *((_BYTE *)v24 + (_QWORD)v25) = 0;
  v28 = (_QWORD *)operator new();
  *v28 = &off_250ADF5A0;
  v28[1] = a1 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v141, (uint64_t)v28);
  v165[0] = xmmword_239F0D553;
  *(_DWORD *)((char *)v165 + 15) = 334617;
  sub_23958E450((uint64_t)v165, (int32x4_t)xmmword_239F0D553, v29, v30, v31);
  v33 = v32;
  v34 = strlen(v32);
  if (v34 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v35 = (void *)v34;
  if (v34 >= 0x17)
  {
    v38 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v34 | 7) != 0x17)
      v38 = v34 | 7;
    v39 = v38 + 1;
    v36 = operator new(v38 + 1);
    v139[1] = v35;
    v140 = v39 | 0x8000000000000000;
    v139[0] = v36;
  }
  else
  {
    HIBYTE(v140) = v34;
    v36 = v139;
    if (!v34)
    {
      v37 = a2;
      goto LABEL_33;
    }
  }
  v37 = a2;
  memmove(v36, v33, (size_t)v35);
LABEL_33:
  *((_BYTE *)v35 + (_QWORD)v36) = 0;
  v40 = (_QWORD *)operator new();
  *v40 = &off_250ADF240;
  v40[1] = &v149;
  sub_23961580C((uint64_t)__p, (uint64_t)v139, (uint64_t)v40);
  strcpy(v164, "&BCUEyR_VC");
  v41 = (const char *)sub_23958E518((uint64_t)v164);
  v42 = strlen(v41);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v137[1] = v43;
    v138 = v46 | 0x8000000000000000;
    v137[0] = v44;
    goto LABEL_40;
  }
  HIBYTE(v138) = v42;
  v44 = v137;
  if (v42)
LABEL_40:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250ADF240;
  v47[1] = &v150;
  sub_23961580C((uint64_t)__p, (uint64_t)v137, (uint64_t)v47);
  v163[0] = xmmword_239F0D566;
  *(_QWORD *)((char *)v163 + 15) = 0x222B25262B2E26;
  sub_2396EFBE0((uint64_t)v163, (int32x4_t)xmmword_239F0D566, v48, v49, v50);
  v52 = v51;
  v53 = strlen(v51);
  if (v53 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v54 = (void *)v53;
  if (v53 >= 0x17)
  {
    v56 = (v53 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v53 | 7) != 0x17)
      v56 = v53 | 7;
    v57 = v56 + 1;
    v55 = operator new(v56 + 1);
    v135[1] = v54;
    v136 = v57 | 0x8000000000000000;
    v135[0] = v55;
    goto LABEL_48;
  }
  HIBYTE(v136) = v53;
  v55 = v135;
  if (v53)
LABEL_48:
    memmove(v55, v52, (size_t)v54);
  *((_BYTE *)v54 + (_QWORD)v55) = 0;
  v58 = (_QWORD *)operator new();
  *v58 = &off_250AFFEA8;
  v58[1] = a1 + 5;
  sub_23961580C((uint64_t)__p, (uint64_t)v135, (uint64_t)v58);
  strcpy(v162, ".CBqMAC^[ZKq^BOZHA\\C");
  sub_2396EFB50((uint64_t)v162, *(int32x4_t *)".CBqMAC^[ZKq^BOZHA\\C", v59, v60, v61);
  v63 = v62;
  v64 = strlen(v62);
  if (v64 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v65 = (void *)v64;
  if (v64 >= 0x17)
  {
    v67 = (v64 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v64 | 7) != 0x17)
      v67 = v64 | 7;
    v68 = v67 + 1;
    v66 = operator new(v67 + 1);
    v133[1] = v65;
    v134 = v68 | 0x8000000000000000;
    v133[0] = v66;
    goto LABEL_56;
  }
  HIBYTE(v134) = v64;
  v66 = v133;
  if (v64)
LABEL_56:
    memmove(v66, v63, (size_t)v65);
  *((_BYTE *)v65 + (_QWORD)v66) = 0;
  v69 = (_QWORD *)operator new();
  *v69 = &off_250ADF240;
  v69[1] = &v148;
  sub_23961580C((uint64_t)__p, (uint64_t)v133, (uint64_t)v69);
  v160 = xmmword_239F0D592;
  v161 = 7831420;
  sub_23958E55C((uint64_t)&v160, (int32x4_t)xmmword_239F0D592, v70, v71, v72);
  v74 = v73;
  v75 = strlen(v73);
  if (v75 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v76 = (void *)v75;
  if (v75 >= 0x17)
  {
    v78 = (v75 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v75 | 7) != 0x17)
      v78 = v75 | 7;
    v79 = v78 + 1;
    v77 = operator new(v78 + 1);
    v131[1] = v76;
    v132 = v79 | 0x8000000000000000;
    v131[0] = v77;
    goto LABEL_64;
  }
  HIBYTE(v132) = v75;
  v77 = v131;
  if (v75)
LABEL_64:
    memmove(v77, v74, (size_t)v76);
  *((_BYTE *)v76 + (_QWORD)v77) = 0;
  v80 = (_QWORD *)operator new();
  *v80 = &off_250AE0580;
  v80[1] = a1 + 7;
  sub_23961580C((uint64_t)__p, (uint64_t)v131, (uint64_t)v80);
  v159[0] = xmmword_239F0D5A6;
  *(_DWORD *)((char *)v159 + 15) = 2039320;
  sub_23958E450((uint64_t)v159, (int32x4_t)xmmword_239F0D5A6, v81, v82, v83);
  v85 = v84;
  v86 = strlen(v84);
  if (v86 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v87 = (void *)v86;
  if (v86 >= 0x17)
  {
    v89 = (v86 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v86 | 7) != 0x17)
      v89 = v86 | 7;
    v90 = v89 + 1;
    v88 = operator new(v89 + 1);
    v129[1] = v87;
    v130 = v90 | 0x8000000000000000;
    v129[0] = v88;
    goto LABEL_72;
  }
  HIBYTE(v130) = v86;
  v88 = v129;
  if (v86)
LABEL_72:
    memmove(v88, v85, (size_t)v87);
  *((_BYTE *)v87 + (_QWORD)v88) = 0;
  v91 = (_QWORD *)operator new();
  *v91 = &off_250AFFEA8;
  v91[1] = a1 + 9;
  sub_23961580C((uint64_t)__p, (uint64_t)v129, (uint64_t)v91);
  v157 = xmmword_239F0D5B9;
  v158 = 119;
  v92 = sub_239A91B18((int8x16_t *)&v157);
  v93 = strlen(v92->i8);
  if (v93 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v94 = (void *)v93;
  if (v93 >= 0x17)
  {
    v96 = (v93 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v93 | 7) != 0x17)
      v96 = v93 | 7;
    v97 = v96 + 1;
    v95 = operator new(v96 + 1);
    v127[1] = v94;
    v128 = v97 | 0x8000000000000000;
    v127[0] = v95;
    goto LABEL_80;
  }
  HIBYTE(v128) = v93;
  v95 = v127;
  if (v93)
LABEL_80:
    memmove(v95, v92, (size_t)v94);
  *((_BYTE *)v94 + (_QWORD)v95) = 0;
  v98 = (_QWORD *)operator new();
  *v98 = &off_250AFFEA8;
  v98[1] = (char *)a1 + 37;
  sub_23961580C((uint64_t)__p, (uint64_t)v127, (uint64_t)v98);
  v156[0] = xmmword_239F0D5CB;
  *(_DWORD *)((char *)v156 + 15) = 266520;
  sub_23958E450((uint64_t)v156, (int32x4_t)xmmword_239F0D5CB, v99, v100, v101);
  v103 = v102;
  v104 = strlen(v102);
  if (v104 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v105 = (void *)v104;
  if (v104 >= 0x17)
  {
    v107 = (v104 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v104 | 7) != 0x17)
      v107 = v104 | 7;
    v108 = v107 + 1;
    v106 = operator new(v107 + 1);
    v125[1] = v105;
    v126 = v108 | 0x8000000000000000;
    v125[0] = v106;
    goto LABEL_88;
  }
  HIBYTE(v126) = v104;
  v106 = v125;
  if (v104)
LABEL_88:
    memmove(v106, v103, (size_t)v105);
  *((_BYTE *)v105 + (_QWORD)v106) = 0;
  v109 = (_QWORD *)operator new();
  *v109 = &off_250ADF240;
  v109[1] = &v147;
  sub_23961580C((uint64_t)__p, (uint64_t)v125, (uint64_t)v109);
  v153 = 0x1E090535071F046ALL;
  v155 = 0;
  v154 = 420420619;
  v110 = sub_239510ECC((uint64_t)&v153);
  v111 = strlen(v110);
  if (v111 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v112 = (void *)v111;
  if (v111 >= 0x17)
  {
    v114 = (v111 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v111 | 7) != 0x17)
      v114 = v111 | 7;
    v115 = v114 + 1;
    v113 = operator new(v114 + 1);
    v123[1] = v112;
    v124 = v115 | 0x8000000000000000;
    v123[0] = v113;
    goto LABEL_96;
  }
  HIBYTE(v124) = v111;
  v113 = v123;
  if (v111)
LABEL_96:
    memmove(v113, v110, (size_t)v112);
  *((_BYTE *)v112 + (_QWORD)v113) = 0;
  v116 = (_QWORD *)operator new();
  *v116 = &off_250ADF5A0;
  v116[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v123, (uint64_t)v116);
  if (SHIBYTE(v124) < 0)
  {
    operator delete(v123[0]);
    if ((SHIBYTE(v126) & 0x80000000) == 0)
    {
LABEL_99:
      if ((SHIBYTE(v128) & 0x80000000) == 0)
        goto LABEL_100;
      goto LABEL_123;
    }
  }
  else if ((SHIBYTE(v126) & 0x80000000) == 0)
  {
    goto LABEL_99;
  }
  operator delete(v125[0]);
  if ((SHIBYTE(v128) & 0x80000000) == 0)
  {
LABEL_100:
    if ((SHIBYTE(v130) & 0x80000000) == 0)
      goto LABEL_101;
    goto LABEL_124;
  }
LABEL_123:
  operator delete(v127[0]);
  if ((SHIBYTE(v130) & 0x80000000) == 0)
  {
LABEL_101:
    if ((SHIBYTE(v132) & 0x80000000) == 0)
      goto LABEL_102;
    goto LABEL_125;
  }
LABEL_124:
  operator delete(v129[0]);
  if ((SHIBYTE(v132) & 0x80000000) == 0)
  {
LABEL_102:
    if ((SHIBYTE(v134) & 0x80000000) == 0)
      goto LABEL_103;
    goto LABEL_126;
  }
LABEL_125:
  operator delete(v131[0]);
  if ((SHIBYTE(v134) & 0x80000000) == 0)
  {
LABEL_103:
    if ((SHIBYTE(v136) & 0x80000000) == 0)
      goto LABEL_104;
    goto LABEL_127;
  }
LABEL_126:
  operator delete(v133[0]);
  if ((SHIBYTE(v136) & 0x80000000) == 0)
  {
LABEL_104:
    if ((SHIBYTE(v138) & 0x80000000) == 0)
      goto LABEL_105;
    goto LABEL_128;
  }
LABEL_127:
  operator delete(v135[0]);
  if ((SHIBYTE(v138) & 0x80000000) == 0)
  {
LABEL_105:
    if ((SHIBYTE(v140) & 0x80000000) == 0)
      goto LABEL_106;
    goto LABEL_129;
  }
LABEL_128:
  operator delete(v137[0]);
  if ((SHIBYTE(v140) & 0x80000000) == 0)
  {
LABEL_106:
    if ((SHIBYTE(v142) & 0x80000000) == 0)
      goto LABEL_107;
    goto LABEL_130;
  }
LABEL_129:
  operator delete(v139[0]);
  if ((SHIBYTE(v142) & 0x80000000) == 0)
  {
LABEL_107:
    if ((SHIBYTE(v144) & 0x80000000) == 0)
      goto LABEL_108;
LABEL_131:
    operator delete(v143[0]);
    if ((SHIBYTE(v146) & 0x80000000) == 0)
      goto LABEL_109;
    goto LABEL_132;
  }
LABEL_130:
  operator delete(v141[0]);
  if (SHIBYTE(v144) < 0)
    goto LABEL_131;
LABEL_108:
  if ((SHIBYTE(v146) & 0x80000000) == 0)
    goto LABEL_109;
LABEL_132:
  operator delete(__dst[0]);
LABEL_109:
  sub_2395902F0((uint64_t)__p, v37);
  v117 = v152;
  if (v152)
  {
    do
    {
      v118 = v117[5];
      if (v118)
        (*(void (**)(uint64_t))(*(_QWORD *)v118 + 8))(v118);
      v117 = (_QWORD *)*v117;
    }
    while (v117);
    v119 = (void **)v152;
    if (v152)
    {
      do
      {
        v122 = (void **)*v119;
        if (*((char *)v119 + 39) < 0)
          operator delete(v119[2]);
        operator delete(v119);
        v119 = v122;
      }
      while (v122);
    }
  }
  v120 = __p[0];
  __p[0] = 0;
  if (v120)
    operator delete(v120);
  return v37;
}

void sub_239AE6870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  sub_2395905C0((uint64_t)&a47);
  _Unwind_Resume(a1);
}

void sub_239AE6A90(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE6AB4(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD **v5;

  v5 = *(_QWORD ***)(a1 + 8);
  sub_239AE79C4(&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AE6B00(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t *v3;
  int v4;
  int v6;
  int v7;
  int i;
  _QWORD *exception;
  uint64_t v10;

  v3 = a2;
  v10 = *(_QWORD *)(a1 + 8);
  if (!a3)
    goto LABEL_4;
  v4 = std::istream::peek();
  if ((v4 & 0xFFFFFFFE) == 0xDE)
  {
    a2 = v3;
    a3 = 1;
LABEL_4:
    sub_239AE6C0C(&v10, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  v6 = v4;
  std::istream::get();
  if (v6 == 221)
  {
    v7 = sub_2396162D4((uint64_t)v3, 221);
    if (*(_DWORD *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 32))
    {
      exception = __cxa_allocate_exception(8uLL);
      *exception = MEMORY[0x24BEDB8F0] + 16;
      __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
    }
    for (i = v7; i; --i)
      sub_239AE6C0C(&v10, v3, 1);
  }
  else
  {
    sub_2396163F8(v3, v6);
  }
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AE6C0C(_QWORD *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  BOOL v14;
  int v15;
  unsigned int v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t **v19;
  unint64_t v20;
  uint64_t **v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t *v25;
  int v26;
  uint64_t *v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  BOOL v35;
  char i;
  unsigned int v38;
  int v39;
  int v40;
  uint64_t **v41;
  uint64_t *v42;
  uint64_t **v43;
  unint64_t v44;
  uint64_t **v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t *v49;
  int j;
  unsigned int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v61;
  uint64_t v62;
  uint64_t v63[2];
  uint64_t v64;
  uint64_t v65;
  void *__p;
  char v67;
  _BYTE v68[152];
  unint64_t v69;
  std::string v70;

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      _ZF = 1;
    else
      _ZF = v5 == 0;
    if (!_ZF)
    {
      v7 = 0;
      v59 = v5;
      v8 = *MEMORY[0x24BEDB7F0];
      v54 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v56 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      __asm { FMOV            V8.2S, #-1.0 }
      v13 = MEMORY[0x24BEDB848] + 16;
      do
      {
        memset(&v70, 0, sizeof(v70));
        v15 = std::istream::get();
        v16 = sub_2396162D4((uint64_t)a2, v15);
        if (v16)
        {
          std::string::resize(&v70, v16, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
        {
          *v70.__r_.__value_.__l.__data_ = 0;
          v70.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v70.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v70.__r_.__value_.__s + 23) = 0;
        }
        v69 = 0;
        sub_239593804((uint64_t)v63, (uint64_t)&v70, 24);
        MEMORY[0x23B83DD1C](v63, &v69);
        *(_QWORD *)&v61 = 0;
        *((_QWORD *)&v61 + 1) = -1;
        v62 = _D8;
        sub_239AE7340((uint64_t)&v61, a2, 1);
        v17 = (uint64_t **)*a1;
        v19 = (uint64_t **)(*a1 + 8);
        v18 = *v19;
        v20 = v69;
        if (*v19)
        {
          while (1)
          {
            while (1)
            {
              v21 = (uint64_t **)v18;
              v22 = v18[4];
              if (v69 >= v22)
                break;
              v18 = *v21;
              v19 = v21;
              if (!*v21)
                goto LABEL_23;
            }
            if (v22 >= v69)
              break;
            v18 = v21[1];
            if (!v18)
            {
              v19 = v21 + 1;
              goto LABEL_23;
            }
          }
          v23 = v21;
        }
        else
        {
          v21 = (uint64_t **)(*a1 + 8);
LABEL_23:
          v23 = operator new(0x40uLL);
          v23[4] = v20;
          v23[5] = 0;
          v23[6] = -1;
          v23[7] = _D8;
          *v23 = 0;
          v23[1] = 0;
          v23[2] = v21;
          *v19 = v23;
          v24 = (uint64_t *)**v17;
          v25 = v23;
          if (v24)
          {
            *v17 = v24;
            v25 = *v19;
          }
          sub_2394213B8(v17[1], v25);
          v17[2] = (uint64_t *)((char *)v17[2] + 1);
        }
        *(_OWORD *)(v23 + 5) = v61;
        v23[7] = v62;
        v26 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        v63[0] = v8;
        *(uint64_t *)((char *)v63 + *(_QWORD *)(v8 - 24)) = v56;
        v64 = v54;
        v65 = v13;
        if (v67 < 0)
          operator delete(__p);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v68);
        if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v70.__r_.__value_.__l.__data_);
        ++v7;
        if (v26)
          v14 = 1;
        else
          v14 = v7 == v59;
      }
      while (!v14);
    }
  }
  else
  {
    v27 = a2 + 4;
    v28 = MEMORY[0x24BDAC740];
    while (1)
    {
      v29 = std::istream::peek();
      v30 = v29 <= 0x7F ? *(_DWORD *)(v28 + 4 * v29 + 60) & 0x4000 : __maskrune(v29, 0x4000uLL);
      v31 = *(_QWORD *)(*a2 - 24);
      if (!v30)
        break;
      if (!*(_DWORD *)((char *)v27 + v31))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v31 + 32) & 2) == 0)
    {
      v69 = 0;
      memset(&v70, 0, sizeof(v70));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v32 = std::istream::peek();
          v33 = v32 <= 0x7F ? *(_DWORD *)(v28 + 4 * v32 + 60) & 0x4000 : __maskrune(v32, 0x4000uLL);
          v34 = *(_QWORD *)(*a2 - 24);
          if (!v33)
            break;
          if (!*(_DWORD *)((char *)v27 + v34))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v34 + 32) & 2) == 0)
        {
          v35 = std::istream::peek() == 125;
          v57 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          v58 = *MEMORY[0x24BEDB7F0];
          v55 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          __asm { FMOV            V8.2S, #-1.0 }
          v53 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v27 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v35)
          {
            if (!sub_239595A48((uint64_t)&v70, a2))
              goto LABEL_95;
            sub_2395EDF80((uint64_t)&v69, (uint64_t)&v70);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v27 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v27 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_95;
LABEL_57:
            std::istream::get();
            while (1)
            {
              v38 = std::istream::peek();
              v39 = v38 <= 0x7F ? *(_DWORD *)(v28 + 4 * v38 + 60) & 0x4000 : __maskrune(v38, 0x4000uLL);
              v40 = *(_DWORD *)((char *)v27 + *(_QWORD *)(*a2 - 24));
              if (!v39)
                break;
              if (!v40)
                goto LABEL_57;
            }
            if ((v40 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v63);
              if (sub_239596128(a2))
              {
                *(_QWORD *)&v61 = 0;
                *((_QWORD *)&v61 + 1) = -1;
                v62 = _D8;
                sub_239AE7340((uint64_t)&v61, v63, 0);
                v41 = (uint64_t **)*a1;
                v43 = (uint64_t **)(*a1 + 8);
                v42 = *v43;
                v44 = v69;
                if (*v43)
                {
                  while (1)
                  {
                    while (1)
                    {
                      v45 = (uint64_t **)v42;
                      v46 = v42[4];
                      if (v69 >= v46)
                        break;
                      v42 = *v45;
                      v43 = v45;
                      if (!*v45)
                        goto LABEL_73;
                    }
                    if (v46 >= v69)
                      break;
                    v42 = v45[1];
                    if (!v42)
                    {
                      v43 = v45 + 1;
                      goto LABEL_73;
                    }
                  }
                  v47 = v45;
                }
                else
                {
                  v45 = (uint64_t **)(*a1 + 8);
LABEL_73:
                  v47 = operator new(0x40uLL);
                  v47[4] = v44;
                  v47[5] = 0;
                  v47[6] = -1;
                  v47[7] = _D8;
                  *v47 = 0;
                  v47[1] = 0;
                  v47[2] = v45;
                  *v43 = v47;
                  v48 = (uint64_t *)**v41;
                  v49 = v47;
                  if (v48)
                  {
                    *v41 = v48;
                    v49 = *v43;
                  }
                  sub_2394213B8(v41[1], v49);
                  v41[2] = (uint64_t *)((char *)v41[2] + 1);
                }
                *(_OWORD *)(v47 + 5) = v61;
                v47[7] = v62;
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v51 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_87;
                  if (v51 == 2097152000)
                    break;
                  if (v51 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v28 + 4 * (char)j + 60) & 0x4000) == 0)
                      goto LABEL_86;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    goto LABEL_86;
                  }
                  if ((*((_BYTE *)v27 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                  {
LABEL_86:
                    if (v51 != 738197504)
                      goto LABEL_88;
LABEL_87:
                    std::istream::get();
                    v35 = 0;
                    goto LABEL_90;
                  }
                  std::istream::get();
                }
                v35 = 1;
LABEL_90:
                v52 = 0;
              }
              else
              {
LABEL_88:
                v35 = 0;
                v52 = 1;
              }
              v63[0] = v58;
              *(uint64_t *)((char *)v63 + *(_QWORD *)(v58 - 24)) = v57;
              v64 = v55;
              v65 = v53;
              if (v67 < 0)
                operator delete(__p);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v68);
              if (!v52)
                continue;
            }
            goto LABEL_95;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_95:
      if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v70.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239AE72E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  uint64_t v21;

  if (*(char *)(v21 - 105) < 0)
    operator delete(*(void **)(v21 - 128));
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239AE7340(uint64_t a1, uint64_t *a2, char a3)
{
  int16x8_t v5;
  const char *v6;
  const char *v7;
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int32x4_t v14;
  double v15;
  int32x4_t v16;
  unsigned __int8 *v17;
  size_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int8x16_t v24;
  double v25;
  int32x4_t v26;
  const char *v27;
  const char *v28;
  size_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int8x16_t v35;
  double v36;
  int32x4_t v37;
  const char *v38;
  const char *v39;
  size_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int8x16_t v46;
  double v47;
  int32x4_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void **v59;
  void *v60;
  void **v62;
  void *v63[2];
  unint64_t v64;
  void *v65[2];
  unint64_t v66;
  void *v67[2];
  unint64_t v68;
  void *v69[2];
  unint64_t v70;
  void *__dst[2];
  unint64_t v72;
  void *__p[2];
  void *v74;
  __int128 v75;
  uint64_t v76;
  char v77[32];
  _OWORD v78[2];
  char v79[24];
  uint64_t v80;
  char v81[8];
  uint64_t v82;

  v82 = *MEMORY[0x24BDAC8D0];
  *(double *)v5.i64 = sub_2396157EC((uint64_t)__p, a3);
  v80 = 0x6460635A68706B05;
  sub_23971A32C((uint64_t)&v80, v5);
  v7 = v6;
  v8 = strlen(v6);
  if (v8 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v10 = (void **)operator new(v11 + 1);
    __dst[1] = v9;
    v72 = v12 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_8;
  }
  HIBYTE(v72) = v8;
  v10 = __dst;
  if (v8)
LABEL_8:
    memmove(v10, v7, (size_t)v9);
  *((_BYTE *)v9 + (_QWORD)v10) = 0;
  v13 = (_QWORD *)operator new();
  *v13 = &off_250AFFF08;
  v13[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v13);
  strcpy(v79, "0^E]oVUQDEBUCoY^o]QC[");
  v17 = sub_239A90BEC((unsigned __int8 *)v79, *(int8x16_t *)"0^E]oVUQDEBUCoY^o]QC[", v14, v15, v16);
  v18 = strlen((const char *)v17);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = (void *)v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    v20 = operator new(v21 + 1);
    v69[1] = v19;
    v70 = v22 | 0x8000000000000000;
    v69[0] = v20;
    goto LABEL_16;
  }
  HIBYTE(v70) = v18;
  v20 = v69;
  if (v18)
LABEL_16:
    memmove(v20, v17, (size_t)v19);
  *((_BYTE *)v19 + (_QWORD)v20) = 0;
  v23 = (_QWORD *)operator new();
  *v23 = &off_250ADF240;
  v23[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v69, (uint64_t)v23);
  v78[0] = xmmword_239F0D687;
  *(_QWORD *)((char *)v78 + 15) = 0x7E6674784A6160;
  sub_2396EFBE0((uint64_t)v78, (int32x4_t)xmmword_239F0D687, v24, v25, v26);
  v28 = v27;
  v29 = strlen(v27);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    v67[1] = v30;
    v68 = v33 | 0x8000000000000000;
    v67[0] = v31;
    goto LABEL_24;
  }
  HIBYTE(v68) = v29;
  v31 = v67;
  if (v29)
LABEL_24:
    memmove(v31, v28, (size_t)v30);
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  v34 = (_QWORD *)operator new();
  *v34 = &off_250ADF240;
  v34[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v67, (uint64_t)v34);
  strcpy(v77, "=IXEIHOXbN^ROXbTSbP\\NV");
  sub_2396EFBE0((uint64_t)v77, *(int32x4_t *)"=IXEIHOXbN^ROXbTSbP\\NV", v35, v36, v37);
  v39 = v38;
  v40 = strlen(v38);
  if (v40 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v41 = (void *)v40;
  if (v40 >= 0x17)
  {
    v43 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v40 | 7) != 0x17)
      v43 = v40 | 7;
    v44 = v43 + 1;
    v42 = operator new(v43 + 1);
    v65[1] = v41;
    v66 = v44 | 0x8000000000000000;
    v65[0] = v42;
    goto LABEL_32;
  }
  HIBYTE(v66) = v40;
  v42 = v65;
  if (v40)
LABEL_32:
    memmove(v42, v39, (size_t)v41);
  *((_BYTE *)v41 + (_QWORD)v42) = 0;
  v45 = (_QWORD *)operator new();
  *v45 = &off_250AE0670;
  v45[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v65, (uint64_t)v45);
  v75 = xmmword_239F0D6B5;
  v76 = 0xC14060A381312;
  sub_2396F1A4C((uint64_t)&v75, (int32x4_t)xmmword_239F0D6B5, v46, v47, v48);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v63[1] = v52;
    v64 = v55 | 0x8000000000000000;
    v63[0] = v53;
    goto LABEL_40;
  }
  HIBYTE(v64) = v51;
  v53 = v63;
  if (v51)
LABEL_40:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250AE0670;
  v56[1] = a1 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v63, (uint64_t)v56);
  if (SHIBYTE(v64) < 0)
  {
    operator delete(v63[0]);
    if ((SHIBYTE(v66) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v68) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v66) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v65[0]);
  if ((SHIBYTE(v68) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v70) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v69[0]);
    if ((SHIBYTE(v72) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v67[0]);
  if (SHIBYTE(v70) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v72) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_23959479C((uint64_t)__p, a2);
  v57 = v74;
  if (v74)
  {
    do
    {
      v58 = v57[5];
      if (v58)
        (*(void (**)(uint64_t))(*(_QWORD *)v58 + 8))(v58);
      v57 = (_QWORD *)*v57;
    }
    while (v57);
    v59 = (void **)v74;
    if (v74)
    {
      do
      {
        v62 = (void **)*v59;
        if (*((char *)v59 + 39) < 0)
          operator delete(v59[2]);
        operator delete(v59);
        v59 = v62;
      }
      while (v62);
    }
  }
  v60 = __p[0];
  __p[0] = 0;
  if (v60)
    operator delete(v60);
  return a2;
}

void sub_239AE78DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  sub_2395905C0((uint64_t)&a40);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AE79C4(_QWORD ***a1, _QWORD *a2, int a3)
{
  unint64_t v5;
  _QWORD **v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  BOOL v16;

  v5 = (unint64_t)(*a1)[2];
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    v7 = *a1;
    if ((*a1)[2])
    {
      v8 = 0;
      v9 = *v7;
      do
      {
        v12 = v7 + 1;
        if (v9 == v12)
        {
          v10 = 0;
          v11 = v9;
        }
        else
        {
          v13 = 0;
          v11 = v9;
          do
          {
            v14 = (_QWORD *)v11[1];
            v15 = v11;
            if (v14)
            {
              do
              {
                v11 = v14;
                v14 = (_QWORD *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                v11 = (_QWORD *)v15[2];
                v16 = *v11 == (_QWORD)v15;
                v15 = v11;
              }
              while (!v16);
            }
            v10 = v13 + 1;
            if (v13 > 0x7FFFFFFD)
              break;
            ++v13;
          }
          while (v11 != v12);
        }
        sub_239AE7B54(v9, v11, v10, a2, 1);
        v8 += 0x7FFFFFFFLL;
        v7 = *a1;
        v9 = v11;
      }
      while (v8 < (unint64_t)(*a1)[2]);
    }
  }
  else
  {
    sub_239AE7B54(**a1, *a1 + 1, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239AE7B54(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4, int a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  void *__p;
  int v25;
  unsigned __int8 v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char v31;
  _DWORD v32[42];

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v32[38] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v10 = *MEMORY[0x24BEDB7F0];
        v11 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v13 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v27);
          std::ostream::operator<<();
          std::stringbuf::str();
          std::ostream::put();
          v14 = v26;
          if ((v26 & 0x80u) != 0)
            v14 = v25;
          v32[39] = v14;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          sub_239AE7F58((uint64_t)(a1 + 5), a4, 1);
          if ((char)v26 < 0)
            operator delete(__p);
          v27[0] = v10;
          *(_QWORD *)((char *)v27 + *(_QWORD *)(v10 - 24)) = v11;
          v28 = v12;
          v29 = v13;
          if (v31 < 0)
            operator delete(v30);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v32);
          v15 = (_QWORD *)a1[1];
          if (v15)
          {
            do
            {
              v16 = v15;
              v15 = (_QWORD *)*v15;
            }
            while (v15);
          }
          else
          {
            do
            {
              v16 = (_QWORD *)a1[2];
              v17 = *v16 == (_QWORD)a1;
              a1 = v16;
            }
            while (!v17);
          }
          a1 = v16;
        }
        while (v16 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v18 = *MEMORY[0x24BEDB7F0];
      v20 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v19 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v21 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v27);
        std::ostream::operator<<();
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        sub_239AE7F58((uint64_t)(a1 + 5), a4, 0);
        v22 = (_QWORD *)a1[1];
        v23 = a1;
        if (v22)
        {
          do
          {
            a1 = v22;
            v22 = (_QWORD *)*v22;
          }
          while (v22);
        }
        else
        {
          do
          {
            a1 = (_QWORD *)v23[2];
            v17 = *a1 == (_QWORD)v23;
            v23 = a1;
          }
          while (!v17);
        }
        if (a1 != a2)
          std::ostream::put();
        if ((char)v26 < 0)
          operator delete(__p);
        v27[0] = v18;
        *(_QWORD *)((char *)v27 + *(_QWORD *)(v18 - 24)) = v20;
        v28 = v19;
        v29 = v21;
        if (v31 < 0)
          operator delete(v30);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v32);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239AE7F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_239498ABC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AE7F58(uint64_t a1, _QWORD *a2, char a3)
{
  int16x8_t v5;
  const char *v6;
  const char *v7;
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int32x4_t v14;
  double v15;
  int32x4_t v16;
  unsigned __int8 *v17;
  size_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int8x16_t v24;
  double v25;
  int32x4_t v26;
  const char *v27;
  const char *v28;
  size_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int8x16_t v35;
  double v36;
  int32x4_t v37;
  const char *v38;
  const char *v39;
  size_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int8x16_t v46;
  double v47;
  int32x4_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void **v59;
  void *v60;
  void **v62;
  void *v63[2];
  unint64_t v64;
  void *v65[2];
  unint64_t v66;
  void *v67[2];
  unint64_t v68;
  void *v69[2];
  unint64_t v70;
  void *__dst[2];
  unint64_t v72;
  void *__p[2];
  void *v74;
  char v75[32];
  _OWORD v76[2];
  char v77[32];
  unsigned __int8 v78[24];
  uint64_t v79;
  char v80[8];
  uint64_t v81;

  v81 = *MEMORY[0x24BDAC8D0];
  *(double *)v5.i64 = sub_2396157EC((uint64_t)__p, a3);
  v79 = 0x383C3F06342C3759;
  strcpy(v80, "-,+<*");
  sub_23971A32C((uint64_t)&v79, v5);
  v7 = v6;
  v8 = strlen(v6);
  if (v8 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v10 = (void **)operator new(v11 + 1);
    __dst[1] = v9;
    v72 = v12 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_8;
  }
  HIBYTE(v72) = v8;
  v10 = __dst;
  if (v8)
LABEL_8:
    memmove(v10, v7, (size_t)v9);
  *((_BYTE *)v9 + (_QWORD)v10) = 0;
  v13 = (_QWORD *)operator new();
  *v13 = &off_250AFFE48;
  v13[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v13);
  *(_OWORD *)v78 = xmmword_239F0D4A7;
  *(_QWORD *)&v78[14] = 0x7A62707C4E7F78;
  v17 = sub_239A90BEC(v78, (int8x16_t)xmmword_239F0D4A7, v14, v15, v16);
  v18 = strlen((const char *)v17);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = (void *)v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    v20 = operator new(v21 + 1);
    v69[1] = v19;
    v70 = v22 | 0x8000000000000000;
    v69[0] = v20;
    goto LABEL_16;
  }
  HIBYTE(v70) = v18;
  v20 = v69;
  if (v18)
LABEL_16:
    memmove(v20, v17, (size_t)v19);
  *((_BYTE *)v19 + (_QWORD)v20) = 0;
  v23 = (_QWORD *)operator new();
  *v23 = &off_250ADF5A0;
  v23[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v69, (uint64_t)v23);
  strcpy(v77, "W9\":\b126#\"%2$\b8\"#\b:6$<");
  sub_2396EFBE0((uint64_t)v77, *(int32x4_t *)"W9\":\b126#\"%2$\b8\"#\b:6$<", v24, v25, v26);
  v28 = v27;
  v29 = strlen(v27);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    v67[1] = v30;
    v68 = v33 | 0x8000000000000000;
    v67[0] = v31;
    goto LABEL_24;
  }
  HIBYTE(v68) = v29;
  v31 = v67;
  if (v29)
LABEL_24:
    memmove(v31, v28, (size_t)v30);
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  v34 = (_QWORD *)operator new();
  *v34 = &off_250ADF5A0;
  v34[1] = a1 + 12;
  sub_23961580C((uint64_t)__p, (uint64_t)v67, (uint64_t)v34);
  v76[0] = xmmword_239F0D4D4;
  *(_QWORD *)((char *)v76 + 15) = 0x677F6D61536265;
  sub_2396EFBE0((uint64_t)v76, (int32x4_t)xmmword_239F0D4D4, v35, v36, v37);
  v39 = v38;
  v40 = strlen(v38);
  if (v40 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v41 = (void *)v40;
  if (v40 >= 0x17)
  {
    v43 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v40 | 7) != 0x17)
      v43 = v40 | 7;
    v44 = v43 + 1;
    v42 = operator new(v43 + 1);
    v65[1] = v41;
    v66 = v44 | 0x8000000000000000;
    v65[0] = v42;
    goto LABEL_32;
  }
  HIBYTE(v66) = v40;
  v42 = v65;
  if (v40)
LABEL_32:
    memmove(v42, v39, (size_t)v41);
  *((_BYTE *)v41 + (_QWORD)v42) = 0;
  v45 = (_QWORD *)operator new();
  *v45 = &off_250AE0580;
  v45[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v65, (uint64_t)v45);
  strcpy(v75, "D0!<016!\x1B7'+6!\x1B+10\x1B)%7/");
  sub_2396F1A4C((uint64_t)v75, *(int32x4_t *)"D0!<016!\x1B7'+6!\x1B+10\x1B)%7/", v46, v47, v48);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v63[1] = v52;
    v64 = v55 | 0x8000000000000000;
    v63[0] = v53;
    goto LABEL_40;
  }
  HIBYTE(v64) = v51;
  v53 = v63;
  if (v51)
LABEL_40:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250AE0580;
  v56[1] = a1 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v63, (uint64_t)v56);
  if (SHIBYTE(v64) < 0)
  {
    operator delete(v63[0]);
    if ((SHIBYTE(v66) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v68) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v66) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v65[0]);
  if ((SHIBYTE(v68) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v70) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v69[0]);
    if ((SHIBYTE(v72) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v67[0]);
  if (SHIBYTE(v70) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v72) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_2395902F0((uint64_t)__p, a2);
  v57 = v74;
  if (v74)
  {
    do
    {
      v58 = v57[5];
      if (v58)
        (*(void (**)(uint64_t))(*(_QWORD *)v58 + 8))(v58);
      v57 = (_QWORD *)*v57;
    }
    while (v57);
    v59 = (void **)v74;
    if (v74)
    {
      do
      {
        v62 = (void **)*v59;
        if (*((char *)v59 + 39) < 0)
          operator delete(v59[2]);
        operator delete(v59);
        v59 = v62;
      }
      while (v62);
    }
  }
  v60 = __p[0];
  __p[0] = 0;
  if (v60)
    operator delete(v60);
  return a2;
}

void sub_239AE84F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  sub_2395905C0((uint64_t)&a40);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AE85DC(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int8x16_t v12;
  double v13;
  int32x4_t v14;
  const char *v15;
  const char *v16;
  size_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  double v23;
  int32x4_t v24;
  const char *v25;
  const char *v26;
  size_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  double v33;
  double v34;
  int16x8_t v35;
  const char *v36;
  const char *v37;
  size_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  int8x16_t v44;
  double v45;
  int32x4_t v46;
  const char *v47;
  const char *v48;
  size_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  int8x16_t v55;
  double v56;
  int32x4_t v57;
  const char *v58;
  const char *v59;
  size_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int8x8_t *v66;
  size_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  int8x16_t *v73;
  size_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  int16x8_t v80;
  const char *v81;
  const char *v82;
  size_t v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  const char *v89;
  const char *v90;
  size_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  int8x16_t v97;
  double v98;
  int32x4_t v99;
  const char *v100;
  const char *v101;
  size_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  const char *v108;
  size_t v109;
  void *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  void **v117;
  void *v118;
  void **v120;
  void *v121[2];
  unint64_t v122;
  void *v123[2];
  unint64_t v124;
  void *v125[2];
  unint64_t v126;
  void *v127[2];
  unint64_t v128;
  void *v129[2];
  unint64_t v130;
  void *v131[2];
  unint64_t v132;
  void *v133[2];
  unint64_t v134;
  void *v135[2];
  unint64_t v136;
  void *v137[2];
  unint64_t v138;
  void *v139[2];
  unint64_t v140;
  void *v141[2];
  unint64_t v142;
  void *__dst[2];
  unint64_t v144;
  int v145;
  void *__p[2];
  void *v147;
  uint64_t v148;
  int v149;
  char v150;
  _OWORD v151[2];
  __int128 v152;
  char v153;
  uint64_t v154;
  int v155;
  __int16 v156;
  int8x16_t v157[2];
  uint64_t v158;
  __int16 v159;
  char v160[32];
  _OWORD v161[2];
  _OWORD v162[2];
  __int16 v163;
  int8x16_t v164[2];
  char v165;
  char v166[40];
  char v167[16];
  uint64_t v168;

  v168 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v145 = *(_DWORD *)(a1 + 140);
  strcpy(v167, "U; 8\n<8420&");
  v5 = sub_23958E4C8((uint64_t)v167);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v144 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v144) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AFFE48;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  strcpy(v166, ":W_[Te\\_[NOH_IeJ_HeSW[]_");
  sub_2396EFC88((uint64_t)v166, *(int32x4_t *)"NOH_IeJ_HeSW[]_", v12, v13, v14);
  v16 = v15;
  v17 = strlen(v15);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v18 = (void *)v17;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    v19 = operator new(v20 + 1);
    v141[1] = v18;
    v142 = v21 | 0x8000000000000000;
    v141[0] = v19;
    goto LABEL_16;
  }
  HIBYTE(v142) = v17;
  v19 = v141;
  if (v17)
LABEL_16:
    memmove(v19, v16, (size_t)v18);
  *((_BYTE *)v18 + (_QWORD)v19) = 0;
  v22 = (_QWORD *)operator new();
  *v22 = &off_250AFFE48;
  v22[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v141, (uint64_t)v22);
  v164[0] = (int8x16_t)xmmword_239F0D42D;
  v164[1] = xmmword_239F0D43D;
  v165 = 0;
  sub_2396EFE38((uint64_t)v164, (int32x4_t)xmmword_239F0D42D, xmmword_239F0D43D, v23, v24);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = (void *)v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = operator new(v30 + 1);
    v139[1] = v28;
    v140 = v31 | 0x8000000000000000;
    v139[0] = v29;
    goto LABEL_24;
  }
  HIBYTE(v140) = v27;
  v29 = v139;
  if (v27)
LABEL_24:
    memmove(v29, v26, (size_t)v28);
  *((_BYTE *)v28 + (_QWORD)v29) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250ADF5A0;
  v32[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v139, (uint64_t)v32);
  v162[0] = xmmword_239F0D44E;
  v162[1] = *(_OWORD *)dbl_239F0D45E;
  v163 = 30;
  sub_2396F0120((unsigned __int8 *)v162, (int16x8_t)xmmword_239F0D44E, dbl_239F0D45E[0], v33, v34, v35);
  v37 = v36;
  v38 = strlen(v36);
  if (v38 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v39 = (void *)v38;
  if (v38 >= 0x17)
  {
    v41 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 | 7) != 0x17)
      v41 = v38 | 7;
    v42 = v41 + 1;
    v40 = operator new(v41 + 1);
    v137[1] = v39;
    v138 = v42 | 0x8000000000000000;
    v137[0] = v40;
    goto LABEL_32;
  }
  HIBYTE(v138) = v38;
  v40 = v137;
  if (v38)
LABEL_32:
    memmove(v40, v37, (size_t)v39);
  *((_BYTE *)v39 + (_QWORD)v40) = 0;
  v43 = (_QWORD *)operator new();
  *v43 = &off_250ADF5A0;
  v43[1] = a1 + 20;
  sub_23961580C((uint64_t)__p, (uint64_t)v137, (uint64_t)v43);
  v161[0] = xmmword_239F0D470;
  *(_OWORD *)((char *)v161 + 11) = *(__int128 *)((char *)&xmmword_239F0D470 + 11);
  sub_2396F1974((uint64_t)v161, *(int32x4_t *)((char *)&xmmword_239F0D470 + 11), v44, v45, v46);
  v48 = v47;
  v49 = strlen(v47);
  if (v49 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v50 = (void *)v49;
  if (v49 >= 0x17)
  {
    v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v49 | 7) != 0x17)
      v52 = v49 | 7;
    v53 = v52 + 1;
    v51 = operator new(v52 + 1);
    v135[1] = v50;
    v136 = v53 | 0x8000000000000000;
    v135[0] = v51;
    goto LABEL_40;
  }
  HIBYTE(v136) = v49;
  v51 = v135;
  if (v49)
LABEL_40:
    memmove(v51, v48, (size_t)v50);
  *((_BYTE *)v50 + (_QWORD)v51) = 0;
  v54 = (_QWORD *)operator new();
  *v54 = &off_250AE0580;
  v54[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v135, (uint64_t)v54);
  strcpy(v160, "6W@QiBSNBCDSiEUYDSiYCBi[WE]");
  sub_2396B946C((uint64_t)v160, *(int32x4_t *)"iEUYDSiYCBi[WE]", v55, v56, v57);
  v59 = v58;
  v60 = strlen(v58);
  if (v60 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v61 = (void *)v60;
  if (v60 >= 0x17)
  {
    v63 = (v60 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v60 | 7) != 0x17)
      v63 = v60 | 7;
    v64 = v63 + 1;
    v62 = operator new(v63 + 1);
    v133[1] = v61;
    v134 = v64 | 0x8000000000000000;
    v133[0] = v62;
    goto LABEL_48;
  }
  HIBYTE(v134) = v60;
  v62 = v133;
  if (v60)
LABEL_48:
    memmove(v62, v59, (size_t)v61);
  *((_BYTE *)v61 + (_QWORD)v62) = 0;
  v65 = (_QWORD *)operator new();
  *v65 = &off_250AE0580;
  v65[1] = a1 + 28;
  sub_23961580C((uint64_t)__p, (uint64_t)v133, (uint64_t)v65);
  v158 = 0x251D2725232F2B42;
  v159 = 50;
  v66 = sub_23950FF84((int8x8_t *)&v158);
  v67 = strlen((const char *)v66);
  if (v67 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v68 = (void *)v67;
  if (v67 >= 0x17)
  {
    v70 = (v67 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v67 | 7) != 0x17)
      v70 = v67 | 7;
    v71 = v70 + 1;
    v69 = operator new(v70 + 1);
    v131[1] = v68;
    v132 = v71 | 0x8000000000000000;
    v131[0] = v69;
    goto LABEL_56;
  }
  HIBYTE(v132) = v67;
  v69 = v131;
  if (v67)
LABEL_56:
    memmove(v69, v66, (size_t)v68);
  *((_BYTE *)v68 + (_QWORD)v69) = 0;
  v72 = (_QWORD *)operator new();
  *v72 = &off_250AE0580;
  v72[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v131, (uint64_t)v72);
  strcpy(v157[0].i8, "U'0%:'!\n%0'\n<8420");
  v73 = sub_239A91B18(v157);
  v74 = strlen(v73->i8);
  if (v74 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v75 = (void *)v74;
  if (v74 >= 0x17)
  {
    v77 = (v74 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v74 | 7) != 0x17)
      v77 = v74 | 7;
    v78 = v77 + 1;
    v76 = operator new(v77 + 1);
    v129[1] = v75;
    v130 = v78 | 0x8000000000000000;
    v129[0] = v76;
    goto LABEL_64;
  }
  HIBYTE(v130) = v74;
  v76 = v129;
  if (v74)
LABEL_64:
    memmove(v76, v73, (size_t)v75);
  *((_BYTE *)v75 + (_QWORD)v76) = 0;
  v79 = (_QWORD *)operator new();
  *v79 = &off_250AF37D0;
  v79[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v129, (uint64_t)v79);
  v154 = 0x40C08150F141361;
  v156 = 14;
  v155 = 118425662;
  sub_23971A32C((uint64_t)&v154, v80);
  v82 = v81;
  v83 = strlen(v81);
  if (v83 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v84 = (void *)v83;
  if (v83 >= 0x17)
  {
    v86 = (v83 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v83 | 7) != 0x17)
      v86 = v83 | 7;
    v87 = v86 + 1;
    v85 = operator new(v86 + 1);
    v127[1] = v84;
    v128 = v87 | 0x8000000000000000;
    v127[0] = v85;
    goto LABEL_72;
  }
  HIBYTE(v128) = v83;
  v85 = v127;
  if (v83)
LABEL_72:
    memmove(v85, v82, (size_t)v84);
  *((_BYTE *)v84 + (_QWORD)v85) = 0;
  v88 = (_QWORD *)operator new();
  *v88 = &off_250B002F8;
  v88[1] = a1 + 64;
  sub_23961580C((uint64_t)__p, (uint64_t)v127, (uint64_t)v88);
  v152 = xmmword_239F0D515;
  v153 = 0;
  sub_2396EFA24((uint64_t)&v152);
  v90 = v89;
  v91 = strlen(v89);
  if (v91 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v92 = (void *)v91;
  if (v91 >= 0x17)
  {
    v94 = (v91 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v91 | 7) != 0x17)
      v94 = v91 | 7;
    v95 = v94 + 1;
    v93 = operator new(v94 + 1);
    v125[1] = v92;
    v126 = v95 | 0x8000000000000000;
    v125[0] = v93;
    goto LABEL_80;
  }
  HIBYTE(v126) = v91;
  v93 = v125;
  if (v91)
LABEL_80:
    memmove(v93, v90, (size_t)v92);
  *((_BYTE *)v92 + (_QWORD)v93) = 0;
  v96 = (_QWORD *)operator new();
  *v96 = &off_250AFFEA8;
  v96[1] = a1 + 136;
  sub_23961580C((uint64_t)__p, (uint64_t)v125, (uint64_t)v96);
  v151[0] = xmmword_239F0D526;
  *(_OWORD *)((char *)v151 + 11) = *(__int128 *)((char *)&xmmword_239F0D526 + 11);
  sub_2396F1974((uint64_t)v151, *(int32x4_t *)((char *)&xmmword_239F0D526 + 11), v97, v98, v99);
  v101 = v100;
  v102 = strlen(v100);
  if (v102 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v103 = (void *)v102;
  if (v102 >= 0x17)
  {
    v105 = (v102 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v102 | 7) != 0x17)
      v105 = v102 | 7;
    v106 = v105 + 1;
    v104 = operator new(v105 + 1);
    v123[1] = v103;
    v124 = v106 | 0x8000000000000000;
    v123[0] = v104;
    goto LABEL_88;
  }
  HIBYTE(v124) = v102;
  v104 = v123;
  if (v102)
LABEL_88:
    memmove(v104, v101, (size_t)v103);
  *((_BYTE *)v103 + (_QWORD)v104) = 0;
  v107 = (_QWORD *)operator new();
  *v107 = &off_250ADF240;
  v107[1] = &v145;
  sub_23961580C((uint64_t)__p, (uint64_t)v123, (uint64_t)v107);
  v148 = 0x161A261D1C0A0C79;
  v150 = 0;
  v149 = 504373015;
  v108 = sub_239510ECC((uint64_t)&v148);
  v109 = strlen(v108);
  if (v109 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v110 = (void *)v109;
  if (v109 >= 0x17)
  {
    v112 = (v109 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v109 | 7) != 0x17)
      v112 = v109 | 7;
    v113 = v112 + 1;
    v111 = operator new(v112 + 1);
    v121[1] = v110;
    v122 = v113 | 0x8000000000000000;
    v121[0] = v111;
    goto LABEL_96;
  }
  HIBYTE(v122) = v109;
  v111 = v121;
  if (v109)
LABEL_96:
    memmove(v111, v108, (size_t)v110);
  *((_BYTE *)v110 + (_QWORD)v111) = 0;
  v114 = (_QWORD *)operator new();
  *v114 = &off_250AF3800;
  v114[1] = a1 + 144;
  sub_23961580C((uint64_t)__p, (uint64_t)v121, (uint64_t)v114);
  if (SHIBYTE(v122) < 0)
  {
    operator delete(v121[0]);
    if ((SHIBYTE(v124) & 0x80000000) == 0)
    {
LABEL_99:
      if ((SHIBYTE(v126) & 0x80000000) == 0)
        goto LABEL_100;
      goto LABEL_123;
    }
  }
  else if ((SHIBYTE(v124) & 0x80000000) == 0)
  {
    goto LABEL_99;
  }
  operator delete(v123[0]);
  if ((SHIBYTE(v126) & 0x80000000) == 0)
  {
LABEL_100:
    if ((SHIBYTE(v128) & 0x80000000) == 0)
      goto LABEL_101;
    goto LABEL_124;
  }
LABEL_123:
  operator delete(v125[0]);
  if ((SHIBYTE(v128) & 0x80000000) == 0)
  {
LABEL_101:
    if ((SHIBYTE(v130) & 0x80000000) == 0)
      goto LABEL_102;
    goto LABEL_125;
  }
LABEL_124:
  operator delete(v127[0]);
  if ((SHIBYTE(v130) & 0x80000000) == 0)
  {
LABEL_102:
    if ((SHIBYTE(v132) & 0x80000000) == 0)
      goto LABEL_103;
    goto LABEL_126;
  }
LABEL_125:
  operator delete(v129[0]);
  if ((SHIBYTE(v132) & 0x80000000) == 0)
  {
LABEL_103:
    if ((SHIBYTE(v134) & 0x80000000) == 0)
      goto LABEL_104;
    goto LABEL_127;
  }
LABEL_126:
  operator delete(v131[0]);
  if ((SHIBYTE(v134) & 0x80000000) == 0)
  {
LABEL_104:
    if ((SHIBYTE(v136) & 0x80000000) == 0)
      goto LABEL_105;
    goto LABEL_128;
  }
LABEL_127:
  operator delete(v133[0]);
  if ((SHIBYTE(v136) & 0x80000000) == 0)
  {
LABEL_105:
    if ((SHIBYTE(v138) & 0x80000000) == 0)
      goto LABEL_106;
    goto LABEL_129;
  }
LABEL_128:
  operator delete(v135[0]);
  if ((SHIBYTE(v138) & 0x80000000) == 0)
  {
LABEL_106:
    if ((SHIBYTE(v140) & 0x80000000) == 0)
      goto LABEL_107;
    goto LABEL_130;
  }
LABEL_129:
  operator delete(v137[0]);
  if ((SHIBYTE(v140) & 0x80000000) == 0)
  {
LABEL_107:
    if ((SHIBYTE(v142) & 0x80000000) == 0)
      goto LABEL_108;
LABEL_131:
    operator delete(v141[0]);
    if ((SHIBYTE(v144) & 0x80000000) == 0)
      goto LABEL_109;
    goto LABEL_132;
  }
LABEL_130:
  operator delete(v139[0]);
  if (SHIBYTE(v142) < 0)
    goto LABEL_131;
LABEL_108:
  if ((SHIBYTE(v144) & 0x80000000) == 0)
    goto LABEL_109;
LABEL_132:
  operator delete(__dst[0]);
LABEL_109:
  sub_2395902F0((uint64_t)__p, a2);
  v115 = v147;
  if (v147)
  {
    do
    {
      v116 = v115[5];
      if (v116)
        (*(void (**)(uint64_t))(*(_QWORD *)v116 + 8))(v116);
      v115 = (_QWORD *)*v115;
    }
    while (v115);
    v117 = (void **)v147;
    if (v147)
    {
      do
      {
        v120 = (void **)*v117;
        if (*((char *)v117 + 39) < 0)
          operator delete(v117[2]);
        operator delete(v117);
        v117 = v120;
      }
      while (v120);
    }
  }
  v118 = __p[0];
  __p[0] = 0;
  if (v118)
    operator delete(v118);
  return a2;
}

void sub_239AE91F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  sub_2395905C0((uint64_t)&a47);
  _Unwind_Resume(a1);
}

void sub_239AE9414(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE9438(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AE5C2C(*(_DWORD **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AE9474()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AE94AC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE94D0(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD **v5;

  v5 = *(_QWORD ***)(a1 + 8);
  sub_239AE79C4(&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AE951C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AE9554(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AE9578(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (!*(_BYTE *)(v3 + 464))
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239AF03C0(v3, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AE95E4(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v5;
  const char *v6;
  size_t v7;
  void *v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  const char *v13;
  size_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int16x8_t v20;
  const char *v21;
  const char *v22;
  size_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  const char *v29;
  const char *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int8x16_t v37;
  double v38;
  int32x4_t v39;
  const char *v40;
  const char *v41;
  size_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int16x8_t v48;
  const char *v49;
  const char *v50;
  size_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  int8x16_t v57;
  double v58;
  int32x4_t v59;
  const char *v60;
  const char *v61;
  size_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  int8x16_t *v68;
  size_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  void **v77;
  void *v78;
  void *v79;
  void *v80;
  void **v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  char v88;
  void *v89;
  char v90;
  void *v91;
  char v92;
  void *v93;
  char v94;
  uint64_t v95;
  _QWORD *v96[3];
  uint64_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  void *v101;
  void *v102;
  void *v103[2];
  unint64_t v104;
  void *v105[2];
  unint64_t v106;
  void *v107[2];
  unint64_t v108;
  void *v109[2];
  unint64_t v110;
  void *v111[2];
  unint64_t v112;
  void *v113[2];
  unint64_t v114;
  void *v115[2];
  unint64_t v116;
  void *__dst[2];
  unint64_t v118;
  void *__p[2];
  void *v120;
  __int128 v121;
  __int16 v122;
  char v123[32];
  uint64_t v124;
  char v125[8];
  _OWORD v126[2];
  char v127[24];
  uint64_t v128;
  int v129;
  __int16 v130;
  char v131[16];
  uint64_t v132;
  int v133;
  uint64_t v134;

  v134 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 8);
  sub_239AEA110((uint64_t)&v83);
  sub_2396157EC((uint64_t)__p, a3);
  v132 = 0x161A1E281A021977;
  v133 = 266768;
  v6 = sub_23958E4C8((uint64_t)&v132);
  v7 = strlen(v6);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v9 = (void **)operator new(v10 + 1);
    v118 = v11 | 0x8000000000000000;
    __dst[0] = v9;
    __dst[1] = v8;
    goto LABEL_8;
  }
  HIBYTE(v118) = v7;
  v9 = __dst;
  if (v7)
LABEL_8:
    memmove(v9, v6, (size_t)v8);
  *((_BYTE *)v8 + (_QWORD)v9) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_250ADF240;
  v12[1] = &v83;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v12);
  strcpy(v131, "$QWA@{GKJBMC");
  v13 = sub_239510ECC((uint64_t)v131);
  v14 = strlen(v13);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v15 = (void *)v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    v116 = v18 | 0x8000000000000000;
    v115[0] = v16;
    v115[1] = v15;
    goto LABEL_16;
  }
  HIBYTE(v116) = v14;
  v16 = v115;
  if (v14)
LABEL_16:
    memmove(v16, v13, (size_t)v15);
  *((_BYTE *)v15 + (_QWORD)v16) = 0;
  v19 = (_QWORD *)operator new();
  *v19 = &off_250AF3650;
  v19[1] = &v84;
  sub_23961580C((uint64_t)__p, (uint64_t)v115, (uint64_t)v19);
  v128 = 0x30B0F1208131466;
  v130 = 9;
  v129 = 528185;
  sub_23971A32C((uint64_t)&v128, v20);
  v22 = v21;
  v23 = strlen(v21);
  if (v23 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v24 = (void *)v23;
  if (v23 >= 0x17)
  {
    v26 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v23 | 7) != 0x17)
      v26 = v23 | 7;
    v27 = v26 + 1;
    v25 = operator new(v26 + 1);
    v114 = v27 | 0x8000000000000000;
    v113[0] = v25;
    v113[1] = v24;
    goto LABEL_24;
  }
  HIBYTE(v114) = v23;
  v25 = v113;
  if (v23)
LABEL_24:
    memmove(v25, v22, (size_t)v24);
  *((_BYTE *)v24 + (_QWORD)v25) = 0;
  v28 = (_QWORD *)operator new();
  *v28 = &off_250AFFFF8;
  v28[1] = &v100;
  sub_23961580C((uint64_t)__p, (uint64_t)v113, (uint64_t)v28);
  strcpy(v127, "(A[wJJGPwIXXDAML");
  sub_2396EFA24((uint64_t)v127);
  v30 = v29;
  v31 = strlen(v29);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    v112 = v35 | 0x8000000000000000;
    v111[0] = v33;
    v111[1] = v32;
    goto LABEL_32;
  }
  HIBYTE(v112) = v31;
  v33 = v111;
  if (v31)
LABEL_32:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  v36 = (_QWORD *)operator new();
  *v36 = &off_250AE0220;
  v36[1] = &v95;
  sub_23961580C((uint64_t)__p, (uint64_t)v111, (uint64_t)v36);
  v126[0] = xmmword_239F0D3D3;
  *(_QWORD *)((char *)v126 + 15) = 0x717375797D4B66;
  sub_2396EFBE0((uint64_t)v126, (int32x4_t)xmmword_239F0D3D3, v37, v38, v39);
  v41 = v40;
  v42 = strlen(v40);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v43 = (void *)v42;
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = operator new(v45 + 1);
    v110 = v46 | 0x8000000000000000;
    v109[0] = v44;
    v109[1] = v43;
    goto LABEL_40;
  }
  HIBYTE(v110) = v42;
  v44 = v109;
  if (v42)
LABEL_40:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v47 = (_QWORD *)operator new();
  *v47 = &off_250AF3710;
  v47[1] = v96;
  sub_23961580C((uint64_t)__p, (uint64_t)v109, (uint64_t)v47);
  v124 = 0x31300239382E285DLL;
  strcpy(v125, "02981");
  sub_23971A32C((uint64_t)&v124, v48);
  v50 = v49;
  v51 = strlen(v49);
  if (v51 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v52 = (void *)v51;
  if (v51 >= 0x17)
  {
    v54 = (v51 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v51 | 7) != 0x17)
      v54 = v51 | 7;
    v55 = v54 + 1;
    v53 = operator new(v54 + 1);
    v108 = v55 | 0x8000000000000000;
    v107[0] = v53;
    v107[1] = v52;
    goto LABEL_48;
  }
  HIBYTE(v108) = v51;
  v53 = v107;
  if (v51)
LABEL_48:
    memmove(v53, v50, (size_t)v52);
  *((_BYTE *)v52 + (_QWORD)v53) = 0;
  v56 = (_QWORD *)operator new();
  *v56 = &off_250AF3740;
  v56[1] = &v87;
  sub_23961580C((uint64_t)__p, (uint64_t)v107, (uint64_t)v56);
  strcpy(v123, "=HNXYbNX^RSY\\ODbPQPRYXQ");
  sub_2396F1A4C((uint64_t)v123, *(int32x4_t *)"=HNXYbNX^RSY\\ODbPQPRYXQ", v57, v58, v59);
  v61 = v60;
  v62 = strlen(v60);
  if (v62 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v63 = (void *)v62;
  if (v62 >= 0x17)
  {
    v65 = (v62 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v62 | 7) != 0x17)
      v65 = v62 | 7;
    v66 = v65 + 1;
    v64 = operator new(v65 + 1);
    v105[1] = v63;
    v106 = v66 | 0x8000000000000000;
    v105[0] = v64;
    goto LABEL_56;
  }
  HIBYTE(v106) = v62;
  v64 = v105;
  if (v62)
LABEL_56:
    memmove(v64, v61, (size_t)v63);
  *((_BYTE *)v63 + (_QWORD)v64) = 0;
  v67 = (_QWORD *)operator new();
  *v67 = &off_250AF3740;
  v67[1] = &v91;
  sub_23961580C((uint64_t)__p, (uint64_t)v105, (uint64_t)v67);
  v121 = xmmword_239F0D402;
  v122 = 115;
  v68 = sub_239A91B18((int8x16_t *)&v121);
  v69 = strlen(v68->i8);
  if (v69 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v70 = (void *)v69;
  if (v69 >= 0x17)
  {
    v72 = (v69 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v69 | 7) != 0x17)
      v72 = v69 | 7;
    v73 = v72 + 1;
    v71 = operator new(v72 + 1);
    v103[1] = v70;
    v104 = v73 | 0x8000000000000000;
    v103[0] = v71;
    goto LABEL_64;
  }
  HIBYTE(v104) = v69;
  v71 = v103;
  if (v69)
LABEL_64:
    memmove(v71, v68, (size_t)v70);
  *((_BYTE *)v70 + (_QWORD)v71) = 0;
  v74 = (_QWORD *)operator new();
  *v74 = &off_250AF3770;
  v74[1] = &v97;
  sub_23961580C((uint64_t)__p, (uint64_t)v103, (uint64_t)v74);
  if (SHIBYTE(v104) < 0)
  {
    operator delete(v103[0]);
    if ((SHIBYTE(v106) & 0x80000000) == 0)
    {
LABEL_67:
      if ((SHIBYTE(v108) & 0x80000000) == 0)
        goto LABEL_68;
      goto LABEL_98;
    }
  }
  else if ((SHIBYTE(v106) & 0x80000000) == 0)
  {
    goto LABEL_67;
  }
  operator delete(v105[0]);
  if ((SHIBYTE(v108) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v110) & 0x80000000) == 0)
      goto LABEL_69;
    goto LABEL_99;
  }
LABEL_98:
  operator delete(v107[0]);
  if ((SHIBYTE(v110) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v112) & 0x80000000) == 0)
      goto LABEL_70;
    goto LABEL_100;
  }
LABEL_99:
  operator delete(v109[0]);
  if ((SHIBYTE(v112) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v114) & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_101;
  }
LABEL_100:
  operator delete(v111[0]);
  if ((SHIBYTE(v114) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v116) & 0x80000000) == 0)
      goto LABEL_72;
LABEL_102:
    operator delete(v115[0]);
    if ((SHIBYTE(v118) & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_103;
  }
LABEL_101:
  operator delete(v113[0]);
  if (SHIBYTE(v116) < 0)
    goto LABEL_102;
LABEL_72:
  if ((SHIBYTE(v118) & 0x80000000) == 0)
    goto LABEL_73;
LABEL_103:
  operator delete(__dst[0]);
LABEL_73:
  sub_23959479C((uint64_t)__p, a2);
  v75 = v120;
  if (v120)
  {
    do
    {
      v76 = v75[5];
      if (v76)
        (*(void (**)(uint64_t))(*(_QWORD *)v76 + 8))(v76);
      v75 = (_QWORD *)*v75;
    }
    while (v75);
    v77 = (void **)v120;
    if (v120)
    {
      do
      {
        v82 = (void **)*v77;
        if (*((char *)v77 + 39) < 0)
          operator delete(v77[2]);
        operator delete(v77);
        v77 = v82;
      }
      while (v82);
    }
  }
  v78 = __p[0];
  __p[0] = 0;
  if (v78)
    operator delete(v78);
  if (*(_BYTE *)(v5 + 464))
  {
    sub_239AEA35C(v5, (uint64_t)&v83);
    v79 = v101;
    if (!v101)
      goto LABEL_84;
    goto LABEL_83;
  }
  sub_239A5E664(v5, (uint64_t)&v83);
  *(_BYTE *)(v5 + 464) = 1;
  v79 = v101;
  if (v101)
  {
LABEL_83:
    v102 = v79;
    operator delete(v79);
  }
LABEL_84:
  if (v98)
  {
    v99 = v98;
    operator delete(v98);
  }
  sub_239A61EC0(v96[1]);
  if (v94 < 0)
  {
    operator delete(v93);
    if ((v92 & 0x80000000) == 0)
    {
LABEL_88:
      if ((v90 & 0x80000000) == 0)
        goto LABEL_89;
      goto LABEL_108;
    }
  }
  else if ((v92 & 0x80000000) == 0)
  {
    goto LABEL_88;
  }
  operator delete(v91);
  if ((v90 & 0x80000000) == 0)
  {
LABEL_89:
    if ((v88 & 0x80000000) == 0)
      goto LABEL_90;
LABEL_109:
    operator delete(v87);
    v80 = v85;
    if (!v85)
      return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
    goto LABEL_91;
  }
LABEL_108:
  operator delete(v89);
  if (v88 < 0)
    goto LABEL_109;
LABEL_90:
  v80 = v85;
  if (v85)
  {
LABEL_91:
    v86 = v80;
    operator delete(v80);
  }
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AE9F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2395905C0((uint64_t)&STACK[0x290]);
  sub_239A61848((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239AEA0C8()
{
  JUMPOUT(0x239AEA0A8);
}

uint64_t sub_239AEA110(uint64_t a1)
{
  qos_class_t v2;
  task_name_t *v3;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[36];
  unint64_t v7;

  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0x8000000000;
  *(_DWORD *)(a1 + 16) = 255;
  *(_QWORD *)(a1 + 20) = 0;
  *(_QWORD *)(a1 + 36) = 0;
  *(_QWORD *)(a1 + 28) = 0;
  *(_QWORD *)(a1 + 41) = 0;
  *(_OWORD *)(a1 + 52) = xmmword_239F0C080;
  *(_DWORD *)(a1 + 68) = 0;
  *(_BYTE *)(a1 + 72) = 1;
  *(_QWORD *)(a1 + 76) = 0x3C23D70A00000002;
  *(_DWORD *)(a1 + 84) = -1;
  *(_WORD *)(a1 + 88) = 1;
  *(_DWORD *)(a1 + 92) = 0;
  v2 = qos_class_self();
  *(_BYTE *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 96) = v2;
  *(_QWORD *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 120) = xmmword_239F0C090;
  *(_QWORD *)(a1 + 136) = 10;
  *(_BYTE *)(a1 + 144) = 1;
  *(_QWORD *)(a1 + 152) = 5000;
  *(_DWORD *)(a1 + 160) = 0;
  *(_WORD *)(a1 + 191) = 0;
  *(_WORD *)(a1 + 215) = 0;
  *(_WORD *)(a1 + 239) = 0;
  *(_WORD *)(a1 + 263) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 272) = a1 + 280;
  *(_QWORD *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 360) = 0;
  *(_QWORD *)(a1 + 368) = 0;
  *(_DWORD *)(a1 + 344) = 0;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_QWORD *)(a1 + 288) = 0;
  *(_QWORD *)(a1 + 296) = 0;
  *(_BYTE *)(a1 + 304) = 0;
  *(_BYTE *)(a1 + 376) = 1;
  *(std::chrono::system_clock::time_point *)(a1 + 312) = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  v3 = (task_name_t *)MEMORY[0x24BDAEC58];
  if (!task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a1 + 340) = (float)((float)v7 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a1 + 376) = 1;
  *(_DWORD *)(a1 + 384) = 0;
  *(_QWORD *)(a1 + 440) = 0;
  *(_QWORD *)(a1 + 448) = 0;
  *(_QWORD *)(a1 + 432) = 0;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_DWORD *)(a1 + 424) = 0;
  *(_BYTE *)(a1 + 456) = 1;
  *(std::chrono::system_clock::time_point *)(a1 + 392) = std::chrono::system_clock::now();
  task_info_outCnt = 93;
  if (!task_info(*v3, 0x16u, task_info_out, &task_info_outCnt))
    *(float *)(a1 + 420) = (float)((float)v7 * 0.00097656) * 0.00097656;
  *(_BYTE *)(a1 + 456) = 1;
  return a1;
}

void sub_239AEA2F4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void **v4;
  void *v6;
  void *v7;
  void *v8;

  v6 = *v4;
  if (*v4)
  {
    *(_QWORD *)(v1 + 440) = v6;
    operator delete(v6);
  }
  v7 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 360) = v7;
    operator delete(v7);
  }
  sub_239A61EC0(*(_QWORD **)(v1 + 280));
  sub_239A63634(v2 + 48);
  sub_239A63634(v2);
  v8 = *(void **)(v1 + 24);
  if (v8)
  {
    *(_QWORD *)(v1 + 32) = v8;
    operator delete(v8);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_239AEA35C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  if (a1 != a2)
    sub_23945D3D0((_QWORD *)(a1 + 24), *(char **)(a2 + 24), *(char **)(a2 + 32), (uint64_t)(*(_QWORD *)(a2 + 32) - *(_QWORD *)(a2 + 24)) >> 3);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  v9 = *(_OWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  std::string::operator=((std::string *)(a1 + 168), (const std::string *)(a2 + 168));
  std::string::operator=((std::string *)(a1 + 192), (const std::string *)(a2 + 192));
  std::string::operator=((std::string *)(a1 + 216), (const std::string *)(a2 + 216));
  std::string::operator=((std::string *)(a1 + 240), (const std::string *)(a2 + 240));
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  if (a1 != a2)
    sub_239AEA4C4(a1 + 272, *(uint64_t **)(a2 + 272), (uint64_t *)(a2 + 280));
  v10 = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v10;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  v11 = *(_QWORD *)(a2 + 336);
  *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = v11;
  if (a1 != a2)
    sub_23942156C((_QWORD *)(a1 + 352), *(char **)(a2 + 352), *(char **)(a2 + 360), (uint64_t)(*(_QWORD *)(a2 + 360) - *(_QWORD *)(a2 + 352)) >> 2);
  *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
  *(_DWORD *)(a1 + 384) = *(_DWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  v12 = *(_QWORD *)(a2 + 416);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = v12;
  if (a1 != a2)
    sub_23942156C((_QWORD *)(a1 + 432), *(char **)(a2 + 432), *(char **)(a2 + 440), (uint64_t)(*(_QWORD *)(a2 + 440) - *(_QWORD *)(a2 + 432)) >> 2);
  *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
  return a1;
}

void sub_239AEA4C4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t **v15;
  uint64_t **v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  BOOL v20;
  uint64_t *v21;
  uint64_t *i;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t **v25;
  uint64_t **v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;

  v4 = a2;
  if (*(_QWORD *)(a1 + 16))
  {
    v6 = *(uint64_t **)a1;
    v8 = (uint64_t **)(a1 + 8);
    v7 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)a1 = a1 + 8;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    v9 = v6[1] ? (uint64_t *)v6[1] : v6;
    v31 = (uint64_t *)a1;
    v33 = v9;
    if (v9)
    {
      v10 = (uint64_t *)v9[2];
      if (v10)
      {
        v11 = (uint64_t *)*v10;
        if ((uint64_t *)*v10 == v9)
        {
          *v10 = 0;
          while (1)
          {
            v30 = (uint64_t *)v10[1];
            if (!v30)
              break;
            do
            {
              v10 = v30;
              v30 = (uint64_t *)*v30;
            }
            while (v30);
          }
        }
        else
        {
          for (v10[1] = 0; v11; v11 = (uint64_t *)v10[1])
          {
            do
            {
              v10 = v11;
              v11 = (uint64_t *)*v11;
            }
            while (v11);
          }
        }
      }
      v32 = v10;
      if (a2 != a3)
      {
        v12 = a2;
        while (1)
        {
          v9[4] = v12[4];
          v13 = v9;
          if (v9 != v12)
          {
            sub_23942156C(v9 + 5, (char *)v12[5], (char *)v12[6], (v12[6] - v12[5]) >> 2);
            v13 = v33;
          }
          *((_DWORD *)v9 + 16) = *((_DWORD *)v12 + 16);
          v14 = *v8;
          v15 = (uint64_t **)(a1 + 8);
          v16 = (uint64_t **)(a1 + 8);
          if (*v8)
          {
            do
            {
              while (1)
              {
                v15 = (uint64_t **)v14;
                if (v13[4] >= (unint64_t)v14[4])
                  break;
                v14 = (uint64_t *)*v14;
                v16 = v15;
                if (!*v15)
                  goto LABEL_22;
              }
              v14 = (uint64_t *)v14[1];
            }
            while (v14);
            v16 = v15 + 1;
          }
LABEL_22:
          *v13 = 0;
          v13[1] = 0;
          v13[2] = (uint64_t)v15;
          *v16 = v13;
          v17 = **(_QWORD **)a1;
          if (v17)
          {
            *(_QWORD *)a1 = v17;
            v13 = *v16;
          }
          sub_2394213B8(*(uint64_t **)(a1 + 8), v13);
          ++*(_QWORD *)(a1 + 16);
          v9 = v32;
          v33 = v32;
          if (v32)
          {
            v10 = (uint64_t *)v32[2];
            if (v10)
            {
              v18 = (uint64_t *)*v10;
              if ((uint64_t *)*v10 == v32)
              {
                *v10 = 0;
                while (1)
                {
                  v21 = (uint64_t *)v10[1];
                  if (!v21)
                    break;
                  do
                  {
                    v10 = v21;
                    v21 = (uint64_t *)*v21;
                  }
                  while (v21);
                }
              }
              else
              {
                for (v10[1] = 0; v18; v18 = (uint64_t *)v10[1])
                {
                  do
                  {
                    v10 = v18;
                    v18 = (uint64_t *)*v18;
                  }
                  while (v18);
                }
              }
            }
            v32 = v10;
            v19 = (uint64_t *)v12[1];
            if (v19)
            {
              do
              {
LABEL_33:
                v4 = v19;
                v19 = (uint64_t *)*v19;
              }
              while (v19);
              goto LABEL_37;
            }
          }
          else
          {
            v10 = 0;
            v19 = (uint64_t *)v12[1];
            if (v19)
              goto LABEL_33;
          }
          do
          {
            v4 = (uint64_t *)v12[2];
            v20 = *v4 == (_QWORD)v12;
            v12 = v4;
          }
          while (!v20);
LABEL_37:
          if (v9)
          {
            v12 = v4;
            if (v4 != a3)
              continue;
          }
          break;
        }
      }
      sub_239A61EC0(v9);
      if (v10)
      {
        for (i = (uint64_t *)v10[2]; i; i = (uint64_t *)i[2])
          v10 = i;
        sub_239A61EC0(v10);
      }
    }
  }
  if (v4 != a3)
  {
    do
    {
      sub_239A63680((uint64_t)&v31, a1, (uint64_t)(v4 + 4));
      v23 = v31;
      v24 = *(uint64_t **)(a1 + 8);
      v25 = (uint64_t **)(a1 + 8);
      v26 = (uint64_t **)(a1 + 8);
      if (v24)
      {
        do
        {
          while (1)
          {
            v25 = (uint64_t **)v24;
            if (v31[4] >= (unint64_t)v24[4])
              break;
            v24 = (uint64_t *)*v24;
            v26 = v25;
            if (!*v25)
              goto LABEL_58;
          }
          v24 = (uint64_t *)v24[1];
        }
        while (v24);
        v26 = v25 + 1;
      }
LABEL_58:
      *v31 = 0;
      v23[1] = 0;
      v23[2] = (uint64_t)v25;
      *v26 = v23;
      v27 = **(_QWORD **)a1;
      if (v27)
      {
        *(_QWORD *)a1 = v27;
        v23 = *v26;
      }
      sub_2394213B8(*(uint64_t **)(a1 + 8), v23);
      ++*(_QWORD *)(a1 + 16);
      v28 = (uint64_t *)v4[1];
      if (v28)
      {
        do
        {
          v29 = v28;
          v28 = (uint64_t *)*v28;
        }
        while (v28);
      }
      else
      {
        do
        {
          v29 = (uint64_t *)v4[2];
          v20 = *v29 == (_QWORD)v4;
          v4 = v29;
        }
        while (!v20);
      }
      v4 = v29;
    }
    while (v29 != a3);
  }
}

void sub_239AEA7F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239AEA80C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239AEA80C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_239A61EC0(*(_QWORD **)(a1 + 16));
  v2 = *(_QWORD **)(a1 + 8);
  if (v2)
  {
    v3 = (_QWORD *)v2[2];
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = (_QWORD *)v3[2];
      }
      while (v3);
      *(_QWORD *)(a1 + 8) = v2;
    }
    sub_239A61EC0(v2);
  }
  return a1;
}

void sub_239AEA85C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AEA880(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEB50C(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AEA8BC(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int16x8_t v19;
  const char *v20;
  const char *v21;
  size_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  const char *v28;
  size_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int16x8_t v35;
  const char *v36;
  const char *v37;
  size_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  void **v46;
  void *v47;
  void **v49;
  void *v50[2];
  unint64_t v51;
  void *v52[2];
  unint64_t v53;
  void *v54[2];
  unint64_t v55;
  int v56;
  char v57[4];
  void *v58[2];
  unint64_t v59;
  void *__dst[2];
  unint64_t v61;
  void *__p[2];
  void *v63;
  uint64_t v64;
  int v65;
  __int16 v66;
  char v67[16];
  uint64_t v68;
  int v69;
  __int16 v70;
  uint64_t v71;
  int v72;
  uint64_t v73;

  v73 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v71 = 0x1D1115231109127CLL;
  v72 = 989467;
  v5 = sub_23958E4C8((uint64_t)&v71);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v61 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v61) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF240;
  v11[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  strcpy(v57, "ox");
  v56 = 1920888349;
  v12 = sub_239513174((char *)&v56);
  v13 = strlen(v12);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v58[1] = v14;
    v59 = v17 | 0x8000000000000000;
    v58[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v59) = v13;
  v15 = v58;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250AE0670;
  v18[1] = v4 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v58, (uint64_t)v18);
  v68 = 0x1D16161E260A1079;
  v70 = 18;
  v69 = 169350182;
  sub_23971A32C((uint64_t)&v68, v19);
  v21 = v20;
  v22 = strlen(v20);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = (void *)v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    v54[1] = v23;
    v55 = v26 | 0x8000000000000000;
    v54[0] = v24;
    goto LABEL_24;
  }
  HIBYTE(v55) = v22;
  v24 = v54;
  if (v22)
LABEL_24:
    memmove(v24, v21, (size_t)v23);
  *((_BYTE *)v23 + (_QWORD)v24) = 0;
  v27 = (_QWORD *)operator new();
  *v27 = &off_250AE0220;
  v27[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v54, (uint64_t)v27);
  v28 = sub_239510ECC((uint64_t)v67);
  v29 = strlen(v28);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    v52[1] = v30;
    v53 = v33 | 0x8000000000000000;
    v52[0] = v31;
    goto LABEL_32;
  }
  HIBYTE(v53) = v29;
  v31 = v52;
  if (v29)
LABEL_32:
    memmove(v31, v28, (size_t)v30);
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  v34 = (_QWORD *)operator new();
  *v34 = &off_250AF36E0;
  v34[1] = v4 + 88;
  sub_23961580C((uint64_t)__p, (uint64_t)v52, (uint64_t)v34);
  v64 = 0x11191D001A010674;
  v66 = 27;
  v65 = 303701291;
  sub_23971A32C((uint64_t)&v64, v35);
  v37 = v36;
  v38 = strlen(v36);
  if (v38 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v39 = (void *)v38;
  if (v38 >= 0x17)
  {
    v41 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 | 7) != 0x17)
      v41 = v38 | 7;
    v42 = v41 + 1;
    v40 = operator new(v41 + 1);
    v50[1] = v39;
    v51 = v42 | 0x8000000000000000;
    v50[0] = v40;
    goto LABEL_40;
  }
  HIBYTE(v51) = v38;
  v40 = v50;
  if (v38)
LABEL_40:
    memmove(v40, v37, (size_t)v39);
  *((_BYTE *)v39 + (_QWORD)v40) = 0;
  v43 = (_QWORD *)operator new();
  *v43 = &off_250AFFFF8;
  v43[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v50, (uint64_t)v43);
  if (SHIBYTE(v51) < 0)
  {
    operator delete(v50[0]);
    if ((SHIBYTE(v53) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v55) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v53) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v52[0]);
  if ((SHIBYTE(v55) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v59) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v58[0]);
    if ((SHIBYTE(v61) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v54[0]);
  if (SHIBYTE(v59) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v61) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_23959479C((uint64_t)__p, a2);
  v44 = v63;
  if (v63)
  {
    do
    {
      v45 = v44[5];
      if (v45)
        (*(void (**)(uint64_t))(*(_QWORD *)v45 + 8))(v45);
      v44 = (_QWORD *)*v44;
    }
    while (v44);
    v46 = (void **)v63;
    if (v63)
    {
      do
      {
        v49 = (void **)*v46;
        if (*((char *)v46 + 39) < 0)
          operator delete(v46[2]);
        operator delete(v46);
        v46 = v49;
      }
      while (v49);
    }
  }
  v47 = __p[0];
  __p[0] = 0;
  if (v47)
    operator delete(v47);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AEAE98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,_QWORD *__p)
{
  _QWORD *v44;
  uint64_t v45;
  void **v46;
  void **v47;

  v44 = __p;
  if (__p)
  {
    do
    {
      v45 = v44[5];
      if (v45)
        (*(void (**)(uint64_t))(*(_QWORD *)v45 + 8))(v45);
      v44 = (_QWORD *)*v44;
    }
    while (v44);
    v46 = (void **)__p;
    do
    {
      v47 = (void **)*v46;
      if (*((char *)v46 + 39) < 0)
        operator delete(v46[2]);
      operator delete(v46);
      v46 = v47;
    }
    while (v47);
  }
  if (!a41)
    _Unwind_Resume(exception_object);
  operator delete(a41);
  _Unwind_Resume(exception_object);
}

void sub_239AEB008(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AEB02C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEB300(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AEB068(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  const char *v5;
  size_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void **v14;
  void *v15;
  void **v17;
  void *__p[2];
  unint64_t v19;
  void *v20[2];
  void *v21;
  char v22[16];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)v20, a3);
  strcpy(v22, "\asoubtohkc");
  v5 = (const char *)sub_23958E518((uint64_t)v22);
  v6 = strlen(v5);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = operator new(v9 + 1);
    __p[1] = v7;
    v19 = v10 | 0x8000000000000000;
    __p[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v19) = v6;
  v8 = __p;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AE0670;
  v11[1] = v4;
  sub_23961580C((uint64_t)v20, (uint64_t)__p, (uint64_t)v11);
  if (SHIBYTE(v19) < 0)
    operator delete(__p[0]);
  sub_23959479C((uint64_t)v20, a2);
  v12 = v21;
  if (v21)
  {
    do
    {
      v13 = v12[5];
      if (v13)
        (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
      v12 = (_QWORD *)*v12;
    }
    while (v12);
    v14 = (void **)v21;
    if (v21)
    {
      do
      {
        v17 = (void **)*v14;
        if (*((char *)v14 + 39) < 0)
          operator delete(v14[2]);
        operator delete(v14);
        v14 = v17;
      }
      while (v17);
    }
  }
  v15 = v20[0];
  v20[0] = 0;
  if (v15)
    operator delete(v15);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AEB258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, _QWORD *__p)
{
  _QWORD *v18;
  uint64_t v19;
  void **v20;
  void **v21;

  v18 = __p;
  if (__p)
  {
    do
    {
      v19 = v18[5];
      if (v19)
        (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
      v18 = (_QWORD *)*v18;
    }
    while (v18);
    v20 = (void **)__p;
    do
    {
      v21 = (void **)*v20;
      if (*((char *)v20 + 39) < 0)
        operator delete(v20[2]);
      operator delete(v20);
      v20 = v21;
    }
    while (v21);
  }
  if (!a15)
    _Unwind_Resume(exception_object);
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AEB300(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void **v14;
  void *v15;
  void **v17;
  void *__p[2];
  unint64_t v19;
  void *v20[2];
  void *v21;
  char v22[16];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)v20, a3);
  strcpy(v22, "Q%9#4\"9>=5");
  v5 = (const char *)sub_23958E518((uint64_t)v22);
  v6 = strlen(v5);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = operator new(v9 + 1);
    __p[1] = v7;
    v19 = v10 | 0x8000000000000000;
    __p[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v19) = v6;
  v8 = __p;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AE0580;
  v11[1] = a1;
  sub_23961580C((uint64_t)v20, (uint64_t)__p, (uint64_t)v11);
  if (SHIBYTE(v19) < 0)
    operator delete(__p[0]);
  sub_2395902F0((uint64_t)v20, a2);
  v12 = v21;
  if (v21)
  {
    do
    {
      v13 = v12[5];
      if (v13)
        (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
      v12 = (_QWORD *)*v12;
    }
    while (v12);
    v14 = (void **)v21;
    if (v21)
    {
      do
      {
        v17 = (void **)*v14;
        if (*((char *)v14 + 39) < 0)
          operator delete(v14[2]);
        operator delete(v14);
        v14 = v17;
      }
      while (v17);
    }
  }
  v15 = v20[0];
  v20[0] = 0;
  if (v15)
    operator delete(v15);
  return a2;
}

void sub_239AEB4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  sub_2395905C0((uint64_t)&a15);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AEB50C(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int16x8_t v19;
  const char *v20;
  const char *v21;
  size_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  const char *v28;
  size_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int16x8_t v35;
  const char *v36;
  const char *v37;
  size_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  void **v46;
  void *v47;
  void **v49;
  void *v50[2];
  unint64_t v51;
  void *v52[2];
  unint64_t v53;
  void *v54[2];
  unint64_t v55;
  char v56[8];
  void *v57[2];
  unint64_t v58;
  void *__dst[2];
  unint64_t v60;
  void *__p[2];
  void *v62;
  uint64_t v63;
  int v64;
  __int16 v65;
  uint64_t v66;
  char v67[8];
  uint64_t v68;
  char v69[8];
  uint64_t v70;
  int v71;
  uint64_t v72;

  v72 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v70 = 0x2D2125132139224CLL;
  v71 = 4139307;
  v5 = sub_23958E4C8((uint64_t)&v70);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v60 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v60) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF5A0;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  strcpy(v56, "A2\".3$");
  v12 = sub_239513174(v56);
  v13 = strlen(v12);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v57[1] = v14;
    v58 = v17 | 0x8000000000000000;
    v57[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v58) = v13;
  v15 = v57;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250AE0580;
  v18[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v57, (uint64_t)v18);
  v68 = 0x7B707078406C761FLL;
  strcpy(v69, "@r~lt");
  sub_23971A32C((uint64_t)&v68, v19);
  v21 = v20;
  v22 = strlen(v20);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = (void *)v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    v54[1] = v23;
    v55 = v26 | 0x8000000000000000;
    v54[0] = v24;
    goto LABEL_24;
  }
  HIBYTE(v55) = v22;
  v24 = v54;
  if (v22)
LABEL_24:
    memmove(v24, v21, (size_t)v23);
  *((_BYTE *)v23 + (_QWORD)v24) = 0;
  v27 = (_QWORD *)operator new();
  *v27 = &off_250AFFEA8;
  v27[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v54, (uint64_t)v27);
  v66 = 0x7D714D7677616712;
  strcpy(v67, "|t{u");
  v28 = sub_239510ECC((uint64_t)&v66);
  v29 = strlen(v28);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    v52[1] = v30;
    v53 = v33 | 0x8000000000000000;
    v52[0] = v31;
    goto LABEL_32;
  }
  HIBYTE(v53) = v29;
  v31 = v52;
  if (v29)
LABEL_32:
    memmove(v31, v28, (size_t)v30);
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  v34 = (_QWORD *)operator new();
  *v34 = &off_250AF3590;
  v34[1] = a1 + 88;
  sub_23961580C((uint64_t)__p, (uint64_t)v52, (uint64_t)v34);
  v63 = 0x121A1E0319020577;
  v65 = 24;
  v64 = 286858792;
  sub_23971A32C((uint64_t)&v63, v35);
  v37 = v36;
  v38 = strlen(v36);
  if (v38 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v39 = (void *)v38;
  if (v38 >= 0x17)
  {
    v41 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 | 7) != 0x17)
      v41 = v38 | 7;
    v42 = v41 + 1;
    v40 = operator new(v41 + 1);
    v50[1] = v39;
    v51 = v42 | 0x8000000000000000;
    v50[0] = v40;
    goto LABEL_40;
  }
  HIBYTE(v51) = v38;
  v40 = v50;
  if (v38)
LABEL_40:
    memmove(v40, v37, (size_t)v39);
  *((_BYTE *)v39 + (_QWORD)v40) = 0;
  v43 = (_QWORD *)operator new();
  *v43 = &off_250B002F8;
  v43[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v50, (uint64_t)v43);
  if (SHIBYTE(v51) < 0)
  {
    operator delete(v50[0]);
    if ((SHIBYTE(v53) & 0x80000000) == 0)
    {
LABEL_43:
      if ((SHIBYTE(v55) & 0x80000000) == 0)
        goto LABEL_44;
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(v53) & 0x80000000) == 0)
  {
    goto LABEL_43;
  }
  operator delete(v52[0]);
  if ((SHIBYTE(v55) & 0x80000000) == 0)
  {
LABEL_44:
    if ((SHIBYTE(v58) & 0x80000000) == 0)
      goto LABEL_45;
LABEL_61:
    operator delete(v57[0]);
    if ((SHIBYTE(v60) & 0x80000000) == 0)
      goto LABEL_46;
    goto LABEL_62;
  }
LABEL_60:
  operator delete(v54[0]);
  if (SHIBYTE(v58) < 0)
    goto LABEL_61;
LABEL_45:
  if ((SHIBYTE(v60) & 0x80000000) == 0)
    goto LABEL_46;
LABEL_62:
  operator delete(__dst[0]);
LABEL_46:
  sub_2395902F0((uint64_t)__p, a2);
  v44 = v62;
  if (v62)
  {
    do
    {
      v45 = v44[5];
      if (v45)
        (*(void (**)(uint64_t))(*(_QWORD *)v45 + 8))(v45);
      v44 = (_QWORD *)*v44;
    }
    while (v44);
    v46 = (void **)v62;
    if (v62)
    {
      do
      {
        v49 = (void **)*v46;
        if (*((char *)v46 + 39) < 0)
          operator delete(v46[2]);
        operator delete(v46);
        v46 = v49;
      }
      while (v49);
    }
  }
  v47 = __p[0];
  __p[0] = 0;
  if (v47)
    operator delete(v47);
  return a2;
}

void sub_239AEBAD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,char a41)
{
  sub_2395905C0((uint64_t)&a41);
  _Unwind_Resume(a1);
}

void sub_239AEBBBC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AEBBE0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEB300(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AEBC1C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AEBC54(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AEBC78(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEC094(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AEBCB4(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  const char *v13;
  size_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void **v22;
  void *v23;
  void **v25;
  void *v26[2];
  unint64_t v27;
  void *__dst[2];
  unint64_t v29;
  void *__p[2];
  void *v31;
  uint64_t v32;
  char v33[8];
  uint64_t v34;
  int v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v34 = 0x7A4B7871707B7914;
  v35 = 7436661;
  v5 = sub_23958E4C8((uint64_t)&v34);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v29 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v29) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF330;
  v11[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v32 = 0x361F2C25242F2D40;
  strcpy(v33, "%23)/.");
  sub_23958E5E0((uint64_t)&v32);
  v13 = v12;
  v14 = strlen(v12);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v15 = (void *)v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    v26[1] = v15;
    v27 = v18 | 0x8000000000000000;
    v26[0] = v16;
    goto LABEL_16;
  }
  HIBYTE(v27) = v14;
  v16 = v26;
  if (v14)
LABEL_16:
    memmove(v16, v13, (size_t)v15);
  *((_BYTE *)v15 + (_QWORD)v16) = 0;
  v19 = (_QWORD *)operator new();
  *v19 = &off_250ADF330;
  v19[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v26, (uint64_t)v19);
  if (SHIBYTE(v27) < 0)
  {
    operator delete(v26[0]);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
      goto LABEL_19;
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(__dst[0]);
LABEL_19:
  sub_23959479C((uint64_t)__p, a2);
  v20 = v31;
  if (v31)
  {
    do
    {
      v21 = v20[5];
      if (v21)
        (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
      v20 = (_QWORD *)*v20;
    }
    while (v20);
    v22 = (void **)v31;
    if (v31)
    {
      do
      {
        v25 = (void **)*v22;
        if (*((char *)v22 + 39) < 0)
          operator delete(v22[2]);
        operator delete(v22);
        v22 = v25;
      }
      while (v25);
    }
  }
  v23 = __p[0];
  __p[0] = 0;
  if (v23)
    operator delete(v23);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AEBFAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,_QWORD *__p)
{
  _QWORD *v25;
  uint64_t v26;
  void **v27;
  void **v28;

  v25 = __p;
  if (__p)
  {
    do
    {
      v26 = v25[5];
      if (v26)
        (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
      v25 = (_QWORD *)*v25;
    }
    while (v25);
    v27 = (void **)__p;
    do
    {
      v28 = (void **)*v27;
      if (*((char *)v27 + 39) < 0)
        operator delete(v27[2]);
      operator delete(v27);
      v27 = v28;
    }
    while (v28);
  }
  if (!a22)
    _Unwind_Resume(exception_object);
  operator delete(a22);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AEC094(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  const char *v13;
  size_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  void **v22;
  void *v23;
  void **v25;
  void *v26[2];
  unint64_t v27;
  void *__dst[2];
  unint64_t v29;
  void *__p[2];
  void *v31;
  uint64_t v32;
  int v33;
  char v34[4];
  uint64_t v35;
  int v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v35 = 0x1524171E1F14167BLL;
  v36 = 1971738;
  v5 = sub_23958E4C8((uint64_t)&v35);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v29 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v29) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF3C0;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v32 = 0x7B5261686962600DLL;
  strcpy(v34, "bc");
  v33 = 1686011752;
  sub_23958E5E0((uint64_t)&v32);
  v13 = v12;
  v14 = strlen(v12);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v15 = (void *)v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    v16 = operator new(v17 + 1);
    v26[1] = v15;
    v27 = v18 | 0x8000000000000000;
    v26[0] = v16;
    goto LABEL_16;
  }
  HIBYTE(v27) = v14;
  v16 = v26;
  if (v14)
LABEL_16:
    memmove(v16, v13, (size_t)v15);
  *((_BYTE *)v15 + (_QWORD)v16) = 0;
  v19 = (_QWORD *)operator new();
  *v19 = &off_250ADF3C0;
  v19[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v26, (uint64_t)v19);
  if (SHIBYTE(v27) < 0)
  {
    operator delete(v26[0]);
    if ((SHIBYTE(v29) & 0x80000000) == 0)
      goto LABEL_19;
  }
  else if ((SHIBYTE(v29) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(__dst[0]);
LABEL_19:
  sub_2395902F0((uint64_t)__p, a2);
  v20 = v31;
  if (v31)
  {
    do
    {
      v21 = v20[5];
      if (v21)
        (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
      v20 = (_QWORD *)*v20;
    }
    while (v20);
    v22 = (void **)v31;
    if (v31)
    {
      do
      {
        v25 = (void **)*v22;
        if (*((char *)v22 + 39) < 0)
          operator delete(v22[2]);
        operator delete(v22);
        v22 = v25;
      }
      while (v25);
    }
  }
  v23 = __p[0];
  __p[0] = 0;
  if (v23)
    operator delete(v23);
  return a2;
}

void sub_239AEC374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  sub_2395905C0((uint64_t)&a22);
  _Unwind_Resume(a1);
}

void sub_239AEC3C8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AEC3EC(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD **v5;

  v5 = *(_QWORD ***)(a1 + 8);
  sub_239AED024(&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AEC438(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t *v3;
  int v4;
  int v6;
  int v7;
  int i;
  _QWORD *exception;
  uint64_t v10;

  v3 = a2;
  v10 = *(_QWORD *)(a1 + 8);
  if (!a3)
    goto LABEL_4;
  v4 = std::istream::peek();
  if ((v4 & 0xFFFFFFFE) == 0xDE)
  {
    a2 = v3;
    a3 = 1;
LABEL_4:
    sub_239AEC544(&v10, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  v6 = v4;
  std::istream::get();
  if (v6 == 221)
  {
    v7 = sub_2396162D4((uint64_t)v3, 221);
    if (*(_DWORD *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 32))
    {
      exception = __cxa_allocate_exception(8uLL);
      *exception = MEMORY[0x24BEDB8F0] + 16;
      __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
    }
    for (i = v7; i; --i)
      sub_239AEC544(&v10, v3, 1);
  }
  else
  {
    sub_2396163F8(v3, v6);
  }
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AEC544(_QWORD *a1, uint64_t *a2, int a3)
{
  int v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  unsigned int v12;
  uint64_t **v13;
  uint64_t *v14;
  uint64_t **v15;
  unint64_t v16;
  uint64_t **v17;
  unint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t *v21;
  int v22;
  uint64_t *v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  BOOL v31;
  char i;
  unsigned int v33;
  int v34;
  int v35;
  uint64_t **v36;
  uint64_t *v37;
  uint64_t **v38;
  unint64_t v39;
  uint64_t **v40;
  unint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t *v44;
  int v45;
  int j;
  unsigned int v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *__p;
  char *v58;
  uint64_t v59;
  int v60;
  uint64_t v61[2];
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char v65;
  _BYTE v66[152];
  unint64_t v67;
  std::string v68;

  if (a3)
  {
    v4 = std::istream::get();
    v5 = sub_2396162D4((uint64_t)a2, v4);
    if (*(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32))
      v6 = 1;
    else
      v6 = v5 == 0;
    if (!v6)
    {
      v7 = 0;
      v55 = v5;
      v8 = *MEMORY[0x24BEDB7F0];
      v50 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v52 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v9 = MEMORY[0x24BEDB848] + 16;
      do
      {
        memset(&v68, 0, sizeof(v68));
        v11 = std::istream::get();
        v12 = sub_2396162D4((uint64_t)a2, v11);
        if (v12)
        {
          std::string::resize(&v68, v12, 0);
          std::istream::read();
        }
        else if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
        {
          *v68.__r_.__value_.__l.__data_ = 0;
          v68.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          v68.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&v68.__r_.__value_.__s + 23) = 0;
        }
        v67 = 0;
        sub_239593804((uint64_t)v61, (uint64_t)&v68, 24);
        MEMORY[0x23B83DD1C](v61, &v67);
        __p = 0;
        v58 = 0;
        v60 = 0;
        v59 = 0;
        sub_239AECCEC((uint64_t)&__p, a2, 1);
        v13 = (uint64_t **)*a1;
        v15 = (uint64_t **)(*a1 + 8);
        v14 = *v15;
        v16 = v67;
        if (*v15)
        {
          while (1)
          {
            while (1)
            {
              v17 = (uint64_t **)v14;
              v18 = v14[4];
              if (v67 >= v18)
                break;
              v14 = *v17;
              v15 = v17;
              if (!*v17)
                goto LABEL_23;
            }
            if (v18 >= v67)
              break;
            v14 = v17[1];
            if (!v14)
            {
              v15 = v17 + 1;
              goto LABEL_23;
            }
          }
          v19 = (char *)v17;
        }
        else
        {
          v17 = (uint64_t **)(*a1 + 8);
LABEL_23:
          v19 = (char *)operator new(0x48uLL);
          *((_QWORD *)v19 + 4) = v16;
          *(_OWORD *)(v19 + 40) = 0u;
          *(_OWORD *)(v19 + 56) = 0u;
          *(_QWORD *)v19 = 0;
          *((_QWORD *)v19 + 1) = 0;
          *((_QWORD *)v19 + 2) = v17;
          *v15 = (uint64_t *)v19;
          v20 = (uint64_t *)**v13;
          v21 = (uint64_t *)v19;
          if (v20)
          {
            *v13 = v20;
            v21 = *v15;
          }
          sub_2394213B8(v13[1], v21);
          v13[2] = (uint64_t *)((char *)v13[2] + 1);
        }
        if (v19 + 40 != (char *)&__p)
          sub_23942156C((_QWORD *)v19 + 5, (char *)__p, v58, (v58 - (_BYTE *)__p) >> 2);
        *((_DWORD *)v19 + 16) = v60;
        v22 = *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32);
        if (__p)
        {
          v58 = (char *)__p;
          operator delete(__p);
        }
        v61[0] = v8;
        *(uint64_t *)((char *)v61 + *(_QWORD *)(v8 - 24)) = v52;
        v62 = v50;
        v63 = v9;
        if (v65 < 0)
          operator delete(v64);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v66);
        if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v68.__r_.__value_.__l.__data_);
        ++v7;
        if (v22)
          v10 = 1;
        else
          v10 = v7 == v55;
      }
      while (!v10);
    }
  }
  else
  {
    v23 = a2 + 4;
    v24 = MEMORY[0x24BDAC740];
    while (1)
    {
      v25 = std::istream::peek();
      v26 = v25 <= 0x7F ? *(_DWORD *)(v24 + 4 * v25 + 60) & 0x4000 : __maskrune(v25, 0x4000uLL);
      v27 = *(_QWORD *)(*a2 - 24);
      if (!v26)
        break;
      if (!*(_DWORD *)((char *)v23 + v27))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v27 + 32) & 2) == 0)
    {
      v67 = 0;
      memset(&v68, 0, sizeof(v68));
      if (std::istream::get() == 123)
      {
        while (1)
        {
          v28 = std::istream::peek();
          v29 = v28 <= 0x7F ? *(_DWORD *)(v24 + 4 * v28 + 60) & 0x4000 : __maskrune(v28, 0x4000uLL);
          v30 = *(_QWORD *)(*a2 - 24);
          if (!v29)
            break;
          if (!*(_DWORD *)((char *)v23 + v30))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v30 + 32) & 2) == 0)
        {
          v31 = std::istream::peek() == 125;
          v53 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
          v54 = *MEMORY[0x24BEDB7F0];
          v51 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
          v49 = MEMORY[0x24BEDB848] + 16;
          while ((*((_BYTE *)v23 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && !v31)
          {
            if (!sub_239595A48((uint64_t)&v68, a2))
              goto LABEL_104;
            sub_2395EDF80((uint64_t)&v67, (uint64_t)&v68);
            for (i = std::istream::peek();
                  i != 58 && !*(_DWORD *)((char *)v23 + *(_QWORD *)(*a2 - 24));
                  i = std::istream::peek())
            {
              std::istream::get();
            }
            if (*(_DWORD *)((char *)v23 + *(_QWORD *)(*a2 - 24)))
              goto LABEL_104;
LABEL_61:
            std::istream::get();
            while (1)
            {
              v33 = std::istream::peek();
              v34 = v33 <= 0x7F ? *(_DWORD *)(v24 + 4 * v33 + 60) & 0x4000 : __maskrune(v33, 0x4000uLL);
              v35 = *(_DWORD *)((char *)v23 + *(_QWORD *)(*a2 - 24));
              if (!v34)
                break;
              if (!v35)
                goto LABEL_61;
            }
            if ((v35 & 2) == 0)
            {
              sub_2394988CC((uint64_t)v61);
              if (sub_239596128(a2))
              {
                __p = 0;
                v58 = 0;
                v60 = 0;
                v59 = 0;
                sub_239AECCEC((uint64_t)&__p, v61, 0);
                v36 = (uint64_t **)*a1;
                v38 = (uint64_t **)(*a1 + 8);
                v37 = *v38;
                v39 = v67;
                if (*v38)
                {
                  while (1)
                  {
                    while (1)
                    {
                      v40 = (uint64_t **)v37;
                      v41 = v37[4];
                      if (v67 >= v41)
                        break;
                      v37 = *v40;
                      v38 = v40;
                      if (!*v40)
                        goto LABEL_77;
                    }
                    if (v41 >= v67)
                      break;
                    v37 = v40[1];
                    if (!v37)
                    {
                      v38 = v40 + 1;
                      goto LABEL_77;
                    }
                  }
                  v42 = (char *)v40;
                }
                else
                {
                  v40 = (uint64_t **)(*a1 + 8);
LABEL_77:
                  v42 = (char *)operator new(0x48uLL);
                  *((_QWORD *)v42 + 4) = v39;
                  *(_OWORD *)(v42 + 40) = 0u;
                  *(_OWORD *)(v42 + 56) = 0u;
                  *(_QWORD *)v42 = 0;
                  *((_QWORD *)v42 + 1) = 0;
                  *((_QWORD *)v42 + 2) = v40;
                  *v38 = (uint64_t *)v42;
                  v43 = (uint64_t *)**v36;
                  v44 = (uint64_t *)v42;
                  if (v43)
                  {
                    *v36 = v43;
                    v44 = *v38;
                  }
                  sub_2394213B8(v36[1], v44);
                  v36[2] = (uint64_t *)((char *)v36[2] + 1);
                }
                if (v42 + 40 != (char *)&__p)
                  sub_23942156C((_QWORD *)v42 + 5, (char *)__p, v58, (v58 - (_BYTE *)__p) >> 2);
                *((_DWORD *)v42 + 16) = v60;
                for (j = std::istream::peek(); ; j = std::istream::peek())
                {
                  v47 = j << 24;
                  if (j << 24 == 738197504)
                    goto LABEL_94;
                  if (v47 == 2097152000)
                  {
                    v31 = 1;
                    goto LABEL_96;
                  }
                  if (v47 <= 0x7F000000)
                  {
                    if ((*(_DWORD *)(v24 + 4 * (char)j + 60) & 0x4000) == 0)
                      break;
                  }
                  else if (!__maskrune((char)j, 0x4000uLL))
                  {
                    break;
                  }
                  if ((*((_BYTE *)v23 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
                    break;
                  std::istream::get();
                }
                if (v47 == 738197504)
                {
LABEL_94:
                  std::istream::get();
                  v31 = 0;
LABEL_96:
                  v45 = 0;
                  v48 = (char *)__p;
                  if (!__p)
                    goto LABEL_98;
LABEL_97:
                  v58 = v48;
                  operator delete(v48);
                  goto LABEL_98;
                }
                v31 = 0;
                v45 = 1;
                v48 = (char *)__p;
                if (__p)
                  goto LABEL_97;
              }
              else
              {
                v31 = 0;
                v45 = 1;
              }
LABEL_98:
              v61[0] = v54;
              *(uint64_t *)((char *)v61 + *(_QWORD *)(v54 - 24)) = v53;
              v62 = v51;
              v63 = v49;
              if (v65 < 0)
                operator delete(v64);
              std::streambuf::~streambuf();
              std::iostream::~basic_iostream();
              MEMORY[0x23B83E250](v66);
              if (!v45)
                continue;
            }
            goto LABEL_104;
          }
          if (sub_2395959B4(a2))
            std::istream::get();
        }
      }
LABEL_104:
      if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v68.__r_.__value_.__l.__data_);
    }
  }
}

void sub_239AECC7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v23;

  if (*(char *)(v23 - 89) < 0)
    operator delete(*(void **)(v23 - 112));
  _Unwind_Resume(exception_object);
}

uint64_t *sub_239AECCEC(uint64_t a1, uint64_t *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int16x8_t v12;
  const char *v13;
  const char *v14;
  size_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void **v23;
  void *v24;
  void **v26;
  void *v27[2];
  unint64_t v28;
  char v29[8];
  void *__dst[2];
  unint64_t v31;
  void *__p[2];
  void *v33;
  int v34;
  char v35[16];
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v34 = 0;
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v29, "\"@@MZ");
  v5 = sub_239A90C78(v29);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v31 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v31) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF7B0;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  strcpy(v35, "%FDUQPW@zQ\\U@");
  sub_23971A32C((uint64_t)v35, v12);
  v14 = v13;
  v15 = strlen(v13);
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v16 = (void *)v15;
  if (v15 >= 0x17)
  {
    v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v18 = v15 | 7;
    v19 = v18 + 1;
    v17 = operator new(v18 + 1);
    v27[1] = v16;
    v28 = v19 | 0x8000000000000000;
    v27[0] = v17;
    goto LABEL_16;
  }
  HIBYTE(v28) = v15;
  v17 = v27;
  if (v15)
LABEL_16:
    memmove(v17, v14, (size_t)v16);
  *((_BYTE *)v16 + (_QWORD)v17) = 0;
  v20 = (_QWORD *)operator new();
  *v20 = &off_250ADF240;
  v20[1] = &v34;
  sub_23961580C((uint64_t)__p, (uint64_t)v27, (uint64_t)v20);
  if (SHIBYTE(v28) < 0)
  {
    operator delete(v27[0]);
    if ((SHIBYTE(v31) & 0x80000000) == 0)
      goto LABEL_19;
  }
  else if ((SHIBYTE(v31) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(__dst[0]);
LABEL_19:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
    *(_DWORD *)(a1 + 24) = v34;
  v21 = v33;
  if (v33)
  {
    do
    {
      v22 = v21[5];
      if (v22)
        (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
      v21 = (_QWORD *)*v21;
    }
    while (v21);
    v23 = (void **)v33;
    if (v33)
    {
      do
      {
        v26 = (void **)*v23;
        if (*((char *)v23 + 39) < 0)
          operator delete(v23[2]);
        operator delete(v23);
        v23 = v26;
      }
      while (v26);
    }
  }
  v24 = __p[0];
  __p[0] = 0;
  if (v24)
    operator delete(v24);
  return a2;
}

void sub_239AECFD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  sub_2395905C0((uint64_t)&a23);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AED024(_QWORD ***a1, _QWORD *a2, int a3)
{
  unint64_t v5;
  _QWORD **v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  BOOL v16;

  v5 = (unint64_t)(*a1)[2];
  if (a3 && v5 >> 31)
  {
    std::ostream::put();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    std::ostream::write();
    v7 = *a1;
    if ((*a1)[2])
    {
      v8 = 0;
      v9 = *v7;
      do
      {
        v12 = v7 + 1;
        if (v9 == v12)
        {
          v10 = 0;
          v11 = v9;
        }
        else
        {
          v13 = 0;
          v11 = v9;
          do
          {
            v14 = (_QWORD *)v11[1];
            v15 = v11;
            if (v14)
            {
              do
              {
                v11 = v14;
                v14 = (_QWORD *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                v11 = (_QWORD *)v15[2];
                v16 = *v11 == (_QWORD)v15;
                v15 = v11;
              }
              while (!v16);
            }
            v10 = v13 + 1;
            if (v13 > 0x7FFFFFFD)
              break;
            ++v13;
          }
          while (v11 != v12);
        }
        sub_239AED1B4(v9, v11, v10, a2, 1);
        v8 += 0x7FFFFFFFLL;
        v7 = *a1;
        v9 = v11;
      }
      while (v8 < (unint64_t)(*a1)[2]);
    }
  }
  else
  {
    sub_239AED1B4(**a1, *a1 + 1, v5, a2, a3);
  }
  return a2;
}

uint64_t sub_239AED1B4(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4, int a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  void *__p;
  int v25;
  unsigned __int8 v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char v31;
  _DWORD v32[42];

  if (a5)
  {
    result = std::ostream::put();
    if (!(a3 >> 31))
    {
      v32[38] = a3;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      result = std::ostream::write();
      if (a1 != a2)
      {
        v10 = *MEMORY[0x24BEDB7F0];
        v11 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v12 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v13 = MEMORY[0x24BEDB848] + 16;
        do
        {
          sub_2394988CC((uint64_t)v27);
          std::ostream::operator<<();
          std::stringbuf::str();
          std::ostream::put();
          v14 = v26;
          if ((v26 & 0x80u) != 0)
            v14 = v25;
          v32[39] = v14;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          sub_239AED5B8((uint64_t)(a1 + 5), a4, 1);
          if ((char)v26 < 0)
            operator delete(__p);
          v27[0] = v10;
          *(_QWORD *)((char *)v27 + *(_QWORD *)(v10 - 24)) = v11;
          v28 = v12;
          v29 = v13;
          if (v31 < 0)
            operator delete(v30);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          result = MEMORY[0x23B83E250](v32);
          v15 = (_QWORD *)a1[1];
          if (v15)
          {
            do
            {
              v16 = v15;
              v15 = (_QWORD *)*v15;
            }
            while (v15);
          }
          else
          {
            do
            {
              v16 = (_QWORD *)a1[2];
              v17 = *v16 == (_QWORD)a1;
              a1 = v16;
            }
            while (!v17);
          }
          a1 = v16;
        }
        while (v16 != a2);
      }
    }
  }
  else
  {
    std::ostream::put();
    if (a1 != a2)
    {
      v18 = *MEMORY[0x24BEDB7F0];
      v20 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
      v19 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v21 = MEMORY[0x24BEDB848] + 16;
      do
      {
        sub_2394988CC((uint64_t)v27);
        std::ostream::operator<<();
        std::stringbuf::str();
        std::ostream::put();
        std::ostream::write();
        std::ostream::put();
        std::ostream::put();
        sub_239AED5B8((uint64_t)(a1 + 5), a4, 0);
        v22 = (_QWORD *)a1[1];
        v23 = a1;
        if (v22)
        {
          do
          {
            a1 = v22;
            v22 = (_QWORD *)*v22;
          }
          while (v22);
        }
        else
        {
          do
          {
            a1 = (_QWORD *)v23[2];
            v17 = *a1 == (_QWORD)v23;
            v23 = a1;
          }
          while (!v17);
        }
        if (a1 != a2)
          std::ostream::put();
        if ((char)v26 < 0)
          operator delete(__p);
        v27[0] = v18;
        *(_QWORD *)((char *)v27 + *(_QWORD *)(v18 - 24)) = v20;
        v28 = v19;
        v29 = v21;
        if (v31 < 0)
          operator delete(v30);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v32);
      }
      while (a1 != a2);
    }
    return std::ostream::put();
  }
  return result;
}

void sub_239AED570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  sub_239498ABC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AED5B8(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int16x8_t v12;
  const char *v13;
  const char *v14;
  size_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void **v23;
  void *v24;
  void **v26;
  void *v27[2];
  unint64_t v28;
  int v29;
  __int16 v30;
  void *__dst[2];
  unint64_t v32;
  void *__p[2];
  void *v34;
  int v35;
  char v36[16];
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v35 = *(_DWORD *)(a1 + 24);
  sub_2396157EC((uint64_t)__p, a3);
  v30 = 111;
  v29 = 2020963607;
  v5 = sub_239A90C78((char *)&v29);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v32 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v32) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250AE05B0;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  strcpy(v36, ">]_NJKL[aJGN[");
  sub_23971A32C((uint64_t)v36, v12);
  v14 = v13;
  v15 = strlen(v13);
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v16 = (void *)v15;
  if (v15 >= 0x17)
  {
    v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v18 = v15 | 7;
    v19 = v18 + 1;
    v17 = operator new(v18 + 1);
    v27[1] = v16;
    v28 = v19 | 0x8000000000000000;
    v27[0] = v17;
    goto LABEL_16;
  }
  HIBYTE(v28) = v15;
  v17 = v27;
  if (v15)
LABEL_16:
    memmove(v17, v14, (size_t)v16);
  *((_BYTE *)v16 + (_QWORD)v17) = 0;
  v20 = (_QWORD *)operator new();
  *v20 = &off_250ADF240;
  v20[1] = &v35;
  sub_23961580C((uint64_t)__p, (uint64_t)v27, (uint64_t)v20);
  if (SHIBYTE(v28) < 0)
  {
    operator delete(v27[0]);
    if ((SHIBYTE(v32) & 0x80000000) == 0)
      goto LABEL_19;
  }
  else if ((SHIBYTE(v32) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(__dst[0]);
LABEL_19:
  sub_2395902F0((uint64_t)__p, a2);
  v21 = v34;
  if (v34)
  {
    do
    {
      v22 = v21[5];
      if (v22)
        (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
      v21 = (_QWORD *)*v21;
    }
    while (v21);
    v23 = (void **)v34;
    if (v34)
    {
      do
      {
        v26 = (void **)*v23;
        if (*((char *)v23 + 39) < 0)
          operator delete(v23[2]);
        operator delete(v23);
        v23 = v26;
      }
      while (v26);
    }
  }
  v24 = __p[0];
  __p[0] = 0;
  if (v24)
    operator delete(v24);
  return a2;
}

void sub_239AED898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  sub_2395905C0((uint64_t)&a23);
  _Unwind_Resume(a1);
}

void sub_239AED8EC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AED910(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEF8C0(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AED94C(uint64_t a1, uint64_t *a2, char a3)
{
  _DWORD *v4;
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  int32x4_t v13;
  const char *v14;
  const char *v15;
  size_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int8x16_t v22;
  double v23;
  int32x4_t v24;
  const char *v25;
  const char *v26;
  size_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int8x16_t v33;
  double v34;
  int32x4_t v35;
  const char *v36;
  const char *v37;
  size_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  const char *v44;
  size_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  int8x16_t v51;
  double v52;
  int32x4_t v53;
  const char *v54;
  const char *v55;
  size_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  int8x16_t v62;
  double v63;
  int32x4_t v64;
  const char *v65;
  const char *v66;
  size_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  double v73;
  int32x4_t v74;
  const char *v75;
  const char *v76;
  size_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  void **v85;
  void *v86;
  void **v88;
  void *v89[2];
  unint64_t v90;
  void *v91[2];
  unint64_t v92;
  void *v93[2];
  unint64_t v94;
  void *v95[2];
  unint64_t v96;
  void *v97[2];
  unint64_t v98;
  void *v99[2];
  unint64_t v100;
  void *v101[2];
  unint64_t v102;
  void *__dst[2];
  unint64_t v104;
  int v105;
  void *__p[2];
  void *v107;
  int8x16_t v108[2];
  char v109;
  __int128 v110;
  uint64_t v111;
  char v112[32];
  char v113[16];
  __int128 v114;
  uint64_t v115;
  __int128 v116;
  int v117;
  int8x16_t v118[2];
  char v119;
  char v120[16];
  uint64_t v121;

  v121 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD **)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v105 = 0;
  strcpy(v120, "*D_Gu^BXOKNY");
  v5 = sub_239510ECC((uint64_t)v120);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v104 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v104) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF240;
  v11[1] = v4 + 3;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v118[0] = (int8x16_t)xmmword_239F0D28A;
  v118[1] = xmmword_239F0D29A;
  v119 = 0;
  sub_2396EFE38((uint64_t)v118, (int32x4_t)xmmword_239F0D28A, xmmword_239F0D29A, v12, v13);
  v15 = v14;
  v16 = strlen(v14);
  if (v16 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = (void *)v16;
  if (v16 >= 0x17)
  {
    v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17)
      v19 = v16 | 7;
    v20 = v19 + 1;
    v18 = operator new(v19 + 1);
    v101[1] = v17;
    v102 = v20 | 0x8000000000000000;
    v101[0] = v18;
    goto LABEL_16;
  }
  HIBYTE(v102) = v16;
  v18 = v101;
  if (v16)
LABEL_16:
    memmove(v18, v15, (size_t)v17);
  *((_BYTE *)v17 + (_QWORD)v18) = 0;
  v21 = (_QWORD *)operator new();
  *v21 = &off_250ADF240;
  v21[1] = &v105;
  sub_23961580C((uint64_t)__p, (uint64_t)v101, (uint64_t)v21);
  v116 = xmmword_239F0D2AB;
  v117 = 398863;
  sub_23958E55C((uint64_t)&v116, (int32x4_t)xmmword_239F0D2AB, v22, v23, v24);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = (void *)v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = operator new(v30 + 1);
    v99[1] = v28;
    v100 = v31 | 0x8000000000000000;
    v99[0] = v29;
    goto LABEL_24;
  }
  HIBYTE(v100) = v27;
  v29 = v99;
  if (v27)
LABEL_24:
    memmove(v29, v26, (size_t)v28);
  *((_BYTE *)v28 + (_QWORD)v29) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250ADF240;
  v32[1] = v4 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v99, (uint64_t)v32);
  v114 = xmmword_239F0D2BF;
  v115 = 0x3E2E373A2D0423;
  sub_2396F1A4C((uint64_t)&v114, (int32x4_t)xmmword_239F0D2BF, v33, v34, v35);
  v37 = v36;
  v38 = strlen(v36);
  if (v38 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v39 = (void *)v38;
  if (v38 >= 0x17)
  {
    v41 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 | 7) != 0x17)
      v41 = v38 | 7;
    v42 = v41 + 1;
    v40 = operator new(v41 + 1);
    v97[1] = v39;
    v98 = v42 | 0x8000000000000000;
    v97[0] = v40;
    goto LABEL_32;
  }
  HIBYTE(v98) = v38;
  v40 = v97;
  if (v38)
LABEL_32:
    memmove(v40, v37, (size_t)v39);
  *((_BYTE *)v39 + (_QWORD)v40) = 0;
  v43 = (_QWORD *)operator new();
  *v43 = &off_250ADF240;
  v43[1] = v4 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v97, (uint64_t)v43);
  strcpy(v113, "+L[^tBOX");
  v44 = sub_239513718(v113);
  v45 = strlen(v44);
  if (v45 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v46 = (void *)v45;
  if (v45 >= 0x17)
  {
    v48 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v45 | 7) != 0x17)
      v48 = v45 | 7;
    v49 = v48 + 1;
    v47 = operator new(v48 + 1);
    v95[1] = v46;
    v96 = v49 | 0x8000000000000000;
    v95[0] = v47;
    goto LABEL_40;
  }
  HIBYTE(v96) = v45;
  v47 = v95;
  if (v45)
LABEL_40:
    memmove(v47, v44, (size_t)v46);
  *((_BYTE *)v46 + (_QWORD)v47) = 0;
  v50 = (_QWORD *)operator new();
  *v50 = &off_250ADF630;
  v50[1] = v4 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v95, (uint64_t)v50);
  strcpy(v112, "!QSD~QSNBDRRHOF~BNOGHF");
  sub_2396EFBE0((uint64_t)v112, *(int32x4_t *)"!QSD~QSNBDRRHOF~BNOGHF", v51, v52, v53);
  v55 = v54;
  v56 = strlen(v54);
  if (v56 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v57 = (void *)v56;
  if (v56 >= 0x17)
  {
    v59 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v56 | 7) != 0x17)
      v59 = v56 | 7;
    v60 = v59 + 1;
    v58 = operator new(v59 + 1);
    v93[1] = v57;
    v94 = v60 | 0x8000000000000000;
    v93[0] = v58;
    goto LABEL_48;
  }
  HIBYTE(v94) = v56;
  v58 = v93;
  if (v56)
LABEL_48:
    memmove(v58, v55, (size_t)v57);
  *((_BYTE *)v57 + (_QWORD)v58) = 0;
  v61 = (_QWORD *)operator new();
  *v61 = &off_250AF3680;
  v61[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v93, (uint64_t)v61);
  v110 = xmmword_239F0D378;
  v111 = 0x69676860616D51;
  sub_2396F1A4C((uint64_t)&v110, (int32x4_t)xmmword_239F0D378, v62, v63, v64);
  v66 = v65;
  v67 = strlen(v65);
  if (v67 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v68 = (void *)v67;
  if (v67 >= 0x17)
  {
    v70 = (v67 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v67 | 7) != 0x17)
      v70 = v67 | 7;
    v71 = v70 + 1;
    v69 = operator new(v70 + 1);
    v91[1] = v68;
    v92 = v71 | 0x8000000000000000;
    v91[0] = v69;
    goto LABEL_56;
  }
  HIBYTE(v92) = v67;
  v69 = v91;
  if (v67)
LABEL_56:
    memmove(v69, v66, (size_t)v68);
  *((_BYTE *)v68 + (_QWORD)v69) = 0;
  v72 = (_QWORD *)operator new();
  *v72 = &off_250AF36B0;
  v72[1] = v4 + 26;
  sub_23961580C((uint64_t)__p, (uint64_t)v91, (uint64_t)v72);
  v108[0] = (int8x16_t)xmmword_239F0D390;
  v108[1] = xmmword_239F0D3A0;
  v109 = 0;
  sub_2396EFE38((uint64_t)v108, (int32x4_t)xmmword_239F0D390, xmmword_239F0D3A0, v73, v74);
  v76 = v75;
  v77 = strlen(v75);
  if (v77 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v78 = (void *)v77;
  if (v77 >= 0x17)
  {
    v80 = (v77 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v77 | 7) != 0x17)
      v80 = v77 | 7;
    v81 = v80 + 1;
    v79 = operator new(v80 + 1);
    v89[1] = v78;
    v90 = v81 | 0x8000000000000000;
    v89[0] = v79;
    goto LABEL_64;
  }
  HIBYTE(v90) = v77;
  v79 = v89;
  if (v77)
LABEL_64:
    memmove(v79, v76, (size_t)v78);
  *((_BYTE *)v78 + (_QWORD)v79) = 0;
  v82 = (_QWORD *)operator new();
  *v82 = &off_250AF36E0;
  v82[1] = v4 + 38;
  sub_23961580C((uint64_t)__p, (uint64_t)v89, (uint64_t)v82);
  if (SHIBYTE(v90) < 0)
  {
    operator delete(v89[0]);
    if ((SHIBYTE(v92) & 0x80000000) == 0)
    {
LABEL_67:
      if ((SHIBYTE(v94) & 0x80000000) == 0)
        goto LABEL_68;
      goto LABEL_89;
    }
  }
  else if ((SHIBYTE(v92) & 0x80000000) == 0)
  {
    goto LABEL_67;
  }
  operator delete(v91[0]);
  if ((SHIBYTE(v94) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v96) & 0x80000000) == 0)
      goto LABEL_69;
    goto LABEL_90;
  }
LABEL_89:
  operator delete(v93[0]);
  if ((SHIBYTE(v96) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v98) & 0x80000000) == 0)
      goto LABEL_70;
    goto LABEL_91;
  }
LABEL_90:
  operator delete(v95[0]);
  if ((SHIBYTE(v98) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v100) & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_92;
  }
LABEL_91:
  operator delete(v97[0]);
  if ((SHIBYTE(v100) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v102) & 0x80000000) == 0)
      goto LABEL_72;
LABEL_93:
    operator delete(v101[0]);
    if ((SHIBYTE(v104) & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_94;
  }
LABEL_92:
  operator delete(v99[0]);
  if (SHIBYTE(v102) < 0)
    goto LABEL_93;
LABEL_72:
  if ((SHIBYTE(v104) & 0x80000000) == 0)
    goto LABEL_73;
LABEL_94:
  operator delete(__dst[0]);
LABEL_73:
  if ((sub_23959479C((uint64_t)__p, a2) & 1) != 0)
    *v4 = v105;
  v83 = v107;
  if (v107)
  {
    do
    {
      v84 = v83[5];
      if (v84)
        (*(void (**)(uint64_t))(*(_QWORD *)v84 + 8))(v84);
      v83 = (_QWORD *)*v83;
    }
    while (v83);
    v85 = (void **)v107;
    if (v107)
    {
      do
      {
        v88 = (void **)*v85;
        if (*((char *)v85 + 39) < 0)
          operator delete(v85[2]);
        operator delete(v85);
        v85 = v88;
      }
      while (v88);
    }
  }
  v86 = __p[0];
  __p[0] = 0;
  if (v86)
    operator delete(v86);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AEE1C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,void *a59,uint64_t a60,_QWORD *__p)
{
  _QWORD *v62;
  uint64_t v63;
  void **v64;
  void **v65;

  v62 = __p;
  if (__p)
  {
    do
    {
      v63 = v62[5];
      if (v63)
        (*(void (**)(uint64_t))(*(_QWORD *)v63 + 8))(v63);
      v62 = (_QWORD *)*v62;
    }
    while (v62);
    v64 = (void **)__p;
    do
    {
      v65 = (void **)*v64;
      if (*((char *)v64 + 39) < 0)
        operator delete(v64[2]);
      operator delete(v64);
      v64 = v65;
    }
    while (v65);
  }
  if (!a59)
    _Unwind_Resume(exception_object);
  operator delete(a59);
  _Unwind_Resume(exception_object);
}

void sub_239AEE3BC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AEE3E0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEEC40(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AEE41C(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  const char *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int8x16_t v38;
  double v39;
  int32x4_t v40;
  const char *v41;
  const char *v42;
  size_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int8x16_t v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  void **v69;
  void *v70;
  void **v72;
  void *v73[2];
  unint64_t v74;
  void *v75[2];
  unint64_t v76;
  void *v77[2];
  unint64_t v78;
  void *v79[2];
  unint64_t v80;
  void *v81[2];
  unint64_t v82;
  void *__dst[2];
  unint64_t v84;
  void *__p[2];
  void *v86;
  char v87[32];
  char v88[16];
  char v89[32];
  char v90[32];
  _OWORD v91[2];
  __int128 v92;
  uint64_t v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  v92 = xmmword_239F0D305;
  v93 = 0xA03041E1E080ELL;
  sub_2396F1A4C((uint64_t)&v92, (int32x4_t)xmmword_239F0D305, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v84 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v84) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AE0220;
  v15[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v91[0] = xmmword_239F0D31D;
  *(_DWORD *)((char *)v91 + 15) = 661270;
  sub_23958E450((uint64_t)v91, (int32x4_t)xmmword_239F0D31D, v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v81[1] = v22;
    v82 = v25 | 0x8000000000000000;
    v81[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v82) = v21;
  v23 = v81;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AFFF08;
  v26[1] = v4 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v81, (uint64_t)v26);
  strcpy(v90, "D)! -%*\x1B&(16\x1B-0!6%0-+*7");
  sub_2396F1A4C((uint64_t)v90, *(int32x4_t *)"D)! -%*\x1B&(16\x1B-0!6%0-+*7", v27, v28, v29);
  v31 = v30;
  v32 = strlen(v30);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v79[1] = v33;
    v80 = v36 | 0x8000000000000000;
    v79[0] = v34;
    goto LABEL_24;
  }
  HIBYTE(v80) = v32;
  v34 = v79;
  if (v32)
LABEL_24:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250AFFF08;
  v37[1] = v4 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v79, (uint64_t)v37);
  strcpy(v89, "/BJKFNApMCZ]pDJ]AJCp\\FUJ");
  sub_2396EFC88((uint64_t)v89, *(int32x4_t *)"CZ]pDJ]AJCp\\FUJ", v38, v39, v40);
  v42 = v41;
  v43 = strlen(v41);
  if (v43 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v44 = (void *)v43;
  if (v43 >= 0x17)
  {
    v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v43 | 7) != 0x17)
      v46 = v43 | 7;
    v47 = v46 + 1;
    v45 = operator new(v46 + 1);
    v77[1] = v44;
    v78 = v47 | 0x8000000000000000;
    v77[0] = v45;
    goto LABEL_32;
  }
  HIBYTE(v78) = v43;
  v45 = v77;
  if (v43)
LABEL_32:
    memmove(v45, v42, (size_t)v44);
  *((_BYTE *)v44 + (_QWORD)v45) = 0;
  v48 = (_QWORD *)operator new();
  *v48 = &off_250AFFF08;
  v48[1] = v4 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v77, (uint64_t)v48);
  strcpy(v88, "'ANKKxOHKBT");
  v49 = sub_23958E4C8((uint64_t)v88);
  v50 = strlen(v49);
  if (v50 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v51 = (void *)v50;
  if (v50 >= 0x17)
  {
    v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v50 | 7) != 0x17)
      v53 = v50 | 7;
    v54 = v53 + 1;
    v52 = operator new(v53 + 1);
    v75[1] = v51;
    v76 = v54 | 0x8000000000000000;
    v75[0] = v52;
    goto LABEL_40;
  }
  HIBYTE(v76) = v50;
  v52 = v75;
  if (v50)
LABEL_40:
    memmove(v52, v49, (size_t)v51);
  *((_BYTE *)v51 + (_QWORD)v52) = 0;
  v55 = (_QWORD *)operator new();
  *v55 = &off_250AE0220;
  v55[1] = v4 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v75, (uint64_t)v55);
  strcpy(v87, ">]QSNQP[PJaMWD[aJVL[MV");
  sub_2396EFBE0((uint64_t)v87, *(int32x4_t *)">]QSNQP[PJaMWD[aJVL[MV", v56, v57, v58);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v73[1] = v62;
    v74 = v65 | 0x8000000000000000;
    v73[0] = v63;
    goto LABEL_48;
  }
  HIBYTE(v74) = v61;
  v63 = v73;
  if (v61)
LABEL_48:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AFFF08;
  v66[1] = v4 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v73, (uint64_t)v66);
  if (SHIBYTE(v74) < 0)
  {
    operator delete(v73[0]);
    if ((SHIBYTE(v76) & 0x80000000) == 0)
    {
LABEL_51:
      if ((SHIBYTE(v78) & 0x80000000) == 0)
        goto LABEL_52;
      goto LABEL_69;
    }
  }
  else if ((SHIBYTE(v76) & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v75[0]);
  if ((SHIBYTE(v78) & 0x80000000) == 0)
  {
LABEL_52:
    if ((SHIBYTE(v80) & 0x80000000) == 0)
      goto LABEL_53;
    goto LABEL_70;
  }
LABEL_69:
  operator delete(v77[0]);
  if ((SHIBYTE(v80) & 0x80000000) == 0)
  {
LABEL_53:
    if ((SHIBYTE(v82) & 0x80000000) == 0)
      goto LABEL_54;
LABEL_71:
    operator delete(v81[0]);
    if ((SHIBYTE(v84) & 0x80000000) == 0)
      goto LABEL_55;
    goto LABEL_72;
  }
LABEL_70:
  operator delete(v79[0]);
  if (SHIBYTE(v82) < 0)
    goto LABEL_71;
LABEL_54:
  if ((SHIBYTE(v84) & 0x80000000) == 0)
    goto LABEL_55;
LABEL_72:
  operator delete(__dst[0]);
LABEL_55:
  sub_23959479C((uint64_t)__p, a2);
  v67 = v86;
  if (v86)
  {
    do
    {
      v68 = v67[5];
      if (v68)
        (*(void (**)(uint64_t))(*(_QWORD *)v68 + 8))(v68);
      v67 = (_QWORD *)*v67;
    }
    while (v67);
    v69 = (void **)v86;
    if (v86)
    {
      do
      {
        v72 = (void **)*v69;
        if (*((char *)v69 + 39) < 0)
          operator delete(v69[2]);
        operator delete(v69);
        v69 = v72;
      }
      while (v72);
    }
  }
  v70 = __p[0];
  __p[0] = 0;
  if (v70)
    operator delete(v70);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AEEAA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,_QWORD *__p)
{
  _QWORD *v48;
  uint64_t v49;
  void **v50;
  void **v51;

  v48 = __p;
  if (__p)
  {
    do
    {
      v49 = v48[5];
      if (v49)
        (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
      v48 = (_QWORD *)*v48;
    }
    while (v48);
    v50 = (void **)__p;
    do
    {
      v51 = (void **)*v50;
      if (*((char *)v50 + 39) < 0)
        operator delete(v50[2]);
      operator delete(v50);
      v50 = v51;
    }
    while (v51);
  }
  if (!a45)
    _Unwind_Resume(exception_object);
  operator delete(a45);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AEEC40(uint64_t a1, _QWORD *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int8x16_t v16;
  double v17;
  int32x4_t v18;
  const char *v19;
  const char *v20;
  size_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int8x16_t v27;
  double v28;
  int32x4_t v29;
  const char *v30;
  const char *v31;
  size_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int8x16_t v38;
  double v39;
  int32x4_t v40;
  const char *v41;
  const char *v42;
  size_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int8x16_t v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  void **v69;
  void *v70;
  void **v72;
  void *v73[2];
  unint64_t v74;
  void *v75[2];
  unint64_t v76;
  void *v77[2];
  unint64_t v78;
  void *v79[2];
  unint64_t v80;
  void *v81[2];
  unint64_t v82;
  void *__dst[2];
  unint64_t v84;
  void *__p[2];
  void *v86;
  char v87[32];
  uint64_t v88;
  int v89;
  char v90[32];
  __int128 v91;
  uint64_t v92;
  _OWORD v93[2];
  __int128 v94;
  uint64_t v95;
  uint64_t v96;

  v96 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v94 = xmmword_239F0D17B;
  v95 = 0x3D343329293F39;
  sub_2396F1A4C((uint64_t)&v94, (int32x4_t)xmmword_239F0D17B, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v84 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v84) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFEA8;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  v93[0] = xmmword_239F0D193;
  *(_DWORD *)((char *)v93 + 15) = 6388861;
  sub_23958E450((uint64_t)v93, (int32x4_t)xmmword_239F0D193, v16, v17, v18);
  v20 = v19;
  v21 = strlen(v19);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = (void *)v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = operator new(v24 + 1);
    v81[1] = v22;
    v82 = v25 | 0x8000000000000000;
    v81[0] = v23;
    goto LABEL_16;
  }
  HIBYTE(v82) = v21;
  v23 = v81;
  if (v21)
LABEL_16:
    memmove(v23, v20, (size_t)v22);
  *((_BYTE *)v22 + (_QWORD)v23) = 0;
  v26 = (_QWORD *)operator new();
  *v26 = &off_250AFFE48;
  v26[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v81, (uint64_t)v26);
  v91 = xmmword_239F0D1A6;
  v92 = 0x223F3E38253023;
  sub_2396F1A4C((uint64_t)&v91, (int32x4_t)xmmword_239F0D1A6, v27, v28, v29);
  v31 = v30;
  v32 = strlen(v30);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = (void *)v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = operator new(v35 + 1);
    v79[1] = v33;
    v80 = v36 | 0x8000000000000000;
    v79[0] = v34;
    goto LABEL_24;
  }
  HIBYTE(v80) = v32;
  v34 = v79;
  if (v32)
LABEL_24:
    memmove(v34, v31, (size_t)v33);
  *((_BYTE *)v33 + (_QWORD)v34) = 0;
  v37 = (_QWORD *)operator new();
  *v37 = &off_250AFFE48;
  v37[1] = a1 + 16;
  sub_23961580C((uint64_t)__p, (uint64_t)v79, (uint64_t)v37);
  strcpy(v90, "*GONCKDuHF_XuAOXDOFuYCPO");
  sub_2396EFC88((uint64_t)v90, *(int32x4_t *)"F_XuAOXDOFuYCPO", v38, v39, v40);
  v42 = v41;
  v43 = strlen(v41);
  if (v43 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v44 = (void *)v43;
  if (v43 >= 0x17)
  {
    v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v43 | 7) != 0x17)
      v46 = v43 | 7;
    v47 = v46 + 1;
    v45 = operator new(v46 + 1);
    v77[1] = v44;
    v78 = v47 | 0x8000000000000000;
    v77[0] = v45;
    goto LABEL_32;
  }
  HIBYTE(v78) = v43;
  v45 = v77;
  if (v43)
LABEL_32:
    memmove(v45, v42, (size_t)v44);
  *((_BYTE *)v44 + (_QWORD)v45) = 0;
  v48 = (_QWORD *)operator new();
  *v48 = &off_250AFFE48;
  v48[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v77, (uint64_t)v48);
  v88 = 0x3C3B0C3F3F3A3553;
  v89 = 2111039;
  v49 = sub_23958E4C8((uint64_t)&v88);
  v50 = strlen(v49);
  if (v50 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v51 = (void *)v50;
  if (v50 >= 0x17)
  {
    v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v50 | 7) != 0x17)
      v53 = v50 | 7;
    v54 = v53 + 1;
    v52 = operator new(v53 + 1);
    v75[1] = v51;
    v76 = v54 | 0x8000000000000000;
    v75[0] = v52;
    goto LABEL_40;
  }
  HIBYTE(v76) = v50;
  v52 = v75;
  if (v50)
LABEL_40:
    memmove(v52, v49, (size_t)v51);
  *((_BYTE *)v51 + (_QWORD)v52) = 0;
  v55 = (_QWORD *)operator new();
  *v55 = &off_250AFFEA8;
  v55[1] = a1 + 32;
  sub_23961580C((uint64_t)__p, (uint64_t)v75, (uint64_t)v55);
  strcpy(v87, "W48:'8929#\b$>-2\b#?%2$?");
  sub_2396EFBE0((uint64_t)v87, *(int32x4_t *)"W48:'8929#\b$>-2\b#?%2$?", v56, v57, v58);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v73[1] = v62;
    v74 = v65 | 0x8000000000000000;
    v73[0] = v63;
    goto LABEL_48;
  }
  HIBYTE(v74) = v61;
  v63 = v73;
  if (v61)
LABEL_48:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AFFE48;
  v66[1] = a1 + 40;
  sub_23961580C((uint64_t)__p, (uint64_t)v73, (uint64_t)v66);
  if (SHIBYTE(v74) < 0)
  {
    operator delete(v73[0]);
    if ((SHIBYTE(v76) & 0x80000000) == 0)
    {
LABEL_51:
      if ((SHIBYTE(v78) & 0x80000000) == 0)
        goto LABEL_52;
      goto LABEL_69;
    }
  }
  else if ((SHIBYTE(v76) & 0x80000000) == 0)
  {
    goto LABEL_51;
  }
  operator delete(v75[0]);
  if ((SHIBYTE(v78) & 0x80000000) == 0)
  {
LABEL_52:
    if ((SHIBYTE(v80) & 0x80000000) == 0)
      goto LABEL_53;
    goto LABEL_70;
  }
LABEL_69:
  operator delete(v77[0]);
  if ((SHIBYTE(v80) & 0x80000000) == 0)
  {
LABEL_53:
    if ((SHIBYTE(v82) & 0x80000000) == 0)
      goto LABEL_54;
LABEL_71:
    operator delete(v81[0]);
    if ((SHIBYTE(v84) & 0x80000000) == 0)
      goto LABEL_55;
    goto LABEL_72;
  }
LABEL_70:
  operator delete(v79[0]);
  if (SHIBYTE(v82) < 0)
    goto LABEL_71;
LABEL_54:
  if ((SHIBYTE(v84) & 0x80000000) == 0)
    goto LABEL_55;
LABEL_72:
  operator delete(__dst[0]);
LABEL_55:
  sub_2395902F0((uint64_t)__p, a2);
  v67 = v86;
  if (v86)
  {
    do
    {
      v68 = v67[5];
      if (v68)
        (*(void (**)(uint64_t))(*(_QWORD *)v68 + 8))(v68);
      v67 = (_QWORD *)*v67;
    }
    while (v67);
    v69 = (void **)v86;
    if (v86)
    {
      do
      {
        v72 = (void **)*v69;
        if (*((char *)v69 + 39) < 0)
          operator delete(v69[2]);
        operator delete(v69);
        v69 = v72;
      }
      while (v72);
    }
  }
  v70 = __p[0];
  __p[0] = 0;
  if (v70)
    operator delete(v70);
  return a2;
}

void sub_239AEF2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,char a45)
{
  sub_2395905C0((uint64_t)&a45);
  _Unwind_Resume(a1);
}

void sub_239AEF3CC(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AEF3F0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEF6BC(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AEF42C(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void **v18;
  void *v19;
  void **v21;
  void *__dst[2];
  unint64_t v23;
  void *__p[2];
  void *v25;
  _BYTE v26[23];
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 8);
  sub_2396157EC((uint64_t)__p, a3);
  *(_OWORD *)v26 = xmmword_239F0D2D7;
  *(_QWORD *)&v26[15] = 0xF0E08120F0011;
  sub_2396EFBE0((uint64_t)v26, (int32x4_t)xmmword_239F0D2D7, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v23 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v23) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFF08;
  v15[1] = v4;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  if (SHIBYTE(v23) < 0)
    operator delete(__dst[0]);
  sub_23959479C((uint64_t)__p, a2);
  v16 = v25;
  if (v25)
  {
    do
    {
      v17 = v16[5];
      if (v17)
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
      v16 = (_QWORD *)*v16;
    }
    while (v16);
    v18 = (void **)v25;
    if (v25)
    {
      do
      {
        v21 = (void **)*v18;
        if (*((char *)v18 + 39) < 0)
          operator delete(v18[2]);
        operator delete(v18);
        v18 = v21;
      }
      while (v21);
    }
  }
  v19 = __p[0];
  __p[0] = 0;
  if (v19)
    operator delete(v19);
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AEF614(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, _QWORD *__p)
{
  _QWORD *v19;
  uint64_t v20;
  void **v21;
  void **v22;

  v19 = __p;
  if (__p)
  {
    do
    {
      v20 = v19[5];
      if (v20)
        (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
      v19 = (_QWORD *)*v19;
    }
    while (v19);
    v21 = (void **)__p;
    do
    {
      v22 = (void **)*v21;
      if (*((char *)v21 + 39) < 0)
        operator delete(v21[2]);
      operator delete(v21);
      v21 = v22;
    }
    while (v22);
  }
  if (!a16)
    _Unwind_Resume(exception_object);
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239AEF6BC(uint64_t a1, _QWORD *a2, char a3)
{
  int8x16_t v5;
  double v6;
  int32x4_t v7;
  const char *v8;
  const char *v9;
  size_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void **v18;
  void *v19;
  void **v21;
  void *__dst[2];
  unint64_t v23;
  void *__p[2];
  void *v25;
  _BYTE v26[23];
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  *(_OWORD *)v26 = xmmword_239F0D14D;
  strcpy(&v26[15], "kzuhrtu");
  sub_2396EFBE0((uint64_t)v26, (int32x4_t)xmmword_239F0D14D, v5, v6, v7);
  v9 = v8;
  v10 = strlen(v8);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    v23 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v23) = v10;
  v12 = __dst;
  if (v10)
LABEL_8:
    memmove(v12, v9, (size_t)v11);
  *((_BYTE *)v11 + (_QWORD)v12) = 0;
  v15 = (_QWORD *)operator new();
  *v15 = &off_250AFFE48;
  v15[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v15);
  if (SHIBYTE(v23) < 0)
    operator delete(__dst[0]);
  sub_2395902F0((uint64_t)__p, a2);
  v16 = v25;
  if (v25)
  {
    do
    {
      v17 = v16[5];
      if (v17)
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
      v16 = (_QWORD *)*v16;
    }
    while (v16);
    v18 = (void **)v25;
    if (v25)
    {
      do
      {
        v21 = (void **)*v18;
        if (*((char *)v18 + 39) < 0)
          operator delete(v18[2]);
        operator delete(v18);
        v18 = v21;
      }
      while (v21);
    }
  }
  v19 = __p[0];
  __p[0] = 0;
  if (v19)
    operator delete(v19);
  return a2;
}

void sub_239AEF88C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  sub_2395905C0((uint64_t)&a16);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AEF8C0(int *a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  int32x4_t v13;
  const char *v14;
  const char *v15;
  size_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int8x16_t v22;
  double v23;
  int32x4_t v24;
  const char *v25;
  const char *v26;
  size_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int8x16_t v33;
  double v34;
  int32x4_t v35;
  const char *v36;
  const char *v37;
  size_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  const char *v44;
  size_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  int8x16_t v51;
  double v52;
  int32x4_t v53;
  const char *v54;
  const char *v55;
  size_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  int8x16_t v62;
  double v63;
  int32x4_t v64;
  const char *v65;
  const char *v66;
  size_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  double v73;
  int32x4_t v74;
  const char *v75;
  const char *v76;
  size_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  void **v85;
  void *v86;
  void **v88;
  void *v89[2];
  unint64_t v90;
  void *v91[2];
  unint64_t v92;
  void *v93[2];
  unint64_t v94;
  void *v95[2];
  unint64_t v96;
  void *v97[2];
  unint64_t v98;
  void *v99[2];
  unint64_t v100;
  void *v101[2];
  unint64_t v102;
  void *__dst[2];
  unint64_t v104;
  int v105;
  void *__p[2];
  void *v107;
  int8x16_t v108[2];
  char v109;
  __int128 v110;
  uint64_t v111;
  _OWORD v112[2];
  char v113[16];
  __int128 v114;
  uint64_t v115;
  char v116[32];
  int8x16_t v117[2];
  char v118;
  uint64_t v119;
  char v120[8];
  uint64_t v121;

  v121 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  v105 = *a1;
  v119 = 0x667C604B79617A14;
  strcpy(v120, "qupg");
  v5 = sub_239510ECC((uint64_t)&v119);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v104 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v104) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF5A0;
  v11[1] = a1 + 3;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v117[0] = (int8x16_t)xmmword_239F0D100;
  v117[1] = xmmword_239F0D110;
  v118 = 0;
  sub_2396EFE38((uint64_t)v117, (int32x4_t)xmmword_239F0D100, xmmword_239F0D110, v12, v13);
  v15 = v14;
  v16 = strlen(v14);
  if (v16 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v17 = (void *)v16;
  if (v16 >= 0x17)
  {
    v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17)
      v19 = v16 | 7;
    v20 = v19 + 1;
    v18 = operator new(v19 + 1);
    v101[1] = v17;
    v102 = v20 | 0x8000000000000000;
    v101[0] = v18;
    goto LABEL_16;
  }
  HIBYTE(v102) = v16;
  v18 = v101;
  if (v16)
LABEL_16:
    memmove(v18, v15, (size_t)v17);
  *((_BYTE *)v17 + (_QWORD)v18) = 0;
  v21 = (_QWORD *)operator new();
  *v21 = &off_250ADF240;
  v21[1] = &v105;
  sub_23961580C((uint64_t)__p, (uint64_t)v101, (uint64_t)v21);
  strcpy(v116, "R&: 7!:=>6;<5\r$3>'7");
  sub_23958E55C((uint64_t)v116, *(int32x4_t *)"R&: 7!:=>6;<5\r$3>'7", v22, v23, v24);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = (void *)v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = operator new(v30 + 1);
    v99[1] = v28;
    v100 = v31 | 0x8000000000000000;
    v99[0] = v29;
    goto LABEL_24;
  }
  HIBYTE(v100) = v27;
  v29 = v99;
  if (v27)
LABEL_24:
    memmove(v29, v26, (size_t)v28);
  *((_BYTE *)v28 + (_QWORD)v29) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250ADF5A0;
  v32[1] = a1 + 1;
  sub_23961580C((uint64_t)__p, (uint64_t)v99, (uint64_t)v32);
  v114 = xmmword_239F0D135;
  v115 = 0x6979606D7A5374;
  sub_2396F1A4C((uint64_t)&v114, (int32x4_t)xmmword_239F0D135, v33, v34, v35);
  v37 = v36;
  v38 = strlen(v36);
  if (v38 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v39 = (void *)v38;
  if (v38 >= 0x17)
  {
    v41 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 | 7) != 0x17)
      v41 = v38 | 7;
    v42 = v41 + 1;
    v40 = operator new(v41 + 1);
    v97[1] = v39;
    v98 = v42 | 0x8000000000000000;
    v97[0] = v40;
    goto LABEL_32;
  }
  HIBYTE(v98) = v38;
  v40 = v97;
  if (v38)
LABEL_32:
    memmove(v40, v37, (size_t)v39);
  *((_BYTE *)v39 + (_QWORD)v40) = 0;
  v43 = (_QWORD *)operator new();
  *v43 = &off_250ADF5A0;
  v43[1] = a1 + 2;
  sub_23961580C((uint64_t)__p, (uint64_t)v97, (uint64_t)v43);
  strcpy(v113, ":]JOeS^I");
  v44 = sub_239513718(v113);
  v45 = strlen(v44);
  if (v45 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v46 = (void *)v45;
  if (v45 >= 0x17)
  {
    v48 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v45 | 7) != 0x17)
      v48 = v45 | 7;
    v49 = v48 + 1;
    v47 = operator new(v48 + 1);
    v95[1] = v46;
    v96 = v49 | 0x8000000000000000;
    v95[0] = v47;
    goto LABEL_40;
  }
  HIBYTE(v96) = v45;
  v47 = v95;
  if (v45)
LABEL_40:
    memmove(v47, v44, (size_t)v46);
  *((_BYTE *)v46 + (_QWORD)v47) = 0;
  v50 = (_QWORD *)operator new();
  *v50 = &off_250ADF480;
  v50[1] = a1 + 4;
  sub_23961580C((uint64_t)__p, (uint64_t)v95, (uint64_t)v50);
  v112[0] = xmmword_239F0D164;
  *(_QWORD *)((char *)v112 + 15) = 0x757B747C7D714DLL;
  sub_2396EFBE0((uint64_t)v112, (int32x4_t)xmmword_239F0D164, v51, v52, v53);
  v55 = v54;
  v56 = strlen(v54);
  if (v56 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v57 = (void *)v56;
  if (v56 >= 0x17)
  {
    v59 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v56 | 7) != 0x17)
      v59 = v56 | 7;
    v60 = v59 + 1;
    v58 = operator new(v59 + 1);
    v93[1] = v57;
    v94 = v60 | 0x8000000000000000;
    v93[0] = v58;
    goto LABEL_48;
  }
  HIBYTE(v94) = v56;
  v58 = v93;
  if (v56)
LABEL_48:
    memmove(v58, v55, (size_t)v57);
  *((_BYTE *)v57 + (_QWORD)v58) = 0;
  v61 = (_QWORD *)operator new();
  *v61 = &off_250AF3530;
  v61[1] = a1 + 24;
  sub_23961580C((uint64_t)__p, (uint64_t)v93, (uint64_t)v61);
  v110 = xmmword_239F0D1EE;
  v111 = 0x2729262E2F231FLL;
  sub_2396F1A4C((uint64_t)&v110, (int32x4_t)xmmword_239F0D1EE, v62, v63, v64);
  v66 = v65;
  v67 = strlen(v65);
  if (v67 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v68 = (void *)v67;
  if (v67 >= 0x17)
  {
    v70 = (v67 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v67 | 7) != 0x17)
      v70 = v67 | 7;
    v71 = v70 + 1;
    v69 = operator new(v70 + 1);
    v91[1] = v68;
    v92 = v71 | 0x8000000000000000;
    v91[0] = v69;
    goto LABEL_56;
  }
  HIBYTE(v92) = v67;
  v69 = v91;
  if (v67)
LABEL_56:
    memmove(v69, v66, (size_t)v68);
  *((_BYTE *)v68 + (_QWORD)v69) = 0;
  v72 = (_QWORD *)operator new();
  *v72 = &off_250AF3560;
  v72[1] = a1 + 26;
  sub_23961580C((uint64_t)__p, (uint64_t)v91, (uint64_t)v72);
  v108[0] = (int8x16_t)xmmword_239F0D206;
  v108[1] = xmmword_239F0D216;
  v109 = 0;
  sub_2396EFE38((uint64_t)v108, (int32x4_t)xmmword_239F0D206, xmmword_239F0D216, v73, v74);
  v76 = v75;
  v77 = strlen(v75);
  if (v77 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v78 = (void *)v77;
  if (v77 >= 0x17)
  {
    v80 = (v77 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v77 | 7) != 0x17)
      v80 = v77 | 7;
    v81 = v80 + 1;
    v79 = operator new(v80 + 1);
    v89[1] = v78;
    v90 = v81 | 0x8000000000000000;
    v89[0] = v79;
    goto LABEL_64;
  }
  HIBYTE(v90) = v77;
  v79 = v89;
  if (v77)
LABEL_64:
    memmove(v79, v76, (size_t)v78);
  *((_BYTE *)v78 + (_QWORD)v79) = 0;
  v82 = (_QWORD *)operator new();
  *v82 = &off_250AF3590;
  v82[1] = a1 + 38;
  sub_23961580C((uint64_t)__p, (uint64_t)v89, (uint64_t)v82);
  if (SHIBYTE(v90) < 0)
  {
    operator delete(v89[0]);
    if ((SHIBYTE(v92) & 0x80000000) == 0)
    {
LABEL_67:
      if ((SHIBYTE(v94) & 0x80000000) == 0)
        goto LABEL_68;
      goto LABEL_87;
    }
  }
  else if ((SHIBYTE(v92) & 0x80000000) == 0)
  {
    goto LABEL_67;
  }
  operator delete(v91[0]);
  if ((SHIBYTE(v94) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v96) & 0x80000000) == 0)
      goto LABEL_69;
    goto LABEL_88;
  }
LABEL_87:
  operator delete(v93[0]);
  if ((SHIBYTE(v96) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v98) & 0x80000000) == 0)
      goto LABEL_70;
    goto LABEL_89;
  }
LABEL_88:
  operator delete(v95[0]);
  if ((SHIBYTE(v98) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v100) & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_90;
  }
LABEL_89:
  operator delete(v97[0]);
  if ((SHIBYTE(v100) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v102) & 0x80000000) == 0)
      goto LABEL_72;
LABEL_91:
    operator delete(v101[0]);
    if ((SHIBYTE(v104) & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_92;
  }
LABEL_90:
  operator delete(v99[0]);
  if (SHIBYTE(v102) < 0)
    goto LABEL_91;
LABEL_72:
  if ((SHIBYTE(v104) & 0x80000000) == 0)
    goto LABEL_73;
LABEL_92:
  operator delete(__dst[0]);
LABEL_73:
  sub_2395902F0((uint64_t)__p, a2);
  v83 = v107;
  if (v107)
  {
    do
    {
      v84 = v83[5];
      if (v84)
        (*(void (**)(uint64_t))(*(_QWORD *)v84 + 8))(v84);
      v83 = (_QWORD *)*v83;
    }
    while (v83);
    v85 = (void **)v107;
    if (v107)
    {
      do
      {
        v88 = (void **)*v85;
        if (*((char *)v85 + 39) < 0)
          operator delete(v85[2]);
        operator delete(v85);
        v85 = v88;
      }
      while (v88);
    }
  }
  v86 = __p[0];
  __p[0] = 0;
  if (v86)
    operator delete(v86);
  return a2;
}

void sub_239AF0124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,char a59)
{
  sub_2395905C0((uint64_t)&a59);
  _Unwind_Resume(a1);
}

void sub_239AF0294(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF02B8(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEEC40(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AF02F4()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AF032C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF0350(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEF6BC(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AF038C()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

_QWORD *sub_239AF03C0(uint64_t a1, _QWORD *a2, char a3)
{
  const char *v5;
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  size_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int16x8_t v19;
  const char *v20;
  const char *v21;
  size_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  const char *v28;
  const char *v29;
  size_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int8x16_t v36;
  double v37;
  int32x4_t v38;
  const char *v39;
  const char *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int16x8_t v47;
  const char *v48;
  const char *v49;
  size_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  int8x16_t v56;
  double v57;
  int32x4_t v58;
  const char *v59;
  const char *v60;
  size_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int8x16_t *v67;
  size_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  void **v76;
  void *v77;
  void **v79;
  void *v80[2];
  unint64_t v81;
  void *v82[2];
  unint64_t v83;
  void *v84[2];
  unint64_t v85;
  void *v86[2];
  unint64_t v87;
  void *v88[2];
  unint64_t v89;
  void *v90[2];
  unint64_t v91;
  void *v92[2];
  unint64_t v93;
  void *__dst[2];
  unint64_t v95;
  void *__p[2];
  void *v97;
  __int128 v98;
  __int16 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  char v103[8];
  _OWORD v104[2];
  __int128 v105;
  char v106;
  uint64_t v107;
  int v108;
  __int16 v109;
  uint64_t v110;
  int v111;
  char v112;
  char v113[16];
  uint64_t v114;

  v114 = *MEMORY[0x24BDAC8D0];
  sub_2396157EC((uint64_t)__p, a3);
  strcpy(v113, "\"LWO}KOCEGQ");
  v5 = sub_23958E4C8((uint64_t)v113);
  v6 = strlen(v5);
  if (v6 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v9 = v6 | 7;
    v10 = v9 + 1;
    v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    v95 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v95) = v6;
  v8 = __dst;
  if (v6)
LABEL_8:
    memmove(v8, v5, (size_t)v7);
  *((_BYTE *)v7 + (_QWORD)v8) = 0;
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF5A0;
  v11[1] = a1;
  sub_23961580C((uint64_t)__p, (uint64_t)__dst, (uint64_t)v11);
  v110 = 0x1B172B1011070174;
  v112 = 0;
  v111 = 320672282;
  v12 = sub_239510ECC((uint64_t)&v110);
  v13 = strlen(v12);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = operator new(v16 + 1);
    v92[1] = v14;
    v93 = v17 | 0x8000000000000000;
    v92[0] = v15;
    goto LABEL_16;
  }
  HIBYTE(v93) = v13;
  v15 = v92;
  if (v13)
LABEL_16:
    memmove(v15, v12, (size_t)v14);
  *((_BYTE *)v14 + (_QWORD)v15) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = &off_250AF3500;
  v18[1] = a1 + 8;
  sub_23961580C((uint64_t)__p, (uint64_t)v92, (uint64_t)v18);
  v107 = 0x2E26223F253E394BLL;
  v109 = 36;
  v108 = 757408276;
  sub_23971A32C((uint64_t)&v107, v19);
  v21 = v20;
  v22 = strlen(v20);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = (void *)v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    v90[1] = v23;
    v91 = v26 | 0x8000000000000000;
    v90[0] = v24;
    goto LABEL_24;
  }
  HIBYTE(v91) = v22;
  v24 = v90;
  if (v22)
LABEL_24:
    memmove(v24, v21, (size_t)v23);
  *((_BYTE *)v23 + (_QWORD)v24) = 0;
  v27 = (_QWORD *)operator new();
  *v27 = &off_250B002F8;
  v27[1] = a1 + 392;
  sub_23961580C((uint64_t)__p, (uint64_t)v90, (uint64_t)v27);
  v105 = xmmword_239F0D238;
  v106 = 0;
  sub_2396EFA24((uint64_t)&v105);
  v29 = v28;
  v30 = strlen(v28);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v31 = (void *)v30;
  if (v30 >= 0x17)
  {
    v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v33 = v30 | 7;
    v34 = v33 + 1;
    v32 = operator new(v33 + 1);
    v88[1] = v31;
    v89 = v34 | 0x8000000000000000;
    v88[0] = v32;
    goto LABEL_32;
  }
  HIBYTE(v89) = v30;
  v32 = v88;
  if (v30)
LABEL_32:
    memmove(v32, v29, (size_t)v31);
  *((_BYTE *)v31 + (_QWORD)v32) = 0;
  v35 = (_QWORD *)operator new();
  *v35 = &off_250AFFEA8;
  v35[1] = a1 + 264;
  sub_23961580C((uint64_t)__p, (uint64_t)v88, (uint64_t)v35);
  v104[0] = xmmword_239F0D249;
  *(_QWORD *)((char *)v104 + 15) = 0x200060A0E3815;
  sub_2396EFBE0((uint64_t)v104, (int32x4_t)xmmword_239F0D249, v36, v37, v38);
  v40 = v39;
  v41 = strlen(v39);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v86[1] = v42;
    v87 = v45 | 0x8000000000000000;
    v86[0] = v43;
    goto LABEL_40;
  }
  HIBYTE(v87) = v41;
  v43 = v86;
  if (v41)
LABEL_40:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250AF35C0;
  v46[1] = a1 + 272;
  sub_23961580C((uint64_t)__p, (uint64_t)v86, (uint64_t)v46);
  v102 = 0x6F6E5C6766707603;
  strcpy(v103, "nlgfo");
  sub_23971A32C((uint64_t)&v102, v47);
  v49 = v48;
  v50 = strlen(v48);
  if (v50 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v51 = (void *)v50;
  if (v50 >= 0x17)
  {
    v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v50 | 7) != 0x17)
      v53 = v50 | 7;
    v54 = v53 + 1;
    v52 = operator new(v53 + 1);
    v84[1] = v51;
    v85 = v54 | 0x8000000000000000;
    v84[0] = v52;
    goto LABEL_48;
  }
  HIBYTE(v85) = v50;
  v52 = v84;
  if (v50)
LABEL_48:
    memmove(v52, v49, (size_t)v51);
  *((_BYTE *)v51 + (_QWORD)v52) = 0;
  v55 = (_QWORD *)operator new();
  *v55 = &off_250AF35F0;
  v55[1] = a1 + 168;
  sub_23961580C((uint64_t)__p, (uint64_t)v84, (uint64_t)v55);
  v100 = xmmword_239F0D260;
  v101 = 0x71787972707170;
  sub_2396F1A4C((uint64_t)&v100, (int32x4_t)xmmword_239F0D260, v56, v57, v58);
  v60 = v59;
  v61 = strlen(v59);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = (void *)v61;
  if (v61 >= 0x17)
  {
    v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v64 = v61 | 7;
    v65 = v64 + 1;
    v63 = operator new(v64 + 1);
    v82[1] = v62;
    v83 = v65 | 0x8000000000000000;
    v82[0] = v63;
    goto LABEL_56;
  }
  HIBYTE(v83) = v61;
  v63 = v82;
  if (v61)
LABEL_56:
    memmove(v63, v60, (size_t)v62);
  *((_BYTE *)v62 + (_QWORD)v63) = 0;
  v66 = (_QWORD *)operator new();
  *v66 = &off_250AF35F0;
  v66[1] = a1 + 216;
  sub_23961580C((uint64_t)__p, (uint64_t)v82, (uint64_t)v66);
  v98 = xmmword_239F0D278;
  v99 = 21;
  v67 = sub_239A91B18((int8x16_t *)&v98);
  v68 = strlen(v67->i8);
  if (v68 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v69 = (void *)v68;
  if (v68 >= 0x17)
  {
    v71 = (v68 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v68 | 7) != 0x17)
      v71 = v68 | 7;
    v72 = v71 + 1;
    v70 = operator new(v71 + 1);
    v80[1] = v69;
    v81 = v72 | 0x8000000000000000;
    v80[0] = v70;
    goto LABEL_64;
  }
  HIBYTE(v81) = v68;
  v70 = v80;
  if (v68)
LABEL_64:
    memmove(v70, v67, (size_t)v69);
  *((_BYTE *)v69 + (_QWORD)v70) = 0;
  v73 = (_QWORD *)operator new();
  *v73 = &off_250AF3620;
  v73[1] = a1 + 296;
  sub_23961580C((uint64_t)__p, (uint64_t)v80, (uint64_t)v73);
  if (SHIBYTE(v81) < 0)
  {
    operator delete(v80[0]);
    if ((SHIBYTE(v83) & 0x80000000) == 0)
    {
LABEL_67:
      if ((SHIBYTE(v85) & 0x80000000) == 0)
        goto LABEL_68;
      goto LABEL_87;
    }
  }
  else if ((SHIBYTE(v83) & 0x80000000) == 0)
  {
    goto LABEL_67;
  }
  operator delete(v82[0]);
  if ((SHIBYTE(v85) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v87) & 0x80000000) == 0)
      goto LABEL_69;
    goto LABEL_88;
  }
LABEL_87:
  operator delete(v84[0]);
  if ((SHIBYTE(v87) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v89) & 0x80000000) == 0)
      goto LABEL_70;
    goto LABEL_89;
  }
LABEL_88:
  operator delete(v86[0]);
  if ((SHIBYTE(v89) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v91) & 0x80000000) == 0)
      goto LABEL_71;
    goto LABEL_90;
  }
LABEL_89:
  operator delete(v88[0]);
  if ((SHIBYTE(v91) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v93) & 0x80000000) == 0)
      goto LABEL_72;
LABEL_91:
    operator delete(v92[0]);
    if ((SHIBYTE(v95) & 0x80000000) == 0)
      goto LABEL_73;
    goto LABEL_92;
  }
LABEL_90:
  operator delete(v90[0]);
  if (SHIBYTE(v93) < 0)
    goto LABEL_91;
LABEL_72:
  if ((SHIBYTE(v95) & 0x80000000) == 0)
    goto LABEL_73;
LABEL_92:
  operator delete(__dst[0]);
LABEL_73:
  sub_2395902F0((uint64_t)__p, a2);
  v74 = v97;
  if (v97)
  {
    do
    {
      v75 = v74[5];
      if (v75)
        (*(void (**)(uint64_t))(*(_QWORD *)v75 + 8))(v75);
      v74 = (_QWORD *)*v74;
    }
    while (v74);
    v76 = (void **)v97;
    if (v97)
    {
      do
      {
        v79 = (void **)*v76;
        if (*((char *)v76 + 39) < 0)
          operator delete(v76[2]);
        operator delete(v76);
        v76 = v79;
      }
      while (v79);
    }
  }
  v77 = __p[0];
  __p[0] = 0;
  if (v77)
    operator delete(v77);
  return a2;
}

void sub_239AF0C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,char a57)
{
  sub_2395905C0((uint64_t)&a57);
  _Unwind_Resume(a1);
}

void sub_239AF0DB4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF0DD8(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEB50C(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AF0E14()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AF0E4C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF0E70(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEC094(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AF0EAC()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AF0EE4(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF0F08(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD **v5;

  v5 = *(_QWORD ***)(a1 + 8);
  sub_239AED024(&v5, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AF0F54()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AF0F8C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF0FB0(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AEF8C0(*(int **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AF0FEC()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AF1024(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF1048(uint64_t a1, _QWORD *a2, char a3)
{
  int64x2_t *v3;

  v3 = *(int64x2_t **)(a1 + 8);
  if (!v3[16].i8[0])
  {
    sub_239A444D4((uint64_t)"unknown file", 1098, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_2395EE104(v3, a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AF10B4(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v4;
  int v5;
  float64x2_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  float64x2_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v4 = *(_QWORD *)(a1 + 8);
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  sub_2395EE2B0(&v19, a2, a3);
  v5 = *(unsigned __int8 *)(v4 + 256);
  v6 = v19;
  v7 = v20;
  v8 = v22;
  *(_OWORD *)(v4 + 32) = v21;
  *(_OWORD *)(v4 + 48) = v8;
  *(float64x2_t *)v4 = v6;
  *(_OWORD *)(v4 + 16) = v7;
  v9 = v23;
  v10 = v24;
  v11 = v26;
  *(_OWORD *)(v4 + 96) = v25;
  *(_OWORD *)(v4 + 112) = v11;
  *(_OWORD *)(v4 + 64) = v9;
  *(_OWORD *)(v4 + 80) = v10;
  v12 = v27;
  v13 = v28;
  v14 = v30;
  *(_OWORD *)(v4 + 160) = v29;
  *(_OWORD *)(v4 + 176) = v14;
  *(_OWORD *)(v4 + 128) = v12;
  *(_OWORD *)(v4 + 144) = v13;
  v15 = v31;
  v16 = v32;
  v17 = v34;
  *(_OWORD *)(v4 + 224) = v33;
  *(_OWORD *)(v4 + 240) = v17;
  *(_OWORD *)(v4 + 192) = v15;
  *(_OWORD *)(v4 + 208) = v16;
  if (!v5)
    *(_BYTE *)(v4 + 256) = 1;
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AF1180(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF11A4(uint64_t a1, uint64_t *a2, char a3)
{
  sub_239AF9BD4(*(uint64_t **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AF11E0(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void **v15;
  void **v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  void *v58;
  void *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  void *v64;
  void *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _QWORD *v79;
  uint64_t v80;
  void **v81;
  void *v82;
  void **v84;
  char *v85;
  char *v86;
  void *v87[2];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  char __p[22];
  char v99;
  void *v100[4];
  void *v101[4];
  void *v102[2];
  char v103;
  void *v104[2];
  char v105;
  void *v106[2];
  char v107;
  void *v108[2];
  char v109;
  void *v110[2];
  char v111;
  void *v112[2];
  char v113;
  void *v114[2];
  void *v115;
  void *v116;
  _BYTE *v117;
  uint64_t v118;
  void *v119;
  _BYTE *v120;
  uint64_t v121;
  void *v122;
  _BYTE *v123;
  uint64_t v124;
  void *v125;
  _BYTE *v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  void **v134;
  void **v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  _DWORD *v140;
  _DWORD *v141;
  uint64_t v142;
  void **v143;
  void **v144;
  uint64_t v145;

  v4 = *(uint64_t **)(a1 + 8);
  v143 = 0;
  v144 = 0;
  v145 = 0;
  v140 = 0;
  v141 = 0;
  v142 = 0;
  v137 = 0;
  v138 = 0;
  v139 = 0;
  v134 = 0;
  v135 = 0;
  v136 = 0;
  v131 = 0;
  v132 = 0;
  v133 = 0;
  v128 = 0;
  v129 = 0;
  v130 = 0;
  v126 = 0;
  v125 = 0;
  v127 = 0;
  v122 = 0;
  v123 = 0;
  v124 = 0;
  v119 = 0;
  v120 = 0;
  v121 = 0;
  v116 = 0;
  v117 = 0;
  v118 = 0;
  sub_2396157EC((uint64_t)v114, a3);
  HIBYTE(v88) = 12;
  strcpy((char *)v87, "node_weights");
  v5 = (_QWORD *)operator new();
  *v5 = &off_250ADF600;
  v5[1] = &v143;
  sub_23961580C((uint64_t)v114, (uint64_t)v87, (uint64_t)v5);
  v113 = 10;
  strcpy((char *)v112, "node_flags");
  v6 = (_QWORD *)operator new();
  *v6 = &off_250ADF7B0;
  v6[1] = &v140;
  sub_23961580C((uint64_t)v114, (uint64_t)v112, (uint64_t)v6);
  v111 = 13;
  strcpy((char *)v110, "edge_pair_ids");
  v7 = (_QWORD *)operator new();
  *v7 = &off_250AF3410;
  v7[1] = &v137;
  sub_23961580C((uint64_t)v114, (uint64_t)v110, (uint64_t)v7);
  v109 = 12;
  strcpy((char *)v108, "edge_weights");
  v8 = (_QWORD *)operator new();
  *v8 = &off_250ADF600;
  v8[1] = &v134;
  sub_23961580C((uint64_t)v114, (uint64_t)v108, (uint64_t)v8);
  v107 = 10;
  strcpy((char *)v106, "match_nums");
  v9 = (_QWORD *)operator new();
  *v9 = &off_250AF5378;
  v9[1] = &v131;
  sub_23961580C((uint64_t)v114, (uint64_t)v106, (uint64_t)v9);
  v105 = 14;
  strcpy((char *)v104, "average_angles");
  v10 = (_QWORD *)operator new();
  *v10 = &off_250ADF600;
  v10[1] = &v128;
  sub_23961580C((uint64_t)v114, (uint64_t)v104, (uint64_t)v10);
  v103 = 15;
  strcpy((char *)v102, "baseline_angles");
  v11 = (_QWORD *)operator new();
  *v11 = &off_250ADF600;
  v11[1] = &v125;
  sub_23961580C((uint64_t)v114, (uint64_t)v102, (uint64_t)v11);
  HIBYTE(v101[2]) = 20;
  strcpy((char *)v101, "average_scale_ratios");
  v12 = (_QWORD *)operator new();
  *v12 = &off_250ADF600;
  v12[1] = &v122;
  sub_23961580C((uint64_t)v114, (uint64_t)v101, (uint64_t)v12);
  HIBYTE(v100[2]) = 18;
  strcpy((char *)v100, "relative_rotations");
  v13 = (_QWORD *)operator new();
  *v13 = &off_250AF3440;
  v13[1] = &v119;
  sub_23961580C((uint64_t)v114, (uint64_t)v100, (uint64_t)v13);
  v99 = 21;
  strcpy(__p, "relative_translations");
  v14 = (_QWORD *)operator new();
  *v14 = &off_250AF3470;
  v14[1] = &v116;
  sub_23961580C((uint64_t)v114, (uint64_t)__p, (uint64_t)v14);
  if (v99 < 0)
  {
    operator delete(*(void **)__p);
    if ((SHIBYTE(v100[2]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SHIBYTE(v101[2]) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_38;
    }
  }
  else if ((SHIBYTE(v100[2]) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v100[0]);
  if ((SHIBYTE(v101[2]) & 0x80000000) == 0)
  {
LABEL_4:
    if ((v103 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v101[0]);
  if ((v103 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v105 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v102[0]);
  if ((v105 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v107 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v104[0]);
  if ((v107 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v109 & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v106[0]);
  if ((v109 & 0x80000000) == 0)
  {
LABEL_8:
    if ((v111 & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v108[0]);
  if ((v111 & 0x80000000) == 0)
  {
LABEL_9:
    if ((v113 & 0x80000000) == 0)
      goto LABEL_10;
LABEL_44:
    operator delete(v112[0]);
    if ((SHIBYTE(v88) & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_45;
  }
LABEL_43:
  operator delete(v110[0]);
  if (v113 < 0)
    goto LABEL_44;
LABEL_10:
  if ((SHIBYTE(v88) & 0x80000000) == 0)
    goto LABEL_11;
LABEL_45:
  operator delete(v87[0]);
LABEL_11:
  if ((sub_23959479C((uint64_t)v114, a2) & 1) == 0)
    goto LABEL_100;
  v15 = v143;
  v16 = v144;
  v17 = (char *)v144 - (char *)v143;
  v18 = v144 - v143;
  if (v18 != v141 - v140
    || (v85 = v137, v86 = v138, v19 = (v138 - v137) >> 4, v19 != v132 - v131)
    || v19 != v129 - v128
    || v19 != (v126 - (_BYTE *)v125) >> 3
    || v19 != (v123 - (_BYTE *)v122) >> 3
    || v19 != 0x8E38E38E38E38E39 * ((v120 - (_BYTE *)v119) >> 3)
    || v19 != 0xAAAAAAAAAAAAAAABLL * ((v117 - (_BYTE *)v116) >> 3))
  {
    sub_239A444D4((uint64_t)"unknown file", 56, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v20 = *v4;
  v21 = (_QWORD *)v4[1];
  while (v21 != (_QWORD *)v20)
  {
    v22 = (_QWORD *)*(v21 - 3);
    if (v22)
    {
      do
      {
        v23 = (_QWORD *)*v22;
        operator delete(v22);
        v22 = v23;
      }
      while (v23);
    }
    v25 = (void *)*(v21 - 5);
    v21 -= 5;
    v24 = v25;
    *v21 = 0;
    if (v25)
      operator delete(v24);
  }
  v4[1] = v20;
  v26 = (void *)v4[3];
  v4[4] = (uint64_t)v26;
  v4[7] = 0;
  if (v16 == v15)
  {
    v31 = 0;
  }
  else
  {
    v27 = v4[5] - (_QWORD)v26;
    if (v18 <= v27 >> 3)
    {
      memset_pattern16(v26, &unk_239EC6930, (char *)v16 - (char *)v15);
      v4[4] = (uint64_t)v26 + v17;
    }
    else
    {
      if ((v17 & 0x8000000000000000) != 0)
        sub_2394189F8();
      v28 = v27 >> 2;
      if (v27 >> 2 <= v18)
        v28 = v16 - v15;
      if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8)
        v29 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v29 = v28;
      if (v29 >> 61)
        goto LABEL_133;
      v30 = operator new(8 * v29);
      memset_pattern16(v30, &unk_239EC6930, (char *)v16 - (char *)v15);
      v4[3] = (uint64_t)v30;
      v4[4] = (uint64_t)v30 + v17;
      v4[5] = (uint64_t)v30 + 8 * v29;
      if (v26)
        operator delete(v26);
    }
    v31 = v16 - v15;
  }
  sub_23941C5D8((uint64_t)(v4 + 6), v31, 0);
  v32 = *v4;
  v33 = (_QWORD *)v4[1];
  v34 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v33 - *v4) >> 3);
  v35 = v18 - v34;
  if (v18 <= v34)
  {
    if (v18 < v34)
    {
      v55 = (_QWORD *)(v32 + 40 * v18);
      while (v33 != v55)
      {
        v56 = (_QWORD *)*(v33 - 3);
        if (v56)
        {
          do
          {
            v57 = (_QWORD *)*v56;
            operator delete(v56);
            v56 = v57;
          }
          while (v57);
        }
        v59 = (void *)*(v33 - 5);
        v33 -= 5;
        v58 = v59;
        *v33 = 0;
        if (v59)
          operator delete(v58);
      }
      v4[1] = (uint64_t)v55;
    }
    goto LABEL_89;
  }
  v36 = v4[2];
  if (0xCCCCCCCCCCCCCCCDLL * ((v36 - (uint64_t)v33) >> 3) < v35)
  {
    if (v17 >= 0x3333333333333331)
      sub_2394189F8();
    v37 = 0xCCCCCCCCCCCCCCCDLL * ((v36 - v32) >> 3);
    v38 = 2 * v37;
    if (2 * v37 <= v18)
      v38 = v16 - v15;
    if (v37 >= 0x333333333333333)
      v39 = 0x666666666666666;
    else
      v39 = v38;
    if (v39 <= 0x666666666666666)
    {
      v40 = (char *)operator new(40 * v39);
      v41 = &v40[40 * v34];
      v42 = &v40[40 * v18];
      v43 = v41;
      do
      {
        *(_OWORD *)v43 = 0uLL;
        *((_OWORD *)v43 + 1) = 0uLL;
        *((_DWORD *)v43 + 8) = 1065353216;
        v43 += 40;
      }
      while (v43 != v42);
      v44 = &v40[40 * v39];
      v45 = (_QWORD *)*v4;
      if (v33 == (_QWORD *)*v4)
      {
        *v4 = (uint64_t)v41;
        v4[1] = (uint64_t)v42;
        v4[2] = (uint64_t)v44;
      }
      else
      {
        v46 = 0;
        do
        {
          v48 = &v41[v46 * 8];
          v49 = &v33[v46];
          v50 = v33[v46 - 5];
          *(v49 - 5) = 0;
          *((_QWORD *)v48 - 5) = v50;
          v51 = v33[v46 - 4];
          *((_QWORD *)v48 - 4) = v51;
          *(v49 - 4) = 0;
          v52 = v33[v46 - 3];
          *((_QWORD *)v48 - 3) = v52;
          v53 = (uint64_t)&v41[v46 * 8 - 24];
          v54 = v33[v46 - 2];
          *(_QWORD *)(v53 + 8) = v54;
          *(_DWORD *)(v53 + 16) = v33[v46 - 1];
          if (v54)
          {
            v47 = *(_QWORD *)(v52 + 8);
            if ((v51 & (v51 - 1)) != 0)
            {
              if (v47 >= v51)
                v47 %= v51;
            }
            else
            {
              v47 &= v51 - 1;
            }
            *(_QWORD *)(v50 + 8 * v47) = v53;
            v33[v46 - 3] = 0;
            v33[v46 - 2] = 0;
          }
          v46 -= 5;
        }
        while (&v33[v46] != v45);
        v33 = (_QWORD *)*v4;
        v61 = (_QWORD *)v4[1];
        *v4 = (uint64_t)&v41[v46 * 8];
        v4[1] = (uint64_t)v42;
        v4[2] = (uint64_t)v44;
        while (v61 != v33)
        {
          v62 = (_QWORD *)*(v61 - 3);
          if (v62)
          {
            do
            {
              v63 = (_QWORD *)*v62;
              operator delete(v62);
              v62 = v63;
            }
            while (v63);
          }
          v65 = (void *)*(v61 - 5);
          v61 -= 5;
          v64 = v65;
          *v61 = 0;
          if (v65)
            operator delete(v64);
        }
      }
      if (v33)
        operator delete(v33);
      goto LABEL_89;
    }
LABEL_133:
    sub_239418A80();
  }
  v60 = &v33[5 * v35];
  do
  {
    *(_OWORD *)v33 = 0uLL;
    *((_OWORD *)v33 + 1) = 0uLL;
    *((_DWORD *)v33 + 8) = 1065353216;
    v33 += 5;
  }
  while (v33 != v60);
  v4[1] = (uint64_t)v60;
LABEL_89:
  if (v16 != v15)
  {
    v66 = 0;
    if (v18 <= 1)
      v67 = 1;
    else
      v67 = v16 - v15;
    do
    {
      if (v140[v66] == 1)
      {
        v87[0] = v143[v66];
        sub_239AF20A0((uint64_t)v4, v66, v87);
      }
      ++v66;
    }
    while (v67 != v66);
  }
  if (v86 != v85)
  {
    v68 = 0;
    v69 = 0;
    v70 = 0;
    v71 = 0;
    if (v19 <= 1)
      v19 = 1;
    do
    {
      v72 = (void *)v131[v71];
      v73 = v128[v71];
      v74 = *((_QWORD *)v125 + v71);
      v75 = *((_QWORD *)v122 + v71);
      v87[0] = v134[v71];
      v87[1] = v72;
      v88 = v73;
      v89 = v74;
      v90 = v75;
      v91 = *(_OWORD *)((char *)v119 + v69);
      v76 = *(_OWORD *)((char *)v119 + v69 + 16);
      v77 = *(_OWORD *)((char *)v119 + v69 + 32);
      v78 = *(_OWORD *)((char *)v119 + v69 + 48);
      v95 = *(_QWORD *)((char *)v119 + v69 + 64);
      v93 = v77;
      v94 = v78;
      v92 = v76;
      v97 = *(_QWORD *)((char *)v116 + v70 + 16);
      v96 = *(_OWORD *)((char *)v116 + v70);
      sub_239AF27A0(v4, *(_QWORD *)&v137[v68], *(_QWORD *)&v137[v68 + 8], (uint64_t)v87);
      ++v71;
      v70 += 24;
      v69 += 72;
      v68 += 16;
    }
    while (v19 != v71);
  }
LABEL_100:
  v79 = v115;
  if (v115)
  {
    do
    {
      v80 = v79[5];
      if (v80)
        (*(void (**)(uint64_t))(*(_QWORD *)v80 + 8))(v80);
      v79 = (_QWORD *)*v79;
    }
    while (v79);
    v81 = (void **)v115;
    if (v115)
    {
      do
      {
        v84 = (void **)*v81;
        if (*((char *)v81 + 39) < 0)
          operator delete(v81[2]);
        operator delete(v81);
        v81 = v84;
      }
      while (v84);
    }
  }
  v82 = v114[0];
  v114[0] = 0;
  if (v82)
    operator delete(v82);
  if (v116)
  {
    v117 = v116;
    operator delete(v116);
  }
  if (v119)
  {
    v120 = v119;
    operator delete(v119);
  }
  if (v122)
  {
    v123 = v122;
    operator delete(v122);
  }
  if (v125)
  {
    v126 = v125;
    operator delete(v125);
  }
  if (v128)
  {
    v129 = v128;
    operator delete(v128);
  }
  if (v131)
  {
    v132 = v131;
    operator delete(v131);
  }
  if (v134)
  {
    v135 = v134;
    operator delete(v134);
  }
  if (v137)
  {
    v138 = v137;
    operator delete(v137);
  }
  if (v140)
  {
    v141 = v140;
    operator delete(v140);
  }
  if (v143)
  {
    v144 = v143;
    operator delete(v143);
  }
  return (*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 5) == 0;
}

void sub_239AF1D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,_QWORD *__p,uint64_t a62,uint64_t a63)
{
  void *a65;
  void *a68;
  void *a71;
  uint64_t v71;
  _QWORD *v73;
  uint64_t v74;
  void **v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void **v86;

  v73 = __p;
  if (__p)
  {
    do
    {
      v74 = v73[5];
      if (v74)
        (*(void (**)(uint64_t))(*(_QWORD *)v74 + 8))(v74);
      v73 = (_QWORD *)*v73;
    }
    while (v73);
    v75 = (void **)__p;
    do
    {
      v86 = (void **)*v75;
      if (*((char *)v75 + 39) < 0)
        operator delete(v75[2]);
      operator delete(v75);
      v75 = v86;
    }
    while (v86);
  }
  if (a59)
  {
    operator delete(a59);
    v76 = a65;
    if (!a65)
    {
LABEL_9:
      v77 = a68;
      if (!a68)
        goto LABEL_10;
      goto LABEL_24;
    }
  }
  else
  {
    v76 = a65;
    if (!a65)
      goto LABEL_9;
  }
  operator delete(v76);
  v77 = a68;
  if (!a68)
  {
LABEL_10:
    v78 = a71;
    if (!a71)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  operator delete(v77);
  v78 = a71;
  if (!a71)
  {
LABEL_11:
    v79 = (void *)STACK[0x208];
    if (!STACK[0x208])
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  operator delete(v78);
  v79 = (void *)STACK[0x208];
  if (!STACK[0x208])
  {
LABEL_12:
    v80 = *(void **)(v71 - 240);
    if (!v80)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  STACK[0x210] = (unint64_t)v79;
  operator delete(v79);
  v80 = *(void **)(v71 - 240);
  if (!v80)
  {
LABEL_13:
    v81 = *(void **)(v71 - 216);
    if (!v81)
      goto LABEL_14;
    goto LABEL_28;
  }
LABEL_27:
  *(_QWORD *)(v71 - 232) = v80;
  operator delete(v80);
  v81 = *(void **)(v71 - 216);
  if (!v81)
  {
LABEL_14:
    v82 = *(void **)(v71 - 192);
    if (!v82)
      goto LABEL_15;
    goto LABEL_29;
  }
LABEL_28:
  *(_QWORD *)(v71 - 208) = v81;
  operator delete(v81);
  v82 = *(void **)(v71 - 192);
  if (!v82)
  {
LABEL_15:
    v83 = *(void **)(v71 - 168);
    if (!v83)
      goto LABEL_16;
    goto LABEL_30;
  }
LABEL_29:
  *(_QWORD *)(v71 - 184) = v82;
  operator delete(v82);
  v83 = *(void **)(v71 - 168);
  if (!v83)
  {
LABEL_16:
    v84 = *(void **)(v71 - 144);
    if (!v84)
      goto LABEL_17;
    goto LABEL_31;
  }
LABEL_30:
  *(_QWORD *)(v71 - 160) = v83;
  operator delete(v83);
  v84 = *(void **)(v71 - 144);
  if (!v84)
  {
LABEL_17:
    v85 = *(void **)(v71 - 120);
    if (!v85)
      goto LABEL_18;
    goto LABEL_32;
  }
LABEL_31:
  *(_QWORD *)(v71 - 136) = v84;
  operator delete(v84);
  v85 = *(void **)(v71 - 120);
  if (!v85)
LABEL_18:
    _Unwind_Resume(a1);
LABEL_32:
  *(_QWORD *)(v71 - 112) = v85;
  operator delete(v85);
  _Unwind_Resume(a1);
}

void sub_239AF20A0(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void **v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void **v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void **v36;
  unint64_t v37;
  void **v38;
  char *v39;
  _QWORD *v40;
  _QWORD *v41;
  void *v42;
  unint64_t v43;
  void **v44;
  unint64_t v45;
  unint64_t v46;
  void **v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t i;
  void **v52;
  void *v53;
  void *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void **v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void **v70;
  _QWORD *v71;
  _QWORD *v72;
  void *v73;
  unint64_t v74;
  void **v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  void **v79;
  char *v80;
  _QWORD *v81;
  _QWORD *v82;
  void *v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  void **v87;
  _QWORD *v88;
  _QWORD *v89;
  void *v90;
  _QWORD *v91;
  _QWORD *v92;
  void *v93;
  uint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  void *v98[2];
  void *__p[2];
  int v100;
  uint64_t v101;
  uint64_t v102;
  void **v103;
  char *v104;
  uint64_t v105;

  v6 = *(_QWORD *)(a1 + 56);
  v7 = a2 >> 3;
  if (v6 <= a2 || (v8 = *(_QWORD *)(a1 + 48), ((*(_QWORD *)(v8 + (v7 & 0x1FFFFFFFFFFFFFF8)) >> a2) & 1) == 0))
  {
    v10 = *(void **)(a1 + 32);
    v9 = (unint64_t *)(a1 + 24);
    v11 = ((uint64_t)v10 - *(_QWORD *)(a1 + 24)) >> 3;
    if (v11 > a2)
    {
LABEL_94:
      v8 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(v8 + (v7 & 0x1FFFFFFFFFFFFFF8)) |= 1 << a2;
      v6 = *(_QWORD *)(a1 + 56);
      goto LABEL_95;
    }
    v97 = v7;
    v101 = 0x3FF0000000000000;
    sub_239AF3084(v9, v10, a2 + 1 - v11, &v101);
    v12 = *(_QWORD *)(a1 + 56);
    v13 = *(_QWORD *)(a1 + 48) + 8 * (v12 >> 6);
    LOBYTE(v98[0]) = 0;
    sub_239AF34D0((uint64_t)&v101, (void **)(a1 + 48), v13, v12 & 0x3F, a2 + 1 - v12, v98);
    v14 = *(void ***)a1;
    v15 = *(char **)(a1 + 8);
    v16 = (uint64_t)&v15[-*(_QWORD *)a1];
    v17 = 0x3333333333333333 * (v16 >> 3);
    *(_OWORD *)v98 = 0u;
    *(_OWORD *)__p = 0u;
    v100 = 1065353216;
    v18 = a2 + 1 + v17;
    if (v18)
    {
      v19 = v16 / 40;
      v20 = *(_QWORD *)(a1 + 16);
      v21 = &v14[5 * (v16 / 40)];
      if (0xCCCCCCCCCCCCCCCDLL * ((v20 - (uint64_t)v15) >> 3) < v18)
      {
        v22 = v19 + v18;
        if (v19 + v18 > 0x666666666666666)
          sub_2394189F8();
        v23 = 0xCCCCCCCCCCCCCCCDLL * ((v20 - (uint64_t)v14) >> 3);
        if (2 * v23 > v22)
          v22 = 2 * v23;
        if (v23 >= 0x333333333333333)
          v24 = 0x666666666666666;
        else
          v24 = v22;
        v105 = a1 + 16;
        if (v24)
        {
          if (v24 > 0x666666666666666)
            sub_239418A80();
          v25 = a3;
          v26 = (char *)operator new(40 * v24);
        }
        else
        {
          v25 = a3;
          v26 = 0;
        }
        v62 = (uint64_t)&v26[40 * v19];
        v101 = (uint64_t)v26;
        v102 = v62;
        v103 = (void **)v62;
        v104 = &v26[40 * v24];
        v63 = v62 + 40 * v18;
        v64 = 40 * (v17 + a2) + 40;
        do
        {
          sub_239A4FD24(v62, (uint64_t)v98);
          v62 += 40;
          v64 -= 40;
        }
        while (v64);
        v65 = v102;
        v66 = *(void ***)a1;
        if (*(void ***)a1 != v21)
        {
          v67 = 0;
          do
          {
            v69 = v65 + v67 * 8;
            v70 = &v21[v67];
            v71 = v21[v67 - 5];
            *(v70 - 5) = 0;
            *(_QWORD *)(v69 - 40) = v71;
            *(_QWORD *)(v69 - 32) = v21[v67 - 4];
            *(v70 - 4) = 0;
            v72 = v21[v67 - 3];
            *(_QWORD *)(v65 + v67 * 8 - 24) = v72;
            v73 = v21[v67 - 2];
            *(_QWORD *)(v69 - 16) = v73;
            *(_DWORD *)(v69 - 8) = v21[v67 - 1];
            if (v73)
            {
              v68 = v72[1];
              v74 = *(_QWORD *)(v69 - 32);
              if ((v74 & (v74 - 1)) != 0)
              {
                if (v68 >= v74)
                  v68 %= v74;
              }
              else
              {
                v68 &= v74 - 1;
              }
              v71[v68] = v65 + v67 * 8 - 24;
              v21[v67 - 3] = 0;
              v21[v67 - 2] = 0;
            }
            v67 -= 5;
          }
          while (&v21[v67] != v66);
          v65 += v67 * 8;
        }
        v102 = v65;
        v75 = *(void ***)(a1 + 8);
        if (v75 != v21)
        {
          v76 = 0;
          v77 = &v26[40 * v19 + 40 * v17 + 40 * a2];
          do
          {
            v79 = &v21[v76];
            v80 = &v77[v76 * 8];
            v81 = v21[v76];
            *v79 = 0;
            *((_QWORD *)v80 + 5) = v81;
            *((_QWORD *)v80 + 6) = v21[v76 + 1];
            v79[1] = 0;
            v82 = v21[v76 + 2];
            *(_QWORD *)&v77[v76 * 8 + 56] = v82;
            v83 = v21[v76 + 3];
            *((_QWORD *)v80 + 8) = v83;
            *((_DWORD *)v80 + 18) = v21[v76 + 4];
            if (v83)
            {
              v78 = v82[1];
              v84 = *((_QWORD *)v80 + 6);
              if ((v84 & (v84 - 1)) != 0)
              {
                if (v78 >= v84)
                  v78 %= v84;
              }
              else
              {
                v78 &= v84 - 1;
              }
              v81[v78] = &v77[v76 * 8 + 56];
              v21[v76 + 2] = 0;
              v21[v76 + 3] = 0;
            }
            v76 += 5;
          }
          while (&v21[v76] != v75);
          v63 = (uint64_t)&v77[v76 * 8 + 40];
          v65 = v102;
          v21 = *(void ***)(a1 + 8);
        }
        v85 = *(_QWORD *)a1;
        *(_QWORD *)a1 = v65;
        *(_QWORD *)(a1 + 8) = v63;
        v86 = *(char **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v104;
        v103 = v21;
        v104 = v86;
        v101 = v85;
        v102 = v85;
        if (v21 != (void **)v85)
        {
          do
          {
            v87 = v21 - 5;
            v103 = v21 - 5;
            v88 = *(v21 - 3);
            if (v88)
            {
              do
              {
                v89 = (_QWORD *)*v88;
                operator delete(v88);
                v88 = v89;
              }
              while (v89);
            }
            v90 = *v87;
            *v87 = 0;
            if (v90)
              operator delete(v90);
            v21 = v103;
          }
          while (v103 != (void **)v85);
          v21 = (void **)v101;
        }
        a3 = v25;
        if (v21)
          operator delete(v21);
        goto LABEL_89;
      }
      v94 = v16 / 40;
      v95 = a2 + 1 + v17;
      v96 = a3;
      v27 = 0xCCCCCCCCCCCCCCCDLL * ((v15 - (char *)v21) >> 3);
      v28 = v18 - v27;
      if (v18 <= v27)
      {
        v30 = v15;
        v27 = a2 + 1 + v17;
      }
      else
      {
        v29 = 0;
        v30 = &v15[40 * v28];
        v31 = 40 * (v17 + a2) - 8 * ((v15 - (char *)v21) >> 3) + 40;
        do
        {
          sub_239A4FD24((uint64_t)&v15[v29], (uint64_t)v98);
          v29 += 40;
        }
        while (v31 != v29);
        *(_QWORD *)(a1 + 8) = v30;
        v18 = v95;
        if (v15 == (char *)v21)
          goto LABEL_89;
      }
      v32 = &v21[5 * v18];
      v33 = &v30[-40 * v18];
      v34 = v30;
      if (v33 < v15)
      {
        v35 = 0;
        v36 = &v14[5 * v94] + ((v30 - (char *)v32) >> 3);
        do
        {
          v38 = &v36[v35];
          v39 = &v30[v35 * 8];
          v40 = v36[v35];
          *v38 = 0;
          *(_QWORD *)v39 = v40;
          *((_QWORD *)v39 + 1) = v36[v35 + 1];
          v38[1] = 0;
          v41 = v36[v35 + 2];
          *(_QWORD *)&v30[v35 * 8 + 16] = v41;
          v42 = v36[v35 + 3];
          *((_QWORD *)v39 + 3) = v42;
          *((_DWORD *)v39 + 8) = v36[v35 + 4];
          if (v42)
          {
            v37 = v41[1];
            v43 = *((_QWORD *)v39 + 1);
            if ((v43 & (v43 - 1)) != 0)
            {
              if (v37 >= v43)
                v37 %= v43;
            }
            else
            {
              v37 &= v43 - 1;
            }
            v40[v37] = &v30[v35 * 8 + 16];
            v36[v35 + 2] = 0;
            v36[v35 + 3] = 0;
          }
          v35 += 5;
        }
        while (&v36[v35] < (void **)v15);
        v34 = &v30[v35 * 8];
      }
      *(_QWORD *)(a1 + 8) = v34;
      if (v30 != (char *)v32)
      {
        do
        {
          v47 = (void **)(v30 - 40);
          if (*((_QWORD *)v30 - 2))
          {
            v48 = (_QWORD *)*((_QWORD *)v30 - 3);
            if (v48)
            {
              do
              {
                v49 = (_QWORD *)*v48;
                operator delete(v48);
                v48 = v49;
              }
              while (v49);
            }
            *((_QWORD *)v30 - 3) = 0;
            v50 = *((_QWORD *)v30 - 4);
            if (v50)
            {
              for (i = 0; i != v50; ++i)
                *((_QWORD *)*v47 + i) = 0;
            }
            *((_QWORD *)v30 - 2) = 0;
          }
          v52 = (void **)(v33 - 40);
          v53 = (void *)*((_QWORD *)v33 - 5);
          *((_QWORD *)v33 - 5) = 0;
          v54 = *v47;
          *v47 = v53;
          if (v54)
            operator delete(v54);
          v57 = *((_QWORD *)v33 - 3);
          v56 = v33 - 24;
          v55 = v57;
          v58 = *((_QWORD *)v56 - 1);
          *((_QWORD *)v30 - 3) = v57;
          v59 = v30 - 24;
          *((_QWORD *)v30 - 4) = v58;
          *((_QWORD *)v56 - 1) = 0;
          v60 = *((_QWORD *)v56 + 1);
          *((_QWORD *)v59 + 1) = v60;
          *((_DWORD *)v59 + 4) = *((_DWORD *)v56 + 4);
          if (v60)
          {
            v46 = *(_QWORD *)(v55 + 8);
            v61 = *((_QWORD *)v30 - 4);
            if ((v61 & (v61 - 1)) != 0)
            {
              if (v46 >= v61)
                v46 %= v61;
            }
            else
            {
              v46 &= v61 - 1;
            }
            *((_QWORD *)*v47 + v46) = v59;
            *(_QWORD *)v56 = 0;
            *((_QWORD *)v56 + 1) = 0;
          }
          v30 -= 40;
          v33 = (char *)v52;
        }
        while (v52 != v21);
      }
      v44 = v98;
      if (v21 <= v98)
      {
        v45 = v95;
        if (*(_QWORD *)(a1 + 8) <= (unint64_t)v98)
          v45 = 0;
        v44 = &v98[5 * v45];
      }
      a3 = v96;
      do
      {
        if (v21 != v44)
        {
          *((_DWORD *)v21 + 8) = *((_DWORD *)v44 + 8);
          sub_239AA6750(v21, (uint64_t *)v44[2]);
        }
        v21 += 5;
        --v27;
      }
      while (v27);
    }
LABEL_89:
    v91 = __p[0];
    if (__p[0])
    {
      do
      {
        v92 = (_QWORD *)*v91;
        operator delete(v91);
        v91 = v92;
      }
      while (v92);
    }
    v93 = v98[0];
    v98[0] = 0;
    if (v93)
      operator delete(v93);
    v7 = v97;
    goto LABEL_94;
  }
LABEL_95:
  if (v6 > a2 && ((*(_QWORD *)(v8 + (v7 & 0x1FFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * a2) = *a3;
}

void sub_239AF2768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_239420950((uint64_t)va);
  _Unwind_Resume(a1);
}

__n128 sub_239AF27A0(uint64_t *a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v8;
  BOOL v9;
  __n128 result;
  _QWORD *v12;
  int8x8_t v13;
  uint8x8_t v14;
  unint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t **v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD *v37;
  int8x8_t v38;
  uint8x8_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  unint64_t v49;
  unint64_t v50;

  v49 = a3;
  v50 = a2;
  v4 = a1[7];
  if (v4 <= a2
    || ((v8 = a1[6], v4 > a3)
      ? (v9 = (*(_QWORD *)(v8 + ((a2 >> 3) & 0x1FFFFFFFFFFFFFF8)) & (1 << a2)) == 0)
      : (v9 = 1),
        v9 || ((*(_QWORD *)(v8 + ((a3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a3) & 1) == 0))
  {
    sub_239A444D4((uint64_t)"unknown file", 126, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (sub_239AF2B88(a1, a2, a3))
  {
    if (sub_239AF2B88(a1, a2, a3))
    {
      v12 = (_QWORD *)(*a1 + 40 * a2);
      v13 = (int8x8_t)v12[1];
      if (!*(_QWORD *)&v13)
        goto LABEL_30;
      v14 = (uint8x8_t)vcnt_s8(v13);
      v14.i16[0] = vaddlv_u8(v14);
      if (v14.u32[0] > 1uLL)
      {
        v15 = a3;
        if (*(_QWORD *)&v13 <= a3)
          v15 = a3 % *(_QWORD *)&v13;
      }
      else
      {
        v15 = (*(_QWORD *)&v13 - 1) & a3;
      }
      v27 = *(uint64_t ***)(*v12 + 8 * v15);
      if (v27)
      {
        v28 = *v27;
        if (*v27)
        {
          if (v14.u32[0] < 2uLL)
          {
            v29 = *(_QWORD *)&v13 - 1;
            while (1)
            {
              v31 = v28[1];
              if (v31 == a3)
              {
                if (v28[2] == a3)
                  goto LABEL_31;
              }
              else if ((v31 & v29) != v15)
              {
                goto LABEL_30;
              }
              v28 = (uint64_t *)*v28;
              if (!v28)
                goto LABEL_31;
            }
          }
          do
          {
            v30 = v28[1];
            if (v30 == a3)
            {
              if (v28[2] == a3)
                break;
            }
            else
            {
              if (v30 >= *(_QWORD *)&v13)
                v30 %= *(_QWORD *)&v13;
              if (v30 != v15)
                goto LABEL_30;
            }
            v28 = (uint64_t *)*v28;
          }
          while (v28);
        }
      }
      else
      {
LABEL_30:
        v28 = 0;
      }
LABEL_31:
      v28[3] = *(_QWORD *)a4;
      v32 = *(_OWORD *)(a4 + 24);
      *((_OWORD *)v28 + 2) = *(_OWORD *)(a4 + 8);
      *((_OWORD *)v28 + 3) = v32;
      v33 = *(_OWORD *)(a4 + 72);
      v34 = *(_OWORD *)(a4 + 88);
      v35 = *(_OWORD *)(a4 + 56);
      v28[16] = *(_QWORD *)(a4 + 104);
      *((_OWORD *)v28 + 6) = v33;
      *((_OWORD *)v28 + 7) = v34;
      *((_OWORD *)v28 + 5) = v35;
      *((_OWORD *)v28 + 4) = *(_OWORD *)(a4 + 40);
      v36 = *(_OWORD *)(a4 + 112);
      v28[19] = *(_QWORD *)(a4 + 128);
      *(_OWORD *)(v28 + 17) = v36;
      v37 = (_QWORD *)(*a1 + 40 * a3);
      v38 = (int8x8_t)v37[1];
      if (v38)
      {
        v39 = (uint8x8_t)vcnt_s8(v38);
        v39.i16[0] = vaddlv_u8(v39);
        if (v39.u32[0] > 1uLL)
        {
          v40 = a2;
          if (*(_QWORD *)&v38 <= a2)
            v40 = a2 % *(_QWORD *)&v38;
        }
        else
        {
          v40 = (*(_QWORD *)&v38 - 1) & a2;
        }
        v41 = *(uint64_t **)(*v37 + 8 * v40);
        if (v41)
        {
          v41 = (uint64_t *)*v41;
          if (v41)
          {
            if (v39.u32[0] < 2uLL)
            {
              v42 = *(_QWORD *)&v38 - 1;
              while (1)
              {
                v44 = v41[1];
                if (v44 == a2)
                {
                  if (v41[2] == a2)
                    goto LABEL_52;
                }
                else if ((v44 & v42) != v40)
                {
                  goto LABEL_51;
                }
                v41 = (uint64_t *)*v41;
                if (!v41)
                  goto LABEL_52;
              }
            }
            do
            {
              v43 = v41[1];
              if (v43 == a2)
              {
                if (v41[2] == a2)
                  break;
              }
              else
              {
                if (v43 >= *(_QWORD *)&v38)
                  v43 %= *(_QWORD *)&v38;
                if (v43 != v40)
                  goto LABEL_51;
              }
              v41 = (uint64_t *)*v41;
            }
            while (v41);
          }
        }
      }
      else
      {
LABEL_51:
        v41 = 0;
      }
LABEL_52:
      v41[3] = *(_QWORD *)a4;
      v45 = *(_OWORD *)(a4 + 24);
      *((_OWORD *)v41 + 2) = *(_OWORD *)(a4 + 8);
      *((_OWORD *)v41 + 3) = v45;
      v47 = *(_OWORD *)(a4 + 72);
      v46 = *(_OWORD *)(a4 + 88);
      v48 = *(_OWORD *)(a4 + 56);
      v41[16] = *(_QWORD *)(a4 + 104);
      *((_OWORD *)v41 + 6) = v47;
      *((_OWORD *)v41 + 7) = v46;
      *((_OWORD *)v41 + 5) = v48;
      *((_OWORD *)v41 + 4) = *(_OWORD *)(a4 + 40);
      result = *(__n128 *)(a4 + 112);
      v41[19] = *(_QWORD *)(a4 + 128);
      *(__n128 *)(v41 + 17) = result;
    }
  }
  else
  {
    v16 = sub_239AF2D9C(*a1 + 40 * a2, a3, &v49);
    *((_QWORD *)v16 + 3) = *(_QWORD *)a4;
    v17 = *(_OWORD *)(a4 + 24);
    *((_OWORD *)v16 + 2) = *(_OWORD *)(a4 + 8);
    *((_OWORD *)v16 + 3) = v17;
    *((_OWORD *)v16 + 4) = *(_OWORD *)(a4 + 40);
    v18 = *(_OWORD *)(a4 + 72);
    v19 = *(_OWORD *)(a4 + 88);
    v20 = *(_OWORD *)(a4 + 56);
    *((_QWORD *)v16 + 16) = *(_QWORD *)(a4 + 104);
    *((_OWORD *)v16 + 6) = v18;
    *((_OWORD *)v16 + 7) = v19;
    *((_OWORD *)v16 + 5) = v20;
    v21 = *(_OWORD *)(a4 + 112);
    *((_QWORD *)v16 + 19) = *(_QWORD *)(a4 + 128);
    *(_OWORD *)(v16 + 136) = v21;
    v22 = sub_239AF2D9C(*a1 + 40 * a3, a2, &v50);
    *((_QWORD *)v22 + 3) = *(_QWORD *)a4;
    v23 = *(_OWORD *)(a4 + 24);
    *((_OWORD *)v22 + 2) = *(_OWORD *)(a4 + 8);
    *((_OWORD *)v22 + 3) = v23;
    *((_OWORD *)v22 + 4) = *(_OWORD *)(a4 + 40);
    v24 = *(_OWORD *)(a4 + 72);
    v25 = *(_OWORD *)(a4 + 88);
    v26 = *(_OWORD *)(a4 + 56);
    *((_QWORD *)v22 + 16) = *(_QWORD *)(a4 + 104);
    *((_OWORD *)v22 + 6) = v24;
    *((_OWORD *)v22 + 7) = v25;
    *((_OWORD *)v22 + 5) = v26;
    result = *(__n128 *)(a4 + 112);
    *((_QWORD *)v22 + 19) = *(_QWORD *)(a4 + 128);
    *(__n128 *)(v22 + 136) = result;
  }
  return result;
}

BOOL sub_239AF2B88(uint64_t *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  int8x8_t v8;
  uint8x8_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _BOOL8 result;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int8x8_t v18;
  uint8x8_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v3 = a1[7];
  if (v3 <= a2)
    return 0;
  v4 = a1[6];
  if (v3 <= a3 || (*(_QWORD *)(v4 + ((a2 >> 3) & 0x1FFFFFFFFFFFFFF8)) & (1 << a2)) == 0)
    return 0;
  if (((*(_QWORD *)(v4 + ((a3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
    return 0;
  v6 = *a1;
  v7 = (_QWORD *)(*a1 + 40 * a2);
  v8 = (int8x8_t)v7[1];
  if (!*(_QWORD *)&v8)
    return 0;
  v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    v10 = a3;
    if (*(_QWORD *)&v8 <= a3)
      v10 = a3 % *(_QWORD *)&v8;
  }
  else
  {
    v10 = (*(_QWORD *)&v8 - 1) & a3;
  }
  v11 = *(_QWORD **)(*v7 + 8 * v10);
  if (!v11)
    return 0;
  v12 = (_QWORD *)*v11;
  if (!v12)
    return 0;
  if (v9.u32[0] < 2uLL)
  {
    v13 = *(_QWORD *)&v8 - 1;
    while (1)
    {
      v16 = v12[1];
      if (v16 == a3)
      {
        if (v12[2] == a3)
          goto LABEL_28;
      }
      else if ((v16 & v13) != v10)
      {
        return 0;
      }
      result = 0;
      v12 = (_QWORD *)*v12;
      if (!v12)
        return result;
    }
  }
  while (1)
  {
    v15 = v12[1];
    if (v15 == a3)
      break;
    if (v15 >= *(_QWORD *)&v8)
      v15 %= *(_QWORD *)&v8;
    if (v15 != v10)
      return 0;
LABEL_17:
    result = 0;
    v12 = (_QWORD *)*v12;
    if (!v12)
      return result;
  }
  if (v12[2] != a3)
    goto LABEL_17;
LABEL_28:
  v17 = (_QWORD *)(v6 + 40 * a3);
  v18 = (int8x8_t)v17[1];
  if (v18)
  {
    v19 = (uint8x8_t)vcnt_s8(v18);
    v19.i16[0] = vaddlv_u8(v19);
    if (v19.u32[0] > 1uLL)
    {
      v20 = a2;
      if (*(_QWORD *)&v18 <= a2)
        v20 = a2 % *(_QWORD *)&v18;
    }
    else
    {
      v20 = (*(_QWORD *)&v18 - 1) & a2;
    }
    v21 = *(_QWORD **)(*v17 + 8 * v20);
    if (v21)
    {
      v21 = (_QWORD *)*v21;
      if (v21)
      {
        if (v19.u32[0] < 2uLL)
        {
          v22 = *(_QWORD *)&v18 - 1;
          while (1)
          {
            v24 = v21[1];
            if (v24 == a2)
            {
              if (v21[2] == a2)
                return v21 != 0;
            }
            else if ((v24 & v22) != v20)
            {
              goto LABEL_48;
            }
            v21 = (_QWORD *)*v21;
            if (!v21)
              return v21 != 0;
          }
        }
        do
        {
          v23 = v21[1];
          if (v23 == a2)
          {
            if (v21[2] == a2)
              return v21 != 0;
          }
          else
          {
            if (v23 >= *(_QWORD *)&v18)
              v23 %= *(_QWORD *)&v18;
            if (v23 != v20)
              goto LABEL_48;
          }
          v21 = (_QWORD *)*v21;
        }
        while (v21);
      }
    }
  }
  else
  {
LABEL_48:
    v21 = 0;
  }
  return v21 != 0;
}

char *sub_239AF2D9C(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v7;
  uint8x8_t v8;
  void **v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t prime;
  unint64_t v19;
  uint8x8_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v5 = a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = a2;
      if (v7 <= a2)
        v3 = a2 % v7;
    }
    else
    {
      v3 = (v7 - 1) & a2;
    }
    v9 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = (char *)*v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = *((_QWORD *)v10 + 1);
            if (v12 == a2)
            {
              if (*((_QWORD *)v10 + 2) == a2)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_22;
            }
            v10 = *(char **)v10;
            if (!v10)
              goto LABEL_22;
          }
        }
        do
        {
          v11 = *((_QWORD *)v10 + 1);
          if (v11 == a2)
          {
            if (*((_QWORD *)v10 + 2) == a2)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = *(char **)v10;
        }
        while (v10);
      }
    }
  }
LABEL_22:
  v10 = (char *)operator new(0xA0uLL);
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = v5;
  *((_QWORD *)v10 + 2) = *a3;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *((_QWORD *)v10 + 7) = 0;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (v7 && (float)(v14 * (float)v7) >= v13)
  {
    v5 = v3;
  }
  else
  {
    v15 = 1;
    if (v7 >= 3)
      v15 = (v7 & (v7 - 1)) != 0;
    v16 = v15 | (2 * v7);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      prime = v17;
    else
      prime = v16;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_35;
    if (prime < v7)
    {
      v19 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v20 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
      {
        v19 = std::__next_prime(v19);
      }
      else
      {
        v21 = 1 << -(char)__clz(v19 - 1);
        if (v19 >= 2)
          v19 = v21;
      }
      if (prime <= v19)
        prime = v19;
      if (prime < v7)
LABEL_35:
        sub_239A501C8(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v5)
        v5 %= v7;
    }
    else
    {
      v5 &= v7 - 1;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v23)
  {
    *(_QWORD *)v10 = *v23;
LABEL_58:
    *v23 = v10;
    goto LABEL_59;
  }
  *(_QWORD *)v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(v22 + 8 * v5) = a1 + 16;
  if (*(_QWORD *)v10)
  {
    v24 = *(_QWORD *)(*(_QWORD *)v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v24 >= v7)
        v24 %= v7;
    }
    else
    {
      v24 &= v7 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_58;
  }
LABEL_59:
  ++*(_QWORD *)(a1 + 24);
  return v10;
}

void sub_239AF3070(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239AF3084(unint64_t *a1, void *a2, unint64_t a3, uint64_t *a4)
{
  const double *v4;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  int64x2_t v30;
  int64x2_t *v31;
  uint64_t v32;
  double *v33;
  uint64_t v34;
  int64x2_t v35;
  int64x2_t *v36;
  uint64_t v37;
  double *v38;
  int64_t v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  unint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  __int128 *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  float64x2_t v57;
  float64x2_t *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  __int128 *v62;
  _OWORD *v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char *v67;

  if (!a3)
    return;
  v4 = (const double *)a4;
  v8 = *a1;
  v9 = a1[1];
  v10 = (uint64_t)a2 - *a1;
  v11 = v10 >> 3;
  v12 = (double *)(*a1 + (v10 & 0xFFFFFFFFFFFFFFF8));
  v13 = a1[2];
  if (a3 <= (uint64_t)(v13 - v9) >> 3)
  {
    v19 = (uint64_t)(v9 - (_QWORD)v12) >> 3;
    v20 = a3;
    if (a3 <= v19)
    {
      v21 = a1[1];
      v19 = a3;
      goto LABEL_36;
    }
    v21 = v9 + 8 * (a3 - v19);
    v22 = v20 * 8 - (v9 - (_QWORD)v12) - 8;
    if (v22 >= 0x98)
    {
      if (v9 >= (unint64_t)(a4 + 1)
        || (v23 = (uint64_t *)a1[1], (v22 & 0xFFFFFFFFFFFFFFF8) + v9 + 8 <= (unint64_t)a4))
      {
        v34 = (v22 >> 3) + 1;
        v35 = vdupq_lane_s64(*a4, 0);
        v36 = (int64x2_t *)(v9 + 16);
        v37 = v34 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v36[-1] = v35;
          *v36 = v35;
          v36 += 2;
          v37 -= 4;
        }
        while (v37);
        if (v34 == (v34 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_35:
          a1[1] = v21;
          if ((double *)v9 == v12)
            return;
LABEL_36:
          v38 = &v12[v20];
          v39 = v21 - (_QWORD)&v12[v20];
          v40 = v39 >> 3;
          v41 = (uint64_t *)(v21 - v20 * 8);
          v42 = (_QWORD *)v21;
          if ((unint64_t)v41 < v9)
          {
            v43 = (v10 & 0xFFFFFFFFFFFFFFF8) + v39;
            v44 = (char *)(v43 + v8);
            v45 = v43 + v8 + 8;
            if (v9 > v45)
              v45 = v9;
            v46 = v45 + ~v8 - v43;
            v47 = v21 - (_QWORD)v44;
            v48 = v46 >= 0x58 && v47 > 0x1F;
            v42 = (_QWORD *)v21;
            if (!v48)
              goto LABEL_78;
            v49 = (v46 >> 3) + 1;
            v50 = 8 * (v49 & 0x3FFFFFFFFFFFFFFCLL);
            v41 = (uint64_t *)((char *)v41 + v50);
            v51 = (_OWORD *)(v21 + 16);
            v52 = (__int128 *)(8 * v40 + 8 * v11 + v8 + 16);
            v53 = v49 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v54 = *v52;
              *(v51 - 1) = *(v52 - 1);
              *v51 = v54;
              v51 += 2;
              v52 += 2;
              v53 -= 4;
            }
            while (v53);
            v42 = (_QWORD *)(v21 + v50);
            if (v49 != (v49 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_78:
              do
              {
                v55 = *v41++;
                *v42++ = v55;
              }
              while ((unint64_t)v41 < v9);
            }
          }
          a1[1] = (unint64_t)v42;
          if ((double *)v21 != v38)
            memmove((void *)(v21 - 8 * v40), v12, v39);
          if (v12 <= v4)
          {
            if (a1[1] <= (unint64_t)v4)
              v56 = 0;
            else
              v56 = a3;
            v4 += v56;
          }
          if (v19 >= 0xA && (v12 >= v4 + 1 || (unint64_t)v4 >= v8 + (v10 & 0xFFFFFFFFFFFFFFF8) + 8 * v19))
          {
            v12 += v19 & 0xFFFFFFFFFFFFFFFCLL;
            v57 = vld1q_dup_f64(v4);
            v58 = (float64x2_t *)(v8 + 8 * v11 + 16);
            v59 = v19 & 0xFFFFFFFFFFFFFFFCLL;
            do
            {
              v58[-1] = v57;
              *v58 = v57;
              v58 += 2;
              v59 -= 4;
            }
            while (v59);
            if (v19 == (v19 & 0xFFFFFFFFFFFFFFFCLL))
              return;
            v19 &= 3u;
          }
          do
          {
            *v12++ = *v4;
            --v19;
          }
          while (v19);
          return;
        }
        v23 = (uint64_t *)(v9 + 8 * (v34 & 0x3FFFFFFFFFFFFFFCLL));
      }
    }
    else
    {
      v23 = (uint64_t *)a1[1];
    }
    do
      *v23++ = *a4;
    while (v23 != (uint64_t *)v21);
    goto LABEL_35;
  }
  v14 = a3 + ((uint64_t)(v9 - v8) >> 3);
  if (v14 >> 61)
    sub_2394189F8();
  v15 = v13 - v8;
  if (v15 >> 2 > v14)
    v14 = v15 >> 2;
  if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8)
    v16 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v16 = v14;
  if (v16)
  {
    if (v16 >> 61)
      sub_239418A80();
    v17 = v16;
    v18 = operator new(8 * v16);
    v16 = v17;
  }
  else
  {
    v18 = 0;
  }
  v24 = v10 >> 3;
  v25 = (unint64_t)&v18[8 * v11];
  v26 = (char *)(v25 + 8 * a3);
  v27 = (a3 - 1) & 0x1FFFFFFFFFFFFFFFLL;
  v28 = (char *)v25;
  if (v27 < 0x13)
    goto LABEL_24;
  if (v25 < (unint64_t)(v4 + 1))
  {
    v28 = (char *)v25;
    if (&v18[8 * a3 + (v10 & 0xFFFFFFFFFFFFFFF8)] > (_BYTE *)v4)
      goto LABEL_24;
  }
  v29 = (v27 + 1) & 0x3FFFFFFFFFFFFFFCLL;
  v30 = vdupq_lane_s64(*(_QWORD *)v4, 0);
  v31 = (int64x2_t *)&v18[8 * v24 + 16];
  v32 = v29;
  do
  {
    v31[-1] = v30;
    *v31 = v30;
    v31 += 2;
    v32 -= 4;
  }
  while (v32);
  if (v27 + 1 != v29)
  {
    v28 = (char *)(v25 + 8 * v29);
    do
    {
LABEL_24:
      *(double *)v28 = *v4;
      v28 += 8;
    }
    while (v28 != v26);
  }
  if ((void *)v8 != a2)
  {
    if ((unint64_t)(v10 - 8) >= 0x68)
    {
      v33 = v12;
      if ((v10 & 0xFFFFFFFFFFFFFFF8) + v8 - (unint64_t)&v18[v10 & 0xFFFFFFFFFFFFFFF8] >= 0x20)
      {
        v60 = ((unint64_t)(v10 - 8) >> 3) + 1;
        v33 = &v12[-(v60 & 0x3FFFFFFFFFFFFFFCLL)];
        v61 = 8 * v24 - 16;
        v62 = (__int128 *)(v8 + v61);
        v63 = &v18[v61];
        v64 = v60 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v65 = *v62;
          *(v63 - 1) = *(v62 - 1);
          *v63 = v65;
          v62 -= 2;
          v63 -= 2;
          v64 -= 4;
        }
        while (v64);
        v25 -= 8 * (v60 & 0x3FFFFFFFFFFFFFFCLL);
        if (v60 == (v60 & 0x3FFFFFFFFFFFFFFCLL))
          goto LABEL_69;
      }
    }
    else
    {
      v33 = v12;
    }
    do
    {
      v66 = *((_QWORD *)v33-- - 1);
      *(_QWORD *)(v25 - 8) = v66;
      v25 -= 8;
    }
    while (v33 != (double *)v8);
  }
LABEL_69:
  v67 = &v18[8 * v16];
  if ((double *)v9 != v12)
    memmove(v26, v12, v9 - (_QWORD)v12);
  *a1 = v25;
  a1[1] = (unint64_t)&v26[v9 - (_QWORD)v12];
  a1[2] = (unint64_t)v67;
  if (v8)
    operator delete((void *)v8);
}

void sub_239AF34D0(uint64_t a1, void **a2, uint64_t a3, unsigned int a4, unint64_t a5, _BYTE *a6)
{
  unint64_t v7;
  unint64_t v12;
  char *v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  char v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  unint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  size_t v50;
  unint64_t *v51;
  char *v52;
  char *v53;
  __int128 v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _BYTE *v59;
  char v60[16];
  void *__dst;
  __int128 v62;
  char *v63;
  int v64;

  v7 = a5;
  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  v12 = (unint64_t)a2[1];
  v13 = (char *)a2[2];
  if ((_QWORD)v13 << 6 < a5 || v12 > ((_QWORD)v13 << 6) - a5)
  {
    __dst = 0;
    v62 = 0uLL;
    v15 = v12 + a5;
    if (v15 < 0)
      sub_2394189F8();
    if ((_QWORD)v13 << 6 > 0x3FFFFFFFFFFFFFFEuLL)
    {
      v18 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else
    {
      v16 = (_QWORD)v13 << 7;
      v17 = (v15 + 63) & 0xFFFFFFFFFFFFFFC0;
      if (v16 <= v17)
        v18 = v17;
      else
        v18 = v16;
    }
    sub_2394187EC((uint64_t)&__dst, v18);
    v35 = (char *)*a2;
    *(_QWORD *)&v62 = (char *)a2[1] + v7;
    v36 = (char *)__dst;
    v37 = a4;
    v38 = a4 + 8 * (a3 - (_QWORD)v35);
    if (v38 < 1)
    {
      v40 = 0;
    }
    else
    {
      v59 = a6;
      v39 = (unint64_t)v38 >> 6;
      if ((unint64_t)v38 >= 0x40)
        memmove(__dst, v35, 8 * v39);
      v36 += 8 * v39;
      if ((v38 & 0x3F) != 0)
      {
        *(_QWORD *)v36 = *(_QWORD *)v36 & ~(0xFFFFFFFFFFFFFFFFLL >> -((a4 + 8 * (a3 - (_BYTE)v35)) & 0x3F)) | *(_QWORD *)&v35[8 * v39] & (0xFFFFFFFFFFFFFFFFLL >> -((a4 + 8 * (a3 - (_BYTE)v35)) & 0x3F));
        v40 = (a4 + 8 * (a3 - (_DWORD)v35)) & 0x3F;
      }
      else
      {
        v40 = 0;
      }
      a6 = v59;
    }
    *(_QWORD *)a1 = v36;
    *(_DWORD *)(a1 + 8) = v40;
    v42 = (char *)*a2 + 8 * ((unint64_t)a2[1] >> 6);
    v43 = (unint64_t)a2[1] & 0x3F;
    v44 = (unint64_t *)((char *)__dst + 8 * ((unint64_t)v62 >> 6));
    if ((v62 & 0x3F) == (_DWORD)v43)
    {
      v45 = v43 - a4 + 8 * (_QWORD)&v42[-a3];
      if (v45 >= 1)
      {
        if (v43)
        {
          if (v45 >= v43)
            v46 = (unint64_t)a2[1] & 0x3F;
          else
            v46 = v43 - v37 + 8 * (_QWORD)&v42[-a3];
          v45 -= v46;
          v47 = (-1 << (v43 - v46)) & (0xFFFFFFFFFFFFFFFFLL >> -(char)v43);
          *v44 = *v44 & ~v47 | *(_QWORD *)v42 & v47;
        }
        if (v45 >= 0)
          v48 = v45;
        else
          v48 = v45 + 63;
        v49 = v48 >> 6;
        v50 = 8 * (v48 >> 6);
        v51 = &v44[v50 / 0xFFFFFFFFFFFFFFF8];
        v52 = &v42[-v50];
        if ((unint64_t)(v45 + 63) >= 0x7F)
          memmove(&v44[v50 / 0xFFFFFFFFFFFFFFF8], &v42[-v50], v50);
        if (v45 - (v49 << 6) >= 1)
          *(v51 - 1) = *(v51 - 1) & ~(-1 << (((_BYTE)v49 << 6) - v45)) | *((_QWORD *)v52 - 1) & (-1 << (((_BYTE)v49 << 6) - v45));
      }
    }
    else
    {
      v63 = (char *)__dst + 8 * ((unint64_t)v62 >> 6);
      v64 = v62 & 0x3F;
      sub_239AF39A0((uint64_t)v60, a3, a4, v42, v43, (uint64_t)&v63);
    }
    v53 = (char *)*a2;
    *a2 = __dst;
    __dst = v53;
    v54 = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a2 + 1) = v62;
    v62 = v54;
    if (v53)
      operator delete(v53);
  }
  else
  {
    v19 = (char *)*a2;
    v20 = (char *)*a2 + 8 * (v12 >> 6);
    v21 = (unint64_t)a2[1] & 0x3F;
    v22 = v12 + a5;
    a2[1] = (void *)(v12 + a5);
    v23 = (unint64_t *)&v19[8 * ((v12 + a5) >> 6)];
    if ((v22 & 0x3F) == (_DWORD)v21)
    {
      v24 = a4;
      v25 = v21 - a4 + 8 * (_QWORD)&v20[-a3];
      if (v25 >= 1)
      {
        if (v21)
        {
          if (v25 >= v21)
            v26 = v21;
          else
            v26 = v21 - a4 + 8 * (_QWORD)&v20[-a3];
          v25 -= v26;
          v27 = (-1 << (v21 - v26)) & (0xFFFFFFFFFFFFFFFFLL >> -(char)v21);
          *v23 = *v23 & ~v27 | *(_QWORD *)v20 & v27;
        }
        if (v25 >= 0)
          v28 = v25;
        else
          v28 = v25 + 63;
        v29 = v28 >> 6;
        v30 = 8 * (v28 >> 6);
        v31 = &v23[v30 / 0xFFFFFFFFFFFFFFF8];
        v32 = &v20[-v30];
        if ((unint64_t)(v25 + 63) >= 0x7F)
          memmove(&v23[v30 / 0xFFFFFFFFFFFFFFF8], &v20[-v30], v30);
        if (v25 - (v29 << 6) >= 1)
          *(v31 - 1) = *(v31 - 1) & ~(-1 << (((_BYTE)v29 << 6) - v25)) | *((_QWORD *)v32 - 1) & (-1 << (((_BYTE)v29 << 6) - v25));
      }
    }
    else
    {
      __dst = v23;
      LODWORD(v62) = v22 & 0x3F;
      sub_239AF39A0((uint64_t)&v63, a3, a4, v20, v21, (uint64_t)&__dst);
      v24 = a4;
    }
    v33 = v24 + 8 * (a3 - (_QWORD)*a2);
    if (v33 < 0)
    {
      v41 = v33 - 63;
      if (v33 - 63 < 0)
        v41 = v24 + 8 * (a3 - (_QWORD)*a2);
      v34 = v41 >> 6;
    }
    else
    {
      v34 = (unint64_t)v33 >> 6;
    }
    v36 = (char *)*a2 + 8 * v34;
    v40 = v33 & 0x3F;
    *(_QWORD *)a1 = v36;
    *(_DWORD *)(a1 + 8) = v40;
  }
  if (v7)
  {
    if (*a6)
    {
      if (v40)
      {
        if ((64 - v40) >= v7)
          v55 = v7;
        else
          v55 = (64 - v40);
        *(_QWORD *)v36 |= (0xFFFFFFFFFFFFFFFFLL >> (64 - v40 - v55)) & (-1 << v40);
        v36 += 8;
        v7 -= v55;
      }
      v56 = 8 * (v7 >> 6);
      if (v7 >= 0x40)
        memset(v36, 255, 8 * (v7 >> 6));
      if ((v7 & 0x3F) != 0)
      {
        v57 = *(_QWORD *)&v36[v56] | (0xFFFFFFFFFFFFFFFFLL >> -(v7 & 0x3F));
LABEL_78:
        *(_QWORD *)&v36[v56] = v57;
      }
    }
    else
    {
      if (v40)
      {
        if ((64 - v40) >= v7)
          v58 = v7;
        else
          v58 = (64 - v40);
        *(_QWORD *)v36 &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v40 - v58)) & (-1 << v40));
        v36 += 8;
        v7 -= v58;
      }
      v56 = 8 * (v7 >> 6);
      if (v7 >= 0x40)
        bzero(v36, 8 * (v7 >> 6));
      if ((v7 & 0x3F) != 0)
      {
        v57 = *(_QWORD *)&v36[v56] & ~(0xFFFFFFFFFFFFFFFFLL >> -(v7 & 0x3F));
        goto LABEL_78;
      }
    }
  }
}

void sub_239AF3988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AF39A0(uint64_t result, uint64_t a2, unsigned int a3, _QWORD *a4, unsigned int a5, uint64_t a6)
{
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;

  v6 = a5 - (unint64_t)a3 + 8 * ((_QWORD)a4 - a2);
  if (v6 <= 0)
  {
    v11 = *(unint64_t **)a6;
    LODWORD(v9) = *(_DWORD *)(a6 + 8);
  }
  else
  {
    if (a5)
    {
      if (v6 >= (unint64_t)a5)
        v7 = a5;
      else
        v7 = a5 - (unint64_t)a3 + 8 * ((_QWORD)a4 - a2);
      v6 -= v7;
      v8 = (-1 << (a5 - v7)) & (0xFFFFFFFFFFFFFFFFLL >> -(char)a5) & *a4;
      v9 = *(unsigned int *)(a6 + 8);
      if (v7 >= v9)
        v10 = *(unsigned int *)(a6 + 8);
      else
        v10 = v7;
      v11 = *(unint64_t **)a6;
      if (v10)
      {
        v12 = v8 >> (a5 - v9);
        if (v9 > a5)
          v12 = v8 << (v9 - a5);
        *v11 = *v11 & ~((-1 << (v9 - v10)) & (0xFFFFFFFFFFFFFFFFLL >> -(char)v9)) | v12;
        LODWORD(v9) = ((_BYTE)v9 - (_BYTE)v10) & 0x3F;
        *(_DWORD *)(a6 + 8) = v9;
        v7 -= v10;
      }
      if (v7 >= 1)
      {
        v13 = *--v11;
        *(_QWORD *)a6 = v11;
        LODWORD(v9) = -(int)v7 & 0x3F;
        *(_DWORD *)(a6 + 8) = v9;
        *v11 = v13 & ~(-1 << -(char)v7) | (v8 << (v7 + v10 - a5 + (-(char)v7 & 0x3F)));
      }
    }
    else
    {
      LODWORD(v9) = *(_DWORD *)(a6 + 8);
      v11 = *(unint64_t **)a6;
    }
    v14 = 64 - v9;
    v15 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v9;
    if (v6 >= 64)
    {
      v16 = *v11;
      do
      {
        v17 = v6;
        v19 = *--a4;
        v18 = v19;
        *v11 = v16 & ~v15 | (v19 >> v14);
        v20 = *--v11;
        v16 = v20 & v15 | (v18 << v9);
        *v11 = v16;
        v6 = v17 - 64;
      }
      while (v17 > 0x7F);
      *(_QWORD *)a6 = v11;
    }
    if (v6 >= 1)
    {
      v21 = *(a4 - 1) & (-1 << -(char)v6);
      if (v6 >= (unint64_t)v9)
        v22 = v9;
      else
        v22 = v6;
      *v11 = *v11 & ~((-1 << (v9 - v22)) & v15) | (v21 >> v14);
      LODWORD(v9) = ((_BYTE)v9 - (_BYTE)v22) & 0x3F;
      *(_DWORD *)(a6 + 8) = v9;
      if (v6 - v22 >= 1)
      {
        v23 = *--v11;
        *(_QWORD *)a6 = v11;
        *(_DWORD *)(a6 + 8) = (v22 - v6) & 0x3F;
        *v11 = v23 & ~(-1 << (v22 - v6)) | (v21 << (v6 + ((v22 - v6) & 0x3F)));
        LODWORD(v9) = (v22 - v6) & 0x3F;
      }
    }
  }
  *(_QWORD *)result = v11;
  *(_DWORD *)(result + 8) = v9;
  return result;
}

void sub_239AF3B9C(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF3BC0(uint64_t a1, uint64_t *a2, int a3)
{
  __int128 **v4;
  __int128 *v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  __int128 *v13;
  __int128 v14;
  void *__p[2];
  __int128 **v17;
  uint64_t v18;
  int v19;
  int v20;
  void *v21[2];
  char v22;
  int v23;
  int v24;

  v4 = *(__int128 ***)(a1 + 8);
  if (a3)
  {
    v5 = v4[1];
    v6 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (char *)*v4) >> 3);
    if (HIDWORD(v6))
    {
      std::ostream::put();
      v7 = 0xAAAAAAAAAAAAAAABLL * (((char *)v4[1] - (char *)*v4) >> 3);
      if (0x7FFFFFFF * (unint64_t)(v7 / 0x7FFFFFFF) >= v7)
        v8 = v7 / 0x7FFFFFFF;
      else
        v8 = v7 / 0x7FFFFFFF + 1;
      v19 = 2;
      v20 = v8;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)__p, "type");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)__p, "vector_chunks");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      HIBYTE(v17) = 7;
      strcpy((char *)__p, "content");
      std::ostream::put();
      LODWORD(v21[0]) = 7;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      v9 = (char *)v4[1] - (char *)*v4;
      if (v9)
      {
        v10 = 0;
        v11 = 0xAAAAAAAAAAAAAAABLL * (v9 >> 3);
        do
        {
          v17 = v4;
          v18 = 0;
          __p[0] = v10;
          v10 += 0x7FFFFFFF;
          if (v11 >= (unint64_t)v10)
            v11 = (unint64_t)v10;
          __p[1] = (void *)v11;
          std::ostream::put();
          v23 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v22 = 5;
          strcpy((char *)v21, "start");
          std::ostream::put();
          v24 = 5;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v22 < 0)
            operator delete(v21[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v22 = 3;
          LODWORD(v21[0]) = 6581861;
          std::ostream::put();
          v24 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v22 < 0)
            operator delete(v21[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v22 = 7;
          strcpy((char *)v21, "content");
          std::ostream::put();
          v24 = 7;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v22 < 0)
            operator delete(v21[0]);
          sub_239AF5574((__int128 *)((char *)*v4 + 24 * (uint64_t)__p[0]), (__int128 *)((char *)*v4 + 24 * (uint64_t)__p[1]), (uint64_t)a2, (char *)__p[1] - (char *)__p[0]);
          v11 = 0xAAAAAAAAAAAAAAABLL * (((char *)v4[1] - (char *)*v4) >> 3);
        }
        while ((unint64_t)v10 < v11);
      }
    }
    else
    {
      sub_239AF5574(*v4, v5, (uint64_t)a2, v6);
    }
  }
  else
  {
    v13 = *v4;
    v12 = v4[1];
    std::ostream::put();
    if (v13 != v12)
    {
      while (1)
      {
        v13 = (__int128 *)((char *)v13 + 24);
        v14 = *(__int128 *)((char *)v13 - 24);
        v17 = (__int128 **)*((_QWORD *)v13 - 1);
        *(_OWORD *)__p = v14;
        sub_2395A34D0((uint64_t)__p, (uint64_t)&v18, a2);
        if (v13 == v12)
          break;
        std::ostream::put();
      }
    }
    std::ostream::put();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AF43AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239AF43EC(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  void **v12;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 8);
  v12 = (void **)v4;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)v4;
  if (!a3)
    goto LABEL_10;
  v5 = std::istream::peek();
  v6 = v5;
  if ((v5 - 196) > 2)
  {
    if ((v5 - 220) > 3 || v5 == 222)
      return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
    a2 = v3;
    a3 = 1;
LABEL_10:
    sub_239AF467C(&v12, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  std::istream::get();
  v7 = sub_2396162D4((uint64_t)v3, v6) / 0x18uLL;
  v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 3);
  v9 = v7 >= v8;
  v10 = v7 - v8;
  if (v10 != 0 && v9)
  {
    sub_239AF450C((void **)v4, v10);
  }
  else if (!v9)
  {
    *(_QWORD *)(v4 + 8) = *(_QWORD *)v4 + 24 * v7;
  }
  std::istream::read();
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AF450C(void **a1, unint64_t a2)
{
  _BYTE *v4;
  char *v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;

  v5 = (char *)a1[1];
  v4 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3) >= a2)
  {
    a1[1] = &v5[24 * (24 * a2 / 0x18)];
  }
  else
  {
    v6 = (char *)*a1;
    v7 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (_BYTE *)*a1) >> 3);
    v8 = v7 + a2;
    if (v7 + a2 > 0xAAAAAAAAAAAAAAALL)
      sub_2394189F8();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v6) >> 3);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x555555555555555)
      v10 = 0xAAAAAAAAAAAAAAALL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0xAAAAAAAAAAAAAAALL)
        sub_239418A80();
      v11 = (char *)operator new(24 * v10);
    }
    else
    {
      v11 = 0;
    }
    v12 = &v11[24 * v7];
    v13 = &v12[24 * (24 * a2 / 0x18)];
    if (v5 != v6)
    {
      do
      {
        v14 = *(_OWORD *)(v5 - 24);
        *((_QWORD *)v12 - 1) = *((_QWORD *)v5 - 1);
        *(_OWORD *)(v12 - 24) = v14;
        v12 -= 24;
        v5 -= 24;
      }
      while (v5 != v6);
      v5 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v13;
    a1[2] = &v11[24 * v10];
    if (v5)
      operator delete(v5);
  }
}

uint64_t sub_239AF467C(void ***a1, _QWORD *a2, int a3)
{
  int v4;
  unsigned int v5;
  char *v6;
  unint64_t v7;
  __int128 v8;
  char *v9;
  char *v10;
  void **v11;
  unint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  __int128 v20;
  char *v21;
  char *v22;
  __int128 v23;
  _QWORD *v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  std::string *v35;
  std::string **v36;
  unint64_t v37;
  std::string *v38;
  std::string *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  std::string *v45;
  std::string *v46;
  __int128 v47;
  uint64_t result;
  char v49;
  unsigned int v50;
  int v51;
  int v52;
  char *v53;
  std::string **v54;
  unint64_t v55;
  std::string *v56;
  std::string *v57;
  std::string *v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  std::string *v64;
  std::string *v65;
  __int128 v66;
  int i;
  unsigned int v68;
  char v69;
  unsigned int v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v79;
  _QWORD v80[11];
  char v81;
  uint64_t v82;
  uint64_t v83[2];
  std::string v84;
  uint64_t v85;
  std::string v86;
  uint64_t v87;

  v87 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v4 = std::istream::get();
    if ((v4 - 196) <= 2)
    {
      v5 = sub_2396162D4((uint64_t)a2, v4);
      v79 = 0uLL;
      v80[0] = 0;
      sub_239AF450C((void **)&v79, v5);
      std::istream::read();
      v6 = (char *)*((_QWORD *)&v79 + 1);
      if (*((_QWORD *)&v79 + 1) != (_QWORD)v79)
      {
        v7 = 0;
        v6 = (char *)v79;
        do
        {
          v10 = &v6[24 * v7];
          v11 = *a1;
          v13 = (char *)(*a1)[1];
          v12 = (unint64_t)(*a1)[2];
          if ((unint64_t)v13 < v12)
          {
            v8 = *(_OWORD *)v10;
            *((_QWORD *)v13 + 2) = *((_QWORD *)v10 + 2);
            *(_OWORD *)v13 = v8;
            v9 = v13 + 24;
          }
          else
          {
            v14 = (char *)*v11;
            v15 = 0xAAAAAAAAAAAAAAABLL * ((v13 - (_BYTE *)*v11) >> 3);
            v16 = v15 + 1;
            if (v15 + 1 > 0xAAAAAAAAAAAAAAALL)
              sub_2394189F8();
            v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (_QWORD)v14) >> 3);
            if (2 * v17 > v16)
              v16 = 2 * v17;
            if (v17 >= 0x555555555555555)
              v18 = 0xAAAAAAAAAAAAAAALL;
            else
              v18 = v16;
            if (v18)
            {
              if (v18 > 0xAAAAAAAAAAAAAAALL)
                sub_239418A80();
              v19 = (char *)operator new(24 * v18);
            }
            else
            {
              v19 = 0;
            }
            v20 = *(_OWORD *)v10;
            v21 = &v19[24 * v15];
            *((_QWORD *)v21 + 2) = *((_QWORD *)v10 + 2);
            *(_OWORD *)v21 = v20;
            v22 = v21;
            if (v13 != v14)
            {
              do
              {
                v23 = *(_OWORD *)(v13 - 24);
                *((_QWORD *)v22 - 1) = *((_QWORD *)v13 - 1);
                *(_OWORD *)(v22 - 24) = v23;
                v22 -= 24;
                v13 -= 24;
              }
              while (v13 != v14);
              v13 = (char *)*v11;
            }
            v9 = v21 + 24;
            *v11 = v22;
            v11[1] = v21 + 24;
            v11[2] = &v19[24 * v18];
            if (v13)
              operator delete(v13);
          }
          v11[1] = v9;
          ++v7;
          v6 = (char *)v79;
        }
        while (v7 < 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v79 + 1) - v79) >> 3));
      }
      if (v6)
      {
        *((_QWORD *)&v79 + 1) = v6;
        operator delete(v6);
      }
      return 1;
    }
    if ((v4 & 0xFFFFFFFE) == 0xDC)
    {
      v32 = sub_2396162D4((uint64_t)a2, v4);
      if (v32)
      {
        v33 = 0;
        v34 = v32;
        do
        {
          *(_OWORD *)&v84.__r_.__value_.__l.__data_ = (unint64_t)&v79;
          sub_2395DF82C((uint64_t *)&v84, a2, 1);
          *(_OWORD *)&v84.__r_.__value_.__l.__data_ = v79;
          v84.__r_.__value_.__r.__words[2] = v80[0];
          v36 = (std::string **)*a1;
          v38 = (std::string *)(*a1)[1];
          v37 = (unint64_t)(*a1)[2];
          if ((unint64_t)v38 < v37)
          {
            *v38 = v84;
            v35 = v38 + 1;
          }
          else
          {
            v39 = *v36;
            v40 = 0xAAAAAAAAAAAAAAABLL * (((char *)v38 - (char *)*v36) >> 3);
            v41 = v40 + 1;
            if (v40 + 1 > 0xAAAAAAAAAAAAAAALL)
              sub_2394189F8();
            v42 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v37 - (_QWORD)v39) >> 3);
            if (2 * v42 > v41)
              v41 = 2 * v42;
            if (v42 >= 0x555555555555555)
              v43 = 0xAAAAAAAAAAAAAAALL;
            else
              v43 = v41;
            if (v43)
            {
              if (v43 > 0xAAAAAAAAAAAAAAALL)
                sub_239418A80();
              v44 = (char *)operator new(24 * v43);
            }
            else
            {
              v44 = 0;
            }
            v45 = (std::string *)&v44[24 * v40];
            *v45 = v84;
            v46 = v45;
            if (v38 != v39)
            {
              do
              {
                v47 = *(_OWORD *)&v38[-1].__r_.__value_.__l.__data_;
                v46[-1].__r_.__value_.__r.__words[2] = v38[-1].__r_.__value_.__r.__words[2];
                *(_OWORD *)&v46[-1].__r_.__value_.__l.__data_ = v47;
                --v46;
                --v38;
              }
              while (v38 != v39);
              v38 = *v36;
            }
            v35 = v45 + 1;
            *v36 = v46;
            v36[1] = v45 + 1;
            v36[2] = (std::string *)&v44[24 * v43];
            if (v38)
              operator delete(v38);
          }
          v36[1] = v35;
          ++v33;
        }
        while (v33 != v34);
      }
      return 1;
    }
    if (v4 == 223)
    {
      LODWORD(v83[0]) = 0;
      memset(&v84, 0, sizeof(v84));
      std::istream::read();
      std::istream::read();
      std::istream::read();
      std::istream::read();
    }
  }
  else
  {
    v24 = a2 + 4;
    v25 = MEMORY[0x24BDAC740];
    while (1)
    {
      v26 = std::istream::peek();
      v27 = v26 <= 0x7F ? *(_DWORD *)(v25 + 4 * v26 + 60) & 0x4000 : __maskrune(v26, 0x4000uLL);
      v28 = *(_QWORD *)(*a2 - 24);
      if (!v27)
        break;
      if (!*(_DWORD *)((char *)v24 + v28))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v28 + 32) & 2) != 0)
      return 1;
    if (std::istream::get() == 91)
    {
      while (1)
      {
        v29 = std::istream::peek();
        v30 = v29 <= 0x7F ? *(_DWORD *)(v25 + 4 * v29 + 60) & 0x4000 : __maskrune(v29, 0x4000uLL);
        v31 = *(_QWORD *)(*a2 - 24);
        if (!v30)
          break;
        if (!*(_DWORD *)((char *)v24 + v31))
          std::istream::get();
      }
      if ((*((_BYTE *)a2 + v31 + 32) & 2) == 0)
      {
        v49 = 0;
        v77 = *MEMORY[0x24BEDB7F0];
        v75 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v76 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v74 = MEMORY[0x24BEDB848] + 16;
        while ((*((_BYTE *)v24 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && (v49 & 1) == 0)
        {
          while (1)
          {
            v50 = std::istream::peek();
            v51 = v50 <= 0x7F ? *(_DWORD *)(v25 + 4 * v50 + 60) & 0x4000 : __maskrune(v50, 0x4000uLL);
            v52 = *(_DWORD *)((char *)v24 + *(_QWORD *)(*a2 - 24));
            if (!v51)
              break;
            if (!v52)
              std::istream::get();
          }
          if ((v52 & 2) != 0)
            return 0;
          sub_2394988CC((uint64_t)&v79);
          if (sub_239596128(a2))
          {
            v53 = (char *)v80 + *(_QWORD *)(v80[0] - 24);
            if ((v53[32] & 5) == 0)
            {
              (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v53 + 5)
                                                                                                  + 32))(&v84, *((_QWORD *)v53 + 5), 0, 1, 16);
              if (v85 >= 1)
              {
                v83[0] = (uint64_t)&v84;
                v83[1] = 0;
                sub_2395DF82C(v83, &v79, 0);
                v86 = v84;
                v54 = (std::string **)*a1;
                v56 = (std::string *)(*a1)[1];
                v55 = (unint64_t)(*a1)[2];
                if ((unint64_t)v56 >= v55)
                {
                  v58 = *v54;
                  v59 = 0xAAAAAAAAAAAAAAABLL * (((char *)v56 - (char *)*v54) >> 3);
                  v60 = v59 + 1;
                  v61 = 0xAAAAAAAAAAAAAAALL;
                  if (v59 + 1 > 0xAAAAAAAAAAAAAAALL)
                    sub_2394189F8();
                  v62 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v55 - (_QWORD)v58) >> 3);
                  if (2 * v62 > v60)
                    v60 = 2 * v62;
                  if (v62 < 0x555555555555555)
                    v61 = v60;
                  if (v61)
                  {
                    if (v61 > 0xAAAAAAAAAAAAAAALL)
                      sub_239418A80();
                    v73 = v61;
                    v63 = (char *)operator new(24 * v61);
                    v61 = v73;
                  }
                  else
                  {
                    v63 = 0;
                  }
                  v64 = (std::string *)&v63[24 * v59];
                  *v64 = v86;
                  v65 = v64;
                  if (v56 != v58)
                  {
                    do
                    {
                      v66 = *(_OWORD *)&v56[-1].__r_.__value_.__l.__data_;
                      v65[-1].__r_.__value_.__r.__words[2] = v56[-1].__r_.__value_.__r.__words[2];
                      *(_OWORD *)&v65[-1].__r_.__value_.__l.__data_ = v66;
                      --v65;
                      --v56;
                    }
                    while (v56 != v58);
                    v56 = *v54;
                  }
                  v57 = v64 + 1;
                  *v54 = v65;
                  v54[1] = v64 + 1;
                  v54[2] = (std::string *)&v63[24 * v61];
                  if (v56)
                    operator delete(v56);
                }
                else
                {
                  *v56 = v86;
                  v57 = v56 + 1;
                }
                v54[1] = v57;
              }
            }
            for (i = std::istream::peek(); ; i = std::istream::peek())
            {
              v68 = i << 24;
              if (i << 24 == 738197504)
                goto LABEL_104;
              if (v68 == 1560281088)
                break;
              if (v68 <= 0x7F000000)
              {
                if ((*(_DWORD *)(v25 + 4 * (char)i + 60) & 0x4000) == 0)
                  goto LABEL_103;
              }
              else if (!__maskrune((char)i, 0x4000uLL))
              {
                goto LABEL_103;
              }
              if ((*((_BYTE *)v24 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
              {
LABEL_103:
                if (v68 != 738197504)
                  goto LABEL_105;
LABEL_104:
                std::istream::get();
                v49 = 0;
                goto LABEL_107;
              }
              std::istream::get();
            }
            v49 = 1;
LABEL_107:
            v69 = 1;
          }
          else
          {
LABEL_105:
            v69 = 0;
            v49 = 0;
          }
          *(_QWORD *)&v79 = v77;
          *(_QWORD *)((char *)&v80[-2] + *(_QWORD *)(v77 - 24)) = v76;
          v80[0] = v75;
          v80[1] = v74;
          if (v81 < 0)
            operator delete((void *)v80[9]);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x23B83E250](&v82);
          result = 0;
          if ((v69 & 1) == 0)
            return result;
        }
        while (1)
        {
          v70 = std::istream::peek();
          v71 = v70 <= 0x7F ? *(_DWORD *)(v25 + 4 * v70 + 60) & 0x4000 : __maskrune(v70, 0x4000uLL);
          v72 = *(_QWORD *)(*a2 - 24);
          if (!v71)
            break;
          if (!*(_DWORD *)((char *)v24 + v72))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v72 + 32) & 2) == 0 && std::istream::get() == 93)
          return 1;
      }
    }
  }
  return 0;
}

void sub_239AF5268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *__p,uint64_t a58,int a59,__int16 a60,char a61,char a62)
{
  if (a62 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AF52F8(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) && std::istream::get() == 223)
  {
    std::istream::read();
    std::istream::read();
    std::istream::read();
    std::istream::read();
  }
  return 0;
}

void sub_239AF5554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AF5574(__int128 *a1, __int128 *a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  __int128 v9;
  _QWORD *exception;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  std::ostream::put();
  if (HIDWORD(a4))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = MEMORY[0x24BEDB8F0] + 16;
    __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
  }
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  for (result = std::ostream::write(); a1 != a2; a1 = (__int128 *)((char *)a1 + 24))
  {
    v9 = *a1;
    v12 = *((_QWORD *)a1 + 2);
    v11 = v9;
    result = sub_2395DA64C((uint64_t)&v11, (uint64_t)&v13, a3, 3uLL);
  }
  return result;
}

void sub_239AF5678(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF569C(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *__p[2];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  void *v21[2];
  char v22;
  int v23;
  int v24;

  v4 = *(uint64_t **)(a1 + 8);
  if (a3)
  {
    v5 = v4[1];
    v6 = 0x8E38E38E38E38E39 * ((v5 - *v4) >> 3);
    if (HIDWORD(v6))
    {
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)__p, "type");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)__p, "vector_chunks");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      BYTE7(v17) = 7;
      strcpy((char *)__p, "content");
      std::ostream::put();
      LODWORD(v21[0]) = 7;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      v7 = v4[1] - *v4;
      if (v7)
      {
        v8 = 0;
        v9 = 0x8E38E38E38E38E39 * (v7 >> 3);
        do
        {
          v17 = (unint64_t)v4;
          __p[0] = v8;
          v8 += 0x7FFFFFFF;
          if (v9 >= (unint64_t)v8)
            v9 = (unint64_t)v8;
          __p[1] = (void *)v9;
          std::ostream::put();
          v23 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v22 = 5;
          strcpy((char *)v21, "start");
          std::ostream::put();
          v24 = 5;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v22 < 0)
            operator delete(v21[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v22 = 3;
          LODWORD(v21[0]) = 6581861;
          std::ostream::put();
          v24 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v22 < 0)
            operator delete(v21[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v22 = 7;
          strcpy((char *)v21, "content");
          std::ostream::put();
          v24 = 7;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v22 < 0)
            operator delete(v21[0]);
          sub_239AF7074(*v4 + 72 * (uint64_t)__p[0], *v4 + 72 * (uint64_t)__p[1], (uint64_t)a2, (char *)__p[1] - (char *)__p[0]);
          v9 = 0x8E38E38E38E38E39 * ((v4[1] - *v4) >> 3);
        }
        while ((unint64_t)v8 < v9);
      }
    }
    else
    {
      sub_239AF7074(*v4, v5, (uint64_t)a2, v6);
    }
  }
  else
  {
    v11 = *v4;
    v10 = v4[1];
    std::ostream::put();
    if (v11 != v10)
    {
      while (1)
      {
        v11 += 72;
        *(_OWORD *)__p = *(_OWORD *)(v11 - 72);
        v12 = *(_OWORD *)(v11 - 56);
        v13 = *(_OWORD *)(v11 - 40);
        v14 = *(_OWORD *)(v11 - 24);
        v20 = *(_QWORD *)(v11 - 8);
        v18 = v13;
        v19 = v14;
        v17 = v12;
        sub_2395A34D0((uint64_t)__p, (uint64_t)v21, a2);
        if (v11 == v10)
          break;
        std::ostream::put();
      }
    }
    std::ostream::put();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AF5EB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239AF5EF4(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  void **v12;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 8);
  v12 = (void **)v4;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)v4;
  if (!a3)
    goto LABEL_10;
  v5 = std::istream::peek();
  v6 = v5;
  if ((v5 - 196) > 2)
  {
    if ((v5 - 220) > 3 || v5 == 222)
      return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
    a2 = v3;
    a3 = 1;
LABEL_10:
    sub_239AF601C(&v12, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  std::istream::get();
  v7 = sub_2396162D4((uint64_t)v3, v6) / 0x48uLL;
  v8 = 0x8E38E38E38E38E39 * ((uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 3);
  v9 = v7 >= v8;
  v10 = v7 - v8;
  if (v10 != 0 && v9)
  {
    sub_239454B1C((void **)v4, v10);
  }
  else if (!v9)
  {
    *(_QWORD *)(v4 + 8) = *(_QWORD *)v4 + 72 * v7;
  }
  std::istream::read();
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

uint64_t sub_239AF601C(void ***a1, _QWORD *a2, int a3)
{
  int v4;
  unsigned int v5;
  char *v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char *v11;
  char *v12;
  void **v13;
  unint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void **v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  __int128 v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t result;
  char v59;
  unsigned int v60;
  int v61;
  int v62;
  char *v63;
  void **v64;
  unint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  __int128 v75;
  __int128 v76;
  char *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  int i;
  unsigned int v82;
  char v83;
  unsigned int v84;
  int v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v93;
  _OWORD v94[3];
  uint64_t v95;
  void *__p;
  char v97;
  uint64_t v98;
  uint64_t v99[2];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  _OWORD v105[2];
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v110 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v4 = std::istream::get();
    if ((v4 - 196) <= 2)
    {
      v5 = sub_2396162D4((uint64_t)a2, v4);
      v93 = 0uLL;
      *(_QWORD *)&v94[0] = 0;
      sub_239454B1C((void **)&v93, v5);
      std::istream::read();
      v6 = (char *)*((_QWORD *)&v93 + 1);
      if (*((_QWORD *)&v93 + 1) != (_QWORD)v93)
      {
        v7 = 0;
        v6 = (char *)v93;
        do
        {
          v12 = &v6[72 * v7];
          v13 = *a1;
          v15 = (char *)(*a1)[1];
          v14 = (unint64_t)(*a1)[2];
          if ((unint64_t)v15 < v14)
          {
            *(_OWORD *)v15 = *(_OWORD *)v12;
            v8 = *((_OWORD *)v12 + 1);
            v9 = *((_OWORD *)v12 + 2);
            v10 = *((_OWORD *)v12 + 3);
            *((_QWORD *)v15 + 8) = *((_QWORD *)v12 + 8);
            *((_OWORD *)v15 + 2) = v9;
            *((_OWORD *)v15 + 3) = v10;
            *((_OWORD *)v15 + 1) = v8;
            v11 = v15 + 72;
          }
          else
          {
            v16 = (char *)*v13;
            v17 = 0x8E38E38E38E38E39 * ((v15 - (_BYTE *)*v13) >> 3);
            v18 = v17 + 1;
            if (v17 + 1 > 0x38E38E38E38E38ELL)
              sub_2394189F8();
            v19 = 0x8E38E38E38E38E39 * ((uint64_t)(v14 - (_QWORD)v16) >> 3);
            if (2 * v19 > v18)
              v18 = 2 * v19;
            if (v19 >= 0x1C71C71C71C71C7)
              v20 = 0x38E38E38E38E38ELL;
            else
              v20 = v18;
            if (v20)
            {
              if (v20 > 0x38E38E38E38E38ELL)
                sub_239418A80();
              v21 = (char *)operator new(72 * v20);
            }
            else
            {
              v21 = 0;
            }
            v22 = &v21[72 * v17];
            *(_OWORD *)v22 = *(_OWORD *)v12;
            v23 = *((_OWORD *)v12 + 1);
            v24 = *((_OWORD *)v12 + 2);
            v25 = *((_OWORD *)v12 + 3);
            *((_QWORD *)v22 + 8) = *((_QWORD *)v12 + 8);
            *((_OWORD *)v22 + 2) = v24;
            *((_OWORD *)v22 + 3) = v25;
            *((_OWORD *)v22 + 1) = v23;
            v26 = v22;
            if (v15 != v16)
            {
              do
              {
                *(_OWORD *)(v26 - 72) = *(_OWORD *)(v15 - 72);
                v27 = *(_OWORD *)(v15 - 56);
                v28 = *(_OWORD *)(v15 - 40);
                v29 = *(_OWORD *)(v15 - 24);
                *((_QWORD *)v26 - 1) = *((_QWORD *)v15 - 1);
                *(_OWORD *)(v26 - 24) = v29;
                *(_OWORD *)(v26 - 40) = v28;
                *(_OWORD *)(v26 - 56) = v27;
                v26 -= 72;
                v15 -= 72;
              }
              while (v15 != v16);
              v15 = (char *)*v13;
            }
            v11 = v22 + 72;
            *v13 = v26;
            v13[1] = v22 + 72;
            v13[2] = &v21[72 * v20];
            if (v15)
              operator delete(v15);
          }
          v13[1] = v11;
          ++v7;
          v6 = (char *)v93;
        }
        while (v7 < 0x8E38E38E38E38E39 * ((uint64_t)(*((_QWORD *)&v93 + 1) - v93) >> 3));
      }
      if (v6)
      {
        *((_QWORD *)&v93 + 1) = v6;
        operator delete(v6);
      }
      return 1;
    }
    if ((v4 & 0xFFFFFFFE) == 0xDC)
    {
      v38 = sub_2396162D4((uint64_t)a2, v4);
      if (v38)
      {
        v39 = 0;
        v40 = v38;
        do
        {
          *(_QWORD *)&v105[0] = &v93;
          *((_QWORD *)&v105[0] + 1) = 0;
          sub_2395DEEDC((uint64_t *)v105, a2, 1);
          v106 = v94[1];
          v107 = v94[2];
          v108 = v95;
          v105[0] = v93;
          v105[1] = v94[0];
          v42 = *a1;
          v44 = (char *)(*a1)[1];
          v43 = (unint64_t)(*a1)[2];
          if ((unint64_t)v44 < v43)
          {
            *((_OWORD *)v44 + 1) = v105[1];
            *((_OWORD *)v44 + 2) = v106;
            *((_OWORD *)v44 + 3) = v107;
            *((_QWORD *)v44 + 8) = v108;
            *(_OWORD *)v44 = v105[0];
            v41 = v44 + 72;
          }
          else
          {
            v45 = (char *)*v42;
            v46 = 0x8E38E38E38E38E39 * ((v44 - (_BYTE *)*v42) >> 3);
            v47 = v46 + 1;
            if (v46 + 1 > 0x38E38E38E38E38ELL)
              sub_2394189F8();
            v48 = 0x8E38E38E38E38E39 * ((uint64_t)(v43 - (_QWORD)v45) >> 3);
            if (2 * v48 > v47)
              v47 = 2 * v48;
            if (v48 >= 0x1C71C71C71C71C7)
              v49 = 0x38E38E38E38E38ELL;
            else
              v49 = v47;
            if (v49)
            {
              if (v49 > 0x38E38E38E38E38ELL)
                sub_239418A80();
              v50 = (char *)operator new(72 * v49);
            }
            else
            {
              v50 = 0;
            }
            v51 = &v50[72 * v46];
            v52 = v107;
            *((_OWORD *)v51 + 2) = v106;
            *((_OWORD *)v51 + 3) = v52;
            *((_QWORD *)v51 + 8) = v108;
            v53 = v105[1];
            *(_OWORD *)v51 = v105[0];
            *((_OWORD *)v51 + 1) = v53;
            v54 = v51;
            if (v44 != v45)
            {
              do
              {
                *(_OWORD *)(v54 - 72) = *(_OWORD *)(v44 - 72);
                v55 = *(_OWORD *)(v44 - 56);
                v56 = *(_OWORD *)(v44 - 40);
                v57 = *(_OWORD *)(v44 - 24);
                *((_QWORD *)v54 - 1) = *((_QWORD *)v44 - 1);
                *(_OWORD *)(v54 - 24) = v57;
                *(_OWORD *)(v54 - 40) = v56;
                *(_OWORD *)(v54 - 56) = v55;
                v54 -= 72;
                v44 -= 72;
              }
              while (v44 != v45);
              v44 = (char *)*v42;
            }
            v41 = v51 + 72;
            *v42 = v54;
            v42[1] = v51 + 72;
            v42[2] = &v50[72 * v49];
            if (v44)
              operator delete(v44);
          }
          v42[1] = v41;
          ++v39;
        }
        while (v39 != v40);
      }
      return 1;
    }
    if (v4 == 223)
    {
      LODWORD(v99[0]) = 0;
      memset(v105, 0, 24);
      std::istream::read();
      std::istream::read();
      std::istream::read();
      std::istream::read();
    }
  }
  else
  {
    v30 = a2 + 4;
    v31 = MEMORY[0x24BDAC740];
    while (1)
    {
      v32 = std::istream::peek();
      v33 = v32 <= 0x7F ? *(_DWORD *)(v31 + 4 * v32 + 60) & 0x4000 : __maskrune(v32, 0x4000uLL);
      v34 = *(_QWORD *)(*a2 - 24);
      if (!v33)
        break;
      if (!*(_DWORD *)((char *)v30 + v34))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v34 + 32) & 2) != 0)
      return 1;
    if (std::istream::get() == 91)
    {
      while (1)
      {
        v35 = std::istream::peek();
        v36 = v35 <= 0x7F ? *(_DWORD *)(v31 + 4 * v35 + 60) & 0x4000 : __maskrune(v35, 0x4000uLL);
        v37 = *(_QWORD *)(*a2 - 24);
        if (!v36)
          break;
        if (!*(_DWORD *)((char *)v30 + v37))
          std::istream::get();
      }
      if ((*((_BYTE *)a2 + v37 + 32) & 2) == 0)
      {
        v59 = 0;
        v91 = *MEMORY[0x24BEDB7F0];
        v89 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v90 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
        v88 = MEMORY[0x24BEDB848] + 16;
        while ((*((_BYTE *)v30 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && (v59 & 1) == 0)
        {
          while (1)
          {
            v60 = std::istream::peek();
            v61 = v60 <= 0x7F ? *(_DWORD *)(v31 + 4 * v60 + 60) & 0x4000 : __maskrune(v60, 0x4000uLL);
            v62 = *(_DWORD *)((char *)v30 + *(_QWORD *)(*a2 - 24));
            if (!v61)
              break;
            if (!v62)
              std::istream::get();
          }
          if ((v62 & 2) != 0)
            return 0;
          sub_2394988CC((uint64_t)&v93);
          if (sub_239596128(a2))
          {
            v63 = (char *)v94 + *(_QWORD *)(*(_QWORD *)&v94[0] - 24);
            if ((v63[32] & 5) == 0)
            {
              (*(void (**)(_OWORD *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v63 + 5)
                                                                                             + 32))(v105, *((_QWORD *)v63 + 5), 0, 1, 16);
              if (v109 >= 1)
              {
                v99[0] = (uint64_t)v105;
                v99[1] = 0;
                sub_2395DEEDC(v99, &v93, 0);
                v102 = v106;
                v103 = v107;
                v104 = v108;
                v100 = v105[0];
                v101 = v105[1];
                v64 = *a1;
                v66 = (char *)(*a1)[1];
                v65 = (unint64_t)(*a1)[2];
                if ((unint64_t)v66 >= v65)
                {
                  v68 = (char *)*v64;
                  v69 = 0x8E38E38E38E38E39 * ((v66 - (_BYTE *)*v64) >> 3);
                  v70 = v69 + 1;
                  v71 = 0x38E38E38E38E38ELL;
                  if (v69 + 1 > 0x38E38E38E38E38ELL)
                    sub_2394189F8();
                  v72 = 0x8E38E38E38E38E39 * ((uint64_t)(v65 - (_QWORD)v68) >> 3);
                  if (2 * v72 > v70)
                    v70 = 2 * v72;
                  if (v72 < 0x1C71C71C71C71C7)
                    v71 = v70;
                  if (v71)
                  {
                    if (v71 > 0x38E38E38E38E38ELL)
                      sub_239418A80();
                    v87 = v71;
                    v73 = (char *)operator new(72 * v71);
                    v71 = v87;
                  }
                  else
                  {
                    v73 = 0;
                  }
                  v74 = &v73[72 * v69];
                  v75 = v103;
                  *((_OWORD *)v74 + 2) = v102;
                  *((_OWORD *)v74 + 3) = v75;
                  *((_QWORD *)v74 + 8) = v104;
                  v76 = v101;
                  *(_OWORD *)v74 = v100;
                  *((_OWORD *)v74 + 1) = v76;
                  v77 = v74;
                  if (v66 != v68)
                  {
                    do
                    {
                      *(_OWORD *)(v77 - 72) = *(_OWORD *)(v66 - 72);
                      v78 = *(_OWORD *)(v66 - 56);
                      v79 = *(_OWORD *)(v66 - 40);
                      v80 = *(_OWORD *)(v66 - 24);
                      *((_QWORD *)v77 - 1) = *((_QWORD *)v66 - 1);
                      *(_OWORD *)(v77 - 24) = v80;
                      *(_OWORD *)(v77 - 40) = v79;
                      *(_OWORD *)(v77 - 56) = v78;
                      v77 -= 72;
                      v66 -= 72;
                    }
                    while (v66 != v68);
                    v66 = (char *)*v64;
                  }
                  v67 = v74 + 72;
                  *v64 = v77;
                  v64[1] = v74 + 72;
                  v64[2] = &v73[72 * v71];
                  if (v66)
                    operator delete(v66);
                }
                else
                {
                  *((_OWORD *)v66 + 1) = v101;
                  *((_OWORD *)v66 + 2) = v102;
                  *((_OWORD *)v66 + 3) = v103;
                  *((_QWORD *)v66 + 8) = v104;
                  *(_OWORD *)v66 = v100;
                  v67 = v66 + 72;
                }
                v64[1] = v67;
              }
            }
            for (i = std::istream::peek(); ; i = std::istream::peek())
            {
              v82 = i << 24;
              if (i << 24 == 738197504)
                goto LABEL_104;
              if (v82 == 1560281088)
                break;
              if (v82 <= 0x7F000000)
              {
                if ((*(_DWORD *)(v31 + 4 * (char)i + 60) & 0x4000) == 0)
                  goto LABEL_103;
              }
              else if (!__maskrune((char)i, 0x4000uLL))
              {
                goto LABEL_103;
              }
              if ((*((_BYTE *)v30 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
              {
LABEL_103:
                if (v82 != 738197504)
                  goto LABEL_105;
LABEL_104:
                std::istream::get();
                v59 = 0;
                goto LABEL_107;
              }
              std::istream::get();
            }
            v59 = 1;
LABEL_107:
            v83 = 1;
          }
          else
          {
LABEL_105:
            v83 = 0;
            v59 = 0;
          }
          *(_QWORD *)&v93 = v91;
          *(_QWORD *)((char *)&v94[-1] + *(_QWORD *)(v91 - 24)) = v90;
          *(_QWORD *)&v94[0] = v89;
          *((_QWORD *)&v94[0] + 1) = v88;
          if (v97 < 0)
            operator delete(__p);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x23B83E250](&v98);
          result = 0;
          if ((v83 & 1) == 0)
            return result;
        }
        while (1)
        {
          v84 = std::istream::peek();
          v85 = v84 <= 0x7F ? *(_DWORD *)(v31 + 4 * v84 + 60) & 0x4000 : __maskrune(v84, 0x4000uLL);
          v86 = *(_QWORD *)(*a2 - 24);
          if (!v85)
            break;
          if (!*(_DWORD *)((char *)v30 + v86))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v86 + 32) & 2) == 0 && std::istream::get() == 93)
          return 1;
      }
    }
  }
  return 0;
}

void sub_239AF6D68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *__p,uint64_t a58)
{
  uint64_t v58;

  if (*(char *)(v58 - 217) < 0)
  {
    operator delete(*(void **)(v58 - 240));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AF6DF8(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) && std::istream::get() == 223)
  {
    std::istream::read();
    std::istream::read();
    std::istream::read();
    std::istream::read();
  }
  return 0;
}

void sub_239AF7054(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AF7074(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *exception;
  _OWORD v13[4];
  uint64_t v14;
  uint64_t v15;

  std::ostream::put();
  if (HIDWORD(a4))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = MEMORY[0x24BEDB8F0] + 16;
    __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
  }
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  for (result = std::ostream::write(); a1 != a2; a1 += 72)
  {
    v13[0] = *(_OWORD *)a1;
    v9 = *(_OWORD *)(a1 + 16);
    v10 = *(_OWORD *)(a1 + 32);
    v11 = *(_OWORD *)(a1 + 48);
    v14 = *(_QWORD *)(a1 + 64);
    v13[2] = v10;
    v13[3] = v11;
    v13[1] = v9;
    result = sub_2395DA64C((uint64_t)v13, (uint64_t)&v15, a3, 9uLL);
  }
  return result;
}

void sub_239AF7188(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF71AC(uint64_t a1, _QWORD *a2, int a3)
{
  sub_239A91BD0(*(_QWORD **)(a1 + 8), (uint64_t)a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

BOOL sub_239AF71E8(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  _QWORD *v12;

  v3 = a2;
  v4 = *(_QWORD **)(a1 + 8);
  v12 = v4;
  v4[1] = *v4;
  if (!a3)
    goto LABEL_10;
  v5 = std::istream::peek();
  v6 = v5;
  if ((v5 - 196) > 2)
  {
    if ((v5 - 220) > 3 || v5 == 222)
      return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
    a2 = v3;
    a3 = 1;
LABEL_10:
    sub_239AF72EC((uint64_t *)&v12, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  std::istream::get();
  v7 = (unint64_t)sub_2396162D4((uint64_t)v3, v6) >> 3;
  v8 = (uint64_t)(v4[1] - *v4) >> 3;
  v9 = v7 >= v8;
  v10 = v7 - v8;
  if (v10 != 0 && v9)
  {
    sub_23946DAD4((uint64_t)v4, v10);
  }
  else if (!v9)
  {
    v4[1] = *v4 + 8 * v7;
  }
  std::istream::read();
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AF72EC(uint64_t *a1, _QWORD *a2, int a3)
{
  int v4;
  unsigned int v5;
  _QWORD *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _BYTE *v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  _QWORD *v58;
  unsigned int v59;
  int v60;
  int v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _BYTE *v74;
  _QWORD *v75;
  _QWORD *v76;
  unint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  char *v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  int i;
  unsigned int v85;
  char v86;
  unsigned int v87;
  int v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD v99[11];
  char v100;
  _QWORD v101[23];
  std::string v102;
  uint64_t v103;
  uint64_t v104;

  v104 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v4 = std::istream::get();
    if ((v4 - 196) > 2)
    {
      if ((v4 & 0xFFFFFFFE) == 0xDC)
      {
        v35 = sub_2396162D4((uint64_t)a2, v4);
        if (v35)
        {
          v36 = 0;
          v37 = v35;
          do
          {
            v97 = 0;
            sub_23959903C((uint64_t)&v97, (uint64_t)a2, 1);
            v39 = *a1;
            v41 = *(char **)(*a1 + 8);
            v40 = *(_QWORD *)(*a1 + 16);
            if ((unint64_t)v41 < v40)
            {
              *(_QWORD *)v41 = v97;
              v38 = v41 + 8;
            }
            else
            {
              v42 = *(char **)v39;
              v43 = (uint64_t)&v41[-*(_QWORD *)v39];
              v44 = v43 >> 3;
              v45 = (v43 >> 3) + 1;
              if (v45 >> 61)
                sub_2394189F8();
              v46 = v40 - (_QWORD)v42;
              if (v46 >> 2 > v45)
                v45 = v46 >> 2;
              if ((unint64_t)v46 >= 0x7FFFFFFFFFFFFFF8)
                v47 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v47 = v45;
              if (v47)
              {
                if (v47 >> 61)
                  sub_239418A80();
                v48 = operator new(8 * v47);
              }
              else
              {
                v48 = 0;
              }
              v49 = &v48[8 * v44];
              *v49 = v97;
              v38 = v49 + 1;
              if (v41 != v42)
              {
                v50 = v41 - 8 - v42;
                if (v50 < 0x58)
                  goto LABEL_144;
                if ((unint64_t)(v41 - &v48[v43]) < 0x20)
                  goto LABEL_144;
                v51 = (v50 >> 3) + 1;
                v52 = &v48[8 * v44 - 16];
                v53 = v41 - 16;
                v54 = v51 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  v55 = *(_OWORD *)v53;
                  *(v52 - 1) = *((_OWORD *)v53 - 1);
                  *v52 = v55;
                  v52 -= 2;
                  v53 -= 32;
                  v54 -= 4;
                }
                while (v54);
                v49 -= v51 & 0x3FFFFFFFFFFFFFFCLL;
                v41 -= 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
                if (v51 != (v51 & 0x3FFFFFFFFFFFFFFCLL))
                {
LABEL_144:
                  do
                  {
                    v56 = *((_QWORD *)v41 - 1);
                    v41 -= 8;
                    *--v49 = v56;
                  }
                  while (v41 != v42);
                }
              }
              *(_QWORD *)v39 = v49;
              *(_QWORD *)(v39 + 8) = v38;
              *(_QWORD *)(v39 + 16) = &v48[8 * v47];
              if (v42)
                operator delete(v42);
            }
            *(_QWORD *)(v39 + 8) = v38;
            ++v36;
          }
          while (v36 != v37);
        }
      }
      else if (v4 == 223)
      {
        v101[22] = 0;
        memset(&v102, 0, sizeof(v102));
        std::istream::read();
        std::istream::read();
        std::istream::read();
        std::istream::read();
      }
    }
    else
    {
      v5 = sub_2396162D4((uint64_t)a2, v4);
      v97 = 0;
      v98 = 0;
      v99[0] = 0;
      sub_23946DAD4((uint64_t)&v97, v5);
      std::istream::read();
      v6 = v98;
      if (v98 != v97)
      {
        v7 = 0;
        v6 = v97;
        do
        {
          v9 = *a1;
          v11 = *(char **)(*a1 + 8);
          v10 = *(_QWORD *)(*a1 + 16);
          if ((unint64_t)v11 < v10)
          {
            *(_QWORD *)v11 = v6[v7];
            v8 = v11 + 8;
          }
          else
          {
            v12 = *(char **)v9;
            v13 = (uint64_t)&v11[-*(_QWORD *)v9];
            v14 = v13 >> 3;
            v15 = (v13 >> 3) + 1;
            if (v15 >> 61)
              sub_2394189F8();
            v16 = v10 - (_QWORD)v12;
            if (v16 >> 2 > v15)
              v15 = v16 >> 2;
            if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8)
              v17 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v17 = v15;
            if (v17)
            {
              if (v17 >> 61)
                sub_239418A80();
              v18 = operator new(8 * v17);
            }
            else
            {
              v18 = 0;
            }
            v19 = &v18[8 * v14];
            *v19 = v6[v7];
            v8 = v19 + 1;
            if (v11 != v12)
            {
              v20 = v11 - 8 - v12;
              if (v20 < 0x58)
                goto LABEL_145;
              if ((unint64_t)(v11 - &v18[v13]) < 0x20)
                goto LABEL_145;
              v21 = (v20 >> 3) + 1;
              v22 = &v18[8 * v14 - 16];
              v23 = v11 - 16;
              v24 = v21 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v25 = *(_OWORD *)v23;
                *(v22 - 1) = *((_OWORD *)v23 - 1);
                *v22 = v25;
                v22 -= 2;
                v23 -= 32;
                v24 -= 4;
              }
              while (v24);
              v19 -= v21 & 0x3FFFFFFFFFFFFFFCLL;
              v11 -= 8 * (v21 & 0x3FFFFFFFFFFFFFFCLL);
              if (v21 != (v21 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_145:
                do
                {
                  v26 = *((_QWORD *)v11 - 1);
                  v11 -= 8;
                  *--v19 = v26;
                }
                while (v11 != v12);
              }
            }
            *(_QWORD *)v9 = v19;
            *(_QWORD *)(v9 + 8) = v8;
            *(_QWORD *)(v9 + 16) = &v18[8 * v17];
            if (v12)
              operator delete(v12);
          }
          *(_QWORD *)(v9 + 8) = v8;
          ++v7;
          v6 = v97;
        }
        while (v7 < v98 - v97);
      }
      if (v6)
      {
        v98 = v6;
        operator delete(v6);
      }
    }
    return;
  }
  v27 = a2 + 4;
  v28 = MEMORY[0x24BDAC740];
  while (1)
  {
    v29 = std::istream::peek();
    v30 = v29 <= 0x7F ? *(_DWORD *)(v28 + 4 * v29 + 60) & 0x4000 : __maskrune(v29, 0x4000uLL);
    v31 = *(_QWORD *)(*a2 - 24);
    if (!v30)
      break;
    if (!*(_DWORD *)((char *)v27 + v31))
      std::istream::get();
  }
  if ((*((_BYTE *)a2 + v31 + 32) & 2) == 0 && std::istream::get() == 91)
  {
    while (1)
    {
      v32 = std::istream::peek();
      v33 = v32 <= 0x7F ? *(_DWORD *)(v28 + 4 * v32 + 60) & 0x4000 : __maskrune(v32, 0x4000uLL);
      v34 = *(_QWORD *)(*a2 - 24);
      if (!v33)
        break;
      if (!*(_DWORD *)((char *)v27 + v34))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v34 + 32) & 2) == 0)
    {
      v57 = 0;
      v58 = (_QWORD *)*MEMORY[0x24BEDB7F0];
      v94 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      v95 = *(_QWORD **)(MEMORY[0x24BEDB7F0] + 64);
      v93 = MEMORY[0x24BEDB848] + 16;
      while (1)
      {
        if ((*((_BYTE *)v27 + *(_QWORD *)(*a2 - 24)) & 2) != 0 || (v57 & 1) != 0)
        {
          while (1)
          {
            v87 = std::istream::peek();
            v88 = v87 <= 0x7F ? *(_DWORD *)(v28 + 4 * v87 + 60) & 0x4000 : __maskrune(v87, 0x4000uLL);
            v89 = *(_QWORD *)(*a2 - 24);
            if (!v88)
              break;
            if (!*(_DWORD *)((char *)v27 + v89))
              std::istream::get();
          }
          if ((*((_BYTE *)a2 + v89 + 32) & 2) == 0)
            std::istream::get();
          return;
        }
        while (1)
        {
          v59 = std::istream::peek();
          v60 = v59 <= 0x7F ? *(_DWORD *)(v28 + 4 * v59 + 60) & 0x4000 : __maskrune(v59, 0x4000uLL);
          v61 = *(_DWORD *)((char *)v27 + *(_QWORD *)(*a2 - 24));
          if (!v60)
            break;
          if (!v61)
            std::istream::get();
        }
        if ((v61 & 2) != 0)
          return;
        sub_2394988CC((uint64_t)&v97);
        v101[19] = v99;
        if (sub_239596128(a2))
          break;
LABEL_120:
        v86 = 0;
        v57 = 0;
LABEL_123:
        v97 = v58;
        *(_QWORD **)((char *)&v97 + *(v58 - 3)) = v95;
        v99[0] = v94;
        v99[1] = v93;
        if (v100 < 0)
          operator delete((void *)v99[9]);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x23B83E250](v101);
        if ((v86 & 1) == 0)
          return;
      }
      v62 = (char *)v99 + *(_QWORD *)(v99[0] - 24);
      if ((v62[32] & 5) != 0
        || ((*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v62 + 5)
                                                                                                + 32))(&v102, *((_QWORD *)v62 + 5), 0, 1, 16), v103 < 1))
      {
LABEL_109:
        for (i = std::istream::peek(); ; i = std::istream::peek())
        {
          v85 = i << 24;
          if (i << 24 == 738197504)
            goto LABEL_119;
          if (v85 == 1560281088)
            break;
          if (v85 <= 0x7F000000)
          {
            if ((*(_DWORD *)(v28 + 4 * (char)i + 60) & 0x4000) == 0)
              goto LABEL_118;
          }
          else if (!__maskrune((char)i, 0x4000uLL))
          {
            goto LABEL_118;
          }
          if ((*((_BYTE *)v27 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
          {
LABEL_118:
            if (v85 != 738197504)
              goto LABEL_120;
LABEL_119:
            std::istream::get();
            v57 = 0;
            goto LABEL_122;
          }
          std::istream::get();
        }
        v57 = 1;
LABEL_122:
        v86 = 1;
        goto LABEL_123;
      }
      v102.__r_.__value_.__r.__words[0] = 0;
      MEMORY[0x23B83DD4C](&v97, &v102);
      v63 = *a1;
      v65 = *(char **)(*a1 + 8);
      v64 = *(_QWORD *)(*a1 + 16);
      if ((unint64_t)v65 < v64)
      {
        *(_QWORD *)v65 = v102.__r_.__value_.__r.__words[0];
        v66 = v65 + 8;
        goto LABEL_107;
      }
      v92 = *a1;
      v67 = *(char **)v63;
      v68 = (uint64_t)&v65[-*(_QWORD *)v63];
      v69 = v68 >> 3;
      v70 = (v68 >> 3) + 1;
      if (v70 >> 61)
        sub_2394189F8();
      v71 = v64 - (_QWORD)v67;
      if (v71 >> 2 > v70)
        v70 = v71 >> 2;
      if ((unint64_t)v71 >= 0x7FFFFFFFFFFFFFF8)
        v72 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v72 = v70;
      if (v72)
      {
        v90 = &v65[-*(_QWORD *)v63];
        v91 = v68 >> 3;
        if (v72 >> 61)
          sub_239418A80();
        v73 = v72;
        v74 = operator new(8 * v72);
        v72 = v73;
        v68 = (uint64_t)v90;
        v69 = v91;
      }
      else
      {
        v74 = 0;
      }
      v75 = &v74[8 * v69];
      *v75 = v102.__r_.__value_.__r.__words[0];
      v76 = v75 + 1;
      if (v65 == v67)
      {
        v63 = v92;
      }
      else
      {
        v77 = v65 - 8 - v67;
        if (v77 >= 0x58)
        {
          v63 = v92;
          if ((unint64_t)(v65 - &v74[v68]) >= 0x20)
          {
            v78 = (v77 >> 3) + 1;
            v79 = &v74[8 * v69 - 16];
            v80 = v65 - 16;
            v81 = v78 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v82 = *(_OWORD *)v80;
              *(v79 - 1) = *((_OWORD *)v80 - 1);
              *v79 = v82;
              v79 -= 2;
              v80 -= 32;
              v81 -= 4;
            }
            while (v81);
            v75 -= v78 & 0x3FFFFFFFFFFFFFFCLL;
            v65 -= 8 * (v78 & 0x3FFFFFFFFFFFFFFCLL);
            if (v78 == (v78 & 0x3FFFFFFFFFFFFFFCLL))
              goto LABEL_105;
          }
        }
        else
        {
          v63 = v92;
        }
        do
        {
          v83 = *((_QWORD *)v65 - 1);
          v65 -= 8;
          *--v75 = v83;
        }
        while (v65 != v67);
      }
LABEL_105:
      *(_QWORD *)v63 = v75;
      *(_QWORD *)(v63 + 8) = v76;
      *(_QWORD *)(v63 + 16) = &v74[8 * v72];
      if (!v67)
      {
LABEL_108:
        *(_QWORD *)(v63 + 8) = v76;
        goto LABEL_109;
      }
      v66 = v76;
      operator delete(v67);
LABEL_107:
      v76 = v66;
      goto LABEL_108;
    }
  }
}

void sub_239AF7EEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p,uint64_t a55)
{
  uint64_t v55;

  if (*(char *)(v55 - 209) < 0)
  {
    operator delete(*(void **)(v55 - 232));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AF7F7C(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) && std::istream::get() == 223)
  {
    std::istream::read();
    std::istream::read();
    std::istream::read();
    std::istream::read();
  }
  return 0;
}

void sub_239AF826C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239AF8290(_QWORD *a1, unint64_t a2)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;

  v2 = (uint64_t)(a1[1] - *a1) >> 3;
  v3 = a2 >= v2;
  v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_23946DAD4((uint64_t)a1, v4);
  }
  else if (!v3)
  {
    a1[1] = *a1 + 8 * a2;
  }
}

void sub_239AF82C0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AF82E4(uint64_t a1, _QWORD *a2, int a3)
{
  __int128 **v4;
  __int128 *v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 *v12;
  __int128 *v13;
  __int128 __p;
  __int128 **v16;
  uint64_t v17;
  int v18;
  int v19;
  void *v20[2];
  char v21;
  int v22;
  int v23;

  v4 = *(__int128 ***)(a1 + 8);
  if (a3)
  {
    v5 = v4[1];
    v6 = (char *)v5 - (char *)*v4;
    if (v6 < 0xFFFFFFFF1)
    {
      sub_239AF9AE0(*v4, v5, (uint64_t)a2, v6 >> 4);
    }
    else
    {
      std::ostream::put();
      v7 = v4[1] - *v4;
      if (0x7FFFFFFF * (unint64_t)(v7 / 0x7FFFFFFF) >= v7)
        v8 = v7 / 0x7FFFFFFF;
      else
        v8 = v7 / 0x7FFFFFFF + 1;
      v18 = 2;
      v19 = v8;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)&__p, "type");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      strcpy((char *)&__p, "vector_chunks");
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      HIBYTE(v16) = 7;
      strcpy((char *)&__p, "content");
      std::ostream::put();
      LODWORD(v20[0]) = 7;
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::put();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      std::ostream::write();
      v9 = (char *)v4[1] - (char *)*v4;
      if (v9)
      {
        v10 = 0;
        v11 = v9 >> 4;
        do
        {
          v16 = v4;
          v17 = 0;
          *(_QWORD *)&__p = v10;
          v10 += 0x7FFFFFFFLL;
          if (v11 >= v10)
            v11 = v10;
          *((_QWORD *)&__p + 1) = v11;
          std::ostream::put();
          v22 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v21 = 5;
          strcpy((char *)v20, "start");
          std::ostream::put();
          v23 = 5;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v21 < 0)
            operator delete(v20[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v21 = 3;
          LODWORD(v20[0]) = 6581861;
          std::ostream::put();
          v23 = 3;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v21 < 0)
            operator delete(v20[0]);
          std::ostream::put();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          v21 = 7;
          strcpy((char *)v20, "content");
          std::ostream::put();
          v23 = 7;
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          std::ostream::write();
          if (v21 < 0)
            operator delete(v20[0]);
          sub_239AF9AE0(&(*v4)[__p], &(*v4)[*((_QWORD *)&__p + 1)], (uint64_t)a2, *((_QWORD *)&__p + 1) - __p);
          v11 = v4[1] - *v4;
        }
        while (v10 < v11);
      }
    }
  }
  else
  {
    v12 = *v4;
    v13 = v4[1];
    std::ostream::put();
    if (v12 != v13)
    {
      while (1)
      {
        ++v12;
        std::ostream::put();
        std::ostream::operator<<();
        std::ostream::put();
        std::ostream::operator<<();
        std::ostream::put();
        if (v12 == v13)
          break;
        std::ostream::put();
      }
    }
    std::ostream::put();
  }
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AF8AC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239AF8B00(uint64_t a1, _QWORD *a2, int a3)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  char **v12;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 8);
  v12 = (char **)v4;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)v4;
  if (!a3)
    goto LABEL_10;
  v5 = std::istream::peek();
  v6 = v5;
  if ((v5 - 196) > 2)
  {
    if ((v5 - 220) > 3 || v5 == 222)
      return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
    a2 = v3;
    a3 = 1;
LABEL_10:
    sub_239AF8D2C(&v12, a2, a3);
    return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
  }
  std::istream::get();
  v7 = (unint64_t)sub_2396162D4((uint64_t)v3, v6) >> 4;
  v8 = (uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 4;
  v9 = v7 >= v8;
  v10 = v7 - v8;
  if (v10 != 0 && v9)
  {
    sub_239AF8C04((char **)v4, v10);
  }
  else if (!v9)
  {
    *(_QWORD *)(v4 + 8) = *(_QWORD *)v4 + 16 * v7;
  }
  std::istream::read();
  return (*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 5) == 0;
}

void sub_239AF8C04(char **a1, unint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  size_t v14;
  char *v15;
  char *v16;

  v5 = a1[1];
  v4 = a1[2];
  if (a2 <= (v4 - v5) >> 4)
  {
    if (a2)
    {
      v12 = 16 * a2;
      bzero(a1[1], 16 * a2);
      v5 += v12;
    }
    a1[1] = v5;
  }
  else
  {
    v6 = *a1;
    v7 = (v5 - *a1) >> 4;
    v8 = v7 + a2;
    if ((v7 + a2) >> 60)
      sub_2394189F8();
    v9 = v4 - v6;
    if (v9 >> 3 > v8)
      v8 = v9 >> 3;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0)
      v10 = 0xFFFFFFFFFFFFFFFLL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 >> 60)
        sub_239418A80();
      v11 = (char *)operator new(16 * v10);
    }
    else
    {
      v11 = 0;
    }
    v13 = &v11[16 * v7];
    v14 = 16 * a2;
    v15 = &v11[16 * v10];
    bzero(v13, v14);
    v16 = &v13[v14];
    if (v5 != v6)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v5 - 1);
        v13 -= 16;
        v5 -= 16;
      }
      while (v5 != v6);
      v5 = *a1;
    }
    *a1 = v13;
    a1[1] = v16;
    a1[2] = v15;
    if (v5)
      operator delete(v5);
  }
}

uint64_t sub_239AF8D2C(char ***a1, _QWORD *a2, int a3)
{
  int v4;
  unsigned int v5;
  std::string *v6;
  unint64_t v7;
  char *v8;
  _OWORD *v9;
  char **v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  char **v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t result;
  char v46;
  unsigned int v47;
  int v48;
  int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char **v53;
  unint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  int i;
  unsigned int v66;
  char v67;
  unsigned int v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  std::string *v79;
  char *v80;
  _QWORD v81[11];
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  std::string v87;
  uint64_t v88;
  uint64_t v89;

  v89 = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v4 = std::istream::get();
    if ((v4 - 196) <= 2)
    {
      v5 = sub_2396162D4((uint64_t)a2, v4);
      v79 = 0;
      v80 = 0;
      v81[0] = 0;
      sub_239AF8C04((char **)&v79, v5);
      std::istream::read();
      v6 = (std::string *)v80;
      if (v80 != (char *)v79)
      {
        v7 = 0;
        v6 = v79;
        do
        {
          v9 = (_OWORD *)((char *)v6 + 16 * v7);
          v10 = *a1;
          v12 = (*a1)[1];
          v11 = (unint64_t)(*a1)[2];
          if ((unint64_t)v12 < v11)
          {
            *(_OWORD *)v12 = *v9;
            v8 = v12 + 16;
          }
          else
          {
            v13 = *v10;
            v14 = (v12 - *v10) >> 4;
            v15 = v14 + 1;
            if ((unint64_t)(v14 + 1) >> 60)
              sub_2394189F8();
            v16 = v11 - (_QWORD)v13;
            if (v16 >> 3 > v15)
              v15 = v16 >> 3;
            if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0)
              v17 = 0xFFFFFFFFFFFFFFFLL;
            else
              v17 = v15;
            if (v17)
            {
              if (v17 >> 60)
                sub_239418A80();
              v18 = (char *)operator new(16 * v17);
            }
            else
            {
              v18 = 0;
            }
            v19 = &v18[16 * v14];
            *(_OWORD *)v19 = *v9;
            v20 = v19;
            if (v12 != v13)
            {
              do
              {
                *((_OWORD *)v20 - 1) = *((_OWORD *)v12 - 1);
                v20 -= 16;
                v12 -= 16;
              }
              while (v12 != v13);
              v12 = *v10;
            }
            v8 = v19 + 16;
            *v10 = v20;
            v10[1] = v19 + 16;
            v10[2] = &v18[16 * v17];
            if (v12)
              operator delete(v12);
          }
          v10[1] = v8;
          ++v7;
          v6 = v79;
        }
        while (v7 < (v80 - (char *)v79) >> 4);
      }
      if (v6)
      {
        v80 = (char *)v6;
        operator delete(v6);
      }
      return 1;
    }
    if ((v4 & 0xFFFFFFFE) == 0xDC)
    {
      v29 = sub_2396162D4((uint64_t)a2, v4);
      if (v29)
      {
        v30 = 0;
        v31 = v29;
        do
        {
          v79 = &v87;
          v80 = 0;
          sub_2395AAF78((uint64_t *)&v79, a2, 1);
          v33 = *(_OWORD *)&v87.__r_.__value_.__l.__data_;
          v34 = *a1;
          v36 = (*a1)[1];
          v35 = (unint64_t)(*a1)[2];
          if ((unint64_t)v36 < v35)
          {
            *(_OWORD *)v36 = *(_OWORD *)&v87.__r_.__value_.__l.__data_;
            v32 = v36 + 16;
          }
          else
          {
            v37 = *v34;
            v38 = (v36 - *v34) >> 4;
            v39 = v38 + 1;
            if ((unint64_t)(v38 + 1) >> 60)
              sub_2394189F8();
            v40 = v35 - (_QWORD)v37;
            if (v40 >> 3 > v39)
              v39 = v40 >> 3;
            if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFF0)
              v41 = 0xFFFFFFFFFFFFFFFLL;
            else
              v41 = v39;
            if (v41)
            {
              if (v41 >> 60)
                sub_239418A80();
              v42 = (char *)operator new(16 * v41);
            }
            else
            {
              v42 = 0;
            }
            v43 = &v42[16 * v38];
            *(_OWORD *)v43 = v33;
            v44 = v43;
            if (v36 != v37)
            {
              do
              {
                *((_OWORD *)v44 - 1) = *((_OWORD *)v36 - 1);
                v44 -= 16;
                v36 -= 16;
              }
              while (v36 != v37);
              v36 = *v34;
            }
            v32 = v43 + 16;
            *v34 = v44;
            v34[1] = v43 + 16;
            v34[2] = &v42[16 * v41];
            if (v36)
              operator delete(v36);
          }
          v34[1] = v32;
          ++v30;
        }
        while (v30 != v31);
      }
      return 1;
    }
    if (v4 == 223)
    {
      v86 = 0;
      memset(&v87, 0, sizeof(v87));
      std::istream::read();
      std::istream::read();
      std::istream::read();
      std::istream::read();
    }
  }
  else
  {
    v21 = a2 + 4;
    v22 = MEMORY[0x24BDAC740];
    while (1)
    {
      v23 = std::istream::peek();
      v24 = v23 <= 0x7F ? *(_DWORD *)(v22 + 4 * v23 + 60) & 0x4000 : __maskrune(v23, 0x4000uLL);
      v25 = *(_QWORD *)(*a2 - 24);
      if (!v24)
        break;
      if (!*(_DWORD *)((char *)v21 + v25))
        std::istream::get();
    }
    if ((*((_BYTE *)a2 + v25 + 32) & 2) != 0)
      return 1;
    if (std::istream::get() == 91)
    {
      while (1)
      {
        v26 = std::istream::peek();
        v27 = v26 <= 0x7F ? *(_DWORD *)(v22 + 4 * v26 + 60) & 0x4000 : __maskrune(v26, 0x4000uLL);
        v28 = *(_QWORD *)(*a2 - 24);
        if (!v27)
          break;
        if (!*(_DWORD *)((char *)v21 + v28))
          std::istream::get();
      }
      if ((*((_BYTE *)a2 + v28 + 32) & 2) == 0)
      {
        v46 = 0;
        v76 = *(char **)(MEMORY[0x24BEDB7F0] + 64);
        v77 = (char *)*MEMORY[0x24BEDB7F0];
        v75 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
        v74 = MEMORY[0x24BEDB848] + 16;
        while ((*((_BYTE *)v21 + *(_QWORD *)(*a2 - 24)) & 2) == 0 && (v46 & 1) == 0)
        {
          while (1)
          {
            v47 = std::istream::peek();
            v48 = v47 <= 0x7F ? *(_DWORD *)(v22 + 4 * v47 + 60) & 0x4000 : __maskrune(v47, 0x4000uLL);
            v49 = *(_DWORD *)((char *)v21 + *(_QWORD *)(*a2 - 24));
            if (!v48)
              break;
            if (!v49)
              std::istream::get();
          }
          if ((v49 & 2) != 0)
            return 0;
          sub_2394988CC((uint64_t)&v79);
          if (sub_239596128(a2))
          {
            v50 = (char *)v81 + *(_QWORD *)(v81[0] - 24);
            if ((v50[32] & 5) == 0)
            {
              (*(void (**)(std::string *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v50 + 5)
                                                                                                  + 32))(&v87, *((_QWORD *)v50 + 5), 0, 1, 16);
              if (v88 >= 1)
              {
                v87.__r_.__value_.__r.__words[0] = (std::string::size_type)&v84;
                v87.__r_.__value_.__l.__size_ = 0;
                sub_2395AAF78((uint64_t *)&v87, &v79, 0);
                v52 = v84;
                v51 = v85;
                v53 = *a1;
                v55 = (*a1)[1];
                v54 = (unint64_t)(*a1)[2];
                if ((unint64_t)v55 >= v54)
                {
                  v57 = *v53;
                  v58 = (v55 - *v53) >> 4;
                  v59 = v58 + 1;
                  if ((unint64_t)(v58 + 1) >> 60)
                    sub_2394189F8();
                  v60 = v54 - (_QWORD)v57;
                  if (v60 >> 3 > v59)
                    v59 = v60 >> 3;
                  if ((unint64_t)v60 >= 0x7FFFFFFFFFFFFFF0)
                    v61 = 0xFFFFFFFFFFFFFFFLL;
                  else
                    v61 = v59;
                  if (v61)
                  {
                    v72 = v84;
                    v73 = v85;
                    if (v61 >> 60)
                      sub_239418A80();
                    v71 = v61;
                    v62 = (char *)operator new(16 * v61);
                    v61 = v71;
                    v52 = v72;
                    v51 = v73;
                  }
                  else
                  {
                    v62 = 0;
                  }
                  v63 = &v62[16 * v58];
                  *(_QWORD *)v63 = v52;
                  *((_QWORD *)v63 + 1) = v51;
                  v64 = v63;
                  if (v55 != v57)
                  {
                    do
                    {
                      *((_OWORD *)v64 - 1) = *((_OWORD *)v55 - 1);
                      v64 -= 16;
                      v55 -= 16;
                    }
                    while (v55 != v57);
                    v55 = *v53;
                  }
                  v56 = v63 + 16;
                  *v53 = v64;
                  v53[1] = v63 + 16;
                  v53[2] = &v62[16 * v61];
                  if (v55)
                    operator delete(v55);
                }
                else
                {
                  *(_QWORD *)v55 = v84;
                  *((_QWORD *)v55 + 1) = v51;
                  v56 = v55 + 16;
                }
                v53[1] = v56;
              }
            }
            for (i = std::istream::peek(); ; i = std::istream::peek())
            {
              v66 = i << 24;
              if (i << 24 == 738197504)
                goto LABEL_105;
              if (v66 == 1560281088)
                break;
              if (v66 <= 0x7F000000)
              {
                if ((*(_DWORD *)(v22 + 4 * (char)i + 60) & 0x4000) == 0)
                  goto LABEL_104;
              }
              else if (!__maskrune((char)i, 0x4000uLL))
              {
                goto LABEL_104;
              }
              if ((*((_BYTE *)v21 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
              {
LABEL_104:
                if (v66 != 738197504)
                  goto LABEL_106;
LABEL_105:
                std::istream::get();
                v46 = 0;
                goto LABEL_108;
              }
              std::istream::get();
            }
            v46 = 1;
LABEL_108:
            v67 = 1;
          }
          else
          {
LABEL_106:
            v67 = 0;
            v46 = 0;
          }
          v79 = (std::string *)v77;
          *(std::string **)((char *)&v79 + *((_QWORD *)v77 - 3)) = (std::string *)v76;
          v81[0] = v75;
          v81[1] = v74;
          if (v82 < 0)
            operator delete((void *)v81[9]);
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x23B83E250](&v83);
          result = 0;
          if ((v67 & 1) == 0)
            return result;
        }
        while (1)
        {
          v68 = std::istream::peek();
          v69 = v68 <= 0x7F ? *(_DWORD *)(v22 + 4 * v68 + 60) & 0x4000 : __maskrune(v68, 0x4000uLL);
          v70 = *(_QWORD *)(*a2 - 24);
          if (!v69)
            break;
          if (!*(_DWORD *)((char *)v21 + v70))
            std::istream::get();
        }
        if ((*((_BYTE *)a2 + v70 + 32) & 2) == 0 && std::istream::get() == 93)
          return 1;
      }
    }
  }
  return 0;
}

void sub_239AF97D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *__p,uint64_t a57)
{
  uint64_t v57;

  if (*(char *)(v57 - 209) < 0)
  {
    operator delete(*(void **)(v57 - 232));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AF9864(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) && std::istream::get() == 223)
  {
    std::istream::read();
    std::istream::read();
    std::istream::read();
    std::istream::read();
  }
  return 0;
}

void sub_239AF9AC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AF9AE0(__int128 *a1, __int128 *a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  __int128 v9;
  _QWORD *exception;
  __int128 v11;
  uint64_t v12;

  std::ostream::put();
  if (HIDWORD(a4))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = MEMORY[0x24BEDB8F0] + 16;
    __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
  }
  std::ostream::write();
  std::ostream::write();
  std::ostream::write();
  for (result = std::ostream::write(); a1 != a2; result = sub_2395A3E80((uint64_t)&v11, (uint64_t)&v12, a3, 2uLL))
  {
    v9 = *a1++;
    v11 = v9;
  }
  return result;
}

uint64_t *sub_239AF9BD4(uint64_t *a1, uint64_t *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char *v44;
  __int128 v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  void **v58;
  void *v59;
  void **v61;
  void *v62[4];
  void *v63[4];
  void *v64[3];
  void *v65[2];
  char v66;
  void *v67[2];
  char v68;
  void *v69[2];
  char v70;
  void *v71[2];
  char v72;
  void *v73[2];
  char v74;
  void *v75[2];
  char v76;
  void *v77[2];
  char v78;
  void *__p[2];
  void *v80;
  void *v81;
  char *v82;
  char *v83;
  void *v84;
  char *v85;
  char *v86;
  void *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  _BYTE *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;

  v7 = a1[3];
  v6 = a1[4];
  v108 = 0;
  v109 = 0;
  v110 = 0;
  v8 = v6 - v7;
  if (v6 == v7)
  {
    v105 = 0;
    v106 = 0;
    v107 = 0;
  }
  else
  {
    if (v8 < 0)
      sub_2394189F8();
    v9 = (char *)operator new(v6 - v7);
    v10 = v8 >> 3;
    v108 = v9;
    v110 = &v9[8 * (v8 >> 3)];
    bzero(v9, v8);
    v109 = &v9[v8];
    v11 = (char *)operator new((unint64_t)v8 >> 1);
    v105 = v11;
    v107 = &v11[4 * v10];
    bzero(v11, 4 * v10);
    v12 = 0;
    v106 = v107;
    v14 = a1[6];
    v13 = a1[7];
    if (v10 <= 1)
      v15 = 1;
    else
      v15 = v10;
    do
    {
      if (v13 > v12 && ((*(_QWORD *)(v14 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
      {
        *(_QWORD *)&v9[8 * v12] = *(_QWORD *)(v7 + 8 * v12);
        *(_DWORD *)&v11[4 * v12] = 1;
      }
      ++v12;
    }
    while (v15 != v12);
  }
  v102 = 0;
  v103 = 0;
  v104 = 0;
  sub_239AFA8E8(a1, (uint64_t)&v102);
  v16 = v103 - v102;
  v17 = (v103 - v102) >> 4;
  v18 = *a1;
  v19 = a1[1] - *a1;
  if (!v19)
  {
    v23 = 0;
    goto LABEL_23;
  }
  v20 = v19 / 40;
  if (v20 <= 1)
    v20 = 1;
  if (v20 > 1)
  {
    v24 = 0;
    v25 = 0;
    v21 = v20 & 0xFFFFFFFFFFFFFFFELL;
    v26 = (uint64_t *)(v18 + 64);
    v27 = v20 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      v28 = *(v26 - 5);
      v29 = *v26;
      v26 += 10;
      v24 += v28;
      v25 += v29;
      v27 -= 2;
    }
    while (v27);
    v22 = v25 + v24;
    if (v20 == v21)
      goto LABEL_22;
  }
  else
  {
    v21 = 0;
    v22 = 0;
  }
  v30 = v20 - v21;
  v31 = (uint64_t *)(v18 + 40 * v21 + 24);
  do
  {
    v32 = *v31;
    v31 += 5;
    v22 += v32;
    --v30;
  }
  while (v30);
LABEL_22:
  v23 = v22 >> 1;
LABEL_23:
  if (v17 != v23)
  {
    sub_239A444D4((uint64_t)"unknown file", 103, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v99 = 0;
  v100 = 0;
  v101 = 0;
  if (v103 == v102)
  {
    v96 = 0;
    v97 = 0;
    v98 = 0;
    v93 = 0;
    v94 = 0;
    v95 = 0;
    v90 = 0;
    v91 = 0;
    v92 = 0;
    v87 = 0;
    v88 = 0;
    v89 = 0;
    v84 = 0;
    v85 = 0;
    v86 = 0;
    v81 = 0;
    v82 = 0;
    v83 = 0;
  }
  else
  {
    if ((v16 & 0x8000000000000000) != 0)
      sub_2394189F8();
    v99 = (char *)operator new(v16 >> 1);
    v101 = &v99[8 * v17];
    bzero(v99, v16 >> 1);
    v100 = &v99[v16 >> 1];
    v96 = (char *)operator new(v16 >> 1);
    v98 = &v96[8 * v17];
    bzero(v96, v16 >> 1);
    v97 = &v96[v16 >> 1];
    v93 = (char *)operator new(v16 >> 1);
    v95 = &v93[8 * v17];
    bzero(v93, v16 >> 1);
    v94 = &v93[v16 >> 1];
    v90 = (char *)operator new(v16 >> 1);
    v92 = &v90[8 * v17];
    bzero(v90, v16 >> 1);
    v91 = &v90[v16 >> 1];
    v87 = operator new(v16 >> 1);
    v89 = (char *)v87 + 8 * v17;
    bzero(v87, v16 >> 1);
    v88 = (char *)v87 + (v16 >> 1);
    v84 = 0;
    v85 = 0;
    v86 = 0;
    if (v16 >= 0x38E38E38E38E38E1)
      sub_2394189F8();
    v84 = operator new(72 * v17);
    v85 = (char *)v84 + 72 * v17;
    v86 = v85;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v81 = operator new(24 * v17);
    v82 = (char *)v81 + 24 * v17;
    v83 = v82;
    if (v17 <= 1)
      v37 = 1;
    else
      v37 = v17;
    do
    {
      v38 = sub_239AFAB78(a1, *(_QWORD *)&v102[v33], *(_QWORD *)&v102[v33 + 8]);
      v39 = 8 * v36;
      *(_QWORD *)&v99[v39] = *v38;
      *(_QWORD *)&v96[v39] = v38[1];
      *(_QWORD *)&v93[v39] = v38[2];
      *(_QWORD *)&v90[v39] = v38[3];
      *(_QWORD *)((char *)v87 + v39) = v38[4];
      v40 = (char *)v84 + v34;
      v41 = *(_OWORD *)(v38 + 9);
      v42 = *(_OWORD *)(v38 + 11);
      v43 = *(_OWORD *)(v38 + 7);
      *((_QWORD *)v40 + 8) = v38[13];
      *((_OWORD *)v40 + 2) = v41;
      *((_OWORD *)v40 + 3) = v42;
      *((_OWORD *)v40 + 1) = v43;
      *(_OWORD *)v40 = *(_OWORD *)(v38 + 5);
      v44 = (char *)v81 + v35;
      v45 = *((_OWORD *)v38 + 7);
      ++v36;
      *((_QWORD *)v44 + 2) = v38[16];
      *(_OWORD *)v44 = v45;
      v35 += 24;
      v34 += 72;
      v33 += 16;
    }
    while (v37 != v36);
  }
  sub_2396157EC((uint64_t)__p, a3);
  v78 = 12;
  strcpy((char *)v77, "node_weights");
  v46 = (_QWORD *)operator new();
  *v46 = &off_250ADF600;
  v46[1] = &v108;
  sub_23961580C((uint64_t)__p, (uint64_t)v77, (uint64_t)v46);
  v76 = 10;
  strcpy((char *)v75, "node_flags");
  v47 = (_QWORD *)operator new();
  *v47 = &off_250ADF7B0;
  v47[1] = &v105;
  sub_23961580C((uint64_t)__p, (uint64_t)v75, (uint64_t)v47);
  v74 = 13;
  strcpy((char *)v73, "edge_pair_ids");
  v48 = (_QWORD *)operator new();
  *v48 = &off_250AF3410;
  v48[1] = &v102;
  sub_23961580C((uint64_t)__p, (uint64_t)v73, (uint64_t)v48);
  v72 = 12;
  strcpy((char *)v71, "edge_weights");
  v49 = (_QWORD *)operator new();
  *v49 = &off_250ADF600;
  v49[1] = &v99;
  sub_23961580C((uint64_t)__p, (uint64_t)v71, (uint64_t)v49);
  v70 = 10;
  strcpy((char *)v69, "match_nums");
  v50 = (_QWORD *)operator new();
  *v50 = &off_250AF5378;
  v50[1] = &v96;
  sub_23961580C((uint64_t)__p, (uint64_t)v69, (uint64_t)v50);
  v68 = 14;
  strcpy((char *)v67, "average_angles");
  v51 = (_QWORD *)operator new();
  *v51 = &off_250ADF600;
  v51[1] = &v93;
  sub_23961580C((uint64_t)__p, (uint64_t)v67, (uint64_t)v51);
  v66 = 15;
  strcpy((char *)v65, "baseline_angles");
  v52 = (_QWORD *)operator new();
  *v52 = &off_250ADF600;
  v52[1] = &v90;
  sub_23961580C((uint64_t)__p, (uint64_t)v65, (uint64_t)v52);
  HIBYTE(v64[2]) = 20;
  strcpy((char *)v64, "average_scale_ratios");
  v53 = (_QWORD *)operator new();
  *v53 = &off_250ADF600;
  v53[1] = &v87;
  sub_23961580C((uint64_t)__p, (uint64_t)v64, (uint64_t)v53);
  HIBYTE(v63[2]) = 18;
  strcpy((char *)v63, "relative_rotations");
  v54 = (_QWORD *)operator new();
  *v54 = &off_250AF3440;
  v54[1] = &v84;
  sub_23961580C((uint64_t)__p, (uint64_t)v63, (uint64_t)v54);
  HIBYTE(v62[2]) = 21;
  strcpy((char *)v62, "relative_translations");
  v55 = (_QWORD *)operator new();
  *v55 = &off_250AF3470;
  v55[1] = &v81;
  sub_23961580C((uint64_t)__p, (uint64_t)v62, (uint64_t)v55);
  if (SHIBYTE(v62[2]) < 0)
  {
    operator delete(v62[0]);
    if ((SHIBYTE(v63[2]) & 0x80000000) == 0)
    {
LABEL_35:
      if ((SHIBYTE(v64[2]) & 0x80000000) == 0)
        goto LABEL_36;
      goto LABEL_77;
    }
  }
  else if ((SHIBYTE(v63[2]) & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(v63[0]);
  if ((SHIBYTE(v64[2]) & 0x80000000) == 0)
  {
LABEL_36:
    if ((v66 & 0x80000000) == 0)
      goto LABEL_37;
    goto LABEL_78;
  }
LABEL_77:
  operator delete(v64[0]);
  if ((v66 & 0x80000000) == 0)
  {
LABEL_37:
    if ((v68 & 0x80000000) == 0)
      goto LABEL_38;
    goto LABEL_79;
  }
LABEL_78:
  operator delete(v65[0]);
  if ((v68 & 0x80000000) == 0)
  {
LABEL_38:
    if ((v70 & 0x80000000) == 0)
      goto LABEL_39;
    goto LABEL_80;
  }
LABEL_79:
  operator delete(v67[0]);
  if ((v70 & 0x80000000) == 0)
  {
LABEL_39:
    if ((v72 & 0x80000000) == 0)
      goto LABEL_40;
    goto LABEL_81;
  }
LABEL_80:
  operator delete(v69[0]);
  if ((v72 & 0x80000000) == 0)
  {
LABEL_40:
    if ((v74 & 0x80000000) == 0)
      goto LABEL_41;
    goto LABEL_82;
  }
LABEL_81:
  operator delete(v71[0]);
  if ((v74 & 0x80000000) == 0)
  {
LABEL_41:
    if ((v76 & 0x80000000) == 0)
      goto LABEL_42;
LABEL_83:
    operator delete(v75[0]);
    if ((v78 & 0x80000000) == 0)
      goto LABEL_43;
    goto LABEL_84;
  }
LABEL_82:
  operator delete(v73[0]);
  if (v76 < 0)
    goto LABEL_83;
LABEL_42:
  if ((v78 & 0x80000000) == 0)
    goto LABEL_43;
LABEL_84:
  operator delete(v77[0]);
LABEL_43:
  sub_2396158C8(a2, (uint64_t)__p);
  v56 = v80;
  if (v80)
  {
    do
    {
      v57 = v56[5];
      if (v57)
        (*(void (**)(uint64_t))(*(_QWORD *)v57 + 8))(v57);
      v56 = (_QWORD *)*v56;
    }
    while (v56);
    v58 = (void **)v80;
    if (v80)
    {
      do
      {
        v61 = (void **)*v58;
        if (*((char *)v58 + 39) < 0)
          operator delete(v58[2]);
        operator delete(v58);
        v58 = v61;
      }
      while (v61);
    }
  }
  v59 = __p[0];
  __p[0] = 0;
  if (v59)
    operator delete(v59);
  if (v81)
  {
    v82 = (char *)v81;
    operator delete(v81);
  }
  if (v84)
  {
    v85 = (char *)v84;
    operator delete(v84);
  }
  if (v87)
  {
    v88 = (char *)v87;
    operator delete(v87);
  }
  if (v90)
  {
    v91 = v90;
    operator delete(v90);
  }
  if (v93)
  {
    v94 = v93;
    operator delete(v93);
  }
  if (v96)
  {
    v97 = v96;
    operator delete(v96);
  }
  if (v99)
  {
    v100 = v99;
    operator delete(v99);
  }
  if (v102)
  {
    v103 = v102;
    operator delete(v102);
  }
  if (v105)
  {
    v106 = v105;
    operator delete(v105);
  }
  if (v108)
  {
    v109 = v108;
    operator delete(v108);
  }
  return a2;
}

void sub_239AFA5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,uint64_t a52,void *a53)
{
  uint64_t v53;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;

  if (__p)
  {
    operator delete(__p);
    v55 = a53;
    if (!a53)
    {
LABEL_3:
      v56 = *(void **)(v53 - 248);
      if (!v56)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else
  {
    v55 = a53;
    if (!a53)
      goto LABEL_3;
  }
  operator delete(v55);
  v56 = *(void **)(v53 - 248);
  if (!v56)
  {
LABEL_4:
    v57 = *(void **)(v53 - 224);
    if (!v57)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  *(_QWORD *)(v53 - 240) = v56;
  operator delete(v56);
  v57 = *(void **)(v53 - 224);
  if (!v57)
  {
LABEL_5:
    v58 = *(void **)(v53 - 200);
    if (!v58)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  *(_QWORD *)(v53 - 216) = v57;
  operator delete(v57);
  v58 = *(void **)(v53 - 200);
  if (!v58)
  {
LABEL_6:
    v59 = *(void **)(v53 - 176);
    if (!v59)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  *(_QWORD *)(v53 - 192) = v58;
  operator delete(v58);
  v59 = *(void **)(v53 - 176);
  if (!v59)
  {
LABEL_7:
    v60 = *(void **)(v53 - 152);
    if (!v60)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  *(_QWORD *)(v53 - 168) = v59;
  operator delete(v59);
  v60 = *(void **)(v53 - 152);
  if (!v60)
  {
LABEL_8:
    v61 = *(void **)(v53 - 128);
    if (!v61)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  *(_QWORD *)(v53 - 144) = v60;
  operator delete(v60);
  v61 = *(void **)(v53 - 128);
  if (!v61)
  {
LABEL_9:
    v62 = *(void **)(v53 - 104);
    if (!v62)
      goto LABEL_11;
    goto LABEL_10;
  }
LABEL_19:
  *(_QWORD *)(v53 - 120) = v61;
  operator delete(v61);
  v62 = *(void **)(v53 - 104);
  if (!v62)
LABEL_11:
    _Unwind_Resume(a1);
LABEL_10:
  *(_QWORD *)(v53 - 96) = v62;
  operator delete(v62);
  goto LABEL_11;
}

void sub_239AFA8E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  unint64_t *v39;
  unint64_t *v40;

  v3 = *a1;
  v4 = a1[1] - *a1;
  if (!v4)
    goto LABEL_18;
  v5 = v4 / 40;
  if (v5 <= 1)
    v5 = 1;
  if (v5 < 2)
  {
    v6 = 0;
    v7 = 0;
LABEL_9:
    v14 = v5 - v6;
    v15 = (uint64_t *)(v3 + 40 * v6 + 24);
    do
    {
      v16 = *v15;
      v15 += 5;
      v7 += v16;
      --v14;
    }
    while (v14);
    goto LABEL_11;
  }
  v8 = 0;
  v9 = 0;
  v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
  v10 = (uint64_t *)(v3 + 64);
  v11 = v5 & 0xFFFFFFFFFFFFFFFELL;
  do
  {
    v12 = *(v10 - 5);
    v13 = *v10;
    v10 += 10;
    v8 += v12;
    v9 += v13;
    v11 -= 2;
  }
  while (v11);
  v7 = v9 + v8;
  if (v5 != v6)
    goto LABEL_9;
LABEL_11:
  v17 = v7 >> 1;
  v18 = *(unint64_t **)a2;
  if (v7 >> 1 > (uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)a2) >> 4)
  {
    if (v7 >> 61)
LABEL_45:
      sub_2394189F8();
    v19 = *(unint64_t **)(a2 + 8);
    v20 = 16 * v17;
    v21 = (char *)operator new(16 * v17);
    v22 = &v21[((char *)v19 - (char *)v18) & 0xFFFFFFFFFFFFFFF0];
    v23 = v22;
    if (v19 != v18)
    {
      v24 = &v21[((char *)v19 - (char *)v18) & 0xFFFFFFFFFFFFFFF0];
      do
      {
        v23 = v24 - 16;
        *((_OWORD *)v24 - 1) = *((_OWORD *)v19 - 1);
        v19 -= 2;
        v24 -= 16;
      }
      while (v19 != v18);
    }
    *(_QWORD *)a2 = v23;
    *(_QWORD *)(a2 + 8) = v22;
    *(_QWORD *)(a2 + 16) = &v21[v20];
    if (v18)
      operator delete(v18);
  }
LABEL_18:
  v26 = *a1;
  v25 = a1[1];
  if (v25 != *a1)
  {
    v27 = 0;
    do
    {
      v28 = *(_QWORD **)(v26 + 40 * v27 + 16);
      if (v28)
      {
        do
        {
          v30 = v28[2];
          if (v30 > v27)
          {
            v32 = *(unint64_t **)(a2 + 8);
            v31 = *(_QWORD *)(a2 + 16);
            if ((unint64_t)v32 < v31)
            {
              *v32 = v27;
              v32[1] = v30;
              v29 = v32 + 2;
            }
            else
            {
              v33 = *(unint64_t **)a2;
              v34 = ((uint64_t)v32 - *(_QWORD *)a2) >> 4;
              v35 = v34 + 1;
              if ((unint64_t)(v34 + 1) >> 60)
                goto LABEL_45;
              v36 = v31 - (_QWORD)v33;
              if (v36 >> 3 > v35)
                v35 = v36 >> 3;
              if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFF0)
                v37 = 0xFFFFFFFFFFFFFFFLL;
              else
                v37 = v35;
              if (v37)
              {
                if (v37 >> 60)
                  sub_239418A80();
                v38 = (char *)operator new(16 * v37);
              }
              else
              {
                v38 = 0;
              }
              v39 = (unint64_t *)&v38[16 * v34];
              *v39 = v27;
              v39[1] = v30;
              v40 = v39;
              if (v32 != v33)
              {
                do
                {
                  *((_OWORD *)v40 - 1) = *((_OWORD *)v32 - 1);
                  v40 -= 2;
                  v32 -= 2;
                }
                while (v32 != v33);
                v32 = *(unint64_t **)a2;
              }
              v29 = v39 + 2;
              *(_QWORD *)a2 = v40;
              *(_QWORD *)(a2 + 8) = v39 + 2;
              *(_QWORD *)(a2 + 16) = &v38[16 * v37];
              if (v32)
                operator delete(v32);
            }
            *(_QWORD *)(a2 + 8) = v29;
          }
          v28 = (_QWORD *)*v28;
        }
        while (v28);
        v26 = *a1;
        v25 = a1[1];
      }
      ++v27;
    }
    while (v27 < 0xCCCCCCCCCCCCCCCDLL * ((v25 - v26) >> 3));
  }
}

_QWORD *sub_239AFAB78(uint64_t *a1, unint64_t a2, unint64_t a3)
{
  _QWORD *v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (!sub_239AF2B88(a1, a2, a3))
  {
    sub_239A444D4((uint64_t)"unknown file", 197, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  v6 = (_QWORD *)(*a1 + 40 * a2);
  v7 = (int8x8_t)v6[1];
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8(v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v9 = a3;
      if (*(_QWORD *)&v7 <= a3)
        v9 = a3 % *(_QWORD *)&v7;
    }
    else
    {
      v9 = (*(_QWORD *)&v7 - 1) & a3;
    }
    v10 = *(_QWORD **)(*v6 + 8 * v9);
    if (v10)
    {
      v10 = (_QWORD *)*v10;
      if (v10)
      {
        if (v8.u32[0] < 2uLL)
        {
          v11 = *(_QWORD *)&v7 - 1;
          while (1)
          {
            v13 = v10[1];
            if (v13 == a3)
            {
              if (v10[2] == a3)
                return v10 + 3;
            }
            else if ((v13 & v11) != v9)
            {
              goto LABEL_22;
            }
            v10 = (_QWORD *)*v10;
            if (!v10)
              return v10 + 3;
          }
        }
        do
        {
          v12 = v10[1];
          if (v12 == a3)
          {
            if (v10[2] == a3)
              return v10 + 3;
          }
          else
          {
            if (v12 >= *(_QWORD *)&v7)
              v12 %= *(_QWORD *)&v7;
            if (v12 != v9)
              goto LABEL_22;
          }
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
    }
  }
  else
  {
LABEL_22:
    v10 = 0;
  }
  return v10 + 3;
}

void sub_239AFACB4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5B10;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239AFACC4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF5B10;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239AFACF4(uint64_t a1)
{
  _BYTE *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  void *v26;

  v2 = (_BYTE *)(a1 + 4464);
  if (*(_BYTE *)(a1 + 6808))
    sub_239A614AC((_QWORD *)(a1 + 6224));
  if (v2[1752])
    sub_239A615DC(a1 + 4472);
  if (*v2)
    sub_239A6177C(a1 + 3752);
  if (*(_BYTE *)(a1 + 3744))
  {
    v3 = *(void **)(a1 + 3656);
    if (v3)
    {
      *(_QWORD *)(a1 + 3664) = v3;
      operator delete(v3);
    }
    sub_239421038(a1 + 3592, *(_QWORD **)(a1 + 3600));
  }
  if (*(_BYTE *)(a1 + 3544))
    sub_239A61848(a1 + 3080);
  if (*(_BYTE *)(a1 + 3072))
  {
    v4 = *(void **)(a1 + 3040);
    if (v4)
    {
      *(_QWORD *)(a1 + 3048) = v4;
      operator delete(v4);
    }
    v5 = *(void **)(a1 + 3016);
    if (v5)
    {
      *(_QWORD *)(a1 + 3024) = v5;
      operator delete(v5);
    }
    v6 = *(void **)(a1 + 2992);
    if (v6)
    {
      *(_QWORD *)(a1 + 3000) = v6;
      operator delete(v6);
    }
  }
  if (!*(_BYTE *)(a1 + 2936))
    goto LABEL_45;
  v7 = *(_QWORD **)(a1 + 2896);
  if (v7 == (_QWORD *)(a1 + 2872))
  {
    v8 = 4;
    v7 = (_QWORD *)(a1 + 2872);
  }
  else
  {
    if (!v7)
      goto LABEL_26;
    v8 = 5;
  }
  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_26:
  v9 = *(_QWORD **)(a1 + 2864);
  if (v9 == (_QWORD *)(a1 + 2840))
  {
    v10 = 4;
    v9 = (_QWORD *)(a1 + 2840);
  }
  else
  {
    if (!v9)
      goto LABEL_31;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_31:
  v11 = *(void **)(a1 + 2520);
  if (v11)
  {
    *(_QWORD *)(a1 + 2528) = v11;
    operator delete(v11);
  }
  if (*(char *)(a1 + 2311) < 0)
    operator delete(*(void **)(a1 + 2288));
  v12 = *(_QWORD **)(a1 + 2232);
  if (v12 == (_QWORD *)(a1 + 2208))
  {
    v13 = 4;
    v12 = (_QWORD *)(a1 + 2208);
    goto LABEL_39;
  }
  if (v12)
  {
    v13 = 5;
LABEL_39:
    (*(void (**)(void))(*v12 + 8 * v13))();
  }
  v14 = *(_QWORD **)(a1 + 2200);
  if (v14 == (_QWORD *)(a1 + 2176))
  {
    v15 = 4;
    v14 = (_QWORD *)(a1 + 2176);
  }
  else
  {
    if (!v14)
      goto LABEL_45;
    v15 = 5;
  }
  (*(void (**)(void))(*v14 + 8 * v15))();
LABEL_45:
  if (*(_BYTE *)(a1 + 1848))
  {
    if (*(char *)(a1 + 1591) < 0)
    {
      operator delete(*(void **)(a1 + 1568));
      v16 = *(void **)(a1 + 1544);
      if (!v16)
        goto LABEL_49;
      goto LABEL_48;
    }
    v16 = *(void **)(a1 + 1544);
    if (v16)
    {
LABEL_48:
      *(_QWORD *)(a1 + 1552) = v16;
      operator delete(v16);
    }
  }
LABEL_49:
  if (*(_BYTE *)(a1 + 1448))
  {
    v17 = *(void **)(a1 + 1304);
    if (v17)
    {
      *(_QWORD *)(a1 + 1312) = v17;
      operator delete(v17);
    }
  }
  sub_239A4E1A4((_QWORD *)(a1 + 680));
  sub_239A4E2B0(a1 + 640);
  sub_239A4E348(a1 + 600);
  v18 = *(void **)(a1 + 568);
  if (v18)
  {
    *(_QWORD *)(a1 + 576) = v18;
    operator delete(v18);
  }
  sub_239A4E1A4((_QWORD *)(a1 + 224));
  sub_239A4E2B0(a1 + 184);
  sub_239A4E348(a1 + 144);
  v19 = *(void **)(a1 + 112);
  if (v19)
  {
    *(_QWORD *)(a1 + 120) = v19;
    operator delete(v19);
  }
  v20 = *(void **)(a1 + 88);
  if (v20)
  {
    *(_QWORD *)(a1 + 96) = v20;
    operator delete(v20);
  }
  v21 = *(_QWORD **)(a1 + 64);
  if (v21)
  {
    do
    {
      v24 = (_QWORD *)*v21;
      v25 = (void *)v21[6];
      if (v25)
      {
        v21[7] = v25;
        operator delete(v25);
      }
      v26 = (void *)v21[3];
      if (v26)
      {
        v21[4] = v26;
        operator delete(v26);
      }
      operator delete(v21);
      v21 = v24;
    }
    while (v24);
  }
  v22 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = 0;
  if (v22)
    operator delete(v22);
  v23 = *(void **)(a1 + 24);
  if (v23)
  {
    *(_QWORD *)(a1 + 32) = v23;
    operator delete(v23);
  }
}

BOOL sub_239AFAFC8(uint64_t a1, _QWORD *a2)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  std::ios_base *v10;
  _BOOL8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::ios_base *v16;
  const char *v17;
  size_t v18;
  size_t v19;
  void **p_dst;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int16x8_t v24;
  const char *v25;
  const char *v26;
  size_t v27;
  size_t v28;
  __int128 *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  const char *v33;
  size_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  const char *v40;
  size_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  const char *v47;
  size_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  const char *v54;
  size_t v55;
  size_t v56;
  void **v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  const char *v61;
  const char *v62;
  size_t v63;
  size_t v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  const char *v69;
  const char *v70;
  size_t v71;
  size_t v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  const char *v77;
  const char *v78;
  size_t v79;
  size_t v80;
  void **v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  const char *v85;
  size_t v86;
  size_t v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  const char *v92;
  size_t v93;
  size_t v94;
  void **v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  void **v102;
  void *v103;
  uint64_t *v104;
  void **v105;
  void *v106;
  char *v107;
  void **v109;
  void *v110;
  char v111;
  const void *v112[4];
  void *v113[3];
  uint64_t v114;
  uint64_t v115[8];
  __int128 v116;
  __int128 v117;
  int v118;
  uint64_t v119[19];
  void *__p[2];
  unint64_t v121;
  int v122;
  char v123;
  void *v124[2];
  unint64_t v125;
  void *v126[2];
  unint64_t v127;
  void **__dst;
  size_t v129;
  unint64_t v130;
  void *v131[2];
  void *v132;
  char v133;
  uint64_t v134;
  _BYTE v135[408];
  uint64_t v136[19];
  uint64_t v137;
  __int16 v138;
  char v139;
  char v140[16];
  uint64_t v141;
  int v142;
  __int16 v143;
  __int128 v144;
  unint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;

  v148 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a1 + 4))
  {
    sub_239A444D4((uint64_t)"unknown file", 865, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_2396F295C((uint64_t *)(a1 + 488), a1 + 8, (uint64_t)&v110);
  kdebug_trace();
  v4 = (_BYTE *)*a2;
  v5 = MEMORY[0x24BEDB840];
  v6 = MEMORY[0x24BEDB840] + 64;
  v7 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v8 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v9 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  v136[0] = MEMORY[0x24BEDB840] + 64;
  v134 = v8;
  *(_QWORD *)&v135[*(_QWORD *)(v8 - 24) - 8] = v9;
  v10 = (std::ios_base *)&v135[*(_QWORD *)(v134 - 24) - 8];
  std::ios_base::init(v10, v135);
  v10[1].__vftable = 0;
  v10[1].__fmtflags_ = -1;
  v134 = v5 + 24;
  v136[0] = v6;
  MEMORY[0x23B83DC80](v135);
  std::ofstream::open();
  if ((v135[*(_QWORD *)(v134 - 24) + 24] & 5) != 0)
  {
    v11 = 0;
    goto LABEL_155;
  }
  HIBYTE(v112[2]) = 18;
  strcpy((char *)v112, "CorePhotogrammetry");
  sub_2395AC84C(v112, v113);
  v12 = MEMORY[0x24BEDB870];
  v13 = MEMORY[0x24BEDB870] + 64;
  v14 = *(_QWORD *)(MEMORY[0x24BEDB800] + 8);
  v15 = *(_QWORD *)(MEMORY[0x24BEDB800] + 16);
  v119[0] = MEMORY[0x24BEDB870] + 64;
  v114 = v14;
  *(uint64_t *)((char *)&v115[-1] + *(_QWORD *)(v14 - 24)) = v15;
  v16 = (std::ios_base *)((char *)&v115[-1] + *(_QWORD *)(v114 - 24));
  std::ios_base::init(v16, v115);
  v16[1].__vftable = 0;
  v16[1].__fmtflags_ = -1;
  v114 = v12 + 24;
  v119[0] = v13;
  std::streambuf::basic_streambuf();
  v115[0] = MEMORY[0x24BEDB848] + 16;
  v116 = 0u;
  v117 = 0u;
  v118 = 16;
  sub_2396157EC((uint64_t)v131, 1);
  v146 = 0x60777A4C63727E13;
  v147 = 0;
  v17 = sub_239513718((char *)&v146);
  v18 = strlen(v17);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v19 = v18;
  if (v18 >= 0x17)
  {
    v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v21 = v18 | 7;
    v22 = v21 + 1;
    p_dst = (void **)operator new(v21 + 1);
    v129 = v19;
    v130 = v22 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_11;
  }
  HIBYTE(v130) = v18;
  p_dst = (void **)&__dst;
  if (v18)
LABEL_11:
    memmove(p_dst, v17, v19);
  *((_BYTE *)p_dst + v19) = 0;
  v23 = (_QWORD *)operator new();
  *v23 = &off_250AE05B0;
  v23[1] = v4;
  sub_23961580C((uint64_t)v131, (uint64_t)&__dst, (uint64_t)v23);
  v141 = 0x6669557D6F637C0ALL;
  v143 = 120;
  v142 = 1870559615;
  sub_23971A32C((uint64_t)&v141, v24);
  v26 = v25;
  v27 = strlen(v25);
  if (v27 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v28 = v27;
  if (v27 >= 0x17)
  {
    v30 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v27 | 7) != 0x17)
      v30 = v27 | 7;
    v31 = v30 + 1;
    v29 = (__int128 *)operator new(v30 + 1);
    *((_QWORD *)&v144 + 1) = v28;
    v145 = v31 | 0x8000000000000000;
    *(_QWORD *)&v144 = v29;
    goto LABEL_19;
  }
  HIBYTE(v145) = v27;
  v29 = &v144;
  if (v27)
LABEL_19:
    memmove(v29, v26, v28);
  *((_BYTE *)v29 + v28) = 0;
  v32 = (_QWORD *)operator new();
  *v32 = &off_250AE0820;
  v32[1] = v4 + 24;
  sub_23961580C((uint64_t)v131, (uint64_t)&v144, (uint64_t)v32);
  strcpy(v140, "-D@LJHrJ_L]E");
  v33 = sub_239510ECC((uint64_t)v140);
  v34 = strlen(v33);
  if (v34 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v35 = (void *)v34;
  if (v34 >= 0x17)
  {
    v37 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v34 | 7) != 0x17)
      v37 = v34 | 7;
    v38 = v37 + 1;
    v36 = operator new(v37 + 1);
    v126[1] = v35;
    v127 = v38 | 0x8000000000000000;
    v126[0] = v36;
    goto LABEL_27;
  }
  HIBYTE(v127) = v34;
  v36 = v126;
  if (v34)
LABEL_27:
    memmove(v36, v33, (size_t)v35);
  *((_BYTE *)v35 + (_QWORD)v36) = 0;
  v39 = (_QWORD *)operator new();
  *v39 = &off_250AF3FE0;
  v39[1] = v4 + 320;
  sub_23961580C((uint64_t)v131, (uint64_t)v126, (uint64_t)v39);
  v123 = 0;
  v122 = 386799994;
  v40 = sub_239AA618C((char *)&v122);
  v41 = strlen(v40);
  if (v41 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v42 = (void *)v41;
  if (v41 >= 0x17)
  {
    v44 = (v41 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v41 | 7) != 0x17)
      v44 = v41 | 7;
    v45 = v44 + 1;
    v43 = operator new(v44 + 1);
    v124[1] = v42;
    v125 = v45 | 0x8000000000000000;
    v124[0] = v43;
    goto LABEL_35;
  }
  HIBYTE(v125) = v41;
  v43 = v124;
  if (v41)
LABEL_35:
    memmove(v43, v40, (size_t)v42);
  *((_BYTE *)v42 + (_QWORD)v43) = 0;
  v46 = (_QWORD *)operator new();
  *v46 = &off_250AE07C0;
  v46[1] = v4 + 88;
  sub_23961580C((uint64_t)v131, (uint64_t)v124, (uint64_t)v46);
  v137 = 0x935180503181A6ALL;
  v139 = 0;
  v138 = 1822;
  v47 = (const char *)sub_23958E518((uint64_t)&v137);
  v48 = strlen(v47);
  if (v48 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v49 = (void *)v48;
  if (v48 >= 0x17)
  {
    v51 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v48 | 7) != 0x17)
      v51 = v48 | 7;
    v52 = v51 + 1;
    v50 = operator new(v51 + 1);
    __p[1] = v49;
    v121 = v52 | 0x8000000000000000;
    __p[0] = v50;
    goto LABEL_43;
  }
  HIBYTE(v121) = v48;
  v50 = __p;
  if (v48)
LABEL_43:
    memmove(v50, v47, (size_t)v49);
  *((_BYTE *)v49 + (_QWORD)v50) = 0;
  v53 = (_QWORD *)operator new();
  *v53 = &off_250AE07C0;
  v53[1] = v4 + 544;
  sub_23961580C((uint64_t)v131, (uint64_t)__p, (uint64_t)v53);
  if (SHIBYTE(v121) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v125) & 0x80000000) == 0)
    {
LABEL_46:
      if ((SHIBYTE(v127) & 0x80000000) == 0)
        goto LABEL_47;
      goto LABEL_53;
    }
  }
  else if ((SHIBYTE(v125) & 0x80000000) == 0)
  {
    goto LABEL_46;
  }
  operator delete(v124[0]);
  if ((SHIBYTE(v127) & 0x80000000) == 0)
  {
LABEL_47:
    if ((SHIBYTE(v145) & 0x80000000) == 0)
      goto LABEL_48;
    goto LABEL_54;
  }
LABEL_53:
  operator delete(v126[0]);
  if ((SHIBYTE(v145) & 0x80000000) == 0)
  {
LABEL_48:
    if ((SHIBYTE(v130) & 0x80000000) == 0)
      goto LABEL_49;
LABEL_55:
    operator delete(__dst);
    if (!v4[1256])
      goto LABEL_66;
    goto LABEL_56;
  }
LABEL_54:
  operator delete((void *)v144);
  if (SHIBYTE(v130) < 0)
    goto LABEL_55;
LABEL_49:
  if (!v4[1256])
    goto LABEL_66;
LABEL_56:
  *(_QWORD *)&v144 = 0x1924091412090B7BLL;
  DWORD2(v144) = 201753;
  v54 = sub_23958E4C8((uint64_t)&v144);
  v55 = strlen(v54);
  if (v55 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v56 = v55;
  if (v55 >= 0x17)
  {
    v58 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v55 | 7) != 0x17)
      v58 = v55 | 7;
    v59 = v58 + 1;
    v57 = (void **)operator new(v58 + 1);
    v129 = v56;
    v130 = v59 | 0x8000000000000000;
    __dst = v57;
    goto LABEL_63;
  }
  HIBYTE(v130) = v55;
  v57 = (void **)&__dst;
  if (v55)
LABEL_63:
    memmove(v57, v54, v56);
  *((_BYTE *)v57 + v56) = 0;
  if (!v4[1256])
    sub_2394875CC();
  v60 = (_QWORD *)operator new();
  *v60 = &off_250AE07F0;
  v60[1] = v4 + 1000;
  sub_23961580C((uint64_t)v131, (uint64_t)&__dst, (uint64_t)v60);
  if ((SHIBYTE(v130) & 0x80000000) == 0)
  {
LABEL_66:
    if (!v4[3520])
      goto LABEL_79;
    goto LABEL_67;
  }
  operator delete(__dst);
  if (!v4[3520])
    goto LABEL_79;
LABEL_67:
  *(_QWORD *)&v144 = 0x4C67617C63766113;
  sub_23958E5E0((uint64_t)&v144);
  v62 = v61;
  v63 = strlen(v61);
  if (v63 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v64 = v63;
  if (v63 >= 0x17)
  {
    v66 = (v63 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v63 | 7) != 0x17)
      v66 = v63 | 7;
    v67 = v66 + 1;
    v65 = (void **)operator new(v66 + 1);
    v129 = v64;
    v130 = v67 | 0x8000000000000000;
    __dst = v65;
  }
  else
  {
    HIBYTE(v130) = v63;
    v65 = (void **)&__dst;
    if (!v63)
      goto LABEL_75;
  }
  memmove(v65, v62, v64);
LABEL_75:
  *((_BYTE *)v65 + v64) = 0;
  if (!v4[3520])
    sub_2394875CC();
  v68 = (_QWORD *)operator new();
  *v68 = &off_250AF4010;
  v68[1] = v4 + 3056;
  sub_23961580C((uint64_t)v131, (uint64_t)&__dst, (uint64_t)v68);
  if (SHIBYTE(v130) < 0)
    operator delete(__dst);
LABEL_79:
  if (!v4[3720])
    goto LABEL_91;
  v144 = xmmword_239F0C0A0;
  sub_23950F8E4((uint64_t)&v144);
  v70 = v69;
  v71 = strlen(v69);
  if (v71 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v72 = v71;
  if (v71 >= 0x17)
  {
    v74 = (v71 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v71 | 7) != 0x17)
      v74 = v71 | 7;
    v75 = v74 + 1;
    v73 = (void **)operator new(v74 + 1);
    v129 = v72;
    v130 = v75 | 0x8000000000000000;
    __dst = v73;
  }
  else
  {
    HIBYTE(v130) = v71;
    v73 = (void **)&__dst;
    if (!v71)
      goto LABEL_88;
  }
  memmove(v73, v70, v72);
LABEL_88:
  *((_BYTE *)v73 + v72) = 0;
  if (!v4[3720])
    sub_2394875CC();
  v76 = (_QWORD *)operator new();
  *v76 = &off_250AF4040;
  v76[1] = v4 + 3528;
  sub_23961580C((uint64_t)v131, (uint64_t)&__dst, (uint64_t)v76);
  if (SHIBYTE(v130) < 0)
    operator delete(__dst);
LABEL_91:
  if (!v4[4440])
    goto LABEL_102;
  v144 = xmmword_239F10748;
  LOBYTE(v145) = 0;
  sub_2396EFA24((uint64_t)&v144);
  v78 = v77;
  v79 = strlen(v77);
  if (v79 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v80 = v79;
  if (v79 >= 0x17)
  {
    v82 = (v79 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v79 | 7) != 0x17)
      v82 = v79 | 7;
    v83 = v82 + 1;
    v81 = (void **)operator new(v82 + 1);
    v129 = v80;
    v130 = v83 | 0x8000000000000000;
    __dst = v81;
    goto LABEL_99;
  }
  HIBYTE(v130) = v79;
  v81 = (void **)&__dst;
  if (v79)
LABEL_99:
    memmove(v81, v78, v80);
  *((_BYTE *)v81 + v80) = 0;
  if (!v4[4440])
    sub_2394875CC();
  v84 = (_QWORD *)operator new();
  *v84 = &off_250AF4070;
  v84[1] = v4 + 3728;
  sub_23961580C((uint64_t)v131, (uint64_t)&__dst, (uint64_t)v84);
  if ((SHIBYTE(v130) & 0x80000000) == 0)
  {
LABEL_102:
    if (!v4[6192])
      goto LABEL_115;
    goto LABEL_103;
  }
  operator delete(__dst);
  if (!v4[6192])
    goto LABEL_115;
LABEL_103:
  *(_QWORD *)&v144 = 0x3D16100D12071062;
  DWORD2(v144) = 984081;
  v85 = sub_23958E4C8((uint64_t)&v144);
  v86 = strlen(v85);
  if (v86 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v87 = v86;
  if (v86 >= 0x17)
  {
    v89 = (v86 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v86 | 7) != 0x17)
      v89 = v86 | 7;
    v90 = v89 + 1;
    v88 = (void **)operator new(v89 + 1);
    v129 = v87;
    v130 = v90 | 0x8000000000000000;
    __dst = v88;
  }
  else
  {
    HIBYTE(v130) = v86;
    v88 = (void **)&__dst;
    if (!v86)
      goto LABEL_111;
  }
  memmove(v88, v85, v87);
LABEL_111:
  *((_BYTE *)v88 + v87) = 0;
  if (!v4[6192])
    sub_2394875CC();
  v91 = (_QWORD *)operator new();
  *v91 = &off_250AF40A0;
  v91[1] = v4 + 4448;
  sub_23961580C((uint64_t)v131, (uint64_t)&__dst, (uint64_t)v91);
  if (SHIBYTE(v130) < 0)
    operator delete(__dst);
LABEL_115:
  if (v4[6784])
  {
    *(_QWORD *)&v144 = 0x416A6C716E7B6C1ELL;
    BYTE12(v144) = 0;
    DWORD2(v144) = 1937732205;
    v92 = sub_239510ECC((uint64_t)&v144);
    v93 = strlen(v92);
    if (v93 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v94 = v93;
    if (v93 >= 0x17)
    {
      v96 = (v93 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v93 | 7) != 0x17)
        v96 = v93 | 7;
      v97 = v96 + 1;
      v95 = (void **)operator new(v96 + 1);
      v129 = v94;
      v130 = v97 | 0x8000000000000000;
      __dst = v95;
    }
    else
    {
      HIBYTE(v130) = v93;
      v95 = (void **)&__dst;
      if (!v93)
        goto LABEL_124;
    }
    memmove(v95, v92, v94);
LABEL_124:
    *((_BYTE *)v95 + v94) = 0;
    if (!v4[6784])
      sub_2394875CC();
    v98 = (_QWORD *)operator new();
    *v98 = &off_250AF40D0;
    v98[1] = v4 + 6200;
    sub_23961580C((uint64_t)v131, (uint64_t)&__dst, (uint64_t)v98);
    if (SHIBYTE(v130) < 0)
      operator delete(__dst);
  }
  sub_2395902F0((uint64_t)v131, &v114);
  v99 = v132;
  v7 = (uint64_t *)MEMORY[0x24BEDB7E8];
  v100 = MEMORY[0x24BEDB848];
  if (v132)
  {
    do
    {
      v101 = v99[5];
      if (v101)
        (*(void (**)(uint64_t))(*(_QWORD *)v101 + 8))(v101);
      v99 = (_QWORD *)*v99;
    }
    while (v99);
    v102 = (void **)v132;
    if (v132)
    {
      do
      {
        v109 = (void **)*v102;
        if (*((char *)v102 + 39) < 0)
          operator delete(v102[2]);
        operator delete(v102);
        v102 = v109;
      }
      while (v109);
    }
  }
  v103 = v131[0];
  v131[0] = 0;
  if (v103)
    operator delete(v103);
  std::stringbuf::str();
  v104 = (uint64_t *)MEMORY[0x24BEDB800];
  sub_2395ABE70((const void **)&__dst, (uint64_t)v113, (uint64_t)v131);
  if (SHIBYTE(v130) < 0)
    operator delete(__dst);
  v11 = v133 != 0;
  if (v133)
  {
    v105 = SHIBYTE(v132) >= 0 ? v131 : (void **)v131[0];
    v106 = SHIBYTE(v132) >= 0 ? (void *)HIBYTE(v132) : v131[1];
    sub_239458500(&v134, (uint64_t)v105, (uint64_t)v106);
    if (v133)
    {
      if (SHIBYTE(v132) < 0)
        operator delete(v131[0]);
    }
  }
  v114 = *v104;
  *(uint64_t *)((char *)&v115[-1] + *(_QWORD *)(v114 - 24)) = v104[3];
  v115[0] = v100 + 16;
  if (SBYTE7(v117) < 0)
    operator delete((void *)v116);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v119);
  if (v113[0])
  {
    v113[1] = v113[0];
    operator delete(v113[0]);
  }
  if (SHIBYTE(v112[2]) < 0)
    operator delete((void *)v112[0]);
  if (!std::filebuf::close())
    std::ios_base::clear((std::ios_base *)&v135[*(_QWORD *)(v134 - 24) - 8], *(_DWORD *)&v135[*(_QWORD *)(v134 - 24) + 24] | 4);
LABEL_155:
  v134 = *v7;
  *(_QWORD *)&v135[*(_QWORD *)(v134 - 24) - 8] = v7[3];
  MEMORY[0x23B83DC8C](v135);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v136);
  kdebug_trace();
  if (v11)
  {
    v107 = (char *)(a1 + 1168);
    if (!*(_BYTE *)(a1 + 1192))
    {
      *(_QWORD *)v107 = 0;
      *(_QWORD *)(a1 + 1176) = 0;
      *(_QWORD *)(a1 + 1184) = 0;
      sub_239490944(v107, *(_QWORD *)(a1 + 488), *(_QWORD *)(a1 + 496), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 496) - *(_QWORD *)(a1 + 488)) >> 3));
      *(_BYTE *)(a1 + 1192) = 1;
      if ((v111 & 0x80000000) == 0)
        return v11;
      goto LABEL_159;
    }
    sub_239A70694((uint64_t)v107, *(std::string **)(a1 + 488), *(std::string **)(a1 + 496), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 496) - *(_QWORD *)(a1 + 488)) >> 3));
  }
  if (v111 < 0)
LABEL_159:
    operator delete(v110);
  return v11;
}

void sub_239AFBF98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a73;
  char a74;

  if (a74 && a73 < 0)
    operator delete(__p);
  sub_239A90B68((uint64_t)&a28);
  if (a25)
    operator delete(a25);
  if (a23 < 0)
    operator delete(a18);
  sub_23955C978(&STACK[0x208]);
  if (a17 < 0)
  {
    operator delete(a12);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_239AFC1D0(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AFC1F4(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AB3DF8(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AFC230()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AFC268(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AFC28C(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AD0424(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AFC2C8()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AFC300(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AFC324(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AE2404(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AFC360()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AFC398(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AFC3BC(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AE85DC(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AFC3F8()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AFC430(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AFC454(uint64_t a1, _QWORD *a2, char a3)
{
  sub_239AF03C0(*(_QWORD *)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AFC490()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

void sub_239AFC4C8(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

BOOL sub_239AFC4EC(uint64_t a1, uint64_t *a2, char a3)
{
  sub_239AF9BD4(*(uint64_t **)(a1 + 8), a2, a3);
  return *(_DWORD *)((char *)a2 + *(_QWORD *)(*a2 - 24) + 32) == 0;
}

void sub_239AFC528()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB8F0] + 16;
  __cxa_throw(exception, (struct type_info *)&unk_250ADB198, MEMORY[0x24BEDB680]);
}

uint64_t sub_239AFC55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = sub_239A8DC0C(a1, a2) + 40;
  if (*(char *)(a2 + 63) < 0)
  {
    sub_23941A7F8((_BYTE *)v4, *(void **)(a2 + 40), *(_QWORD *)(a2 + 48));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)v4 = v5;
  }
  return a1;
}

void sub_239AFC5C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)(v1 + 16);
  if (v3)
  {
    do
    {
      v6 = (_QWORD *)*v3;
      v7 = v3[3];
      if (v7)
      {
        v8 = v3[4];
        v5 = (void *)v3[3];
        if (v8 != v7)
        {
          do
          {
            if (*(char *)(v8 - 1) < 0)
              operator delete(*(void **)(v8 - 24));
            v8 -= 24;
          }
          while (v8 != v7);
          v5 = (void *)v3[3];
        }
        v3[4] = v7;
        operator delete(v5);
      }
      operator delete(v3);
      v3 = v6;
    }
    while (v6);
  }
  v4 = *(void **)v1;
  *(_QWORD *)v1 = 0;
  if (v4)
    operator delete(v4);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239AFC640(uint64_t a1, uint64_t *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  pthread_rwlock_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  char *v34;
  _DWORD *v35;
  unsigned int v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  std::__shared_weak_count *v51;
  unint64_t *p_shared_owners;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  _QWORD v62[3];
  _QWORD *v63;
  uint64_t v64;
  _BYTE v65[24];
  _BYTE *v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v7 = *a2;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = a1 + 56;
  *(_QWORD *)(a1 + 64) = a1 + 56;
  *(_OWORD *)(a1 + 72) = xmmword_239EC69E0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)a1 = &off_250AF8968;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 240) = a2[2];
  v8 = a2[3];
  *(_QWORD *)(a1 + 248) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = (uint64_t *)(a1 + 256);
  *(_OWORD *)(a1 + 304) = 0uLL;
  *(_OWORD *)(a1 + 320) = 0uLL;
  v60 = (uint64_t *)(a1 + 256);
  v61 = (uint64_t *)(a1 + 272);
  v12 = (_QWORD *)(a1 + 288);
  v13 = (_QWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 272) = 0uLL;
  *(_OWORD *)(a1 + 288) = 0uLL;
  *(_OWORD *)(a1 + 256) = 0uLL;
  *(_DWORD *)(a1 + 336) = 1065353216;
  sub_2397A1618((pthread_mutex_t *)(a1 + 344));
  if (!*v12)
  {
    v34 = (char *)operator new(0x108uLL);
    *((_DWORD *)v34 + 6) = 0x7FFFFFFF;
    v35 = v34 + 24;
    *(_OWORD *)(v34 + 8) = 0u;
    *((_OWORD *)v34 + 2) = 0u;
    *(_QWORD *)v34 = &off_250AF8988;
    *((_OWORD *)v34 + 3) = 0u;
    *((_OWORD *)v34 + 4) = 0u;
    v34[80] = 0;
    *(_OWORD *)(v34 + 88) = 0u;
    sub_2397A1618((pthread_mutex_t *)(v34 + 200));
    v36 = *((_DWORD *)v34 + 6);
    if (v36 >= 0x7FFFFFFF)
    {
      v36 = 0x7FFFFFFF;
      *v35 = 0x7FFFFFFF;
    }
    else if (v36 < 2)
    {
      v36 = 1;
    }
    *((_DWORD *)v34 + 6) = v36;
    pthread_cond_init((pthread_cond_t *)(v34 + 104), 0);
    pthread_cond_init((pthread_cond_t *)(v34 + 152), 0);
    v51 = *(std::__shared_weak_count **)(a1 + 296);
    *(_QWORD *)(a1 + 288) = v35;
    *(_QWORD *)(a1 + 296) = v34;
    v11 = v60;
    if (v51)
    {
      p_shared_owners = (unint64_t *)&v51->__shared_owners_;
      do
        v53 = __ldaxr(p_shared_owners);
      while (__stlxr(v53 - 1, p_shared_owners));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
  }
  if (!*v11)
  {
    v14 = operator new(0x120uLL);
    v14[1] = 0;
    v14[2] = 0;
    *v14 = &off_250AE9800;
    v15 = sub_2397A1740((uint64_t)(v14 + 3));
    v16 = *(std::__shared_weak_count **)(a1 + 264);
    *(_QWORD *)(a1 + 256) = v15;
    *(_QWORD *)(a1 + 264) = v14;
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v19 = *v11;
    v20 = (pthread_rwlock_t *)(*v11 + 24);
    j__pthread_rwlock_wrlock(v20);
    *(_BYTE *)(v19 + 16) = 1;
    j__pthread_rwlock_unlock(v20);
    sub_2397A195C(v19);
    v21 = (_QWORD *)operator new();
    *v21 = &off_250AF89C0;
    v21[1] = a1;
    *(_QWORD *)(v19 + 224) = v21;
    sub_2397A1878((pthread_t *)v19);
  }
  if (!*v61)
  {
    v22 = *(_QWORD *)(a1 + 240);
    v23 = *(_QWORD *)(a1 + 248);
    if (v23)
    {
      v24 = (unint64_t *)(v23 + 8);
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
    }
    v26 = *(std::__shared_weak_count **)(a1 + 280);
    *(_QWORD *)(a1 + 272) = v22;
    *(_QWORD *)(a1 + 280) = v23;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
      v22 = *v61;
    }
    if (!v22)
    {
      v54 = *(_QWORD *)(a1 + 232);
      v55 = operator new(0x178uLL);
      v55[1] = 0;
      v55[2] = 0;
      *v55 = &off_250ADB8B0;
      v56 = sub_2397A2A50((uint64_t)(v55 + 3), v54, 0);
      v57 = *(std::__shared_weak_count **)(a1 + 280);
      *(_QWORD *)(a1 + 272) = v56;
      *(_QWORD *)(a1 + 280) = v55;
      if (v57)
      {
        v58 = (unint64_t *)&v57->__shared_owners_;
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
    }
  }
  sub_239467C88(a1);
  if (*(_QWORD *)(a1 + 328))
  {
    v29 = *(_QWORD **)(a1 + 320);
    if (v29)
    {
      do
      {
        v30 = (_QWORD *)*v29;
        operator delete(v29);
        v29 = v30;
      }
      while (v30);
    }
    *(_QWORD *)(a1 + 320) = 0;
    v31 = *(_QWORD *)(a1 + 312);
    if (v31)
    {
      for (i = 0; i != v31; ++i)
        *(_QWORD *)(*v13 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 328) = 0;
  }
  v33 = a3[3];
  if (!v33)
    goto LABEL_33;
  if ((_QWORD *)v33 != a3)
  {
    v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
LABEL_33:
    v63 = (_QWORD *)v33;
    goto LABEL_38;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v62);
LABEL_38:
  v64 = a1;
  v66 = 0;
  v37 = operator new(0x30uLL);
  *v37 = &off_250AF8C60;
  v38 = (uint64_t)v63;
  if (!v63)
  {
LABEL_41:
    v37[4] = v38;
    goto LABEL_43;
  }
  if (v63 != v62)
  {
    v38 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_41;
  }
  v37[4] = v37 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_43:
  v37[5] = v64;
  v66 = v37;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v39 = v66;
  if (v66 == v65)
  {
    v40 = 4;
    v39 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_51;
    v40 = 5;
  }
  (*(void (**)(void))(*v39 + 8 * v40))();
LABEL_51:
  v41 = v63;
  if (v63 == v62)
  {
    v42 = 4;
    v41 = v62;
  }
  else
  {
    if (!v63)
      goto LABEL_56;
    v42 = 5;
  }
  (*(void (**)(void))(*v41 + 8 * v42))();
LABEL_56:
  v43 = a4[3];
  if (!v43)
  {
LABEL_59:
    v63 = (_QWORD *)v43;
    goto LABEL_61;
  }
  if ((_QWORD *)v43 != a4)
  {
    v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 16))(v43);
    goto LABEL_59;
  }
  v63 = v62;
  (*(void (**)(_QWORD *, _QWORD *))(*a4 + 24))(a4, v62);
LABEL_61:
  v64 = a1;
  v66 = 0;
  v44 = operator new(0x30uLL);
  *v44 = &off_250AF8CA8;
  v45 = (uint64_t)v63;
  if (!v63)
  {
LABEL_64:
    v44[4] = v45;
    goto LABEL_66;
  }
  if (v63 != v62)
  {
    v45 = (*(uint64_t (**)(void))(*v63 + 16))();
    goto LABEL_64;
  }
  v44[4] = v44 + 1;
  (*(void (**)(_QWORD *))(v62[0] + 24))(v62);
LABEL_66:
  v44[5] = v64;
  v66 = v44;
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  if (!*(_QWORD *)(a1 + 328))
  {
    if (!v66)
      sub_2394172E0();
    (*(void (**)(_BYTE *))(*(_QWORD *)v66 + 48))(v66);
  }
  sub_2397A16B4((pthread_mutex_t *)(a1 + 344));
  v46 = v66;
  if (v66 == v65)
  {
    v47 = 4;
    v46 = v65;
  }
  else
  {
    if (!v66)
      goto LABEL_74;
    v47 = 5;
  }
  (*(void (**)(void))(*v46 + 8 * v47))();
LABEL_74:
  v48 = v63;
  if (v63 == v62)
  {
    v49 = 4;
    v48 = v62;
    goto LABEL_78;
  }
  if (v63)
  {
    v49 = 5;
LABEL_78:
    (*(void (**)(void))(*v48 + 8 * v49))();
  }
  return a1;
}

void sub_239AFCCC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  _QWORD **v22;
  uint64_t v23;
  pthread_mutex_t *v24;
  std::__shared_weak_count *v25;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  std::__shared_weak_count::~__shared_weak_count(v25);
  operator delete(v27);
  sub_2397A163C(v24);
  sub_239420950(v23);
  sub_239A4D7C0(a10);
  sub_239416DA0(a12);
  sub_239416DA0(a11);
  sub_239A74534(v21 + 224);
  v28 = *v22;
  if (*v22 == (_QWORD *)(v21 + 176))
  {
    v29 = 4;
    v28 = (_QWORD *)(v21 + 176);
  }
  else
  {
    if (!v28)
      goto LABEL_6;
    v29 = 5;
  }
  (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_6:
  v30 = *(_QWORD **)(v21 + 168);
  if (v30 == (_QWORD *)(v21 + 144))
  {
    v31 = 4;
    v30 = (_QWORD *)(v21 + 144);
  }
  else
  {
    if (!v30)
      goto LABEL_11;
    v31 = 5;
  }
  (*(void (**)(void))(*v30 + 8 * v31))();
LABEL_11:
  sub_2394679A8(v21);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AFCE9C(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF8CA8;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239AFCEF8(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF8CA8;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AFCF64(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF8CA8;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239AFCFE0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239AFCFF4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF8CA8;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239AFD06C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239AFD0A0(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239AFD0F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  _QWORD v11[4];

  v11[3] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = a1 + 8;
    if (v1 == v3)
    {
      v10 = v9;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v3 + 24))(v3, v9);
    }
    else
    {
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    }
  }
  else
  {
    v10 = 0;
  }
  v4 = v2 + 176;
  if ((_QWORD *)(v2 + 176) != v9)
  {
    v5 = v10;
    v6 = *(_QWORD *)(v2 + 200);
    if (v10 == v9)
    {
      if (v6 == v4)
      {
        (*(void (**)(_QWORD *, _QWORD *))(v9[0] + 24))(v9, v11);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = 0;
        (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v2 + 200) + 24))(*(_QWORD *)(v2 + 200), v9);
        (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
        *(_QWORD *)(v2 + 200) = 0;
        v10 = v9;
        (*(void (**)(_QWORD *, uint64_t))(v11[0] + 24))(v11, v2 + 176);
        (*(void (**)(_QWORD *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v9[0] + 24))(v9, v2 + 176);
        (*(void (**)(_QWORD *))(*v10 + 32))(v10);
        v10 = *(_QWORD **)(v2 + 200);
      }
      *(_QWORD *)(v2 + 200) = v4;
    }
    else if (v6 == v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 24))(v2 + 176, v9);
      (*(void (**)(_QWORD))(**(_QWORD **)(v2 + 200) + 32))(*(_QWORD *)(v2 + 200));
      *(_QWORD *)(v2 + 200) = v10;
      v10 = v9;
    }
    else
    {
      v10 = *(_QWORD **)(v2 + 200);
      *(_QWORD *)(v2 + 200) = v5;
    }
  }
  result = v10;
  if (v10 == v9)
  {
    v8 = 4;
    result = v9;
  }
  else
  {
    if (!v10)
      return result;
    v8 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v8))();
}

void sub_239AFD2E4(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

_QWORD *sub_239AFD2F0(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_250AF8C60;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_239AFD34C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_250AF8C60;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AFD3B8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = operator new(0x30uLL);
  *v2 = &off_250AF8C60;
  v3 = v2 + 1;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    if (v4 == a1 + 8)
    {
      v2[4] = v3;
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
      goto LABEL_6;
    }
    v4 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 16))(v4, v3);
  }
  v2[4] = v4;
LABEL_6:
  v2[5] = *(_QWORD *)(a1 + 40);
  return v2;
}

void sub_239AFD434(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239AFD448(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t result;

  *a2 = &off_250AF8C60;
  v4 = a2 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    if (result == a1 + 8)
    {
      a2[4] = v4;
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 24))(*(_QWORD *)(a1 + 32));
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v4);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  a2[5] = *(_QWORD *)(a1 + 40);
  return result;
}

_QWORD *sub_239AFD4C0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  result = *(_QWORD **)(a1 + 32);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_239AFD4F4(char *__p)
{
  char *v2;
  char *v3;
  uint64_t v4;

  v2 = __p + 8;
  v3 = (char *)*((_QWORD *)__p + 4);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v3 + 8 * v4))();
  }
  operator delete(__p);
}

_QWORD *sub_239AFD544(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  _QWORD v8[3];
  _QWORD *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a1 + 32;
  v2 = *(_QWORD *)(a1 + 32);
  v4 = (_QWORD *)(*(_QWORD *)(v3 + 8) + 144);
  if (v2)
  {
    v5 = a1 + 8;
    if (v2 == v5)
    {
      v9 = v8;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v5 + 24))(v5, v8);
    }
    else
    {
      v9 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
    }
  }
  else
  {
    v9 = 0;
  }
  sub_239467AE8(v8, v4);
  result = v9;
  if (v9 == v8)
  {
    v7 = 4;
    result = v8;
  }
  else
  {
    if (!v9)
      return result;
    v7 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v7))();
}

void sub_239AFD624(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239AFD648(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  int *v3;
  BOOL v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  BOOL v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  int8x8_t v35;
  uint8x8_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  int8x8_t v43;
  uint8x8_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t *v79;
  __int128 v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  __int128 v90;
  char v91;
  __int128 v92;
  __int128 v93;
  char v94;
  _BYTE v95[24];
  _BYTE *v96;
  _BYTE v97[24];
  _BYTE *v98;
  _QWORD v99[3];
  _QWORD *v100;
  _BYTE v101[24];
  _BYTE *v102;
  _BYTE v103[24];
  _BYTE *v104;
  _BYTE v105[24];
  _BYTE *v106;
  uint64_t v107;

  v107 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned int **)(v1 + 288);
  if (v2)
  {
    sub_239AFE3A4((uint64_t)&v93, v2);
    v3 = (int *)v93;
    if ((_QWORD)v93)
      v4 = v94 == 0;
    else
      v4 = 1;
    if (!v4)
    {
      v8 = (_QWORD *)(v1 + 304);
      while (2)
      {
        v10 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
        *(_QWORD *)&v92 = v3;
        *((_QWORD *)&v92 + 1) = *((_QWORD *)&v93 + 1);
        if (*((_QWORD *)&v93 + 1))
        {
          v11 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 1, v11));
        }
        v13 = *v3;
        switch(*v3)
        {
          case 0:
            if (v10)
            {
              p_shared_owners = (unint64_t *)&v10->__shared_owners_;
              do
                v15 = __ldxr(p_shared_owners);
              while (__stxr(v15 + 1, p_shared_owners));
              v16 = *((_QWORD *)v3 + 1);
              do
                v17 = __ldxr(p_shared_owners);
              while (__stxr(v17 + 1, p_shared_owners));
            }
            else
            {
              v16 = *((_QWORD *)v3 + 1);
            }
            v106 = 0;
            v50 = operator new(0x20uLL);
            *v50 = &off_250AF89E8;
            v50[1] = v3;
            v50[2] = v10;
            v50[3] = v1;
            v106 = v50;
            v51 = sub_239AFE59C(v1, v16, (uint64_t)v105);
            v52 = v106;
            if (v106 == v105)
            {
              v52 = v105;
              v53 = 4;
            }
            else
            {
              if (!v106)
                goto LABEL_82;
              v53 = 5;
            }
            (*(void (**)(void))(*v52 + 8 * v53))();
LABEL_82:
            if ((v51 & 1) == 0)
              sub_239AFE6F4(*(unsigned int **)(v1 + 288), &v92);
            if (v10)
            {
              v58 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v58);
              while (__stlxr(v59 - 1, v58));
              goto LABEL_166;
            }
            goto LABEL_168;
          case 1:
            if (v10)
            {
              v29 = (unint64_t *)&v10->__shared_owners_;
              do
                v30 = __ldxr(v29);
              while (__stxr(v30 + 1, v29));
              v31 = *((unsigned __int8 *)v3 + 72);
              v32 = *((_QWORD *)v3 + 6);
              do
                v33 = __ldxr(v29);
              while (__stxr(v33 + 1, v29));
              if (!v31)
              {
LABEL_77:
                v104 = 0;
                v54 = operator new(0x20uLL);
                *v54 = &off_250AF8AB0;
                v54[1] = v3;
                v54[2] = v10;
                v54[3] = v1;
                v104 = v54;
                v55 = sub_239AFE59C(v1, v32, (uint64_t)v103);
                v56 = v104;
                if (v104 == v103)
                {
                  v56 = v103;
                  v57 = 4;
LABEL_160:
                  (*(void (**)(void))(*v56 + 8 * v57))();
                }
                else if (v104)
                {
                  v57 = 5;
                  goto LABEL_160;
                }
                if ((v55 & 1) == 0)
                  sub_239AFE6F4(*(unsigned int **)(v1 + 288), &v92);
                goto LABEL_163;
              }
            }
            else
            {
              v32 = *((_QWORD *)v3 + 6);
              if (!*((_BYTE *)v3 + 72))
                goto LABEL_77;
            }
            v102 = 0;
            v34 = operator new(0x20uLL);
            *v34 = &off_250AF8AB0;
            v34[1] = v3;
            v34[2] = v10;
            v34[3] = v1;
            v102 = v34;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v35 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v35)
              goto LABEL_151;
            v36 = (uint8x8_t)vcnt_s8(v35);
            v36.i16[0] = vaddlv_u8(v36);
            if (v36.u32[0] > 1uLL)
            {
              v37 = v32;
              if (*(_QWORD *)&v35 <= v32)
                v37 = v32 % *(_QWORD *)&v35;
            }
            else
            {
              v37 = (*(_QWORD *)&v35 - 1) & v32;
            }
            v71 = *(_QWORD **)(*v8 + 8 * v37);
            if (!v71 || (v72 = (_QWORD *)*v71) == 0)
            {
LABEL_151:
              v76 = 0;
              goto LABEL_152;
            }
            if (v36.u32[0] < 2uLL)
            {
              v73 = *(_QWORD *)&v35 - 1;
              while (1)
              {
                v75 = v72[1];
                if (v75 == v32)
                {
                  if (v72[2] == v32)
                    goto LABEL_184;
                }
                else if ((v75 & v73) != v37)
                {
                  goto LABEL_151;
                }
                v72 = (_QWORD *)*v72;
                if (!v72)
                  goto LABEL_151;
              }
            }
            while (1)
            {
              v74 = v72[1];
              if (v74 == v32)
                break;
              if (v74 >= *(_QWORD *)&v35)
                v74 %= *(_QWORD *)&v35;
              if (v74 != v37)
                goto LABEL_151;
LABEL_141:
              v72 = (_QWORD *)*v72;
              if (!v72)
                goto LABEL_151;
            }
            if (v72[2] != v32)
              goto LABEL_141;
LABEL_184:
            if (!v102)
              sub_2394172E0();
            (*(void (**)(_BYTE *))(*(_QWORD *)v102 + 48))(v102);
            v76 = 1;
LABEL_152:
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v77 = v102;
            if (v102 == v101)
            {
              v77 = v101;
              v78 = 4;
LABEL_156:
              (*(void (**)(void))(*v77 + 8 * v78))();
            }
            else if (v102)
            {
              v78 = 5;
              goto LABEL_156;
            }
            if ((v76 & 1) == 0)
            {
              sub_239A444D4((uint64_t)"unknown file", 793, (uint64_t)"", (void (*)(void *))sub_239A4463C);
              sub_239A4475C();
              abort();
            }
LABEL_163:
            if (v10)
            {
              v79 = (unint64_t *)&v10->__shared_owners_;
              do
                v59 = __ldaxr(v79);
              while (__stlxr(v59 - 1, v79));
              goto LABEL_166;
            }
LABEL_168:
            sub_239AFE3A4((uint64_t)&v90, *(unsigned int **)(v1 + 288));
            v80 = v90;
            v90 = 0uLL;
            v81 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
            v93 = v80;
            if (v81)
            {
              v82 = (unint64_t *)&v81->__shared_owners_;
              do
                v83 = __ldaxr(v82);
              while (__stlxr(v83 - 1, v82));
              if (!v83)
              {
                ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                std::__shared_weak_count::__release_weak(v81);
              }
            }
            v94 = v91;
            v84 = (std::__shared_weak_count *)*((_QWORD *)&v90 + 1);
            if (!*((_QWORD *)&v90 + 1))
              goto LABEL_177;
            v85 = (unint64_t *)(*((_QWORD *)&v90 + 1) + 8);
            do
              v86 = __ldaxr(v85);
            while (__stlxr(v86 - 1, v85));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
              std::__shared_weak_count::__release_weak(v84);
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
              {
LABEL_178:
                v88 = (unint64_t *)&v87->__shared_owners_;
                do
                  v89 = __ldaxr(v88);
                while (__stlxr(v89 - 1, v88));
                if (!v89)
                {
                  ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                  std::__shared_weak_count::__release_weak(v87);
                }
              }
            }
            else
            {
LABEL_177:
              v87 = (std::__shared_weak_count *)*((_QWORD *)&v92 + 1);
              if (*((_QWORD *)&v92 + 1))
                goto LABEL_178;
            }
            v3 = (int *)v93;
            if ((_QWORD)v93)
              v9 = v94 == 0;
            else
              v9 = 1;
            if (v9)
              break;
            continue;
          case 2:
            if (v10)
            {
              v24 = (unint64_t *)&v10->__shared_owners_;
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              v26 = *((_QWORD *)v3 + 14);
              do
                v27 = __ldxr(v24);
              while (__stxr(v27 + 1, v24));
            }
            else
            {
              v26 = *((_QWORD *)v3 + 14);
            }
            v100 = 0;
            v42 = operator new(0x20uLL);
            *v42 = &off_250AF8B40;
            v42[1] = v3;
            v42[2] = v10;
            v42[3] = v1;
            v100 = v42;
            *(_QWORD *)&v90 = v26;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v43 = *(int8x8_t *)(v1 + 312);
            if (!*(_QWORD *)&v43)
              goto LABEL_122;
            v44 = (uint8x8_t)vcnt_s8(v43);
            v44.i16[0] = vaddlv_u8(v44);
            if (v44.u32[0] > 1uLL)
            {
              v45 = v26;
              if (*(_QWORD *)&v43 <= v26)
                v45 = v26 % *(_QWORD *)&v43;
            }
            else
            {
              v45 = (*(_QWORD *)&v43 - 1) & v26;
            }
            v62 = *(_QWORD **)(*v8 + 8 * v45);
            if (!v62)
              goto LABEL_122;
            v63 = (_QWORD *)*v62;
            if (!v63)
              goto LABEL_122;
            if (v44.u32[0] < 2uLL)
            {
              v64 = *(_QWORD *)&v43 - 1;
              while (1)
              {
                v66 = v63[1];
                if (v66 == v26)
                {
                  if (v63[2] == v26)
                    goto LABEL_121;
                }
                else if ((v66 & v64) != v45)
                {
                  goto LABEL_122;
                }
                v63 = (_QWORD *)*v63;
                if (!v63)
                  goto LABEL_122;
              }
            }
            while (1)
            {
              v65 = v63[1];
              if (v65 == v26)
              {
                if (v63[2] == v26)
                {
LABEL_121:
                  v67 = 0;
                  goto LABEL_123;
                }
              }
              else
              {
                if (v65 >= *(_QWORD *)&v43)
                  v65 %= *(_QWORD *)&v43;
                if (v65 != v45)
                {
LABEL_122:
                  sub_239465800(v1 + 304, (unint64_t *)&v90, &v90);
                  sub_239A7798C(*(_QWORD *)(v1 + 272), v99);
                  v67 = 1;
LABEL_123:
                  sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
                  v68 = v100;
                  if (v100 == v99)
                  {
                    v68 = v99;
                    v69 = 4;
LABEL_127:
                    (*(void (**)(void))(*v68 + 8 * v69))();
                  }
                  else if (v100)
                  {
                    v69 = 5;
                    goto LABEL_127;
                  }
                  if ((v67 & 1) == 0)
                    sub_239AFE6F4(*(unsigned int **)(v1 + 288), &v92);
                  if (v10)
                  {
                    v70 = (unint64_t *)&v10->__shared_owners_;
                    do
                      v59 = __ldaxr(v70);
                    while (__stlxr(v59 - 1, v70));
                    goto LABEL_166;
                  }
                  goto LABEL_168;
                }
              }
              v63 = (_QWORD *)*v63;
              if (!v63)
                goto LABEL_122;
            }
          case 3:
            v90 = *(_OWORD *)(v1 + 208);
            v28 = *((_QWORD *)v3 + 24);
            if (v28)
              (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)v28 + 48))(v28, &v90);
            goto LABEL_168;
          default:
            if (v13 != 99)
            {
              if (v13 != 100)
                goto LABEL_168;
              if (v10)
              {
                v18 = (unint64_t *)&v10->__shared_owners_;
                do
                  v19 = __ldxr(v18);
                while (__stxr(v19 + 1, v18));
                do
                  v20 = __ldxr(v18);
                while (__stxr(v20 + 1, v18));
              }
              v96 = 0;
              v46 = operator new(0x20uLL);
              *v46 = &off_250AF8BD0;
              v46[1] = v3;
              v46[2] = v10;
              v46[3] = v1;
              v96 = v46;
              sub_2397A1694((pthread_mutex_t *)(v1 + 344));
              v47 = *(_QWORD *)(v1 + 328);
              if (!v47)
              {
                if (!v96)
                  sub_2394172E0();
                (*(void (**)(_BYTE *))(*(_QWORD *)v96 + 48))(v96);
              }
              sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
              v48 = v96;
              if (v96 == v95)
              {
                v48 = v95;
                v49 = 4;
              }
              else
              {
                if (!v96)
                {
LABEL_98:
                  if (v47)
                    sub_239AFE6F4(*(unsigned int **)(v1 + 288), &v92);
                  if (!v10)
                    goto LABEL_168;
                  v61 = (unint64_t *)&v10->__shared_owners_;
                  do
                    v59 = __ldaxr(v61);
                  while (__stlxr(v59 - 1, v61));
                  goto LABEL_166;
                }
                v49 = 5;
              }
              (*(void (**)(void))(*v48 + 8 * v49))();
              goto LABEL_98;
            }
            if (v10)
            {
              v21 = (unint64_t *)&v10->__shared_owners_;
              do
                v22 = __ldxr(v21);
              while (__stxr(v22 + 1, v21));
              do
                v23 = __ldxr(v21);
              while (__stxr(v23 + 1, v21));
            }
            v98 = 0;
            v38 = operator new(0x20uLL);
            *v38 = &off_250AF8B88;
            v38[1] = v3;
            v38[2] = v10;
            v38[3] = v1;
            v98 = v38;
            sub_2397A1694((pthread_mutex_t *)(v1 + 344));
            v39 = *(_QWORD *)(v1 + 328);
            if (!v39)
            {
              if (!v98)
                sub_2394172E0();
              (*(void (**)(_BYTE *))(*(_QWORD *)v98 + 48))(v98);
            }
            sub_2397A16B4((pthread_mutex_t *)(v1 + 344));
            v40 = v98;
            if (v98 == v97)
            {
              v40 = v97;
              v41 = 4;
            }
            else
            {
              if (!v98)
              {
LABEL_90:
                if (v39)
                  sub_239AFE6F4(*(unsigned int **)(v1 + 288), &v92);
                if (!v10)
                  goto LABEL_168;
                v60 = (unint64_t *)&v10->__shared_owners_;
                do
                  v59 = __ldaxr(v60);
                while (__stlxr(v59 - 1, v60));
LABEL_166:
                if (!v59)
                {
                  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
                  std::__shared_weak_count::__release_weak(v10);
                }
                goto LABEL_168;
              }
              v41 = 5;
            }
            (*(void (**)(void))(*v40 + 8 * v41))();
            goto LABEL_90;
        }
        break;
      }
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v93 + 1);
    if (*((_QWORD *)&v93 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v93 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
}

void sub_239AFDF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,char *a34)
{
  std::__shared_weak_count *v34;
  pthread_mutex_t *v35;
  char *v37;
  uint64_t v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;

  sub_2397A16B4(v35);
  v37 = a34;
  if (a34 == &a31)
  {
    v38 = 4;
    v37 = &a31;
  }
  else
  {
    if (!a34)
    {
LABEL_6:
      if (v34)
      {
        p_shared_owners = (unint64_t *)&v34->__shared_owners_;
        do
          v40 = __ldaxr(p_shared_owners);
        while (__stlxr(v40 - 1, p_shared_owners));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      if (a14)
      {
        v41 = (unint64_t *)&a14->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
          std::__shared_weak_count::__release_weak(a14);
        }
      }
      if (a16)
      {
        v43 = (unint64_t *)&a16->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))a16->__on_zero_shared)(a16);
          std::__shared_weak_count::__release_weak(a16);
        }
      }
      _Unwind_Resume(a1);
    }
    v38 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v37 + 8 * v38))();
  goto LABEL_6;
}

uint64_t sub_239AFE3A4(uint64_t a1, unsigned int *a2)
{
  pthread_mutex_t *v4;
  __int128 v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v17;

  v4 = (pthread_mutex_t *)(a2 + 44);
  sub_2397A1694((pthread_mutex_t *)(a2 + 44));
  if (*((_QWORD *)a2 + 6))
  {
LABEL_4:
    v5 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                   + 16 * *((_QWORD *)a2 + 5));
    v17 = v5;
    if (*((_QWORD *)&v5 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v5 + 1) + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
      v8 = *(std::__shared_weak_count **)(*(_QWORD *)(*((_QWORD *)a2 + 2)
                                                    + ((*((_QWORD *)a2 + 5) >> 5) & 0x7FFFFFFFFFFFFF8))
                                        + 16 * *((_QWORD *)a2 + 5)
                                        + 8);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
    }
    v11 = *((_QWORD *)a2 + 6) - 1;
    v12 = *((_QWORD *)a2 + 5) + 1;
    *((_QWORD *)a2 + 5) = v12;
    *((_QWORD *)a2 + 6) = v11;
    if (v12 >= 0x200)
    {
      operator delete(**((void ***)a2 + 2));
      *((_QWORD *)a2 + 2) += 8;
      v11 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a2 + 5) -= 256;
    }
    if (v11 < *a2)
      pthread_cond_signal((pthread_cond_t *)(a2 + 20));
    *(_OWORD *)a1 = v17;
    if (*((_QWORD *)&v17 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v17 + 1) + 16))(*((_QWORD *)&v17 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v17 + 1));
      }
    }
    else
    {
      *(_BYTE *)(a1 + 16) = 1;
    }
  }
  else
  {
    while (!*((_BYTE *)a2 + 56))
    {
      ++*((_QWORD *)a2 + 9);
      pthread_cond_wait((pthread_cond_t *)(a2 + 32), v4);
      --*((_QWORD *)a2 + 9);
      if (*((_QWORD *)a2 + 6))
        goto LABEL_4;
    }
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
  return sub_2397A16B4(v4);
}

void sub_239AFE570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pthread_mutex_t *v9;

  sub_239A4D7C0((uint64_t)&a9);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_239AFE59C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  pthread_mutex_t *v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = (pthread_mutex_t *)(a1 + 344);
  sub_2397A1694((pthread_mutex_t *)(a1 + 344));
  v7 = *(int8x8_t *)(a1 + 312);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8(v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v9 = a2;
      if (*(_QWORD *)&v7 <= a2)
        v9 = a2 % *(_QWORD *)&v7;
    }
    else
    {
      v9 = (*(_QWORD *)&v7 - 1) & a2;
    }
    v10 = *(_QWORD **)(*(_QWORD *)(a1 + 304) + 8 * v9);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (v11)
      {
        if (v8.u32[0] < 2uLL)
        {
          v12 = *(_QWORD *)&v7 - 1;
          while (1)
          {
            v14 = v11[1];
            if (v14 == a2)
            {
              if (v11[2] == a2)
                goto LABEL_21;
            }
            else if ((v14 & v12) != v9)
            {
              goto LABEL_22;
            }
            v11 = (_QWORD *)*v11;
            if (!v11)
              goto LABEL_22;
          }
        }
        do
        {
          v13 = v11[1];
          if (v13 == a2)
          {
            if (v11[2] == a2)
            {
LABEL_21:
              v15 = 0;
              goto LABEL_24;
            }
          }
          else
          {
            if (v13 >= *(_QWORD *)&v7)
              v13 %= *(_QWORD *)&v7;
            if (v13 != v9)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
LABEL_22:
  v16 = *(_QWORD *)(a3 + 24);
  if (!v16)
    sub_2394172E0();
  (*(void (**)(uint64_t))(*(_QWORD *)v16 + 48))(v16);
  v15 = 1;
LABEL_24:
  sub_2397A16B4(v6);
  return v15;
}

void sub_239AFE6DC(_Unwind_Exception *a1)
{
  pthread_mutex_t *v1;

  sub_2397A16B4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239AFE6F4(unsigned int *a1, _OWORD *a2)
{
  pthread_mutex_t *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  void *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  BOOL v36;
  int64_t v37;
  unint64_t v38;
  char *v39;
  void *v40;
  char *v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  char *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  _OWORD *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  size_t v103;
  char *v104;
  unint64_t v105;
  char *v106;
  char *v107;
  int64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 *v114;
  _OWORD *v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  void *v119;
  _OWORD *v120;

  v4 = (pthread_mutex_t *)(a1 + 44);
  sub_2397A1694((pthread_mutex_t *)(a1 + 44));
  v5 = *((_QWORD *)a1 + 6);
  if (v5 >= *a1)
  {
    while (!*((_BYTE *)a1 + 56))
    {
      ++*((_QWORD *)a1 + 8);
      pthread_cond_wait((pthread_cond_t *)(a1 + 20), v4);
      --*((_QWORD *)a1 + 8);
      v5 = *((_QWORD *)a1 + 6);
      if (v5 < *a1)
        goto LABEL_4;
    }
    goto LABEL_5;
  }
LABEL_4:
  if (*((_BYTE *)a1 + 56))
  {
LABEL_5:
    v6 = 0;
    goto LABEL_100;
  }
  v7 = (char *)*((_QWORD *)a1 + 3);
  v8 = (char *)*((_QWORD *)a1 + 2);
  v9 = v7 - v8;
  if (v7 == v8)
    v10 = 0;
  else
    v10 = 32 * (v7 - v8) - 1;
  v11 = *((_QWORD *)a1 + 5);
  v12 = v11 + v5;
  if (v10 == v11 + v5)
  {
    if (v11 >= 0x100)
    {
      *((_QWORD *)a1 + 5) = v11 - 256;
      v13 = v8 + 8;
      v14 = *(_QWORD *)v8;
      *((_QWORD *)a1 + 2) = v8 + 8;
      if (*((char **)a1 + 4) != v7)
      {
LABEL_92:
        *(_QWORD *)v7 = v14;
        goto LABEL_93;
      }
      v15 = (char *)*((_QWORD *)a1 + 1);
      if (v13 > v15)
      {
        v16 = (v13 - v15) >> 3;
        if (v16 >= -1)
          v17 = v16 + 1;
        else
          v17 = v16 + 2;
        v18 = v17 >> 1;
        v19 = -v18;
        v20 = &v13[-8 * v18];
        v21 = v7 - v13;
        if (v7 == v13)
        {
          v22 = v7;
        }
        else
        {
          memmove(&v13[-8 * v18], v13, v7 - v13);
          v22 = (char *)*((_QWORD *)a1 + 2);
        }
        v7 = &v20[v21];
        *((_QWORD *)a1 + 2) = &v22[8 * v19];
        *((_QWORD *)a1 + 3) = &v20[v21];
        goto LABEL_92;
      }
      if (v7 == v15)
        v33 = 1;
      else
        v33 = (v7 - v15) >> 2;
      if (!(v33 >> 61))
      {
        v34 = (char *)operator new(8 * v33);
        v35 = &v34[8 * (v33 >> 2)];
        v37 = v7 - v13;
        v36 = v7 == v13;
        v7 = v35;
        if (v36)
          goto LABEL_90;
        v7 = &v35[v37 & 0xFFFFFFFFFFFFFFF8];
        v38 = v37 - 8;
        if (v38 >= 0x38)
        {
          v81 = &v34[8 * (v33 >> 2)];
          v39 = v81;
          if ((unint64_t)(v81 - v13) >= 0x20)
          {
            v82 = (v38 >> 3) + 1;
            v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
            v39 = &v35[v83];
            v84 = (__int128 *)(v8 + 24);
            v85 = v81 + 16;
            v86 = v82 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v87 = *v84;
              *(v85 - 1) = *(v84 - 1);
              *v85 = v87;
              v84 += 2;
              v85 += 2;
              v86 -= 4;
            }
            while (v86);
            if (v82 == (v82 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_90:
              *((_QWORD *)a1 + 1) = v34;
              *((_QWORD *)a1 + 2) = v35;
              *((_QWORD *)a1 + 3) = v7;
              *((_QWORD *)a1 + 4) = &v34[8 * v33];
              if (v15)
              {
                operator delete(v15);
                v7 = (char *)*((_QWORD *)a1 + 3);
              }
              goto LABEL_92;
            }
            v13 += v83;
          }
        }
        else
        {
          v39 = &v34[8 * (v33 >> 2)];
        }
        do
        {
          v88 = *(_QWORD *)v13;
          v13 += 8;
          *(_QWORD *)v39 = v88;
          v39 += 8;
        }
        while (v39 != v7);
        goto LABEL_90;
      }
LABEL_130:
      sub_239418A80();
    }
    v23 = v9 >> 3;
    v24 = (char *)*((_QWORD *)a1 + 4);
    v25 = (char *)*((_QWORD *)a1 + 1);
    v26 = v24 - v25;
    if (v9 >> 3 < (unint64_t)((v24 - v25) >> 3))
    {
      if (v24 != v7)
      {
        *(_QWORD *)v7 = operator new(0x1000uLL);
LABEL_93:
        *((_QWORD *)a1 + 3) += 8;
LABEL_94:
        v8 = (char *)*((_QWORD *)a1 + 2);
        v5 = *((_QWORD *)a1 + 6);
        v12 = v5 + *((_QWORD *)a1 + 5);
        goto LABEL_95;
      }
      v40 = operator new(0x1000uLL);
      v41 = v8;
      if (v25 != v8)
      {
LABEL_105:
        *((_QWORD *)v41 - 1) = v40;
        v94 = (char *)*((_QWORD *)a1 + 2);
        v95 = (char *)*((_QWORD *)a1 + 3);
        *((_QWORD *)a1 + 2) = v94 - 8;
        v96 = *((_QWORD *)v94 - 1);
        *((_QWORD *)a1 + 2) = v94;
        if (v95 != *((char **)a1 + 4))
        {
LABEL_106:
          *(_QWORD *)v95 = v96;
          goto LABEL_93;
        }
        v97 = (char *)*((_QWORD *)a1 + 1);
        if (v94 > v97)
        {
          v98 = (v94 - v97) >> 3;
          if (v98 >= -1)
            v99 = v98 + 1;
          else
            v99 = v98 + 2;
          v100 = v99 >> 1;
          v101 = -v100;
          v102 = &v94[-8 * v100];
          v103 = v95 - v94;
          if (v103)
          {
            memmove(&v94[-8 * v100], v94, v103);
            v94 = (char *)*((_QWORD *)a1 + 2);
          }
          v104 = &v102[v103];
          *((_QWORD *)a1 + 2) = &v94[8 * v101];
          *((_QWORD *)a1 + 3) = v104;
          *(_QWORD *)v104 = v96;
          goto LABEL_93;
        }
        if (v95 == v97)
          v105 = 1;
        else
          v105 = (v95 - v97) >> 2;
        if (v105 >> 61)
          goto LABEL_130;
        v106 = (char *)operator new(8 * v105);
        v107 = &v106[8 * (v105 >> 2)];
        v108 = v95 - v94;
        v36 = v95 == v94;
        v95 = v107;
        if (!v36)
        {
          v95 = &v107[v108 & 0xFFFFFFFFFFFFFFF8];
          v109 = v108 - 8;
          if (v109 < 0x38)
          {
            v110 = &v106[8 * (v105 >> 2)];
            goto LABEL_126;
          }
          v111 = &v106[8 * (v105 >> 2)];
          v110 = v111;
          if ((unint64_t)(v111 - v94) < 0x20)
          {
            do
            {
LABEL_126:
              v118 = *(_QWORD *)v94;
              v94 += 8;
              *(_QWORD *)v110 = v118;
              v110 += 8;
            }
            while (v110 != v95);
            goto LABEL_127;
          }
          v112 = (v109 >> 3) + 1;
          v113 = 8 * (v112 & 0x3FFFFFFFFFFFFFFCLL);
          v110 = &v107[v113];
          v114 = (__int128 *)(v94 + 16);
          v115 = v111 + 16;
          v116 = v112 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v117 = *v114;
            *(v115 - 1) = *(v114 - 1);
            *v115 = v117;
            v114 += 2;
            v115 += 2;
            v116 -= 4;
          }
          while (v116);
          if (v112 != (v112 & 0x3FFFFFFFFFFFFFFCLL))
          {
            v94 += v113;
            goto LABEL_126;
          }
        }
LABEL_127:
        *((_QWORD *)a1 + 1) = v106;
        *((_QWORD *)a1 + 2) = v107;
        *((_QWORD *)a1 + 3) = v95;
        *((_QWORD *)a1 + 4) = &v106[8 * v105];
        if (v97)
        {
          operator delete(v97);
          v95 = (char *)*((_QWORD *)a1 + 3);
        }
        goto LABEL_106;
      }
      if (v7 == v8)
        v42 = 1;
      else
        v42 = v26 >> 2;
      if (v42 >> 61)
        goto LABEL_130;
      v43 = (char *)operator new(8 * v42);
      v44 = (v42 + 3) >> 2;
      v41 = &v43[8 * v44];
      v45 = &v43[8 * v42];
      v46 = v41;
      if (v7 != v8)
      {
        v46 = &v41[(v7 - v25) & 0xFFFFFFFFFFFFFFF8];
        v47 = v7 - v25 - 8;
        v48 = &v43[8 * v44];
        v49 = v8;
        if (v47 > 0x37)
        {
          v50 = &v43[8 * v44];
          v48 = v50;
          v49 = v8;
          if ((unint64_t)(v50 - v25) >= 0x20)
          {
            v51 = (v47 >> 3) + 1;
            v52 = 8 * (v51 & 0x3FFFFFFFFFFFFFFCLL);
            v48 = &v41[v52];
            v53 = (__int128 *)(v8 + 16);
            v54 = v50 + 16;
            v55 = v51 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v56 = *v53;
              *(v54 - 1) = *(v53 - 1);
              *v54 = v56;
              v53 += 2;
              v54 += 2;
              v55 -= 4;
            }
            while (v55);
            if (v51 == (v51 & 0x3FFFFFFFFFFFFFFCLL))
            {
              *((_QWORD *)a1 + 1) = v43;
              *((_QWORD *)a1 + 2) = v41;
              *((_QWORD *)a1 + 3) = v46;
              *((_QWORD *)a1 + 4) = v45;
LABEL_104:
              operator delete(v8);
              v41 = (char *)*((_QWORD *)a1 + 2);
              goto LABEL_105;
            }
            v49 = &v8[v52];
          }
        }
        do
        {
          v93 = *(_QWORD *)v49;
          v49 += 8;
          *(_QWORD *)v48 = v93;
          v48 += 8;
        }
        while (v48 != v46);
      }
      *((_QWORD *)a1 + 1) = v43;
      *((_QWORD *)a1 + 2) = v41;
      *((_QWORD *)a1 + 3) = v46;
      *((_QWORD *)a1 + 4) = v45;
      if (!v8)
        goto LABEL_105;
      goto LABEL_104;
    }
    if (v24 == v25)
      v27 = 1;
    else
      v27 = v26 >> 2;
    if (v27 >> 61)
      goto LABEL_130;
    v28 = (char *)operator new(8 * v27);
    v120 = a2;
    v29 = operator new(0x1000uLL);
    v30 = &v28[8 * v23];
    v31 = &v28[8 * v27];
    if (v23 == v27)
    {
      v119 = v29;
      if (v9 < 1)
      {
        if (v7 == v8)
          v57 = 1;
        else
          v57 = v9 >> 2;
        if (v57 >> 61)
          sub_239418A80();
        v30 = (char *)operator new(8 * v57);
        v31 = &v30[8 * v57];
        operator delete(v28);
        v8 = (char *)*((_QWORD *)a1 + 2);
        v7 = (char *)*((_QWORD *)a1 + 3);
        v28 = v30;
      }
      else
      {
        v32 = v23 + 2;
        if (v23 >= -1)
          v32 = v23 + 1;
        v30 -= 8 * (v32 >> 1);
      }
      v29 = v119;
    }
    *(_QWORD *)v30 = v29;
    v58 = v30 + 8;
    if (v7 == v8)
    {
      v59 = v30;
      v60 = v30 + 8;
LABEL_57:
      v61 = (void *)*((_QWORD *)a1 + 1);
      *((_QWORD *)a1 + 1) = v28;
      *((_QWORD *)a1 + 2) = v59;
      *((_QWORD *)a1 + 3) = v60;
      *((_QWORD *)a1 + 4) = v31;
      a2 = v120;
      if (v61)
        operator delete(v61);
      goto LABEL_94;
    }
    while (v30 != v28)
    {
      v62 = v30;
      v60 = v58;
LABEL_60:
      v63 = *((_QWORD *)v7 - 1);
      v7 -= 8;
      *((_QWORD *)v62 - 1) = v63;
      v59 = v62 - 8;
      v58 = v60;
      v30 = v59;
      if (v7 == *((char **)a1 + 2))
        goto LABEL_57;
    }
    if (v58 < v31)
    {
      v64 = (v31 - v58) >> 3;
      if (v64 >= -1)
        v65 = v64 + 1;
      else
        v65 = v64 + 2;
      v60 = &v58[8 * (v65 >> 1)];
      v62 = &v30[8 * (v65 >> 1)];
      if (v58 == v30)
      {
        v28 = v58;
      }
      else
      {
        memmove(&v30[8 * (v65 >> 1)], v30, v58 - v30);
        v28 = v30;
      }
      goto LABEL_60;
    }
    if (v31 == v30)
      v66 = 1;
    else
      v66 = (v31 - v30) >> 2;
    if (v66 >> 61)
      sub_239418A80();
    v67 = (char *)operator new(8 * v66);
    v28 = v67;
    v68 = (v66 + 3) >> 2;
    v62 = &v67[8 * v68];
    v60 = v62;
    v69 = v58 - v30;
    if (v58 != v30)
    {
      v60 = &v62[v69 & 0xFFFFFFFFFFFFFFF8];
      v70 = v69 - 8;
      v71 = &v67[8 * v68];
      v72 = v30;
      if (v70 >= 0x38)
      {
        v73 = 8 * v68;
        v71 = &v67[8 * v68];
        v72 = v30;
        if ((unint64_t)(v71 - v30) >= 0x20)
        {
          v74 = (v70 >> 3) + 1;
          v75 = 8 * (v74 & 0x3FFFFFFFFFFFFFFCLL);
          v71 = &v62[v75];
          v76 = (__int128 *)(v30 + 16);
          v77 = &v67[v73 + 16];
          v78 = v74 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v79 = *v76;
            *((_OWORD *)v77 - 1) = *(v76 - 1);
            *(_OWORD *)v77 = v79;
            v76 += 2;
            v77 += 32;
            v78 -= 4;
          }
          while (v78);
          if (v74 == (v74 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_80;
          v72 = &v30[v75];
        }
      }
      do
      {
        v80 = *(_QWORD *)v72;
        v72 += 8;
        *(_QWORD *)v71 = v80;
        v71 += 8;
      }
      while (v71 != v60);
    }
LABEL_80:
    v31 = &v67[8 * v66];
    operator delete(v30);
    goto LABEL_60;
  }
LABEL_95:
  v89 = *a2;
  *(_OWORD *)(*(_QWORD *)&v8[(v12 >> 5) & 0x7FFFFFFFFFFFFF8] + 16 * v12) = *a2;
  if (*((_QWORD *)&v89 + 1))
  {
    v90 = (unint64_t *)(*((_QWORD *)&v89 + 1) + 8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
    v5 = *((_QWORD *)a1 + 6);
  }
  *((_QWORD *)a1 + 6) = v5 + 1;
  pthread_cond_signal((pthread_cond_t *)(a1 + 32));
  v6 = 1;
LABEL_100:
  sub_2397A16B4(v4);
  return v6;
}

void sub_239AFEE68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  pthread_mutex_t *v9;
  void *v10;

  operator delete(__p);
  operator delete(v10);
  sub_2397A16B4(v9);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AFEEB8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8BD0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_239AFEF1C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_250AF8BD0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239AFEF90(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_250AF8BD0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_239AFEFE8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_250AF8BD0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_239AFF020(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_239AFF078(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  operator delete(__p);
}

uint64_t sub_239AFF0D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned __int16 i;
  uint64_t v27;
  uint64_t v29;
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  pthread_cond_t v37;
  pthread_cond_t v38;
  pthread_mutex_t v39;
  _BYTE v40[24];
  _BYTE *v41;
  uint64_t v42;

  v1 = a1;
  v42 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD **)(a1 + 24);
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_2397A1618(&v39);
  v30 = 0x7FFFFFFF;
  pthread_cond_init(&v37, 0);
  pthread_cond_init(&v38, 0);
  v3 = (_QWORD *)v2[3];
  if (!v3)
    goto LABEL_44;
  v29 = v1;
  v4 = 0;
  do
  {
    v6 = v3[2];
    v5 = v3[3];
    v7 = (std::__shared_weak_count *)v3[4];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
    }
    if (!v5 || !v2[25])
    {
      if (!v7)
        goto LABEL_4;
      goto LABEL_36;
    }
    if (v7)
    {
      v10 = (unint64_t *)&v7->__shared_owners_;
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
      v12 = v2[34];
      if (!*(_QWORD *)(v12 + 272))
      {
LABEL_50:
        sub_239A444D4((uint64_t)"unknown file", 546, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v13 = (unint64_t *)&v7->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      v15 = *(unsigned int **)(v12 + 272);
      do
        v16 = __ldxr(v13);
      while (__stxr(v16 + 1, v13));
    }
    else
    {
      v15 = *(unsigned int **)(v2[34] + 272);
      if (!v15)
        goto LABEL_50;
    }
    v41 = 0;
    v17 = operator new(0x38uLL);
    *v17 = &off_250AF8C18;
    v17[1] = v6;
    v17[2] = v5;
    v17[3] = v7;
    v17[4] = &v30;
    v17[5] = v2;
    v41 = v17;
    sub_2394D0CC4(v15, (uint64_t)v40);
    v18 = v41;
    if (v41 == v40)
    {
      v18 = v40;
      v19 = 4;
      goto LABEL_26;
    }
    if (v41)
    {
      v19 = 5;
LABEL_26:
      (*(void (**)(void))(*v18 + 8 * v19))();
    }
    if (!v7)
    {
      ++v4;
      goto LABEL_4;
    }
    v20 = (unint64_t *)&v7->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    ++v4;
    v22 = (unint64_t *)&v7->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_36:
    v24 = (unint64_t *)&v7->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
LABEL_4:
    v3 = (_QWORD *)*v3;
  }
  while (v3);
  v1 = v29;
  if (v4 && (unsigned __int16)sub_2395BFB54(&v30) >= 0x100u)
  {
    do
      --v4;
    while (v4 && (unsigned __int16)sub_2395BFB54(&v30) > 0xFFu);
  }
LABEL_44:
  sub_2395C2A4C((uint64_t)&v30);
  for (i = sub_2395BFB54(&v30); i >= 0x100u; i = sub_2395BFB54(&v30))
    ;
  v27 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 256);
  if (v27)
  {
    v40[0] = 1;
    (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v27 + 48))(v27, v40);
  }
  return sub_2395C29C4((uint64_t)&v30);
}

void sub_239AFF428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_2395C29C4((uint64_t)&a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_239AFF618(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_250AF8C18;
  v2 = (std::__shared_weak_count *)a1[3];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

