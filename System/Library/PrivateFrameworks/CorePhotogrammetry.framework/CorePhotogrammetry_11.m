uint64_t sub_239812C5C()
{
  return 10;
}

_UNKNOWN **sub_239812C64()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239812CD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECC98;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984C9F0(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239812D54(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239812D7C(uint64_t a1, void *lpsrc)
{
  sub_239812D88(a1, a1, lpsrc);
}

void sub_239812D88(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED500, 0);
  if (v5)
  {
    sub_239850B2C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 10);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 3;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_239790400((uint64_t)v22);
  }
}

uint64_t sub_239812F10(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239812F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 10)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239813034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 10)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239813154()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933688);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933688))
  {
    v2 = sub_239850E3C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933670, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933680 = *((_QWORD *)v2 + 2);
      xmmword_256933670 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933670, &dword_23940C000);
    __cxa_guard_release(&qword_256933688);
  }
  if (byte_256933687 >= 0)
    return &xmmword_256933670;
  else
    return (__int128 *)xmmword_256933670;
}

void sub_239813214(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933688);
  _Unwind_Resume(a1);
}

double sub_23981322C(uint64_t a1)
{
  BOOL v2;
  int v4;
  double result;

  if (*(_QWORD *)(a1 + 72))
  {
    if (*(_DWORD *)(a1 + 96))
      v2 = *(_DWORD *)(a1 + 92) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 88) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 96);
    if (v4 * (*(_DWORD *)(a1 + 108) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

uint64_t sub_2398132B8(uint64_t a1)
{
  BOOL v2;
  int v4;

  if (*(_QWORD *)(a1 + 64))
  {
    if (*(_DWORD *)(a1 + 88))
      v2 = *(_DWORD *)(a1 + 84) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 80) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 88);
    if (v4 * (*(_DWORD *)(a1 + 100) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 56);
  return a1;
}

void sub_239813348(uint64_t a1)
{
  sub_23981322C(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23981336C()
{
  return 11;
}

_UNKNOWN **sub_239813374()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_2398133E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECD18;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984E418(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239813464(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_23981348C(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23981322C(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

double sub_2398134D0(uint64_t a1, void *lpsrc)
{
  return sub_2398134DC(a1, a1, lpsrc);
}

double sub_2398134DC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _QWORD v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED518, 0);
  if (v5)
  {
    sub_23985139C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 11);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 3;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = v22;
    v23[1] = &v24;
    return sub_239851760(v23);
  }
  return result;
}

uint64_t sub_239813664(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981366C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 11)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239813788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 11)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_2398138A8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933748);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933748))
  {
    v2 = sub_239851954();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933730, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933740 = *((_QWORD *)v2 + 2);
      xmmword_256933730 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933730, &dword_23940C000);
    __cxa_guard_release(&qword_256933748);
  }
  if (byte_256933747 >= 0)
    return &xmmword_256933730;
  else
    return (__int128 *)xmmword_256933730;
}

void sub_239813968(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933748);
  _Unwind_Resume(a1);
}

double sub_239813980(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2398139A8(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2398139E4()
{
  return 12;
}

_UNKNOWN **sub_2398139EC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239813A5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECD98;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984F618(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239813ADC(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239813B04(uint64_t a1, void *lpsrc)
{
  sub_239813B10(a1, a1, lpsrc);
}

void sub_239813B10(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED530, 0);
  if (v5)
  {
    sub_239851EB4(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 12);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 3;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_2398521BC((uint64_t)v22);
  }
}

uint64_t sub_239813C98(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239813CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 12)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239813DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 12)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239813EDC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933808);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933808))
  {
    v2 = sub_2398523B8();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569337F0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933800 = *((_QWORD *)v2 + 2);
      xmmword_2569337F0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569337F0, &dword_23940C000);
    __cxa_guard_release(&qword_256933808);
  }
  if (byte_256933807 >= 0)
    return &xmmword_2569337F0;
  else
    return (__int128 *)xmmword_2569337F0;
}

void sub_239813F9C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933808);
  _Unwind_Resume(a1);
}

double sub_239813FB4(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239813FDC(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239814018()
{
  return 13;
}

_UNKNOWN **sub_239814020()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239814090@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECE18;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984B37C(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239814110(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239814138(uint64_t a1, void *lpsrc)
{
  sub_239814144(a1, a1, lpsrc);
}

void sub_239814144(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED548, 0);
  if (v5)
  {
    sub_239852918(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 13);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_23978F738((uint64_t)v22);
  }
}

uint64_t sub_2398142CC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_2398142D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 13)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_2398143F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 13)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239814510()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569338C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569338C8))
  {
    v2 = sub_239852C28();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569338B0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569338C0 = *((_QWORD *)v2 + 2);
      xmmword_2569338B0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569338B0, &dword_23940C000);
    __cxa_guard_release(&qword_2569338C8);
  }
  if (byte_2569338C7 >= 0)
    return &xmmword_2569338B0;
  else
    return (__int128 *)xmmword_2569338B0;
}

void sub_2398145D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569338C8);
  _Unwind_Resume(a1);
}

double sub_2398145E8(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239814610(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23981464C()
{
  return 14;
}

_UNKNOWN **sub_239814654()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_2398146C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECE98;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984C9F0(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239814744(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981476C(uint64_t a1, void *lpsrc)
{
  sub_239814778(a1, a1, lpsrc);
}

void sub_239814778(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED560, 0);
  if (v5)
  {
    sub_239853188(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 14);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_239790E2C((uint64_t)v22);
  }
}

uint64_t sub_239814900(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239814908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 14)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239814A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 14)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239814B44()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933988);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933988))
  {
    v2 = sub_2398534C0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933970, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933980 = *((_QWORD *)v2 + 2);
      xmmword_256933970 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933970, &dword_23940C000);
    __cxa_guard_release(&qword_256933988);
  }
  if (byte_256933987 >= 0)
    return &xmmword_256933970;
  else
    return (__int128 *)xmmword_256933970;
}

void sub_239814C04(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933988);
  _Unwind_Resume(a1);
}

double sub_239814C1C(uint64_t a1)
{
  BOOL v2;
  int v4;
  double result;

  if (*(_QWORD *)(a1 + 72))
  {
    if (*(_DWORD *)(a1 + 96))
      v2 = *(_DWORD *)(a1 + 92) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 88) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 96);
    if (v4 * (*(_DWORD *)(a1 + 108) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

uint64_t sub_239814CA8(uint64_t a1)
{
  BOOL v2;
  int v4;

  if (*(_QWORD *)(a1 + 64))
  {
    if (*(_DWORD *)(a1 + 88))
      v2 = *(_DWORD *)(a1 + 84) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 80) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 88);
    if (v4 * (*(_DWORD *)(a1 + 100) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 56);
  return a1;
}

void sub_239814D38(uint64_t a1)
{
  sub_239814C1C(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239814D5C()
{
  return 15;
}

_UNKNOWN **sub_239814D64()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239814DD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECF18;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984E418(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239814E54(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_239814E7C(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_239814C1C(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

double sub_239814EC0(uint64_t a1, void *lpsrc)
{
  return sub_239814ECC(a1, a1, lpsrc);
}

double sub_239814ECC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _QWORD v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED578, 0);
  if (v5)
  {
    sub_239853A20(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 15);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 4;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = v22;
    v23[1] = &v24;
    return sub_239792420(v23);
  }
  return result;
}

uint64_t sub_239815054(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981505C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 15)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239815178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 15)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239815298()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933A48);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933A48))
  {
    v2 = sub_239853E0C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933A30, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933A40 = *((_QWORD *)v2 + 2);
      xmmword_256933A30 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933A30, &dword_23940C000);
    __cxa_guard_release(&qword_256933A48);
  }
  if (byte_256933A47 >= 0)
    return &xmmword_256933A30;
  else
    return (__int128 *)xmmword_256933A30;
}

void sub_239815358(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933A48);
  _Unwind_Resume(a1);
}

double sub_239815370(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239815398(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2398153D4()
{
  return 16;
}

_UNKNOWN **sub_2398153DC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981544C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AECF98;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984F618(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_2398154CC(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_2398154F4(uint64_t a1, void *lpsrc)
{
  sub_239815500(a1, a1, lpsrc);
}

void sub_239815500(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED590, 0);
  if (v5)
  {
    sub_23985436C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 16);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_2397934CC((uint64_t)v22);
  }
}

uint64_t sub_239815688(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239815690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 16)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_2398157AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 16)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_2398158CC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933B08);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933B08))
  {
    v2 = sub_23985469C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933AF0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933B00 = *((_QWORD *)v2 + 2);
      xmmword_256933AF0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933AF0, &dword_23940C000);
    __cxa_guard_release(&qword_256933B08);
  }
  if (byte_256933B07 >= 0)
    return &xmmword_256933AF0;
  else
    return (__int128 *)xmmword_256933AF0;
}

void sub_23981598C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933B08);
  _Unwind_Resume(a1);
}

uint64_t sub_2398159A4(uint64_t a1)
{
  sub_239916980(a1 + 64);
  return nullsub_4(a1);
}

void sub_2398159CC(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_239815A08()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239815A78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE3948;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984B37C(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239815AF8(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239815B20(uint64_t a1, void *lpsrc)
{
  sub_239815B2C(a1, a1, lpsrc);
}

void sub_239815B2C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED5A8, 0);
  if (v5)
  {
    sub_2398502E4(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 17);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 3;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_23978F020((uint64_t)v22);
  }
}

uint64_t sub_239815CB4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239815CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 17)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239815DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 17)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_239815EF4(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239815F1C(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239815F58()
{
  return 18;
}

_UNKNOWN **sub_239815F60()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239815FD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED018;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984C9F0(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239816050(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239816078(uint64_t a1, void *lpsrc)
{
  sub_239816084(a1, a1, lpsrc);
}

void sub_239816084(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED5C0, 0);
  if (v5)
  {
    sub_239850B2C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 18);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 3;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_239790400((uint64_t)v22);
  }
}

uint64_t sub_23981620C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239816214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 18)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239816330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 18)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239816450()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933BC8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933BC8))
  {
    v2 = sub_239854BFC();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933BB0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933BC0 = *((_QWORD *)v2 + 2);
      xmmword_256933BB0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933BB0, &dword_23940C000);
    __cxa_guard_release(&qword_256933BC8);
  }
  if (byte_256933BC7 >= 0)
    return &xmmword_256933BB0;
  else
    return (__int128 *)xmmword_256933BB0;
}

void sub_239816510(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933BC8);
  _Unwind_Resume(a1);
}

double sub_239816528(uint64_t a1)
{
  BOOL v2;
  int v4;
  double result;

  if (*(_QWORD *)(a1 + 72))
  {
    if (*(_DWORD *)(a1 + 96))
      v2 = *(_DWORD *)(a1 + 92) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 88) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 96);
    if (v4 * (*(_DWORD *)(a1 + 108) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2398165B8(uint64_t a1)
{
  sub_239816528(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2398165DC()
{
  return 19;
}

_UNKNOWN **sub_2398165E4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239816654@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED098;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984E418(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_2398166D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_2398166FC(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_239816528(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

double sub_239816740(uint64_t a1, void *lpsrc)
{
  return sub_23981674C(a1, a1, lpsrc);
}

double sub_23981674C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _QWORD v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED5D8, 0);
  if (v5)
  {
    sub_23985139C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 19);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 3;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = v22;
    v23[1] = &v24;
    return sub_239851760(v23);
  }
  return result;
}

uint64_t sub_2398168D4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_2398168DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 19)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_2398169F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 19)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239816B18()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933C88);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933C88))
  {
    v2 = sub_23985515C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933C70, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933C80 = *((_QWORD *)v2 + 2);
      xmmword_256933C70 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933C70, &dword_23940C000);
    __cxa_guard_release(&qword_256933C88);
  }
  if (byte_256933C87 >= 0)
    return &xmmword_256933C70;
  else
    return (__int128 *)xmmword_256933C70;
}

void sub_239816BD8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933C88);
  _Unwind_Resume(a1);
}

double sub_239816BF0(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239816C18(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239816C54()
{
  return 20;
}

_UNKNOWN **sub_239816C5C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239816CCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED118;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984F618(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239816D4C(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239816D74(uint64_t a1, void *lpsrc)
{
  sub_239816D80(a1, a1, lpsrc);
}

void sub_239816D80(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED5F0, 0);
  if (v5)
  {
    sub_239851EB4(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 20);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 3;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_2398521BC((uint64_t)v22);
  }
}

uint64_t sub_239816F08(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239816F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 20)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981702C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 20)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_23981714C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933D48);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933D48))
  {
    v2 = sub_2398556BC();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933D30, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933D40 = *((_QWORD *)v2 + 2);
      xmmword_256933D30 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933D30, &dword_23940C000);
    __cxa_guard_release(&qword_256933D48);
  }
  if (byte_256933D47 >= 0)
    return &xmmword_256933D30;
  else
    return (__int128 *)xmmword_256933D30;
}

void sub_23981720C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933D48);
  _Unwind_Resume(a1);
}

uint64_t sub_239817224(uint64_t a1)
{
  sub_239916980(a1 + 64);
  return nullsub_4(a1);
}

void sub_23981724C(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_239817288()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_2398172F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250ADCA40;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984B37C(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239817378(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_2398173A0(uint64_t a1, void *lpsrc)
{
  sub_2398173AC(a1, a1, lpsrc);
}

void sub_2398173AC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE4390, 0);
  if (v5)
  {
    sub_2398502E4(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 21);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 3;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_23978F020((uint64_t)v22);
  }
}

uint64_t sub_239817534(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981753C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 21)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239817658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 21)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_239817774(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981779C(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_2398177D8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239817848@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6198;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984C9F0(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_2398178C8(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_2398178F0(uint64_t a1, void *lpsrc)
{
  sub_2398178FC(a1, a1, lpsrc);
}

void sub_2398178FC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6208, 0);
  if (v5)
  {
    sub_239850B2C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 22);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 3;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_239790400((uint64_t)v22);
  }
}

uint64_t sub_239817A84(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239817A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 22)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239817BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 22)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_239817CC4(uint64_t a1)
{
  BOOL v2;
  int v4;
  double result;

  if (*(_QWORD *)(a1 + 72))
  {
    if (*(_DWORD *)(a1 + 96))
      v2 = *(_DWORD *)(a1 + 92) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 88) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 96);
    if (v4 * (*(_DWORD *)(a1 + 108) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239817D54(uint64_t a1)
{
  sub_239817CC4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_239817D78()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239817DE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE0C18;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984E418(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239817E68(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

double sub_239817E90(uint64_t a1, void *lpsrc)
{
  return sub_239817E9C(a1, a1, lpsrc);
}

double sub_239817E9C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _QWORD v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6270, 0);
  if (v5)
  {
    sub_23985139C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 23);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 3;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = v22;
    v23[1] = &v24;
    return sub_239851760(v23);
  }
  return result;
}

uint64_t sub_239818024(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981802C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 23)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239818148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 23)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239818264(uint64_t a1)
{
  sub_239916980(a1 + 64);
  return nullsub_4(a1);
}

void sub_23981828C(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_2398182C8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239818338@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250ADEC38;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984F618(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_2398183B8(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_2398183E0(uint64_t a1, void *lpsrc)
{
  sub_2398183EC(a1, a1, lpsrc);
}

void sub_2398183EC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6288, 0);
  if (v5)
  {
    sub_239851EB4(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 24);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 3;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_2398521BC((uint64_t)v22);
  }
}

uint64_t sub_239818574(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981857C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 24)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239818698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 24)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 3;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_2398187B4(uint64_t a1)
{
  sub_239916980(a1 + 64);
  return nullsub_4(a1);
}

void sub_2398187DC(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_239818818()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239818888@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE3B78;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984B37C(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239818908(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239818930(uint64_t a1, void *lpsrc)
{
  sub_23981893C(a1, a1, lpsrc);
}

void sub_23981893C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE62A0, 0);
  if (v5)
  {
    sub_239852918(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 25);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_23978F738((uint64_t)v22);
  }
}

uint64_t sub_239818AC4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239818ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 25)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239818BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 25)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_239818D04(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239818D2C(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239818D68()
{
  return 26;
}

_UNKNOWN **sub_239818D70()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239818DE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED198;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984C9F0(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239818E60(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239818E88(uint64_t a1, void *lpsrc)
{
  sub_239818E94(a1, a1, lpsrc);
}

void sub_239818E94(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED608, 0);
  if (v5)
  {
    sub_239853188(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 26);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_239790E2C((uint64_t)v22);
  }
}

uint64_t sub_23981901C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239819024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 26)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239819140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 26)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239819260()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933E08);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933E08))
  {
    v2 = sub_239855C1C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933DF0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933E00 = *((_QWORD *)v2 + 2);
      xmmword_256933DF0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933DF0, &dword_23940C000);
    __cxa_guard_release(&qword_256933E08);
  }
  if (byte_256933E07 >= 0)
    return &xmmword_256933DF0;
  else
    return (__int128 *)xmmword_256933DF0;
}

void sub_239819320(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933E08);
  _Unwind_Resume(a1);
}

double sub_239819338(uint64_t a1)
{
  BOOL v2;
  int v4;
  double result;

  if (*(_QWORD *)(a1 + 72))
  {
    if (*(_DWORD *)(a1 + 96))
      v2 = *(_DWORD *)(a1 + 92) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 88) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 96);
    if (v4 * (*(_DWORD *)(a1 + 108) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_2398193C8(uint64_t a1)
{
  sub_239819338(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2398193EC()
{
  return 27;
}

_UNKNOWN **sub_2398193F4()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239819464@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED218;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984E418(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_2398194E4(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_23981950C(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_239819338(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

double sub_239819550(uint64_t a1, void *lpsrc)
{
  return sub_23981955C(a1, a1, lpsrc);
}

double sub_23981955C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _QWORD v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED620, 0);
  if (v5)
  {
    sub_239853A20(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 27);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 4;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = v22;
    v23[1] = &v24;
    return sub_239792420(v23);
  }
  return result;
}

uint64_t sub_2398196E4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_2398196EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 27)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239819808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 27)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239819928()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933EC8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933EC8))
  {
    v2 = sub_23985617C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933EB0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933EC0 = *((_QWORD *)v2 + 2);
      xmmword_256933EB0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933EB0, &dword_23940C000);
    __cxa_guard_release(&qword_256933EC8);
  }
  if (byte_256933EC7 >= 0)
    return &xmmword_256933EB0;
  else
    return (__int128 *)xmmword_256933EB0;
}

void sub_2398199E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933EC8);
  _Unwind_Resume(a1);
}

double sub_239819A00(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_239819A28(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239819A64()
{
  return 28;
}

_UNKNOWN **sub_239819A6C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_239819ADC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED298;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984F618(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_239819B5C(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_239819B84(uint64_t a1, void *lpsrc)
{
  sub_239819B90(a1, a1, lpsrc);
}

void sub_239819B90(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED638, 0);
  if (v5)
  {
    sub_23985436C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 28);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_2397934CC((uint64_t)v22);
  }
}

uint64_t sub_239819D18(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_239819D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 28)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_239819E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 28)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_239819F5C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933F88);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256933F88))
  {
    v2 = sub_2398566DC();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256933F70, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256933F80 = *((_QWORD *)v2 + 2);
      xmmword_256933F70 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933F70, &dword_23940C000);
    __cxa_guard_release(&qword_256933F88);
  }
  if (byte_256933F87 >= 0)
    return &xmmword_256933F70;
  else
    return (__int128 *)xmmword_256933F70;
}

void sub_23981A01C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933F88);
  _Unwind_Resume(a1);
}

uint64_t sub_23981A034(uint64_t a1)
{
  sub_239916980(a1 + 64);
  return nullsub_4(a1);
}

void sub_23981A05C(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981A098()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981A108@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE0A68;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984B37C(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981A188(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981A1B0(uint64_t a1, void *lpsrc)
{
  sub_23981A1BC(a1, a1, lpsrc);
}

void sub_23981A1BC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE62B8, 0);
  if (v5)
  {
    sub_239852918(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 29);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_23978F738((uint64_t)v22);
  }
}

uint64_t sub_23981A344(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981A34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 29)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981A468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 29)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_23981A584(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981A5AC(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981A5E8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981A658@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6420;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984C9F0(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981A6D8(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981A700(uint64_t a1, void *lpsrc)
{
  sub_23981A70C(a1, a1, lpsrc);
}

void sub_23981A70C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6490, 0);
  if (v5)
  {
    sub_239853188(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 30);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_239790E2C((uint64_t)v22);
  }
}

uint64_t sub_23981A894(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981A89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 30)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981A9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 30)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_23981AAD4(uint64_t a1)
{
  BOOL v2;
  int v4;
  double result;

  if (*(_QWORD *)(a1 + 72))
  {
    if (*(_DWORD *)(a1 + 96))
      v2 = *(_DWORD *)(a1 + 92) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 88) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 96);
    if (v4 * (*(_DWORD *)(a1 + 108) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981AB64(uint64_t a1)
{
  sub_23981AAD4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981AB88()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981ABF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE0CF0;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984E418(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981AC78(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

double sub_23981ACA0(uint64_t a1, void *lpsrc)
{
  return sub_23981ACAC(a1, a1, lpsrc);
}

double sub_23981ACAC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _QWORD v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE64F8, 0);
  if (v5)
  {
    sub_239853A20(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 31);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 4;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = v22;
    v23[1] = &v24;
    return sub_239792420(v23);
  }
  return result;
}

uint64_t sub_23981AE34(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981AE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 31)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981AF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 31)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981B074(uint64_t a1)
{
  sub_239916980(a1 + 64);
  return nullsub_4(a1);
}

void sub_23981B09C(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981B0D8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981B148@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE0B40;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984F618(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981B1C8(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981B1F0(uint64_t a1, void *lpsrc)
{
  sub_23981B1FC(a1, a1, lpsrc);
}

void sub_23981B1FC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6510, 0);
  if (v5)
  {
    sub_23985436C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 32);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_2397934CC((uint64_t)v22);
  }
}

uint64_t sub_23981B384(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981B38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 32)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981B4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 32)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_23981B5C4(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981B5EC(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981B628()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981B698@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6678;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984B37C(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981B718(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981B740(uint64_t a1, void *lpsrc)
{
  sub_23981B74C(a1, a1, lpsrc);
}

void sub_23981B74C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE66E8, 0);
  if (v5)
  {
    sub_239852918(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 33);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_23978F738((uint64_t)v22);
  }
}

uint64_t sub_23981B8D4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981B8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 33)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981B9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 33)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_23981BB14(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981BB3C(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23981BB78()
{
  return 34;
}

_UNKNOWN **sub_23981BB80()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981BBF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED318;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984C9F0(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981BC70(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981BC98(uint64_t a1, void *lpsrc)
{
  sub_23981BCA4(a1, a1, lpsrc);
}

void sub_23981BCA4(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED650, 0);
  if (v5)
  {
    sub_239853188(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 34);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_239790E2C((uint64_t)v22);
  }
}

uint64_t sub_23981BE2C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981BE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 34)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981BF50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 34)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_23981C070()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256934048);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256934048))
  {
    v2 = sub_239856C3C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_256934030, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256934040 = *((_QWORD *)v2 + 2);
      xmmword_256934030 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256934030, &dword_23940C000);
    __cxa_guard_release(&qword_256934048);
  }
  if (byte_256934047 >= 0)
    return &xmmword_256934030;
  else
    return (__int128 *)xmmword_256934030;
}

void sub_23981C130(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934048);
  _Unwind_Resume(a1);
}

double sub_23981C148(uint64_t a1)
{
  BOOL v2;
  int v4;
  double result;

  if (*(_QWORD *)(a1 + 72))
  {
    if (*(_DWORD *)(a1 + 96))
      v2 = *(_DWORD *)(a1 + 92) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 88) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 96);
    if (v4 * (*(_DWORD *)(a1 + 108) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981C1D8(uint64_t a1)
{
  sub_23981C148(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23981C1FC()
{
  return 35;
}

_UNKNOWN **sub_23981C204()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981C274@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED398;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984E418(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981C2F4(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_23981C31C(uint64_t *a1)
{
  uint64_t v2;
  double v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = sub_23981C148(v2);
    MEMORY[0x23B83E31C](v3);
  }
  return a1;
}

double sub_23981C360(uint64_t a1, void *lpsrc)
{
  return sub_23981C36C(a1, a1, lpsrc);
}

double sub_23981C36C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _QWORD v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED668, 0);
  if (v5)
  {
    sub_239853A20(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 35);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 4;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = v22;
    v23[1] = &v24;
    return sub_239792420(v23);
  }
  return result;
}

uint64_t sub_23981C4F4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981C4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 35)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981C618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 35)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_23981C738()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256934108);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256934108))
  {
    v2 = sub_23985719C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569340F0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_256934100 = *((_QWORD *)v2 + 2);
      xmmword_2569340F0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569340F0, &dword_23940C000);
    __cxa_guard_release(&qword_256934108);
  }
  if (byte_256934107 >= 0)
    return &xmmword_2569340F0;
  else
    return (__int128 *)xmmword_2569340F0;
}

void sub_23981C7F8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934108);
  _Unwind_Resume(a1);
}

double sub_23981C810(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981C838(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23981C874()
{
  return 36;
}

_UNKNOWN **sub_23981C87C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981C8EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AED418;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984F618(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981C96C(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981C994(uint64_t a1, void *lpsrc)
{
  sub_23981C9A0(a1, a1, lpsrc);
}

void sub_23981C9A0(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AED680, 0);
  if (v5)
  {
    sub_23985436C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 36);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_2397934CC((uint64_t)v22);
  }
}

uint64_t sub_23981CB28(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981CB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 36)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981CC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 36)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

__int128 *sub_23981CD6C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569341C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569341C8))
  {
    v2 = sub_2398576FC();
    if (*((char *)v2 + 23) < 0)
    {
      sub_23941A7F8(&xmmword_2569341B0, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_2569341C0 = *((_QWORD *)v2 + 2);
      xmmword_2569341B0 = v3;
    }
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569341B0, &dword_23940C000);
    __cxa_guard_release(&qword_2569341C8);
  }
  if (byte_2569341C7 >= 0)
    return &xmmword_2569341B0;
  else
    return (__int128 *)xmmword_2569341B0;
}

void sub_23981CE2C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569341C8);
  _Unwind_Resume(a1);
}

uint64_t sub_23981CE44(uint64_t a1)
{
  sub_239916980(a1 + 64);
  return nullsub_4(a1);
}

void sub_23981CE6C(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981CEA8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981CF18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE3A60;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984B37C(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981CF98(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981CFC0(uint64_t a1, void *lpsrc)
{
  sub_23981CFCC(a1, a1, lpsrc);
}

void sub_23981CFCC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6750, 0);
  if (v5)
  {
    sub_239852918(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 37);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_23978F738((uint64_t)v22);
  }
}

uint64_t sub_23981D154(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981D15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 37)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981D278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 37)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_23981D394(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981D3BC(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981D3F8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981D468@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE68B8;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984C9F0(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981D4E8(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981D510(uint64_t a1, void *lpsrc)
{
  sub_23981D51C(a1, a1, lpsrc);
}

void sub_23981D51C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6928, 0);
  if (v5)
  {
    sub_239853188(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 38);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_239790E2C((uint64_t)v22);
  }
}

uint64_t sub_23981D6A4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981D6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 38)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981D7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 38)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_23981D8E4(uint64_t a1)
{
  BOOL v2;
  int v4;
  double result;

  if (*(_QWORD *)(a1 + 72))
  {
    if (*(_DWORD *)(a1 + 96))
      v2 = *(_DWORD *)(a1 + 92) == 0;
    else
      v2 = 1;
    if (v2 || *(_DWORD *)(a1 + 88) == 0)
      v4 = 0;
    else
      v4 = *(_DWORD *)(a1 + 96);
    if (v4 * (*(_DWORD *)(a1 + 108) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981D974(uint64_t a1)
{
  sub_23981D8E4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981D998()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981DA08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6AE0;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984E418(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981DA88(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

double sub_23981DAB0(uint64_t a1, void *lpsrc)
{
  return sub_23981DABC(a1, a1, lpsrc);
}

double sub_23981DABC(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  _QWORD v23[2];
  __int128 v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6B50, 0);
  if (v5)
  {
    sub_239853A20(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v24, lpsrc, 39);
    v7 = v24;
    v9 = *(_OWORD *)(v24 + 16);
    v8 = *(_OWORD *)(v24 + 32);
    v22[0] = *(_OWORD *)v24;
    v22[1] = v9;
    v22[2] = v8;
    *(_QWORD *)&v24 = 0;
    v14 = MEMORY[0x23B83E31C](v7, 0xC400A2AC0F1, v10, v11, v12, v13);
    v16 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v17 = *(_DWORD *)(a2 + 32) == 0;
    else
      v17 = 1;
    v18 = *(_QWORD *)(a2 + 32);
    if (v17)
      v18 = 0;
    *(_QWORD *)((char *)&v24 + 4) = v18;
    LODWORD(v24) = 4;
    v19 = v24;
    LODWORD(v24) = 1;
    v20 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v24 + 4) = v20;
    if (HIDWORD(v20) * HIDWORD(v18) == -1)
      sub_239EBFBC4(v14, v15);
    v21 = v24;
    *(_QWORD *)&v24 = v16;
    *((_QWORD *)&v24 + 1) = v19;
    v25 = HIDWORD(v18);
    v26 = v21;
    v27 = HIDWORD(v20);
    v28 = v18;
    v29 = v20;
    v23[0] = v22;
    v23[1] = &v24;
    return sub_239792420(v23);
  }
  return result;
}

uint64_t sub_23981DC44(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981DC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 39)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981DD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 39)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

double sub_23981DE84(uint64_t a1)
{
  double result;

  sub_239916980(a1 + 64);
  *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  return result;
}

void sub_23981DEAC(uint64_t a1)
{
  sub_239916980(a1 + 64);
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

_UNKNOWN **sub_23981DEE8()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332A8))
    return &off_2569332A0;
  __cxa_atexit((void (*)(void *))j_nullsub_4_90, &off_2569332A0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332A8);
  return &off_2569332A0;
}

uint64_t sub_23981DF58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = operator new();
  *(_QWORD *)v4 = &off_250AE6D08;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  result = sub_23984F618(v4 + 64, a1 + 64);
  *a2 = v4;
  return result;
}

void sub_23981DFD8(_Unwind_Exception *a1)
{
  uint64_t v1;
  __n128 v3;

  v3 = nullsub_4(v1);
  MEMORY[0x23B83E31C](v3);
  _Unwind_Resume(a1);
}

void sub_23981E000(uint64_t a1, void *lpsrc)
{
  sub_23981E00C(a1, a1, lpsrc);
}

void sub_23981E00C(int a1, uint64_t a2, void *lpsrc)
{
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _QWORD v22[2];
  __int128 v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_250AEF680, (const struct __class_type_info *)&unk_250AE6D78, 0);
  if (v5)
  {
    sub_23985436C(a2 + 8, (__int128 *)(v5 + 8));
  }
  else
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v23, lpsrc, 40);
    v6 = v23;
    v8 = *(_OWORD *)(v23 + 16);
    v7 = *(_OWORD *)(v23 + 32);
    v21[0] = *(_OWORD *)v23;
    v21[1] = v8;
    v21[2] = v7;
    *(_QWORD *)&v23 = 0;
    v13 = MEMORY[0x23B83E31C](v6, 0xC400A2AC0F1, v9, v10, v11, v12);
    v15 = *(_QWORD *)(a2 + 72);
    if (*(_DWORD *)(a2 + 36))
      v16 = *(_DWORD *)(a2 + 32) == 0;
    else
      v16 = 1;
    v17 = *(_QWORD *)(a2 + 32);
    if (v16)
      v17 = 0;
    *(_QWORD *)((char *)&v23 + 4) = v17;
    LODWORD(v23) = 4;
    v18 = v23;
    LODWORD(v23) = 1;
    v19 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)((char *)&v23 + 4) = v19;
    if (HIDWORD(v19) * HIDWORD(v17) == -1)
      sub_239EBFBC4(v13, v14);
    v20 = v23;
    *(_QWORD *)&v23 = v15;
    *((_QWORD *)&v23 + 1) = v18;
    v24 = HIDWORD(v17);
    v25 = v20;
    v26 = HIDWORD(v19);
    v27 = v17;
    v28 = v19;
    v22[0] = v21;
    v22[1] = &v23;
    sub_2397934CC((uint64_t)v22);
  }
}

uint64_t sub_23981E194(uint64_t a1)
{
  return *(_QWORD *)(a1 + 72);
}

uint64_t sub_23981E19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 40)
    sub_239EC2ED4(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981E2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[12];

  if ((_DWORD)a2 != 40)
    sub_239EC2F00(a1, a2);
  v4 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(a1 + 36))
    v5 = *(_DWORD *)(a1 + 32) == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (v5)
    v6 = 0;
  LODWORD(v12) = 4;
  HIDWORD(v12) = v6;
  v8 = v6;
  v9 = v12;
  v10 = HIDWORD(v6);
  *(_DWORD *)v13 = 1;
  *(_QWORD *)&v13[4] = *(_QWORD *)(a1 + 40);
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
    sub_239EBFBC4(a1, a2);
  result = operator new();
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = v9;
  *(_DWORD *)(result + 16) = v10;
  *(_QWORD *)(result + 20) = *(_QWORD *)v13;
  *(_DWORD *)(result + 28) = HIDWORD(v7);
  *(_QWORD *)(result + 32) = v8;
  *(_QWORD *)(result + 40) = v7;
  *a3 = result;
  return result;
}

uint64_t sub_23981E3D4@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[28];
  _BYTE v4[47];
  char v5;
  uint64_t v6;
  unint64_t v7;

  v5 = 0;
  v3[24] = 0;
  memset(v3, 0, 17);
  v6 = 0;
  v7 = 0;
  sub_2394604BC(v4, &v6, &v7, 1, (void **)&v5, 1, 0);
  *(_QWORD *)a1 = &off_250ADB688;
  *(_OWORD *)(a1 + 8) = 0uLL;
  *(_OWORD *)(a1 + 20) = *(_OWORD *)&v3[12];
  sub_239916924((__n128 *)(a1 + 40), (__n128 *)v4);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)&v4[24];
  return sub_239916980((uint64_t)v4);
}

void sub_23981E474(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v2);
  sub_239916980(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23981E490@<X0>(_DWORD *a1@<X1>, void **a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL8 v7;
  BOOL v8;
  uint64_t v9;
  _BYTE v11[28];
  _QWORD v12[5];
  unint64_t v13;
  uint64_t v14;

  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  v6 = v5 << 32;
  if (!HIDWORD(v5))
    v6 = 0;
  v7 = v5 != 0;
  if ((_DWORD)v5)
    v8 = HIDWORD(v5) == 0;
  else
    v8 = 1;
  *(_QWORD *)v11 = v5;
  *(_QWORD *)&v11[8] = v6 | v7;
  v11[16] = 0;
  v11[24] = 0;
  if (v8)
    v5 = 0;
  v13 = v5;
  v14 = v6 | v7;
  if ((HIDWORD(v6) & (HIDWORD(v6) - 1)) != 0)
    v9 = 1;
  else
    v9 = HIDWORD(v6);
  sub_2394604BC(v12, &v13, (unint64_t *)&v14, 1, a2, 1, v9);
  *(_QWORD *)a3 = &off_250ADB688;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(_OWORD *)(a3 + 20) = *(_OWORD *)&v11[12];
  sub_239916924((__n128 *)(a3 + 40), (__n128 *)v12);
  *(_OWORD *)(a3 + 64) = *(_OWORD *)&v12[3];
  return sub_239916980((uint64_t)v12);
}

void sub_23981E570(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981E58C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL8 v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  size_t v15;
  _BYTE v17[28];
  __n128 v18;
  __int128 v19;

  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  v5 = v4 << 32;
  if (!HIDWORD(v4))
    v5 = 0;
  v6 = v4 != 0;
  if ((_DWORD)v4)
    v7 = HIDWORD(v4) == 0;
  else
    v7 = 1;
  v8 = v5 | v6;
  *(_QWORD *)v17 = v4;
  *(_QWORD *)&v17[8] = v5 | v6;
  v17[16] = 0;
  v17[24] = 0;
  if (v7)
    v9 = 0;
  else
    v9 = v4;
  v10 = HIDWORD(v5);
  if ((v10 & (v10 - 1)) != 0)
    v11 = 0;
  else
    v11 = v10 - 1;
  v12 = v11 | (v11 >> 1) | ((v11 | (v11 >> 1)) >> 2);
  v13 = v12 | (v12 >> 4) | ((v12 | (v12 >> 4)) >> 8);
  v14 = v13 | (v13 >> 16) | ((v13 | (v13 >> 16)) >> 32);
  if (v14 + 1 > 8)
    v15 = v14 + 1;
  else
    v15 = 8;
  sub_2399168C0(&v18, (HIDWORD(v9) * v10), v15);
  *(_QWORD *)&v19 = v9;
  *((_QWORD *)&v19 + 1) = v8;
  *(_QWORD *)a2 = &off_250ADB688;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a2 + 20) = *(_OWORD *)&v17[12];
  sub_239916924((__n128 *)(a2 + 40), &v18);
  *(_OWORD *)(a2 + 64) = v19;
  return sub_239916980((uint64_t)&v18);
}

void sub_23981E694(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981E6B0@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL8 v7;
  BOOL v8;
  uint64_t v9;
  _BYTE v11[28];
  _QWORD v12[5];
  unint64_t v13;
  uint64_t v14;

  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  v6 = v5 << 32;
  if (!HIDWORD(v5))
    v6 = 0;
  v7 = v5 != 0;
  if ((_DWORD)v5)
    v8 = HIDWORD(v5) == 0;
  else
    v8 = 1;
  *(_QWORD *)v11 = v5;
  *(_QWORD *)&v11[8] = v6 | v7;
  v11[16] = 0;
  v11[24] = 0;
  if (v8)
    v5 = 0;
  v13 = v5;
  v14 = v6 | v7;
  if (((v6 >> 31) & ((v6 >> 31) - 1)) != 0)
    v9 = 2;
  else
    v9 = v6 >> 31;
  sub_239849BC8(v12, &v13, (unint64_t *)&v14, 1, a2, 1, v9);
  *(_QWORD *)a3 = &off_250AE42B8;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(_OWORD *)(a3 + 20) = *(_OWORD *)&v11[12];
  sub_239916924((__n128 *)(a3 + 40), (__n128 *)v12);
  *(_OWORD *)(a3 + 64) = *(_OWORD *)&v12[3];
  return sub_239916980((uint64_t)v12);
}

void sub_23981E794(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981E7B0@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL8 v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  size_t v15;
  _BYTE v17[28];
  __n128 v18;
  __int128 v19;

  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  v5 = v4 << 32;
  if (!HIDWORD(v4))
    v5 = 0;
  v6 = v4 != 0;
  if ((_DWORD)v4)
    v7 = HIDWORD(v4) == 0;
  else
    v7 = 1;
  v8 = v5 | v6;
  *(_QWORD *)v17 = v4;
  *(_QWORD *)&v17[8] = v5 | v6;
  v17[16] = 0;
  v17[24] = 0;
  if (v7)
    v9 = 0;
  else
    v9 = v4;
  v10 = v5 >> 31;
  if ((v10 & (v10 - 1)) != 0)
    v11 = 1;
  else
    v11 = v10 - 1;
  v12 = v11 | (v11 >> 1) | ((v11 | (v11 >> 1)) >> 2);
  v13 = v12 | (v12 >> 4) | ((v12 | (v12 >> 4)) >> 8);
  v14 = v13 | (v13 >> 16) | ((v13 | (v13 >> 16)) >> 32);
  if (v14 + 1 > 8)
    v15 = v14 + 1;
  else
    v15 = 8;
  sub_2399168C0(&v18, (HIDWORD(v9) * v10) & 0x1FFFFFFFELL, v15);
  *(_QWORD *)&v19 = v9;
  *((_QWORD *)&v19 + 1) = 2 * v8;
  *(_QWORD *)a2 = &off_250AE42B8;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a2 + 20) = *(_OWORD *)&v17[12];
  sub_239916924((__n128 *)(a2 + 40), &v18);
  *(_OWORD *)(a2 + 64) = v19;
  return sub_239916980((uint64_t)&v18);
}

void sub_23981E8C0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981E8DC@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL8 v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  _BYTE v13[28];
  __n128 v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;

  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  v6 = v5 << 32;
  if (!HIDWORD(v5))
    v6 = 0;
  v7 = v5 != 0;
  if ((_DWORD)v5)
    v8 = HIDWORD(v5) == 0;
  else
    v8 = 1;
  *(_QWORD *)v13 = v5;
  *(_QWORD *)&v13[8] = v6 | v7;
  v13[16] = 0;
  v13[24] = 0;
  if (v8)
    v5 = 0;
  v16 = v5;
  v17 = v6 | v7;
  if (((v6 >> 31) & ((v6 >> 31) - 1)) != 0)
    v9 = 2;
  else
    v9 = v6 >> 31;
  sub_23984A2A0(&v14, &v16, (unint64_t *)&v17, 1, a2, 1, v9);
  *(_QWORD *)a3 = &off_250AE5F58;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v13;
  *(_OWORD *)(a3 + 20) = *(_OWORD *)&v13[12];
  sub_239916924((__n128 *)(a3 + 40), &v14);
  *(_OWORD *)(a3 + 64) = v15;
  if (v14.n128_u64[1])
  {
    if (DWORD1(v15))
      v10 = (_DWORD)v15 == 0;
    else
      v10 = 1;
    if (v10)
      v11 = 0;
    else
      v11 = DWORD1(v15);
    if (v11 * (*((_QWORD *)&v15 + 1) >> 33) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v14);
}

void sub_23981EA14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  nullsub_4(v2);
  sub_23981024C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23981EA30@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL8 v6;
  BOOL v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  _BYTE v12[28];
  __n128 v13;
  __int128 v14;
  unint64_t v15;
  uint64_t v16;

  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  v5 = v4 << 32;
  if (!HIDWORD(v4))
    v5 = 0;
  v6 = v4 != 0;
  if ((_DWORD)v4)
    v7 = HIDWORD(v4) == 0;
  else
    v7 = 1;
  *(_QWORD *)v12 = v4;
  *(_QWORD *)&v12[8] = v5 | v6;
  v12[16] = 0;
  v12[24] = 0;
  if (v7)
    v4 = 0;
  v15 = v4;
  v16 = v5 | v6;
  if (((v5 >> 31) & ((v5 >> 31) - 1)) != 0)
    v8 = 2;
  else
    v8 = v5 >> 31;
  sub_23984A2A0(&v13, &v15, (unint64_t *)&v16, 1, 0, 0, v8);
  *(_QWORD *)a2 = &off_250AE5F58;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v12;
  *(_OWORD *)(a2 + 20) = *(_OWORD *)&v12[12];
  sub_239916924((__n128 *)(a2 + 40), &v13);
  *(_OWORD *)(a2 + 64) = v14;
  if (v13.n128_u64[1])
  {
    if (DWORD1(v14))
      v9 = (_DWORD)v14 == 0;
    else
      v9 = 1;
    if (v9)
      v10 = 0;
    else
      v10 = DWORD1(v14);
    if (v10 * (*((_QWORD *)&v14 + 1) >> 33) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v13);
}

void sub_23981EB68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  nullsub_4(v2);
  sub_23981024C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23981EB84@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[28];
  _DWORD v4[11];
  int v5;
  uint64_t v6;
  unint64_t v7;

  v5 = 0;
  v3[24] = 0;
  memset(v3, 0, 17);
  v6 = 0;
  v7 = 0;
  sub_23957F64C(v4, &v6, &v7, 1, &v5, 1, 0);
  *(_QWORD *)a1 = &off_250ADDAE8;
  *(_OWORD *)(a1 + 8) = 0uLL;
  *(_OWORD *)(a1 + 20) = *(_OWORD *)&v3[12];
  sub_239916924((__n128 *)(a1 + 40), (__n128 *)v4);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)&v4[6];
  return sub_239916980((uint64_t)v4);
}

void sub_23981EC24(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v2);
  sub_239916980(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23981EC40@<X0>(_DWORD *a1@<X1>, _DWORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL8 v7;
  BOOL v8;
  uint64_t v9;
  _BYTE v11[28];
  _QWORD v12[5];
  unint64_t v13;
  uint64_t v14;

  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  v6 = v5 << 32;
  if (!HIDWORD(v5))
    v6 = 0;
  v7 = v5 != 0;
  if ((_DWORD)v5)
    v8 = HIDWORD(v5) == 0;
  else
    v8 = 1;
  *(_QWORD *)v11 = v5;
  *(_QWORD *)&v11[8] = v6 | v7;
  v11[16] = 0;
  v11[24] = 0;
  if (v8)
    v5 = 0;
  v13 = v5;
  v14 = v6 | v7;
  if (((v6 >> 30) & ((v6 >> 30) - 1)) != 0)
    v9 = 4;
  else
    v9 = v6 >> 30;
  sub_23957F64C(v12, &v13, (unint64_t *)&v14, 1, a2, 1, v9);
  *(_QWORD *)a3 = &off_250ADDAE8;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v11;
  *(_OWORD *)(a3 + 20) = *(_OWORD *)&v11[12];
  sub_239916924((__n128 *)(a3 + 40), (__n128 *)v12);
  *(_OWORD *)(a3 + 64) = *(_OWORD *)&v12[3];
  return sub_239916980((uint64_t)v12);
}

void sub_23981ED24(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981ED40@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL8 v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  size_t v15;
  _BYTE v17[28];
  __n128 v18;
  __int128 v19;

  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  v5 = v4 << 32;
  if (!HIDWORD(v4))
    v5 = 0;
  v6 = v4 != 0;
  if ((_DWORD)v4)
    v7 = HIDWORD(v4) == 0;
  else
    v7 = 1;
  v8 = v5 | v6;
  *(_QWORD *)v17 = v4;
  *(_QWORD *)&v17[8] = v5 | v6;
  v17[16] = 0;
  v17[24] = 0;
  if (v7)
    v9 = 0;
  else
    v9 = v4;
  v10 = v5 >> 30;
  v11 = 3;
  if ((v10 & (v10 - 1)) == 0)
    v11 = v10 - 1;
  v12 = v11 | (v11 >> 1) | ((v11 | (v11 >> 1)) >> 2);
  v13 = v12 | (v12 >> 4) | ((v12 | (v12 >> 4)) >> 8);
  v14 = v13 | (v13 >> 16) | ((v13 | (v13 >> 16)) >> 32);
  if (v14 + 1 > 8)
    v15 = v14 + 1;
  else
    v15 = 8;
  sub_2399168C0(&v18, (HIDWORD(v9) * v10) & 0x3FFFFFFFCLL, v15);
  *(_QWORD *)&v19 = v9;
  *((_QWORD *)&v19 + 1) = 4 * v8;
  *(_QWORD *)a2 = &off_250ADDAE8;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a2 + 20) = *(_OWORD *)&v17[12];
  sub_239916924((__n128 *)(a2 + 40), &v18);
  *(_OWORD *)(a2 + 64) = v19;
  return sub_239916980((uint64_t)&v18);
}

void sub_23981EE54(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981EE70@<X0>(_DWORD *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 2;
  *(_QWORD *)&v23[4] = v5;
  v6 = 2 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x1FFFFFFFFLL | ((unint64_t)(v7 >> 1) << 33);
  *(_DWORD *)v23 = 2;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if ((v7 & (v7 - 1)) != 0)
    v15 = 1;
  else
    v15 = v7;
  sub_23984AFE8((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECA18;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_23981EFFC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981F01C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v24 = 2;
  *(_QWORD *)&v24[4] = v4;
  v5 = 2 * ((_DWORD)v4 != 0);
  if (HIDWORD(v4))
    v6 = (v5 * *(_DWORD *)&v24[4]);
  else
    v6 = 0;
  *(_DWORD *)v24 = 2;
  v7 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v5 & 0x1FFFFFFFFLL | ((unint64_t)(v6 >> 1) << 33);
  v8 = *(_QWORD *)v24;
  *(_QWORD *)v19 = v7;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v24;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = *(_QWORD *)&v24[4];
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  if (HIDWORD(v7))
    v9 = (_DWORD)v7 == 0;
  else
    v9 = 1;
  v10 = v9 || HIDWORD(v4) == 0;
  if (v10)
    v11 = 0;
  else
    v11 = v7;
  if (v10)
    v12 = 0;
  else
    v12 = HIDWORD(v4);
  v13 = v6 - 1;
  if ((v6 & (v6 - 1)) != 0)
    v13 = 0;
  v14 = v13 | (v13 >> 1) | ((v13 | (v13 >> 1)) >> 2);
  v15 = v14 | (v14 >> 4) | ((v14 | (v14 >> 4)) >> 8);
  v16 = v15 | (v15 >> 16) | ((v15 | (v15 >> 16)) >> 32);
  if (v16 + 1 > 8)
    v17 = v16 + 1;
  else
    v17 = 8;
  sub_2399168C0(&v22, (v12 * v6), v17);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_QWORD *)v23 = v11;
  *(_DWORD *)&v23[8] = v12;
  *(_QWORD *)&v23[12] = v8;
  *(_DWORD *)&v23[20] = v6;
  *(_QWORD *)a2 = &off_250AECA18;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)v23;
  *(_QWORD *)(a2 + 104) = *(_QWORD *)&v23[16];
  return sub_239916980((uint64_t)&v22);
}

void sub_23981F1D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981F1F4@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 2;
  *(_QWORD *)&v23[4] = v5;
  v6 = 2 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x1FFFFFFFFLL | ((unint64_t)(v7 >> 1) << 33);
  *(_DWORD *)v23 = 2;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984C1C4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECA98;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_23981F384(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981F3A4@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239857C5C((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AECA98;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_23981F430(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981F44C@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v28 = 2;
  *(_QWORD *)&v28[4] = v5;
  v6 = 2 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x1FFFFFFFFLL | ((unint64_t)(v7 >> 1) << 33);
  *(_DWORD *)v28 = 2;
  v10 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_DWORD *)&v28[4] = v9;
  *(_QWORD *)v20 = v10;
  *(_DWORD *)&v20[8] = HIDWORD(v5);
  *(_QWORD *)&v20[12] = *(_QWORD *)v28;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v5;
  *(_QWORD *)&v21 = v9;
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  *(_DWORD *)&v28[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v26 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v27 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984DDC4((uint64_t)&v23, (unsigned int *)&v26, (uint64_t *)v28, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECB18;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v20;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  sub_239916924((__n128 *)(a3 + 64), &v23);
  *(_OWORD *)(a3 + 88) = v24;
  *(_QWORD *)(a3 + 104) = v25;
  if (v23.n128_u64[1])
  {
    v16 = DWORD2(v24);
    if (DWORD2(v24))
      v17 = DWORD1(v24) == 0;
    else
      v17 = 1;
    if (v17 || (_DWORD)v24 == 0)
      v16 = 0;
    if (v16 * (HIDWORD(v25) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v23);
}

void sub_23981F634(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23981F66C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE v27[12];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v27 = 2;
  *(_QWORD *)&v27[4] = v4;
  v5 = 2 * ((_DWORD)v4 != 0);
  LODWORD(v6) = v5 * v4;
  v7 = HIDWORD(v4);
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  v8 = v5 & 0x1FFFFFFFFLL | ((unint64_t)(v6 >> 1) << 33);
  *(_DWORD *)v27 = 2;
  v9 = *(_QWORD *)v27;
  *(_DWORD *)v27 = 1;
  *(_DWORD *)&v27[4] = v8;
  *(_QWORD *)v19 = v9;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v27;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = v8;
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  *(_DWORD *)&v27[8] = v6;
  if (HIDWORD(v9))
    v10 = (_DWORD)v9 == 0;
  else
    v10 = 1;
  v11 = v10 || HIDWORD(v4) == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v25 = v12;
  if (v11)
    v13 = 0;
  else
    v13 = v7;
  v26 = v13;
  if (((2 * v6) & (2 * v6 - 1)) != 0)
    v14 = 2;
  else
    v14 = 2 * v6;
  sub_23984DDC4((uint64_t)&v22, (unsigned int *)&v25, (uint64_t *)v27, 1, 0, 0, v14);
  *(_QWORD *)a2 = &off_250AECB18;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 104) = v24;
  if (v22.n128_u64[1])
  {
    v15 = DWORD2(v23);
    if (DWORD2(v23))
      v16 = DWORD1(v23) == 0;
    else
      v16 = 1;
    if (v16 || (_DWORD)v23 == 0)
      v15 = 0;
    if (v15 * (HIDWORD(v24) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v22);
}

void sub_23981F854(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23981F88C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 2;
  *(_QWORD *)&v23[4] = v5;
  v6 = 2 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x1FFFFFFFFLL | ((unint64_t)(v7 >> 1) << 33);
  *(_DWORD *)v23 = 2;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((4 * v7) & (4 * v7 - 1)) != 0)
    v15 = 4;
  else
    v15 = 4 * v7;
  sub_23984F1E4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECB98;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_23981FA20(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981FA40@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239857DCC((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AECB98;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_23981FACC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981FAE8@<X0>(_DWORD *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 3;
  *(_QWORD *)&v23[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v23[4];
  v8 = HIDWORD(*(_QWORD *)&v23[4]);
  if (HIDWORD(*(_QWORD *)&v23[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v23 = 3;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = v8;
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if ((v7 & (v7 - 1)) != 0)
    v15 = 1;
  else
    v15 = v7;
  sub_23984AFE8((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECC18;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_23981FC6C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981FC8C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v24[24];
  _BYTE v25[12];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v25 = 3;
  *(_QWORD *)&v25[4] = v4;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  v6 = HIDWORD(*(_QWORD *)&v25[4]);
  if (HIDWORD(*(_QWORD *)&v25[4]))
    v7 = (v5 * *(_DWORD *)&v25[4]);
  else
    v7 = 0;
  *(_DWORD *)v25 = 3;
  v8 = *(_QWORD *)v25;
  *(_DWORD *)v25 = 1;
  *(_QWORD *)&v25[4] = v5 | (v7 << 32);
  v9 = *(_QWORD *)v25;
  *(_QWORD *)v20 = v8;
  *(_DWORD *)&v20[8] = v6;
  *(_QWORD *)&v20[12] = *(_QWORD *)v25;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v4;
  *(_QWORD *)&v21 = *(_QWORD *)&v25[4];
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  if (HIDWORD(v8))
    v10 = (_DWORD)v8 == 0;
  else
    v10 = 1;
  v11 = v10 || (_DWORD)v6 == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v8;
  if (v11)
    v13 = 0;
  else
    v13 = v6;
  v14 = v7 - 1;
  if ((v7 & (v7 - 1)) != 0)
    v14 = 0;
  v15 = v14 | (v14 >> 1) | ((v14 | (v14 >> 1)) >> 2);
  v16 = v15 | (v15 >> 4) | ((v15 | (v15 >> 4)) >> 8);
  v17 = v16 | (v16 >> 16) | ((v16 | (v16 >> 16)) >> 32);
  if (v17 + 1 > 8)
    v18 = v17 + 1;
  else
    v18 = 8;
  sub_2399168C0(&v23, (v13 * v7), v18);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v20;
  *(_QWORD *)v24 = v12;
  *(_DWORD *)&v24[8] = v13;
  *(_QWORD *)&v24[12] = v9;
  *(_DWORD *)&v24[20] = v7;
  *(_QWORD *)a2 = &off_250AECC18;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 56) = v22;
  sub_239916924((__n128 *)(a2 + 64), &v23);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)v24;
  *(_QWORD *)(a2 + 104) = *(_QWORD *)&v24[16];
  return sub_239916980((uint64_t)&v23);
}

void sub_23981FE3C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23981FE5C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 3;
  *(_QWORD *)&v23[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v23[4];
  v8 = HIDWORD(*(_QWORD *)&v23[4]);
  if (HIDWORD(*(_QWORD *)&v23[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v23 = 3;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = v8;
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984C1C4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECC98;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_23981FFE8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239820008@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239857F40((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AECC98;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239820094(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398200B0@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v28 = 3;
  *(_QWORD *)&v28[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v28[4];
  v8 = HIDWORD(*(_QWORD *)&v28[4]);
  if (HIDWORD(*(_QWORD *)&v28[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v28 = 3;
  v10 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_DWORD *)&v28[4] = v9;
  *(_QWORD *)v20 = v10;
  *(_DWORD *)&v20[8] = v8;
  *(_QWORD *)&v20[12] = *(_QWORD *)v28;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v5;
  *(_QWORD *)&v21 = v9;
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  *(_DWORD *)&v28[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v26 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v27 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984DDC4((uint64_t)&v23, (unsigned int *)&v26, (uint64_t *)v28, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECD18;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v20;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  sub_239916924((__n128 *)(a3 + 64), &v23);
  *(_OWORD *)(a3 + 88) = v24;
  *(_QWORD *)(a3 + 104) = v25;
  if (v23.n128_u64[1])
  {
    v16 = DWORD2(v24);
    if (DWORD2(v24))
      v17 = DWORD1(v24) == 0;
    else
      v17 = 1;
    if (v17 || (_DWORD)v24 == 0)
      v16 = 0;
    if (v16 * (HIDWORD(v25) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v23);
}

void sub_239820294(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398202CC@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE v27[12];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v27 = 3;
  *(_QWORD *)&v27[4] = v4;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  LODWORD(v6) = v5 * *(_DWORD *)&v27[4];
  v7 = HIDWORD(*(_QWORD *)&v27[4]);
  if (HIDWORD(*(_QWORD *)&v27[4]))
    v6 = v6;
  else
    v6 = 0;
  v8 = v5 | (v6 << 32);
  *(_DWORD *)v27 = 3;
  v9 = *(_QWORD *)v27;
  *(_DWORD *)v27 = 1;
  *(_DWORD *)&v27[4] = v8;
  *(_QWORD *)v19 = v9;
  *(_DWORD *)&v19[8] = v7;
  *(_QWORD *)&v19[12] = *(_QWORD *)v27;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = v8;
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  *(_DWORD *)&v27[8] = v6;
  if (HIDWORD(v9))
    v10 = (_DWORD)v9 == 0;
  else
    v10 = 1;
  v11 = v10 || (_DWORD)v7 == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v25 = v12;
  if (v11)
    v13 = 0;
  else
    v13 = v7;
  v26 = v13;
  if (((2 * v6) & (2 * v6 - 1)) != 0)
    v14 = 2;
  else
    v14 = 2 * v6;
  sub_23984DDC4((uint64_t)&v22, (unsigned int *)&v25, (uint64_t *)v27, 1, 0, 0, v14);
  *(_QWORD *)a2 = &off_250AECD18;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 104) = v24;
  if (v22.n128_u64[1])
  {
    v15 = DWORD2(v23);
    if (DWORD2(v23))
      v16 = DWORD1(v23) == 0;
    else
      v16 = 1;
    if (v16 || (_DWORD)v23 == 0)
      v15 = 0;
    if (v15 * (HIDWORD(v24) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v22);
}

void sub_2398204B0(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398204E8@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 3;
  *(_QWORD *)&v23[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v23[4];
  v8 = HIDWORD(*(_QWORD *)&v23[4]);
  if (HIDWORD(*(_QWORD *)&v23[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v23 = 3;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = v8;
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((4 * v7) & (4 * v7 - 1)) != 0)
    v15 = 4;
  else
    v15 = 4 * v7;
  sub_23984F1E4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECD98;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239820674(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239820694@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_2398580A8((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AECD98;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239820720(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23982073C@<X0>(_DWORD *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if ((v7 & (v7 - 1)) != 0)
    v15 = 1;
  else
    v15 = v7;
  sub_23984AFE8((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECE18;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_2398208C8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398208E8@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v24 = 4;
  *(_QWORD *)&v24[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  if (HIDWORD(v4))
    v6 = (v5 * *(_DWORD *)&v24[4]);
  else
    v6 = 0;
  *(_DWORD *)v24 = 4;
  v7 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  v8 = *(_QWORD *)v24;
  *(_QWORD *)v19 = v7;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v24;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = *(_QWORD *)&v24[4];
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  if (HIDWORD(v7))
    v9 = (_DWORD)v7 == 0;
  else
    v9 = 1;
  v10 = v9 || HIDWORD(v4) == 0;
  if (v10)
    v11 = 0;
  else
    v11 = v7;
  if (v10)
    v12 = 0;
  else
    v12 = HIDWORD(v4);
  v13 = v6 - 1;
  if ((v6 & (v6 - 1)) != 0)
    v13 = 0;
  v14 = v13 | (v13 >> 1) | ((v13 | (v13 >> 1)) >> 2);
  v15 = v14 | (v14 >> 4) | ((v14 | (v14 >> 4)) >> 8);
  v16 = v15 | (v15 >> 16) | ((v15 | (v15 >> 16)) >> 32);
  if (v16 + 1 > 8)
    v17 = v16 + 1;
  else
    v17 = 8;
  sub_2399168C0(&v22, (v12 * v6), v17);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_QWORD *)v23 = v11;
  *(_DWORD *)&v23[8] = v12;
  *(_QWORD *)&v23[12] = v8;
  *(_DWORD *)&v23[20] = v6;
  *(_QWORD *)a2 = &off_250AECE18;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)v23;
  *(_QWORD *)(a2 + 104) = *(_QWORD *)&v23[16];
  return sub_239916980((uint64_t)&v22);
}

void sub_239820AA0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239820AC0@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984C1C4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECE98;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239820C54(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239820C74@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858210((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AECE98;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239820D00(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239820D1C@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v28 = 4;
  *(_QWORD *)&v28[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v28 = 4;
  v10 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_DWORD *)&v28[4] = v9;
  *(_QWORD *)v20 = v10;
  *(_DWORD *)&v20[8] = HIDWORD(v5);
  *(_QWORD *)&v20[12] = *(_QWORD *)v28;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v5;
  *(_QWORD *)&v21 = v9;
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  *(_DWORD *)&v28[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v26 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v27 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984DDC4((uint64_t)&v23, (unsigned int *)&v26, (uint64_t *)v28, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECF18;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v20;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  sub_239916924((__n128 *)(a3 + 64), &v23);
  *(_OWORD *)(a3 + 88) = v24;
  *(_QWORD *)(a3 + 104) = v25;
  if (v23.n128_u64[1])
  {
    v16 = DWORD2(v24);
    if (DWORD2(v24))
      v17 = DWORD1(v24) == 0;
    else
      v17 = 1;
    if (v17 || (_DWORD)v24 == 0)
      v16 = 0;
    if (v16 * (HIDWORD(v25) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v23);
}

void sub_239820F08(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239820F40@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE v27[12];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v27 = 4;
  *(_QWORD *)&v27[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  LODWORD(v6) = v5 * v4;
  v7 = HIDWORD(v4);
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  v8 = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  *(_DWORD *)v27 = 4;
  v9 = *(_QWORD *)v27;
  *(_DWORD *)v27 = 1;
  *(_DWORD *)&v27[4] = v8;
  *(_QWORD *)v19 = v9;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v27;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = v8;
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  *(_DWORD *)&v27[8] = v6;
  if (HIDWORD(v9))
    v10 = (_DWORD)v9 == 0;
  else
    v10 = 1;
  v11 = v10 || HIDWORD(v4) == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v25 = v12;
  if (v11)
    v13 = 0;
  else
    v13 = v7;
  v26 = v13;
  if (((2 * v6) & (2 * v6 - 1)) != 0)
    v14 = 2;
  else
    v14 = 2 * v6;
  sub_23984DDC4((uint64_t)&v22, (unsigned int *)&v25, (uint64_t *)v27, 1, 0, 0, v14);
  *(_QWORD *)a2 = &off_250AECF18;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 104) = v24;
  if (v22.n128_u64[1])
  {
    v15 = DWORD2(v23);
    if (DWORD2(v23))
      v16 = DWORD1(v23) == 0;
    else
      v16 = 1;
    if (v16 || (_DWORD)v23 == 0)
      v15 = 0;
    if (v15 * (HIDWORD(v24) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v22);
}

void sub_23982112C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239821164@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((4 * v7) & (4 * v7 - 1)) != 0)
    v15 = 4;
  else
    v15 = 4 * v7;
  sub_23984F1E4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AECF98;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_2398212F4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239821314@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858380((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AECF98;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_2398213A0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398213BC@<X0>(_DWORD *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 3;
  *(_QWORD *)&v23[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v23[4];
  v8 = HIDWORD(*(_QWORD *)&v23[4]);
  if (HIDWORD(*(_QWORD *)&v23[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v23 = 3;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = v8;
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if ((v7 & (v7 - 1)) != 0)
    v15 = 1;
  else
    v15 = v7;
  sub_23984AFE8((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE3948;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239821540(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239821560@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v24[24];
  _BYTE v25[12];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v25 = 3;
  *(_QWORD *)&v25[4] = v4;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  v6 = HIDWORD(*(_QWORD *)&v25[4]);
  if (HIDWORD(*(_QWORD *)&v25[4]))
    v7 = (v5 * *(_DWORD *)&v25[4]);
  else
    v7 = 0;
  *(_DWORD *)v25 = 3;
  v8 = *(_QWORD *)v25;
  *(_DWORD *)v25 = 1;
  *(_QWORD *)&v25[4] = v5 | (v7 << 32);
  v9 = *(_QWORD *)v25;
  *(_QWORD *)v20 = v8;
  *(_DWORD *)&v20[8] = v6;
  *(_QWORD *)&v20[12] = *(_QWORD *)v25;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v4;
  *(_QWORD *)&v21 = *(_QWORD *)&v25[4];
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  if (HIDWORD(v8))
    v10 = (_DWORD)v8 == 0;
  else
    v10 = 1;
  v11 = v10 || (_DWORD)v6 == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v8;
  if (v11)
    v13 = 0;
  else
    v13 = v6;
  v14 = v7 - 1;
  if ((v7 & (v7 - 1)) != 0)
    v14 = 0;
  v15 = v14 | (v14 >> 1) | ((v14 | (v14 >> 1)) >> 2);
  v16 = v15 | (v15 >> 4) | ((v15 | (v15 >> 4)) >> 8);
  v17 = v16 | (v16 >> 16) | ((v16 | (v16 >> 16)) >> 32);
  if (v17 + 1 > 8)
    v18 = v17 + 1;
  else
    v18 = 8;
  sub_2399168C0(&v23, (v13 * v7), v18);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v20;
  *(_QWORD *)v24 = v12;
  *(_DWORD *)&v24[8] = v13;
  *(_QWORD *)&v24[12] = v9;
  *(_DWORD *)&v24[20] = v7;
  *(_QWORD *)a2 = &off_250AE3948;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 56) = v22;
  sub_239916924((__n128 *)(a2 + 64), &v23);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)v24;
  *(_QWORD *)(a2 + 104) = *(_QWORD *)&v24[16];
  return sub_239916980((uint64_t)&v23);
}

void sub_239821710(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239821730@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 3;
  *(_QWORD *)&v23[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v23[4];
  v8 = HIDWORD(*(_QWORD *)&v23[4]);
  if (HIDWORD(*(_QWORD *)&v23[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v23 = 3;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = v8;
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984C1C4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AED018;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_2398218BC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398218DC@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239857F40((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AED018;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239821968(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239821984@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v28 = 3;
  *(_QWORD *)&v28[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v28[4];
  v8 = HIDWORD(*(_QWORD *)&v28[4]);
  if (HIDWORD(*(_QWORD *)&v28[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v28 = 3;
  v10 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_DWORD *)&v28[4] = v9;
  *(_QWORD *)v20 = v10;
  *(_DWORD *)&v20[8] = v8;
  *(_QWORD *)&v20[12] = *(_QWORD *)v28;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v5;
  *(_QWORD *)&v21 = v9;
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  *(_DWORD *)&v28[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v26 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v27 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984DDC4((uint64_t)&v23, (unsigned int *)&v26, (uint64_t *)v28, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AED098;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v20;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  sub_239916924((__n128 *)(a3 + 64), &v23);
  *(_OWORD *)(a3 + 88) = v24;
  *(_QWORD *)(a3 + 104) = v25;
  if (v23.n128_u64[1])
  {
    v16 = DWORD2(v24);
    if (DWORD2(v24))
      v17 = DWORD1(v24) == 0;
    else
      v17 = 1;
    if (v17 || (_DWORD)v24 == 0)
      v16 = 0;
    if (v16 * (HIDWORD(v25) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v23);
}

void sub_239821B68(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239821BA0@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE v27[12];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v27 = 3;
  *(_QWORD *)&v27[4] = v4;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  LODWORD(v6) = v5 * *(_DWORD *)&v27[4];
  v7 = HIDWORD(*(_QWORD *)&v27[4]);
  if (HIDWORD(*(_QWORD *)&v27[4]))
    v6 = v6;
  else
    v6 = 0;
  v8 = v5 | (v6 << 32);
  *(_DWORD *)v27 = 3;
  v9 = *(_QWORD *)v27;
  *(_DWORD *)v27 = 1;
  *(_DWORD *)&v27[4] = v8;
  *(_QWORD *)v19 = v9;
  *(_DWORD *)&v19[8] = v7;
  *(_QWORD *)&v19[12] = *(_QWORD *)v27;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = v8;
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  *(_DWORD *)&v27[8] = v6;
  if (HIDWORD(v9))
    v10 = (_DWORD)v9 == 0;
  else
    v10 = 1;
  v11 = v10 || (_DWORD)v7 == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v25 = v12;
  if (v11)
    v13 = 0;
  else
    v13 = v7;
  v26 = v13;
  if (((2 * v6) & (2 * v6 - 1)) != 0)
    v14 = 2;
  else
    v14 = 2 * v6;
  sub_23984DDC4((uint64_t)&v22, (unsigned int *)&v25, (uint64_t *)v27, 1, 0, 0, v14);
  *(_QWORD *)a2 = &off_250AED098;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 104) = v24;
  if (v22.n128_u64[1])
  {
    v15 = DWORD2(v23);
    if (DWORD2(v23))
      v16 = DWORD1(v23) == 0;
    else
      v16 = 1;
    if (v16 || (_DWORD)v23 == 0)
      v15 = 0;
    if (v15 * (HIDWORD(v24) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v22);
}

void sub_239821D84(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239821DBC@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 3;
  *(_QWORD *)&v23[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v23[4];
  v8 = HIDWORD(*(_QWORD *)&v23[4]);
  if (HIDWORD(*(_QWORD *)&v23[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v23 = 3;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = v8;
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((4 * v7) & (4 * v7 - 1)) != 0)
    v15 = 4;
  else
    v15 = 4 * v7;
  sub_23984F1E4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AED118;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239821F48(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239821F68@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_2398580A8((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AED118;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239821FF4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239822010@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[32];
  __int128 v4;
  uint64_t v5;
  _QWORD v6[6];
  char v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v7 = 0;
  v10 = 1;
  *(_QWORD *)v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(_QWORD *)&v3[12] = 1;
  *(_DWORD *)&v3[20] = 0;
  *(_QWORD *)&v3[24] = 0;
  *(_QWORD *)&v4 = 0;
  BYTE8(v4) = 0;
  BYTE4(v5) = 0;
  v11 = 0;
  v8 = 0;
  v9 = 0;
  sub_23984AFE8((uint64_t)v6, (unsigned int *)&v8, &v10, 1, &v7, 1, 0);
  *(_QWORD *)a1 = &off_250ADCA40;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&v3[16];
  *(_OWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  sub_239916924((__n128 *)(a1 + 64), (__n128 *)v6);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)&v6[3];
  *(_QWORD *)(a1 + 104) = v6[5];
  return sub_239916980((uint64_t)v6);
}

void sub_239822188(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398221A8@<X0>(_DWORD *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 3;
  *(_QWORD *)&v23[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v23[4];
  v8 = HIDWORD(*(_QWORD *)&v23[4]);
  if (HIDWORD(*(_QWORD *)&v23[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v23 = 3;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = v8;
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if ((v7 & (v7 - 1)) != 0)
    v15 = 1;
  else
    v15 = v7;
  sub_23984AFE8((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250ADCA40;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_23982232C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23982234C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v24[24];
  _BYTE v25[12];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v25 = 3;
  *(_QWORD *)&v25[4] = v4;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  v6 = HIDWORD(*(_QWORD *)&v25[4]);
  if (HIDWORD(*(_QWORD *)&v25[4]))
    v7 = (v5 * *(_DWORD *)&v25[4]);
  else
    v7 = 0;
  *(_DWORD *)v25 = 3;
  v8 = *(_QWORD *)v25;
  *(_DWORD *)v25 = 1;
  *(_QWORD *)&v25[4] = v5 | (v7 << 32);
  v9 = *(_QWORD *)v25;
  *(_QWORD *)v20 = v8;
  *(_DWORD *)&v20[8] = v6;
  *(_QWORD *)&v20[12] = *(_QWORD *)v25;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v4;
  *(_QWORD *)&v21 = *(_QWORD *)&v25[4];
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  if (HIDWORD(v8))
    v10 = (_DWORD)v8 == 0;
  else
    v10 = 1;
  v11 = v10 || (_DWORD)v6 == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v8;
  if (v11)
    v13 = 0;
  else
    v13 = v6;
  v14 = v7 - 1;
  if ((v7 & (v7 - 1)) != 0)
    v14 = 0;
  v15 = v14 | (v14 >> 1) | ((v14 | (v14 >> 1)) >> 2);
  v16 = v15 | (v15 >> 4) | ((v15 | (v15 >> 4)) >> 8);
  v17 = v16 | (v16 >> 16) | ((v16 | (v16 >> 16)) >> 32);
  if (v17 + 1 > 8)
    v18 = v17 + 1;
  else
    v18 = 8;
  sub_2399168C0(&v23, (v13 * v7), v18);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v20;
  *(_QWORD *)v24 = v12;
  *(_DWORD *)&v24[8] = v13;
  *(_QWORD *)&v24[12] = v9;
  *(_DWORD *)&v24[20] = v7;
  *(_QWORD *)a2 = &off_250ADCA40;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 56) = v22;
  sub_239916924((__n128 *)(a2 + 64), &v23);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)v24;
  *(_QWORD *)(a2 + 104) = *(_QWORD *)&v24[16];
  return sub_239916980((uint64_t)&v23);
}

void sub_2398224FC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23982251C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 3;
  *(_QWORD *)&v23[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v23[4];
  v8 = HIDWORD(*(_QWORD *)&v23[4]);
  if (HIDWORD(*(_QWORD *)&v23[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v23 = 3;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = v8;
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984C1C4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE6198;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_2398226A8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398226C8@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239857F40((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AE6198;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239822754(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239822770@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v28 = 3;
  *(_QWORD *)&v28[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v28[4];
  v8 = HIDWORD(*(_QWORD *)&v28[4]);
  if (HIDWORD(*(_QWORD *)&v28[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v28 = 3;
  v10 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_DWORD *)&v28[4] = v9;
  *(_QWORD *)v20 = v10;
  *(_DWORD *)&v20[8] = v8;
  *(_QWORD *)&v20[12] = *(_QWORD *)v28;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v5;
  *(_QWORD *)&v21 = v9;
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  *(_DWORD *)&v28[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v26 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v27 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984DDC4((uint64_t)&v23, (unsigned int *)&v26, (uint64_t *)v28, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE0C18;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v20;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  sub_239916924((__n128 *)(a3 + 64), &v23);
  *(_OWORD *)(a3 + 88) = v24;
  *(_QWORD *)(a3 + 104) = v25;
  if (v23.n128_u64[1])
  {
    v16 = DWORD2(v24);
    if (DWORD2(v24))
      v17 = DWORD1(v24) == 0;
    else
      v17 = 1;
    if (v17 || (_DWORD)v24 == 0)
      v16 = 0;
    if (v16 * (HIDWORD(v25) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v23);
}

void sub_239822954(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23982298C@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE v27[12];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v27 = 3;
  *(_QWORD *)&v27[4] = v4;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  LODWORD(v6) = v5 * *(_DWORD *)&v27[4];
  v7 = HIDWORD(*(_QWORD *)&v27[4]);
  if (HIDWORD(*(_QWORD *)&v27[4]))
    v6 = v6;
  else
    v6 = 0;
  v8 = v5 | (v6 << 32);
  *(_DWORD *)v27 = 3;
  v9 = *(_QWORD *)v27;
  *(_DWORD *)v27 = 1;
  *(_DWORD *)&v27[4] = v8;
  *(_QWORD *)v19 = v9;
  *(_DWORD *)&v19[8] = v7;
  *(_QWORD *)&v19[12] = *(_QWORD *)v27;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = v8;
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  *(_DWORD *)&v27[8] = v6;
  if (HIDWORD(v9))
    v10 = (_DWORD)v9 == 0;
  else
    v10 = 1;
  v11 = v10 || (_DWORD)v7 == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v25 = v12;
  if (v11)
    v13 = 0;
  else
    v13 = v7;
  v26 = v13;
  if (((2 * v6) & (2 * v6 - 1)) != 0)
    v14 = 2;
  else
    v14 = 2 * v6;
  sub_23984DDC4((uint64_t)&v22, (unsigned int *)&v25, (uint64_t *)v27, 1, 0, 0, v14);
  *(_QWORD *)a2 = &off_250AE0C18;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 104) = v24;
  if (v22.n128_u64[1])
  {
    v15 = DWORD2(v23);
    if (DWORD2(v23))
      v16 = DWORD1(v23) == 0;
    else
      v16 = 1;
    if (v16 || (_DWORD)v23 == 0)
      v15 = 0;
    if (v15 * (HIDWORD(v24) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v22);
}

void sub_239822B70(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239822BA8@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[32];
  __int128 v4;
  uint64_t v5;
  _QWORD v6[6];
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v7 = 0;
  v10 = 1;
  *(_QWORD *)v3 = 3;
  *(_DWORD *)&v3[8] = 0;
  *(_QWORD *)&v3[12] = 1;
  *(_DWORD *)&v3[20] = 0;
  *(_QWORD *)&v3[24] = 0;
  *(_QWORD *)&v4 = 0;
  BYTE8(v4) = 0;
  BYTE4(v5) = 0;
  v11 = 0;
  v8 = 0;
  v9 = 0;
  sub_23984F1E4((uint64_t)v6, (unsigned int *)&v8, &v10, 1, (uint64_t)&v7, 1, 0);
  *(_QWORD *)a1 = &off_250ADEC38;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&v3[16];
  *(_OWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  sub_239916924((__n128 *)(a1 + 64), (__n128 *)v6);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)&v6[3];
  *(_QWORD *)(a1 + 104) = v6[5];
  return sub_239916980((uint64_t)v6);
}

void sub_239822D28(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239822D48@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 3;
  *(_QWORD *)&v23[4] = v5;
  if ((_DWORD)v5)
    v6 = 3;
  else
    v6 = 0;
  LODWORD(v7) = v6 * *(_DWORD *)&v23[4];
  v8 = HIDWORD(*(_QWORD *)&v23[4]);
  if (HIDWORD(*(_QWORD *)&v23[4]))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 | (v7 << 32);
  *(_DWORD *)v23 = 3;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = v8;
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v8 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((4 * v7) & (4 * v7 - 1)) != 0)
    v15 = 4;
  else
    v15 = 4 * v7;
  sub_23984F1E4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250ADEC38;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239822ED4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239822EF4@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_2398580A8((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250ADEC38;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239822F80(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239822F9C@<X0>(_DWORD *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if ((v7 & (v7 - 1)) != 0)
    v15 = 1;
  else
    v15 = v7;
  sub_23984AFE8((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE3B78;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239823128(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239823148@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v24 = 4;
  *(_QWORD *)&v24[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  if (HIDWORD(v4))
    v6 = (v5 * *(_DWORD *)&v24[4]);
  else
    v6 = 0;
  *(_DWORD *)v24 = 4;
  v7 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  v8 = *(_QWORD *)v24;
  *(_QWORD *)v19 = v7;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v24;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = *(_QWORD *)&v24[4];
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  if (HIDWORD(v7))
    v9 = (_DWORD)v7 == 0;
  else
    v9 = 1;
  v10 = v9 || HIDWORD(v4) == 0;
  if (v10)
    v11 = 0;
  else
    v11 = v7;
  if (v10)
    v12 = 0;
  else
    v12 = HIDWORD(v4);
  v13 = v6 - 1;
  if ((v6 & (v6 - 1)) != 0)
    v13 = 0;
  v14 = v13 | (v13 >> 1) | ((v13 | (v13 >> 1)) >> 2);
  v15 = v14 | (v14 >> 4) | ((v14 | (v14 >> 4)) >> 8);
  v16 = v15 | (v15 >> 16) | ((v15 | (v15 >> 16)) >> 32);
  if (v16 + 1 > 8)
    v17 = v16 + 1;
  else
    v17 = 8;
  sub_2399168C0(&v22, (v12 * v6), v17);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_QWORD *)v23 = v11;
  *(_DWORD *)&v23[8] = v12;
  *(_QWORD *)&v23[12] = v8;
  *(_DWORD *)&v23[20] = v6;
  *(_QWORD *)a2 = &off_250AE3B78;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)v23;
  *(_QWORD *)(a2 + 104) = *(_QWORD *)&v23[16];
  return sub_239916980((uint64_t)&v22);
}

void sub_239823300(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239823320@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984C1C4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AED198;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_2398234B4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398234D4@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858210((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AED198;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239823560(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23982357C@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v28 = 4;
  *(_QWORD *)&v28[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v28 = 4;
  v10 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_DWORD *)&v28[4] = v9;
  *(_QWORD *)v20 = v10;
  *(_DWORD *)&v20[8] = HIDWORD(v5);
  *(_QWORD *)&v20[12] = *(_QWORD *)v28;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v5;
  *(_QWORD *)&v21 = v9;
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  *(_DWORD *)&v28[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v26 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v27 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984DDC4((uint64_t)&v23, (unsigned int *)&v26, (uint64_t *)v28, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AED218;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v20;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  sub_239916924((__n128 *)(a3 + 64), &v23);
  *(_OWORD *)(a3 + 88) = v24;
  *(_QWORD *)(a3 + 104) = v25;
  if (v23.n128_u64[1])
  {
    v16 = DWORD2(v24);
    if (DWORD2(v24))
      v17 = DWORD1(v24) == 0;
    else
      v17 = 1;
    if (v17 || (_DWORD)v24 == 0)
      v16 = 0;
    if (v16 * (HIDWORD(v25) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v23);
}

void sub_239823768(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398237A0@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE v27[12];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v27 = 4;
  *(_QWORD *)&v27[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  LODWORD(v6) = v5 * v4;
  v7 = HIDWORD(v4);
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  v8 = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  *(_DWORD *)v27 = 4;
  v9 = *(_QWORD *)v27;
  *(_DWORD *)v27 = 1;
  *(_DWORD *)&v27[4] = v8;
  *(_QWORD *)v19 = v9;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v27;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = v8;
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  *(_DWORD *)&v27[8] = v6;
  if (HIDWORD(v9))
    v10 = (_DWORD)v9 == 0;
  else
    v10 = 1;
  v11 = v10 || HIDWORD(v4) == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v25 = v12;
  if (v11)
    v13 = 0;
  else
    v13 = v7;
  v26 = v13;
  if (((2 * v6) & (2 * v6 - 1)) != 0)
    v14 = 2;
  else
    v14 = 2 * v6;
  sub_23984DDC4((uint64_t)&v22, (unsigned int *)&v25, (uint64_t *)v27, 1, 0, 0, v14);
  *(_QWORD *)a2 = &off_250AED218;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 104) = v24;
  if (v22.n128_u64[1])
  {
    v15 = DWORD2(v23);
    if (DWORD2(v23))
      v16 = DWORD1(v23) == 0;
    else
      v16 = 1;
    if (v16 || (_DWORD)v23 == 0)
      v15 = 0;
    if (v15 * (HIDWORD(v24) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v22);
}

void sub_23982398C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398239C4@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((4 * v7) & (4 * v7 - 1)) != 0)
    v15 = 4;
  else
    v15 = 4 * v7;
  sub_23984F1E4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AED298;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239823B54(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239823B74@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858380((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AED298;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239823C00(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239823C1C@<X0>(_DWORD *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if ((v7 & (v7 - 1)) != 0)
    v15 = 1;
  else
    v15 = v7;
  sub_23984AFE8((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE0A68;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239823DA8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239823DC8@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v24 = 4;
  *(_QWORD *)&v24[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  if (HIDWORD(v4))
    v6 = (v5 * *(_DWORD *)&v24[4]);
  else
    v6 = 0;
  *(_DWORD *)v24 = 4;
  v7 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  v8 = *(_QWORD *)v24;
  *(_QWORD *)v19 = v7;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v24;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = *(_QWORD *)&v24[4];
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  if (HIDWORD(v7))
    v9 = (_DWORD)v7 == 0;
  else
    v9 = 1;
  v10 = v9 || HIDWORD(v4) == 0;
  if (v10)
    v11 = 0;
  else
    v11 = v7;
  if (v10)
    v12 = 0;
  else
    v12 = HIDWORD(v4);
  v13 = v6 - 1;
  if ((v6 & (v6 - 1)) != 0)
    v13 = 0;
  v14 = v13 | (v13 >> 1) | ((v13 | (v13 >> 1)) >> 2);
  v15 = v14 | (v14 >> 4) | ((v14 | (v14 >> 4)) >> 8);
  v16 = v15 | (v15 >> 16) | ((v15 | (v15 >> 16)) >> 32);
  if (v16 + 1 > 8)
    v17 = v16 + 1;
  else
    v17 = 8;
  sub_2399168C0(&v22, (v12 * v6), v17);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_QWORD *)v23 = v11;
  *(_DWORD *)&v23[8] = v12;
  *(_QWORD *)&v23[12] = v8;
  *(_DWORD *)&v23[20] = v6;
  *(_QWORD *)a2 = &off_250AE0A68;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)v23;
  *(_QWORD *)(a2 + 104) = *(_QWORD *)&v23[16];
  return sub_239916980((uint64_t)&v22);
}

void sub_239823F80(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239823FA0@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984C1C4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE6420;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239824134(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239824154@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858210((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AE6420;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_2398241E0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398241FC@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v28 = 4;
  *(_QWORD *)&v28[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v28 = 4;
  v10 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_DWORD *)&v28[4] = v9;
  *(_QWORD *)v20 = v10;
  *(_DWORD *)&v20[8] = HIDWORD(v5);
  *(_QWORD *)&v20[12] = *(_QWORD *)v28;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v5;
  *(_QWORD *)&v21 = v9;
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  *(_DWORD *)&v28[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v26 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v27 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984DDC4((uint64_t)&v23, (unsigned int *)&v26, (uint64_t *)v28, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE0CF0;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v20;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  sub_239916924((__n128 *)(a3 + 64), &v23);
  *(_OWORD *)(a3 + 88) = v24;
  *(_QWORD *)(a3 + 104) = v25;
  if (v23.n128_u64[1])
  {
    v16 = DWORD2(v24);
    if (DWORD2(v24))
      v17 = DWORD1(v24) == 0;
    else
      v17 = 1;
    if (v17 || (_DWORD)v24 == 0)
      v16 = 0;
    if (v16 * (HIDWORD(v25) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v23);
}

void sub_2398243E8(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239824420@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE v27[12];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v27 = 4;
  *(_QWORD *)&v27[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  LODWORD(v6) = v5 * v4;
  v7 = HIDWORD(v4);
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  v8 = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  *(_DWORD *)v27 = 4;
  v9 = *(_QWORD *)v27;
  *(_DWORD *)v27 = 1;
  *(_DWORD *)&v27[4] = v8;
  *(_QWORD *)v19 = v9;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v27;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = v8;
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  *(_DWORD *)&v27[8] = v6;
  if (HIDWORD(v9))
    v10 = (_DWORD)v9 == 0;
  else
    v10 = 1;
  v11 = v10 || HIDWORD(v4) == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v25 = v12;
  if (v11)
    v13 = 0;
  else
    v13 = v7;
  v26 = v13;
  if (((2 * v6) & (2 * v6 - 1)) != 0)
    v14 = 2;
  else
    v14 = 2 * v6;
  sub_23984DDC4((uint64_t)&v22, (unsigned int *)&v25, (uint64_t *)v27, 1, 0, 0, v14);
  *(_QWORD *)a2 = &off_250AE0CF0;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 104) = v24;
  if (v22.n128_u64[1])
  {
    v15 = DWORD2(v23);
    if (DWORD2(v23))
      v16 = DWORD1(v23) == 0;
    else
      v16 = 1;
    if (v16 || (_DWORD)v23 == 0)
      v15 = 0;
    if (v15 * (HIDWORD(v24) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v22);
}

void sub_23982460C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239824644@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((4 * v7) & (4 * v7 - 1)) != 0)
    v15 = 4;
  else
    v15 = 4 * v7;
  sub_23984F1E4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE0B40;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_2398247D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398247F4@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858380((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AE0B40;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239824880(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23982489C@<X0>(_DWORD *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if ((v7 & (v7 - 1)) != 0)
    v15 = 1;
  else
    v15 = v7;
  sub_23984AFE8((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE6678;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239824A28(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239824A48@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v24 = 4;
  *(_QWORD *)&v24[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  if (HIDWORD(v4))
    v6 = (v5 * *(_DWORD *)&v24[4]);
  else
    v6 = 0;
  *(_DWORD *)v24 = 4;
  v7 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  v8 = *(_QWORD *)v24;
  *(_QWORD *)v19 = v7;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v24;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = *(_QWORD *)&v24[4];
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  if (HIDWORD(v7))
    v9 = (_DWORD)v7 == 0;
  else
    v9 = 1;
  v10 = v9 || HIDWORD(v4) == 0;
  if (v10)
    v11 = 0;
  else
    v11 = v7;
  if (v10)
    v12 = 0;
  else
    v12 = HIDWORD(v4);
  v13 = v6 - 1;
  if ((v6 & (v6 - 1)) != 0)
    v13 = 0;
  v14 = v13 | (v13 >> 1) | ((v13 | (v13 >> 1)) >> 2);
  v15 = v14 | (v14 >> 4) | ((v14 | (v14 >> 4)) >> 8);
  v16 = v15 | (v15 >> 16) | ((v15 | (v15 >> 16)) >> 32);
  if (v16 + 1 > 8)
    v17 = v16 + 1;
  else
    v17 = 8;
  sub_2399168C0(&v22, (v12 * v6), v17);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_QWORD *)v23 = v11;
  *(_DWORD *)&v23[8] = v12;
  *(_QWORD *)&v23[12] = v8;
  *(_DWORD *)&v23[20] = v6;
  *(_QWORD *)a2 = &off_250AE6678;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)v23;
  *(_QWORD *)(a2 + 104) = *(_QWORD *)&v23[16];
  return sub_239916980((uint64_t)&v22);
}

void sub_239824C00(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239824C20@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984C1C4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AED318;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239824DB4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239824DD4@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858210((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AED318;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239824E60(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239824E7C@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v28 = 4;
  *(_QWORD *)&v28[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v28 = 4;
  v10 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_DWORD *)&v28[4] = v9;
  *(_QWORD *)v20 = v10;
  *(_DWORD *)&v20[8] = HIDWORD(v5);
  *(_QWORD *)&v20[12] = *(_QWORD *)v28;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v5;
  *(_QWORD *)&v21 = v9;
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  *(_DWORD *)&v28[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v26 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v27 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984DDC4((uint64_t)&v23, (unsigned int *)&v26, (uint64_t *)v28, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AED398;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v20;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  sub_239916924((__n128 *)(a3 + 64), &v23);
  *(_OWORD *)(a3 + 88) = v24;
  *(_QWORD *)(a3 + 104) = v25;
  if (v23.n128_u64[1])
  {
    v16 = DWORD2(v24);
    if (DWORD2(v24))
      v17 = DWORD1(v24) == 0;
    else
      v17 = 1;
    if (v17 || (_DWORD)v24 == 0)
      v16 = 0;
    if (v16 * (HIDWORD(v25) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v23);
}

void sub_239825068(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398250A0@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE v27[12];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v27 = 4;
  *(_QWORD *)&v27[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  LODWORD(v6) = v5 * v4;
  v7 = HIDWORD(v4);
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  v8 = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  *(_DWORD *)v27 = 4;
  v9 = *(_QWORD *)v27;
  *(_DWORD *)v27 = 1;
  *(_DWORD *)&v27[4] = v8;
  *(_QWORD *)v19 = v9;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v27;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = v8;
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  *(_DWORD *)&v27[8] = v6;
  if (HIDWORD(v9))
    v10 = (_DWORD)v9 == 0;
  else
    v10 = 1;
  v11 = v10 || HIDWORD(v4) == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v25 = v12;
  if (v11)
    v13 = 0;
  else
    v13 = v7;
  v26 = v13;
  if (((2 * v6) & (2 * v6 - 1)) != 0)
    v14 = 2;
  else
    v14 = 2 * v6;
  sub_23984DDC4((uint64_t)&v22, (unsigned int *)&v25, (uint64_t *)v27, 1, 0, 0, v14);
  *(_QWORD *)a2 = &off_250AED398;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 104) = v24;
  if (v22.n128_u64[1])
  {
    v15 = DWORD2(v23);
    if (DWORD2(v23))
      v16 = DWORD1(v23) == 0;
    else
      v16 = 1;
    if (v16 || (_DWORD)v23 == 0)
      v15 = 0;
    if (v15 * (HIDWORD(v24) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v22);
}

void sub_23982528C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398252C4@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((4 * v7) & (4 * v7 - 1)) != 0)
    v15 = 4;
  else
    v15 = 4 * v7;
  sub_23984F1E4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AED418;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239825454(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239825474@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858380((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AED418;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239825500(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23982551C@<X0>(_DWORD *a1@<X1>, _BYTE *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if ((v7 & (v7 - 1)) != 0)
    v15 = 1;
  else
    v15 = v7;
  sub_23984AFE8((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE3A60;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_2398256A8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398256C8@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[12];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v24 = 4;
  *(_QWORD *)&v24[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  if (HIDWORD(v4))
    v6 = (v5 * *(_DWORD *)&v24[4]);
  else
    v6 = 0;
  *(_DWORD *)v24 = 4;
  v7 = *(_QWORD *)v24;
  *(_DWORD *)v24 = 1;
  *(_QWORD *)&v24[4] = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  v8 = *(_QWORD *)v24;
  *(_QWORD *)v19 = v7;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v24;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = *(_QWORD *)&v24[4];
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  if (HIDWORD(v7))
    v9 = (_DWORD)v7 == 0;
  else
    v9 = 1;
  v10 = v9 || HIDWORD(v4) == 0;
  if (v10)
    v11 = 0;
  else
    v11 = v7;
  if (v10)
    v12 = 0;
  else
    v12 = HIDWORD(v4);
  v13 = v6 - 1;
  if ((v6 & (v6 - 1)) != 0)
    v13 = 0;
  v14 = v13 | (v13 >> 1) | ((v13 | (v13 >> 1)) >> 2);
  v15 = v14 | (v14 >> 4) | ((v14 | (v14 >> 4)) >> 8);
  v16 = v15 | (v15 >> 16) | ((v15 | (v15 >> 16)) >> 32);
  if (v16 + 1 > 8)
    v17 = v16 + 1;
  else
    v17 = 8;
  sub_2399168C0(&v22, (v12 * v6), v17);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_QWORD *)v23 = v11;
  *(_DWORD *)&v23[8] = v12;
  *(_QWORD *)&v23[12] = v8;
  *(_DWORD *)&v23[20] = v6;
  *(_QWORD *)a2 = &off_250AE3A60;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)v23;
  *(_QWORD *)(a2 + 104) = *(_QWORD *)&v23[16];
  return sub_239916980((uint64_t)&v22);
}

void sub_239825880(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398258A0@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984C1C4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE68B8;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_239825A34(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239825A54@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858210((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AE68B8;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239825AE0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239825AFC@<X0>(_DWORD *a1@<X1>, _WORD *a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _BYTE v20[32];
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  _BYTE v28[12];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v28 = 4;
  *(_QWORD *)&v28[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v28 = 4;
  v10 = *(_QWORD *)v28;
  *(_DWORD *)v28 = 1;
  *(_DWORD *)&v28[4] = v9;
  *(_QWORD *)v20 = v10;
  *(_DWORD *)&v20[8] = HIDWORD(v5);
  *(_QWORD *)&v20[12] = *(_QWORD *)v28;
  *(_DWORD *)&v20[20] = v7;
  *(_QWORD *)&v20[24] = v5;
  *(_QWORD *)&v21 = v9;
  BYTE8(v21) = 0;
  BYTE4(v22) = 0;
  *(_DWORD *)&v28[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v26 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v27 = v14;
  if (((2 * v7) & (2 * v7 - 1)) != 0)
    v15 = 2;
  else
    v15 = 2 * v7;
  sub_23984DDC4((uint64_t)&v23, (unsigned int *)&v26, (uint64_t *)v28, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE6AE0;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v20;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v20[16];
  *(_OWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 56) = v22;
  sub_239916924((__n128 *)(a3 + 64), &v23);
  *(_OWORD *)(a3 + 88) = v24;
  *(_QWORD *)(a3 + 104) = v25;
  if (v23.n128_u64[1])
  {
    v16 = DWORD2(v24);
    if (DWORD2(v24))
      v17 = DWORD1(v24) == 0;
    else
      v17 = 1;
    if (v17 || (_DWORD)v24 == 0)
      v16 = 0;
    if (v16 * (HIDWORD(v25) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v23);
}

void sub_239825CE8(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239825D20@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  _BYTE v19[32];
  __int128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _BYTE v27[12];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v3 = *a1 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a1;
  if (v3)
    v4 = 0;
  *(_DWORD *)v27 = 4;
  *(_QWORD *)&v27[4] = v4;
  v5 = 4 * ((_DWORD)v4 != 0);
  LODWORD(v6) = v5 * v4;
  v7 = HIDWORD(v4);
  if (HIDWORD(v4))
    v6 = v6;
  else
    v6 = 0;
  v8 = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v6 >> 2) << 34);
  *(_DWORD *)v27 = 4;
  v9 = *(_QWORD *)v27;
  *(_DWORD *)v27 = 1;
  *(_DWORD *)&v27[4] = v8;
  *(_QWORD *)v19 = v9;
  *(_DWORD *)&v19[8] = HIDWORD(v4);
  *(_QWORD *)&v19[12] = *(_QWORD *)v27;
  *(_DWORD *)&v19[20] = v6;
  *(_QWORD *)&v19[24] = v4;
  *(_QWORD *)&v20 = v8;
  BYTE8(v20) = 0;
  BYTE4(v21) = 0;
  *(_DWORD *)&v27[8] = v6;
  if (HIDWORD(v9))
    v10 = (_DWORD)v9 == 0;
  else
    v10 = 1;
  v11 = v10 || HIDWORD(v4) == 0;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v25 = v12;
  if (v11)
    v13 = 0;
  else
    v13 = v7;
  v26 = v13;
  if (((2 * v6) & (2 * v6 - 1)) != 0)
    v14 = 2;
  else
    v14 = 2 * v6;
  sub_23984DDC4((uint64_t)&v22, (unsigned int *)&v25, (uint64_t *)v27, 1, 0, 0, v14);
  *(_QWORD *)a2 = &off_250AE6AE0;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)&v19[16];
  *(_OWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 56) = v21;
  sub_239916924((__n128 *)(a2 + 64), &v22);
  *(_OWORD *)(a2 + 88) = v23;
  *(_QWORD *)(a2 + 104) = v24;
  if (v22.n128_u64[1])
  {
    v15 = DWORD2(v23);
    if (DWORD2(v23))
      v16 = DWORD1(v23) == 0;
    else
      v16 = 1;
    if (v16 || (_DWORD)v23 == 0)
      v15 = 0;
    if (v15 * (HIDWORD(v24) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980((uint64_t)&v22);
}

void sub_239825F0C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_239416A48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239825F44@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE v17[32];
  __int128 v18;
  uint64_t v19;
  _QWORD v20[6];
  unint64_t v21;
  int v22;
  _BYTE v23[12];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  if (a1[1])
    v4 = *a1 == 0;
  else
    v4 = 1;
  v5 = *(_QWORD *)a1;
  if (v4)
    v5 = 0;
  *(_DWORD *)v23 = 4;
  *(_QWORD *)&v23[4] = v5;
  v6 = 4 * ((_DWORD)v5 != 0);
  LODWORD(v7) = v6 * v5;
  v8 = HIDWORD(v5);
  if (HIDWORD(v5))
    v7 = v7;
  else
    v7 = 0;
  v9 = v6 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_DWORD *)v23 = 4;
  v10 = *(_QWORD *)v23;
  *(_DWORD *)v23 = 1;
  *(_DWORD *)&v23[4] = v9;
  *(_QWORD *)v17 = v10;
  *(_DWORD *)&v17[8] = HIDWORD(v5);
  *(_QWORD *)&v17[12] = *(_QWORD *)v23;
  *(_DWORD *)&v17[20] = v7;
  *(_QWORD *)&v17[24] = v5;
  *(_QWORD *)&v18 = v9;
  BYTE8(v18) = 0;
  BYTE4(v19) = 0;
  *(_DWORD *)&v23[8] = v7;
  if (HIDWORD(v10))
    v11 = (_DWORD)v10 == 0;
  else
    v11 = 1;
  v12 = v11 || HIDWORD(v5) == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v10;
  v21 = v13;
  if (v12)
    v14 = 0;
  else
    v14 = v8;
  v22 = v14;
  if (((4 * v7) & (4 * v7 - 1)) != 0)
    v15 = 4;
  else
    v15 = 4 * v7;
  sub_23984F1E4((uint64_t)v20, (unsigned int *)&v21, (uint64_t *)v23, 1, a2, 1, v15);
  *(_QWORD *)a3 = &off_250AE6D08;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v17;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v17[16];
  *(_OWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 56) = v19;
  sub_239916924((__n128 *)(a3 + 64), (__n128 *)v20);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)&v20[3];
  *(_QWORD *)(a3 + 104) = v20[5];
  return sub_239916980((uint64_t)v20);
}

void sub_2398260D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_2398260F4@<X0>(_DWORD *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _QWORD v7[6];

  sub_239858380((uint64_t)v5, a1);
  *(_QWORD *)a2 = &off_250AE6D08;
  v3 = v5[1];
  *(_OWORD *)(a2 + 8) = v5[0];
  *(_OWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 40) = v5[2];
  *(_QWORD *)(a2 + 56) = v6;
  sub_239916924((__n128 *)(a2 + 64), (__n128 *)v7);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v7[3];
  *(_QWORD *)(a2 + 104) = v7[5];
  return sub_239916980((uint64_t)v7);
}

void sub_239826180(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  nullsub_4(v1);
  sub_239916980(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_23982619C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 20) = 0;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  sub_2398261F0((_QWORD *)a1, a2);
  return a1;
}

void sub_2398261DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398261F0(_QWORD *a1, uint64_t a2)
{
  int *v3;
  char v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  int v16;
  __int128 v17;
  uint64_t *v18;

  v3 = (int *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 20);
  if (v4)
  {
    if (!*((_BYTE *)a1 + 20))
      goto LABEL_9;
    v4 = *((_DWORD *)a1 + 4) != *v3;
  }
  v5 = *a1;
  if (*a1
    && (v4 & 1) == 0
    && *((_DWORD *)a1 + 14) == *(_DWORD *)(a2 + 56)
    && *((_DWORD *)a1 + 15) == *(_DWORD *)(a2 + 60))
  {
    result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 40))(v5, *(_QWORD *)a2);
    goto LABEL_20;
  }
LABEL_9:
  (*(void (**)(__int128 *__return_ptr))(**(_QWORD **)a2 + 32))(&v17);
  v7 = v17;
  if ((_QWORD)v17)
  {
    v8 = (_QWORD *)operator new();
    v9 = v17;
    *v8 = &off_250ADB740;
    v8[1] = 0;
    v8[2] = 0;
    v8[3] = v9;
    *(_QWORD *)&v17 = 0;
    v10 = (std::__shared_weak_count *)a1[1];
    *a1 = v7;
    a1[1] = v8;
    if (!v10)
      goto LABEL_17;
LABEL_13:
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    goto LABEL_17;
  }
  *(_QWORD *)&v17 = 0;
  v10 = (std::__shared_weak_count *)a1[1];
  *a1 = 0;
  a1[1] = 0;
  if (v10)
    goto LABEL_13;
LABEL_17:
  v13 = v17;
  *(_QWORD *)&v17 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  (*(void (**)(uint64_t **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a1 + 64))(&v18, *a1, 1);
  v14 = *v18;
  v17 = *(_OWORD *)(v18 + 1);
  v18 = 0;
  result = MEMORY[0x23B83E31C]();
  a1[3] = v14;
  v15 = v17;
  *((_OWORD *)a1 + 2) = v17;
  a1[6] = v14;
  *(_OWORD *)(a1 + 7) = v15;
LABEL_20:
  v16 = *v3;
  *((_BYTE *)a1 + 20) = *((_BYTE *)v3 + 4);
  *((_DWORD *)a1 + 4) = v16;
  return result;
}

void sub_239826398(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2398263BC(_QWORD *a1, uint64_t a2)
{
  sub_2398261F0(a1, a2);
  return a1;
}

uint64_t sub_2398263E0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v9, *a2, 1);
  v7 = *(_QWORD *)(v9 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v9;
  *(_QWORD *)(a1 + 40) = v7;
  v9 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  return a1;
}

void sub_23982647C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826490(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 20))
    return *(unsigned int *)(a1 + 16) | 0x100000000;
  else
    return 0;
}

uint64_t sub_2398264AC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v9, *a2, 2);
  v7 = *(_QWORD *)(v9 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v9;
  *(_QWORD *)(a1 + 40) = v7;
  v9 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  return a1;
}

void sub_239826548(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23982655C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 20))
    return (2 * *(_DWORD *)(a1 + 16)) | 0x100000000;
  else
    return 0;
}

uint64_t sub_23982657C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v9, *a2, 3);
  v7 = *(_QWORD *)(v9 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v9;
  *(_QWORD *)(a1 + 40) = v7;
  v9 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  return a1;
}

void sub_239826618(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23982662C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 20) = 0;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  sub_239826680((_QWORD *)a1, a2);
  return a1;
}

void sub_23982666C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826680(_QWORD *a1, uint64_t a2)
{
  int *v3;
  char v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  int v16;
  __int128 v17;
  uint64_t *v18;

  v3 = (int *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 20);
  if (v4)
  {
    if (!*((_BYTE *)a1 + 20))
      goto LABEL_9;
    v4 = *((_DWORD *)a1 + 4) != *v3;
  }
  v5 = *a1;
  if (*a1
    && (v4 & 1) == 0
    && *((_DWORD *)a1 + 14) == *(_DWORD *)(a2 + 56)
    && *((_DWORD *)a1 + 15) == *(_DWORD *)(a2 + 60))
  {
    result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 40))(v5, *(_QWORD *)a2);
    goto LABEL_20;
  }
LABEL_9:
  (*(void (**)(__int128 *__return_ptr))(**(_QWORD **)a2 + 32))(&v17);
  v7 = v17;
  if ((_QWORD)v17)
  {
    v8 = (_QWORD *)operator new();
    v9 = v17;
    *v8 = &off_250ADB740;
    v8[1] = 0;
    v8[2] = 0;
    v8[3] = v9;
    *(_QWORD *)&v17 = 0;
    v10 = (std::__shared_weak_count *)a1[1];
    *a1 = v7;
    a1[1] = v8;
    if (!v10)
      goto LABEL_17;
LABEL_13:
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    goto LABEL_17;
  }
  *(_QWORD *)&v17 = 0;
  v10 = (std::__shared_weak_count *)a1[1];
  *a1 = 0;
  a1[1] = 0;
  if (v10)
    goto LABEL_13;
LABEL_17:
  v13 = v17;
  *(_QWORD *)&v17 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  (*(void (**)(uint64_t **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a1 + 64))(&v18, *a1, 4);
  v14 = *v18;
  v17 = *(_OWORD *)(v18 + 1);
  v18 = 0;
  result = MEMORY[0x23B83E31C]();
  a1[3] = v14;
  v15 = v17;
  *((_OWORD *)a1 + 2) = v17;
  a1[6] = v14;
  *(_OWORD *)(a1 + 7) = v15;
LABEL_20:
  v16 = *v3;
  *((_BYTE *)a1 + 20) = *((_BYTE *)v3 + 4);
  *((_DWORD *)a1 + 4) = v16;
  return result;
}

void sub_239826828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_23982684C(_QWORD *a1, uint64_t a2)
{
  sub_239826680(a1, a2);
  return a1;
}

uint64_t sub_239826870(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v9, *a2, 4);
  v7 = *(_QWORD *)(v9 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v9;
  *(_QWORD *)(a1 + 40) = v7;
  v9 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  return a1;
}

void sub_23982690C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826920(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 20))
    return (4 * *(_DWORD *)(a1 + 16)) | 0x100000000;
  else
    return 0;
}

uint64_t sub_239826940(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 5);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_2398269E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398269FC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 6);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239826AA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826AB8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 7);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239826B60(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826B74(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 8);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239826C1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826C30(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 9);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239826CD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826CEC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 10);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239826D94(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826DA8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 11);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239826E50(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826E64(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 12);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239826F0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826F20(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 13);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239826FC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239826FDC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 14);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239827084(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827098(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 15);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239827140(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827154(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 16);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_2398271FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827210(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 17);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_2398272B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398272CC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 18);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239827374(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827388(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 19);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239827430(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827444(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 20);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_2398274EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827500(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 20) = 0;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 3;
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 44) = 1;
  *(_QWORD *)(a1 + 52) = 0;
  *(_QWORD *)(a1 + 68) = 0;
  *(_QWORD *)(a1 + 60) = 0;
  *(_DWORD *)(a1 + 76) = 0;
  *(_QWORD *)(a1 + 80) = 3;
  *(_DWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 92) = 1;
  *(_QWORD *)(a1 + 108) = 0;
  *(_QWORD *)(a1 + 100) = 0;
  *(_DWORD *)(a1 + 116) = 0;
  sub_2398275E4((_QWORD *)a1, a2);
  return a1;
}

void sub_2398275D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398275E4(_QWORD *a1, uint64_t a2)
{
  int *v3;
  char v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t *v22;

  v3 = (int *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 20);
  if (v4)
  {
    if (!*((_BYTE *)a1 + 20))
      goto LABEL_9;
    v4 = *((_DWORD *)a1 + 4) != *v3;
  }
  v5 = *a1;
  if (*a1
    && (v4 & 1) == 0
    && *((_DWORD *)a1 + 26) == *(_DWORD *)(a2 + 104)
    && *((_DWORD *)a1 + 27) == *(_DWORD *)(a2 + 108))
  {
    result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 40))(v5, *(_QWORD *)a2);
    goto LABEL_20;
  }
LABEL_9:
  (*(void (**)(__int128 *__return_ptr))(**(_QWORD **)a2 + 32))(&v19);
  v7 = v19;
  if ((_QWORD)v19)
  {
    v8 = (_QWORD *)operator new();
    v9 = v19;
    *v8 = &off_250ADB740;
    v8[1] = 0;
    v8[2] = 0;
    v8[3] = v9;
    *(_QWORD *)&v19 = 0;
    v10 = (std::__shared_weak_count *)a1[1];
    *a1 = v7;
    a1[1] = v8;
    if (!v10)
      goto LABEL_17;
LABEL_13:
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    goto LABEL_17;
  }
  *(_QWORD *)&v19 = 0;
  v10 = (std::__shared_weak_count *)a1[1];
  *a1 = 0;
  a1[1] = 0;
  if (v10)
    goto LABEL_13;
LABEL_17:
  v13 = v19;
  *(_QWORD *)&v19 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  (*(void (**)(uint64_t **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a1 + 64))(&v22, *a1, 21);
  v14 = *v22;
  v19 = *(_OWORD *)(v22 + 1);
  v20 = *(_OWORD *)(v22 + 3);
  v21 = v22[5];
  v22 = 0;
  result = MEMORY[0x23B83E31C]();
  a1[3] = v14;
  v15 = v19;
  v16 = v20;
  *((_OWORD *)a1 + 2) = v19;
  *((_OWORD *)a1 + 3) = v16;
  v17 = v21;
  a1[8] = v21;
  a1[9] = v14;
  *((_OWORD *)a1 + 5) = v15;
  *((_OWORD *)a1 + 6) = v16;
  a1[14] = v17;
LABEL_20:
  v18 = *v3;
  *((_BYTE *)a1 + 20) = *((_BYTE *)v3 + 4);
  *((_DWORD *)a1 + 4) = v18;
  return result;
}

void sub_2398277A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398277C4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 21);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_23982786C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827880(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 22);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239827928(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23982793C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 23);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_2398279E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398279F8(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 20) = 0;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 3;
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 44) = 1;
  *(_QWORD *)(a1 + 52) = 0;
  *(_QWORD *)(a1 + 68) = 0;
  *(_QWORD *)(a1 + 60) = 0;
  *(_DWORD *)(a1 + 76) = 0;
  *(_QWORD *)(a1 + 80) = 3;
  *(_DWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 92) = 1;
  *(_QWORD *)(a1 + 108) = 0;
  *(_QWORD *)(a1 + 100) = 0;
  *(_DWORD *)(a1 + 116) = 0;
  sub_239827ADC((_QWORD *)a1, a2);
  return a1;
}

void sub_239827AC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827ADC(_QWORD *a1, uint64_t a2)
{
  int *v3;
  char v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t *v22;

  v3 = (int *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 20);
  if (v4)
  {
    if (!*((_BYTE *)a1 + 20))
      goto LABEL_9;
    v4 = *((_DWORD *)a1 + 4) != *v3;
  }
  v5 = *a1;
  if (*a1
    && (v4 & 1) == 0
    && *((_DWORD *)a1 + 26) == *(_DWORD *)(a2 + 104)
    && *((_DWORD *)a1 + 27) == *(_DWORD *)(a2 + 108))
  {
    result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 40))(v5, *(_QWORD *)a2);
    goto LABEL_20;
  }
LABEL_9:
  (*(void (**)(__int128 *__return_ptr))(**(_QWORD **)a2 + 32))(&v19);
  v7 = v19;
  if ((_QWORD)v19)
  {
    v8 = (_QWORD *)operator new();
    v9 = v19;
    *v8 = &off_250ADB740;
    v8[1] = 0;
    v8[2] = 0;
    v8[3] = v9;
    *(_QWORD *)&v19 = 0;
    v10 = (std::__shared_weak_count *)a1[1];
    *a1 = v7;
    a1[1] = v8;
    if (!v10)
      goto LABEL_17;
LABEL_13:
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    goto LABEL_17;
  }
  *(_QWORD *)&v19 = 0;
  v10 = (std::__shared_weak_count *)a1[1];
  *a1 = 0;
  a1[1] = 0;
  if (v10)
    goto LABEL_13;
LABEL_17:
  v13 = v19;
  *(_QWORD *)&v19 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  (*(void (**)(uint64_t **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a1 + 64))(&v22, *a1, 24);
  v14 = *v22;
  v19 = *(_OWORD *)(v22 + 1);
  v20 = *(_OWORD *)(v22 + 3);
  v21 = v22[5];
  v22 = 0;
  result = MEMORY[0x23B83E31C]();
  a1[3] = v14;
  v15 = v19;
  v16 = v20;
  *((_OWORD *)a1 + 2) = v19;
  *((_OWORD *)a1 + 3) = v16;
  v17 = v21;
  a1[8] = v21;
  a1[9] = v14;
  *((_OWORD *)a1 + 5) = v15;
  *((_OWORD *)a1 + 6) = v16;
  a1[14] = v17;
LABEL_20:
  v18 = *v3;
  *((_BYTE *)a1 + 20) = *((_BYTE *)v3 + 4);
  *((_DWORD *)a1 + 4) = v18;
  return result;
}

void sub_239827C98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9)
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239827CBC(_QWORD *a1, uint64_t a2)
{
  sub_239827ADC(a1, a2);
  return a1;
}

uint64_t sub_239827CE0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 24);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239827D88(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827D9C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 25);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239827E44(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827E58(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 26);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239827F00(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827F14(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 27);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239827FBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239827FD0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 28);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239828078(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23982808C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 29);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239828134(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239828148(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 30);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_2398281F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239828204(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 31);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_2398282AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398282C0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 32);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239828368(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23982837C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 33);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239828424(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239828438(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 34);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_2398284E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398284F4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 35);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_23982859C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398285B0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 36);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239828658(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23982866C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 37);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239828714(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239828728(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 38);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_2398287D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398287E4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 39);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_23982888C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2398288A0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  *(_QWORD *)(a1 + 16) = a3;
  (*(void (**)(_OWORD **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 64))(&v11, *a2, 40);
  v8 = v11[1];
  v7 = v11[2];
  *(_OWORD *)(a1 + 24) = *v11;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = 0;
  MEMORY[0x23B83E31C]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  return a1;
}

void sub_239828948(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23982895C(uint64_t a1)
{
  return sub_239828A6C(*(_DWORD *)(a1 + 48));
}

uint64_t sub_23982898C(uint64_t a1)
{
  BOOL v1;
  int v2;

  if (*(_QWORD *)(a1 + 8))
  {
    if (*(_DWORD *)(a1 + 28))
      v1 = *(_DWORD *)(a1 + 24) == 0;
    else
      v1 = 1;
    if (v1)
      v2 = 0;
    else
      v2 = *(_DWORD *)(a1 + 28);
    if (v2 * (*(_QWORD *)(a1 + 32) >> 33) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980(a1);
}

uint64_t sub_2398289F8(uint64_t a1)
{
  BOOL v1;
  int v3;

  if (*(_QWORD *)(a1 + 8))
  {
    if (*(_DWORD *)(a1 + 32))
      v1 = *(_DWORD *)(a1 + 28) == 0;
    else
      v1 = 1;
    if (v1 || *(_DWORD *)(a1 + 24) == 0)
      v3 = 0;
    else
      v3 = *(_DWORD *)(a1 + 32);
    if (v3 * (*(_DWORD *)(a1 + 44) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
  }
  return sub_239916980(a1);
}

uint64_t sub_239828A6C(int a1)
{
  return ((uint64_t (*)(void))((char *)sub_239828A88 + 4 * byte_239EF67A8[a1]))();
}

double sub_239828A88@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239828BD4(a1, a2);
}

double sub_239828A90@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239828CAC(a1, a2);
}

double sub_239828A98@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239828D84(a1, a2);
}

double sub_239828AA0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239828E5C(a1, a2);
}

double sub_239828AA8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239828F34(a1, a2);
}

double sub_239828AB0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982900C(a1, a2);
}

double sub_239828AB8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2398290E4(a1, a2);
}

double sub_239828AC0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2398291BC(a1, a2);
}

double sub_239828AC8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829294(a1, a2);
}

double sub_239828AD0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982936C(a1, a2);
}

double sub_239828AD8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829444(a1, a2);
}

double sub_239828AE0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982951C(a1, a2);
}

double sub_239828AE8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2398295F4(a1, a2);
}

double sub_239828AF0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2398296CC(a1, a2);
}

double sub_239828AF8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2398297A4(a1, a2);
}

double sub_239828B00@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982987C(a1, a2);
}

double sub_239828B08@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829954(a1, a2);
}

double sub_239828B10@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829A2C(a1, a2);
}

double sub_239828B18@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829B04(a1, a2);
}

double sub_239828B20@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829BDC(a1, a2);
}

double sub_239828B28@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829CB4(a1, a2);
}

double sub_239828B30@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829D8C(a1, a2);
}

double sub_239828B38@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829E64(a1, a2);
}

double sub_239828B40@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_239829F3C(a1, a2);
}

double sub_239828B48@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A014(a1, a2);
}

double sub_239828B50@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A0EC(a1, a2);
}

double sub_239828B58@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A1C4(a1, a2);
}

double sub_239828B60@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A29C(a1, a2);
}

double sub_239828B68@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A374(a1, a2);
}

double sub_239828B70@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A44C(a1, a2);
}

double sub_239828B78@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A524(a1, a2);
}

double sub_239828B80@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A5FC(a1, a2);
}

double sub_239828B88@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A6D4(a1, a2);
}

double sub_239828B90@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A7AC(a1, a2);
}

double sub_239828B98@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A884(a1, a2);
}

double sub_239828BA0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982A95C(a1, a2);
}

double sub_239828BA8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982AA34(a1, a2);
}

double sub_239828BB0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982AB0C(a1, a2);
}

double sub_239828BB8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982ABE4(a1, a2);
}

double sub_239828BC0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_23982ACBC(a1, a2);
}

void sub_239828BC8(uint64_t a1, uint64_t a2)
{
  sub_239EC23F4(a1, a2);
}

double sub_239828BD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250ADB350;
  sub_2394949FC(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23982AD94((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239828C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  if (a12)
  {
    sub_239EBED3C();
    nullsub_4(&a10);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a10);
  _Unwind_Resume(a1);
}

double sub_239828CAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE3D30;
  sub_23970E070(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23982B6D8((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239828D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  if (a12)
  {
    sub_239EBED3C();
    nullsub_4(&a10);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a10);
  _Unwind_Resume(a1);
}

double sub_239828D84@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE1C58;
  sub_23964D014(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23982C048((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239828E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  if (a12)
  {
    sub_239EBED3C();
    nullsub_4(&a10);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a10);
  _Unwind_Resume(a1);
}

double sub_239828E5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250ADED08;
  sub_23964D668(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23982C998((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239828F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  if (a12)
  {
    sub_239EBED3C();
    nullsub_4(&a10);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a10);
  _Unwind_Resume(a1);
}

double sub_239828F34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250ADB390;
  sub_23964B3D0(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23982CED8((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239828FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982900C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE9860;
  sub_2397AA228(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23982D864((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_2398290B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2398290E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE9958;
  sub_2397AAA70(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23982E268((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2398291BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE4A08;
  sub_2397AB08C(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23982EBC4((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829294@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE9A50;
  sub_2397AB82C(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23982F5C8((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982936C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE9B48;
  sub_2397AC070(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_2398301AC((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829444@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE9C40;
  sub_2397AC8B8(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239830E0C((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_2398294E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982951C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE9D38;
  sub_2397AD100(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_2398319C4((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_2398295C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2398295F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE4B90;
  sub_2397AD7C4(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239832624((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2398296CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE9E30;
  sub_2397AE008(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239832FB0((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2398297A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE9F28;
  sub_2397AE850(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_2398339B4((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982987C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AEA020;
  sub_2397AF098(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239834310((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829954@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE3C30;
  sub_23970C364(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239834D14((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_2398299F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829A2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AEA118;
  sub_2397AF8E0(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_2398355A4((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829B04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AEA210;
  sub_2397B0128(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239836204((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829BDC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AEA308;
  sub_2397B0970(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239836DBC((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829CB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250ADB468;
  sub_239494110(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239837A1C((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829D8C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE3D70;
  sub_23970E7C4(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_2398382AC((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829E64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE3DF0;
  sub_23970F74C(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239838BB4((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239829F3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE3CF0;
  sub_23970D954(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983942C((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_239829FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A014@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE1B60;
  sub_23964DC14(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239839D34((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A0EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AEA400;
  sub_2397B11B8(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983A5C4((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A1C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AEA4F8;
  sub_2397B1A00(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983AFC8((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A29C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE2130;
  sub_23964E2D4(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983B924((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A374@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE1A68;
  sub_23964E998(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983C328((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A44C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE3DB0;
  sub_23970EF88(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983CBB8((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A524@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE3E30;
  sub_23970FE68(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983D4C0((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A5FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE2038;
  sub_23964EFB0(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983DD38((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A6D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE3CB0;
  sub_23970D194(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983E640((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A7AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AEA5F0;
  sub_2397B2248(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983EED0((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A884@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AEA6E8;
  sub_2397B2A90(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_23983F8D4((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982A928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982A95C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AEA7E0;
  sub_2397B32D8(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239840230((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982AA00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982AA34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE3C70;
  sub_23970CA7C(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239840C34((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982AAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982AB0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE4570;
  sub_239740360(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_2398414C4((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982ABB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982ABE4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE4668;
  sub_239740BA8(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239841DCC((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982AC88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982ACBC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  uint64_t (**v9)();
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *(_QWORD *)(a1 + 8);
  v9 = &off_250AE4760;
  sub_2397413F0(v3, (uint64_t)&v10);
  v4.n128_f64[0] = sub_239842644((uint64_t)&v9, a2);
  v5 = v11;
  if (!v11)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
    std::__shared_weak_count::__release_weak(v5);
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(&v9).n128_u64[0];
  }
  return result;
}

void sub_23982AD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    sub_239EBED3C();
    nullsub_4(&a9);
    _Unwind_Resume(a1);
  }
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23982AD94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23982AECC((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250ADB628;
    sub_23982B060(a1, (uint64_t)&v12);
    sub_239709384((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23982AEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239422F08((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23982AEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23982AECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 2, *(_QWORD *)a1 + 32, 2, *(_QWORD *)a1 + 40, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 1;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23982B02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23982B060(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count_vtbl *v25;
  std::__shared_weak_count_vtbl *v26;
  uint64_t v27;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v26, v8);
    v15 = v26;
    if (v26)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v26;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v26 = 0;
      v19 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v26 = 0;
      v19 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(uint64_t *__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v27, v15, 1);
    v21 = v27;
    v22 = *(_QWORD *)(v27 + 16);
    *(_OWORD *)(a2 + 24) = *(_OWORD *)v27;
    *(_QWORD *)(a2 + 40) = v22;
    v27 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a2 + 56) = *(_OWORD *)(a2 + 32);
    *(_WORD *)(a2 + 72) = v19;
    if (v15)
    {
      v23 = (unint64_t *)&v16->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v25 = v26;
    v26 = 0;
    if (v25)
      (*((void (**)(std::__shared_weak_count_vtbl *))v25->~__shared_weak_count + 1))(v25);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 48))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23982B2D4(v13, (uint64_t *)a2);
  }
}

void sub_23982B294(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23982B2D4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  __int16 v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  int v20;
  int v21;
  _BYTE *v22;
  _BYTE *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int i;
  int v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v32;
  __n128 v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v36 = *(_QWORD *)(a1 + 8);
  sub_23982B5E4(&v36, &v35);
  v4 = v35;
  if (v35)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v35;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB708;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v34 = v5;
    v35 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v34 = 0;
    v35 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(&v36, v4, 1);
  v9 = v36;
  v10 = *(_QWORD *)(v36 + 16);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v36;
  a2[5] = v10;
  v36 = 0;
  MEMORY[0x23B83E31C](v9);
  a2[6] = a2[3];
  *(_OWORD *)(a2 + 7) = *((_OWORD *)a2 + 2);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v12 = v11;
  if ((v11 & 0xFFFFFF) <= 0x10000)
    v12 = 0;
  v13 = v11 & 0xFF00;
  if ((v11 & 0xFF0000) == 0)
    v13 = 0;
  *((_WORD *)a2 + 36) = v13 & 0xFF00 | v12;
  if (!v34)
    goto LABEL_14;
  v14 = (unint64_t *)&v34->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_14:
    v36 = a1;
    v37 = a2 + 3;
    v16 = *(unsigned int *)(a1 + 16);
    v17 = *((unsigned int *)a2 + 10);
    if ((_DWORD)v16 != 1 || (_DWORD)v17 != 1)
      goto LABEL_18;
LABEL_36:
    sub_23978E2A0(&v36);
    goto LABEL_37;
  }
  ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
  std::__shared_weak_count::__release_weak(v34);
  v36 = a1;
  v37 = a2 + 3;
  v16 = *(unsigned int *)(a1 + 16);
  v17 = *((unsigned int *)a2 + 10);
  if ((_DWORD)v16 == 1 && (_DWORD)v17 == 1)
    goto LABEL_36;
LABEL_18:
  v19 = *(_DWORD *)(a1 + 8);
  if (v19)
  {
    v20 = *(_DWORD *)(a1 + 12);
    if (v20)
    {
      v21 = v19 - 1;
      v22 = *(_BYTE **)a1;
      v23 = (_BYTE *)a2[3];
      v24 = v20 - 1;
      if (v24)
      {
        v25 = *((unsigned int *)a2 + 11);
        v26 = *(unsigned int *)(a1 + 20);
        if (v21)
        {
          for (i = 0; i != v24; ++i)
          {
            v28 = v21;
            v29 = v22;
            v30 = v23;
            do
            {
              *v30 = *v29;
              v29 += v16;
              v30 += v17;
              --v28;
            }
            while (v28);
            *v30 = *v29;
            v22 += v26;
            v23 += v25;
          }
        }
        else
        {
          do
          {
            *v23 = *v22;
            v22 += v26;
            v23 += v25;
            --v24;
          }
          while (v24);
        }
      }
      for (; v21; --v21)
      {
        *v23 = *v22;
        v22 += v16;
        v23 += v17;
      }
      *v23 = *v22;
    }
  }
LABEL_37:
  v32 = v35;
  v35 = 0;
  if (v32)
  {
    sub_239916980(v32 + 40);
    v33 = nullsub_4(v32);
    MEMORY[0x23B83E31C](v33);
  }
}

void sub_23982B56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239423260((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982B588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239423260((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982B59C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239423260(&a12);
  _Unwind_Resume(a1);
}

void sub_23982B5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239423260(&a12);
  _Unwind_Resume(a1);
}

double sub_23982B5E4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250ADB668;
  sub_23981E58C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADB688;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  sub_239916980((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23982B694(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_23982B6D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23982B810((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE4178;
    sub_23982B9A4(a1, (uint64_t)&v12);
    sub_239761728((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23982B7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239730A00((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23982B7FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23982B810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 2, *(_QWORD *)a1 + 32, 2, *(_QWORD *)a1 + 40, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 2;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23982B970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23982B9A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count_vtbl *v25;
  std::__shared_weak_count_vtbl *v26;
  uint64_t v27;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v26, v8);
    v15 = v26;
    if (v26)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v26;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v26 = 0;
      v19 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v26 = 0;
      v19 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(uint64_t *__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v27, v15, 2);
    v21 = v27;
    v22 = *(_QWORD *)(v27 + 16);
    *(_OWORD *)(a2 + 24) = *(_OWORD *)v27;
    *(_QWORD *)(a2 + 40) = v22;
    v27 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a2 + 56) = *(_OWORD *)(a2 + 32);
    *(_WORD *)(a2 + 72) = v19;
    if (v15)
    {
      v23 = (unint64_t *)&v16->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v25 = v26;
    v26 = 0;
    if (v25)
      (*((void (**)(std::__shared_weak_count_vtbl *))v25->~__shared_weak_count + 1))(v25);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 48))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23982BC18(v13, (uint64_t *)a2);
  }
}

void sub_23982BBD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23982BC18(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  __int16 v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  int v20;
  int v21;
  _WORD *v22;
  _WORD *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _WORD *v30;
  _WORD *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  __n128 v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  v40 = *(_QWORD *)(a1 + 8);
  sub_23982BF54(&v40, &v39);
  v4 = v39;
  if (v39)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v39;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE4350;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v38 = v5;
    v39 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v38 = 0;
    v39 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(&v40, v4, 2);
  v9 = v40;
  v10 = *(_QWORD *)(v40 + 16);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v40;
  a2[5] = v10;
  v40 = 0;
  MEMORY[0x23B83E31C](v9);
  a2[6] = a2[3];
  *(_OWORD *)(a2 + 7) = *((_OWORD *)a2 + 2);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v12 = v11;
  if ((v11 & 0xFFFFFF) <= 0x10000)
    v12 = 0;
  v13 = v11 & 0xFF00;
  if ((v11 & 0xFF0000) == 0)
    v13 = 0;
  *((_WORD *)a2 + 36) = v13 & 0xFF00 | v12;
  if (!v38)
    goto LABEL_14;
  v14 = (unint64_t *)&v38->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_14:
    v40 = a1;
    v41 = a2 + 3;
    v16 = *(unsigned int *)(a1 + 16);
    v17 = *((unsigned int *)a2 + 10);
    if ((_DWORD)v16 != 1 || (_DWORD)v17 != 1)
      goto LABEL_18;
LABEL_35:
    sub_23978FC2C(&v40);
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  v40 = a1;
  v41 = a2 + 3;
  v16 = *(unsigned int *)(a1 + 16);
  v17 = *((unsigned int *)a2 + 10);
  if ((_DWORD)v16 == 1 && (_DWORD)v17 == 1)
    goto LABEL_35;
LABEL_18:
  v19 = *(_DWORD *)(a1 + 8);
  if (!v19 || (v20 = *(_DWORD *)(a1 + 12)) == 0)
  {
LABEL_36:
    v36 = v39;
    v39 = 0;
    if (!v36)
      return;
    goto LABEL_37;
  }
  v21 = v19 - 1;
  v22 = *(_WORD **)a1;
  v23 = (_WORD *)a2[3];
  v24 = v20 - 1;
  if (v24)
  {
    v25 = *((unsigned int *)a2 + 11);
    v26 = *(unsigned int *)(a1 + 20);
    if (!v21)
    {
      do
      {
        *v23 = *v22;
        v22 += v26;
        v23 += v25;
        --v24;
      }
      while (v24);
      goto LABEL_40;
    }
    v27 = 0;
    v28 = 2 * v26;
    v29 = 2 * v25;
    do
    {
      v30 = v23;
      v31 = v22;
      v32 = v21;
      do
      {
        *v30 = *v31;
        v31 += v16;
        v30 += v17;
        --v32;
      }
      while (v32);
      *v30 = *v31;
      v22 = (_WORD *)((char *)v22 + v28);
      v23 = (_WORD *)((char *)v23 + v29);
      ++v27;
    }
    while (v27 != v24);
  }
  if (v21)
  {
    v33 = 2 * v16;
    v34 = 2 * v17;
    do
    {
      *v23 = *v22;
      v22 = (_WORD *)((char *)v22 + v33);
      v23 = (_WORD *)((char *)v23 + v34);
      --v21;
    }
    while (v21);
  }
LABEL_40:
  *v23 = *v22;
  v36 = v39;
  v39 = 0;
  if (!v36)
    return;
LABEL_37:
  sub_239916980(v36 + 40);
  v37 = nullsub_4(v36);
  MEMORY[0x23B83E31C](v37);
}

void sub_23982BEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239730D5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982BEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239730D5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982BF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239730D5C(&a12);
  _Unwind_Resume(a1);
}

void sub_23982BF30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239730D5C(&a12);
  _Unwind_Resume(a1);
}

double sub_23982BF54@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250AE4270;
  sub_23981E7B0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE42B8;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  sub_239916980((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23982C004(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_23982C048@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23982C180((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE5E18;
    sub_23982C314(a1, (uint64_t)&v12);
    sub_239762530((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23982C158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397617FC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23982C16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23982C180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 2, *(_QWORD *)a1 + 32, 2, *(_QWORD *)a1 + 40, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 3;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23982C2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_23982C314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v26, v8);
    v16 = v26;
    if (v26)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v26;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v26 = 0;
      v20 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v26 = 0;
      v20 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v27, v16, 3);
    v22 = v27;
    v23 = *(_QWORD *)(v27 + 16);
    *(_OWORD *)(a2 + 24) = *(_OWORD *)v27;
    *(_QWORD *)(a2 + 40) = v23;
    v27 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a2 + 56) = *(_OWORD *)(a2 + 32);
    *(_WORD *)(a2 + 72) = v20;
    if (v16)
    {
      v24 = (unint64_t *)&v17->__shared_owners_;
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v26;
    v26 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 48))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_23982C588(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_23982C548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23982C588@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  __int16 v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  int v21;
  int v22;
  _WORD *v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _WORD *v33;
  _WORD *v34;
  int v35;
  uint64_t result;
  double v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v41 = *(_QWORD *)(a1 + 8);
  sub_23982C8B0(&v41, &v40);
  v4 = v40;
  if (v40)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v40;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE5FF0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v39 = v5;
    v40 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v39 = 0;
    v40 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(&v41, v4, 3);
  v9 = v41;
  v10 = *(_QWORD *)(v41 + 16);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v41;
  a2[5] = v10;
  v41 = 0;
  MEMORY[0x23B83E31C](v9);
  a2[6] = a2[3];
  *(_OWORD *)(a2 + 7) = *((_OWORD *)a2 + 2);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v13 = v11;
  if ((v11 & 0xFFFFFF) <= 0x10000)
    v13 = 0;
  v14 = v11 & 0xFF00;
  if ((v11 & 0xFF0000) == 0)
    v14 = 0;
  *((_WORD *)a2 + 36) = v14 & 0xFF00 | v13;
  if (!v39)
    goto LABEL_14;
  v15 = (unint64_t *)&v39->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (v16)
  {
LABEL_14:
    v41 = a1;
    v42 = a2 + 3;
    v17 = *(unsigned int *)(a1 + 16);
    v18 = *((unsigned int *)a2 + 10);
    if ((_DWORD)v17 != 1 || (_DWORD)v18 != 1)
      goto LABEL_18;
LABEL_32:
    sub_2397912E0(&v41, v12);
    goto LABEL_33;
  }
  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
  std::__shared_weak_count::__release_weak(v39);
  v41 = a1;
  v42 = a2 + 3;
  v17 = *(unsigned int *)(a1 + 16);
  v18 = *((unsigned int *)a2 + 10);
  if ((_DWORD)v17 == 1 && (_DWORD)v18 == 1)
    goto LABEL_32;
LABEL_18:
  v20 = *(_DWORD *)(a1 + 8);
  if (!v20 || (v21 = *(_DWORD *)(a1 + 12)) == 0)
  {
LABEL_33:
    result = v40;
    v40 = 0;
    if (!result)
      return result;
    goto LABEL_34;
  }
  v22 = v20 - 1;
  v23 = *(_WORD **)a1;
  v24 = (_WORD *)a2[3];
  v25 = 2 * v17;
  v26 = 2 * v18;
  v27 = v21 - 1;
  if (v27)
  {
    v28 = *((unsigned int *)a2 + 11);
    v29 = *(unsigned int *)(a1 + 20);
    if (v22)
    {
      v30 = 0;
      v31 = 2 * v29;
      v32 = 2 * v28;
      do
      {
        v33 = v24;
        v34 = v23;
        v35 = v22;
        do
        {
          *v33 = *v34;
          v34 = (_WORD *)((char *)v34 + v25);
          v33 = (_WORD *)((char *)v33 + v26);
          --v35;
        }
        while (v35);
        *v33 = *v34;
        v23 = (_WORD *)((char *)v23 + v31);
        v24 = (_WORD *)((char *)v24 + v32);
        ++v30;
      }
      while (v30 != v27);
    }
    else
    {
      do
      {
        *v24 = *v23;
        v23 += v29;
        v24 += v28;
        --v27;
      }
      while (v27);
    }
  }
  for (; v22; --v22)
  {
    *v24 = *v23;
    v23 = (_WORD *)((char *)v23 + v25);
    v24 = (_WORD *)((char *)v24 + v26);
  }
  *v24 = *v23;
  result = v40;
  v40 = 0;
  if (result)
  {
LABEL_34:
    v38 = sub_2398101C8(result);
    return MEMORY[0x23B83E31C](v38);
  }
  return result;
}

void sub_23982C838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239761B58((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982C854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239761B58((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982C868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239761B58(&a12);
  _Unwind_Resume(a1);
}

void sub_23982C88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239761B58(&a12);
  _Unwind_Resume(a1);
}

double sub_23982C8B0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250AE5F10;
  sub_23981EA30(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE5F58;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  return sub_2398101C8((uint64_t)v5);
}

void sub_23982C954(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398101C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23982C984(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398101C8((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23982C998@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23982CAD0((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250ADD920;
    sub_23982CC64(a1, (uint64_t)&v12);
    sub_2397096A8((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23982CAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239541EB8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23982CABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23982CAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 2, *(_QWORD *)a1 + 32, 2, *(_QWORD *)a1 + 40, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 4;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23982CC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_23982CC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v26, v8);
    v16 = v26;
    if (v26)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v26;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v26 = 0;
      v20 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v26 = 0;
      v20 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v27, v16, 4);
    v22 = v27;
    v23 = *(_QWORD *)(v27 + 16);
    *(_OWORD *)(a2 + 24) = *(_OWORD *)v27;
    *(_QWORD *)(a2 + 40) = v23;
    v27 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a2 + 56) = *(_OWORD *)(a2 + 32);
    *(_WORD *)(a2 + 72) = v20;
    if (v16)
    {
      v24 = (unint64_t *)&v17->__shared_owners_;
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v26;
    v26 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 48))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_239717174(v13, (_QWORD *)a2);
  }
  return result;
}

void sub_23982CE98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

double sub_23982CED8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23982D010((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEBA48;
    sub_23982D1A4(a1, (uint64_t)&v12);
    sub_2397CA6BC((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23982CFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397CA404((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23982CFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23982D010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 5;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23982D170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

unsigned int *sub_23982D1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned int *result;
  unsigned int *v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  unsigned int *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(unsigned int **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, unsigned int *, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 5);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_23982D424(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_23982D3E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

unsigned int *sub_23982D424@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  unsigned int *result;
  uint64_t v19;
  __n128 v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  _QWORD v23[2];

  v23[0] = *(_QWORD *)(a1 + 12);
  sub_23982D65C(v23, &v22);
  v4 = v22;
  if (v22)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v22;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED830;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v21 = v5;
    v22 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v21 = 0;
    v22 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v23, v4, 5);
  v9 = v23[0];
  v11 = *(_OWORD *)(v23[0] + 16);
  v10 = *(_OWORD *)(v23[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v23[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v23[0] = a1;
  v23[1] = a2 + 3;
  result = sub_23978E92C((unsigned int *)v23);
  v19 = v22;
  v22 = 0;
  if (v19)
  {
    sub_239916980(v19 + 64);
    v20 = nullsub_4(v19);
    return (unsigned int *)MEMORY[0x23B83E31C](v20);
  }
  return result;
}

void sub_23982D5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982D5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982D614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_23982D638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_23982D65C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AED7F8;
  sub_23981F01C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECA18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23982D724(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982D76C()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_23982D784(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23982D7A8(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23982D7F4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE5EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE5EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE5EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE5EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_23982D864@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23982D99C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEBB40;
    sub_23982DB30(a1, (uint64_t)&v12);
    sub_2397CDB30((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23982D974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397CB768((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23982D988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23982D99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 6;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23982DAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t *sub_23982DB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *result;
  uint64_t *v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t *, uint64_t))(*v16 + 64))(&v29, v16, 6);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_23982DDB0(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_23982DD70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_23982DDB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t *result;
  uint64_t v19;
  __n128 v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  uint64_t v23[2];

  v23[0] = *(_QWORD *)(a1 + 12);
  sub_23982DFE8(v23, &v22);
  v4 = v22;
  if (v22)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v22;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED8B8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v21 = v5;
    v22 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v21 = 0;
    v22 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v23, v4, 6);
  v9 = v23[0];
  v11 = *(_OWORD *)(v23[0] + 16);
  v10 = *(_OWORD *)(v23[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v23[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v23[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v23[0] = a1;
  v23[1] = (uint64_t)(a2 + 3);
  result = sub_23984D6AC(v23);
  v19 = v22;
  v22 = 0;
  if (v19)
  {
    sub_239916980(v19 + 64);
    v20 = nullsub_4(v19);
    return (uint64_t *)MEMORY[0x23B83E31C](v20);
  }
  return result;
}

void sub_23982DF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982DF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982DFA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_23982DFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_23982DFE8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857C5C((uint64_t)v14, a1);
  v6 = &off_250AECA98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECA98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_23982E0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23982E134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23982E150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_23982E170()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_23982E188(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23982E1AC(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23982E1F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE6EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE6EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE6EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE6EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_23982E268@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23982E3A0((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEBC50;
    sub_23982E534(a1, (uint64_t)&v12);
    sub_2397D0A60((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23982E378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397CDE40((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23982E38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23982E3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 7;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23982E500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_23982E534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 7);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_23982E7B4(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_23982E774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23982E7B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  double v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  uint64_t v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23982E9E0(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED940;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 7);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = (uint64_t)(a2 + 3);
  sub_2397919D8(v22);
  result = v21;
  v21 = 0;
  if (result)
  {
    v19 = sub_23981183C(result);
    return MEMORY[0x23B83E31C](v19);
  }
  return result;
}

void sub_23982E968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239811A9C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982E97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239811A9C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982E998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239811A9C(&a12);
  _Unwind_Resume(a1);
}

void sub_23982E9BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239811A9C(&a12);
  _Unwind_Resume(a1);
}

double sub_23982E9E0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AED908;
  sub_23981F66C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECB18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981183C((uint64_t)v5);
}

void sub_23982EA9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981183C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23982EACC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981183C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23982EAE4()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_23982EAFC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23982EB20(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23981183C(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23982EB54(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE7EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE7EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE7EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE7EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_23982EBC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23982ECFC((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEBD60;
    sub_23982EE90(a1, (uint64_t)&v12);
    sub_2397D38E4((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23982ECD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397D0D70((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23982ECE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23982ECFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 8;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23982EE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23982EE90(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 8);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23982F110(v13, (uint64_t *)a2);
  }
}

void sub_23982F0D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23982F110(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  uint64_t v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23982F348(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AED9C8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 8);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = (uint64_t)(a2 + 3);
  sub_239792D70(v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23982F2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982F2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982F300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_23982F324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_23982F348@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857DCC((uint64_t)v14, a1);
  v6 = &off_250AECB98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECB98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_23982F45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23982F494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23982F4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_23982F4D0()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_23982F4E8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23982F50C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23982F558(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE8EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE8EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE8EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE8EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_23982F5C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23982F844((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEDA18;
    sub_23982FAEC(a1, (uint64_t)&v12);
    sub_23982F700((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23982F6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23982F7DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23982F6EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23982F700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v17 = v5;
  v18 = v4;
  v19 = 0;
  v20 = 0;
  v8 = *(unsigned __int8 *)(a1 + 28);
  v9 = *(unsigned int *)(a1 + 24);
  sub_2398EB464((uint64_t)&v15, 3, a1 + 88, 3, a1 + 100, 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = v9 | 0x100000000;
  if (!v8)
    v11 = 0;
  v12 = *(_WORD *)(a1 + 128);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  v13 = v15;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v13;
  *(_DWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 9;
  *(_WORD *)(a2 + 52) = v12;
  return nullsub_4(&v15);
}

void sub_23982F7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_23982F7DC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_23982F844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 9;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23982F9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_23982F9D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 1);
}

void sub_23982F9F4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23982FA60()
{
  return 9;
}

uint64_t sub_23982FA68(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_23982FA70(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_23982FAEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 9);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23982FD6C(v13, (uint64_t *)a2);
  }
}

void sub_23982FD2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23982FD6C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23982FFA4(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDB48;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 9);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_23978F020((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23982FF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982FF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23982FF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_23982FF80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_23982FFA4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEDB10;
  sub_23981FC8C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECC18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23983006C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398300B4()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_2398300CC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2398300F0(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23983013C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE9EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE9EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE9EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE9EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_2398301AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983042C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEDB98;
    sub_2398306D4(a1, (uint64_t)&v12);
    sub_2398302E4((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_2398302BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2398303C4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398302D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398302E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v17 = v5;
  v18 = v4;
  v19 = 0;
  v20 = 0;
  v8 = *(unsigned __int8 *)(a1 + 28);
  v9 = *(_DWORD *)(a1 + 24);
  sub_2398EB464((uint64_t)&v15, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = (2 * v9) | 0x100000000;
  v12 = *(_WORD *)(a1 + 128);
  if (!v8)
    v11 = 0;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  v13 = v15;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v13;
  *(_DWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 10;
  *(_WORD *)(a2 + 52) = v12;
  return nullsub_4(&v15);
}

void sub_2398303A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2398303C4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_23983042C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 10;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983058C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_2398305C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

void sub_2398305DC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239830648()
{
  return 10;
}

uint64_t sub_239830650(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_239830658(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2398306D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 10);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239830954(v13, (uint64_t *)a2);
  }
}

void sub_239830914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239830954(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239830B8C(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDCC8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 10);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239790400((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239830B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239830B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239830B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_239830B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_239830B8C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857F40((uint64_t)v14, a1);
  v6 = &off_250AECC98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECC98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239830CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239830CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239830CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_239830D14()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_239830D2C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239830D50(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239830D9C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE10EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE10EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE10EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE10EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239830E0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983108C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEDD18;
    sub_239831334(a1, (uint64_t)&v12);
    sub_239830F44((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239830F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239831024((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239830F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239830F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v17 = v5;
  v18 = v4;
  v19 = 0;
  v20 = 0;
  v8 = *(unsigned __int8 *)(a1 + 28);
  v9 = *(_DWORD *)(a1 + 24);
  sub_2398EB464((uint64_t)&v15, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = (2 * v9) | 0x100000000;
  v12 = *(_WORD *)(a1 + 128);
  if (!v8)
    v11 = 0;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  v13 = v15;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v13;
  *(_DWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 11;
  *(_WORD *)(a2 + 52) = v12;
  return nullsub_4(&v15);
}

void sub_239831008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_239831024(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_23983108C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 11;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398311EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_239831220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

void sub_23983123C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2398312A8()
{
  return 11;
}

uint64_t sub_2398312B0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2398312B8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_239831334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 11);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_2398315B4(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_239831574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398315B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  double v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_2398317E0(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDE48;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 11);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239851760(v22);
  result = v21;
  v21 = 0;
  if (result)
  {
    v19 = sub_23981322C(result);
    return MEMORY[0x23B83E31C](v19);
  }
  return result;
}

void sub_239831768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23981348C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983177C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23981348C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239831798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23981348C(&a12);
  _Unwind_Resume(a1);
}

void sub_2398317BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23981348C(&a12);
  _Unwind_Resume(a1);
}

double sub_2398317E0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEDE10;
  sub_2398202CC(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECD18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981322C((uint64_t)v5);
}

void sub_23983189C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981322C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398318CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981322C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398318E4()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_2398318FC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239831920(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23981322C(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239831954(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE11EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE11EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE11EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE11EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_2398319C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239831C44((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEDE98;
    sub_239831EEC(a1, (uint64_t)&v12);
    sub_239831AFC((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239831AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239831BDC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239831AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239831AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v17 = v5;
  v18 = v4;
  v19 = 0;
  v20 = 0;
  v8 = *(unsigned __int8 *)(a1 + 28);
  v9 = *(_DWORD *)(a1 + 24);
  sub_2398EB464((uint64_t)&v15, 3, a1 + 88, 3, a1 + 100, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = (4 * v9) | 0x100000000;
  v12 = *(_WORD *)(a1 + 128);
  if (!v8)
    v11 = 0;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  v13 = v15;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v13;
  *(_DWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 12;
  *(_WORD *)(a2 + 52) = v12;
  return nullsub_4(&v15);
}

void sub_239831BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_239831BDC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_239831C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 12;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239831DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_239831DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

void sub_239831DF4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239831E60()
{
  return 12;
}

uint64_t sub_239831E68(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_239831E70(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_239831EEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 12);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983216C(v13, (uint64_t *)a2);
  }
}

void sub_23983212C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983216C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_2398323A4(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEDFC8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 12);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_2398521BC((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23983232C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239832340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983235C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_239832380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_2398323A4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_2398580A8((uint64_t)v14, a1);
  v6 = &off_250AECD98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECD98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398324B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398324F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983250C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_23983252C()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_239832544(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239832568(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_2398325B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE12EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE12EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE12EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE12EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239832624@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983275C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEBF48;
    sub_2398328F0(a1, (uint64_t)&v12);
    sub_2397E5EF8((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239832734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397E4214((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239832748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983275C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 13;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398328BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_2398328F0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 13);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239832B70(v13, (uint64_t *)a2);
  }
}

void sub_239832B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239832B70(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239832DA8(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE050;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 13);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_23978F738((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239832D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239832D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239832D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_239832D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_239832DA8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE018;
  sub_2398208E8(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECE18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239832E70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239832EB8()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_239832ED0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239832EF4(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239832F40(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE13EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE13EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE13EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE13EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239832FB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_2398330E8((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEC370;
    sub_23983327C(a1, (uint64_t)&v12);
    sub_2397F3198((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_2398330C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397F1B20((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398330D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398330E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 14;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239833248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23983327C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 14);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_2398334FC(v13, (uint64_t *)a2);
  }
}

void sub_2398334BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_2398334FC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239833734(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE0D8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 14);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239790E2C((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_2398336BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398336D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398336EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_239833710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_239833734@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AECE98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECE98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239833848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239833880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983389C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_2398338BC()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_2398338D4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2398338F8(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239833944(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE14EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE14EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE14EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE14EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_2398339B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239833AEC((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEC5A8;
    sub_239833C80(a1, (uint64_t)&v12);
    sub_2397FE854((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239833AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397FD17C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239833AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239833AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 15;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239833C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_239833C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 15);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_239833F00(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_239833EC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239833F00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  double v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983412C(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE160;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 15);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239792420(v22);
  result = v21;
  v21 = 0;
  if (result)
  {
    v19 = sub_239814C1C(result);
    return MEMORY[0x23B83E31C](v19);
  }
  return result;
}

void sub_2398340B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239814E7C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398340C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239814E7C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398340E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239814E7C(&a12);
  _Unwind_Resume(a1);
}

void sub_239834108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239814E7C(&a12);
  _Unwind_Resume(a1);
}

double sub_23983412C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE128;
  sub_239820F40(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECF18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239814C1C((uint64_t)v5);
}

void sub_2398341E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239814C1C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239834218(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239814C1C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239834230()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_239834248(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23983426C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_239814C1C(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_2398342A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE15EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE15EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE15EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE15EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239834310@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239834448((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEC7E0;
    sub_2398345DC(a1, (uint64_t)&v12);
    sub_239807D64((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239834420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2398066EC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239834434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239834448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 16;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398345A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_2398345DC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 16);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983485C(v13, (uint64_t *)a2);
  }
}

void sub_23983481C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983485C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239834A94(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE1E8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 16);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_2397934CC((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239834A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239834A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239834A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_239834A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_239834A94@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AECF98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECF98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239834BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239834BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239834BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_239834C1C()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_239834C34(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239834C58(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239834CA4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE16EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE16EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE16EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE16EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239834D14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239834E4C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE38E8;
    sub_239834FE0(a1, (uint64_t)&v12);
    sub_23970B00C((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239834E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2396FF4CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239834E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239834E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 17;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239834FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_239834FE0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 17);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239835260(v13, (uint64_t *)a2);
  }
}

void sub_239835220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239835260(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239835498(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE39C8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 17);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_23978F020((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239835420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2397087BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239835434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_2397087BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239835450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_2397087BC(&a12);
  _Unwind_Resume(a1);
}

void sub_239835474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_2397087BC(&a12);
  _Unwind_Resume(a1);
}

double sub_239835498@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE3928;
  sub_239821560(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3948;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239835560(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398355A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239835824((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEE238;
    sub_239835ACC(a1, (uint64_t)&v12);
    sub_2398356DC((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_2398356B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2398357BC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398356C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398356DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v17 = v5;
  v18 = v4;
  v19 = 0;
  v20 = 0;
  v8 = *(unsigned __int8 *)(a1 + 28);
  v9 = *(_DWORD *)(a1 + 24);
  sub_2398EB464((uint64_t)&v15, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = (2 * v9) | 0x100000000;
  v12 = *(_WORD *)(a1 + 128);
  if (!v8)
    v11 = 0;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  v13 = v15;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v13;
  *(_DWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 18;
  *(_WORD *)(a2 + 52) = v12;
  return nullsub_4(&v15);
}

void sub_2398357A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_2398357BC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_239835824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 18;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239835984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_2398359B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

void sub_2398359D4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239835A40()
{
  return 18;
}

uint64_t sub_239835A48(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_239835A50(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_239835ACC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 18);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239835D4C(v13, (uint64_t *)a2);
  }
}

void sub_239835D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239835D4C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239835F84(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE368;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 18);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239790400((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239835F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239835F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239835F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_239835F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_239835F84@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857F40((uint64_t)v14, a1);
  v6 = &off_250AED018;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED018;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239836098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398360D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398360EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_23983610C()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_239836124(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239836148(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239836194(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE18EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE18EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE18EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE18EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239836204@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239836484((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEE3B8;
    sub_23983672C(a1, (uint64_t)&v12);
    sub_23983633C((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239836314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23983641C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239836328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983633C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v17 = v5;
  v18 = v4;
  v19 = 0;
  v20 = 0;
  v8 = *(unsigned __int8 *)(a1 + 28);
  v9 = *(_DWORD *)(a1 + 24);
  sub_2398EB464((uint64_t)&v15, 3, a1 + 88, 3, a1 + 100, 2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = (2 * v9) | 0x100000000;
  v12 = *(_WORD *)(a1 + 128);
  if (!v8)
    v11 = 0;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  v13 = v15;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v13;
  *(_DWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 19;
  *(_WORD *)(a2 + 52) = v12;
  return nullsub_4(&v15);
}

void sub_239836400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_23983641C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_239836484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 19;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398365E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_239836618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 2);
}

void sub_239836634(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2398366A0()
{
  return 19;
}

uint64_t sub_2398366A8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2398366B0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_23983672C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 19);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_2398369AC(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_23983696C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398369AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  double v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239836BD8(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE4E8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 19);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239851760(v22);
  result = v21;
  v21 = 0;
  if (result)
  {
    v19 = sub_239816528(result);
    return MEMORY[0x23B83E31C](v19);
  }
  return result;
}

void sub_239836B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2398166FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239836B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_2398166FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239836B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_2398166FC(&a12);
  _Unwind_Resume(a1);
}

void sub_239836BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_2398166FC(&a12);
  _Unwind_Resume(a1);
}

double sub_239836BD8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE4B0;
  sub_239821BA0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED098;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239816528((uint64_t)v5);
}

void sub_239836C94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239816528((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239836CC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239816528((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239836CDC()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_239836CF4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239836D18(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_239816528(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239836D4C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE19EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE19EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE19EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE19EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239836DBC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983703C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEE538;
    sub_2398372E4(a1, (uint64_t)&v12);
    sub_239836EF4((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239836ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239836FD4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239836EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239836EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v17 = v5;
  v18 = v4;
  v19 = 0;
  v20 = 0;
  v8 = *(unsigned __int8 *)(a1 + 28);
  v9 = *(_DWORD *)(a1 + 24);
  sub_2398EB464((uint64_t)&v15, 3, a1 + 88, 3, a1 + 100, 4);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = (4 * v9) | 0x100000000;
  v12 = *(_WORD *)(a1 + 128);
  if (!v8)
    v11 = 0;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  v13 = v15;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v13;
  *(_DWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v10;
  *(_DWORD *)(a2 + 48) = 20;
  *(_WORD *)(a2 + 52) = v12;
  return nullsub_4(&v15);
}

void sub_239836FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_239416DA0((uint64_t)va1);
  _Unwind_Resume(a1);
}

double sub_239836FD4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  double result;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  else
  {
LABEL_5:
    *(_QWORD *)&result = nullsub_4(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_23983703C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 20;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983719C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_2398371D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2398EB464(a2, 3, a1 + 88, 3, a1 + 100, 4);
}

void sub_2398371EC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239837258()
{
  return 20;
}

uint64_t sub_239837260(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_239837268(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2398372E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 20);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239837564(v13, (uint64_t *)a2);
  }
}

void sub_239837524(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239837564(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983779C(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE668;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 20);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_2398521BC((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239837724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239837738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239837754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_239837778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_23983779C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_2398580A8((uint64_t)v14, a1);
  v6 = &off_250AED118;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED118;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398378B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398378E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239837904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_239837924()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_23983793C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239837960(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_2398379AC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE20EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE20EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE20EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE20EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239837A1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239837B54((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250ADBEA0;
    sub_239837CE8(a1, (uint64_t)&v12);
    sub_239709138((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239837B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239469744((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239837B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239837B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 21;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239837CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_239837CE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 21);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239837F68(v13, (uint64_t *)a2);
  }
}

void sub_239837F28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239837F68(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_2398381A0(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADCAC0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 21);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_23978F020((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239838128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23949CC1C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983813C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23949CC1C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239838158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23949CC1C(&a12);
  _Unwind_Resume(a1);
}

void sub_23983817C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23949CC1C(&a12);
  _Unwind_Resume(a1);
}

double sub_2398381A0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250ADCA20;
  sub_23982234C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADCA40;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239838268(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398382AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_2398383E4((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE6058;
    sub_239838578(a1, (uint64_t)&v12);
    sub_2397635BC((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_2398383BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239762870((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398383D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398383E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 22;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239838544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_239838578(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 22);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_2398387F8(v13, (uint64_t *)a2);
  }
}

void sub_2398387B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_2398387F8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239838A30(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6230;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 22);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239790400((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_2398389B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239762BE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398389CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239762BE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398389E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239762BE4(&a12);
  _Unwind_Resume(a1);
}

void sub_239838A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239762BE4(&a12);
  _Unwind_Resume(a1);
}

double sub_239838A30@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857F40((uint64_t)v14, a1);
  v6 = &off_250AE6198;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6198;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239838B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239838B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239838B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239838BB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239838CEC((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE09C8;
    sub_239838E80(a1, (uint64_t)&v12);
    sub_2397638FC((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239838CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239616850((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239838CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239838CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 23;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239838E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_239838E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 23);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_239839100(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_2398390C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239839100@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  double v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983932C(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0C98;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 23);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239851760(v22);
  result = v21;
  v21 = 0;
  if (result)
  {
    v19 = sub_239817CC4(result);
    return MEMORY[0x23B83E31C](v19);
  }
  return result;
}

void sub_2398392B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23961ACAC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398392C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23961ACAC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398392E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23961ACAC(&a12);
  _Unwind_Resume(a1);
}

void sub_239839308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23961ACAC(&a12);
  _Unwind_Resume(a1);
}

double sub_23983932C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE0BF8;
  sub_23982298C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0C18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239817CC4((uint64_t)v5);
}

void sub_2398393E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239817CC4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239839418(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239817CC4((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23983942C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239839564((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250ADDC30;
    sub_2398396F8(a1, (uint64_t)&v12);
    sub_23970977C((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983953C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239558040((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239839550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239839564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 24;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398396C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_2398396F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 24);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239839978(v13, (uint64_t *)a2);
  }
}

void sub_239839938(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239839978(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239839BB0(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADECB8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 24);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_2398521BC((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239839B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239581014((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239839B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239581014((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239839B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239581014(&a12);
  _Unwind_Resume(a1);
}

void sub_239839B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239581014(&a12);
  _Unwind_Resume(a1);
}

double sub_239839BB0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_2398580A8((uint64_t)v14, a1);
  v6 = &off_250ADEC38;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADEC38;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239839CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239839CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239839D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239839D34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239839E6C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE3B18;
    sub_23983A000(a1, (uint64_t)&v12);
    sub_23970AF38((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239839E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23970128C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239839E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239839E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 25;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239839FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23983A000(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 25);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983A280(v13, (uint64_t *)a2);
  }
}

void sub_23983A240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983A280(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983A4B8(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3BF8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 25);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_23978F738((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23983A440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23970A838((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983A454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23970A838((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983A470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23970A838(&a12);
  _Unwind_Resume(a1);
}

void sub_23983A494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23970A838(&a12);
  _Unwind_Resume(a1);
}

double sub_23983A4B8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE3B58;
  sub_239823148(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3B78;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23983A580(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_23983A5C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983A6FC((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEC468;
    sub_23983A890(a1, (uint64_t)&v12);
    sub_2397F4398((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983A6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397F3474((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983A6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983A6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 26;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983A85C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23983A890(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 26);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983AB10(v13, (uint64_t *)a2);
  }
}

void sub_23983AAD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983AB10(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983AD48(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE6F0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 26);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239790E2C((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23983ACD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983ACE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983AD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_23983AD24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_23983AD48@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AED198;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED198;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_23983AE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983AE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983AEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_23983AED0()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_23983AEE8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23983AF0C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23983AF58(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE26EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE26EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE26EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE26EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_23983AFC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983B100((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEC6A0;
    sub_23983B294(a1, (uint64_t)&v12);
    sub_2397FFA78((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983B0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397FEB30((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983B0EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983B100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 27;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983B260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_23983B294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 27);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_23983B514(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_23983B4D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23983B514@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  double v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983B740(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE778;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 27);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239792420(v22);
  result = v21;
  v21 = 0;
  if (result)
  {
    v19 = sub_239819338(result);
    return MEMORY[0x23B83E31C](v19);
  }
  return result;
}

void sub_23983B6C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23981950C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983B6DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23981950C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983B6F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23981950C(&a12);
  _Unwind_Resume(a1);
}

void sub_23983B71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23981950C(&a12);
  _Unwind_Resume(a1);
}

double sub_23983B740@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE740;
  sub_2398237A0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED218;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239819338((uint64_t)v5);
}

void sub_23983B7FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239819338((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23983B82C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239819338((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23983B844()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_23983B85C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23983B880(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_239819338(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23983B8B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE27EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE27EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE27EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE27EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_23983B924@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983BA5C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEC8D8;
    sub_23983BBF0(a1, (uint64_t)&v12);
    sub_239808F4C((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983BA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239808040((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983BA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983BA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 28;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983BBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23983BBF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 28);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983BE70(v13, (uint64_t *)a2);
  }
}

void sub_23983BE30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983BE70(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983C0A8(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE800;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 28);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_2397934CC((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23983C030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983C044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983C060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_23983C084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_23983C0A8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AED298;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED298;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_23983C1BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983C1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983C210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_23983C230()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_23983C248(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23983C26C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23983C2B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE28EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE28EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE28EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE28EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_23983C328@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983C460((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE0988;
    sub_23983C5F4(a1, (uint64_t)&v12);
    sub_239709850((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983C438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239616828((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983C44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983C460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 29;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983C5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23983C5F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 29);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983C874(v13, (uint64_t *)a2);
  }
}

void sub_23983C834(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983C874(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983CAAC(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0AE8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 29);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_23978F738((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23983CA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239619774((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983CA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239619774((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983CA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239619774(&a12);
  _Unwind_Resume(a1);
}

void sub_23983CA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239619774(&a12);
  _Unwind_Resume(a1);
}

double sub_23983CAAC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE0A48;
  sub_239823DC8(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0A68;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23983CB74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_23983CBB8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983CCF0((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE62E0;
    sub_23983CE84(a1, (uint64_t)&v12);
    sub_239764E60((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983CCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239764114((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983CCDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983CCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 30;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983CE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23983CE84(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 30);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983D104(v13, (uint64_t *)a2);
  }
}

void sub_23983D0C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983D104(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983D33C(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE64B8;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 30);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239790E2C((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23983D2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239764488((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983D2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239764488((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983D2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239764488(&a12);
  _Unwind_Resume(a1);
}

void sub_23983D318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239764488(&a12);
  _Unwind_Resume(a1);
}

double sub_23983D33C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AE6420;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6420;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_23983D450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983D488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983D4A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_23983D4C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983D5F8((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE0A08;
    sub_23983D78C(a1, (uint64_t)&v12);
    sub_23970B0E0((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983D5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239616878((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983D5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983D5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 31;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983D758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_23983D78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 31);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_23983DA0C(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_23983D9CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23983DA0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  double v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983DC38(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0D70;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 31);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239792420(v22);
  result = v21;
  v21 = 0;
  if (result)
  {
    v19 = sub_23981AAD4(result);
    return MEMORY[0x23B83E31C](v19);
  }
  return result;
}

void sub_23983DBC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23961B614((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983DBD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23961B614((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983DBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23961B614(&a12);
  _Unwind_Resume(a1);
}

void sub_23983DC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23961B614(&a12);
  _Unwind_Resume(a1);
}

double sub_23983DC38@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE0CD0;
  sub_239824420(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0CF0;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981AAD4((uint64_t)v5);
}

void sub_23983DCF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981AAD4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23983DD24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981AAD4((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23983DD38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983DE70((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE08B8;
    sub_23983E004(a1, (uint64_t)&v12);
    sub_23970B1B4((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983DE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23960727C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983DE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983DE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 32;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983DFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23983E004(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 32);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983E284(v13, (uint64_t *)a2);
  }
}

void sub_23983E244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983E284(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983E4BC(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE0BC0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 32);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_2397934CC((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23983E444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23961A344((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983E458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23961A344((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983E474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23961A344(&a12);
  _Unwind_Resume(a1);
}

void sub_23983E498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23961A344(&a12);
  _Unwind_Resume(a1);
}

double sub_23983E4BC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AE0B40;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0B40;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_23983E5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983E608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983E624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_23983E640@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983E778((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE6538;
    sub_23983E90C(a1, (uint64_t)&v12);
    sub_239766158((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983E750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23976540C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983E764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983E778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 33;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983E8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23983E90C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 33);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983EB8C(v13, (uint64_t *)a2);
  }
}

void sub_23983EB4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983EB8C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983EDC4(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6710;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 33);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_23978F738((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23983ED4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239765780((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983ED60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239765780((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983ED7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239765780(&a12);
  _Unwind_Resume(a1);
}

void sub_23983EDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239765780(&a12);
  _Unwind_Resume(a1);
}

double sub_23983EDC4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE6630;
  sub_239824A48(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6678;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23983EE8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_23983EED0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983F008((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEC040;
    sub_23983F19C(a1, (uint64_t)&v12);
    sub_2397EA2CC((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983EFE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397E7D40((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983EFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983F008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 34;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983F168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_23983F19C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 34);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23983F41C(v13, (uint64_t *)a2);
  }
}

void sub_23983F3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23983F41C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23983F654(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE888;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 34);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239790E2C((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23983F5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983F5F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983F60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_23983F630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_23983F654@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AED318;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED318;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_23983F768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983F7A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23983F7BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_23983F7DC()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_23983F7F4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23983F818(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_23983F864(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE34EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE34EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE34EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE34EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_23983F8D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23983FA0C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEC150;
    sub_23983FBA0(a1, (uint64_t)&v12);
    sub_2397ED7C4((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_23983F9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397EA5DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23983F9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23983FA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 35;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23983FB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_23983FBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 35);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_23983FE20(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_23983FDE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23983FE20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  double v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_23984004C(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE910;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 35);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239792420(v22);
  result = v21;
  v21 = 0;
  if (result)
  {
    v19 = sub_23981C148(result);
    return MEMORY[0x23B83E31C](v19);
  }
  return result;
}

void sub_23983FFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23981C31C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23983FFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23981C31C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239840004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23981C31C(&a12);
  _Unwind_Resume(a1);
}

void sub_239840028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23981C31C(&a12);
  _Unwind_Resume(a1);
}

double sub_23984004C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE8D8;
  sub_2398250A0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED398;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981C148((uint64_t)v5);
}

void sub_239840108(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981C148((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239840138(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981C148((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239840150()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_239840168(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23984018C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    sub_23981C148(result);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_2398401C0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE35EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE35EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE35EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE35EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239840230@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239840368((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AEC260;
    sub_2398404FC(a1, (uint64_t)&v12);
    sub_2397F0960((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239840340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397EDAD4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239840354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239840368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 36;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398404C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_2398404FC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 36);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_23984077C(v13, (uint64_t *)a2);
  }
}

void sub_23984073C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_23984077C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_2398409B4(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AEE998;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 36);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_2397934CC((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_23984093C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239840950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239810D08((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23984096C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

void sub_239840990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239810D08(&a12);
  _Unwind_Resume(a1);
}

double sub_2398409B4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AED418;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED418;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239840AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239840B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239840B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_239840B3C()
{
  JUMPOUT(0x23B83E31CLL);
}

void sub_239840B54(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239840B78(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    sub_239916980(v1 + 64);
    nullsub_4(v1);
    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

uint64_t sub_239840BC4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE36EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE36EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE36EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE36EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_239840C34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239840D6C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE3A00;
    sub_239840F00(a1, (uint64_t)&v12);
    sub_23970A418((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239840D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239701264((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239840D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239840D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 1);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 37;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239840ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_239840F00(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 37);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239841180(v13, (uint64_t *)a2);
  }
}

void sub_239841140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239841180(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_2398413B8(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE3AE0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 37);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_23978F738((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239841340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_239709C70((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239841354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_239709C70((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239841370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239709C70(&a12);
  _Unwind_Resume(a1);
}

void sub_239841394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_239709C70(&a12);
  _Unwind_Resume(a1);
}

double sub_2398413B8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE3A40;
  sub_2398256C8(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3A60;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239841480(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398414C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_2398415FC((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE6778;
    sub_239841790(a1, (uint64_t)&v12);
    sub_2397671E4((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_2398415D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239766498((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398415E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398415FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 38;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23984175C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_239841790(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 38);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239841A10(v13, (uint64_t *)a2);
  }
}

void sub_2398419D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239841A10(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239841C48(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6950;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 38);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239790E2C((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239841BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23976680C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239841BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23976680C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239841C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23976680C(&a12);
  _Unwind_Resume(a1);
}

void sub_239841C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23976680C(&a12);
  _Unwind_Resume(a1);
}

double sub_239841C48@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AE68B8;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE68B8;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239841D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239841D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239841DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239841DCC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_239841F04((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE69A0;
    sub_239842098(a1, (uint64_t)&v12);
    sub_239768004((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239841EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397672B8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239841EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239841F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 2);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 39;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_239842064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_239842098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  std::__shared_weak_count_vtbl *v18;
  unint64_t *v19;
  __int16 v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v16 = v28;
    if (v28)
    {
      v17 = (std::__shared_weak_count *)operator new();
      v18 = (std::__shared_weak_count_vtbl *)v28;
      v17->__shared_owners_ = 0;
      v19 = (unint64_t *)&v17->__shared_owners_;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v17->__shared_weak_owners_ = 0;
      v17[1].__vftable = v18;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v16;
      *(_QWORD *)(a2 + 8) = v17;
      do
        v21 = __ldxr(v19);
      while (__stxr(v21 + 1, v19));
    }
    else
    {
      v17 = 0;
      v28 = 0;
      v20 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 64))(&v29, v16, 39);
    v22 = v29;
    v24 = v29[1];
    v23 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 56) = v23;
    v29 = 0;
    MEMORY[0x23B83E31C](v22, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v25;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v20;
    if (v16)
    {
      v26 = (unint64_t *)&v17->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v28;
    v28 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    return sub_239842318(v13, (uint64_t *)a2);
  }
  return result;
}

void sub_2398422D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239842318@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t result;
  double v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239842544(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6B78;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 39);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_239792420(v22);
  result = v21;
  v21 = 0;
  if (result)
  {
    v19 = sub_23981D8E4(result);
    return MEMORY[0x23B83E31C](v19);
  }
  return result;
}

void sub_2398424CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23976762C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398424E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23976762C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398424FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23976762C(&a12);
  _Unwind_Resume(a1);
}

void sub_239842520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23976762C(&a12);
  _Unwind_Resume(a1);
}

double sub_239842544@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE6A98;
  sub_239825D20(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6AE0;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981D8E4((uint64_t)v5);
}

void sub_239842600(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981D8E4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239842630(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981D8E4((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239842644@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  double result;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;

  v14 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    sub_23984277C((uint64_t)&v14, a2);
  }
  else
  {
    v11 = &off_250AE6BC8;
    sub_239842910(a1, (uint64_t)&v12);
    sub_239768E24((uint64_t)&v11, a2);
    v8 = v13;
    if (!v13)
      goto LABEL_13;
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
    else
    {
LABEL_13:
      *(_QWORD *)&result = nullsub_4(&v11).n128_u64[0];
    }
  }
  return result;
}

void sub_239842754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397680D8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239842768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23984277C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v21, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 48))(v21);
  v10 = v21;
  v19 = v21;
  if (v21)
  {
    v11 = (_QWORD *)operator new();
    v12 = v21;
    *v11 = &off_250ADB740;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v12;
  }
  else
  {
    v11 = 0;
  }
  v20 = v11;
  v21 = 0;
  sub_2398EB464((uint64_t)&v17, 3, *(_QWORD *)a1 + 32, 3, *(_QWORD *)a1 + 44, 4);
  v13 = *(_WORD *)(*(_QWORD *)a1 + 72);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v17;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 40;
  *(_WORD *)(a2 + 52) = v13;
  v15 = nullsub_4(&v17);
  result = v21;
  v21 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_2398428DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;

  sub_239416DA0((uint64_t)&a12);
  v15 = a14;
  a14 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  _Unwind_Resume(a1);
}

void sub_239842910(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  __int16 v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count_vtbl *v28;
  _OWORD *v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(std::__shared_weak_count **)(a1 + 16);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8);
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v8 + 32))(&v28, v8);
    v15 = v28;
    if (v28)
    {
      v16 = (std::__shared_weak_count *)operator new();
      v17 = v28;
      v16->__shared_owners_ = 0;
      v18 = (unint64_t *)&v16->__shared_owners_;
      v16->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADB740;
      v16->__shared_weak_owners_ = 0;
      v16[1].__vftable = v17;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 8) = v16;
      do
        v20 = __ldxr(v18);
      while (__stxr(v20 + 1, v18));
    }
    else
    {
      v16 = 0;
      v28 = 0;
      v19 = *(_WORD *)(a1 + 72);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(_OWORD **__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v15->~__shared_weak_count
     + 8))(&v29, v15, 40);
    v21 = v29;
    v23 = v29[1];
    v22 = v29[2];
    *(_OWORD *)(a2 + 24) = *v29;
    *(_OWORD *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 56) = v22;
    v29 = 0;
    MEMORY[0x23B83E31C](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
    v24 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a2 + 96) = v24;
    *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
    *(_WORD *)(a2 + 120) = v19;
    if (v15)
    {
      v25 = (unint64_t *)&v16->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    v27 = v28;
    v28 = 0;
    if (v27)
      (*((void (**)(std::__shared_weak_count_vtbl *))v27->~__shared_weak_count + 1))(v27);
  }
  else
  {
    v13 = a1 + 24;
    if (*(_BYTE *)(a1 + 72))
      v14 = *(_QWORD *)(a1 + 24) == 0;
    else
      v14 = 1;
    if (!v14)
      sub_239EC2F2C(a1);
    sub_239842B90(v13, (uint64_t *)a2);
  }
}

void sub_239842B50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

void sub_239842B90(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[0] = *(_QWORD *)(a1 + 12);
  sub_239842DC8(v22, &v21);
  v4 = v21;
  if (v21)
  {
    v5 = (std::__shared_weak_count *)operator new();
    v6 = v21;
    v5->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    v5->__vftable = (std::__shared_weak_count_vtbl *)&off_250AE6DA0;
    v5->__shared_weak_owners_ = 0;
    v5[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v20 = v5;
    v21 = 0;
    *a2 = v4;
    a2[1] = (uint64_t)v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v20 = 0;
    v21 = 0;
    *a2 = 0;
    a2[1] = 0;
  }
  a2[2] = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 64))(v22, v4, 40);
  v9 = v22[0];
  v11 = *(_OWORD *)(v22[0] + 16);
  v10 = *(_OWORD *)(v22[0] + 32);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v22[0];
  *(_OWORD *)(a2 + 5) = v11;
  *(_OWORD *)(a2 + 7) = v10;
  v22[0] = 0;
  MEMORY[0x23B83E31C](v9);
  a2[9] = a2[3];
  a2[14] = a2[8];
  v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a2 + 5) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a2 + 6) = v12;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *((_WORD *)a2 + 60) = v15 & 0xFF00 | v14;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v22[0] = a1;
  v22[1] = a2 + 3;
  sub_2397934CC((uint64_t)v22);
  v18 = v21;
  v21 = 0;
  if (v18)
  {
    sub_239916980(v18 + 64);
    v19 = nullsub_4(v18);
    MEMORY[0x23B83E31C](v19);
  }
}

void sub_239842D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_23976844C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239842D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_239416DA0(v4);
  sub_23976844C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239842D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23976844C(&a12);
  _Unwind_Resume(a1);
}

void sub_239842DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_239416DA0(v12);
  sub_239416DA0((uint64_t)&a9);
  sub_23976844C(&a12);
  _Unwind_Resume(a1);
}

double sub_239842DC8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AE6D08;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6D08;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239842EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239842F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239842F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

void sub_239842F50(uint64_t a1)
{
  nullsub_4(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_239842F74(uint64_t a1, int a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a3;
  v3[1] = v3;
  sub_239842FD4(a2);
}

void sub_239842FA0(uint64_t a1, int a2, uint64_t a3)
{
  char v3;
  _QWORD v4[3];

  v4[0] = a3;
  v4[1] = v4;
  v4[2] = &v3;
  sub_239845FF0(a2);
}

void sub_239842FD4(int a1)
{
  __asm { BR              X10 }
}

void sub_239843004(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398435A8(*a2, &v3);
  *v2 = v3;
}

void sub_239843028(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398436A4(*a2, &v3);
  *v2 = v3;
}

void sub_23984304C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398437A0(*a2, &v3);
  *v2 = v3;
}

void sub_239843070(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239843890(*a2, &v3);
  *v2 = v3;
}

void sub_239843094(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984398C(*a2, &v3);
  *v2 = v3;
}

void sub_2398430B8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239843AA0(*a2, &v3);
  *v2 = v3;
}

void sub_2398430DC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239843BB4(*a2, &v3);
  *v2 = v3;
}

void sub_239843100(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239843CBC(*a2, &v3);
  *v2 = v3;
}

void sub_239843124(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239843DD0(*a2, &v3);
  *v2 = v3;
}

void sub_239843148(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239843EE4(*a2, &v3);
  *v2 = v3;
}

void sub_23984316C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239843FF8(*a2, &v3);
  *v2 = v3;
}

void sub_239843190(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844100(*a2, &v3);
  *v2 = v3;
}

void sub_2398431B4(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844214(*a2, &v3);
  *v2 = v3;
}

void sub_2398431D8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844328(*a2, &v3);
  *v2 = v3;
}

void sub_2398431FC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984443C(*a2, &v3);
  *v2 = v3;
}

void sub_239843220(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844544(*a2, &v3);
  *v2 = v3;
}

void sub_239843244(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844658(*a2, &v3);
  *v2 = v3;
}

void sub_239843268(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984476C(*a2, &v3);
  *v2 = v3;
}

void sub_23984328C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844880(*a2, &v3);
  *v2 = v3;
}

void sub_2398432B0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844988(*a2, &v3);
  *v2 = v3;
}

void sub_2398432D4(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844A9C(*a2, &v3);
  *v2 = v3;
}

void sub_2398432F8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844BB0(*a2, &v3);
  *v2 = v3;
}

void sub_23984331C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844CC4(*a2, &v3);
  *v2 = v3;
}

void sub_239843340(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844DCC(*a2, &v3);
  *v2 = v3;
}

void sub_239843364(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844EE0(*a2, &v3);
  *v2 = v3;
}

void sub_239843388(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239844FF4(*a2, &v3);
  *v2 = v3;
}

void sub_2398433AC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845108(*a2, &v3);
  *v2 = v3;
}

void sub_2398433D0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845210(*a2, &v3);
  *v2 = v3;
}

void sub_2398433F4(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845324(*a2, &v3);
  *v2 = v3;
}

void sub_239843418(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845438(*a2, &v3);
  *v2 = v3;
}

void sub_23984343C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984554C(*a2, &v3);
  *v2 = v3;
}

void sub_239843460(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845654(*a2, &v3);
  *v2 = v3;
}

void sub_239843484(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845768(*a2, &v3);
  *v2 = v3;
}

void sub_2398434A8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984587C(*a2, &v3);
  *v2 = v3;
}

void sub_2398434CC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845990(*a2, &v3);
  *v2 = v3;
}

void sub_2398434F0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845A98(*a2, &v3);
  *v2 = v3;
}

void sub_239843514(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845BAC(*a2, &v3);
  *v2 = v3;
}

void sub_239843538(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845CC0(*a2, &v3);
  *v2 = v3;
}

void sub_23984355C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845DD4(*a2, &v3);
  *v2 = v3;
}

void sub_239843580(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239845EDC(*a2, &v3);
  *v2 = v3;
}

double sub_2398435A8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[47];
  char v8;
  uint64_t (**v9)();

  v9 = &off_250ADB668;
  v8 = 0;
  sub_23981E490(a1, (void **)&v8, (uint64_t)&v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADB688;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[24];
  *a2 = v3;
  sub_239916980((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_239843660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  __n128 v16;

  v16 = nullsub_4(v14);
  MEMORY[0x23B83E31C](v16);
  sub_239916980((uint64_t)&a14);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2398436A4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  _OWORD v6[2];
  _WORD v7[23];
  __int16 v8;
  uint64_t (**v9)();

  v9 = &off_250AE4270;
  v8 = 0;
  sub_23981E6B0(a1, &v8, (uint64_t)&v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE42B8;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[12];
  *a2 = v3;
  sub_239916980((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_23984375C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  __n128 v16;

  v16 = nullsub_4(v14);
  MEMORY[0x23B83E31C](v16);
  sub_239916980((uint64_t)&a14);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_2398437A0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _WORD v7[23];
  __int16 v8;
  uint64_t (**v9)();

  v9 = &off_250AE5F10;
  v8 = 0;
  sub_23981E8DC(a1, &v8, (uint64_t)&v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE5F58;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[12];
  *a2 = v3;
  return sub_2398101C8((uint64_t)&v5);
}

void sub_23984384C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_2398101C8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23984387C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2398101C8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239843890@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  _OWORD v6[2];
  _DWORD v7[11];
  int v8;
  uint64_t (**v9)();

  v9 = &off_250ADDAC8;
  v8 = 0;
  sub_23981EC40(a1, &v8, (uint64_t)&v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADDAE8;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[6];
  *a2 = v3;
  sub_239916980((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(&v5).n128_u64[0];
  return result;
}

void sub_239843948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  __n128 v16;

  v16 = nullsub_4(v14);
  MEMORY[0x23B83E31C](v16);
  sub_239916980((uint64_t)&a14);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23984398C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t (**v11)();

  v11 = &off_250AED7F8;
  v10 = 0;
  sub_23981EE70(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECA18;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239843A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239843AA0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AED880;
  v10 = 0;
  sub_23981F1F4(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECA98;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239843B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239843BB4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AED908;
  v10 = 0;
  sub_23981F44C(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECB18;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  return sub_23981183C((uint64_t)v5);
}

void sub_239843C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_23981183C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239843CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23981183C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239843CBC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  int v10;
  uint64_t (**v11)();

  v11 = &off_250AED990;
  v10 = 0;
  sub_23981F88C(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECB98;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239843D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239843DD0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t (**v11)();

  v11 = &off_250AEDB10;
  v10 = 0;
  sub_23981FAE8(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECC18;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239843EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239843EE4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEDC90;
  v10 = 0;
  sub_23981FE5C(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECC98;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239843FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239843FF8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEDE10;
  v10 = 0;
  sub_2398200B0(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECD18;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  return sub_23981322C((uint64_t)v5);
}

void sub_2398440BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_23981322C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398440EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23981322C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239844100@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  int v10;
  uint64_t (**v11)();

  v11 = &off_250AEDF90;
  v10 = 0;
  sub_2398204E8(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECD98;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_2398441D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239844214@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t (**v11)();

  v11 = &off_250AEE018;
  v10 = 0;
  sub_23982073C(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECE18;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_2398442E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239844328@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEE0A0;
  v10 = 0;
  sub_239820AC0(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECE98;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_2398443F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23984443C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEE128;
  v10 = 0;
  sub_239820D1C(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECF18;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  return sub_239814C1C((uint64_t)v5);
}

void sub_239844500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_239814C1C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239844530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239814C1C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239844544@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  int v10;
  uint64_t (**v11)();

  v11 = &off_250AEE1B0;
  v10 = 0;
  sub_239821164(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECF98;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239844614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239844658@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t (**v11)();

  v11 = &off_250AE3928;
  v10 = 0;
  sub_2398213BC(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3948;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239844728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23984476C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEE330;
  v10 = 0;
  sub_239821730(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED018;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23984483C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239844880@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEE4B0;
  v10 = 0;
  sub_239821984(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED098;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  return sub_239816528((uint64_t)v5);
}

void sub_239844944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_239816528((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239844974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239816528((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239844988@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  int v10;
  uint64_t (**v11)();

  v11 = &off_250AEE630;
  v10 = 0;
  sub_239821DBC(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED118;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239844A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239844A9C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t (**v11)();

  v11 = &off_250ADCA20;
  v10 = 0;
  sub_2398221A8(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADCA40;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239844B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239844BB0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AE6150;
  v10 = 0;
  sub_23982251C(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6198;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239844C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239844CC4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AE0BF8;
  v10 = 0;
  sub_239822770(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0C18;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  return sub_239817CC4((uint64_t)v5);
}

void sub_239844D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_239817CC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239844DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239817CC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239844DCC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  int v10;
  uint64_t (**v11)();

  v11 = &off_250ADEC18;
  v10 = 0;
  sub_239822D48(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADEC38;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239844E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239844EE0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t (**v11)();

  v11 = &off_250AE3B58;
  v10 = 0;
  sub_239822F9C(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3B78;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239844FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239844FF4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEE6B8;
  v10 = 0;
  sub_239823320(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED198;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_2398450C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239845108@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEE740;
  v10 = 0;
  sub_23982357C(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED218;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  return sub_239819338((uint64_t)v5);
}

void sub_2398451CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_239819338((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398451FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239819338((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239845210@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  int v10;
  uint64_t (**v11)();

  v11 = &off_250AEE7C8;
  v10 = 0;
  sub_2398239C4(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED298;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_2398452E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239845324@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t (**v11)();

  v11 = &off_250AE0A48;
  v10 = 0;
  sub_239823C1C(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0A68;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_2398453F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239845438@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AE63D8;
  v10 = 0;
  sub_239823FA0(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6420;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239845508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23984554C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AE0CD0;
  v10 = 0;
  sub_2398241FC(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0CF0;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  return sub_23981AAD4((uint64_t)v5);
}

void sub_239845610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_23981AAD4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239845640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23981AAD4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239845654@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  int v10;
  uint64_t (**v11)();

  v11 = &off_250AE0B20;
  v10 = 0;
  sub_239824644(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0B40;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239845724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239845768@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t (**v11)();

  v11 = &off_250AE6630;
  v10 = 0;
  sub_23982489C(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6678;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239845838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_23984587C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEE850;
  v10 = 0;
  sub_239824C20(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED318;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23984594C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239845990@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AEE8D8;
  v10 = 0;
  sub_239824E7C(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED398;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  return sub_23981C148((uint64_t)v5);
}

void sub_239845A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_23981C148((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239845A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23981C148((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239845A98@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  int v10;
  uint64_t (**v11)();

  v11 = &off_250AEE960;
  v10 = 0;
  sub_2398252C4(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED418;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239845B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239845BAC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t (**v11)();

  v11 = &off_250AE3A40;
  v10 = 0;
  sub_23982551C(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3A60;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239845C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239845CC0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AE6870;
  v10 = 0;
  sub_2398258A0(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE68B8;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239845D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

double sub_239845DD4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  __int16 v10;
  uint64_t (**v11)();

  v11 = &off_250AE6A98;
  v10 = 0;
  sub_239825AFC(a1, &v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6AE0;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  return sub_23981D8E4((uint64_t)v5);
}

void sub_239845E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __n128 v11;

  v11 = nullsub_4(v9);
  MEMORY[0x23B83E31C](v11);
  sub_23981D8E4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239845EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23981D8E4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239845EDC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[6];
  int v10;
  uint64_t (**v11)();

  v11 = &off_250AE6CC0;
  v10 = 0;
  sub_239825F44(a1, (uint64_t)&v10, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6D08;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)&v5[8];
  *(_OWORD *)(v3 + 24) = v6;
  *(_OWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 56) = v8;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v9);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v9[3];
  *(_QWORD *)(v3 + 104) = v9[5];
  *a2 = v3;
  sub_239916980((uint64_t)v9);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239845FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  __n128 v19;

  v19 = nullsub_4(v17);
  MEMORY[0x23B83E31C](v19);
  sub_239916980((uint64_t)&a17);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239845FF0(int a1)
{
  __asm { BR              X10 }
}

void sub_239846020(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398465C4(*a2, &v3);
  *v2 = v3;
}

void sub_239846044(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398466B8(*a2, &v3);
  *v2 = v3;
}

void sub_239846068(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398467AC(*a2, &v3);
  *v2 = v3;
}

void sub_23984608C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239846894(*a2, &v3);
  *v2 = v3;
}

void sub_2398460B0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239846988(*a2, &v3);
  *v2 = v3;
}

void sub_2398460D4(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239846A94(*a2, &v3);
  *v2 = v3;
}

void sub_2398460F8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239846C18(*a2, &v3);
  *v2 = v3;
}

void sub_23984611C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239846D18(*a2, &v3);
  *v2 = v3;
}

void sub_239846140(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239846E9C(*a2, &v3);
  *v2 = v3;
}

void sub_239846164(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239846FA8(*a2, &v3);
  *v2 = v3;
}

void sub_239846188(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984712C(*a2, &v3);
  *v2 = v3;
}

void sub_2398461AC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984722C(*a2, &v3);
  *v2 = v3;
}

void sub_2398461D0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398473B0(*a2, &v3);
  *v2 = v3;
}

void sub_2398461F4(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398474BC(*a2, &v3);
  *v2 = v3;
}

void sub_239846218(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239847640(*a2, &v3);
  *v2 = v3;
}

void sub_23984623C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239847740(*a2, &v3);
  *v2 = v3;
}

void sub_239846260(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398478C4(*a2, &v3);
  *v2 = v3;
}

void sub_239846284(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398479D0(*a2, &v3);
  *v2 = v3;
}

void sub_2398462A8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239847B54(*a2, &v3);
  *v2 = v3;
}

void sub_2398462CC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239847C54(*a2, &v3);
  *v2 = v3;
}

void sub_2398462F0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239847DD8(*a2, &v3);
  *v2 = v3;
}

void sub_239846314(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239847EE4(*a2, &v3);
  *v2 = v3;
}

void sub_239846338(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239848068(*a2, &v3);
  *v2 = v3;
}

void sub_23984635C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239848168(*a2, &v3);
  *v2 = v3;
}

void sub_239846380(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398482EC(*a2, &v3);
  *v2 = v3;
}

void sub_2398463A4(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398483F8(*a2, &v3);
  *v2 = v3;
}

void sub_2398463C8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984857C(*a2, &v3);
  *v2 = v3;
}

void sub_2398463EC(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984867C(*a2, &v3);
  *v2 = v3;
}

void sub_239846410(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239848800(*a2, &v3);
  *v2 = v3;
}

void sub_239846434(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_23984890C(*a2, &v3);
  *v2 = v3;
}

void sub_239846458(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239848A90(*a2, &v3);
  *v2 = v3;
}

void sub_23984647C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239848B90(*a2, &v3);
  *v2 = v3;
}

void sub_2398464A0(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239848D14(*a2, &v3);
  *v2 = v3;
}

void sub_2398464C4(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239848E20(*a2, &v3);
  *v2 = v3;
}

void sub_2398464E8(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239848FA4(*a2, &v3);
  *v2 = v3;
}

void sub_23984650C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398490A4(*a2, &v3);
  *v2 = v3;
}

void sub_239846530(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239849228(*a2, &v3);
  *v2 = v3;
}

void sub_239846554(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_239849334(*a2, &v3);
  *v2 = v3;
}

void sub_239846578(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398494B8(*a2, &v3);
  *v2 = v3;
}

void sub_23984659C(uint64_t a1, _DWORD **a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_2398495B8(*a2, &v3);
  *v2 = v3;
}

double sub_2398465C4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250ADB668;
  sub_23981E58C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADB688;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  sub_239916980((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239846674(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398466B8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250AE4270;
  sub_23981E7B0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE42B8;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  sub_239916980((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239846768(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398467AC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250AE5F10;
  sub_23981EA30(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE5F58;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  return sub_2398101C8((uint64_t)v5);
}

void sub_239846850(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_2398101C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239846880(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2398101C8((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239846894@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  _OWORD v6[2];
  _QWORD v7[6];

  v7[5] = &off_250ADDAC8;
  sub_23981ED40(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADDAE8;
  *(_OWORD *)(v3 + 8) = v6[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v6 + 12);
  sub_239916924((__n128 *)(v3 + 40), (__n128 *)v7);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)&v7[3];
  *a2 = v3;
  sub_239916980((uint64_t)v7);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239846944(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_239846988@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AED7F8;
  sub_23981F01C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECA18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239846A50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_239846A94@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857C5C((uint64_t)v14, a1);
  v6 = &off_250AECA98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECA98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239846BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239846BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239846BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239846C18@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AED908;
  sub_23981F66C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECB18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981183C((uint64_t)v5);
}

void sub_239846CD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981183C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239846D04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981183C((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239846D18@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857DCC((uint64_t)v14, a1);
  v6 = &off_250AECB98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECB98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239846E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239846E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239846E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239846E9C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEDB10;
  sub_23981FC8C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECC18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239846F64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_239846FA8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857F40((uint64_t)v14, a1);
  v6 = &off_250AECC98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECC98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398470BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398470F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239847110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_23984712C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEDE10;
  sub_2398202CC(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECD18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981322C((uint64_t)v5);
}

void sub_2398471E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981322C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239847218(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981322C((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23984722C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_2398580A8((uint64_t)v14, a1);
  v6 = &off_250AECD98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECD98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239847340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239847378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239847394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_2398473B0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE018;
  sub_2398208E8(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECE18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239847478(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398474BC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AECE98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECE98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398475D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239847608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239847624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239847640@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE128;
  sub_239820F40(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECF18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239814C1C((uint64_t)v5);
}

void sub_2398476FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239814C1C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23984772C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239814C1C((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239847740@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AECF98;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AECF98;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239847854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23984788C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398478A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_2398478C4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE3928;
  sub_239821560(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3948;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_23984798C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398479D0@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857F40((uint64_t)v14, a1);
  v6 = &off_250AED018;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED018;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239847AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239847B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239847B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239847B54@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE4B0;
  sub_239821BA0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED098;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239816528((uint64_t)v5);
}

void sub_239847C10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239816528((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239847C40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239816528((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239847C54@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_2398580A8((uint64_t)v14, a1);
  v6 = &off_250AED118;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED118;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239847D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239847DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239847DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239847DD8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250ADCA20;
  sub_23982234C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADCA40;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239847EA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_239847EE4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239857F40((uint64_t)v14, a1);
  v6 = &off_250AE6198;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6198;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239847FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239848030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23984804C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239848068@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE0BF8;
  sub_23982298C(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0C18;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239817CC4((uint64_t)v5);
}

void sub_239848124(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239817CC4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239848154(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239817CC4((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239848168@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_2398580A8((uint64_t)v14, a1);
  v6 = &off_250ADEC38;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250ADEC38;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_23984827C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398482B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398482D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_2398482EC@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE3B58;
  sub_239823148(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3B78;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_2398483B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_2398483F8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AED198;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED198;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_23984850C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239848544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239848560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_23984857C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE740;
  sub_2398237A0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED218;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_239819338((uint64_t)v5);
}

void sub_239848638(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239819338((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239848668(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239819338((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_23984867C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AED298;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED298;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239848790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398487C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398487E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239848800@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE0A48;
  sub_239823DC8(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0A68;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_2398488C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_23984890C@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AE6420;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6420;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239848A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239848A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239848A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239848A90@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE0CD0;
  sub_239824420(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0CF0;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981AAD4((uint64_t)v5);
}

void sub_239848B4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981AAD4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239848B7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981AAD4((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_239848B90@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AE0B40;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE0B40;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239848CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239848CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239848CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239848D14@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE6630;
  sub_239824A48(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6678;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_239848DDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_239848E20@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AED318;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED318;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239848F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239848F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239848F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239848FA4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AEE8D8;
  sub_2398250A0(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED398;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981C148((uint64_t)v5);
}

void sub_239849060(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981C148((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239849090(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981C148((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2398490A4@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AED418;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AED418;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398491B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_2398491F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23984920C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_239849228@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE3A40;
  sub_2398256C8(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE3A60;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  sub_239916980((uint64_t)v10);
  *(_QWORD *)&result = nullsub_4(v5).n128_u64[0];
  return result;
}

void sub_2398492F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_239916980((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_239849334@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858210((uint64_t)v14, a1);
  v6 = &off_250AE68B8;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE68B8;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_239849448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239849480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23984949C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

double sub_2398494B8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[7];

  v10[6] = &off_250AE6A98;
  sub_239825D20(a1, (uint64_t)v5);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6AE0;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(_OWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  sub_239916924((__n128 *)(v3 + 64), (__n128 *)v10);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)&v10[3];
  *(_QWORD *)(v3 + 104) = v10[5];
  *a2 = v3;
  return sub_23981D8E4((uint64_t)v5);
}

void sub_239849574(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  __n128 v4;
  va_list va;

  va_start(va, a2);
  v4 = nullsub_4(v2);
  MEMORY[0x23B83E31C](v4);
  sub_23981D8E4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398495A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23981D8E4((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2398495B8@<D0>(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  uint64_t (**v6)();
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[3];
  uint64_t v15;
  _QWORD v16[6];

  sub_239858380((uint64_t)v14, a1);
  v6 = &off_250AE6D08;
  v7 = v14[0];
  v8 = v14[1];
  v9 = v14[2];
  v10 = v15;
  sub_239916924(&v11, (__n128 *)v16);
  v12 = *(_OWORD *)&v16[3];
  v13 = v16[5];
  sub_239916980((uint64_t)v16);
  v3 = operator new();
  *(_QWORD *)v3 = &off_250AE6D08;
  v4 = v8;
  *(_OWORD *)(v3 + 8) = v7;
  *(_OWORD *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 40) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  sub_239916924((__n128 *)(v3 + 64), &v11);
  *(_OWORD *)(v3 + 88) = v12;
  *(_QWORD *)(v3 + 104) = v13;
  *a2 = v3;
  sub_239916980((uint64_t)&v11);
  *(_QWORD *)&result = nullsub_4(&v6).n128_u64[0];
  return result;
}

void sub_2398496CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v12;

  v12 = nullsub_4(v10);
  MEMORY[0x23B83E31C](v12);
  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239849704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_239916980(v9);
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239849720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  nullsub_4(&a9);
  sub_239916980(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_23984973C(uint64_t a1, uint64_t a2)
{
  size_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v4 = sub_2399169B0(a2);
  sub_2399168C0((_QWORD *)a1, v4, *(_QWORD *)(a2 + 16));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  if (*(_DWORD *)(a2 + 28))
    v5 = *(_DWORD *)(a2 + 24) == 0;
  else
    v5 = 1;
  v7 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (v5)
    v7 = 0;
  v9[0] = *(_QWORD *)(a2 + 8);
  v9[1] = v7;
  v9[2] = v6;
  if (HIDWORD(v7) * HIDWORD(v6) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239849808((_QWORD *)a1, (uint64_t)v9);
  return a1;
}

void sub_2398497F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239849808(_QWORD *result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  int i;
  int v16;
  _BYTE *v17;
  _QWORD v18[3];
  _QWORD v19[2];

  v2 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v5 = (_BYTE *)result[1];
    if (*((_DWORD *)result + 7))
      v6 = *((_DWORD *)result + 6) == 0;
    else
      v6 = 1;
    v7 = result[3];
    v8 = result[4];
    if (v6)
      v7 = 0;
    v18[0] = result[1];
    v18[1] = v7;
    v18[2] = v8;
    v9 = HIDWORD(v8);
    if (HIDWORD(v7) * HIDWORD(v8) == -1)
      sub_239EBFBC4((uint64_t)result, a2);
    v19[0] = a2;
    v19[1] = v18;
    v10 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v10 == 1 && v8 == 1)
    {
      return sub_23978E2A0(v19);
    }
    else
    {
      v11 = v2 - 1;
      v12 = *(_BYTE **)a2;
      v13 = v3 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(a2 + 20);
        if (v11)
        {
          for (i = 0; i != v13; ++i)
          {
            v16 = v11;
            v17 = v12;
            result = v5;
            do
            {
              *(_BYTE *)result = *v17;
              v17 += v10;
              result = (_QWORD *)((char *)result + v8);
              --v16;
            }
            while (v16);
            *(_BYTE *)result = *v17;
            v12 += v14;
            v5 += v9;
          }
        }
        else
        {
          do
          {
            *v5 = *v12;
            v12 += v14;
            v5 += v9;
            --v13;
          }
          while (v13);
        }
      }
      for (; v11; --v11)
      {
        *v5 = *v12;
        v12 += v10;
        v5 += v8;
      }
      *v5 = *v12;
    }
  }
  return result;
}

uint64_t sub_239849938(uint64_t result, int *a2)
{
  uint64_t v2;
  _BYTE *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _BYTE *v9;
  int v10;
  int i;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  _QWORD v17[3];
  __int128 v18;

  v2 = result;
  v3 = *(_BYTE **)(result + 40);
  if (!v3
    || (v4 = *a2, *a2 != *(_DWORD *)result)
    || (v5 = a2[1], v5 != *(_DWORD *)(result + 4))
    || (v6 = a2[2], (_DWORD)v6 != *(_DWORD *)(result + 8))
    || (v7 = a2[3], (_DWORD)v7 != *(_DWORD *)(result + 12)))
  {
    v16[0] = *(_OWORD *)a2;
    *(_OWORD *)((char *)v16 + 12) = *(_OWORD *)(a2 + 3);
    sub_23984973C((uint64_t)v17, (uint64_t)(a2 + 8));
    *(_OWORD *)v2 = v16[0];
    *(_OWORD *)(v2 + 12) = *(_OWORD *)((char *)v16 + 12);
    *(_OWORD *)(v2 + 56) = v18;
    sub_23991693C((_QWORD *)(v2 + 32), v17);
    sub_239916980((uint64_t)v17);
    return v2;
  }
  *(_QWORD *)&v16[0] = a2;
  *((_QWORD *)&v16[0] + 1) = result;
  if ((_DWORD)v6 == 1)
  {
    sub_239849AF0(v16);
    return v2;
  }
  if (!v4 || !v5)
    return v2;
  v8 = v4 - 1;
  v9 = (_BYTE *)*((_QWORD *)a2 + 5);
  v10 = v5 - 1;
  if (v10)
  {
    if (v8)
    {
      for (i = 0; i != v10; ++i)
      {
        v12 = 0;
        v13 = v8;
        do
        {
          v3[v12] = v9[v12];
          v12 += v6;
          --v13;
        }
        while (v13);
        v3[v12] = v9[v12];
        v9 += v7;
        v3 += v7;
      }
    }
    else
    {
      v14 = 0;
      do
      {
        v3[v14] = v9[v14];
        v14 += v7;
        --v10;
      }
      while (v10);
      v9 += v14;
      v3 += v14;
    }
  }
  if (v8)
  {
    v15 = 0;
    do
    {
      v3[v15] = v9[v15];
      v15 += v6;
      --v8;
    }
    while (v8);
    v9 += v15;
    v3 += v15;
  }
  *v3 = *v9;
  return result;
}

void sub_239849ADC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_239849AF0(_QWORD *result)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  size_t v6;
  const void *v7;
  BOOL v8;
  int v9;
  BOOL v10;
  char *v11;
  char *v12;
  size_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  _OWORD v19[2];

  v2 = (int *)*result;
  v1 = result[1];
  v3 = *(unsigned int *)(*result + 12);
  v4 = *(unsigned int *)(v1 + 12);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = *v2;
    if ((_DWORD)v3 == v2[2] * *v2)
    {
      v6 = v2[1] * v5;
      v7 = (const void *)*((_QWORD *)v2 + 5);
      if ((_DWORD)v6)
        v8 = v7 == 0;
      else
        v8 = 0;
      if (v8)
        sub_239EBF50C((uint64_t)result, (uint64_t)v7);
      if ((_DWORD)v6)
        return memmove(*(void **)(v1 + 40), v7, v6);
      return result;
    }
  }
  else
  {
    v5 = *v2;
  }
  v13 = v5;
  v9 = v2[1];
  if (v5)
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v14 = 0;
    v15 = v5 - 1;
    v16 = v2[2] | ((unint64_t)*(unsigned int *)(v1 + 8) << 32);
    v17 = v9 - 1;
    v18 = v3 | (v4 << 32);
    v11 = (char *)*((_QWORD *)v2 + 5);
    v12 = *(char **)(v1 + 40);
    memset(v19, 0, sizeof(v19));
    return sub_239661ED4(&v14, (uint64_t)v19, &v13, v11, v12);
  }
  return result;
}

_QWORD *sub_239849BC8(_QWORD *a1, _DWORD *a2, unint64_t *a3, char a4, _WORD *a5, char a6, uint64_t a7)
{
  unint64_t v11;
  int v12;
  uint64_t v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  unint64_t v20;
  _WORD *v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  _WORD *v30;
  int v31;
  uint64_t v32;
  _QWORD v34[3];
  _QWORD v35[2];

  if (a4)
  {
    v11 = *a3;
    v12 = a2[1];
  }
  else
  {
    LODWORD(v13) = *a2;
    v12 = a2[1];
    if (v12)
      v13 = v13;
    else
      v13 = 0;
    v11 = (*a2 != 0) | (unint64_t)(v13 << 32);
  }
  v14 = 2 * (v12 * HIDWORD(v11));
  v15 = (a7 - 1) | ((unint64_t)(a7 - 1) >> 1) | (((a7 - 1) | ((unint64_t)(a7 - 1) >> 1)) >> 2);
  v16 = v15 | (v15 >> 4) | ((v15 | (v15 >> 4)) >> 8);
  v17 = v16 | (v16 >> 16) | ((v16 | (v16 >> 16)) >> 32);
  if (v17 + 1 > 8)
    v18 = v17 + 1;
  else
    v18 = 8;
  sub_2399168C0(a1, v14, v18);
  v20 = *(_QWORD *)a2;
  a1[3] = *(_QWORD *)a2;
  a1[4] = (2 * v11) & 0xFFFFFFFEFFFFFFFELL;
  v21 = (_WORD *)a1[1];
  if (v21 && a6)
  {
    if (HIDWORD(v20))
      v22 = (_DWORD)v20 == 0;
    else
      v22 = 1;
    if (v22)
      v20 = 0;
    v23 = HIDWORD(v20);
    v34[0] = a1[1];
    v34[1] = v20;
    v34[2] = v11 & 0x7FFFFFFF7FFFFFFFLL;
    if (HIDWORD(v20) * ((v11 >> 31) >> 1) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v35[0] = v34;
    v35[1] = a5;
    v24 = v11 & 0x7FFFFFFF;
    if (v24 == 1)
    {
      sub_23978F93C(v35, v19);
      return a1;
    }
    if ((_DWORD)v20 && HIDWORD(v20))
    {
      v25 = v20 - 1;
      v26 = v23 - 1;
      if (v26)
      {
        v27 = HIDWORD(v11) & 0x7FFFFFFF;
        if (!v25)
        {
          do
          {
            *v21 = *a5;
            v21 += v27;
            --v26;
          }
          while (v26);
LABEL_33:
          *v21 = *a5;
          return a1;
        }
        v28 = 0;
        v29 = 2 * v27;
        do
        {
          v30 = v21;
          v31 = v25;
          do
          {
            *v30 = *a5;
            v30 += v24;
            --v31;
          }
          while (v31);
          *v30 = *a5;
          v21 = (_WORD *)((char *)v21 + v29);
          ++v28;
        }
        while (v28 != v26);
      }
      if (v25)
      {
        v32 = 2 * v24;
        do
        {
          *v21 = *a5;
          v21 = (_WORD *)((char *)v21 + v32);
          --v25;
        }
        while (v25);
      }
      goto LABEL_33;
    }
  }
  return a1;
}

void sub_239849DB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239849DC4(uint64_t a1, uint64_t a2)
{
  size_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  _QWORD v9[3];

  v4 = sub_2399169B0(a2);
  sub_2399168C0((_QWORD *)a1, v4, *(_QWORD *)(a2 + 16));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 28))
    v6 = *(_DWORD *)(a2 + 24) == 0;
  else
    v6 = 1;
  v7 = *(_QWORD *)(a2 + 24);
  if (v6)
    v7 = 0;
  v9[0] = *(_QWORD *)(a2 + 8);
  v9[1] = v7;
  v9[2] = (v5 >> 1) & 0x7FFFFFFF7FFFFFFFLL;
  if (HIDWORD(v7) * (v5 >> 33) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_239849E9C(a1, (uint64_t)v9);
  return a1;
}

void sub_239849E88(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239849E9C(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _WORD *v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _WORD *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _WORD *v19;
  _WORD *v20;
  int v21;
  _QWORD v22[3];
  _QWORD v23[2];

  v2 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v5 = *(_WORD **)(result + 8);
    v6 = *(_QWORD *)(result + 32);
    if (*(_DWORD *)(result + 28))
      v7 = *(_DWORD *)(result + 24) == 0;
    else
      v7 = 1;
    v8 = *(_QWORD *)(result + 24);
    if (v7)
      v8 = 0;
    v22[0] = *(_QWORD *)(result + 8);
    v22[1] = v8;
    v22[2] = (v6 >> 1) & 0x7FFFFFFF7FFFFFFFLL;
    v9 = v6 >> 33;
    if (HIDWORD(v8) * (v6 >> 33) == -1)
      sub_239EBFBC4(result, a2);
    v23[0] = a2;
    v23[1] = v22;
    v10 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v10 == 1 && (v6 & 0xFFFFFFFE) == 2)
      return (uint64_t)sub_23978FC2C(v23);
    v11 = v2 - 1;
    v12 = v6 >> 1;
    v13 = *(_WORD **)a2;
    v14 = v3 - 1;
    if (v14)
    {
      v15 = *(unsigned int *)(a2 + 20);
      if (!v11)
      {
        do
        {
          *v5 = *v13;
          v13 += v15;
          v5 += v9;
          --v14;
        }
        while (v14);
LABEL_25:
        *v5 = *v13;
        return result;
      }
      v16 = 0;
      v17 = 2 * v15;
      v18 = 2 * v9;
      result = 2 * v12;
      do
      {
        v19 = v5;
        v20 = v13;
        v21 = v11;
        do
        {
          *v19 = *v20;
          v20 += v10;
          v19 = (_WORD *)((char *)v19 + result);
          --v21;
        }
        while (v21);
        *v19 = *v20;
        v13 = (_WORD *)((char *)v13 + v17);
        v5 = (_WORD *)((char *)v5 + v18);
        ++v16;
      }
      while (v16 != v14);
    }
    for (; v11; --v11)
    {
      *v5 = *v13;
      v13 += v10;
      v5 += v12;
    }
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_239849FFC(uint64_t result, int *a2)
{
  uint64_t v2;
  _WORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _WORD *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[2];
  _QWORD v19[3];
  __int128 v20;

  v2 = result;
  v3 = *(_WORD **)(result + 40);
  if (!v3
    || (v4 = *a2, *a2 != *(_DWORD *)result)
    || (v5 = a2[1], v5 != *(_DWORD *)(result + 4))
    || (v6 = a2[2], (_DWORD)v6 != *(_DWORD *)(result + 8))
    || (v7 = a2[3], (_DWORD)v7 != *(_DWORD *)(result + 12)))
  {
    v18[0] = *(_OWORD *)a2;
    *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)(a2 + 3);
    sub_239849DC4((uint64_t)v19, (uint64_t)(a2 + 8));
    *(_OWORD *)v2 = v18[0];
    *(_OWORD *)(v2 + 12) = *(_OWORD *)((char *)v18 + 12);
    *(_OWORD *)(v2 + 56) = v20;
    sub_23991693C((_QWORD *)(v2 + 32), v19);
    sub_239916980((uint64_t)v19);
    return v2;
  }
  *(_QWORD *)&v18[0] = a2;
  *((_QWORD *)&v18[0] + 1) = result;
  if ((_DWORD)v6 == 1)
  {
    sub_23984A1C4(v18);
    return v2;
  }
  if (!v4 || !v5)
    return v2;
  v8 = v4 - 1;
  v9 = (_WORD *)*((_QWORD *)a2 + 5);
  v10 = v5 - 1;
  if (!v10)
  {
LABEL_18:
    if (v8)
    {
      v15 = 0;
      v16 = 2 * v6;
      do
      {
        *(_WORD *)((char *)v3 + v15) = *(_WORD *)((char *)v9 + v15);
        v15 += v16;
        --v8;
      }
      while (v8);
      v9 = (_WORD *)((char *)v9 + v15);
      v3 = (_WORD *)((char *)v3 + v15);
    }
    goto LABEL_25;
  }
  if (v8)
  {
    v11 = 0;
    v12 = 2 * v7;
    do
    {
      v13 = 0;
      v14 = v8;
      do
      {
        v3[v13] = v9[v13];
        v13 += v6;
        --v14;
      }
      while (v14);
      v3[v13] = v9[v13];
      v9 = (_WORD *)((char *)v9 + v12);
      v3 = (_WORD *)((char *)v3 + v12);
      ++v11;
    }
    while (v11 != v10);
    goto LABEL_18;
  }
  v17 = 0;
  do
  {
    v3[v17] = v9[v17];
    v17 += v7;
    --v10;
  }
  while (v10);
  v9 = (_WORD *)((char *)v9 + v17 * 2);
  v3 = (_WORD *)((char *)v3 + v17 * 2);
LABEL_25:
  *v3 = *v9;
  return result;
}

void sub_23984A1B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_23984A1C4(_QWORD *result)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  const void *v7;
  BOOL v8;
  int v9;
  BOOL v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  _OWORD v19[2];

  v2 = (int *)*result;
  v1 = result[1];
  v3 = *(unsigned int *)(*result + 12);
  v4 = *(unsigned int *)(v1 + 12);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = *v2;
    if ((_DWORD)v3 == v2[2] * *v2)
    {
      v6 = v2[1] * v5;
      v7 = (const void *)*((_QWORD *)v2 + 5);
      if ((_DWORD)v6)
        v8 = v7 == 0;
      else
        v8 = 0;
      if (v8)
        sub_239EBF50C((uint64_t)result, (uint64_t)v7);
      if ((_DWORD)v6)
        return memmove(*(void **)(v1 + 40), v7, 2 * v6);
      return result;
    }
  }
  else
  {
    v5 = *v2;
  }
  v13 = v5;
  v9 = v2[1];
  if (v5)
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v14 = 0;
    v15 = v5 - 1;
    v16 = v2[2] | ((unint64_t)*(unsigned int *)(v1 + 8) << 32);
    v17 = v9 - 1;
    v18 = v3 | (v4 << 32);
    v11 = (char *)*((_QWORD *)v2 + 5);
    v12 = *(char **)(v1 + 40);
    memset(v19, 0, sizeof(v19));
    return sub_23978FD08(&v14, (uint64_t)v19, &v13, v11, v12);
  }
  return result;
}

_QWORD *sub_23984A2A0(_QWORD *a1, _DWORD *a2, unint64_t *a3, char a4, _WORD *a5, char a6, uint64_t a7)
{
  unint64_t v11;
  int v12;
  uint64_t v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  unint64_t v19;
  _WORD *v20;
  BOOL v21;
  unint64_t v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _WORD *v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  _WORD *v36;
  int v37;

  if (a4)
  {
    v11 = *a3;
    v12 = a2[1];
  }
  else
  {
    LODWORD(v13) = *a2;
    v12 = a2[1];
    if (v12)
      v13 = v13;
    else
      v13 = 0;
    v11 = (*a2 != 0) | (unint64_t)(v13 << 32);
  }
  v14 = 2 * (v12 * HIDWORD(v11));
  v15 = (a7 - 1) | ((unint64_t)(a7 - 1) >> 1) | (((a7 - 1) | ((unint64_t)(a7 - 1) >> 1)) >> 2);
  v16 = v15 | (v15 >> 4) | ((v15 | (v15 >> 4)) >> 8);
  v17 = v16 | (v16 >> 16) | ((v16 | (v16 >> 16)) >> 32);
  if (v17 + 1 > 8)
    v18 = v17 + 1;
  else
    v18 = 8;
  sub_2399168C0(a1, v14, v18);
  v19 = *(_QWORD *)a2;
  a1[3] = *(_QWORD *)a2;
  a1[4] = (2 * v11) & 0xFFFFFFFEFFFFFFFELL;
  v20 = (_WORD *)a1[1];
  if (!v20)
    return a1;
  if (HIDWORD(v19))
    v21 = (_DWORD)v19 == 0;
  else
    v21 = 1;
  if (v21)
    v19 = 0;
  v22 = HIDWORD(v19);
  v23 = HIDWORD(v19) * ((v11 >> 31) >> 1);
  if (a6)
  {
    if (v23 == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    if ((_DWORD)v19 && HIDWORD(v19))
    {
      v24 = v19 - 1;
      v25 = v22 - 1;
      if (v25)
      {
        v26 = HIDWORD(v11) & 0x7FFFFFFF;
        if (v24)
        {
          v27 = 0;
          v28 = 2 * v26;
          do
          {
            v29 = v20;
            v30 = v24;
            do
            {
              *v29 = *a5;
              v29 += v11 & 0x7FFFFFFF;
              --v30;
            }
            while (v30);
            *v29 = *a5;
            v20 = (_WORD *)((char *)v20 + v28);
            ++v27;
          }
          while (v27 != v25);
        }
        else
        {
          do
          {
            *v20 = *a5;
            v20 += v26;
            --v25;
          }
          while (v25);
        }
      }
      for (; v24; --v24)
      {
        *v20 = *a5;
        v20 += v11 & 0x7FFFFFFF;
      }
      *v20 = *a5;
    }
    return a1;
  }
  if (v23 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  if (!(_DWORD)v19 || !HIDWORD(v19))
    return a1;
  v31 = v19 - 1;
  v32 = v22 - 1;
  if (v32)
  {
    v33 = HIDWORD(v11) & 0x7FFFFFFF;
    if (v31)
    {
      v34 = 0;
      v35 = 2 * v33;
      do
      {
        v36 = v20;
        v37 = v31;
        do
        {
          *v36 = 0;
          v36 += v11 & 0x7FFFFFFF;
          --v37;
        }
        while (v37);
        *v36 = 0;
        v20 = (_WORD *)((char *)v20 + v35);
        ++v34;
      }
      while (v34 != v32);
    }
    else
    {
      do
      {
        *v20 = 0;
        v20 += v33;
        --v32;
      }
      while (v32);
    }
  }
  for (; v31; --v31)
  {
    *v20 = 0;
    v20 += v11 & 0x7FFFFFFF;
  }
  *v20 = 0;
  return a1;
}

void sub_23984A534(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23982898C(v1);
  _Unwind_Resume(a1);
}

void sub_23984A548(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_23982898C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23984A55C(uint64_t a1, uint64_t a2)
{
  size_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  _QWORD v9[3];

  v4 = sub_2399169B0(a2);
  sub_2399168C0((_QWORD *)a1, v4, *(_QWORD *)(a2 + 16));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 28))
    v6 = *(_DWORD *)(a2 + 24) == 0;
  else
    v6 = 1;
  v7 = *(_QWORD *)(a2 + 24);
  if (v6)
    v7 = 0;
  v9[0] = *(_QWORD *)(a2 + 8);
  v9[1] = v7;
  v9[2] = (v5 >> 1) & 0x7FFFFFFF7FFFFFFFLL;
  if (HIDWORD(v7) * (v5 >> 33) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23984A634(a1, (uint64_t)v9);
  return a1;
}

void sub_23984A620(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23984A634(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  unint64_t v5;
  BOOL v6;
  int v7;
  unint64_t v8;
  _WORD *v9;
  int v10;
  uint64_t v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _WORD *v20;
  _WORD *v21;
  int v22;

  v2 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v5 = *(_QWORD *)(result + 32);
    if (*(_DWORD *)(result + 28))
      v6 = *(_DWORD *)(result + 24) == 0;
    else
      v6 = 1;
    if (v6)
      v7 = 0;
    else
      v7 = *(_DWORD *)(result + 28);
    v8 = v5 >> 33;
    if (v7 * (v5 >> 33) == -1)
      sub_239EBFBC4(result, a2);
    v9 = *(_WORD **)(result + 8);
    v10 = v2 - 1;
    v11 = v5 >> 1;
    v12 = *(_WORD **)a2;
    v13 = 2 * *(unsigned int *)(a2 + 16);
    v14 = 2 * v11;
    v15 = v3 - 1;
    if (v15)
    {
      v16 = *(unsigned int *)(a2 + 20);
      if (v10)
      {
        v17 = 0;
        v18 = 2 * v16;
        v19 = 2 * v8;
        do
        {
          v20 = v9;
          v21 = v12;
          v22 = v10;
          do
          {
            *v20 = *v21;
            v21 = (_WORD *)((char *)v21 + v13);
            v20 = (_WORD *)((char *)v20 + v14);
            --v22;
          }
          while (v22);
          result = (unsigned __int16)*v21;
          *v20 = result;
          v12 = (_WORD *)((char *)v12 + v18);
          v9 = (_WORD *)((char *)v9 + v19);
          ++v17;
        }
        while (v17 != v15);
      }
      else
      {
        do
        {
          *v9 = *v12;
          v12 += v16;
          v9 += v8;
          --v15;
        }
        while (v15);
      }
    }
    for (; v10; --v10)
    {
      *v9 = *v12;
      v12 = (_WORD *)((char *)v12 + v13);
      v9 = (_WORD *)((char *)v9 + v14);
    }
    *v9 = *v12;
  }
  return result;
}

__int16 sub_23984A73C@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  _WORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  BOOL v9;
  int v10;
  BOOL v11;
  int v12;
  int v13;
  _WORD *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v25[2];
  _QWORD v26[3];
  __int128 v27;

  v3 = *(_WORD **)(a1 + 40);
  if (v3
    && (v4 = *(_DWORD *)a2, *(_DWORD *)a2 == *(_DWORD *)a1)
    && (v5 = *(_DWORD *)(a2 + 4), v5 == *(_DWORD *)(a1 + 4))
    && (v6 = *(unsigned int *)(a2 + 8), (_DWORD)v6 == *(_DWORD *)(a1 + 8))
    && (v7 = *(unsigned int *)(a2 + 12), (_DWORD)v7 == *(_DWORD *)(a1 + 12)))
  {
    *(_QWORD *)&v25[0] = a2;
    *((_QWORD *)&v25[0] + 1) = a1;
    if ((_DWORD)v6 == 1)
    {
      v8 = sub_23984A9B4(v25, a2);
    }
    else if (v4 && v5)
    {
      v13 = v4 - 1;
      v14 = *(_WORD **)(a2 + 40);
      v15 = 2 * v6;
      v16 = v5 - 1;
      if (v16)
      {
        if (v13)
        {
          v17 = 0;
          v18 = 2 * v7;
          do
          {
            v19 = 0;
            v20 = v13;
            do
            {
              *(_WORD *)((char *)v3 + v19) = *(_WORD *)((char *)v14 + v19);
              v19 += v15;
              --v20;
            }
            while (v20);
            *(_WORD *)((char *)v3 + v19) = *(_WORD *)((char *)v14 + v19);
            v14 = (_WORD *)((char *)v14 + v18);
            v3 = (_WORD *)((char *)v3 + v18);
            ++v17;
          }
          while (v17 != v16);
        }
        else
        {
          v21 = 0;
          v22 = 2 * v7;
          do
          {
            *(_WORD *)((char *)v3 + v21) = *(_WORD *)((char *)v14 + v21);
            v21 += v22;
            --v16;
          }
          while (v16);
          v14 = (_WORD *)((char *)v14 + v21);
          v3 = (_WORD *)((char *)v3 + v21);
        }
      }
      if (v13)
      {
        v23 = 0;
        do
        {
          *(_WORD *)((char *)v3 + v23) = *(_WORD *)((char *)v14 + v23);
          v23 += v15;
          --v13;
        }
        while (v13);
        v14 = (_WORD *)((char *)v14 + v23);
        v3 = (_WORD *)((char *)v3 + v23);
      }
      LOWORD(v8) = *v14;
      *v3 = *v14;
    }
  }
  else
  {
    v25[0] = *(_OWORD *)a2;
    *(_OWORD *)((char *)v25 + 12) = *(_OWORD *)(a2 + 12);
    sub_23984A55C((uint64_t)v26, a2 + 32);
    *(_OWORD *)a1 = v25[0];
    *(_OWORD *)(a1 + 12) = *(_OWORD *)((char *)v25 + 12);
    *(_OWORD *)(a1 + 56) = v27;
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = !*(_DWORD *)(a1 + 60) || *(_DWORD *)(a1 + 56) == 0;
      v10 = v9 ? 0 : *(_DWORD *)(a1 + 60);
      if (v10 * (*(_QWORD *)(a1 + 64) >> 33) == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
    }
    sub_23991693C((_QWORD *)(a1 + 32), v26);
    if (v26[1])
    {
      v11 = !DWORD1(v27) || (_DWORD)v27 == 0;
      v12 = v11 ? 0 : DWORD1(v27);
      if (v12 * (*((_QWORD *)&v27 + 1) >> 33) == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
    }
    sub_239916980((uint64_t)v26);
  }
  return LOWORD(v8);
}

void sub_23984A9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23981024C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_23984A9B4(_QWORD *a1, uint64_t a2)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  _WORD *v10;
  unint64_t v11;
  __int16 *v12;
  unint64_t v13;
  unint64_t v14;
  _WORD *v15;
  __int128 *v16;
  _OWORD *v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  __int16 *v25;
  __int16 v26;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unint64_t v31;
  int v32;
  uint64_t v33;
  _OWORD v34[2];

  v2 = (int *)*a1;
  v3 = a1[1];
  v4 = *(unsigned int *)(*a1 + 12);
  v5 = *(unsigned int *)(v3 + 12);
  if ((_DWORD)v4 != (_DWORD)v5)
  {
    v6 = *v2;
LABEL_15:
    v28 = v6;
    v21 = v2[1];
    if (v6)
      v22 = v21 == 0;
    else
      v22 = 1;
    if (!v22)
    {
      v29 = 0;
      v30 = v6 - 1;
      v31 = v2[2] | ((unint64_t)*(unsigned int *)(v3 + 8) << 32);
      v32 = v21 - 1;
      v33 = v4 | (v5 << 32);
      v23 = *((_QWORD *)v2 + 5);
      v24 = *(_QWORD *)(v3 + 40);
      memset(v34, 0, sizeof(v34));
      *(_QWORD *)&v19 = sub_239791438(&v29, (uint64_t)v34, &v28, v23, v24);
    }
    return *(double *)&v19;
  }
  v6 = *v2;
  if ((_DWORD)v4 != v2[2] * *v2)
    goto LABEL_15;
  v7 = v2[1] * v6;
  v8 = *((_QWORD *)v2 + 5);
  if ((_DWORD)v7)
    v9 = v8 == 0;
  else
    v9 = 0;
  if (v9)
    sub_239EBF50C((uint64_t)a1, a2);
  if ((_DWORD)v7)
  {
    v10 = *(_WORD **)(v3 + 40);
    v11 = (v7 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v11 < 0xF)
    {
      v12 = (__int16 *)v8;
    }
    else
    {
      v12 = (__int16 *)v8;
      if ((unint64_t)v10 - v8 >= 0x20)
      {
        v13 = v11 + 1;
        v14 = v13 & 0xFFFFFFFFFFFFFFF0;
        v15 = &v10[v14];
        v12 = (__int16 *)(v8 + v14 * 2);
        v16 = (__int128 *)(v8 + 16);
        v17 = v10 + 8;
        v18 = v13 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v19 = *(v16 - 1);
          v20 = *v16;
          *(v17 - 1) = v19;
          *v17 = v20;
          v16 += 2;
          v17 += 2;
          v18 -= 16;
        }
        while (v18);
        v10 = v15;
        if (v13 == (v13 & 0xFFFFFFFFFFFFFFF0))
          return *(double *)&v19;
      }
    }
    v25 = (__int16 *)(v8 + 2 * v7);
    do
    {
      v26 = *v12++;
      LOWORD(v19) = v26;
      *v10++ = v26;
    }
    while (v12 != v25);
  }
  return *(double *)&v19;
}

uint64_t sub_23984AB0C(uint64_t a1, uint64_t a2)
{
  size_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  _QWORD v9[3];

  v4 = sub_2399169B0(a2);
  sub_2399168C0((_QWORD *)a1, v4, *(_QWORD *)(a2 + 16));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 28))
    v6 = *(_DWORD *)(a2 + 24) == 0;
  else
    v6 = 1;
  v7 = *(_QWORD *)(a2 + 24);
  if (v6)
    v7 = 0;
  v9[0] = *(_QWORD *)(a2 + 8);
  v9[1] = v7;
  v9[2] = (v5 >> 2) & 0x3FFFFFFF3FFFFFFFLL;
  if (HIDWORD(v7) * (v5 >> 34) == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23984ABE4(a1, (uint64_t)v9);
  return a1;
}

void sub_23984ABD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

float sub_23984ABE4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  _DWORD *v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  float result;
  int v12;
  uint64_t v13;
  _DWORD *v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  int v22;
  _QWORD v23[3];
  _QWORD v24[2];

  v2 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v5 = *(_DWORD **)(a1 + 8);
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 28))
      v7 = *(_DWORD *)(a1 + 24) == 0;
    else
      v7 = 1;
    v8 = *(_QWORD *)(a1 + 24);
    if (v7)
      v8 = 0;
    v23[0] = *(_QWORD *)(a1 + 8);
    v23[1] = v8;
    v23[2] = (v6 >> 2) & 0x3FFFFFFF3FFFFFFFLL;
    v9 = v6 >> 34;
    if (HIDWORD(v8) * (v6 >> 34) == -1)
      sub_239EBFBC4(a1, a2);
    v24[0] = a2;
    v24[1] = v23;
    v10 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v10 == 1 && (v6 & 0xFFFFFFFC) == 4)
    {
      sub_239717504(v24);
      return result;
    }
    v12 = v2 - 1;
    v13 = v6 >> 2;
    v14 = *(_DWORD **)a2;
    v15 = v3 - 1;
    if (v15)
    {
      v16 = *(unsigned int *)(a2 + 20);
      if (!v12)
      {
        do
        {
          *v5 = *v14;
          v14 += v16;
          v5 += v9;
          --v15;
        }
        while (v15);
LABEL_25:
        result = *(float *)v14;
        *v5 = *v14;
        return result;
      }
      v17 = 0;
      v18 = 4 * v16;
      v19 = 4 * v9;
      do
      {
        v20 = v5;
        v21 = v14;
        v22 = v12;
        do
        {
          *v20 = *v21;
          v21 += v10;
          v20 += v13;
          --v22;
        }
        while (v22);
        *v20 = *v21;
        v14 = (_DWORD *)((char *)v14 + v18);
        v5 = (_DWORD *)((char *)v5 + v19);
        ++v17;
      }
      while (v17 != v15);
    }
    for (; v12; --v12)
    {
      *v5 = *v14;
      v14 += v10;
      v5 += v13;
    }
    goto LABEL_25;
  }
  return result;
}

float sub_23984AD44(uint64_t a1, int *a2)
{
  _DWORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  float result;
  int v9;
  float *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];
  _QWORD v20[3];
  __int128 v21;

  v3 = *(_DWORD **)(a1 + 40);
  if (v3
    && (v4 = *a2, *a2 == *(_DWORD *)a1)
    && (v5 = a2[1], v5 == *(_DWORD *)(a1 + 4))
    && (v6 = a2[2], (_DWORD)v6 == *(_DWORD *)(a1 + 8))
    && (v7 = a2[3], (_DWORD)v7 == *(_DWORD *)(a1 + 12)))
  {
    *(_QWORD *)&v19[0] = a2;
    *((_QWORD *)&v19[0] + 1) = a1;
    if ((_DWORD)v6 == 1)
    {
      sub_23984AF0C(v19);
      return result;
    }
    if (v4 && v5)
    {
      v9 = v4 - 1;
      v10 = (float *)*((_QWORD *)a2 + 5);
      v11 = v5 - 1;
      if (v11)
      {
        if (!v9)
        {
          v18 = 0;
          do
          {
            v3[v18] = LODWORD(v10[v18]);
            v18 += v7;
            --v11;
          }
          while (v11);
          v10 = (float *)((char *)v10 + v18 * 4);
          v3 = (_DWORD *)((char *)v3 + v18 * 4);
LABEL_25:
          result = *v10;
          *v3 = *(_DWORD *)v10;
          return result;
        }
        v12 = 0;
        v13 = 4 * v7;
        do
        {
          v14 = 0;
          v15 = v9;
          do
          {
            v3[v14] = LODWORD(v10[v14]);
            v14 += v6;
            --v15;
          }
          while (v15);
          v3[v14] = LODWORD(v10[v14]);
          v10 = (float *)((char *)v10 + v13);
          v3 = (_DWORD *)((char *)v3 + v13);
          ++v12;
        }
        while (v12 != v11);
      }
      if (v9)
      {
        v16 = 0;
        v17 = 4 * v6;
        do
        {
          *(float *)((char *)v3 + v16) = *(float *)((char *)v10 + v16);
          v16 += v17;
          --v9;
        }
        while (v9);
        v10 = (float *)((char *)v10 + v16);
        v3 = (_DWORD *)((char *)v3 + v16);
      }
      goto LABEL_25;
    }
  }
  else
  {
    v19[0] = *(_OWORD *)a2;
    *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)(a2 + 3);
    sub_23984AB0C((uint64_t)v20, (uint64_t)(a2 + 8));
    *(_OWORD *)a1 = v19[0];
    *(_OWORD *)(a1 + 12) = *(_OWORD *)((char *)v19 + 12);
    *(_OWORD *)(a1 + 56) = v21;
    sub_23991693C((_QWORD *)(a1 + 32), v20);
    sub_239916980((uint64_t)v20);
  }
  return result;
}

void sub_23984AEF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_23984AF0C(_QWORD *result)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  const void *v7;
  BOOL v8;
  int v9;
  BOOL v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  _OWORD v19[2];

  v2 = (int *)*result;
  v1 = result[1];
  v3 = *(unsigned int *)(*result + 12);
  v4 = *(unsigned int *)(v1 + 12);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = *v2;
    if ((_DWORD)v3 == v2[2] * *v2)
    {
      v6 = v2[1] * v5;
      v7 = (const void *)*((_QWORD *)v2 + 5);
      if ((_DWORD)v6)
        v8 = v7 == 0;
      else
        v8 = 0;
      if (v8)
        sub_239EBF50C((uint64_t)result, (uint64_t)v7);
      if ((_DWORD)v6)
        return memmove(*(void **)(v1 + 40), v7, 4 * v6);
      return result;
    }
  }
  else
  {
    v5 = *v2;
  }
  v13 = v5;
  v9 = v2[1];
  if (v5)
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v14 = 0;
    v15 = v5 - 1;
    v16 = v2[2] | ((unint64_t)*(unsigned int *)(v1 + 8) << 32);
    v17 = v9 - 1;
    v18 = v3 | (v4 << 32);
    v11 = (char *)*((_QWORD *)v2 + 5);
    v12 = *(char **)(v1 + 40);
    memset(v19, 0, sizeof(v19));
    return sub_239487EB0(&v14, (uint64_t)v19, &v13, v11, v12);
  }
  return result;
}

uint64_t sub_23984AFE8(uint64_t a1, unsigned int *a2, uint64_t *a3, char a4, _BYTE *a5, char a6, uint64_t a7)
{
  unint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  size_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  int v24;
  BOOL v25;
  BOOL v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v32[2];
  int v33;
  unint64_t v34;
  int v35;
  _QWORD v36[2];
  _BYTE *v37;

  if (a4)
  {
    v11 = *a3;
    v12 = *((_DWORD *)a3 + 2);
    v13 = a2[2];
  }
  else
  {
    v14 = *a2;
    v15 = a2[1];
    if (v15)
      v16 = v14;
    else
      v16 = 0;
    v17 = v15 * v14;
    v13 = a2[2];
    if (v13)
      v12 = v17;
    else
      v12 = 0;
    v11 = (*a2 != 0) | (unint64_t)(v16 << 32);
  }
  v18 = v13 * v12;
  v19 = (a7 - 1) | ((unint64_t)(a7 - 1) >> 1) | (((a7 - 1) | ((unint64_t)(a7 - 1) >> 1)) >> 2);
  v20 = v19 | (v19 >> 4) | ((v19 | (v19 >> 4)) >> 8);
  v21 = v20 | (v20 >> 16) | ((v20 | (v20 >> 16)) >> 32);
  if (v21 + 1 > 8)
    v22 = v21 + 1;
  else
    v22 = 8;
  sub_2399168C0((_QWORD *)a1, v18, v22);
  v23 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 32) = a2[2];
  *(_QWORD *)(a1 + 24) = v23;
  *(_QWORD *)(a1 + 36) = v11;
  *(_DWORD *)(a1 + 44) = v12;
  if (*(_QWORD *)(a1 + 8) && a6)
  {
    v24 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 24))
      v25 = *(_DWORD *)(a1 + 28) == 0;
    else
      v25 = 1;
    v26 = v25 || v24 == 0;
    v27 = v26;
    v28 = *(_QWORD *)(a1 + 24);
    if (v26)
    {
      v28 = 0;
      v24 = 0;
    }
    v32[0] = *(_QWORD *)(a1 + 8);
    v32[1] = v28;
    v33 = v24;
    v34 = v11;
    v35 = v12;
    if (v24 * v12 == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v36[0] = v32;
    v36[1] = a5;
    if ((_DWORD)v11 == 1)
    {
      sub_23978E780(v36);
    }
    else
    {
      v37 = a5;
      v25 = (_DWORD)v28 == 0;
      v29 = HIDWORD(v28);
      if (v25 || v29 == 0)
        v27 = 1;
      if ((v27 & 1) == 0)
        sub_23984B18C(&v37, (uint64_t)v32);
    }
  }
  return a1;
}

void sub_23984B178(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

_BYTE **sub_23984B18C(_BYTE **result, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  BOOL v5;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _BYTE *v16;
  int v17;
  _BYTE *v18;
  int v19;
  int v20;
  _BYTE *v21;
  int i;
  int v23;
  _BYTE *v24;
  int j;
  int v26;
  _BYTE *v27;

  v2 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v2 - 1;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 20);
    v10 = *(unsigned int *)(a2 + 24);
    v11 = *(_BYTE **)a2;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a2 + 28);
      if (v8)
      {
        v14 = 0;
        if (v7)
        {
          do
          {
            v15 = 0;
            v16 = v11;
            do
            {
              v17 = v7;
              v18 = v16;
              do
              {
                *v18 = **result;
                v18 += v9;
                --v17;
              }
              while (v17);
              *v18 = **result;
              v16 += v10;
              ++v15;
            }
            while (v15 != v8);
            v19 = v7;
            do
            {
              *v16 = **result;
              v16 += v9;
              --v19;
            }
            while (v19);
            *v16 = **result;
            v11 += v13;
            ++v14;
          }
          while (v14 != v12);
        }
        else
        {
          do
          {
            v20 = v8;
            v21 = v11;
            do
            {
              *v21 = **result;
              v21 += v10;
              --v20;
            }
            while (v20);
            *v21 = **result;
            v11 += v13;
            ++v14;
          }
          while (v14 != v12);
        }
      }
      else if (v7)
      {
        for (i = 0; i != v12; ++i)
        {
          v23 = v7;
          v24 = v11;
          do
          {
            *v24 = **result;
            v24 += v9;
            --v23;
          }
          while (v23);
          *v24 = **result;
          v11 += v13;
        }
      }
      else
      {
        do
        {
          *v11 = **result;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    if (v8)
    {
      if (v7)
      {
        for (j = 0; j != v8; ++j)
        {
          v26 = v7;
          v27 = v11;
          do
          {
            *v27 = **result;
            v27 += v9;
            --v26;
          }
          while (v26);
          *v27 = **result;
          v11 += v10;
        }
      }
      else
      {
        do
        {
          *v11 = **result;
          v11 += v10;
          --v8;
        }
        while (v8);
      }
    }
    for (; v7; --v7)
    {
      *v11 = **result;
      v11 += v9;
    }
    *v11 = **result;
  }
  return result;
}

uint64_t sub_23984B37C(uint64_t a1, uint64_t a2)
{
  size_t v4;
  __int128 v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  int v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v13[2];
  int v14;
  uint64_t v15;
  int v16;

  v4 = sub_2399169B0(a2);
  sub_2399168C0((_QWORD *)a1, v4, *(_QWORD *)(a2 + 16));
  v5 = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 36);
  v7 = *(_DWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 24))
    v8 = *(_DWORD *)(a2 + 28) == 0;
  else
    v8 = 1;
  v9 = *(_DWORD *)(a2 + 44);
  v10 = v8 || v7 == 0;
  v11 = *(_QWORD *)(a2 + 24);
  if (v10)
  {
    v11 = 0;
    v7 = 0;
  }
  v13[0] = *(_QWORD *)(a2 + 8);
  v13[1] = v11;
  v14 = v7;
  v15 = v6;
  v16 = v9;
  if (v7 * v9 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23984B464(a1, v13);
  return a1;
}

void sub_23984B450(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_23984B464(uint64_t a1, _DWORD *a2)
{
  BOOL v2;
  uint64_t v4;
  int v5;
  BOOL v6;
  int v7;
  BOOL v8;
  uint64_t v9;
  _QWORD v10[2];
  int v11;
  uint64_t v12;
  int v13;
  _QWORD v14[2];

  if (a2[2])
    v2 = a2[3] == 0;
  else
    v2 = 1;
  if (!v2 && a2[4] != 0)
  {
    v4 = *(_QWORD *)(a1 + 36);
    v5 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 24))
      v6 = *(_DWORD *)(a1 + 28) == 0;
    else
      v6 = 1;
    v7 = *(_DWORD *)(a1 + 44);
    v8 = v6 || v5 == 0;
    v9 = *(_QWORD *)(a1 + 24);
    if (v8)
    {
      v9 = 0;
      v5 = 0;
    }
    v10[0] = *(_QWORD *)(a1 + 8);
    v10[1] = v9;
    v11 = v5;
    v12 = v4;
    v13 = v7;
    if (v5 * v7 == -1)
      sub_239EBFBC4(a1, (uint64_t)a2);
    v14[0] = a2;
    v14[1] = v10;
    sub_23984B4F0((uint64_t)v14);
  }
}

void sub_23984B4F0(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  int v6;
  unsigned int v7;
  BOOL v8;
  size_t v10;
  char v11;

  v1 = *(_DWORD **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v6 = v1[6];
    if (v6 == *(_DWORD *)(v2 + 24))
    {
      v7 = v1[2];
      if (v6 == v7)
      {
        sub_23984B59C((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = v1[2];
    }
    v10 = v7;
    if (v7)
      v8 = v1[3] == 0;
    else
      v8 = 1;
    if (!v8 && v1[4] != 0)
      sub_23984B690(&v10, (uint64_t)v1, v2);
  }
  else
  {
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
      sub_23984B77C((uint64_t)&v11, (uint64_t)v1, v2);
  }
}

unsigned int *sub_23984B59C(unsigned int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  size_t v6;
  char *v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  size_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _OWORD v25[2];

  v2 = *(_QWORD *)result;
  v1 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 28);
  v4 = *(unsigned int *)(v1 + 28);
  v5 = *(_DWORD *)(*(_QWORD *)result + 12);
  if ((_DWORD)v3 == (_DWORD)v4 && (_DWORD)v3 == *(_DWORD *)(v2 + 24) * v5)
  {
    v6 = (v5 * *(_DWORD *)(v2 + 8) * *(_DWORD *)(v2 + 16));
    v7 = *(char **)v2;
    if ((_DWORD)v6)
      v8 = v7 == 0;
    else
      v8 = 0;
    if (v8)
      sub_239EBF50C((uint64_t)result, (uint64_t)v7);
    if ((_DWORD)v6)
      return (unsigned int *)memmove(*(void **)v1, v7, v6);
  }
  else
  {
    v9 = *(_DWORD *)(v2 + 8);
    v17 = (v5 * v9);
    v10 = *(_DWORD *)(v2 + 16);
    if (v9)
      v11 = v5 == 0;
    else
      v11 = 1;
    if (!v11 && v10 != 0)
    {
      v19 = v9 - 1;
      v13 = *(unsigned int *)(v2 + 24);
      v14 = *(unsigned int *)(v1 + 24);
      v20 = *(unsigned int *)(v2 + 20) | ((unint64_t)*(unsigned int *)(v1 + 20) << 32);
      v18 = 0;
      v21 = v5 - 1;
      v22 = v13 | (v14 << 32);
      v23 = v10 - 1;
      v24 = v3 | (v4 << 32);
      v15 = *(char **)v2;
      v16 = *(char **)v1;
      memset(v25, 0, sizeof(v25));
      return sub_239661ADC((unsigned int *)&v18, (char **)v25, &v17, v15, v16);
    }
  }
  return result;
}

size_t *sub_23984B690(size_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  size_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  _OWORD v21[2];

  v4 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = result;
    v15 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 24);
    v10 = *(unsigned int *)(a3 + 24);
    v16 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v14 = 0;
    v17 = v3 - 1;
    v18 = v9 | (v10 << 32);
    v20 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v11 = *(char **)a2;
    v12 = *(char **)a3;
    memset(v21, 0, sizeof(v21));
    v19 = v5 - 1;
    if (v5 != 1)
    {
      v13 = 0;
      do
      {
        sub_239661ED4(&v14, (uint64_t)v21, v8, v11, v12);
        v11 += v20;
        v12 += HIDWORD(v20);
        ++v13;
      }
      while (v13 < v19);
    }
    return (size_t *)sub_239661ED4(&v14, (uint64_t)v21, v8, v11, v12);
  }
  return result;
}

void sub_23984B77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  _BYTE *v21;
  _BYTE *v22;
  int v23;
  _BYTE *v24;
  _BYTE *v25;
  int v26;
  int v27;
  _BYTE *v28;
  _BYTE *v29;
  int i;
  int v31;
  _BYTE *v32;
  _BYTE *v33;
  int j;
  int v35;
  _BYTE *v36;
  _BYTE *v37;

  v3 = *(_DWORD *)(a2 + 8);
  v4 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v3)
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = v3 - 1;
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 20);
    v11 = *(unsigned int *)(a2 + 24);
    v12 = *(unsigned int *)(a3 + 20);
    v13 = *(unsigned int *)(a3 + 24);
    v14 = *(_BYTE **)a2;
    v15 = *(_BYTE **)a3;
    v16 = v5 - 1;
    if (v16)
    {
      v17 = *(unsigned int *)(a3 + 28);
      v18 = *(unsigned int *)(a2 + 28);
      if (v9)
      {
        v19 = 0;
        if (v8)
        {
          do
          {
            v20 = 0;
            v21 = v14;
            v22 = v15;
            do
            {
              v23 = v8;
              v24 = v21;
              v25 = v22;
              do
              {
                *v25 = *v24;
                v24 += v10;
                v25 += v12;
                --v23;
              }
              while (v23);
              *v25 = *v24;
              v21 += v11;
              v22 += v13;
              ++v20;
            }
            while (v20 != v9);
            v26 = v8;
            do
            {
              *v22 = *v21;
              v21 += v10;
              v22 += v12;
              --v26;
            }
            while (v26);
            *v22 = *v21;
            v14 += v18;
            v15 += v17;
            ++v19;
          }
          while (v19 != v16);
        }
        else
        {
          do
          {
            v27 = v9;
            v28 = v14;
            v29 = v15;
            do
            {
              *v29 = *v28;
              v28 += v11;
              v29 += v13;
              --v27;
            }
            while (v27);
            *v29 = *v28;
            v14 += v18;
            v15 += v17;
            ++v19;
          }
          while (v19 != v16);
        }
      }
      else if (v8)
      {
        for (i = 0; i != v16; ++i)
        {
          v31 = v8;
          v32 = v14;
          v33 = v15;
          do
          {
            *v33 = *v32;
            v32 += v10;
            v33 += v12;
            --v31;
          }
          while (v31);
          *v33 = *v32;
          v14 += v18;
          v15 += v17;
        }
      }
      else
      {
        do
        {
          *v15 = *v14;
          v14 += v18;
          v15 += v17;
          --v16;
        }
        while (v16);
      }
    }
    if (v9)
    {
      if (v8)
      {
        for (j = 0; j != v9; ++j)
        {
          v35 = v8;
          v36 = v14;
          v37 = v15;
          do
          {
            *v37 = *v36;
            v36 += v10;
            v37 += v12;
            --v35;
          }
          while (v35);
          *v37 = *v36;
          v14 += v11;
          v15 += v13;
        }
      }
      else
      {
        do
        {
          *v15 = *v14;
          v14 += v11;
          v15 += v13;
          --v9;
        }
        while (v9);
      }
    }
    for (; v8; --v8)
    {
      *v15 = *v14;
      v14 += v10;
      v15 += v12;
    }
    *v15 = *v14;
  }
}

uint64_t sub_23984B990(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v6 = a2;
    *((_QWORD *)&v6 + 1) = a1;
    sub_23984BA9C((unsigned int *)&v6);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v6 = *a2;
    v7 = v4;
    v8 = a2[2];
    v9 = *((_QWORD *)a2 + 6);
    sub_23984B37C((uint64_t)v10, (uint64_t)a2 + 56);
    v5 = v7;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    sub_23991693C((_QWORD *)(a1 + 56), v10);
    sub_239916980((uint64_t)v10);
    return a1;
  }
}

void sub_23984BA88(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

unsigned int *sub_23984BA9C(unsigned int *result)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  unsigned int *v18;
  _BYTE *v19;
  int v20;
  int v21;
  unsigned int v22;
  BOOL v23;
  size_t v25;

  v1 = *(_QWORD *)result;
  v2 = *((_QWORD *)result + 1);
  if (*(_DWORD *)(*(_QWORD *)result + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v21 = *(_DWORD *)(v1 + 16);
    if (v21 == *(_DWORD *)(v2 + 16))
    {
      v22 = *(_DWORD *)v1;
      if (v21 == *(_DWORD *)v1)
        return sub_23984BC24(result);
    }
    else
    {
      v22 = *(_DWORD *)v1;
    }
    v25 = v22;
    if (v22)
      v23 = *(_DWORD *)(v1 + 4) == 0;
    else
      v23 = 1;
    if (!v23 && *(_DWORD *)(v1 + 8) != 0)
      return (unsigned int *)sub_23984BD28(&v25, v1, v2);
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 4);
    v5 = *(_DWORD *)(v1 + 8);
    if (*(_DWORD *)v1)
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6 && v5 != 0)
    {
      v8 = v4 - 1;
      v9 = *(unsigned int *)(v1 + 16);
      v10 = *(unsigned int *)(v2 + 16);
      v11 = *(_BYTE **)(v1 + 64);
      v12 = *(_BYTE **)(v2 + 64);
      v13 = v5 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(v2 + 20);
        v15 = *(unsigned int *)(v1 + 20);
        if (v8)
        {
          v16 = 0;
          v17 = v11 + 1;
          result = (unsigned int *)(v12 + 1);
          do
          {
            v18 = result;
            v19 = v17;
            v20 = v8;
            do
            {
              *((_BYTE *)v18 - 1) = *(v19 - 1);
              *(_BYTE *)v18 = *v19;
              v19 += v9;
              v18 = (unsigned int *)((char *)v18 + v10);
              --v20;
            }
            while (v20);
            *((_BYTE *)v18 - 1) = *(v19 - 1);
            *(_BYTE *)v18 = *v19;
            v11 += v15;
            v12 += v14;
            ++v16;
            v17 += v15;
            result = (unsigned int *)((char *)result + v14);
          }
          while (v16 != v13);
        }
        else
        {
          do
          {
            *v12 = *v11;
            v12[1] = v11[1];
            v11 += v15;
            v12 += v14;
            --v13;
          }
          while (v13);
        }
      }
      for (; v8; --v8)
      {
        *v12 = *v11;
        v12[1] = v11[1];
        v11 += v9;
        v12 += v10;
      }
      *v12 = *v11;
      v12[1] = v11[1];
    }
  }
  return result;
}

unsigned int *sub_23984BC24(unsigned int *result)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  size_t v6;
  const void *v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  _OWORD v23[3];

  v2 = *(int **)result;
  v1 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 20);
  v4 = *(unsigned int *)(v1 + 20);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = v2[1];
    if ((_DWORD)v3 == v2[4] * v5)
    {
      v6 = (v5 * *v2 * v2[2]);
      v7 = (const void *)*((_QWORD *)v2 + 8);
      if ((_DWORD)v6)
        v8 = v7 == 0;
      else
        v8 = 0;
      if (v8)
        sub_239EBF50C((uint64_t)result, (uint64_t)v7);
      if ((_DWORD)v6)
        return (unsigned int *)memmove(*(void **)(v1 + 64), v7, v6);
      return result;
    }
  }
  else
  {
    v5 = v2[1];
  }
  v9 = *v2;
  v15 = (v5 * *v2);
  v10 = v2[2];
  if (v9)
    v11 = v5 == 0;
  else
    v11 = 1;
  if (!v11 && v10 != 0)
  {
    v16 = 0;
    v17 = v9 - 1;
    v18 = v2[3] | ((unint64_t)*(unsigned int *)(v1 + 12) << 32);
    v19 = v5 - 1;
    v20 = v2[4] | ((unint64_t)*(unsigned int *)(v1 + 16) << 32);
    v21 = v10 - 1;
    v22 = v3 | (v4 << 32);
    v13 = (char *)*((_QWORD *)v2 + 8);
    v14 = *(char **)(v1 + 64);
    memset(v23, 0, sizeof(v23));
    return sub_23978EBAC((unsigned int *)&v16, (uint64_t)v23, &v15, v13, v14);
  }
  return result;
}

size_t *sub_23984BD28(size_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  size_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  _OWORD v20[2];

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = result;
    v14 = *(_DWORD *)a2 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v15 = *(unsigned int *)(a2 + 12) | ((unint64_t)*(unsigned int *)(a3 + 12) << 32);
    v13 = 0;
    v16 = v3 - 1;
    v17 = v8 | (v9 << 32);
    v19 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v10 = *(char **)(a2 + 64);
    v11 = *(char **)(a3 + 64);
    memset(v20, 0, sizeof(v20));
    v18 = v4 - 1;
    if (v4 != 1)
    {
      v12 = 0;
      do
      {
        sub_23978ED84(&v13, (char **)v20, v7, v10, v11);
        v10 += v19;
        v11 += HIDWORD(v19);
        ++v12;
      }
      while (v12 < v18);
    }
    return (size_t *)sub_23978ED84(&v13, (char **)v20, v7, v10, v11);
  }
  return result;
}

__int128 *sub_23984BE14()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569332E8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569332E8))
    return &xmmword_2569332D0;
  v2 = sub_23984BEF0();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_2569332D0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569332E0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2569332D0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569332D0, &dword_23940C000);
  __cxa_guard_release(&qword_2569332E8);
  return &xmmword_2569332D0;
}

void sub_23984BED8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569332E8);
  _Unwind_Resume(a1);
}

std::string *sub_23984BEF0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933308);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933308))
    return &stru_2569332F0;
  sub_23984BFE0((uint64_t)__p);
  sub_23979809C((uint64_t)__p, &stru_2569332F0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569332F0, &dword_23940C000);
  __cxa_guard_release(&qword_256933308);
  return &stru_2569332F0;
}

void sub_23984BFA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933308);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933308);
  _Unwind_Resume(a1);
}

void sub_23984BFE0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933328);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933328))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Two8u>]", qword_256933310);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933310, &dword_23940C000);
    __cxa_guard_release(&qword_256933328);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933348);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933348))
  {
    v5 = sub_239423A18(qword_256933310, "<", 0);
    sub_239423914(qword_256933310, 0, v5, qword_256933330);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933330, &dword_23940C000);
    __cxa_guard_release(&qword_256933348);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933368);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933368))
  {
    sub_239A44118((std::string::size_type)qword_256933330, (std::string *)&xmmword_256933350);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933350, &dword_23940C000);
    __cxa_guard_release(&qword_256933368);
  }
  if (byte_256933367 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933350, *((unint64_t *)&xmmword_256933350 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933350;
    *(_QWORD *)(a1 + 16) = unk_256933360;
  }
}

void sub_23984C17C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933368);
  _Unwind_Resume(a1);
}

void sub_23984C194(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933348);
  _Unwind_Resume(a1);
}

void sub_23984C1AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933328);
  _Unwind_Resume(a1);
}

uint64_t sub_23984C1C4(uint64_t a1, unsigned int *a2, uint64_t *a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  unint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  size_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v30[2];
  int v31;
  uint64_t v32;
  int v33;
  _QWORD v34[2];

  if (a4)
  {
    v11 = *a3;
    v12 = *((_DWORD *)a3 + 2);
    v13 = a2[2];
  }
  else
  {
    v14 = *a2;
    v15 = a2[1];
    if (v15)
      v16 = v14;
    else
      v16 = 0;
    v17 = v15 * v14;
    v13 = a2[2];
    if (v13)
      v12 = v17;
    else
      v12 = 0;
    v11 = (*a2 != 0) | (unint64_t)(v16 << 32);
  }
  v18 = 2 * v13 * v12;
  v19 = (a7 - 1) | ((unint64_t)(a7 - 1) >> 1) | (((a7 - 1) | ((unint64_t)(a7 - 1) >> 1)) >> 2);
  v20 = v19 | (v19 >> 4) | ((v19 | (v19 >> 4)) >> 8);
  v21 = v20 | (v20 >> 16) | ((v20 | (v20 >> 16)) >> 32);
  if (v21 + 1 > 8)
    v22 = v21 + 1;
  else
    v22 = 8;
  sub_2399168C0((_QWORD *)a1, v18, v22);
  v24 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 32) = a2[2];
  *(_QWORD *)(a1 + 24) = v24;
  *(_QWORD *)(a1 + 36) = (2 * v11) & 0xFFFFFFFEFFFFFFFELL;
  *(_DWORD *)(a1 + 44) = 2 * v12;
  if (*(_QWORD *)(a1 + 8) && a6)
  {
    v25 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 24))
      v26 = *(_DWORD *)(a1 + 28) == 0;
    else
      v26 = 1;
    v27 = v26 || v25 == 0;
    v28 = *(_QWORD *)(a1 + 24);
    if (v27)
    {
      v28 = 0;
      v25 = 0;
    }
    v30[0] = *(_QWORD *)(a1 + 8);
    v30[1] = v28;
    v31 = v25;
    v32 = v11 & 0x7FFFFFFF7FFFFFFFLL;
    v33 = v12 & 0x7FFFFFFF;
    if (v25 * (v12 & 0x7FFFFFFF) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v34[0] = v30;
    v34[1] = a5;
    sub_23984C34C((uint64_t)v34, v23);
  }
  return a1;
}

void sub_23984C338(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

unsigned int *sub_23984C34C(uint64_t a1, uint64_t a2)
{
  unsigned int *result;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  unsigned int v10;
  _WORD *v11;
  _WORD *v12;
  _DWORD v13[7];
  char v14;

  result = *(unsigned int **)a1;
  v4 = result[5];
  if (v4 == 1)
  {
    if (result[6] == result[2])
      return sub_23984C400((unsigned int *)a1, a2);
    else
      return sub_23984C714(result, *(_QWORD *)(a1 + 8));
  }
  else
  {
    v12 = *(_WORD **)(a1 + 8);
    v6 = result[2];
    v5 = result[3];
    v7 = result[4];
    if (v6)
      v8 = v5 == 0;
    else
      v8 = 1;
    if (!v8 && v7 != 0)
    {
      v13[0] = 0;
      v13[1] = v6 - 1;
      v13[2] = v4;
      v13[3] = v5 - 1;
      v10 = result[7];
      v13[4] = result[6];
      v13[5] = v7 - 1;
      v13[6] = v10;
      v11 = *(_WORD **)result;
      v14 = 0;
      return sub_23984C7D0(v13, (uint64_t)&v14, &v12, v11);
    }
  }
  return result;
}

unsigned int *sub_23984C400(unsigned int *result, uint64_t a2)
{
  const __int16 *v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  BOOL v10;
  __int16 *v11;
  uint64_t v12;
  int16x8_t v13;
  int16x8_t *v14;
  uint64_t v15;
  int v16;
  int v17;
  BOOL v18;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];
  unsigned int v25[7];
  unint64_t v26[2];

  v3 = *(_QWORD *)result;
  v2 = (const __int16 *)*((_QWORD *)result + 1);
  v4 = *(_DWORD *)(*(_QWORD *)result + 12);
  v6 = *(_DWORD *)(*(_QWORD *)result + 24);
  v5 = *(_DWORD *)(*(_QWORD *)result + 28);
  if (v5 == v6 * v4)
  {
    v7 = (v4 * *(_DWORD *)(v3 + 8) * *(_DWORD *)(v3 + 16));
    v8 = *(_QWORD *)v3;
    if ((_DWORD)v7)
      v9 = v8 == 0;
    else
      v9 = 0;
    if (v9)
      sub_239EBF50C((uint64_t)result, a2);
    if ((_DWORD)v7)
    {
      if (v7 < 0x10
        || (v8 < (unint64_t)(v2 + 1) ? (v10 = v8 + 2 * v7 > (unint64_t)v2) : (v10 = 0), v10))
      {
        v11 = *(__int16 **)v3;
        v12 = v7;
      }
      else
      {
        v11 = (__int16 *)(v8 + 2 * (v7 & 0xFFFFFFF0));
        v12 = v7 & 0xF;
        v13 = vld1q_dup_s16(v2);
        v14 = (int16x8_t *)(v8 + 16);
        v15 = v7 & 0xFFFFFFF0;
        do
        {
          v14[-1] = v13;
          *v14 = v13;
          v14 += 2;
          v15 -= 16;
        }
        while (v15);
        if ((v7 & 0xFFFFFFF0) == v7)
          return result;
      }
      v21 = v12 + 1;
      do
      {
        *v11++ = *v2;
        --v21;
      }
      while (v21 > 1);
    }
  }
  else
  {
    v16 = *(_DWORD *)(v3 + 8);
    v22 = (v4 * v16);
    v24[0] = &v23;
    v24[1] = &v22;
    v24[2] = v2;
    v17 = *(_DWORD *)(v3 + 16);
    if (v16)
      v18 = v4 == 0;
    else
      v18 = 1;
    if (!v18 && v17 != 0)
    {
      v25[0] = 0;
      v25[1] = v16 - 1;
      v25[2] = *(_DWORD *)(v3 + 20);
      v25[3] = v4 - 1;
      v25[4] = v6;
      v25[5] = v17 - 1;
      v25[6] = v5;
      v20 = *(_QWORD *)v3;
      v26[0] = 0;
      v26[1] = 0;
      return sub_23984C53C(v25, v26, (uint64_t)v24, v20);
    }
  }
  return result;
}

unsigned int *sub_23984C53C(unsigned int *result, unint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  unsigned int v5;
  const __int16 *v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  __int16 *v10;
  int v11;
  __int16 *v12;
  uint64_t v13;
  int16x8_t v14;
  int16x8_t *v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  __int16 *v19;
  uint64_t v20;
  int16x8_t v21;
  int16x8_t *v22;
  unint64_t v23;
  unint64_t v24;

  v4 = result[2] | ((unint64_t)result[4] << 32);
  *a2 = a4;
  a2[1] = v4;
  v5 = result[5];
  v6 = *(const __int16 **)(a3 + 16);
  v7 = **(_QWORD **)(a3 + 8);
  if (v5)
  {
    if (v7 >= 1)
    {
      if ((unint64_t)v7 >= 0x10)
      {
        v11 = 0;
        while (a4)
        {
          if (a4 < (unint64_t)(v6 + 1))
          {
            v12 = (__int16 *)a4;
            v13 = v7;
            if ((unint64_t)v6 < a4 + 2 * v7)
              goto LABEL_22;
          }
          v12 = (__int16 *)(a4 + 2 * (v7 & 0xFFFFFFFFFFFFFFF0));
          v14 = vld1q_dup_s16(v6);
          v15 = (int16x8_t *)(a4 + 16);
          v16 = v7 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v15[-1] = v14;
            *v15 = v14;
            v15 += 2;
            v16 -= 16;
          }
          while (v16);
          v13 = v7 & 0xF;
          if (v7 != (v7 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_22:
            v17 = v13 + 1;
            do
            {
              *v12++ = *v6;
              --v17;
            }
            while (v17 > 1);
          }
          a4 += 2 * result[6];
          if (++v11 == v5)
            goto LABEL_26;
        }
      }
      else
      {
        v8 = 0;
        while (a4)
        {
          v9 = v7 + 1;
          v10 = (__int16 *)a4;
          do
          {
            *v10++ = *v6;
            --v9;
          }
          while (v9 > 1);
          a4 += 2 * result[6];
          if (++v8 == v5)
            goto LABEL_26;
        }
      }
      goto LABEL_43;
    }
    if (v7)
    {
      while (a4)
      {
        a4 += 2 * result[6];
        if (!--v5)
          goto LABEL_26;
      }
LABEL_43:
      sub_239EBF5BC(a2, (uint64_t)a2);
    }
    a4 += (2 * (v5 - 1) + 2) * result[6];
  }
LABEL_26:
  *a2 = a4;
  if (!a4 && v7)
    sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  if (v7 >= 1)
  {
    if ((unint64_t)v7 < 0x10
      || (a4 < (unint64_t)(v6 + 1) ? (v18 = (unint64_t)v6 >= a4 + 2 * v7) : (v18 = 1), !v18))
    {
      v19 = (__int16 *)a4;
      v20 = v7;
LABEL_40:
      v24 = v20 + 1;
      do
      {
        *v19++ = *v6;
        --v24;
      }
      while (v24 > 1);
      return result;
    }
    v19 = (__int16 *)(a4 + 2 * (v7 & 0xFFFFFFFFFFFFFFF0));
    v20 = v7 & 0xF;
    v21 = vld1q_dup_s16(v6);
    v22 = (int16x8_t *)(a4 + 16);
    v23 = v7 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      v22[-1] = v21;
      *v22 = v21;
      v22 += 2;
      v23 -= 16;
    }
    while (v23);
    if (v7 != (v7 & 0x7FFFFFFFFFFFFFF0))
      goto LABEL_40;
  }
  return result;
}

_DWORD *sub_23984C714(_DWORD *result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  int v7;
  unsigned int v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  _QWORD v13[3];
  _DWORD v14[5];
  unsigned int v15;
  unsigned int v16;
  _QWORD v17[2];

  v2 = result[2];
  v3 = result[3];
  v11 = v2;
  v13[0] = &v12;
  v13[1] = &v11;
  v13[2] = a2;
  v4 = result[4];
  if ((_DWORD)v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v14[0] = 0;
    v14[1] = v2 - 1;
    v7 = result[6];
    v14[2] = result[5];
    v14[3] = v3 - 1;
    v8 = result[7];
    v9 = *(_QWORD *)result;
    v17[0] = 0;
    v17[1] = 0;
    v14[4] = v7;
    v15 = v4 - 1;
    v16 = v8;
    if (v4 != 1)
    {
      v10 = 0;
      do
      {
        sub_23978FA58(v14, (uint64_t)v17, (uint64_t)v13, v9);
        v9 += 2 * v16;
        ++v10;
      }
      while (v10 < v15);
    }
    return sub_23978FA58(v14, (uint64_t)v17, (uint64_t)v13, v9);
  }
  return result;
}

_DWORD *sub_23984C7D0(_DWORD *result, uint64_t a2, _WORD **a3, _WORD *a4)
{
  int v4;
  int v5;
  int v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;
  int v21;
  _WORD *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _WORD *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _WORD *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _WORD *v37;
  int v38;

  v4 = result[5];
  v5 = result[3];
  if (!v4)
  {
    v6 = result[1];
    if (v5)
      goto LABEL_14;
LABEL_25:
    v22 = *a3;
    if (!v6)
      goto LABEL_35;
    goto LABEL_26;
  }
  v6 = result[1];
  v7 = *a3;
  v8 = result[6];
  if (v5)
  {
    v9 = result[4];
    if (!v6)
    {
      v35 = 2 * v8;
      v36 = 2 * v9;
      do
      {
        v37 = a4;
        v38 = v5;
        do
        {
          *v37 = *v7;
          v37 = (_WORD *)((char *)v37 + v36);
          --v38;
        }
        while (v38);
        *v37 = *v7;
        a4 = (_WORD *)((char *)a4 + v35);
        ++v6;
      }
      while (v6 != v4);
      v22 = *a3;
      v23 = result[4];
      do
      {
LABEL_34:
        *a4 = *v22;
        a4 += v23;
        --v5;
      }
      while (v5);
      goto LABEL_35;
    }
    v10 = 0;
    v11 = 2 * v8;
    v12 = v9;
    v13 = 2 * result[2];
    v14 = &a4[v12];
    do
    {
      v15 = 0;
      v16 = v14;
      v17 = a4;
      do
      {
        v18 = v16;
        v19 = v17;
        v20 = v6;
        do
        {
          *v19 = *v7;
          v19 = (_WORD *)((char *)v19 + v13);
          --v20;
        }
        while (v20);
        *v19 = *v7;
        v17 = (_WORD *)((char *)v17 + v12 * 2);
        ++v15;
        v16 = &v18[v12];
      }
      while (v15 != v5);
      v21 = v6;
      do
      {
        *v18 = *v7;
        v18 = (_WORD *)((char *)v18 + v13);
        --v21;
      }
      while (v21);
      *v18 = *v7;
      a4 = (_WORD *)((char *)a4 + v11);
      ++v10;
      v14 = (_WORD *)((char *)v14 + v11);
    }
    while (v10 != v4);
LABEL_14:
    v22 = *a3;
    v23 = result[4];
    if (v6)
    {
      v24 = 0;
      v25 = 2 * v23;
      v26 = 2 * result[2];
      do
      {
        v27 = a4;
        v28 = v6;
        do
        {
          *v27 = *v22;
          v27 = (_WORD *)((char *)v27 + v26);
          --v28;
        }
        while (v28);
        *v27 = *v22;
        a4 = (_WORD *)((char *)a4 + v25);
        ++v24;
      }
      while (v24 != v5);
LABEL_26:
      v34 = 2 * result[2];
      do
      {
        *a4 = *v22;
        a4 = (_WORD *)((char *)a4 + v34);
        --v6;
      }
      while (v6);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v6)
  {
    v29 = 0;
    v30 = 2 * v8;
    v31 = 2 * result[2];
    do
    {
      v32 = a4;
      v33 = v6;
      do
      {
        *v32 = *v7;
        v32 = (_WORD *)((char *)v32 + v31);
        --v33;
      }
      while (v33);
      *v32 = *v7;
      a4 = (_WORD *)((char *)a4 + v30);
      ++v29;
    }
    while (v29 != v4);
    goto LABEL_25;
  }
  do
  {
    *a4 = *v7;
    a4 += v8;
    --v4;
  }
  while (v4);
  v22 = *a3;
LABEL_35:
  *a4 = *v22;
  return result;
}

uint64_t sub_23984C9F0(uint64_t a1, uint64_t a2)
{
  size_t v4;
  __int128 v5;
  int v6;
  BOOL v7;
  int v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v13[2];
  int v14;
  uint64_t v15;
  int v16;

  v4 = sub_2399169B0(a2);
  sub_2399168C0((_QWORD *)a1, v4, *(_QWORD *)(a2 + 16));
  v5 = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  v6 = *(_DWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 24))
    v7 = *(_DWORD *)(a2 + 28) == 0;
  else
    v7 = 1;
  v8 = *(_DWORD *)(a2 + 44) >> 1;
  v9 = (*(_QWORD *)(a2 + 36) >> 1) & 0x7FFFFFFF7FFFFFFFLL;
  v10 = v7 || v6 == 0;
  v11 = *(_QWORD *)(a2 + 24);
  if (v10)
  {
    v11 = 0;
    v6 = 0;
  }
  v13[0] = *(_QWORD *)(a2 + 8);
  v13[1] = v11;
  v14 = v6;
  v15 = v9;
  v16 = v8;
  if (v6 * v8 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23984CAE4((unsigned int *)a1, v13);
  return a1;
}

void sub_23984CAD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

unsigned int *sub_23984CAE4(unsigned int *result, _DWORD *a2)
{
  BOOL v2;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _QWORD v10[2];
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  _QWORD v14[2];

  if (a2[2])
    v2 = a2[3] == 0;
  else
    v2 = 1;
  if (!v2 && a2[4] != 0)
  {
    v4 = result[8];
    if (result[6])
      v5 = result[7] == 0;
    else
      v5 = 1;
    v6 = result[11] >> 1;
    v7 = (*(_QWORD *)(result + 9) >> 1) & 0x7FFFFFFF7FFFFFFFLL;
    v8 = v5 || v4 == 0;
    v9 = *((_QWORD *)result + 3);
    if (v8)
    {
      v9 = 0;
      v4 = 0;
    }
    v10[0] = *((_QWORD *)result + 1);
    v10[1] = v9;
    v11 = v4;
    v12 = v7;
    v13 = v6;
    if (v4 * v6 == -1)
      sub_239EBFBC4((uint64_t)result, (uint64_t)a2);
    v14[0] = a2;
    v14[1] = v10;
    return sub_23984CB7C((unsigned int *)v14);
  }
  return result;
}

unsigned int *sub_23984CB7C(unsigned int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v6;
  int v7;
  int v8;
  BOOL v9;
  _WORD *v11;
  _WORD *v12;
  int v13;
  unsigned int v14;
  BOOL v15;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  char v25;

  v1 = *(_QWORD *)result;
  v2 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 20);
  v4 = *(unsigned int *)(v2 + 20);
  if ((_DWORD)v3 == 1 && (_DWORD)v4 == 1)
  {
    v13 = *(_DWORD *)(v1 + 24);
    if (v13 == *(_DWORD *)(v2 + 24))
    {
      v14 = *(_DWORD *)(v1 + 8);
      if (v13 == v14)
        return sub_23984CC80(result);
    }
    else
    {
      v14 = *(_DWORD *)(v1 + 8);
    }
    v18 = v14;
    if (v14)
      v15 = *(_DWORD *)(v1 + 12) == 0;
    else
      v15 = 1;
    if (!v15 && *(_DWORD *)(v1 + 16) != 0)
      return (unsigned int *)sub_23984CE64(&v18, v1, v2);
  }
  else
  {
    v7 = *(_DWORD *)(v1 + 8);
    v6 = *(_DWORD *)(v1 + 12);
    v8 = *(_DWORD *)(v1 + 16);
    if (v7)
      v9 = v6 == 0;
    else
      v9 = 1;
    if (!v9 && v8 != 0)
    {
      v18 = 0;
      v19 = v7 - 1;
      v20 = v3 | (v4 << 32);
      v21 = v6 - 1;
      v22 = *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned int *)(v2 + 24) << 32);
      v23 = v8 - 1;
      v24 = *(unsigned int *)(v1 + 28) | ((unint64_t)*(unsigned int *)(v2 + 28) << 32);
      v11 = *(_WORD **)v1;
      v12 = *(_WORD **)v2;
      v25 = 0;
      return sub_23984CF50(&v18, (uint64_t)&v25, (uint64_t)&v17, v11, v12);
    }
  }
  return result;
}

unsigned int *sub_23984CC80(unsigned int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _OWORD v25[2];

  v2 = *(_QWORD *)result;
  v1 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 28);
  v4 = *(unsigned int *)(v1 + 28);
  v5 = *(_DWORD *)(*(_QWORD *)result + 12);
  if ((_DWORD)v3 == (_DWORD)v4 && (_DWORD)v3 == *(_DWORD *)(v2 + 24) * v5)
  {
    v6 = (v5 * *(_DWORD *)(v2 + 8) * *(_DWORD *)(v2 + 16));
    v7 = *(char **)v2;
    if ((_DWORD)v6)
      v8 = v7 == 0;
    else
      v8 = 0;
    if (v8)
      sub_239EBF50C((uint64_t)result, (uint64_t)v7);
    if ((_DWORD)v6)
      return (unsigned int *)memmove(*(void **)v1, v7, 2 * v6);
  }
  else
  {
    v9 = *(_DWORD *)(v2 + 8);
    v17 = (v5 * v9);
    v10 = *(_DWORD *)(v2 + 16);
    if (v9)
      v11 = v5 == 0;
    else
      v11 = 1;
    if (!v11 && v10 != 0)
    {
      v19 = v9 - 1;
      v13 = *(unsigned int *)(v2 + 24);
      v14 = *(unsigned int *)(v1 + 24);
      v20 = *(unsigned int *)(v2 + 20) | ((unint64_t)*(unsigned int *)(v1 + 20) << 32);
      v18 = 0;
      v21 = v5 - 1;
      v22 = v13 | (v14 << 32);
      v23 = v10 - 1;
      v24 = v3 | (v4 << 32);
      v15 = *(char **)v2;
      v16 = *(char **)v1;
      memset(v25, 0, sizeof(v25));
      return sub_23984CD78((unsigned int *)&v18, (char **)v25, &v17, v15, v16);
    }
  }
  return result;
}

unsigned int *sub_23984CD78(unsigned int *result, char **a2, uint64_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int i;
  uint64_t v14;
  uint64_t v15;

  v5 = __dst;
  v6 = __src;
  v9 = result[3] | ((unint64_t)result[6] << 32);
  v10 = result[4] | ((unint64_t)result[7] << 32);
  *a2 = __src;
  a2[1] = (char *)v9;
  a2[2] = __dst;
  a2[3] = (char *)v10;
  v11 = result[8];
  if (v11)
  {
    v12 = result;
    for (i = 0; i < v11; ++i)
    {
      *a2 = v6;
      a2[2] = v5;
      v14 = *a3;
      if (!v6 && v14)
        sub_239EBF50C((uint64_t)result, (uint64_t)a2);
      if (v14)
      {
        result = (unsigned int *)memmove(v5, v6, 2 * v14);
        v11 = v12[8];
      }
      v6 += 2 * v12[9];
      v5 += 2 * v12[10];
    }
  }
  *a2 = v6;
  a2[2] = v5;
  v15 = *a3;
  if (!v6 && v15)
    sub_239EBF50C((uint64_t)result, (uint64_t)a2);
  if (v15)
    return (unsigned int *)memmove(v5, v6, 2 * v15);
  return result;
}

uint64_t *sub_23984CE64(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  _OWORD v21[2];

  v4 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = result;
    v15 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 24);
    v10 = *(unsigned int *)(a3 + 24);
    v16 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v14 = 0;
    v17 = v3 - 1;
    v18 = v9 | (v10 << 32);
    v20 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v11 = *(char **)a2;
    v12 = *(char **)a3;
    memset(v21, 0, sizeof(v21));
    v19 = v5 - 1;
    if (v5 != 1)
    {
      v13 = 0;
      do
      {
        sub_23978FD08(&v14, (uint64_t)v21, v8, v11, v12);
        v11 += 2 * v20;
        v12 += 2 * HIDWORD(v20);
        ++v13;
      }
      while (v13 < v19);
    }
    return (uint64_t *)sub_23978FD08(&v14, (uint64_t)v21, v8, v11, v12);
  }
  return result;
}

_DWORD *sub_23984CF50(_DWORD *result, uint64_t a2, uint64_t a3, _WORD *a4, _WORD *a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _WORD *v19;
  _WORD *v20;
  int v21;
  _WORD *v22;
  _WORD *v23;
  _WORD *v24;
  _WORD *v25;
  _WORD *v26;
  _WORD *v27;
  _WORD *v28;
  _WORD *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _WORD *v39;
  _WORD *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _WORD *v47;
  _WORD *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _WORD *v56;
  _WORD *v57;
  int v58;

  v5 = result[8];
  v6 = result[5];
  if (v5)
  {
    v7 = result[2];
    v8 = result[9];
    v9 = result[10];
    if (v6)
    {
      v10 = result[6];
      v11 = result[7];
      if (!v7)
      {
        v52 = 2 * v8;
        v53 = 2 * v10;
        v54 = 2 * v9;
        v55 = 2 * v11;
        do
        {
          v56 = a5;
          v57 = a4;
          v58 = v6;
          do
          {
            *v56 = *v57;
            v57 = (_WORD *)((char *)v57 + v53);
            v56 = (_WORD *)((char *)v56 + v55);
            --v58;
          }
          while (v58);
          *v56 = *v57;
          a4 = (_WORD *)((char *)a4 + v52);
          a5 = (_WORD *)((char *)a5 + v54);
          ++v7;
        }
        while (v7 != v5);
        v32 = result[6];
        v33 = result[7];
        goto LABEL_34;
      }
      v12 = 0;
      v13 = 2 * v8;
      v14 = v10;
      v15 = 2 * result[3];
      v16 = 2 * v9;
      v17 = v11;
      v18 = 2 * result[4];
      v19 = &a4[v14];
      v20 = &a5[v17];
      do
      {
        v21 = 0;
        v22 = v20;
        v23 = v19;
        v24 = a5;
        v25 = a4;
        do
        {
          v26 = v23;
          v27 = v22;
          v28 = v24;
          v29 = v25;
          v30 = v7;
          do
          {
            *v28 = *v29;
            v29 = (_WORD *)((char *)v29 + v15);
            v28 = (_WORD *)((char *)v28 + v18);
            --v30;
          }
          while (v30);
          *v28 = *v29;
          v25 = (_WORD *)((char *)v25 + v14 * 2);
          v24 = (_WORD *)((char *)v24 + v17 * 2);
          ++v21;
          v23 = &v26[v14];
          v22 = &v27[v17];
        }
        while (v21 != v6);
        v31 = v7;
        do
        {
          *v27 = *v26;
          v26 = (_WORD *)((char *)v26 + v15);
          v27 = (_WORD *)((char *)v27 + v18);
          --v31;
        }
        while (v31);
        *v27 = *v26;
        a4 = (_WORD *)((char *)a4 + v13);
        a5 = (_WORD *)((char *)a5 + v16);
        ++v12;
        v19 = (_WORD *)((char *)v19 + v13);
        v20 = (_WORD *)((char *)v20 + v16);
      }
      while (v12 != v5);
LABEL_14:
      v32 = result[6];
      v33 = result[7];
      if (v7)
      {
        v34 = 0;
        v35 = 2 * v32;
        v36 = 2 * result[3];
        v37 = 2 * v33;
        v38 = 2 * result[4];
        do
        {
          v39 = a5;
          v40 = a4;
          v41 = v7;
          do
          {
            *v39 = *v40;
            v40 = (_WORD *)((char *)v40 + v36);
            v39 = (_WORD *)((char *)v39 + v38);
            --v41;
          }
          while (v41);
          *v39 = *v40;
          a4 = (_WORD *)((char *)a4 + v35);
          a5 = (_WORD *)((char *)a5 + v37);
          ++v34;
        }
        while (v34 != v6);
        goto LABEL_25;
      }
      do
      {
LABEL_34:
        *a5 = *a4;
        a4 += v32;
        a5 += v33;
        --v6;
      }
      while (v6);
      goto LABEL_37;
    }
    if (!v7)
    {
      do
      {
        *a5 = *a4;
        a4 += v8;
        a5 += v9;
        --v5;
      }
      while (v5);
      goto LABEL_37;
    }
    v42 = 0;
    v43 = 2 * v8;
    v44 = 2 * result[3];
    v45 = 2 * v9;
    v46 = 2 * result[4];
    do
    {
      v47 = a5;
      v48 = a4;
      v49 = v7;
      do
      {
        *v47 = *v48;
        v48 = (_WORD *)((char *)v48 + v44);
        v47 = (_WORD *)((char *)v47 + v46);
        --v49;
      }
      while (v49);
      *v47 = *v48;
      a4 = (_WORD *)((char *)a4 + v43);
      a5 = (_WORD *)((char *)a5 + v45);
      ++v42;
    }
    while (v42 != v5);
  }
  else
  {
    v7 = result[2];
    if (v6)
      goto LABEL_14;
  }
LABEL_25:
  if (v7)
  {
    v50 = 2 * result[3];
    v51 = 2 * result[4];
    do
    {
      *a5 = *a4;
      a4 = (_WORD *)((char *)a4 + v50);
      a5 = (_WORD *)((char *)a5 + v51);
      --v7;
    }
    while (v7);
  }
LABEL_37:
  *a5 = *a4;
  return result;
}

uint64_t sub_23984D1F4(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v6 = a2;
    *((_QWORD *)&v6 + 1) = a1;
    sub_23984D300((uint64_t *)&v6);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v6 = *a2;
    v7 = v4;
    v8 = a2[2];
    v9 = *((_QWORD *)a2 + 6);
    sub_23984C9F0((uint64_t)v10, (uint64_t)a2 + 56);
    v5 = v7;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    sub_23991693C((_QWORD *)(a1 + 56), v10);
    sub_239916980((uint64_t)v10);
    return a1;
  }
}

void sub_23984D2EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_23984D300(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  _WORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  _WORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  BOOL v24;
  uint64_t v26;

  v1 = *result;
  v2 = result[1];
  if (*(_DWORD *)(*result + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v22 = *(_DWORD *)(v1 + 16);
    if (v22 == *(_DWORD *)(v2 + 16))
    {
      v23 = *(_DWORD *)v1;
      if (v22 == *(_DWORD *)v1)
        return (uint64_t *)sub_23984D4B8((unsigned int *)result);
    }
    else
    {
      v23 = *(_DWORD *)v1;
    }
    v26 = v23;
    if (v23)
      v24 = *(_DWORD *)(v1 + 4) == 0;
    else
      v24 = 1;
    if (!v24 && *(_DWORD *)(v1 + 8) != 0)
      return sub_23984D5C0(&v26, v1, v2);
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 4);
    v5 = *(_DWORD *)(v1 + 8);
    if (*(_DWORD *)v1)
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6 && v5 != 0)
    {
      v8 = v4 - 1;
      v9 = *(unsigned int *)(v1 + 16);
      v10 = *(unsigned int *)(v2 + 16);
      v11 = *(_WORD **)(v1 + 64);
      v12 = *(_WORD **)(v2 + 64);
      v13 = v5 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(v2 + 20);
        v15 = *(unsigned int *)(v1 + 20);
        if (!v8)
        {
          do
          {
            *v12 = *v11;
            v12[1] = v11[1];
            v11 += v15;
            v12 += v14;
            --v13;
          }
          while (v13);
LABEL_35:
          *v12 = *v11;
          v12[1] = v11[1];
          return result;
        }
        v16 = 0;
        result = (uint64_t *)(2 * v9);
        v17 = v11 + 1;
        v18 = v12 + 1;
        do
        {
          v19 = v18;
          v20 = v17;
          v21 = v8;
          do
          {
            *(v19 - 1) = *(v20 - 1);
            *v19 = *v20;
            v20 = (_WORD *)((char *)result + (_QWORD)v20);
            v19 += v10;
            --v21;
          }
          while (v21);
          *(v19 - 1) = *(v20 - 1);
          *v19 = *v20;
          v11 += v15;
          v12 += v14;
          ++v16;
          v17 += v15;
          v18 += v14;
        }
        while (v16 != v13);
      }
      for (; v8; --v8)
      {
        *v12 = *v11;
        v12[1] = v11[1];
        v11 += v9;
        v12 += v10;
      }
      goto LABEL_35;
    }
  }
  return result;
}

unsigned int *sub_23984D4B8(unsigned int *result)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  const void *v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  _OWORD v23[3];

  v2 = *(int **)result;
  v1 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 20);
  v4 = *(unsigned int *)(v1 + 20);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = v2[1];
    if ((_DWORD)v3 == v2[4] * v5)
    {
      v6 = (v5 * *v2 * v2[2]);
      v7 = (const void *)*((_QWORD *)v2 + 8);
      if ((_DWORD)v6)
        v8 = v7 == 0;
      else
        v8 = 0;
      if (v8)
        sub_239EBF50C((uint64_t)result, (uint64_t)v7);
      if ((_DWORD)v6)
        return (unsigned int *)memmove(*(void **)(v1 + 64), v7, 2 * v6);
      return result;
    }
  }
  else
  {
    v5 = v2[1];
  }
  v9 = *v2;
  v15 = (v5 * *v2);
  v10 = v2[2];
  if (v9)
    v11 = v5 == 0;
  else
    v11 = 1;
  if (!v11 && v10 != 0)
  {
    v16 = 0;
    v17 = v9 - 1;
    v18 = v2[3] | ((unint64_t)*(unsigned int *)(v1 + 12) << 32);
    v19 = v5 - 1;
    v20 = v2[4] | ((unint64_t)*(unsigned int *)(v1 + 16) << 32);
    v21 = v10 - 1;
    v22 = v3 | (v4 << 32);
    v13 = (char *)*((_QWORD *)v2 + 8);
    v14 = *(char **)(v1 + 64);
    memset(v23, 0, sizeof(v23));
    return sub_2397905B0((unsigned int *)&v16, (uint64_t)v23, &v15, v13, v14);
  }
  return result;
}

uint64_t *sub_23984D5C0(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  _OWORD v20[2];

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = result;
    v14 = *(_DWORD *)a2 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v15 = *(unsigned int *)(a2 + 12) | ((unint64_t)*(unsigned int *)(a3 + 12) << 32);
    v13 = 0;
    v16 = v3 - 1;
    v17 = v8 | (v9 << 32);
    v19 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v10 = *(char **)(a2 + 64);
    v11 = *(char **)(a3 + 64);
    memset(v20, 0, sizeof(v20));
    v18 = v4 - 1;
    if (v4 != 1)
    {
      v12 = 0;
      do
      {
        sub_239790790(&v13, (char **)v20, v7, v10, v11);
        v10 += 2 * v19;
        v11 += 2 * HIDWORD(v19);
        ++v12;
      }
      while (v12 < v18);
    }
    return (uint64_t *)sub_239790790(&v13, (char **)v20, v7, v10, v11);
  }
  return result;
}

uint64_t *sub_23984D6AC(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  _WORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  _WORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  BOOL v24;
  uint64_t v26;

  v1 = *result;
  v2 = result[1];
  if (*(_DWORD *)(*result + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v22 = *(_DWORD *)(v1 + 24);
    if (v22 == *(_DWORD *)(v2 + 24))
    {
      v23 = *(_DWORD *)(v1 + 8);
      if (v22 == v23)
        return (uint64_t *)sub_2397904B4((unsigned int *)result);
    }
    else
    {
      v23 = *(_DWORD *)(v1 + 8);
    }
    v26 = v23;
    if (v23)
      v24 = *(_DWORD *)(v1 + 12) == 0;
    else
      v24 = 1;
    if (!v24 && *(_DWORD *)(v1 + 16) != 0)
      return sub_2397906A4(&v26, v1, v2);
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 12);
    v5 = *(_DWORD *)(v1 + 16);
    if (*(_DWORD *)(v1 + 8))
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6 && v5 != 0)
    {
      v8 = v4 - 1;
      v9 = *(unsigned int *)(v1 + 24);
      v10 = *(unsigned int *)(v2 + 24);
      v11 = *(_WORD **)v1;
      v12 = *(_WORD **)v2;
      v13 = v5 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(v2 + 28);
        v15 = *(unsigned int *)(v1 + 28);
        if (!v8)
        {
          do
          {
            *v12 = *v11;
            v12[1] = v11[1];
            v11 += v15;
            v12 += v14;
            --v13;
          }
          while (v13);
LABEL_35:
          *v12 = *v11;
          v12[1] = v11[1];
          return result;
        }
        v16 = 0;
        result = (uint64_t *)(2 * v9);
        v17 = v11 + 1;
        v18 = v12 + 1;
        do
        {
          v19 = v18;
          v20 = v17;
          v21 = v8;
          do
          {
            *(v19 - 1) = *(v20 - 1);
            *v19 = *v20;
            v20 = (_WORD *)((char *)result + (_QWORD)v20);
            v19 += v10;
            --v21;
          }
          while (v21);
          *(v19 - 1) = *(v20 - 1);
          *v19 = *v20;
          v11 += v15;
          v12 += v14;
          ++v16;
          v17 += v15;
          v18 += v14;
        }
        while (v16 != v13);
      }
      for (; v8; --v8)
      {
        *v12 = *v11;
        v12[1] = v11[1];
        v11 += v9;
        v12 += v10;
      }
      goto LABEL_35;
    }
  }
  return result;
}

__int128 *sub_23984D864()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569333A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569333A8))
    return &xmmword_256933390;
  v2 = sub_23984D940();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933390, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569333A0 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933390 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933390, &dword_23940C000);
  __cxa_guard_release(&qword_2569333A8);
  return &xmmword_256933390;
}

void sub_23984D928(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569333A8);
  _Unwind_Resume(a1);
}

std::string *sub_23984D940()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569333C8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569333C8))
    return &stru_2569333B0;
  sub_23984DBE0((uint64_t)__p);
  sub_23984DA30((uint64_t)__p, &stru_2569333B0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569333B0, &dword_23940C000);
  __cxa_guard_release(&qword_2569333C8);
  return &stru_2569333B0;
}

void sub_23984D9F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569333C8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569333C8);
  _Unwind_Resume(a1);
}

void sub_23984DA30(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932918);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932918))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two16u]", &xmmword_256932900);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932900, &dword_23940C000);
    __cxa_guard_release(&qword_256932918);
  }
  if (byte_256932917 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932900, *((unint64_t *)&xmmword_256932900 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932900;
    v13 = unk_256932910;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_23984DB98(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932918);
  _Unwind_Resume(a1);
}

void sub_23984DBB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_23984DBE0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569333E8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569333E8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Two16u>]", qword_2569333D0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569333D0, &dword_23940C000);
    __cxa_guard_release(&qword_2569333E8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933408);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933408))
  {
    v5 = sub_239423A18(qword_2569333D0, "<", 0);
    sub_239423914(qword_2569333D0, 0, v5, qword_2569333F0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569333F0, &dword_23940C000);
    __cxa_guard_release(&qword_256933408);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933428);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933428))
  {
    sub_239A44118((std::string::size_type)qword_2569333F0, (std::string *)&xmmword_256933410);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933410, &dword_23940C000);
    __cxa_guard_release(&qword_256933428);
  }
  if (byte_256933427 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933410, *((unint64_t *)&xmmword_256933410 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933410;
    *(_QWORD *)(a1 + 16) = unk_256933420;
  }
}

void sub_23984DD7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933428);
  _Unwind_Resume(a1);
}

void sub_23984DD94(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933408);
  _Unwind_Resume(a1);
}

void sub_23984DDAC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569333E8);
  _Unwind_Resume(a1);
}

uint64_t sub_23984DDC4(uint64_t a1, unsigned int *a2, uint64_t *a3, char a4, _WORD *a5, char a6, uint64_t a7)
{
  unint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  size_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  int v24;
  int v25;
  BOOL v26;
  BOOL v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  char v31;
  int v32;
  BOOL v33;
  BOOL v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  char v38;
  _WORD *v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  int v45;

  if (a4)
  {
    v11 = *a3;
    v12 = *((_DWORD *)a3 + 2);
    v13 = a2[2];
  }
  else
  {
    v14 = *a2;
    v15 = a2[1];
    if (v15)
      v16 = v14;
    else
      v16 = 0;
    v17 = v15 * v14;
    v13 = a2[2];
    if (v13)
      v12 = v17;
    else
      v12 = 0;
    v11 = (*a2 != 0) | (unint64_t)(v16 << 32);
  }
  v18 = 2 * v13 * v12;
  v19 = (a7 - 1) | ((unint64_t)(a7 - 1) >> 1) | (((a7 - 1) | ((unint64_t)(a7 - 1) >> 1)) >> 2);
  v20 = v19 | (v19 >> 4) | ((v19 | (v19 >> 4)) >> 8);
  v21 = v20 | (v20 >> 16) | ((v20 | (v20 >> 16)) >> 32);
  if (v21 + 1 > 8)
    v22 = v21 + 1;
  else
    v22 = 8;
  sub_2399168C0((_QWORD *)a1, v18, v22);
  v23 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 32) = a2[2];
  *(_QWORD *)(a1 + 24) = v23;
  *(_QWORD *)(a1 + 36) = (2 * v11) & 0xFFFFFFFEFFFFFFFELL;
  *(_DWORD *)(a1 + 44) = 2 * v12;
  if (*(_QWORD *)(a1 + 8))
  {
    v24 = v12 & 0x7FFFFFFF;
    if (a6)
    {
      v25 = *(_DWORD *)(a1 + 32);
      if (*(_DWORD *)(a1 + 24))
        v26 = *(_DWORD *)(a1 + 28) == 0;
      else
        v26 = 1;
      v27 = v26 || v25 == 0;
      v28 = v27;
      v29 = *(_QWORD *)(a1 + 24);
      if (v27)
      {
        v29 = 0;
        v25 = 0;
      }
      v41 = *(_QWORD *)(a1 + 8);
      v42 = v29;
      v43 = v25;
      v44 = v11 & 0x7FFFFFFF7FFFFFFFLL;
      v45 = v12 & 0x7FFFFFFF;
      if (v25 * v24 == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      v40 = a5;
      if ((_DWORD)v29)
        v30 = HIDWORD(v29) == 0;
      else
        v30 = 1;
      if (v30)
        v31 = 1;
      else
        v31 = v28;
      if ((v31 & 1) == 0)
        sub_23984E030(&v40, (uint64_t)&v41);
    }
    else
    {
      v32 = *(_DWORD *)(a1 + 32);
      if (*(_DWORD *)(a1 + 24))
        v33 = *(_DWORD *)(a1 + 28) == 0;
      else
        v33 = 1;
      v34 = v33 || v32 == 0;
      v35 = v34;
      v36 = *(_QWORD *)(a1 + 24);
      if (v34)
      {
        v36 = 0;
        v32 = 0;
      }
      v41 = *(_QWORD *)(a1 + 8);
      v42 = v36;
      v43 = v32;
      v44 = v11 & 0x7FFFFFFF7FFFFFFFLL;
      v45 = v12 & 0x7FFFFFFF;
      if (v32 * v24 == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
      if ((_DWORD)v36)
        v37 = HIDWORD(v36) == 0;
      else
        v37 = 1;
      if (v37)
        v38 = 1;
      else
        v38 = v35;
      if ((v38 & 1) == 0)
        sub_23984E25C((uint64_t)&v40, (uint64_t)&v41);
    }
  }
  return a1;
}

void sub_23984DFE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2398289F8(v1);
  _Unwind_Resume(a1);
}

void sub_23984DFF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2398289F8(v1);
  _Unwind_Resume(a1);
}

void sub_23984E008(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2398289F8(v1);
  _Unwind_Resume(a1);
}

void sub_23984E01C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2398289F8(v1);
  _Unwind_Resume(a1);
}

_WORD **sub_23984E030(_WORD **result, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  BOOL v5;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _WORD *v18;
  int v19;
  _WORD *v20;
  _WORD *v21;
  _WORD *v22;
  _WORD *v23;
  int v24;
  int v25;
  int v26;
  _WORD *v27;
  int v28;
  uint64_t v29;
  _WORD *v30;
  int v31;
  int v32;
  uint64_t v33;
  _WORD *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v2 - 1;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 20);
    v10 = *(unsigned int *)(a2 + 24);
    v11 = *(_WORD **)a2;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a2 + 28);
      if (v8)
      {
        v14 = 0;
        v15 = 2 * v13;
        v16 = v10;
        if (v7)
        {
          v17 = 2 * v9;
          v18 = &v11[v16];
          do
          {
            v19 = 0;
            v20 = v18;
            v21 = v11;
            do
            {
              v22 = v20;
              v23 = v21;
              v24 = v7;
              do
              {
                *v23 = **result;
                v23 = (_WORD *)((char *)v23 + v17);
                --v24;
              }
              while (v24);
              *v23 = **result;
              v21 = (_WORD *)((char *)v21 + v16 * 2);
              ++v19;
              v20 = &v22[v16];
            }
            while (v19 != v8);
            v25 = v7;
            do
            {
              *v22 = **result;
              v22 = (_WORD *)((char *)v22 + v17);
              --v25;
            }
            while (v25);
            *v22 = **result;
            v11 = (_WORD *)((char *)v11 + v15);
            ++v14;
            v18 = (_WORD *)((char *)v18 + v15);
          }
          while (v14 != v12);
        }
        else
        {
          do
          {
            v26 = v8;
            v27 = v11;
            do
            {
              *v27 = **result;
              v27 = (_WORD *)((char *)v27 + v16 * 2);
              --v26;
            }
            while (v26);
            *v27 = **result;
            v11 = (_WORD *)((char *)v11 + v15);
            ++v14;
          }
          while (v14 != v12);
        }
      }
      else if (v7)
      {
        v28 = 0;
        v29 = 2 * v13;
        do
        {
          v30 = v11;
          v31 = v7;
          do
          {
            *v30 = **result;
            v30 += v9;
            --v31;
          }
          while (v31);
          *v30 = **result;
          v11 = (_WORD *)((char *)v11 + v29);
          ++v28;
        }
        while (v28 != v12);
      }
      else
      {
        do
        {
          *v11 = **result;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    if (v8)
    {
      if (v7)
      {
        v32 = 0;
        v33 = 2 * v10;
        do
        {
          v34 = v11;
          v35 = v7;
          do
          {
            *v34 = **result;
            v34 += v9;
            --v35;
          }
          while (v35);
          *v34 = **result;
          v11 = (_WORD *)((char *)v11 + v33);
          ++v32;
        }
        while (v32 != v8);
      }
      else
      {
        v36 = 2 * v10;
        do
        {
          *v11 = **result;
          v11 = (_WORD *)((char *)v11 + v36);
          --v8;
        }
        while (v8);
      }
    }
    if (v7)
    {
      v37 = 2 * v9;
      do
      {
        *v11 = **result;
        v11 = (_WORD *)((char *)v11 + v37);
        --v7;
      }
      while (v7);
    }
    *v11 = **result;
  }
  return result;
}

void sub_23984E25C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  BOOL v5;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _WORD *v18;
  int v19;
  _WORD *v20;
  _WORD *v21;
  _WORD *v22;
  _WORD *v23;
  int v24;
  int v25;
  int v26;
  _WORD *v27;
  int v28;
  uint64_t v29;
  _WORD *v30;
  int v31;
  int v32;
  uint64_t v33;
  _WORD *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v2 - 1;
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 20);
    v10 = *(unsigned int *)(a2 + 24);
    v11 = *(_WORD **)a2;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a2 + 28);
      if (v8)
      {
        v14 = 0;
        v15 = 2 * v13;
        v16 = v10;
        if (v7)
        {
          v17 = 2 * v9;
          v18 = &v11[v16];
          do
          {
            v19 = 0;
            v20 = v18;
            v21 = v11;
            do
            {
              v22 = v20;
              v23 = v21;
              v24 = v7;
              do
              {
                *v23 = 0;
                v23 = (_WORD *)((char *)v23 + v17);
                --v24;
              }
              while (v24);
              *v23 = 0;
              v21 = (_WORD *)((char *)v21 + v16 * 2);
              ++v19;
              v20 = &v22[v16];
            }
            while (v19 != v8);
            v25 = v7;
            do
            {
              *v22 = 0;
              v22 = (_WORD *)((char *)v22 + v17);
              --v25;
            }
            while (v25);
            *v22 = 0;
            v11 = (_WORD *)((char *)v11 + v15);
            ++v14;
            v18 = (_WORD *)((char *)v18 + v15);
          }
          while (v14 != v12);
        }
        else
        {
          do
          {
            v26 = v8;
            v27 = v11;
            do
            {
              *v27 = 0;
              v27 = (_WORD *)((char *)v27 + v16 * 2);
              --v26;
            }
            while (v26);
            *v27 = 0;
            v11 = (_WORD *)((char *)v11 + v15);
            ++v14;
          }
          while (v14 != v12);
        }
      }
      else if (v7)
      {
        v28 = 0;
        v29 = 2 * v13;
        do
        {
          v30 = v11;
          v31 = v7;
          do
          {
            *v30 = 0;
            v30 += v9;
            --v31;
          }
          while (v31);
          *v30 = 0;
          v11 = (_WORD *)((char *)v11 + v29);
          ++v28;
        }
        while (v28 != v12);
      }
      else
      {
        do
        {
          *v11 = 0;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    if (v8)
    {
      if (v7)
      {
        v32 = 0;
        v33 = 2 * v10;
        do
        {
          v34 = v11;
          v35 = v7;
          do
          {
            *v34 = 0;
            v34 += v9;
            --v35;
          }
          while (v35);
          *v34 = 0;
          v11 = (_WORD *)((char *)v11 + v33);
          ++v32;
        }
        while (v32 != v8);
      }
      else
      {
        v36 = 2 * v10;
        do
        {
          *v11 = 0;
          v11 = (_WORD *)((char *)v11 + v36);
          --v8;
        }
        while (v8);
      }
    }
    if (v7)
    {
      v37 = 2 * v9;
      do
      {
        *v11 = 0;
        v11 = (_WORD *)((char *)v11 + v37);
        --v7;
      }
      while (v7);
    }
    *v11 = 0;
  }
}

uint64_t sub_23984E418(uint64_t a1, uint64_t a2)
{
  size_t v4;
  __int128 v5;
  int v6;
  BOOL v7;
  int v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v13[2];
  int v14;
  uint64_t v15;
  int v16;

  v4 = sub_2399169B0(a2);
  sub_2399168C0((_QWORD *)a1, v4, *(_QWORD *)(a2 + 16));
  v5 = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  v6 = *(_DWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 24))
    v7 = *(_DWORD *)(a2 + 28) == 0;
  else
    v7 = 1;
  v8 = *(_DWORD *)(a2 + 44) >> 1;
  v9 = (*(_QWORD *)(a2 + 36) >> 1) & 0x7FFFFFFF7FFFFFFFLL;
  v10 = v7 || v6 == 0;
  v11 = *(_QWORD *)(a2 + 24);
  if (v10)
  {
    v11 = 0;
    v6 = 0;
  }
  v13[0] = *(_QWORD *)(a2 + 8);
  v13[1] = v11;
  v14 = v6;
  v15 = v9;
  v16 = v8;
  if (v6 * v8 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23984E50C(a1, v13);
  return a1;
}

void sub_23984E4F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_23984E50C(uint64_t a1, _DWORD *a2)
{
  BOOL v2;
  int v4;
  BOOL v5;
  int v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  char v10;
  _QWORD v11[2];
  int v12;
  uint64_t v13;
  int v14;

  if (a2[2])
    v2 = a2[3] == 0;
  else
    v2 = 1;
  if (!v2 && a2[4] != 0)
  {
    v4 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 24))
      v5 = *(_DWORD *)(a1 + 28) == 0;
    else
      v5 = 1;
    v6 = *(_DWORD *)(a1 + 44) >> 1;
    v7 = (*(_QWORD *)(a1 + 36) >> 1) & 0x7FFFFFFF7FFFFFFFLL;
    v8 = v5 || v4 == 0;
    v9 = *(_QWORD *)(a1 + 24);
    if (v8)
    {
      v9 = 0;
      v4 = 0;
    }
    v11[0] = *(_QWORD *)(a1 + 8);
    v11[1] = v9;
    v12 = v4;
    v13 = v7;
    v14 = v6;
    if (v4 * v6 == -1)
      sub_239EBFBC4(a1, (uint64_t)a2);
    sub_23984E5A0((uint64_t)&v10, (uint64_t)a2, (uint64_t)v11);
  }
}

void sub_23984E5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  _WORD *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _WORD *v25;
  _WORD *v26;
  uint64_t v27;
  int v28;
  _WORD *v29;
  _WORD *v30;
  _WORD *v31;
  _WORD *v32;
  _WORD *v33;
  _WORD *v34;
  _WORD *v35;
  _WORD *v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  _WORD *v41;
  _WORD *v42;
  int v43;
  int v44;
  _WORD *v45;
  _WORD *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _WORD *v50;
  _WORD *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v3 = *(_DWORD *)(a2 + 8);
  v4 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v3)
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = v3 - 1;
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 20);
    v11 = *(unsigned int *)(a2 + 24);
    v12 = *(unsigned int *)(a3 + 20);
    v13 = *(unsigned int *)(a3 + 24);
    v14 = *(_WORD **)a2;
    v15 = *(_WORD **)a3;
    v16 = v5 - 1;
    if (v16)
    {
      v17 = *(unsigned int *)(a3 + 28);
      v18 = *(unsigned int *)(a2 + 28);
      if (v9)
      {
        v19 = 0;
        v20 = 2 * v18;
        v21 = v11;
        if (v8)
        {
          v22 = 2 * v10;
          v23 = 2 * v17;
          v24 = v13;
          v25 = &v14[v21];
          v26 = &v15[v13];
          v27 = 2 * v12;
          do
          {
            v28 = 0;
            v29 = v26;
            v30 = v25;
            v31 = v15;
            v32 = v14;
            do
            {
              v33 = v30;
              v34 = v29;
              v35 = v31;
              v36 = v32;
              v37 = v8;
              do
              {
                *v35 = *v36;
                v36 = (_WORD *)((char *)v36 + v22);
                v35 = (_WORD *)((char *)v35 + v27);
                --v37;
              }
              while (v37);
              *v35 = *v36;
              v32 = (_WORD *)((char *)v32 + v21 * 2);
              v31 = (_WORD *)((char *)v31 + v24 * 2);
              ++v28;
              v30 = &v33[v21];
              v29 = &v34[v24];
            }
            while (v28 != v9);
            v38 = v8;
            do
            {
              *v34 = *v33;
              v33 = (_WORD *)((char *)v33 + v22);
              v34 = (_WORD *)((char *)v34 + v27);
              --v38;
            }
            while (v38);
            *v34 = *v33;
            v14 = (_WORD *)((char *)v14 + v20);
            v15 = (_WORD *)((char *)v15 + v23);
            ++v19;
            v25 = (_WORD *)((char *)v25 + v20);
            v26 = (_WORD *)((char *)v26 + v23);
          }
          while (v19 != v16);
        }
        else
        {
          do
          {
            v44 = v9;
            v45 = v15;
            v46 = v14;
            do
            {
              *v45 = *v46;
              v46 = (_WORD *)((char *)v46 + v21 * 2);
              v45 += v13;
              --v44;
            }
            while (v44);
            *v45 = *v46;
            v14 = (_WORD *)((char *)v14 + v20);
            v15 += v17;
            ++v19;
          }
          while (v19 != v16);
        }
      }
      else if (v8)
      {
        v39 = 0;
        v40 = 2 * v18;
        do
        {
          v41 = v15;
          v42 = v14;
          v43 = v8;
          do
          {
            *v41 = *v42;
            v42 += v10;
            v41 += v12;
            --v43;
          }
          while (v43);
          *v41 = *v42;
          v14 = (_WORD *)((char *)v14 + v40);
          v15 += v17;
          ++v39;
        }
        while (v39 != v16);
      }
      else
      {
        do
        {
          *v15 = *v14;
          v14 += v18;
          v15 += v17;
          --v16;
        }
        while (v16);
      }
    }
    if (v9)
    {
      if (v8)
      {
        v47 = 0;
        v48 = 2 * v11;
        v49 = 2 * v13;
        do
        {
          v50 = v15;
          v51 = v14;
          v52 = v8;
          do
          {
            *v50 = *v51;
            v51 += v10;
            v50 += v12;
            --v52;
          }
          while (v52);
          *v50 = *v51;
          v14 = (_WORD *)((char *)v14 + v48);
          v15 = (_WORD *)((char *)v15 + v49);
          ++v47;
        }
        while (v47 != v9);
      }
      else
      {
        v53 = 2 * v11;
        v54 = 2 * v13;
        do
        {
          *v15 = *v14;
          v14 = (_WORD *)((char *)v14 + v53);
          v15 = (_WORD *)((char *)v15 + v54);
          --v9;
        }
        while (v9);
      }
    }
    if (v8)
    {
      v55 = 2 * v10;
      v56 = 2 * v12;
      do
      {
        *v15 = *v14;
        v14 = (_WORD *)((char *)v14 + v55);
        v15 = (_WORD *)((char *)v15 + v56);
        --v8;
      }
      while (v8);
    }
    *v15 = *v14;
  }
}

uint64_t sub_23984E854(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  BOOL v6;
  BOOL v7;
  int v8;
  int v9;
  BOOL v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  __int128 v17;
  uint64_t v18;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v12 = a2;
    *((_QWORD *)&v12 + 1) = a1;
    sub_23984EA24((uint64_t *)&v12);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v12 = *a2;
    v13 = v4;
    v14 = a2[2];
    v15 = *((_QWORD *)a2 + 6);
    sub_23984E418((uint64_t)v16, (uint64_t)a2 + 56);
    v5 = v13;
    *(_OWORD *)a1 = v12;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v14;
    *(_QWORD *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 80) = v17;
    *(_QWORD *)(a1 + 96) = v18;
    if (*(_QWORD *)(a1 + 64))
    {
      v6 = !*(_DWORD *)(a1 + 88) || *(_DWORD *)(a1 + 84) == 0;
      v7 = v6 || *(_DWORD *)(a1 + 80) == 0;
      v8 = v7 ? 0 : *(_DWORD *)(a1 + 88);
      if (v8 * (*(_DWORD *)(a1 + 100) >> 1) == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
    }
    sub_23991693C((_QWORD *)(a1 + 56), v16);
    if (v16[1])
    {
      v9 = DWORD2(v17);
      if (DWORD2(v17))
        v10 = DWORD1(v17) == 0;
      else
        v10 = 1;
      if (v10 || (_DWORD)v17 == 0)
        v9 = 0;
      if (v9 * (HIDWORD(v18) >> 1) == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
    }
    sub_239916980((uint64_t)v16);
    return a1;
  }
}

void sub_23984EA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2398118C8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

__int16 sub_23984EA24@<H0>(uint64_t *a1@<X0>)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  _WORD *v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  _WORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  double v24;
  BOOL v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *a1;
  v2 = a1[1];
  if (*(_DWORD *)(*a1 + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v22 = *(_DWORD *)(v1 + 16);
    if (v22 == *(_DWORD *)(v2 + 16))
    {
      v23 = *(_DWORD *)v1;
      if (v22 == *(_DWORD *)v1)
      {
        v24 = sub_23984EBC4(a1, v1);
        return LOWORD(v24);
      }
    }
    else
    {
      v23 = *(_DWORD *)v1;
    }
    v30 = v23;
    if (v23)
      v25 = *(_DWORD *)(v1 + 4) == 0;
    else
      v25 = 1;
    if (!v25 && *(_DWORD *)(v1 + 8) != 0)
      v24 = sub_23984ED48(&v30, v1, v2);
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 4);
    v5 = *(_DWORD *)(v1 + 8);
    if (*(_DWORD *)v1)
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6 && v5 != 0)
    {
      v8 = v4 - 1;
      v9 = *(_WORD **)(v1 + 64);
      v10 = *(_WORD **)(v2 + 64);
      v11 = 2 * *(unsigned int *)(v1 + 16);
      v12 = 2 * *(unsigned int *)(v2 + 16);
      v13 = v5 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(v2 + 20);
        v15 = *(unsigned int *)(v1 + 20);
        if (v8)
        {
          v16 = 0;
          v17 = v9 + 1;
          v18 = v10 + 1;
          do
          {
            v19 = v18;
            v20 = v17;
            v21 = v8;
            do
            {
              *(v19 - 1) = *(v20 - 1);
              *v19 = *v20;
              v20 = (_WORD *)((char *)v20 + v11);
              v19 = (_WORD *)((char *)v19 + v12);
              --v21;
            }
            while (v21);
            *(v19 - 1) = *(v20 - 1);
            *v19 = *v20;
            v9 += v15;
            v10 += v14;
            ++v16;
            v17 += v15;
            v18 += v14;
          }
          while (v16 != v13);
        }
        else
        {
          v27 = 2 * v15;
          v28 = 2 * v14;
          do
          {
            *v10 = *v9;
            v10[1] = v9[1];
            v9 = (_WORD *)((char *)v9 + v27);
            v10 = (_WORD *)((char *)v10 + v28);
            --v13;
          }
          while (v13);
        }
      }
      for (; v8; --v8)
      {
        *v10 = *v9;
        v10[1] = v9[1];
        v9 = (_WORD *)((char *)v9 + v11);
        v10 = (_WORD *)((char *)v10 + v12);
      }
      *v10 = *v9;
      LOWORD(v24) = v9[1];
      v10[1] = LOWORD(v24);
    }
  }
  return LOWORD(v24);
}

double sub_23984EBC4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  _WORD *v10;
  unint64_t v11;
  __int16 *v12;
  unint64_t v13;
  unint64_t v14;
  _WORD *v15;
  __int128 *v16;
  _OWORD *v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  int v21;
  int v22;
  BOOL v23;
  uint64_t v25;
  uint64_t v26;
  __int16 *v27;
  __int16 v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  _OWORD v38[3];

  v3 = (int *)*a1;
  v2 = a1[1];
  v4 = *(unsigned int *)(*a1 + 20);
  v5 = *(unsigned int *)(v2 + 20);
  if ((_DWORD)v4 != (_DWORD)v5)
  {
    v6 = v3[1];
LABEL_15:
    v21 = *v3;
    v30 = (v6 * *v3);
    v22 = v3[2];
    if (v21)
      v23 = v6 == 0;
    else
      v23 = 1;
    if (!v23 && v22 != 0)
    {
      v31 = 0;
      v32 = v21 - 1;
      v33 = v3[3] | ((unint64_t)*(unsigned int *)(v2 + 12) << 32);
      v34 = v6 - 1;
      v35 = v3[4] | ((unint64_t)*(unsigned int *)(v2 + 16) << 32);
      v36 = v22 - 1;
      v37 = v4 | (v5 << 32);
      v25 = *((_QWORD *)v3 + 8);
      v26 = *(_QWORD *)(v2 + 64);
      memset(v38, 0, sizeof(v38));
      *(_QWORD *)&v19 = sub_239791CF0((unsigned int *)&v31, (uint64_t)v38, &v30, v25, v26);
    }
    return *(double *)&v19;
  }
  v6 = v3[1];
  if ((_DWORD)v4 != v3[4] * v6)
    goto LABEL_15;
  v7 = (v6 * *v3 * v3[2]);
  v8 = *((_QWORD *)v3 + 8);
  if ((_DWORD)v7)
    v9 = v8 == 0;
  else
    v9 = 0;
  if (v9)
    sub_239EBF50C((uint64_t)a1, a2);
  if ((_DWORD)v7)
  {
    v10 = *(_WORD **)(v2 + 64);
    v11 = (v7 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v11 < 0xF)
    {
      v12 = (__int16 *)v8;
    }
    else
    {
      v12 = (__int16 *)v8;
      if ((unint64_t)v10 - v8 >= 0x20)
      {
        v13 = v11 + 1;
        v14 = v13 & 0xFFFFFFFFFFFFFFF0;
        v15 = &v10[v14];
        v12 = (__int16 *)(v8 + v14 * 2);
        v16 = (__int128 *)(v8 + 16);
        v17 = v10 + 8;
        v18 = v13 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v19 = *(v16 - 1);
          v20 = *v16;
          *(v17 - 1) = v19;
          *v17 = v20;
          v16 += 2;
          v17 += 2;
          v18 -= 16;
        }
        while (v18);
        v10 = v15;
        if (v13 == (v13 & 0xFFFFFFFFFFFFFFF0))
          return *(double *)&v19;
      }
    }
    v27 = (__int16 *)(v8 + 2 * v7);
    do
    {
      v28 = *v12++;
      LOWORD(v19) = v28;
      *v10++ = v28;
    }
    while (v12 != v27);
  }
  return *(double *)&v19;
}

double sub_23984ED48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  double result;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  _OWORD v21[2];

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v15 = *(_DWORD *)a2 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v16 = *(unsigned int *)(a2 + 12) | ((unint64_t)*(unsigned int *)(a3 + 12) << 32);
    v14 = 0;
    v17 = v3 - 1;
    v18 = v8 | (v9 << 32);
    v20 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v10 = *(_QWORD *)(a2 + 64);
    v11 = *(_QWORD *)(a3 + 64);
    memset(v21, 0, sizeof(v21));
    v19 = v4 - 1;
    if (v4 != 1)
    {
      v12 = 0;
      do
      {
        sub_239791F70(&v14, v21, a1, v10, v11);
        v10 += 2 * v20;
        v11 += 2 * HIDWORD(v20);
        ++v12;
      }
      while (v12 < v19);
    }
    *(_QWORD *)&result = sub_239791F70(&v14, v21, a1, v10, v11);
  }
  return result;
}

__int128 *sub_23984EE34()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933468);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933468))
    return &xmmword_256933450;
  v2 = sub_23984EF10();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933450, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933460 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933450 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933450, &dword_23940C000);
  __cxa_guard_release(&qword_256933468);
  return &xmmword_256933450;
}

void sub_23984EEF8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933468);
  _Unwind_Resume(a1);
}

std::string *sub_23984EF10()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933488);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933488))
    return &stru_256933470;
  sub_23984F000((uint64_t)__p);
  sub_2397985FC((uint64_t)__p, &stru_256933470);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933470, &dword_23940C000);
  __cxa_guard_release(&qword_256933488);
  return &stru_256933470;
}

void sub_23984EFC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933488);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933488);
  _Unwind_Resume(a1);
}

void sub_23984F000(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569334A8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569334A8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Two16f>]", qword_256933490);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933490, &dword_23940C000);
    __cxa_guard_release(&qword_2569334A8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569334C8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569334C8))
  {
    v5 = sub_239423A18(qword_256933490, "<", 0);
    sub_239423914(qword_256933490, 0, v5, qword_2569334B0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569334B0, &dword_23940C000);
    __cxa_guard_release(&qword_2569334C8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569334E8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569334E8))
  {
    sub_239A44118((std::string::size_type)qword_2569334B0, (std::string *)&xmmword_2569334D0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569334D0, &dword_23940C000);
    __cxa_guard_release(&qword_2569334E8);
  }
  if (byte_2569334E7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_2569334D0, *((unint64_t *)&xmmword_2569334D0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2569334D0;
    *(_QWORD *)(a1 + 16) = unk_2569334E0;
  }
}

void sub_23984F19C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569334E8);
  _Unwind_Resume(a1);
}

void sub_23984F1B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569334C8);
  _Unwind_Resume(a1);
}

void sub_23984F1CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569334A8);
  _Unwind_Resume(a1);
}

uint64_t sub_23984F1E4(uint64_t a1, unsigned int *a2, uint64_t *a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  unint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  size_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v30[2];
  int v31;
  uint64_t v32;
  int v33;
  _QWORD v34[2];

  if (a4)
  {
    v11 = *a3;
    v12 = *((_DWORD *)a3 + 2);
    v13 = a2[2];
  }
  else
  {
    v14 = *a2;
    v15 = a2[1];
    if (v15)
      v16 = v14;
    else
      v16 = 0;
    v17 = v15 * v14;
    v13 = a2[2];
    if (v13)
      v12 = v17;
    else
      v12 = 0;
    v11 = (*a2 != 0) | (unint64_t)(v16 << 32);
  }
  v18 = 4 * v13 * v12;
  v19 = (a7 - 1) | ((unint64_t)(a7 - 1) >> 1) | (((a7 - 1) | ((unint64_t)(a7 - 1) >> 1)) >> 2);
  v20 = v19 | (v19 >> 4) | ((v19 | (v19 >> 4)) >> 8);
  v21 = v20 | (v20 >> 16) | ((v20 | (v20 >> 16)) >> 32);
  if (v21 + 1 > 8)
    v22 = v21 + 1;
  else
    v22 = 8;
  sub_2399168C0((_QWORD *)a1, v18, v22);
  v24 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 32) = a2[2];
  *(_QWORD *)(a1 + 24) = v24;
  *(_QWORD *)(a1 + 36) = (4 * v11) & 0xFFFFFFFCFFFFFFFCLL;
  *(_DWORD *)(a1 + 44) = 4 * v12;
  if (*(_QWORD *)(a1 + 8) && a6)
  {
    v25 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 24))
      v26 = *(_DWORD *)(a1 + 28) == 0;
    else
      v26 = 1;
    v27 = v26 || v25 == 0;
    v28 = *(_QWORD *)(a1 + 24);
    if (v27)
    {
      v28 = 0;
      v25 = 0;
    }
    v30[0] = *(_QWORD *)(a1 + 8);
    v30[1] = v28;
    v31 = v25;
    v32 = v11 & 0x3FFFFFFF3FFFFFFFLL;
    v33 = v12 & 0x3FFFFFFF;
    if (v25 * (v12 & 0x3FFFFFFF) == -1)
    {
      sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
      sub_239A4475C();
      abort();
    }
    v34[0] = v30;
    v34[1] = a5;
    sub_23984F36C((uint64_t)v34, v23);
  }
  return a1;
}

void sub_23984F358(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_23984F36C(uint64_t a1, uint64_t a2)
{
  _DWORD *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  BOOL v8;
  int v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD v13[7];
  char v14;

  v3 = *(_DWORD **)a1;
  v4 = v3[5];
  if (v4 == 1)
  {
    if (v3[6] == v3[2])
      sub_23984F420((unsigned int *)a1, a2);
    else
      sub_23984F55C(v3, *(_QWORD *)(a1 + 8));
  }
  else
  {
    v12 = *(_DWORD **)(a1 + 8);
    v6 = v3[2];
    v5 = v3[3];
    v7 = v3[4];
    if (v6)
      v8 = v5 == 0;
    else
      v8 = 1;
    if (!v8 && v7 != 0)
    {
      v13[0] = 0;
      v13[1] = v6 - 1;
      v13[2] = v4;
      v13[3] = v5 - 1;
      v10 = v3[7];
      v13[4] = v3[6];
      v13[5] = v7 - 1;
      v13[6] = v10;
      v11 = *(_DWORD **)v3;
      v14 = 0;
      sub_23948D2DC(v13, (uint64_t)&v14, &v12, v11);
    }
  }
}

unsigned int *sub_23984F420(unsigned int *result, uint64_t a2)
{
  const float *v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  BOOL v10;
  _DWORD *v11;
  uint64_t v12;
  float32x4_t v13;
  float32x4_t *v14;
  uint64_t v15;
  int v16;
  int v17;
  BOOL v18;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];
  unsigned int v25[7];
  unint64_t v26[2];

  v3 = *(_QWORD *)result;
  v2 = (const float *)*((_QWORD *)result + 1);
  v4 = *(_DWORD *)(*(_QWORD *)result + 12);
  v6 = *(_DWORD *)(*(_QWORD *)result + 24);
  v5 = *(_DWORD *)(*(_QWORD *)result + 28);
  if (v5 == v6 * v4)
  {
    v7 = (v4 * *(_DWORD *)(v3 + 8) * *(_DWORD *)(v3 + 16));
    v8 = *(_QWORD *)v3;
    if ((_DWORD)v7)
      v9 = v8 == 0;
    else
      v9 = 0;
    if (v9)
      sub_239EBF50C((uint64_t)result, a2);
    if ((_DWORD)v7)
    {
      if (v7 < 8
        || (v8 < (unint64_t)(v2 + 1) ? (v10 = v8 + 4 * v7 > (unint64_t)v2) : (v10 = 0), v10))
      {
        v11 = *(_DWORD **)v3;
        v12 = v7;
      }
      else
      {
        v11 = (_DWORD *)(v8 + 4 * (v7 & 0xFFFFFFF8));
        v12 = v7 & 7;
        v13 = vld1q_dup_f32(v2);
        v14 = (float32x4_t *)(v8 + 16);
        v15 = v7 & 0xFFFFFFF8;
        do
        {
          v14[-1] = v13;
          *v14 = v13;
          v14 += 2;
          v15 -= 8;
        }
        while (v15);
        if ((v7 & 0xFFFFFFF8) == v7)
          return result;
      }
      v21 = v12 + 1;
      do
      {
        *v11++ = *(_DWORD *)v2;
        --v21;
      }
      while (v21 > 1);
    }
  }
  else
  {
    v16 = *(_DWORD *)(v3 + 8);
    v22 = (v4 * v16);
    v24[0] = &v23;
    v24[1] = &v22;
    v24[2] = v2;
    v17 = *(_DWORD *)(v3 + 16);
    if (v16)
      v18 = v4 == 0;
    else
      v18 = 1;
    if (!v18 && v17 != 0)
    {
      v25[0] = 0;
      v25[1] = v16 - 1;
      v25[2] = *(_DWORD *)(v3 + 20);
      v25[3] = v4 - 1;
      v25[4] = v6;
      v25[5] = v17 - 1;
      v25[6] = v5;
      v20 = *(_QWORD *)v3;
      v26[0] = 0;
      v26[1] = 0;
      return sub_23948CC08(v25, v26, (uint64_t)v24, v20);
    }
  }
  return result;
}

_DWORD *sub_23984F55C(_DWORD *result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  int v7;
  unsigned int v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  _QWORD v13[3];
  _DWORD v14[5];
  unsigned int v15;
  unsigned int v16;
  _QWORD v17[2];

  v2 = result[2];
  v3 = result[3];
  v11 = v2;
  v13[0] = &v12;
  v13[1] = &v11;
  v13[2] = a2;
  v4 = result[4];
  if ((_DWORD)v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v14[0] = 0;
    v14[1] = v2 - 1;
    v7 = result[6];
    v14[2] = result[5];
    v14[3] = v3 - 1;
    v8 = result[7];
    v9 = *(_QWORD *)result;
    v17[0] = 0;
    v17[1] = 0;
    v14[4] = v7;
    v15 = v4 - 1;
    v16 = v8;
    if (v4 != 1)
    {
      v10 = 0;
      do
      {
        sub_23948D0D0(v14, (uint64_t)v17, (uint64_t)v13, v9);
        v9 += 4 * v16;
        ++v10;
      }
      while (v10 < v15);
    }
    return sub_23948D0D0(v14, (uint64_t)v17, (uint64_t)v13, v9);
  }
  return result;
}

uint64_t sub_23984F618(uint64_t a1, uint64_t a2)
{
  size_t v4;
  __int128 v5;
  int v6;
  BOOL v7;
  int v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v13[2];
  int v14;
  uint64_t v15;
  int v16;

  v4 = sub_2399169B0(a2);
  sub_2399168C0((_QWORD *)a1, v4, *(_QWORD *)(a2 + 16));
  v5 = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  v6 = *(_DWORD *)(a2 + 32);
  if (*(_DWORD *)(a2 + 24))
    v7 = *(_DWORD *)(a2 + 28) == 0;
  else
    v7 = 1;
  v8 = *(_DWORD *)(a2 + 44) >> 2;
  v9 = (*(_QWORD *)(a2 + 36) >> 2) & 0x3FFFFFFF3FFFFFFFLL;
  v10 = v7 || v6 == 0;
  v11 = *(_QWORD *)(a2 + 24);
  if (v10)
  {
    v11 = 0;
    v6 = 0;
  }
  v13[0] = *(_QWORD *)(a2 + 8);
  v13[1] = v11;
  v14 = v6;
  v15 = v9;
  v16 = v8;
  if (v6 * v8 == -1)
  {
    sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
    sub_239A4475C();
    abort();
  }
  sub_23984F70C(a1, v13);
  return a1;
}

void sub_23984F6F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_23984F70C(uint64_t a1, _DWORD *a2)
{
  BOOL v2;
  int v4;
  BOOL v5;
  int v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _QWORD v10[2];
  int v11;
  uint64_t v12;
  int v13;
  _QWORD v14[2];

  if (a2[2])
    v2 = a2[3] == 0;
  else
    v2 = 1;
  if (!v2 && a2[4] != 0)
  {
    v4 = *(_DWORD *)(a1 + 32);
    if (*(_DWORD *)(a1 + 24))
      v5 = *(_DWORD *)(a1 + 28) == 0;
    else
      v5 = 1;
    v6 = *(_DWORD *)(a1 + 44) >> 2;
    v7 = (*(_QWORD *)(a1 + 36) >> 2) & 0x3FFFFFFF3FFFFFFFLL;
    v8 = v5 || v4 == 0;
    v9 = *(_QWORD *)(a1 + 24);
    if (v8)
    {
      v9 = 0;
      v4 = 0;
    }
    v10[0] = *(_QWORD *)(a1 + 8);
    v10[1] = v9;
    v11 = v4;
    v12 = v7;
    v13 = v6;
    if (v4 * v6 == -1)
      sub_239EBFBC4(a1, (uint64_t)a2);
    v14[0] = a2;
    v14[1] = v10;
    sub_23984F7A4((unsigned int *)v14);
  }
}

void sub_23984F7A4(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v6;
  int v7;
  int v8;
  BOOL v9;
  _DWORD *v11;
  _DWORD *v12;
  int v13;
  unsigned int v14;
  BOOL v15;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  char v25;

  v1 = *(_QWORD *)a1;
  v2 = *((_QWORD *)a1 + 1);
  v3 = *(unsigned int *)(*(_QWORD *)a1 + 20);
  v4 = *(unsigned int *)(v2 + 20);
  if ((_DWORD)v3 == 1 && (_DWORD)v4 == 1)
  {
    v13 = *(_DWORD *)(v1 + 24);
    if (v13 == *(_DWORD *)(v2 + 24))
    {
      v14 = *(_DWORD *)(v1 + 8);
      if (v13 == v14)
      {
        sub_23984F8A8(a1);
        return;
      }
    }
    else
    {
      v14 = *(_DWORD *)(v1 + 8);
    }
    v18 = v14;
    if (v14)
      v15 = *(_DWORD *)(v1 + 12) == 0;
    else
      v15 = 1;
    if (!v15 && *(_DWORD *)(v1 + 16) != 0)
      sub_23984F9A0(&v18, v1, v2);
  }
  else
  {
    v7 = *(_DWORD *)(v1 + 8);
    v6 = *(_DWORD *)(v1 + 12);
    v8 = *(_DWORD *)(v1 + 16);
    if (v7)
      v9 = v6 == 0;
    else
      v9 = 1;
    if (!v9 && v8 != 0)
    {
      v18 = 0;
      v19 = v7 - 1;
      v20 = v3 | (v4 << 32);
      v21 = v6 - 1;
      v22 = *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned int *)(v2 + 24) << 32);
      v23 = v8 - 1;
      v24 = *(unsigned int *)(v1 + 28) | ((unint64_t)*(unsigned int *)(v2 + 28) << 32);
      v11 = *(_DWORD **)v1;
      v12 = *(_DWORD **)v2;
      v25 = 0;
      sub_239488094(&v18, (uint64_t)&v25, (uint64_t)&v17, v11, v12);
    }
  }
}

unsigned int *sub_23984F8A8(unsigned int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _OWORD v25[2];

  v2 = *(_QWORD *)result;
  v1 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 28);
  v4 = *(unsigned int *)(v1 + 28);
  v5 = *(_DWORD *)(*(_QWORD *)result + 12);
  if ((_DWORD)v3 == (_DWORD)v4 && (_DWORD)v3 == *(_DWORD *)(v2 + 24) * v5)
  {
    v6 = (v5 * *(_DWORD *)(v2 + 8) * *(_DWORD *)(v2 + 16));
    v7 = *(char **)v2;
    if ((_DWORD)v6)
      v8 = v7 == 0;
    else
      v8 = 0;
    if (v8)
      sub_239EBF50C((uint64_t)result, (uint64_t)v7);
    if ((_DWORD)v6)
      return (unsigned int *)memmove(*(void **)v1, v7, 4 * v6);
  }
  else
  {
    v9 = *(_DWORD *)(v2 + 8);
    v17 = (v5 * v9);
    v10 = *(_DWORD *)(v2 + 16);
    if (v9)
      v11 = v5 == 0;
    else
      v11 = 1;
    if (!v11 && v10 != 0)
    {
      v19 = v9 - 1;
      v13 = *(unsigned int *)(v2 + 24);
      v14 = *(unsigned int *)(v1 + 24);
      v20 = *(unsigned int *)(v2 + 20) | ((unint64_t)*(unsigned int *)(v1 + 20) << 32);
      v18 = 0;
      v21 = v5 - 1;
      v22 = v13 | (v14 << 32);
      v23 = v10 - 1;
      v24 = v3 | (v4 << 32);
      v15 = *(char **)v2;
      v16 = *(char **)v1;
      memset(v25, 0, sizeof(v25));
      return sub_239487B34((unsigned int *)&v18, (char **)v25, &v17, v15, v16);
    }
  }
  return result;
}

uint64_t *sub_23984F9A0(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  _OWORD v21[2];

  v4 = *(_DWORD *)(a2 + 8);
  v3 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v8 = result;
    v15 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 24);
    v10 = *(unsigned int *)(a3 + 24);
    v16 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v14 = 0;
    v17 = v3 - 1;
    v18 = v9 | (v10 << 32);
    v20 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned int *)(a3 + 28) << 32);
    v11 = *(char **)a2;
    v12 = *(char **)a3;
    memset(v21, 0, sizeof(v21));
    v19 = v5 - 1;
    if (v5 != 1)
    {
      v13 = 0;
      do
      {
        sub_239487EB0(&v14, (uint64_t)v21, v8, v11, v12);
        v11 += 4 * v20;
        v12 += 4 * HIDWORD(v20);
        ++v13;
      }
      while (v13 < v19);
    }
    return (uint64_t *)sub_239487EB0(&v14, (uint64_t)v21, v8, v11, v12);
  }
  return result;
}

uint64_t sub_23984FA8C(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v6 = a2;
    *((_QWORD *)&v6 + 1) = a1;
    sub_23984FB98((uint64_t *)&v6);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v6 = *a2;
    v7 = v4;
    v8 = a2[2];
    v9 = *((_QWORD *)a2 + 6);
    sub_23984F618((uint64_t)v10, (uint64_t)a2 + 56);
    v5 = v7;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    sub_23991693C((_QWORD *)(a1 + 56), v10);
    sub_239916980((uint64_t)v10);
    return a1;
  }
}

void sub_23984FB84(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

float sub_23984FB98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  BOOL v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  float *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  float result;
  BOOL v25;
  uint64_t v27;

  v1 = *a1;
  v2 = a1[1];
  if (*(_DWORD *)(*a1 + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v22 = *(_DWORD *)(v1 + 16);
    if (v22 == *(_DWORD *)(v2 + 16))
    {
      v23 = *(_DWORD *)v1;
      if (v22 == *(_DWORD *)v1)
      {
        sub_23984FD40((unsigned int *)a1);
        return result;
      }
    }
    else
    {
      v23 = *(_DWORD *)v1;
    }
    v27 = v23;
    if (v23)
      v25 = *(_DWORD *)(v1 + 4) == 0;
    else
      v25 = 1;
    if (!v25 && *(_DWORD *)(v1 + 8) != 0)
      sub_23984FE48(&v27, v1, v2);
  }
  else
  {
    v4 = *(_DWORD *)(v1 + 4);
    v5 = *(_DWORD *)(v1 + 8);
    if (*(_DWORD *)v1)
      v6 = v4 == 0;
    else
      v6 = 1;
    if (!v6 && v5 != 0)
    {
      v8 = v4 - 1;
      v9 = *(unsigned int *)(v1 + 16);
      v10 = *(unsigned int *)(v2 + 16);
      v11 = *(float **)(v1 + 64);
      v12 = *(float **)(v2 + 64);
      v13 = v5 - 1;
      if (v13)
      {
        v14 = *(unsigned int *)(v2 + 20);
        v15 = *(unsigned int *)(v1 + 20);
        if (!v8)
        {
          do
          {
            *v12 = *v11;
            v12[1] = v11[1];
            v11 += v15;
            v12 += v14;
            --v13;
          }
          while (v13);
LABEL_35:
          *v12 = *v11;
          result = v11[1];
          v12[1] = result;
          return result;
        }
        v16 = 0;
        v17 = v11 + 1;
        v18 = v12 + 1;
        do
        {
          v19 = v18;
          v20 = v17;
          v21 = v8;
          do
          {
            *(v19 - 1) = *(v20 - 1);
            *v19 = *v20;
            v20 += v9;
            v19 += v10;
            --v21;
          }
          while (v21);
          *(v19 - 1) = *(v20 - 1);
          *v19 = *v20;
          v11 += v15;
          v12 += v14;
          ++v16;
          v17 += v15;
          v18 += v14;
        }
        while (v16 != v13);
      }
      for (; v8; --v8)
      {
        *v12 = *v11;
        v12[1] = v11[1];
        v11 += v9;
        v12 += v10;
      }
      goto LABEL_35;
    }
  }
  return result;
}

unsigned int *sub_23984FD40(unsigned int *result)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  const void *v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  _OWORD v23[3];

  v2 = *(int **)result;
  v1 = *((_QWORD *)result + 1);
  v3 = *(unsigned int *)(*(_QWORD *)result + 20);
  v4 = *(unsigned int *)(v1 + 20);
  if ((_DWORD)v3 == (_DWORD)v4)
  {
    v5 = v2[1];
    if ((_DWORD)v3 == v2[4] * v5)
    {
      v6 = (v5 * *v2 * v2[2]);
      v7 = (const void *)*((_QWORD *)v2 + 8);
      if ((_DWORD)v6)
        v8 = v7 == 0;
      else
        v8 = 0;
      if (v8)
        sub_239EBF50C((uint64_t)result, (uint64_t)v7);
      if ((_DWORD)v6)
        return (unsigned int *)memmove(*(void **)(v1 + 64), v7, 4 * v6);
      return result;
    }
  }
  else
  {
    v5 = v2[1];
  }
  v9 = *v2;
  v15 = (v5 * *v2);
  v10 = v2[2];
  if (v9)
    v11 = v5 == 0;
  else
    v11 = 1;
  if (!v11 && v10 != 0)
  {
    v16 = 0;
    v17 = v9 - 1;
    v18 = v2[3] | ((unint64_t)*(unsigned int *)(v1 + 12) << 32);
    v19 = v5 - 1;
    v20 = v2[4] | ((unint64_t)*(unsigned int *)(v1 + 16) << 32);
    v21 = v10 - 1;
    v22 = v3 | (v4 << 32);
    v13 = (char *)*((_QWORD *)v2 + 8);
    v14 = *(char **)(v1 + 64);
    memset(v23, 0, sizeof(v23));
    return sub_239793014((unsigned int *)&v16, (uint64_t)v23, &v15, v13, v14);
  }
  return result;
}

uint64_t *sub_23984FE48(uint64_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  _OWORD v20[2];

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = result;
    v14 = *(_DWORD *)a2 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v15 = *(unsigned int *)(a2 + 12) | ((unint64_t)*(unsigned int *)(a3 + 12) << 32);
    v13 = 0;
    v16 = v3 - 1;
    v17 = v8 | (v9 << 32);
    v19 = *(unsigned int *)(a2 + 20) | ((unint64_t)*(unsigned int *)(a3 + 20) << 32);
    v10 = *(char **)(a2 + 64);
    v11 = *(char **)(a3 + 64);
    memset(v20, 0, sizeof(v20));
    v18 = v4 - 1;
    if (v4 != 1)
    {
      v12 = 0;
      do
      {
        sub_2397931F4(&v13, (char **)v20, v7, v10, v11);
        v10 += 4 * v19;
        v11 += 4 * HIDWORD(v19);
        ++v12;
      }
      while (v12 < v18);
    }
    return (uint64_t *)sub_2397931F4(&v13, (char **)v20, v7, v10, v11);
  }
  return result;
}

__int128 *sub_23984FF34()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933528);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933528))
    return &xmmword_256933510;
  v2 = sub_239850010();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933510, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933520 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933510 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933510, &dword_23940C000);
  __cxa_guard_release(&qword_256933528);
  return &xmmword_256933510;
}

void sub_23984FFF8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933528);
  _Unwind_Resume(a1);
}

std::string *sub_239850010()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933548);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933548))
    return &stru_256933530;
  sub_239850100((uint64_t)__p);
  sub_239798B5C((uint64_t)__p, &stru_256933530);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933530, &dword_23940C000);
  __cxa_guard_release(&qword_256933548);
  return &stru_256933530;
}

void sub_2398500C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933548);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933548);
  _Unwind_Resume(a1);
}

void sub_239850100(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933568);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933568))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Two32f>]", qword_256933550);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933550, &dword_23940C000);
    __cxa_guard_release(&qword_256933568);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933588);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933588))
  {
    v5 = sub_239423A18(qword_256933550, "<", 0);
    sub_239423914(qword_256933550, 0, v5, qword_256933570);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933570, &dword_23940C000);
    __cxa_guard_release(&qword_256933588);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569335A8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569335A8))
  {
    sub_239A44118((std::string::size_type)qword_256933570, (std::string *)&xmmword_256933590);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933590, &dword_23940C000);
    __cxa_guard_release(&qword_2569335A8);
  }
  if (byte_2569335A7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933590, *((unint64_t *)&xmmword_256933590 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933590;
    *(_QWORD *)(a1 + 16) = unk_2569335A0;
  }
}

void sub_23985029C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569335A8);
  _Unwind_Resume(a1);
}

void sub_2398502B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933588);
  _Unwind_Resume(a1);
}

void sub_2398502CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933568);
  _Unwind_Resume(a1);
}

uint64_t sub_2398502E4(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v6 = a2;
    *((_QWORD *)&v6 + 1) = a1;
    sub_2398503F0((uint64_t)&v6);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v6 = *a2;
    v7 = v4;
    v8 = a2[2];
    v9 = *((_QWORD *)a2 + 6);
    sub_23984B37C((uint64_t)v10, (uint64_t)a2 + 56);
    v5 = v7;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    sub_23991693C((_QWORD *)(a1 + 56), v10);
    sub_239916980((uint64_t)v10);
    return a1;
  }
}

void sub_2398503DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_2398503F0(uint64_t a1)
{
  unsigned int *v1;
  uint64_t v2;
  BOOL v4;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  size_t v11;

  v1 = *(unsigned int **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v6 = v1[4];
    if (v6 == *(_DWORD *)(v2 + 16))
    {
      v7 = *v1;
      if (v6 == *v1)
      {
        sub_23984BC24((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = *v1;
    }
    v11 = v7;
    if (v7)
      v8 = v1[1] == 0;
    else
      v8 = 1;
    if (!v8 && v1[2] != 0)
      sub_23984BD28(&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (*v1)
      v4 = v1[1] == 0;
    else
      v4 = 1;
    if (!v4 && v1[2] != 0)
    {
      v11 = (size_t)&v10;
      sub_2398504A4((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

void sub_2398504A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v10 = *(_BYTE **)(a2 + 64);
    v11 = *(_BYTE **)(a3 + 64);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 20);
      v14 = *(unsigned int *)(a2 + 20);
      if (v7)
      {
        v15 = 0;
        v16 = v11 + 2;
        v17 = v10 + 2;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *v19 = *v18;
            v19 += v9;
            v18 += v8;
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v10 += v14;
          v11 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    *v11 = *v10;
    v11[1] = v10[1];
    v11[2] = v10[2];
  }
}

__int128 *sub_2398505CC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569335E8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569335E8))
    return &xmmword_2569335D0;
  v2 = sub_2398506A8();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_2569335D0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569335E0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2569335D0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569335D0, &dword_23940C000);
  __cxa_guard_release(&qword_2569335E8);
  return &xmmword_2569335D0;
}

void sub_239850690(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569335E8);
  _Unwind_Resume(a1);
}

std::string *sub_2398506A8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933608);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933608))
    return &stru_2569335F0;
  sub_239850948((uint64_t)__p);
  sub_239850798((uint64_t)__p, &stru_2569335F0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569335F0, &dword_23940C000);
  __cxa_guard_release(&qword_256933608);
  return &stru_2569335F0;
}

void sub_239850758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933608);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933608);
  _Unwind_Resume(a1);
}

void sub_239850798(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932998);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932998))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three8u]", &xmmword_256932980);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932980, &dword_23940C000);
    __cxa_guard_release(&qword_256932998);
  }
  if (byte_256932997 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932980, *((unint64_t *)&xmmword_256932980 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932980;
    v13 = unk_256932990;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239850900(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932998);
  _Unwind_Resume(a1);
}

void sub_23985091C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239850948(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933628);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933628))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Three8u>]", qword_256933610);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933610, &dword_23940C000);
    __cxa_guard_release(&qword_256933628);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933648);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933648))
  {
    v5 = sub_239423A18(qword_256933610, "<", 0);
    sub_239423914(qword_256933610, 0, v5, qword_256933630);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933630, &dword_23940C000);
    __cxa_guard_release(&qword_256933648);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933668);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933668))
  {
    sub_239A44118((std::string::size_type)qword_256933630, (std::string *)&xmmword_256933650);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933650, &dword_23940C000);
    __cxa_guard_release(&qword_256933668);
  }
  if (byte_256933667 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933650, *((unint64_t *)&xmmword_256933650 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933650;
    *(_QWORD *)(a1 + 16) = unk_256933660;
  }
}

void sub_239850AE4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933668);
  _Unwind_Resume(a1);
}

void sub_239850AFC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933648);
  _Unwind_Resume(a1);
}

void sub_239850B14(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933628);
  _Unwind_Resume(a1);
}

uint64_t sub_239850B2C(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v6 = a2;
    *((_QWORD *)&v6 + 1) = a1;
    sub_239850C38((uint64_t)&v6);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v6 = *a2;
    v7 = v4;
    v8 = a2[2];
    v9 = *((_QWORD *)a2 + 6);
    sub_23984C9F0((uint64_t)v10, (uint64_t)a2 + 56);
    v5 = v7;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    sub_23991693C((_QWORD *)(a1 + 56), v10);
    sub_239916980((uint64_t)v10);
    return a1;
  }
}

void sub_239850C24(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_239850C38(uint64_t a1)
{
  unsigned int *v1;
  uint64_t v2;
  BOOL v4;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  char *v11;

  v1 = *(unsigned int **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v6 = v1[4];
    if (v6 == *(_DWORD *)(v2 + 16))
    {
      v7 = *v1;
      if (v6 == *v1)
      {
        sub_23984D4B8((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = *v1;
    }
    v11 = (char *)v7;
    if (v7)
      v8 = v1[1] == 0;
    else
      v8 = 1;
    if (!v8 && v1[2] != 0)
      sub_23984D5C0((uint64_t *)&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (*v1)
      v4 = v1[1] == 0;
    else
      v4 = 1;
    if (!v4 && v1[2] != 0)
    {
      v11 = &v10;
      sub_239850CEC((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

void sub_239850CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  _WORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v10 = *(_WORD **)(a2 + 64);
    v11 = *(_WORD **)(a3 + 64);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 20);
      v14 = *(unsigned int *)(a2 + 20);
      if (!v7)
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        *v11 = *v10;
        v11[1] = v10[1];
        v11[2] = v10[2];
        return;
      }
      v15 = 0;
      v16 = v11 + 2;
      v17 = v10 + 2;
      do
      {
        v18 = v17;
        v19 = v16;
        v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *v19 = *v18;
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
}

__int128 *sub_239850E3C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569336A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569336A8))
    return &xmmword_256933690;
  v2 = sub_239850F18();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933690, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569336A0 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933690 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933690, &dword_23940C000);
  __cxa_guard_release(&qword_2569336A8);
  return &xmmword_256933690;
}

void sub_239850F00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569336A8);
  _Unwind_Resume(a1);
}

std::string *sub_239850F18()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569336C8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569336C8))
    return &stru_2569336B0;
  sub_2398511B8((uint64_t)__p);
  sub_239851008((uint64_t)__p, &stru_2569336B0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569336B0, &dword_23940C000);
  __cxa_guard_release(&qword_2569336C8);
  return &stru_2569336B0;
}

void sub_239850FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569336C8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569336C8);
  _Unwind_Resume(a1);
}

void sub_239851008(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_2569329D8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569329D8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three16u]", &xmmword_2569329C0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569329C0, &dword_23940C000);
    __cxa_guard_release(&qword_2569329D8);
  }
  if (byte_2569329D7 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_2569329C0, *((unint64_t *)&xmmword_2569329C0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_2569329C0;
    v13 = unk_2569329D0;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239851170(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569329D8);
  _Unwind_Resume(a1);
}

void sub_23985118C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2398511B8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569336E8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569336E8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Three16u>]", qword_2569336D0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569336D0, &dword_23940C000);
    __cxa_guard_release(&qword_2569336E8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933708);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933708))
  {
    v5 = sub_239423A18(qword_2569336D0, "<", 0);
    sub_239423914(qword_2569336D0, 0, v5, qword_2569336F0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569336F0, &dword_23940C000);
    __cxa_guard_release(&qword_256933708);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933728);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933728))
  {
    sub_239A44118((std::string::size_type)qword_2569336F0, (std::string *)&xmmword_256933710);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933710, &dword_23940C000);
    __cxa_guard_release(&qword_256933728);
  }
  if (byte_256933727 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933710, *((unint64_t *)&xmmword_256933710 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933710;
    *(_QWORD *)(a1 + 16) = unk_256933720;
  }
}

void sub_239851354(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933728);
  _Unwind_Resume(a1);
}

void sub_23985136C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933708);
  _Unwind_Resume(a1);
}

void sub_239851384(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569336E8);
  _Unwind_Resume(a1);
}

uint64_t sub_23985139C(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  BOOL v6;
  BOOL v7;
  int v8;
  int v9;
  BOOL v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  __int128 v17;
  uint64_t v18;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v12 = a2;
    *((_QWORD *)&v12 + 1) = a1;
    sub_23985156C((unsigned int **)&v12);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v12 = *a2;
    v13 = v4;
    v14 = a2[2];
    v15 = *((_QWORD *)a2 + 6);
    sub_23984E418((uint64_t)v16, (uint64_t)a2 + 56);
    v5 = v13;
    *(_OWORD *)a1 = v12;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v14;
    *(_QWORD *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 80) = v17;
    *(_QWORD *)(a1 + 96) = v18;
    if (*(_QWORD *)(a1 + 64))
    {
      v6 = !*(_DWORD *)(a1 + 88) || *(_DWORD *)(a1 + 84) == 0;
      v7 = v6 || *(_DWORD *)(a1 + 80) == 0;
      v8 = v7 ? 0 : *(_DWORD *)(a1 + 88);
      if (v8 * (*(_DWORD *)(a1 + 100) >> 1) == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
    }
    sub_23991693C((_QWORD *)(a1 + 56), v16);
    if (v16[1])
    {
      v9 = DWORD2(v17);
      if (DWORD2(v17))
        v10 = DWORD1(v17) == 0;
      else
        v10 = 1;
      if (v10 || (_DWORD)v17 == 0)
        v9 = 0;
      if (v9 * (HIDWORD(v18) >> 1) == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
    }
    sub_239916980((uint64_t)v16);
    return a1;
  }
}

void sub_239851558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2398132B8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_23985156C(unsigned int **a1)
{
  unsigned int *v1;
  uint64_t v2;
  BOOL v4;
  double result;
  unsigned int v7;
  unsigned int v8;
  BOOL v9;
  char v11;
  char *v12;

  v1 = *a1;
  v2 = (uint64_t)a1[1];
  if ((*a1)[3] == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v7 = v1[4];
    if (v7 == *(_DWORD *)(v2 + 16))
    {
      v8 = *v1;
      if (v7 == *v1)
        return sub_23984EBC4(a1, (uint64_t)v1);
    }
    else
    {
      v8 = *v1;
    }
    v12 = (char *)v8;
    if (v8)
      v9 = v1[1] == 0;
    else
      v9 = 1;
    if (!v9 && v1[2] != 0)
      return sub_23984ED48((uint64_t *)&v12, (uint64_t)v1, v2);
  }
  else
  {
    if (*v1)
      v4 = v1[1] == 0;
    else
      v4 = 1;
    if (!v4 && v1[2] != 0)
    {
      v12 = &v11;
      *(_QWORD *)&result = sub_239851620((uint64_t)&v12, (uint64_t)v1, v2);
    }
  }
  return result;
}

__int16 sub_239851620@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  _WORD *v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int16 result;

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(_WORD **)(a2 + 64);
    v9 = *(_WORD **)(a3 + 64);
    v10 = 2 * *(unsigned int *)(a2 + 16);
    v11 = 2 * *(unsigned int *)(a3 + 16);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 20);
      v14 = *(unsigned int *)(a2 + 20);
      if (v7)
      {
        v15 = 0;
        v16 = v9 + 2;
        v17 = v8 + 2;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *v19 = *v18;
            v19 = (_WORD *)((char *)v19 + v11);
            v18 = (_WORD *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v8 += v14;
          v9 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        v21 = 2 * v13;
        v22 = 2 * v14;
        do
        {
          *v9 = *v8;
          v9[1] = v8[1];
          v9[2] = v8[2];
          v9 = (_WORD *)((char *)v9 + v21);
          v8 = (_WORD *)((char *)v8 + v22);
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v9 = *v8;
      v9[1] = v8[1];
      v9[2] = v8[2];
      v8 = (_WORD *)((char *)v8 + v10);
      v9 = (_WORD *)((char *)v9 + v11);
    }
    *v9 = *v8;
    v9[1] = v8[1];
    result = v8[2];
    v9[2] = result;
  }
  return result;
}

double sub_239851760(_QWORD *a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  double result;
  int v7;
  unsigned int v8;
  BOOL v9;
  char v11;
  char *v12;

  v1 = (_DWORD *)*a1;
  v2 = a1[1];
  if (*(_DWORD *)(*a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v7 = v1[6];
    if (v7 == *(_DWORD *)(v2 + 24))
    {
      v8 = v1[2];
      if (v7 == v8)
        return sub_239791B78(a1, (uint64_t)v1);
    }
    else
    {
      v8 = v1[2];
    }
    v12 = (char *)v8;
    if (v8)
      v9 = v1[3] == 0;
    else
      v9 = 1;
    if (!v9 && v1[4] != 0)
      return sub_239791E84((uint64_t *)&v12, (uint64_t)v1, v2);
  }
  else
  {
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
    {
      v12 = &v11;
      *(_QWORD *)&result = sub_239851814((uint64_t)&v12, (uint64_t)v1, v2);
    }
  }
  return result;
}

__int16 sub_239851814@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  _WORD *v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int16 result;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(_WORD **)a2;
    v9 = *(_WORD **)a3;
    v10 = 2 * *(unsigned int *)(a2 + 24);
    v11 = 2 * *(unsigned int *)(a3 + 24);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (v7)
      {
        v15 = 0;
        v16 = v9 + 2;
        v17 = v8 + 2;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *v19 = *v18;
            v19 = (_WORD *)((char *)v19 + v11);
            v18 = (_WORD *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v8 += v14;
          v9 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        v21 = 2 * v13;
        v22 = 2 * v14;
        do
        {
          *v9 = *v8;
          v9[1] = v8[1];
          v9[2] = v8[2];
          v9 = (_WORD *)((char *)v9 + v21);
          v8 = (_WORD *)((char *)v8 + v22);
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v9 = *v8;
      v9[1] = v8[1];
      v9[2] = v8[2];
      v8 = (_WORD *)((char *)v8 + v10);
      v9 = (_WORD *)((char *)v9 + v11);
    }
    *v9 = *v8;
    v9[1] = v8[1];
    result = v8[2];
    v9[2] = result;
  }
  return result;
}

__int128 *sub_239851954()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933768);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933768))
    return &xmmword_256933750;
  v2 = sub_239851A30();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933750, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933760 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933750 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933750, &dword_23940C000);
  __cxa_guard_release(&qword_256933768);
  return &xmmword_256933750;
}

void sub_239851A18(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933768);
  _Unwind_Resume(a1);
}

std::string *sub_239851A30()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933788);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933788))
    return &stru_256933770;
  sub_239851CD0((uint64_t)__p);
  sub_239851B20((uint64_t)__p, &stru_256933770);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933770, &dword_23940C000);
  __cxa_guard_release(&qword_256933788);
  return &stru_256933770;
}

void sub_239851AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933788);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933788);
  _Unwind_Resume(a1);
}

void sub_239851B20(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932A18);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932A18))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three16f]", &xmmword_256932A00);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932A00, &dword_23940C000);
    __cxa_guard_release(&qword_256932A18);
  }
  if (byte_256932A17 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932A00, *((unint64_t *)&xmmword_256932A00 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932A00;
    v13 = unk_256932A10;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239851C88(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932A18);
  _Unwind_Resume(a1);
}

void sub_239851CA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239851CD0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569337A8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569337A8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Three16f>]", qword_256933790);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933790, &dword_23940C000);
    __cxa_guard_release(&qword_2569337A8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569337C8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569337C8))
  {
    v5 = sub_239423A18(qword_256933790, "<", 0);
    sub_239423914(qword_256933790, 0, v5, qword_2569337B0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569337B0, &dword_23940C000);
    __cxa_guard_release(&qword_2569337C8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569337E8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569337E8))
  {
    sub_239A44118((std::string::size_type)qword_2569337B0, (std::string *)&xmmword_2569337D0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569337D0, &dword_23940C000);
    __cxa_guard_release(&qword_2569337E8);
  }
  if (byte_2569337E7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_2569337D0, *((unint64_t *)&xmmword_2569337D0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2569337D0;
    *(_QWORD *)(a1 + 16) = unk_2569337E0;
  }
}

void sub_239851E6C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569337E8);
  _Unwind_Resume(a1);
}

void sub_239851E84(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569337C8);
  _Unwind_Resume(a1);
}

void sub_239851E9C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569337A8);
  _Unwind_Resume(a1);
}

uint64_t sub_239851EB4(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v6 = a2;
    *((_QWORD *)&v6 + 1) = a1;
    sub_239851FC0((uint64_t)&v6);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v6 = *a2;
    v7 = v4;
    v8 = a2[2];
    v9 = *((_QWORD *)a2 + 6);
    sub_23984F618((uint64_t)v10, (uint64_t)a2 + 56);
    v5 = v7;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    sub_23991693C((_QWORD *)(a1 + 56), v10);
    sub_239916980((uint64_t)v10);
    return a1;
  }
}

void sub_239851FAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_239851FC0(uint64_t a1)
{
  unsigned int *v1;
  uint64_t v2;
  BOOL v4;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  char *v11;

  v1 = *(unsigned int **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v6 = v1[4];
    if (v6 == *(_DWORD *)(v2 + 16))
    {
      v7 = *v1;
      if (v6 == *v1)
      {
        sub_23984FD40((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = *v1;
    }
    v11 = (char *)v7;
    if (v7)
      v8 = v1[1] == 0;
    else
      v8 = 1;
    if (!v8 && v1[2] != 0)
      sub_23984FE48((uint64_t *)&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (*v1)
      v4 = v1[1] == 0;
    else
      v4 = 1;
    if (!v4 && v1[2] != 0)
    {
      v11 = &v10;
      sub_239852074((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

float sub_239852074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  float *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  int v20;
  float result;

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v10 = *(float **)(a2 + 64);
    v11 = *(float **)(a3 + 64);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 20);
      v14 = *(unsigned int *)(a2 + 20);
      if (!v7)
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        *v11 = *v10;
        v11[1] = v10[1];
        result = v10[2];
        v11[2] = result;
        return result;
      }
      v15 = 0;
      v16 = v11 + 2;
      v17 = v10 + 2;
      do
      {
        v18 = v17;
        v19 = v16;
        v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *v19 = *v18;
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
  return result;
}

void sub_2398521BC(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  BOOL v4;
  int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  char *v11;

  v1 = *(_DWORD **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 20) == 1 && *(_DWORD *)(v2 + 20) == 1)
  {
    v6 = v1[6];
    if (v6 == *(_DWORD *)(v2 + 24))
    {
      v7 = v1[2];
      if (v6 == v7)
      {
        sub_239792F18((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = v1[2];
    }
    v11 = (char *)v7;
    if (v7)
      v8 = v1[3] == 0;
    else
      v8 = 1;
    if (!v8 && v1[4] != 0)
      sub_239793108((uint64_t *)&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (v1[2])
      v4 = v1[3] == 0;
    else
      v4 = 1;
    if (!v4 && v1[4] != 0)
    {
      v11 = &v10;
      sub_239852270((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

float sub_239852270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  float *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  int v20;
  float result;

  v3 = *(_DWORD *)(a2 + 12);
  v4 = *(_DWORD *)(a2 + 16);
  if (*(_DWORD *)(a2 + 8))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 24);
    v9 = *(unsigned int *)(a3 + 24);
    v10 = *(float **)a2;
    v11 = *(float **)a3;
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 28);
      v14 = *(unsigned int *)(a2 + 28);
      if (!v7)
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        *v11 = *v10;
        v11[1] = v10[1];
        result = v10[2];
        v11[2] = result;
        return result;
      }
      v15 = 0;
      v16 = v11 + 2;
      v17 = v10 + 2;
      do
      {
        v18 = v17;
        v19 = v16;
        v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *v19 = *v18;
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
  return result;
}

__int128 *sub_2398523B8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933828);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933828))
    return &xmmword_256933810;
  v2 = sub_239852494();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933810, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933820 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933810 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933810, &dword_23940C000);
  __cxa_guard_release(&qword_256933828);
  return &xmmword_256933810;
}

void sub_23985247C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933828);
  _Unwind_Resume(a1);
}

std::string *sub_239852494()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933848);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933848))
    return &stru_256933830;
  sub_239852734((uint64_t)__p);
  sub_239852584((uint64_t)__p, &stru_256933830);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933830, &dword_23940C000);
  __cxa_guard_release(&qword_256933848);
  return &stru_256933830;
}

void sub_239852544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933848);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933848);
  _Unwind_Resume(a1);
}

void sub_239852584(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932A58);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932A58))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three32f]", &xmmword_256932A40);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932A40, &dword_23940C000);
    __cxa_guard_release(&qword_256932A58);
  }
  if (byte_256932A57 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932A40, *((unint64_t *)&xmmword_256932A40 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932A40;
    v13 = unk_256932A50;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_2398526EC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932A58);
  _Unwind_Resume(a1);
}

void sub_239852708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239852734(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933868);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933868))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Three32f>]", qword_256933850);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933850, &dword_23940C000);
    __cxa_guard_release(&qword_256933868);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933888);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933888))
  {
    v5 = sub_239423A18(qword_256933850, "<", 0);
    sub_239423914(qword_256933850, 0, v5, qword_256933870);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933870, &dword_23940C000);
    __cxa_guard_release(&qword_256933888);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569338A8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569338A8))
  {
    sub_239A44118((std::string::size_type)qword_256933870, (std::string *)&xmmword_256933890);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933890, &dword_23940C000);
    __cxa_guard_release(&qword_2569338A8);
  }
  if (byte_2569338A7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933890, *((unint64_t *)&xmmword_256933890 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933890;
    *(_QWORD *)(a1 + 16) = unk_2569338A0;
  }
}

void sub_2398528D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569338A8);
  _Unwind_Resume(a1);
}

void sub_2398528E8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933888);
  _Unwind_Resume(a1);
}

void sub_239852900(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933868);
  _Unwind_Resume(a1);
}

uint64_t sub_239852918(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v6 = a2;
    *((_QWORD *)&v6 + 1) = a1;
    sub_239852A24((uint64_t)&v6);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v6 = *a2;
    v7 = v4;
    v8 = a2[2];
    v9 = *((_QWORD *)a2 + 6);
    sub_23984B37C((uint64_t)v10, (uint64_t)a2 + 56);
    v5 = v7;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    sub_23991693C((_QWORD *)(a1 + 56), v10);
    sub_239916980((uint64_t)v10);
    return a1;
  }
}

void sub_239852A10(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_239852A24(uint64_t a1)
{
  unsigned int *v1;
  uint64_t v2;
  BOOL v4;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  size_t v11;

  v1 = *(unsigned int **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v6 = v1[4];
    if (v6 == *(_DWORD *)(v2 + 16))
    {
      v7 = *v1;
      if (v6 == *v1)
      {
        sub_23984BC24((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = *v1;
    }
    v11 = v7;
    if (v7)
      v8 = v1[1] == 0;
    else
      v8 = 1;
    if (!v8 && v1[2] != 0)
      sub_23984BD28(&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (*v1)
      v4 = v1[1] == 0;
    else
      v4 = 1;
    if (!v4 && v1[2] != 0)
    {
      v11 = (size_t)&v10;
      sub_239852AD8((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

void sub_239852AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v10 = *(_BYTE **)(a2 + 64);
    v11 = *(_BYTE **)(a3 + 64);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 20);
      v14 = *(unsigned int *)(a2 + 20);
      if (v7)
      {
        v15 = 0;
        v16 = v11 + 3;
        v17 = v10 + 1;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 3) = *(v18 - 1);
            *(v19 - 2) = *v18;
            *(v19 - 1) = v18[1];
            *v19 = v18[2];
            v19 += v9;
            v18 += v8;
            --v20;
          }
          while (v20);
          *(v19 - 3) = *(v18 - 1);
          *(v19 - 2) = *v18;
          *(v19 - 1) = v18[1];
          *v19 = v18[2];
          v10 += v14;
          v11 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    *v11 = *v10;
    v11[1] = v10[1];
    v11[2] = v10[2];
    v11[3] = v10[3];
  }
}

__int128 *sub_239852C28()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569338E8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569338E8))
    return &xmmword_2569338D0;
  v2 = sub_239852D04();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_2569338D0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569338E0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2569338D0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569338D0, &dword_23940C000);
  __cxa_guard_release(&qword_2569338E8);
  return &xmmword_2569338D0;
}

void sub_239852CEC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569338E8);
  _Unwind_Resume(a1);
}

std::string *sub_239852D04()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933908);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933908))
    return &stru_2569338F0;
  sub_239852FA4((uint64_t)__p);
  sub_239852DF4((uint64_t)__p, &stru_2569338F0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569338F0, &dword_23940C000);
  __cxa_guard_release(&qword_256933908);
  return &stru_2569338F0;
}

void sub_239852DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933908);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933908);
  _Unwind_Resume(a1);
}

void sub_239852DF4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932A98);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932A98))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four8u]", &xmmword_256932A80);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932A80, &dword_23940C000);
    __cxa_guard_release(&qword_256932A98);
  }
  if (byte_256932A97 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932A80, *((unint64_t *)&xmmword_256932A80 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932A80;
    v13 = unk_256932A90;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239852F5C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932A98);
  _Unwind_Resume(a1);
}

void sub_239852F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239852FA4(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933928);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933928))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Four8u>]", qword_256933910);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933910, &dword_23940C000);
    __cxa_guard_release(&qword_256933928);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933948);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933948))
  {
    v5 = sub_239423A18(qword_256933910, "<", 0);
    sub_239423914(qword_256933910, 0, v5, qword_256933930);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933930, &dword_23940C000);
    __cxa_guard_release(&qword_256933948);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933968);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933968))
  {
    sub_239A44118((std::string::size_type)qword_256933930, (std::string *)&xmmword_256933950);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933950, &dword_23940C000);
    __cxa_guard_release(&qword_256933968);
  }
  if (byte_256933967 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933950, *((unint64_t *)&xmmword_256933950 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933950;
    *(_QWORD *)(a1 + 16) = unk_256933960;
  }
}

void sub_239853140(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933968);
  _Unwind_Resume(a1);
}

void sub_239853158(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933948);
  _Unwind_Resume(a1);
}

void sub_239853170(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933928);
  _Unwind_Resume(a1);
}

uint64_t sub_239853188(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v6 = a2;
    *((_QWORD *)&v6 + 1) = a1;
    sub_239853294((uint64_t)&v6);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v6 = *a2;
    v7 = v4;
    v8 = a2[2];
    v9 = *((_QWORD *)a2 + 6);
    sub_23984C9F0((uint64_t)v10, (uint64_t)a2 + 56);
    v5 = v7;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    sub_23991693C((_QWORD *)(a1 + 56), v10);
    sub_239916980((uint64_t)v10);
    return a1;
  }
}

void sub_239853280(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_239853294(uint64_t a1)
{
  unsigned int *v1;
  uint64_t v2;
  BOOL v4;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  char *v11;

  v1 = *(unsigned int **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v6 = v1[4];
    if (v6 == *(_DWORD *)(v2 + 16))
    {
      v7 = *v1;
      if (v6 == *v1)
      {
        sub_23984D4B8((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = *v1;
    }
    v11 = (char *)v7;
    if (v7)
      v8 = v1[1] == 0;
    else
      v8 = 1;
    if (!v8 && v1[2] != 0)
      sub_23984D5C0((uint64_t *)&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (*v1)
      v4 = v1[1] == 0;
    else
      v4 = 1;
    if (!v4 && v1[2] != 0)
    {
      v11 = &v10;
      sub_239853348((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

void sub_239853348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  _WORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v10 = *(_WORD **)(a2 + 64);
    v11 = *(_WORD **)(a3 + 64);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 20);
      v14 = *(unsigned int *)(a2 + 20);
      if (!v7)
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        *v11 = *v10;
        v11[1] = v10[1];
        v11[2] = v10[2];
        v11[3] = v10[3];
        return;
      }
      v15 = 0;
      v16 = v11 + 2;
      v17 = v10 + 2;
      do
      {
        v18 = v17;
        v19 = v16;
        v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19[1] = v18[1];
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *v19 = *v18;
        v19[1] = v18[1];
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
}

__int128 *sub_2398534C0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569339A8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569339A8))
    return &xmmword_256933990;
  v2 = sub_23985359C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933990, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569339A0 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933990 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933990, &dword_23940C000);
  __cxa_guard_release(&qword_2569339A8);
  return &xmmword_256933990;
}

void sub_239853584(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569339A8);
  _Unwind_Resume(a1);
}

std::string *sub_23985359C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569339C8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569339C8))
    return &stru_2569339B0;
  sub_23985383C((uint64_t)__p);
  sub_23985368C((uint64_t)__p, &stru_2569339B0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569339B0, &dword_23940C000);
  __cxa_guard_release(&qword_2569339C8);
  return &stru_2569339B0;
}

void sub_23985364C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2569339C8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2569339C8);
  _Unwind_Resume(a1);
}

void sub_23985368C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932AD8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932AD8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four16u]", &xmmword_256932AC0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932AC0, &dword_23940C000);
    __cxa_guard_release(&qword_256932AD8);
  }
  if (byte_256932AD7 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932AC0, *((unint64_t *)&xmmword_256932AC0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932AC0;
    v13 = unk_256932AD0;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_2398537F4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932AD8);
  _Unwind_Resume(a1);
}

void sub_239853810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_23985383C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569339E8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569339E8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Four16u>]", qword_2569339D0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569339D0, &dword_23940C000);
    __cxa_guard_release(&qword_2569339E8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933A08);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933A08))
  {
    v5 = sub_239423A18(qword_2569339D0, "<", 0);
    sub_239423914(qword_2569339D0, 0, v5, qword_2569339F0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569339F0, &dword_23940C000);
    __cxa_guard_release(&qword_256933A08);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933A28);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933A28))
  {
    sub_239A44118((std::string::size_type)qword_2569339F0, (std::string *)&xmmword_256933A10);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933A10, &dword_23940C000);
    __cxa_guard_release(&qword_256933A28);
  }
  if (byte_256933A27 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933A10, *((unint64_t *)&xmmword_256933A10 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933A10;
    *(_QWORD *)(a1 + 16) = unk_256933A20;
  }
}

void sub_2398539D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933A28);
  _Unwind_Resume(a1);
}

void sub_2398539F0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933A08);
  _Unwind_Resume(a1);
}

void sub_239853A08(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569339E8);
  _Unwind_Resume(a1);
}

uint64_t sub_239853A20(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  BOOL v6;
  BOOL v7;
  int v8;
  int v9;
  BOOL v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  __int128 v17;
  uint64_t v18;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v12 = a2;
    *((_QWORD *)&v12 + 1) = a1;
    sub_239853BF0((unsigned int **)&v12);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v12 = *a2;
    v13 = v4;
    v14 = a2[2];
    v15 = *((_QWORD *)a2 + 6);
    sub_23984E418((uint64_t)v16, (uint64_t)a2 + 56);
    v5 = v13;
    *(_OWORD *)a1 = v12;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v14;
    *(_QWORD *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 80) = v17;
    *(_QWORD *)(a1 + 96) = v18;
    if (*(_QWORD *)(a1 + 64))
    {
      v6 = !*(_DWORD *)(a1 + 88) || *(_DWORD *)(a1 + 84) == 0;
      v7 = v6 || *(_DWORD *)(a1 + 80) == 0;
      v8 = v7 ? 0 : *(_DWORD *)(a1 + 88);
      if (v8 * (*(_DWORD *)(a1 + 100) >> 1) == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
    }
    sub_23991693C((_QWORD *)(a1 + 56), v16);
    if (v16[1])
    {
      v9 = DWORD2(v17);
      if (DWORD2(v17))
        v10 = DWORD1(v17) == 0;
      else
        v10 = 1;
      if (v10 || (_DWORD)v17 == 0)
        v9 = 0;
      if (v9 * (HIDWORD(v18) >> 1) == -1)
      {
        sub_239A444D4((uint64_t)"unknown file", 983, (uint64_t)"", (void (*)(void *))sub_239A4463C);
        sub_239A4475C();
        abort();
      }
    }
    sub_239916980((uint64_t)v16);
    return a1;
  }
}

void sub_239853BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239814CA8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_239853BF0(unsigned int **a1)
{
  unsigned int *v1;
  uint64_t v2;
  BOOL v4;
  double result;
  unsigned int v7;
  unsigned int v8;
  BOOL v9;
  char v11;
  char *v12;

  v1 = *a1;
  v2 = (uint64_t)a1[1];
  if ((*a1)[3] == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v7 = v1[4];
    if (v7 == *(_DWORD *)(v2 + 16))
    {
      v8 = *v1;
      if (v7 == *v1)
        return sub_23984EBC4(a1, (uint64_t)v1);
    }
    else
    {
      v8 = *v1;
    }
    v12 = (char *)v8;
    if (v8)
      v9 = v1[1] == 0;
    else
      v9 = 1;
    if (!v9 && v1[2] != 0)
      return sub_23984ED48((uint64_t *)&v12, (uint64_t)v1, v2);
  }
  else
  {
    if (*v1)
      v4 = v1[1] == 0;
    else
      v4 = 1;
    if (!v4 && v1[2] != 0)
    {
      v12 = &v11;
      *(_QWORD *)&result = sub_239853CA4((uint64_t)&v12, (uint64_t)v1, v2);
    }
  }
  return result;
}

__int16 sub_239853CA4@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  _WORD *v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _WORD *v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int16 result;

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(_WORD **)(a2 + 64);
    v9 = *(_WORD **)(a3 + 64);
    v10 = 2 * *(unsigned int *)(a2 + 16);
    v11 = 2 * *(unsigned int *)(a3 + 16);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 20);
      v14 = *(unsigned int *)(a2 + 20);
      if (v7)
      {
        v15 = 0;
        v16 = v9 + 2;
        v17 = v8 + 2;
        do
        {
          v18 = v17;
          v19 = v16;
          v20 = v7;
          do
          {
            *(v19 - 2) = *(v18 - 2);
            *(v19 - 1) = *(v18 - 1);
            *v19 = *v18;
            v19[1] = v18[1];
            v19 = (_WORD *)((char *)v19 + v11);
            v18 = (_WORD *)((char *)v18 + v10);
            --v20;
          }
          while (v20);
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19[1] = v18[1];
          v8 += v14;
          v9 += v13;
          ++v15;
          v16 += v13;
          v17 += v14;
        }
        while (v15 != v12);
      }
      else
      {
        v21 = 2 * v13;
        v22 = 2 * v14;
        do
        {
          *v9 = *v8;
          v9[1] = v8[1];
          v9[2] = v8[2];
          v9[3] = v8[3];
          v9 = (_WORD *)((char *)v9 + v21);
          v8 = (_WORD *)((char *)v8 + v22);
          --v12;
        }
        while (v12);
      }
    }
    for (; v7; --v7)
    {
      *v9 = *v8;
      v9[1] = v8[1];
      v9[2] = v8[2];
      v9[3] = v8[3];
      v8 = (_WORD *)((char *)v8 + v10);
      v9 = (_WORD *)((char *)v9 + v11);
    }
    *v9 = *v8;
    v9[1] = v8[1];
    v9[2] = v8[2];
    result = v8[3];
    v9[3] = result;
  }
  return result;
}

__int128 *sub_239853E0C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933A68);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933A68))
    return &xmmword_256933A50;
  v2 = sub_239853EE8();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933A50, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933A60 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933A50 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933A50, &dword_23940C000);
  __cxa_guard_release(&qword_256933A68);
  return &xmmword_256933A50;
}

void sub_239853ED0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933A68);
  _Unwind_Resume(a1);
}

std::string *sub_239853EE8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933A88);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933A88))
    return &stru_256933A70;
  sub_239854188((uint64_t)__p);
  sub_239853FD8((uint64_t)__p, &stru_256933A70);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933A70, &dword_23940C000);
  __cxa_guard_release(&qword_256933A88);
  return &stru_256933A70;
}

void sub_239853F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933A88);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933A88);
  _Unwind_Resume(a1);
}

void sub_239853FD8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932B18);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932B18))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four16f]", &xmmword_256932B00);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932B00, &dword_23940C000);
    __cxa_guard_release(&qword_256932B18);
  }
  if (byte_256932B17 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932B00, *((unint64_t *)&xmmword_256932B00 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932B00;
    v13 = unk_256932B10;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239854140(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932B18);
  _Unwind_Resume(a1);
}

void sub_23985415C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239854188(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933AA8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933AA8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Four16f>]", qword_256933A90);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933A90, &dword_23940C000);
    __cxa_guard_release(&qword_256933AA8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933AC8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933AC8))
  {
    v5 = sub_239423A18(qword_256933A90, "<", 0);
    sub_239423914(qword_256933A90, 0, v5, qword_256933AB0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933AB0, &dword_23940C000);
    __cxa_guard_release(&qword_256933AC8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933AE8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933AE8))
  {
    sub_239A44118((std::string::size_type)qword_256933AB0, (std::string *)&xmmword_256933AD0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933AD0, &dword_23940C000);
    __cxa_guard_release(&qword_256933AE8);
  }
  if (byte_256933AE7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933AD0, *((unint64_t *)&xmmword_256933AD0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933AD0;
    *(_QWORD *)(a1 + 16) = unk_256933AE0;
  }
}

void sub_239854324(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933AE8);
  _Unwind_Resume(a1);
}

void sub_23985433C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933AC8);
  _Unwind_Resume(a1);
}

void sub_239854354(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933AA8);
  _Unwind_Resume(a1);
}

uint64_t sub_23985436C(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 64)
    && *((_DWORD *)a2 + 1) == *(_DWORD *)(a1 + 4)
    && *((_DWORD *)a2 + 2) == *(_DWORD *)(a1 + 8)
    && *((_DWORD *)a2 + 4) == *(_DWORD *)(a1 + 16)
    && *((_DWORD *)a2 + 5) == *(_DWORD *)(a1 + 20))
  {
    *(_QWORD *)&v6 = a2;
    *((_QWORD *)&v6 + 1) = a1;
    sub_239854478((uint64_t)&v6);
    return a1;
  }
  else
  {
    v4 = a2[1];
    v6 = *a2;
    v7 = v4;
    v8 = a2[2];
    v9 = *((_QWORD *)a2 + 6);
    sub_23984F618((uint64_t)v10, (uint64_t)a2 + 56);
    v5 = v7;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 96) = v12;
    sub_23991693C((_QWORD *)(a1 + 56), v10);
    sub_239916980((uint64_t)v10);
    return a1;
  }
}

void sub_239854464(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239916980(v1);
  _Unwind_Resume(a1);
}

void sub_239854478(uint64_t a1)
{
  unsigned int *v1;
  uint64_t v2;
  BOOL v4;
  unsigned int v6;
  unsigned int v7;
  BOOL v8;
  char v10;
  char *v11;

  v1 = *(unsigned int **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(*(_QWORD *)a1 + 12) == 1 && *(_DWORD *)(v2 + 12) == 1)
  {
    v6 = v1[4];
    if (v6 == *(_DWORD *)(v2 + 16))
    {
      v7 = *v1;
      if (v6 == *v1)
      {
        sub_23984FD40((unsigned int *)a1);
        return;
      }
    }
    else
    {
      v7 = *v1;
    }
    v11 = (char *)v7;
    if (v7)
      v8 = v1[1] == 0;
    else
      v8 = 1;
    if (!v8 && v1[2] != 0)
      sub_23984FE48((uint64_t *)&v11, (uint64_t)v1, v2);
  }
  else
  {
    if (*v1)
      v4 = v1[1] == 0;
    else
      v4 = 1;
    if (!v4 && v1[2] != 0)
    {
      v11 = &v10;
      sub_23985452C((uint64_t)&v11, (uint64_t)v1, v2);
    }
  }
}

float sub_23985452C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  float *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  int v20;
  float result;

  v3 = *(_DWORD *)(a2 + 4);
  v4 = *(_DWORD *)(a2 + 8);
  if (*(_DWORD *)a2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v7 = v3 - 1;
    v8 = *(unsigned int *)(a2 + 16);
    v9 = *(unsigned int *)(a3 + 16);
    v10 = *(float **)(a2 + 64);
    v11 = *(float **)(a3 + 64);
    v12 = v4 - 1;
    if (v12)
    {
      v13 = *(unsigned int *)(a3 + 20);
      v14 = *(unsigned int *)(a2 + 20);
      if (!v7)
      {
        do
        {
          *v11 = *v10;
          v11[1] = v10[1];
          v11[2] = v10[2];
          v11[3] = v10[3];
          v10 += v14;
          v11 += v13;
          --v12;
        }
        while (v12);
LABEL_18:
        *v11 = *v10;
        v11[1] = v10[1];
        v11[2] = v10[2];
        result = v10[3];
        v11[3] = result;
        return result;
      }
      v15 = 0;
      v16 = v11 + 2;
      v17 = v10 + 2;
      do
      {
        v18 = v17;
        v19 = v16;
        v20 = v7;
        do
        {
          *(v19 - 2) = *(v18 - 2);
          *(v19 - 1) = *(v18 - 1);
          *v19 = *v18;
          v19[1] = v18[1];
          v19 += v9;
          v18 += v8;
          --v20;
        }
        while (v20);
        *(v19 - 2) = *(v18 - 2);
        *(v19 - 1) = *(v18 - 1);
        *v19 = *v18;
        v19[1] = v18[1];
        v10 += v14;
        v11 += v13;
        ++v15;
        v16 += v13;
        v17 += v14;
      }
      while (v15 != v12);
    }
    for (; v7; --v7)
    {
      *v11 = *v10;
      v11[1] = v10[1];
      v11[2] = v10[2];
      v11[3] = v10[3];
      v10 += v8;
      v11 += v9;
    }
    goto LABEL_18;
  }
  return result;
}

__int128 *sub_23985469C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933B28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933B28))
    return &xmmword_256933B10;
  v2 = sub_239854778();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933B10, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933B20 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933B10 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933B10, &dword_23940C000);
  __cxa_guard_release(&qword_256933B28);
  return &xmmword_256933B10;
}

void sub_239854760(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933B28);
  _Unwind_Resume(a1);
}

std::string *sub_239854778()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933B48);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933B48))
    return &stru_256933B30;
  sub_239854A18((uint64_t)__p);
  sub_239854868((uint64_t)__p, &stru_256933B30);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933B30, &dword_23940C000);
  __cxa_guard_release(&qword_256933B48);
  return &stru_256933B30;
}

void sub_239854828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933B48);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933B48);
  _Unwind_Resume(a1);
}

void sub_239854868(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932B58);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932B58))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four32f]", &xmmword_256932B40);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932B40, &dword_23940C000);
    __cxa_guard_release(&qword_256932B58);
  }
  if (byte_256932B57 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932B40, *((unint64_t *)&xmmword_256932B40 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932B40;
    v13 = unk_256932B50;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_2398549D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932B58);
  _Unwind_Resume(a1);
}

void sub_2398549EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239854A18(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933B68);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933B68))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Four32f>]", qword_256933B50);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933B50, &dword_23940C000);
    __cxa_guard_release(&qword_256933B68);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933B88);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933B88))
  {
    v5 = sub_239423A18(qword_256933B50, "<", 0);
    sub_239423914(qword_256933B50, 0, v5, qword_256933B70);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933B70, &dword_23940C000);
    __cxa_guard_release(&qword_256933B88);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933BA8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933BA8))
  {
    sub_239A44118((std::string::size_type)qword_256933B70, (std::string *)&xmmword_256933B90);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933B90, &dword_23940C000);
    __cxa_guard_release(&qword_256933BA8);
  }
  if (byte_256933BA7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933B90, *((unint64_t *)&xmmword_256933B90 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933B90;
    *(_QWORD *)(a1 + 16) = unk_256933BA0;
  }
}

void sub_239854BB4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933BA8);
  _Unwind_Resume(a1);
}

void sub_239854BCC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933B88);
  _Unwind_Resume(a1);
}

void sub_239854BE4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933B68);
  _Unwind_Resume(a1);
}

__int128 *sub_239854BFC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933BE8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933BE8))
    return &xmmword_256933BD0;
  v2 = sub_239854CD8();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933BD0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933BE0 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933BD0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933BD0, &dword_23940C000);
  __cxa_guard_release(&qword_256933BE8);
  return &xmmword_256933BD0;
}

void sub_239854CC0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933BE8);
  _Unwind_Resume(a1);
}

std::string *sub_239854CD8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933C08);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933C08))
    return &stru_256933BF0;
  sub_239854F78((uint64_t)__p);
  sub_239854DC8((uint64_t)__p, &stru_256933BF0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933BF0, &dword_23940C000);
  __cxa_guard_release(&qword_256933C08);
  return &stru_256933BF0;
}

void sub_239854D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933C08);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933C08);
  _Unwind_Resume(a1);
}

void sub_239854DC8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932B98);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932B98))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr16u]", &xmmword_256932B80);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932B80, &dword_23940C000);
    __cxa_guard_release(&qword_256932B98);
  }
  if (byte_256932B97 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932B80, *((unint64_t *)&xmmword_256932B80 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932B80;
    v13 = unk_256932B90;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239854F30(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932B98);
  _Unwind_Resume(a1);
}

void sub_239854F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239854F78(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933C28);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933C28))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Bgr16u>]", qword_256933C10);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933C10, &dword_23940C000);
    __cxa_guard_release(&qword_256933C28);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933C48);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933C48))
  {
    v5 = sub_239423A18(qword_256933C10, "<", 0);
    sub_239423914(qword_256933C10, 0, v5, qword_256933C30);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933C30, &dword_23940C000);
    __cxa_guard_release(&qword_256933C48);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933C68);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933C68))
  {
    sub_239A44118((std::string::size_type)qword_256933C30, (std::string *)&xmmword_256933C50);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933C50, &dword_23940C000);
    __cxa_guard_release(&qword_256933C68);
  }
  if (byte_256933C67 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933C50, *((unint64_t *)&xmmword_256933C50 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933C50;
    *(_QWORD *)(a1 + 16) = unk_256933C60;
  }
}

void sub_239855114(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933C68);
  _Unwind_Resume(a1);
}

void sub_23985512C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933C48);
  _Unwind_Resume(a1);
}

void sub_239855144(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933C28);
  _Unwind_Resume(a1);
}

__int128 *sub_23985515C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933CA8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933CA8))
    return &xmmword_256933C90;
  v2 = sub_239855238();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933C90, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933CA0 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933C90 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933C90, &dword_23940C000);
  __cxa_guard_release(&qword_256933CA8);
  return &xmmword_256933C90;
}

void sub_239855220(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933CA8);
  _Unwind_Resume(a1);
}

std::string *sub_239855238()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933CC8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933CC8))
    return &stru_256933CB0;
  sub_2398554D8((uint64_t)__p);
  sub_239855328((uint64_t)__p, &stru_256933CB0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933CB0, &dword_23940C000);
  __cxa_guard_release(&qword_256933CC8);
  return &stru_256933CB0;
}

void sub_2398552E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933CC8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933CC8);
  _Unwind_Resume(a1);
}

void sub_239855328(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932BD8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932BD8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr16f]", &xmmword_256932BC0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932BC0, &dword_23940C000);
    __cxa_guard_release(&qword_256932BD8);
  }
  if (byte_256932BD7 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932BC0, *((unint64_t *)&xmmword_256932BC0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932BC0;
    v13 = unk_256932BD0;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239855490(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932BD8);
  _Unwind_Resume(a1);
}

void sub_2398554AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2398554D8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933CE8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933CE8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Bgr16f>]", qword_256933CD0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933CD0, &dword_23940C000);
    __cxa_guard_release(&qword_256933CE8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933D08);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933D08))
  {
    v5 = sub_239423A18(qword_256933CD0, "<", 0);
    sub_239423914(qword_256933CD0, 0, v5, qword_256933CF0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933CF0, &dword_23940C000);
    __cxa_guard_release(&qword_256933D08);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933D28);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933D28))
  {
    sub_239A44118((std::string::size_type)qword_256933CF0, (std::string *)&xmmword_256933D10);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933D10, &dword_23940C000);
    __cxa_guard_release(&qword_256933D28);
  }
  if (byte_256933D27 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933D10, *((unint64_t *)&xmmword_256933D10 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933D10;
    *(_QWORD *)(a1 + 16) = unk_256933D20;
  }
}

void sub_239855674(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933D28);
  _Unwind_Resume(a1);
}

void sub_23985568C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933D08);
  _Unwind_Resume(a1);
}

void sub_2398556A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933CE8);
  _Unwind_Resume(a1);
}

__int128 *sub_2398556BC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933D68);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933D68))
    return &xmmword_256933D50;
  v2 = sub_239855798();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933D50, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933D60 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933D50 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933D50, &dword_23940C000);
  __cxa_guard_release(&qword_256933D68);
  return &xmmword_256933D50;
}

void sub_239855780(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933D68);
  _Unwind_Resume(a1);
}

std::string *sub_239855798()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933D88);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933D88))
    return &stru_256933D70;
  sub_239855A38((uint64_t)__p);
  sub_239855888((uint64_t)__p, &stru_256933D70);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933D70, &dword_23940C000);
  __cxa_guard_release(&qword_256933D88);
  return &stru_256933D70;
}

void sub_239855848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933D88);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933D88);
  _Unwind_Resume(a1);
}

void sub_239855888(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932C18);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932C18))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr32f]", &xmmword_256932C00);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932C00, &dword_23940C000);
    __cxa_guard_release(&qword_256932C18);
  }
  if (byte_256932C17 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932C00, *((unint64_t *)&xmmword_256932C00 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932C00;
    v13 = unk_256932C10;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_2398559F0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932C18);
  _Unwind_Resume(a1);
}

void sub_239855A0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239855A38(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933DA8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933DA8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Bgr32f>]", qword_256933D90);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933D90, &dword_23940C000);
    __cxa_guard_release(&qword_256933DA8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933DC8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933DC8))
  {
    v5 = sub_239423A18(qword_256933D90, "<", 0);
    sub_239423914(qword_256933D90, 0, v5, qword_256933DB0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933DB0, &dword_23940C000);
    __cxa_guard_release(&qword_256933DC8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933DE8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933DE8))
  {
    sub_239A44118((std::string::size_type)qword_256933DB0, (std::string *)&xmmword_256933DD0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933DD0, &dword_23940C000);
    __cxa_guard_release(&qword_256933DE8);
  }
  if (byte_256933DE7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933DD0, *((unint64_t *)&xmmword_256933DD0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933DD0;
    *(_QWORD *)(a1 + 16) = unk_256933DE0;
  }
}

void sub_239855BD4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933DE8);
  _Unwind_Resume(a1);
}

void sub_239855BEC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933DC8);
  _Unwind_Resume(a1);
}

void sub_239855C04(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933DA8);
  _Unwind_Resume(a1);
}

__int128 *sub_239855C1C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933E28);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933E28))
    return &xmmword_256933E10;
  v2 = sub_239855CF8();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933E10, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933E20 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933E10 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933E10, &dword_23940C000);
  __cxa_guard_release(&qword_256933E28);
  return &xmmword_256933E10;
}

void sub_239855CE0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933E28);
  _Unwind_Resume(a1);
}

std::string *sub_239855CF8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933E48);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933E48))
    return &stru_256933E30;
  sub_239855F98((uint64_t)__p);
  sub_239855DE8((uint64_t)__p, &stru_256933E30);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933E30, &dword_23940C000);
  __cxa_guard_release(&qword_256933E48);
  return &stru_256933E30;
}

void sub_239855DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933E48);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933E48);
  _Unwind_Resume(a1);
}

void sub_239855DE8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932C58);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932C58))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra16u]", &xmmword_256932C40);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932C40, &dword_23940C000);
    __cxa_guard_release(&qword_256932C58);
  }
  if (byte_256932C57 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932C40, *((unint64_t *)&xmmword_256932C40 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932C40;
    v13 = unk_256932C50;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239855F50(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932C58);
  _Unwind_Resume(a1);
}

void sub_239855F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239855F98(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933E68);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933E68))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Bgra16u>]", qword_256933E50);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933E50, &dword_23940C000);
    __cxa_guard_release(&qword_256933E68);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933E88);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933E88))
  {
    v5 = sub_239423A18(qword_256933E50, "<", 0);
    sub_239423914(qword_256933E50, 0, v5, qword_256933E70);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933E70, &dword_23940C000);
    __cxa_guard_release(&qword_256933E88);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933EA8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933EA8))
  {
    sub_239A44118((std::string::size_type)qword_256933E70, (std::string *)&xmmword_256933E90);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933E90, &dword_23940C000);
    __cxa_guard_release(&qword_256933EA8);
  }
  if (byte_256933EA7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933E90, *((unint64_t *)&xmmword_256933E90 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933E90;
    *(_QWORD *)(a1 + 16) = unk_256933EA0;
  }
}

void sub_239856134(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933EA8);
  _Unwind_Resume(a1);
}

void sub_23985614C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933E88);
  _Unwind_Resume(a1);
}

void sub_239856164(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933E68);
  _Unwind_Resume(a1);
}

__int128 *sub_23985617C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933EE8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933EE8))
    return &xmmword_256933ED0;
  v2 = sub_239856258();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933ED0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933EE0 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933ED0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933ED0, &dword_23940C000);
  __cxa_guard_release(&qword_256933EE8);
  return &xmmword_256933ED0;
}

void sub_239856240(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933EE8);
  _Unwind_Resume(a1);
}

std::string *sub_239856258()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933F08);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933F08))
    return &stru_256933EF0;
  sub_2398564F8((uint64_t)__p);
  sub_239856348((uint64_t)__p, &stru_256933EF0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933EF0, &dword_23940C000);
  __cxa_guard_release(&qword_256933F08);
  return &stru_256933EF0;
}

void sub_239856308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933F08);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933F08);
  _Unwind_Resume(a1);
}

void sub_239856348(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932C98);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932C98))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra16f]", &xmmword_256932C80);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932C80, &dword_23940C000);
    __cxa_guard_release(&qword_256932C98);
  }
  if (byte_256932C97 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932C80, *((unint64_t *)&xmmword_256932C80 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932C80;
    v13 = unk_256932C90;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_2398564B0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932C98);
  _Unwind_Resume(a1);
}

void sub_2398564CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2398564F8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933F28);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933F28))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Bgra16f>]", qword_256933F10);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933F10, &dword_23940C000);
    __cxa_guard_release(&qword_256933F28);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256933F48);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256933F48))
  {
    v5 = sub_239423A18(qword_256933F10, "<", 0);
    sub_239423914(qword_256933F10, 0, v5, qword_256933F30);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933F30, &dword_23940C000);
    __cxa_guard_release(&qword_256933F48);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256933F68);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256933F68))
  {
    sub_239A44118((std::string::size_type)qword_256933F30, (std::string *)&xmmword_256933F50);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933F50, &dword_23940C000);
    __cxa_guard_release(&qword_256933F68);
  }
  if (byte_256933F67 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256933F50, *((unint64_t *)&xmmword_256933F50 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256933F50;
    *(_QWORD *)(a1 + 16) = unk_256933F60;
  }
}

void sub_239856694(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933F68);
  _Unwind_Resume(a1);
}

void sub_2398566AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933F48);
  _Unwind_Resume(a1);
}

void sub_2398566C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933F28);
  _Unwind_Resume(a1);
}

__int128 *sub_2398566DC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933FA8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933FA8))
    return &xmmword_256933F90;
  v2 = sub_2398567B8();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256933F90, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256933FA0 = v2->__r_.__value_.__r.__words[2];
    xmmword_256933F90 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256933F90, &dword_23940C000);
  __cxa_guard_release(&qword_256933FA8);
  return &xmmword_256933F90;
}

void sub_2398567A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933FA8);
  _Unwind_Resume(a1);
}

std::string *sub_2398567B8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256933FC8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256933FC8))
    return &stru_256933FB0;
  sub_239856A58((uint64_t)__p);
  sub_2398568A8((uint64_t)__p, &stru_256933FB0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256933FB0, &dword_23940C000);
  __cxa_guard_release(&qword_256933FC8);
  return &stru_256933FB0;
}

void sub_239856868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256933FC8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256933FC8);
  _Unwind_Resume(a1);
}

void sub_2398568A8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256930FE0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256930FE0))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra32f]", &xmmword_256930FC8);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256930FC8, &dword_23940C000);
    __cxa_guard_release(&qword_256930FE0);
  }
  if (byte_256930FDF < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256930FC8, *((unint64_t *)&xmmword_256930FC8 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256930FC8;
    v13 = unk_256930FD8;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239856A10(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256930FE0);
  _Unwind_Resume(a1);
}

void sub_239856A2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239856A58(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256933FE8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256933FE8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Bgra32f>]", qword_256933FD0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933FD0, &dword_23940C000);
    __cxa_guard_release(&qword_256933FE8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256934008);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256934008))
  {
    v5 = sub_239423A18(qword_256933FD0, "<", 0);
    sub_239423914(qword_256933FD0, 0, v5, qword_256933FF0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256933FF0, &dword_23940C000);
    __cxa_guard_release(&qword_256934008);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256934028);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256934028))
  {
    sub_239A44118((std::string::size_type)qword_256933FF0, (std::string *)&xmmword_256934010);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256934010, &dword_23940C000);
    __cxa_guard_release(&qword_256934028);
  }
  if (byte_256934027 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256934010, *((unint64_t *)&xmmword_256934010 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256934010;
    *(_QWORD *)(a1 + 16) = unk_256934020;
  }
}

void sub_239856BF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934028);
  _Unwind_Resume(a1);
}

void sub_239856C0C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934008);
  _Unwind_Resume(a1);
}

void sub_239856C24(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256933FE8);
  _Unwind_Resume(a1);
}

__int128 *sub_239856C3C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256934068);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256934068))
    return &xmmword_256934050;
  v2 = sub_239856D18();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256934050, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256934060 = v2->__r_.__value_.__r.__words[2];
    xmmword_256934050 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256934050, &dword_23940C000);
  __cxa_guard_release(&qword_256934068);
  return &xmmword_256934050;
}

void sub_239856D00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934068);
  _Unwind_Resume(a1);
}

std::string *sub_239856D18()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256934088);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256934088))
    return &stru_256934070;
  sub_239856FB8((uint64_t)__p);
  sub_239856E08((uint64_t)__p, &stru_256934070);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256934070, &dword_23940C000);
  __cxa_guard_release(&qword_256934088);
  return &stru_256934070;
}

void sub_239856DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256934088);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256934088);
  _Unwind_Resume(a1);
}

void sub_239856E08(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932CD8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932CD8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr16u]", &xmmword_256932CC0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932CC0, &dword_23940C000);
    __cxa_guard_release(&qword_256932CD8);
  }
  if (byte_256932CD7 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932CC0, *((unint64_t *)&xmmword_256932CC0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932CC0;
    v13 = unk_256932CD0;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239856F70(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932CD8);
  _Unwind_Resume(a1);
}

void sub_239856F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239856FB8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2569340A8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2569340A8))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Abgr16u>]", qword_256934090);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256934090, &dword_23940C000);
    __cxa_guard_release(&qword_2569340A8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2569340C8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2569340C8))
  {
    v5 = sub_239423A18(qword_256934090, "<", 0);
    sub_239423914(qword_256934090, 0, v5, qword_2569340B0);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_2569340B0, &dword_23940C000);
    __cxa_guard_release(&qword_2569340C8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569340E8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569340E8))
  {
    sub_239A44118((std::string::size_type)qword_2569340B0, (std::string *)&xmmword_2569340D0);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569340D0, &dword_23940C000);
    __cxa_guard_release(&qword_2569340E8);
  }
  if (byte_2569340E7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_2569340D0, *((unint64_t *)&xmmword_2569340D0 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2569340D0;
    *(_QWORD *)(a1 + 16) = unk_2569340E0;
  }
}

void sub_239857154(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569340E8);
  _Unwind_Resume(a1);
}

void sub_23985716C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569340C8);
  _Unwind_Resume(a1);
}

void sub_239857184(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569340A8);
  _Unwind_Resume(a1);
}

__int128 *sub_23985719C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256934128);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256934128))
    return &xmmword_256934110;
  v2 = sub_239857278();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_256934110, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_256934120 = v2->__r_.__value_.__r.__words[2];
    xmmword_256934110 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256934110, &dword_23940C000);
  __cxa_guard_release(&qword_256934128);
  return &xmmword_256934110;
}

void sub_239857260(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934128);
  _Unwind_Resume(a1);
}

std::string *sub_239857278()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256934148);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256934148))
    return &stru_256934130;
  sub_239857518((uint64_t)__p);
  sub_239857368((uint64_t)__p, &stru_256934130);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256934130, &dword_23940C000);
  __cxa_guard_release(&qword_256934148);
  return &stru_256934130;
}

void sub_239857328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256934148);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256934148);
  _Unwind_Resume(a1);
}

void sub_239857368(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932D18);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932D18))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr16f]", &xmmword_256932D00);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932D00, &dword_23940C000);
    __cxa_guard_release(&qword_256932D18);
  }
  if (byte_256932D17 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932D00, *((unint64_t *)&xmmword_256932D00 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932D00;
    v13 = unk_256932D10;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_2398574D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932D18);
  _Unwind_Resume(a1);
}

void sub_2398574EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239857518(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256934168);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256934168))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Abgr16f>]", qword_256934150);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256934150, &dword_23940C000);
    __cxa_guard_release(&qword_256934168);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256934188);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256934188))
  {
    v5 = sub_239423A18(qword_256934150, "<", 0);
    sub_239423914(qword_256934150, 0, v5, qword_256934170);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256934170, &dword_23940C000);
    __cxa_guard_release(&qword_256934188);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2569341A8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2569341A8))
  {
    sub_239A44118((std::string::size_type)qword_256934170, (std::string *)&xmmword_256934190);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256934190, &dword_23940C000);
    __cxa_guard_release(&qword_2569341A8);
  }
  if (byte_2569341A7 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256934190, *((unint64_t *)&xmmword_256934190 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256934190;
    *(_QWORD *)(a1 + 16) = unk_2569341A0;
  }
}

void sub_2398576B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569341A8);
  _Unwind_Resume(a1);
}

void sub_2398576CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934188);
  _Unwind_Resume(a1);
}

void sub_2398576E4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934168);
  _Unwind_Resume(a1);
}

__int128 *sub_2398576FC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2569341E8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2569341E8))
    return &xmmword_2569341D0;
  v2 = sub_2398577D8();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&xmmword_2569341D0, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2569341E0 = v2->__r_.__value_.__r.__words[2];
    xmmword_2569341D0 = v3;
  }
  __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_2569341D0, &dword_23940C000);
  __cxa_guard_release(&qword_2569341E8);
  return &xmmword_2569341D0;
}

void sub_2398577C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2569341E8);
  _Unwind_Resume(a1);
}

std::string *sub_2398577D8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_256934208);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_256934208))
    return &stru_2569341F0;
  sub_239857A78((uint64_t)__p);
  sub_2398578C8((uint64_t)__p, &stru_2569341F0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569341F0, &dword_23940C000);
  __cxa_guard_release(&qword_256934208);
  return &stru_2569341F0;
}

void sub_239857888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_256934208);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_256934208);
  _Unwind_Resume(a1);
}

void sub_2398578C8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  unsigned __int8 v4;
  int64x2_t v5;
  int8x16_t v6;
  void **v7;
  void **v8;
  void *v9;
  void *__p;
  void **v11;
  void *__dst[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_256932D58);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256932D58))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr32f]", &xmmword_256932D40);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256932D40, &dword_23940C000);
    __cxa_guard_release(&qword_256932D58);
  }
  if (byte_256932D57 < 0)
  {
    sub_23941A7F8(__dst, (void *)xmmword_256932D40, *((unint64_t *)&xmmword_256932D40 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_256932D40;
    v13 = unk_256932D50;
  }
  sub_23941B674(&__p, (uint64_t)__dst, 1uLL);
  sub_239A44200(a1, (uint64_t *)&__p, a2, v5, v6);
  v7 = (void **)__p;
  if (__p)
  {
    v8 = v11;
    v9 = __p;
    if (v11 != __p)
    {
      do
      {
        if (*((char *)v8 - 1) < 0)
          operator delete(*(v8 - 3));
        v8 -= 3;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v11 = v7;
    operator delete(v9);
  }
  if (SHIBYTE(v13) < 0)
    operator delete(__dst[0]);
}

void sub_239857A30(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256932D58);
  _Unwind_Resume(a1);
}

void sub_239857A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_23941B08C(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239857A78(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_256934228);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_256934228))
  {
    sub_239A43EA4("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<Format::Abgr32f>]", qword_256934210);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256934210, &dword_23940C000);
    __cxa_guard_release(&qword_256934228);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_256934248);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_256934248))
  {
    v5 = sub_239423A18(qword_256934210, "<", 0);
    sub_239423914(qword_256934210, 0, v5, qword_256934230);
    __cxa_atexit(MEMORY[0x24BEDACF0], qword_256934230, &dword_23940C000);
    __cxa_guard_release(&qword_256934248);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_256934268);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_256934268))
  {
    sub_239A44118((std::string::size_type)qword_256934230, (std::string *)&xmmword_256934250);
    __cxa_atexit(MEMORY[0x24BEDACF0], &xmmword_256934250, &dword_23940C000);
    __cxa_guard_release(&qword_256934268);
  }
  if (byte_256934267 < 0)
  {
    sub_23941A7F8((_BYTE *)a1, (void *)xmmword_256934250, *((unint64_t *)&xmmword_256934250 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_256934250;
    *(_QWORD *)(a1 + 16) = unk_256934260;
  }
}

void sub_239857C14(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934268);
  _Unwind_Resume(a1);
}

void sub_239857C2C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934248);
  _Unwind_Resume(a1);
}

void sub_239857C44(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_256934228);
  _Unwind_Resume(a1);
}

uint64_t sub_239857C5C(uint64_t a1, _DWORD *a2)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  _BYTE v22[12];

  if (a2[1])
    v3 = *a2 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a2;
  if (v3)
    v4 = 0;
  v5 = 2 * ((_DWORD)v4 != 0);
  v6 = HIDWORD(v4);
  if (HIDWORD(v4))
    v7 = (v5 * v4);
  else
    v7 = 0;
  v8 = __PAIR64__(v4, 2);
  *(_DWORD *)v22 = 1;
  *(_QWORD *)&v22[4] = v5 & 0x1FFFFFFFFLL | ((unint64_t)(v7 >> 1) << 33);
  *(_QWORD *)a1 = __PAIR64__(v4, 2);
  *(_DWORD *)(a1 + 8) = HIDWORD(v4);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)v22;
  *(_DWORD *)(a1 + 20) = v7;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)&v22[4];
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 52) = 0;
  v9 = (_QWORD *)(a1 + 56);
  v10 = __PAIR64__(v4, 2) >> 32;
  if ((_DWORD)v8)
    v11 = v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v6 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v8;
  if (v12)
    v14 = 0;
  else
    v14 = v6;
  v15 = 2 * v7;
  if ((v15 & (v15 - 1)) != 0)
    v16 = 1;
  else
    v16 = v15 - 1;
  v17 = v16 | (v16 >> 1) | ((v16 | (v16 >> 1)) >> 2);
  v18 = v17 | (v17 >> 4) | ((v17 | (v17 >> 4)) >> 8);
  v19 = v18 | (v18 >> 16) | ((v18 | (v18 >> 16)) >> 32);
  if (v19 + 1 > 8)
    v20 = v19 + 1;
  else
    v20 = 8;
  sub_2399168C0(v9, 2 * (v14 * v7), v20);
  *(_QWORD *)(a1 + 80) = v13;
  *(_DWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 92) = (2 * *(_QWORD *)v22) & 0xFFFFFFFEFFFFFFFELL;
  *(_DWORD *)(a1 + 100) = 2 * v7;
  return a1;
}

uint64_t sub_239857DCC(uint64_t a1, _DWORD *a2)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  _BYTE v23[12];

  if (a2[1])
    v3 = *a2 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a2;
  if (v3)
    v4 = 0;
  v5 = 2 * ((_DWORD)v4 != 0);
  v6 = HIDWORD(v4);
  if (HIDWORD(v4))
    v7 = (v5 * v4);
  else
    v7 = 0;
  v8 = __PAIR64__(v4, 2);
  *(_DWORD *)v23 = 1;
  *(_QWORD *)&v23[4] = v5 & 0x1FFFFFFFFLL | ((unint64_t)(v7 >> 1) << 33);
  *(_QWORD *)a1 = __PAIR64__(v4, 2);
  *(_DWORD *)(a1 + 8) = HIDWORD(v4);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)v23;
  *(_DWORD *)(a1 + 20) = v7;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)&v23[4];
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 52) = 0;
  v9 = (_QWORD *)(a1 + 56);
  v10 = __PAIR64__(v4, 2) >> 32;
  if ((_DWORD)v8)
    v11 = v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v6 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v8;
  if (v12)
    v14 = 0;
  else
    v14 = v6;
  v15 = 4 * v7;
  v16 = v15 - 1;
  v3 = (v15 & (v15 - 1)) == 0;
  v17 = 3;
  if (v3)
    v17 = v16;
  v18 = v17 | (v17 >> 1) | ((v17 | (v17 >> 1)) >> 2);
  v19 = v18 | (v18 >> 4) | ((v18 | (v18 >> 4)) >> 8);
  v20 = v19 | (v19 >> 16) | ((v19 | (v19 >> 16)) >> 32);
  if (v20 + 1 > 8)
    v21 = v20 + 1;
  else
    v21 = 8;
  sub_2399168C0(v9, 4 * (v14 * v7), v21);
  *(_QWORD *)(a1 + 80) = v13;
  *(_DWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 92) = (4 * *(_QWORD *)v23) & 0xFFFFFFFCFFFFFFFCLL;
  *(_DWORD *)(a1 + 100) = 4 * v7;
  return a1;
}

uint64_t sub_239857F40(uint64_t a1, _DWORD *a2)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  size_t v16;
  _BYTE v18[12];

  if (a2[1])
    v3 = *a2 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a2;
  if (v3)
    v4 = 0;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  if (HIDWORD(v4))
    v6 = (v5 * v4);
  else
    v6 = 0;
  *(_DWORD *)v18 = 1;
  *(_QWORD *)&v18[4] = v5 | (v6 << 32);
  *(_QWORD *)a1 = __PAIR64__(v4, 3);
  *(_DWORD *)(a1 + 8) = HIDWORD(v4);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)v18;
  *(_DWORD *)(a1 + 20) = v6;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)&v18[4];
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 52) = 0;
  v7 = (_QWORD *)(a1 + 56);
  if (__PAIR64__(v4, 3) >> 32)
    v8 = HIDWORD(v4) == 0;
  else
    v8 = 1;
  if (v8)
    v9 = 0;
  else
    v9 = __PAIR64__(v4, 3);
  if (v8)
    v10 = 0;
  else
    v10 = HIDWORD(v4);
  v11 = 2 * v6;
  if ((v11 & (v11 - 1)) != 0)
    v12 = 1;
  else
    v12 = v11 - 1;
  v13 = v12 | (v12 >> 1) | ((v12 | (v12 >> 1)) >> 2);
  v14 = v13 | (v13 >> 4) | ((v13 | (v13 >> 4)) >> 8);
  v15 = v14 | (v14 >> 16) | ((v14 | (v14 >> 16)) >> 32);
  if (v15 + 1 > 8)
    v16 = v15 + 1;
  else
    v16 = 8;
  sub_2399168C0(v7, 2 * (v10 * v6), v16);
  *(_QWORD *)(a1 + 80) = v9;
  *(_DWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 92) = (2 * *(_QWORD *)v18) & 0xFFFFFFFEFFFFFFFELL;
  *(_DWORD *)(a1 + 100) = 2 * v6;
  return a1;
}

uint64_t sub_2398580A8(uint64_t a1, _DWORD *a2)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  _BYTE v22[12];

  if (a2[1])
    v3 = *a2 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a2;
  if (v3)
    v4 = 0;
  if ((_DWORD)v4)
    v5 = 3;
  else
    v5 = 0;
  v6 = HIDWORD(v4);
  if (HIDWORD(v4))
    v7 = (v5 * v4);
  else
    v7 = 0;
  v8 = __PAIR64__(v4, 3);
  *(_DWORD *)v22 = 1;
  *(_QWORD *)&v22[4] = v5 | (v7 << 32);
  *(_QWORD *)a1 = __PAIR64__(v4, 3);
  *(_DWORD *)(a1 + 8) = HIDWORD(v4);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)v22;
  *(_DWORD *)(a1 + 20) = v7;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)&v22[4];
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 52) = 0;
  v9 = (_QWORD *)(a1 + 56);
  v10 = __PAIR64__(v4, 3) >> 32;
  if ((_DWORD)v8)
    v11 = v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v6 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v8;
  if (v12)
    v14 = 0;
  else
    v14 = v6;
  v15 = 4 * v7;
  if ((v15 & (v15 - 1)) != 0)
    v16 = 3;
  else
    v16 = v15 - 1;
  v17 = v16 | (v16 >> 1) | ((v16 | (v16 >> 1)) >> 2);
  v18 = v17 | (v17 >> 4) | ((v17 | (v17 >> 4)) >> 8);
  v19 = v18 | (v18 >> 16) | ((v18 | (v18 >> 16)) >> 32);
  if (v19 + 1 > 8)
    v20 = v19 + 1;
  else
    v20 = 8;
  sub_2399168C0(v9, 4 * (v14 * v7), v20);
  *(_QWORD *)(a1 + 80) = v13;
  *(_DWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 92) = (4 * *(_QWORD *)v22) & 0xFFFFFFFCFFFFFFFCLL;
  *(_DWORD *)(a1 + 100) = 4 * v7;
  return a1;
}

uint64_t sub_239858210(uint64_t a1, _DWORD *a2)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  _BYTE v22[12];

  if (a2[1])
    v3 = *a2 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a2;
  if (v3)
    v4 = 0;
  v5 = 4 * ((_DWORD)v4 != 0);
  v6 = HIDWORD(v4);
  if (HIDWORD(v4))
    v7 = (v5 * v4);
  else
    v7 = 0;
  v8 = __PAIR64__(v4, 4);
  *(_DWORD *)v22 = 1;
  *(_QWORD *)&v22[4] = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_QWORD *)a1 = __PAIR64__(v4, 4);
  *(_DWORD *)(a1 + 8) = HIDWORD(v4);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)v22;
  *(_DWORD *)(a1 + 20) = v7;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)&v22[4];
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 52) = 0;
  v9 = (_QWORD *)(a1 + 56);
  v10 = __PAIR64__(v4, 4) >> 32;
  if ((_DWORD)v8)
    v11 = v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v6 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v8;
  if (v12)
    v14 = 0;
  else
    v14 = v6;
  v15 = 2 * v7;
  if ((v15 & (v15 - 1)) != 0)
    v16 = 1;
  else
    v16 = v15 - 1;
  v17 = v16 | (v16 >> 1) | ((v16 | (v16 >> 1)) >> 2);
  v18 = v17 | (v17 >> 4) | ((v17 | (v17 >> 4)) >> 8);
  v19 = v18 | (v18 >> 16) | ((v18 | (v18 >> 16)) >> 32);
  if (v19 + 1 > 8)
    v20 = v19 + 1;
  else
    v20 = 8;
  sub_2399168C0(v9, 2 * (v14 * v7), v20);
  *(_QWORD *)(a1 + 80) = v13;
  *(_DWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 92) = (2 * *(_QWORD *)v22) & 0xFFFFFFFEFFFFFFFELL;
  *(_DWORD *)(a1 + 100) = 2 * v7;
  return a1;
}

uint64_t sub_239858380(uint64_t a1, _DWORD *a2)
{
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  BOOL v11;
  BOOL v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  _BYTE v23[12];

  if (a2[1])
    v3 = *a2 == 0;
  else
    v3 = 1;
  v4 = *(_QWORD *)a2;
  if (v3)
    v4 = 0;
  v5 = 4 * ((_DWORD)v4 != 0);
  v6 = HIDWORD(v4);
  if (HIDWORD(v4))
    v7 = (v5 * v4);
  else
    v7 = 0;
  v8 = __PAIR64__(v4, 4);
  *(_DWORD *)v23 = 1;
  *(_QWORD *)&v23[4] = v5 & 0x3FFFFFFFFLL | ((unint64_t)(v7 >> 2) << 34);
  *(_QWORD *)a1 = __PAIR64__(v4, 4);
  *(_DWORD *)(a1 + 8) = HIDWORD(v4);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)v23;
  *(_DWORD *)(a1 + 20) = v7;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)&v23[4];
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 52) = 0;
  v9 = (_QWORD *)(a1 + 56);
  v10 = __PAIR64__(v4, 4) >> 32;
  if ((_DWORD)v8)
    v11 = v10 == 0;
  else
    v11 = 1;
  v12 = v11 || (_DWORD)v6 == 0;
  if (v12)
    v13 = 0;
  else
    v13 = v8;
  if (v12)
    v14 = 0;
  else
    v14 = v6;
  v15 = 4 * v7;
  v16 = v15 - 1;
  v3 = (v15 & (v15 - 1)) == 0;
  v17 = 3;
  if (v3)
    v17 = v16;
  v18 = v17 | (v17 >> 1) | ((v17 | (v17 >> 1)) >> 2);
  v19 = v18 | (v18 >> 4) | ((v18 | (v18 >> 4)) >> 8);
  v20 = v19 | (v19 >> 16) | ((v19 | (v19 >> 16)) >> 32);
  if (v20 + 1 > 8)
    v21 = v20 + 1;
  else
    v21 = 8;
  sub_2399168C0(v9, 4 * (v14 * v7), v21);
  *(_QWORD *)(a1 + 80) = v13;
  *(_DWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 92) = (4 * *(_QWORD *)v23) & 0xFFFFFFFCFFFFFFFCLL;
  *(_DWORD *)(a1 + 100) = 4 * v7;
  return a1;
}

void sub_2398584F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 84, a3, a4);
}

void sub_2398584FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  sub_239A444D4(a1, 78, a3, a4);
}

void sub_239858504(uint64_t a1, int a2)
{
  sub_2398585C4(a2);
}

void sub_239858534(uint64_t a1, int a2)
{
  sub_239862EC8(a2);
}

void sub_239858564(uint64_t a1, int a2)
{
  sub_23986B880(a2);
}

void sub_239858594(uint64_t a1, int a2)
{
  sub_239871F44(a2);
}

void sub_2398585C4(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2398585E8@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398586BC(a1, a2);
}

double sub_2398585F4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398595EC(a1, a2);
}

double sub_239858600@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23985BBA8(a1, a2);
}

double sub_23985860C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23985E9F0(a1, a2);
}

double sub_239858618@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239861AA4(a1, a2);
}

double sub_239858624@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239862AE8(a1, a2);
}

uint64_t sub_2398586BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_239858808(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDA18;
  sub_239858A98((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_239859124(*(_QWORD *)a1, (uint64_t)&v11);
  *a2 = &off_250ADB778;
  sub_23982F700((uint64_t)&v11, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_2398587AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398587D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398587EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239858808(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 9;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_239858948((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_23982F700((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_23985890C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239858934(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239858948(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 9);
  *a2 = &off_250AEDA18;
  sub_239858A98((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239858A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239858A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239858A98(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int16 v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;

  sub_239858B98(a1, &v13);
  v12 = v13;
  v13 = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v4 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v4 = 0;
  v5 = *(_WORD *)(a1 + 60);
  sub_239826C30(a2, &v12, v4);
  *(_WORD *)(a2 + 120) = v5;
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239858B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_239858B98(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 9)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239858DD8(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_239858D78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239858DD8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239858E50();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239858E50()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256934288);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256934288))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397ABE44();
    sub_239859054((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239859054((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256934270, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256934270, &dword_23940C000);
          __cxa_guard_release(&qword_256934288);
          return &stru_256934270;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256934270;
}

void sub_239858FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256934288);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256934288);
  _Unwind_Resume(a1);
}

void sub_239859054(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_2398590E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239859124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_2398592C8(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239859264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_2398592C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  size_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_239859420(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_239859420(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397CB3C8(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239859588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398595EC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239858808(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDB98;
  sub_239859828((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239859700(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398596C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398596E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239859700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEAAC8;
  sub_23985B93C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEA20[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2398302E4(a2, (uint64_t)(a4 + 1));
}

void sub_2398597EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239859800(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239859814(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BA08C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239859828(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_239859928(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239826CEC(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_23985990C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_239859928(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 10)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239859B68(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_239859B08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239859B68(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239859BE0();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239859BE0()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569342A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569342A8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397AC68C();
    sub_239859DE4((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_239859DE4((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256934290, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256934290, &dword_23940C000);
          __cxa_guard_release(&qword_2569342A8);
          return &stru_256934290;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256934290;
}

void sub_239859D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569342A8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569342A8);
  _Unwind_Resume(a1);
}

void sub_239859DE4(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239859E78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239859EB4(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_239859EFC(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_239859EC4(uint64_t **a1, uint64_t a2)
{
  return sub_23985AB28(**a1, (*a1)[1], a2);
}

uint64_t sub_239859ED4(uint64_t **a1)
{
  char v2;

  return sub_23985A024(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_239859EFC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  double v14;
  int v15;
  double v16;
  unsigned int v17;
  unsigned int v18;
  _QWORD v20[2];
  _QWORD v21[2];
  _QWORD v22[2];
  double v23;
  double v24;
  double v25;
  double v26;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (!*(_BYTE *)(a3 + 16))
  {
    v13 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    LOWORD(v17) = 0;
    v18 = 0xFFFF;
    if (v10)
      goto LABEL_17;
    goto LABEL_15;
  }
  v11 = *(double *)a3;
  a6 = 0.0;
  if (*(double *)a3 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a3 + 8) <= 255.0)
    v12 = *(double *)(a3 + 8);
  v13 = (int)v12;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v14 = *(double *)(a3 + 24);
  a6 = 0.0;
  if (v14 < 0.0)
    v14 = 0.0;
  v15 = (int)v14;
  v16 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v16 = *(double *)(a3 + 32);
  v17 = v15 | ((int)v16 << 16);
  v18 = HIWORD(v17);
  if (v10 != (unsigned __int16)v17)
    goto LABEL_17;
LABEL_15:
  if (v18 == v13)
    return sub_23985A024(a1, a2, (uint64_t)v22);
LABEL_17:
  v26 = (double)v10;
  v24 = (double)(unsigned __int16)v17;
  v25 = 1.0 / ((double)v13 - (double)v10);
  a4.n128_f64[0] = (double)v18 - v24;
  v23 = a4.n128_f64[0];
  v22[0] = &v26;
  v22[1] = &v25;
  v21[0] = &v24;
  v21[1] = &v23;
  v20[0] = v22;
  v20[1] = v21;
  return sub_23985A520(a1, a2, (uint64_t)v20, a4, v24, a6, a7, a8, a9, a10);
}

uint64_t sub_23985A024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_23985A2CC((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23985A268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23985A2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  _WORD *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  _WORD *v32;
  int v33;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 48);
    v13 = *(unsigned int *)(a3 + 52);
    v14 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(unsigned __int8 **)(a2 + 24);
    }
    v21 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v21)
    {
      v22 = *(_QWORD *)(a3 + 8);
      v23 = *(std::__shared_weak_count **)(a3 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a3 + 24);
    }
    v27 = v3 - 1;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[1];
          v21[2] = v14[2];
          v14 += v11;
          v21 += v13;
          --v9;
        }
        while (v9);
LABEL_36:
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        return result;
      }
      v28 = 0;
      v29 = v21 + 2;
      v30 = v14 + 2;
      do
      {
        v31 = v30;
        v32 = v29;
        v33 = v3 - 1;
        do
        {
          *(v32 - 2) = *(v31 - 2);
          *(v32 - 1) = *(v31 - 1);
          result = *v31;
          *v32 = result;
          v32 += v12;
          v31 += v10;
          --v33;
        }
        while (v33);
        *(v32 - 2) = *(v31 - 2);
        *(v32 - 1) = *(v31 - 1);
        *v32 = *v31;
        v14 += v11;
        v21 += v13;
        ++v28;
        v29 += v13;
        v30 += v11;
      }
      while (v28 != v9);
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v14 += v10;
        v21 += v12;
        --v27;
      }
      while (v27);
    }
    goto LABEL_36;
  }
  return result;
}

uint64_t sub_23985A520(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f64[0] = sub_23985A7C8(&v36, a1, a2, a4.n128_f64[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23985A764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23985A7C8(double *****a1, uint64_t a2, uint64_t a3, double result, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int v10;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  _WORD *v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  double v32;
  unsigned int i;
  uint64_t v34;
  int v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  _OWORD v41[2];

  v11 = *(_DWORD *)(a2 + 32);
  v10 = *(_DWORD *)(a2 + 36);
  v12 = *(_DWORD *)(a2 + 40);
  if (v11)
    v13 = v10 == 0;
  else
    v13 = 1;
  if (!v13 && v12 != 0)
  {
    v35 = v11 - 1;
    v18 = *(unsigned int *)(a2 + 48);
    v19 = *(unsigned int *)(a3 + 48);
    v36 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v34 = 0;
    v37 = v10 - 1;
    v38 = v18 | (v19 << 32);
    v39 = v12 - 1;
    v40 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v20 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v20)
    {
      v21 = *(_QWORD *)(a2 + 8);
      v22 = *(std::__shared_weak_count **)(a2 + 16);
      if (v22)
      {
        p_shared_owners = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(p_shared_owners);
        while (__stxr(v24 + 1, p_shared_owners));
        do
          v25 = __ldaxr(p_shared_owners);
        while (__stlxr(v25 - 1, p_shared_owners));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v21 + 88))(v21, 0, "unknown location");
      v20 = *(_BYTE **)(a2 + 24);
    }
    v26 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v26)
    {
      v27 = *(_QWORD *)(a3 + 8);
      v28 = *(std::__shared_weak_count **)(a3 + 16);
      if (v28)
      {
        v29 = (unint64_t *)&v28->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v27 + 88))(v27, 1, "unknown location");
      v26 = *(_WORD **)(a3 + 24);
    }
    v32 = 0.0;
    memset(v41, 0, sizeof(v41));
    if (v39)
    {
      for (i = 0; i < v39; ++i)
      {
        v32 = sub_23985A9B0(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
        v20 += v40;
        v26 += HIDWORD(v40);
      }
    }
    return sub_23985A9B0(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
  }
  return result;
}

double sub_23985A9B0(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, _WORD *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 2 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *a5 = llround(v25);
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      v29 = v18 + v19 * v28;
      a5[1] = llround(v29);
      LOBYTE(v29) = a4[2];
      v30 = v17 * ((double)*(unint64_t *)&v29 - v16);
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      a12 = v18 + v19 * v32;
      a5[2] = llround(a12);
      a4 += v20;
      a5 = (_WORD *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v33 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v34 = fmax(v33, 0.0);
  if (v33 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  v36 = v18 + v19 * v35;
  *a5 = llround(v36);
  LOBYTE(v36) = a4[1];
  v37 = v17 * ((double)*(unint64_t *)&v36 - v16);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  v40 = v18 + v19 * v39;
  a5[1] = llround(v40);
  LOBYTE(v40) = a4[2];
  v41 = v17 * ((double)*(unint64_t *)&v40 - v16);
  v42 = fmax(v41, 0.0);
  if (v41 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  result = v18 + v19 * v43;
  a5[2] = llround(result);
  return result;
}

uint64_t sub_23985AB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  __int16 *v8;
  __int16 *v9;
  char *v10;
  __int16 *v11;
  char v12;
  char v13;
  __int16 v14;
  __int16 v15;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    if ((int)v6 <= 0xFF)
    {
      v15 = v5;
      v14 = (int)v6;
      v13 = v5;
      v12 = (int)v6;
      v8 = (__int16 *)&v13;
      v9 = &v15;
      v10 = &v12;
      v11 = &v14;
      return sub_23985ABFC(a1, a2, (uint64_t)&v8);
    }
    v15 = v5;
    LOBYTE(v14) = v5;
  }
  else
  {
    v15 = 0;
    LOBYTE(v14) = 0;
  }
  v8 = &v14;
  v9 = &v15;
  return sub_23985B210(a1, a2, (uint64_t)&v8);
}

uint64_t sub_23985ABFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_23985AEA4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23985AE40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int8 ****sub_23985AEA4(unsigned __int8 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  unsigned __int8 ****v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_23985B08C(&v26, v33, v10, v13, v19);
        v13 += v32;
        v19 += HIDWORD(v32);
      }
    }
    return (unsigned __int8 ****)sub_23985B08C(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_23985B08C(_DWORD *result, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, _WORD *a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned __int8 *v13;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = result[6];
    v9 = 2 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LODWORD(v10) = *a4;
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_11;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_11:
      *a5 = (_WORD)v10;
      LODWORD(v10) = a4[1];
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_16;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_16:
      a5[1] = (_WORD)v10;
      LODWORD(v10) = a4[2];
      if (v10 < *v7)
      {
        v10 = v6[1];
      }
      else
      {
        if (v10 <= *v6[2])
          goto LABEL_5;
        v10 = v6[3];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_5:
      a5[2] = (_WORD)v10;
      a4 += v8;
      a5 = (_WORD *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  LODWORD(v11) = *a4;
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_24;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_24:
  *a5 = (_WORD)v11;
  LODWORD(v11) = a4[1];
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_29;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_29:
  a5[1] = (_WORD)v11;
  v12 = a4[2];
  if (v12 < *v7)
  {
    v13 = v6[1];
LABEL_33:
    LOWORD(v12) = *(_WORD *)v13;
    goto LABEL_34;
  }
  if (v12 > *v6[2])
  {
    v13 = v6[3];
    goto LABEL_33;
  }
LABEL_34:
  a5[2] = v12;
  return result;
}

uint64_t sub_23985B210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int8 ***)&v28;
    sub_23985B4B8(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23985B454(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int8 ****sub_23985B4B8(unsigned __int8 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  unsigned __int8 ****v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    return (unsigned __int8 ****)sub_23985B65C(&v25, v32, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_23985B65C(_DWORD *result, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, _WORD *a5)
{
  unsigned int i;
  int v6;
  unsigned __int8 **v7;
  unsigned __int8 *v8;
  _WORD *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned __int8 **v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;

  if (result[8])
  {
    for (i = 0; i < result[8]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = result[5];
      v7 = **a3;
      v8 = *v7;
      v9 = a5;
      v10 = a4;
      if (v6)
      {
        v11 = result[6];
        v12 = 2 * result[7];
        v9 = a5;
        v10 = a4;
        do
        {
          *a2 = v10;
          a2[2] = v9;
          v13 = *v10;
          if (v13 < *v8)
          {
            *v9 = *(_WORD *)v7[1];
            v14 = v10[1];
            if (v14 >= *v8)
            {
LABEL_9:
              v9[1] = v14;
              v15 = v10[2];
              if (v15 < *v8)
                goto LABEL_13;
              goto LABEL_6;
            }
          }
          else
          {
            *v9 = v13;
            v14 = v10[1];
            if (v14 >= *v8)
              goto LABEL_9;
          }
          v9[1] = *(_WORD *)v7[1];
          v15 = v10[2];
          if (v15 < *v8)
LABEL_13:
            LOWORD(v15) = *(_WORD *)v7[1];
LABEL_6:
          v9[2] = v15;
          v10 += v11;
          v9 = (_WORD *)((char *)v9 + v12);
          --v6;
        }
        while (v6);
      }
      *a2 = v10;
      a2[2] = v9;
      v16 = *v10;
      if (v16 < *v8)
      {
        *v9 = *(_WORD *)v7[1];
        v17 = v10[1];
        if (v17 >= *v8)
        {
LABEL_16:
          v9[1] = v17;
          v18 = v10[2];
          if (v18 < *v8)
            goto LABEL_20;
          goto LABEL_3;
        }
      }
      else
      {
        *v9 = v16;
        v17 = v10[1];
        if (v17 >= *v8)
          goto LABEL_16;
      }
      v9[1] = *(_WORD *)v7[1];
      v18 = v10[2];
      if (v18 < *v8)
LABEL_20:
        LOWORD(v18) = *(_WORD *)v7[1];
LABEL_3:
      v9[2] = v18;
      a4 += result[9];
      a5 += result[10];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v19 = result[5];
  v20 = **a3;
  v21 = *v20;
  if (v19)
  {
    v22 = result[6];
    v23 = 2 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v24 = *a4;
      if (v24 < *v21)
      {
        *a5 = *(_WORD *)v20[1];
        v25 = a4[1];
        if (v25 >= *v21)
        {
LABEL_26:
          a5[1] = v25;
          v26 = a4[2];
          if (v26 < *v21)
            goto LABEL_30;
          goto LABEL_23;
        }
      }
      else
      {
        *a5 = v24;
        v25 = a4[1];
        if (v25 >= *v21)
          goto LABEL_26;
      }
      a5[1] = *(_WORD *)v20[1];
      v26 = a4[2];
      if (v26 < *v21)
LABEL_30:
        LOWORD(v26) = *(_WORD *)v20[1];
LABEL_23:
      a5[2] = v26;
      a4 += v22;
      a5 = (_WORD *)((char *)a5 + v23);
      --v19;
    }
    while (v19);
  }
  *a2 = a4;
  a2[2] = a5;
  v27 = *a4;
  if (v27 >= *v21)
  {
    *a5 = v27;
    v28 = a4[1];
    if (v28 >= *v21)
      goto LABEL_33;
LABEL_36:
    a5[1] = *(_WORD *)v20[1];
    v29 = a4[2];
    if (v29 >= *v21)
      goto LABEL_34;
    goto LABEL_37;
  }
  *a5 = *(_WORD *)v20[1];
  v28 = a4[1];
  if (v28 < *v21)
    goto LABEL_36;
LABEL_33:
  a5[1] = v28;
  v29 = a4[2];
  if (v29 >= *v21)
  {
LABEL_34:
    a5[2] = v29;
    return result;
  }
LABEL_37:
  a5[2] = *(_WORD *)v20[1];
  return result;
}

void sub_23985B93C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_23985BA44(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_23985BA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_23985BA44(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 10);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_23985BB94(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_23985BBA8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239858808(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDD18;
  sub_23985BDE4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23985BCBC(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23985BC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23985BCA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23985BCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEABC0;
  sub_23985E784(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEA38[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239830F44(a2, (uint64_t)(a4 + 1));
}

void sub_23985BDA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23985BDBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23985BDD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BACD4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23985BDE4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_23985BEE4(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239826DA8(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_23985BEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_23985BEE4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 11)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23985C124(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_23985C0C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23985C124(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23985C19C();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23985C19C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569342C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569342C8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397ACED4();
    sub_23985C3A0((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23985C3A0((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569342B0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569342B0, &dword_23940C000);
          __cxa_guard_release(&qword_2569342C8);
          return &stru_2569342B0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569342B0;
}

void sub_23985C2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569342C8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569342C8);
  _Unwind_Resume(a1);
}

void sub_23985C3A0(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23985C434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23985C470(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23985C580(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23985C480(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_23985D330((uint64_t)v13, 2080373759, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -65504.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65504.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  else
    _Q0.n128_f64[0] = 65504.0;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_23985D330((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_23985C558(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23985C6C4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23985C580(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  unsigned int v4;
  double v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v5 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    _Q0.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = (int)_Q0.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = 255;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v6;
  if (_ZF)
    return sub_23985C6C4(a1, a2, (uint64_t)v23, _Q0);
  v27 = (double)v4;
  __asm { FCVT            D0, H0 }
  v25 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v24 = _Q0.n128_u64[0];
  v23[0] = &v27;
  v23[1] = &v26;
  v22[0] = &v25;
  v22[1] = &v24;
  v21[0] = v23;
  v21[1] = v22;
  return sub_23985CC34(a1, a2, (uint64_t)v21, _Q0, _D1, 1.0 / ((double)v6 - (double)v4));
}

uint64_t sub_23985C6C4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_23985C96C(a4.n128_f32[0], (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23985C908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_23985C96C@<H0>(float _S0@<S0>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>)
{
  int v4;
  int v5;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  _WORD *v30;
  _BYTE *v31;
  _BYTE *v32;
  _WORD *v33;
  int v34;

  v4 = *(_DWORD *)(a3 + 36);
  v5 = *(_DWORD *)(a3 + 40);
  if (*(_DWORD *)(a3 + 32))
    _ZF = v4 == 0;
  else
    _ZF = 1;
  if (!_ZF && v5 != 0)
  {
    v10 = v5 - 1;
    v11 = *(unsigned int *)(a3 + 48);
    v12 = *(unsigned int *)(a3 + 52);
    v14 = *(unsigned int *)(a4 + 48);
    v13 = *(unsigned int *)(a4 + 52);
    v15 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v15 = *(_BYTE **)(a3 + 24);
    }
    v21 = *(_WORD **)(a4 + 24);
    if (*(_BYTE *)(a4 + 72) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a4 + 24);
    }
    v27 = v4 - 1;
    v28 = 2 * v14;
    if (v10)
    {
      if (v4 == 1)
      {
        do
        {
          LOBYTE(_S0) = *v15;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v21 = _S0;
          LOBYTE(_S0) = v15[1];
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v21[1] = _S0;
          LOBYTE(_S0) = v15[2];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v21[2] = LOWORD(_S0);
          v15 += v12;
          v21 += v13;
          --v10;
        }
        while (v10);
      }
      else
      {
        v29 = 0;
        v30 = v21 + 2;
        v31 = v15 + 2;
        do
        {
          v32 = v31;
          v33 = v30;
          v34 = v4 - 1;
          do
          {
            LOBYTE(_S0) = *(v32 - 2);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v33 - 2) = _S0;
            LOBYTE(_S0) = *(v32 - 1);
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *(v33 - 1) = _S0;
            LOBYTE(_S0) = *v32;
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v33 = LOWORD(_S0);
            v33 = (_WORD *)((char *)v33 + v28);
            v32 += v11;
            --v34;
          }
          while (v34);
          LOBYTE(_S0) = *(v32 - 2);
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *(v33 - 2) = _S0;
          LOBYTE(_S0) = *(v32 - 1);
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *(v33 - 1) = _S0;
          LOBYTE(_S0) = *v32;
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *v33 = LOWORD(_S0);
          v15 += v12;
          v21 += v13;
          ++v29;
          v30 += v13;
          v31 += v12;
        }
        while (v29 != v10);
      }
    }
    if (v4 != 1)
    {
      do
      {
        LOBYTE(_S0) = *v15;
        *(float *)&_S0 = (float)LODWORD(_S0);
        __asm { FCVT            H0, S0 }
        *v21 = _S0;
        LOBYTE(_S0) = v15[1];
        *(float *)&_S0 = (float)_S0;
        __asm { FCVT            H0, S0 }
        v21[1] = _S0;
        LOBYTE(_S0) = v15[2];
        _S0 = (float)_S0;
        __asm { FCVT            H0, S0 }
        v21[2] = LOWORD(_S0);
        v15 += v11;
        v21 = (_WORD *)((char *)v21 + v28);
        --v27;
      }
      while (v27);
    }
    LOBYTE(_S0) = *v15;
    *(float *)&_S0 = (float)LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    *v21 = _S0;
    LOBYTE(_S0) = v15[1];
    *(float *)&_S0 = (float)_S0;
    __asm { FCVT            H0, S0 }
    v21[1] = _S0;
    LOBYTE(_S0) = v15[2];
    _S0 = (float)_S0;
    __asm { FCVT            H0, S0 }
    v21[2] = LOWORD(_S0);
  }
  return LOWORD(_S0);
}

uint64_t sub_23985CC34(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double ****v32;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v32 = (double ****)&v31;
    a4.n128_f64[0] = sub_23985CEDC(&v32, a1, a2, a4.n128_f64[0], a5, a6);
  }
LABEL_37:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23985CE78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23985CEDC(double *****a1, uint64_t a2, uint64_t a3, double result, double a5, double a6)
{
  int v6;
  int v7;
  int v8;
  BOOL v9;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  _WORD *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  unsigned int i;
  uint64_t v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  _OWORD v37[2];

  v7 = *(_DWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 36);
  v8 = *(_DWORD *)(a2 + 40);
  if (v7)
    v9 = v6 == 0;
  else
    v9 = 1;
  if (!v9 && v8 != 0)
  {
    v31 = v7 - 1;
    v14 = *(unsigned int *)(a2 + 48);
    v15 = *(unsigned int *)(a3 + 48);
    v32 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v30 = 0;
    v33 = v6 - 1;
    v34 = v14 | (v15 << 32);
    v35 = v8 - 1;
    v36 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v16 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v16)
    {
      v17 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
        do
          v21 = __ldaxr(p_shared_owners);
        while (__stlxr(v21 - 1, p_shared_owners));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
      v16 = *(_BYTE **)(a2 + 24);
    }
    v22 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v22)
    {
      v23 = *(_QWORD *)(a3 + 8);
      v24 = *(std::__shared_weak_count **)(a3 + 16);
      if (v24)
      {
        v25 = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v23 + 88))(v23, 1, "unknown location");
      v22 = *(_WORD **)(a3 + 24);
    }
    v28 = 0.0;
    memset(v37, 0, sizeof(v37));
    if (v35)
    {
      for (i = 0; i < v35; ++i)
      {
        *(_QWORD *)&v28 = sub_23985D0C4(&v30, v37, a1, v16, v22, v28, a5, a6);
        v16 += v36;
        v22 += HIDWORD(v36);
      }
    }
    *(_QWORD *)&result = sub_23985D0C4(&v30, v37, a1, v16, v22, v28, a5, a6);
  }
  return result;
}

__int16 sub_23985D0C4@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, double *****a3@<X2>, _BYTE *a4@<X3>, _WORD *a5@<X4>, double a6@<D0>, double a7@<D1>, double _D2@<D2>)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v27;
  double **v28;
  double **v29;
  double v30;
  double v31;
  double v32;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  double ***v40;
  double **v41;
  double **v42;
  double v43;
  double v44;
  double v45;
  double ***v47;
  double **v48;
  double **v49;
  double v50;
  double v51;
  double v52;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOBYTE(_D2) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&_D2 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      _D2 = **v10 + v14 * *v10[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a5 = LOWORD(_D2);
      v20 = **a3;
      LOBYTE(_D2) = *(_BYTE *)(*a2 + 1);
      v22 = *v20;
      v21 = v20[1];
      v23 = ((double)*(unint64_t *)&_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = **v21 + v25 * *v21[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 2) = LOWORD(_D2);
      v27 = **a3;
      LOBYTE(_D2) = *(_BYTE *)(*a2 + 2);
      v29 = *v27;
      v28 = v27[1];
      v30 = ((double)*(unint64_t *)&_D2 - **v29) * *v29[1];
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      _D2 = **v28 + v32 * *v28[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 4) = LOWORD(_D2);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v33 = **a3;
  LOBYTE(a6) = *a4;
  v35 = *v33;
  v34 = v33[1];
  v36 = ((double)*(unint64_t *)&a6 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  _D0 = **v34 + v38 * *v34[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *a5 = LOWORD(_D0);
  v40 = **a3;
  LOBYTE(_D0) = *(_BYTE *)(*a2 + 1);
  v42 = *v40;
  v41 = v40[1];
  v43 = ((double)*(unint64_t *)&_D0 - **v42) * *v42[1];
  v44 = fmax(v43, 0.0);
  if (v43 <= 1.0)
    v45 = v44;
  else
    v45 = 1.0;
  _D0 = **v41 + v45 * *v41[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = LOWORD(_D0);
  v47 = **a3;
  LOBYTE(_D0) = *(_BYTE *)(*a2 + 2);
  v49 = *v47;
  v48 = v47[1];
  v50 = ((double)*(unint64_t *)&_D0 - **v49) * *v49[1];
  v51 = fmax(v50, 0.0);
  if (v50 <= 1.0)
    v52 = v51;
  else
    v52 = 1.0;
  _S0 = **v48 + v52 * *v48[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 4) = result;
  return result;
}

uint64_t sub_23985D330(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  char *v23;
  __int16 *v24;
  char v25;
  char v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      LOBYTE(v27) = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_23985DB1C(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 255.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      LOBYTE(v27) = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_23985E150(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_23985C6C4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = (__int16 *)&v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_23985D448(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_23985D448(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_23985D6F0(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23985D68C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23985D6F0(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_23985D8D8(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_23985D8D8(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_23985D8D8@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  int v5;
  unsigned __int8 *v6;
  unsigned __int8 **v8;
  unsigned int v9;
  unsigned __int8 **v16;
  unsigned int v17;
  unsigned __int8 *v18;
  unsigned __int8 **v21;
  unsigned int v22;
  unsigned __int8 **v24;
  unsigned int v25;
  unsigned __int8 **v28;
  unsigned int v29;
  unsigned __int8 *v30;
  uint64_t v33;
  unsigned __int8 **v34;
  unsigned int v35;
  unsigned __int8 *v36;
  __int16 result;
  unsigned __int8 *v38;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = *a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
        {
          _S0 = (float)v9;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *(_WORD *)v8[3];
        }
      }
      else
      {
        _H0 = *(_WORD *)v8[1];
      }
      *a5 = _H0;
      v16 = **a3;
      v17 = *(unsigned __int8 *)(*a2 + 1);
      if (v17 < **v16)
        break;
      if (v17 > *v16[2])
      {
        v18 = v16[3];
        goto LABEL_15;
      }
      _S0 = (float)v17;
      __asm { FCVT            H0, S0 }
LABEL_17:
      *(_WORD *)(a2[2] + 2) = _H0;
      v21 = **a3;
      v22 = *(unsigned __int8 *)(*a2 + 2);
      if (v22 < **v21)
      {
        v6 = v21[1];
      }
      else
      {
        if (v22 <= *v21[2])
        {
          _S0 = (float)v22;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = v21[3];
      }
      _H0 = *(_WORD *)v6;
LABEL_5:
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      if (++v5 >= a1[5])
        goto LABEL_21;
    }
    v18 = v16[1];
LABEL_15:
    _H0 = *(_WORD *)v18;
    goto LABEL_17;
  }
LABEL_21:
  *a2 = a4;
  a2[2] = a5;
  v24 = **a3;
  v25 = *a4;
  if (v25 >= **v24)
  {
    if (v25 <= *v24[2])
    {
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *(_WORD *)v24[3];
    }
  }
  else
  {
    _H0 = *(_WORD *)v24[1];
  }
  *a5 = _H0;
  v28 = **a3;
  v29 = *(unsigned __int8 *)(*a2 + 1);
  if (v29 < **v28)
  {
    v30 = v28[1];
LABEL_30:
    _H0 = *(_WORD *)v30;
    goto LABEL_32;
  }
  if (v29 > *v28[2])
  {
    v30 = v28[3];
    goto LABEL_30;
  }
  _S0 = (float)v29;
  __asm { FCVT            H0, S0 }
LABEL_32:
  *(_WORD *)(a2[2] + 2) = _H0;
  v33 = a2[2];
  v34 = **a3;
  v35 = *(unsigned __int8 *)(*a2 + 2);
  if (v35 >= **v34)
  {
    if (v35 <= *v34[2])
    {
      _S0 = (float)v35;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v33 + 4) = result;
    }
    else
    {
      v38 = v34[3];
      result = *(_WORD *)v38;
      *(_WORD *)(v33 + 4) = *(_WORD *)v38;
    }
  }
  else
  {
    v36 = v34[1];
    result = *(_WORD *)v36;
    *(_WORD *)(v33 + 4) = *(_WORD *)v36;
  }
  return result;
}

uint64_t sub_23985DB1C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_23985DDC4(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23985DD60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23985DDC4(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_23985DFAC(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_23985DFAC(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_23985DFAC@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int8 **v7;
  unsigned int v8;
  unsigned __int8 **v15;
  unsigned int v16;
  unsigned __int8 **v19;
  unsigned int v20;
  unsigned __int8 **v22;
  unsigned int v23;
  unsigned __int8 **v26;
  unsigned int v27;
  uint64_t v30;
  unsigned __int8 **v31;
  unsigned int v32;
  unsigned __int8 *v33;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 >= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int8 *)(*a2 + 1);
      if (v16 >= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int8 *)(*a2 + 2);
      if (v20 < **v19)
      {
        _H0 = *(_WORD *)v19[1];
      }
      else
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  v23 = *a4;
  if (v23 >= **v22)
  {
    _S0 = (float)v23;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v22[1];
  }
  *a5 = _H0;
  v26 = **a3;
  v27 = *(unsigned __int8 *)(*a2 + 1);
  if (v27 >= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v26[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v30 = a2[2];
  v31 = **a3;
  v32 = *(unsigned __int8 *)(*a2 + 2);
  if (v32 >= **v31)
  {
    _S0 = (float)v32;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v30 + 4) = result;
  }
  else
  {
    v33 = v31[1];
    result = *(_WORD *)v33;
    *(_WORD *)(v30 + 4) = *(_WORD *)v33;
  }
  return result;
}

uint64_t sub_23985E150(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f64[0] = sub_23985E3F8(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23985E394(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23985E3F8(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_23985E5E0(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    *(_QWORD *)&result = sub_23985E5E0(&v27, v34, a1, v13, v19);
  }
  return result;
}

__int16 sub_23985E5E0@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int8 **v7;
  unsigned int v8;
  unsigned __int8 **v15;
  unsigned int v16;
  unsigned __int8 **v19;
  unsigned int v20;
  unsigned __int8 **v22;
  unsigned int v23;
  unsigned __int8 **v26;
  unsigned int v27;
  uint64_t v30;
  unsigned __int8 **v31;
  unsigned int v32;
  unsigned __int8 *v33;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 <= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int8 *)(*a2 + 1);
      if (v16 <= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int8 *)(*a2 + 2);
      if (v20 > **v19)
      {
        _H0 = *(_WORD *)v19[1];
      }
      else
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  v23 = *a4;
  if (v23 <= **v22)
  {
    _S0 = (float)v23;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v22[1];
  }
  *a5 = _H0;
  v26 = **a3;
  v27 = *(unsigned __int8 *)(*a2 + 1);
  if (v27 <= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v26[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v30 = a2[2];
  v31 = **a3;
  v32 = *(unsigned __int8 *)(*a2 + 2);
  if (v32 <= **v31)
  {
    _S0 = (float)v32;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v30 + 4) = result;
  }
  else
  {
    v33 = v31[1];
    result = *(_WORD *)v33;
    *(_WORD *)(v30 + 4) = *(_WORD *)v33;
  }
  return result;
}

void sub_23985E784(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_23985E88C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_23985E870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_23985E88C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 11);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_23985E9DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_23985E9F0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239858808(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDE98;
  sub_23985EC2C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23985EB04(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23985EACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23985EAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23985EB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEACB8;
  sub_239861838(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEA50[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239831AFC(a2, (uint64_t)(a4 + 1));
}

void sub_23985EBF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23985EC04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23985EC18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BB8AC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23985EC2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_23985ED2C(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 2) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239826E64(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_23985ED10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_23985ED2C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 12)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23985EF6C(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_23985EF0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23985EF6C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23985EFE4();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23985EFE4()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2569342E8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2569342E8))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397AD71C();
    sub_23985F1E8((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23985F1E8((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569342D0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569342D0, &dword_23940C000);
          __cxa_guard_release(&qword_2569342E8);
          return &stru_2569342D0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569342D0;
}

void sub_23985F134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2569342E8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2569342E8);
  _Unwind_Resume(a1);
}

void sub_23985F1E8(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23985F27C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23985F2B8(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return sub_23985F3B8(**a1, (*a1)[1], a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_23985F2C8(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  _QWORD v8[5];
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = (*a1)[1];
  v11[0] = **a1;
  v11[1] = v3;
  v10[0] = v11[0];
  v10[1] = v3;
  v9[0] = v11[0];
  v9[1] = v3;
  v8[0] = v11;
  v8[1] = v10;
  v8[2] = v9;
  v8[3] = v11[0];
  v8[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = -3.40282347e38;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 3.40282347e38;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 <= 3.40282347e38)
      v5 = v4;
    else
      v5 = 3.40282347e38;
    v6 = v5;
    return sub_239860024((uint64_t)v8, a3, v6);
  }
  else
  {
    a3.n128_u32[0] = -8388609;
    return sub_239860024((uint64_t)v8, a3, 3.4028e38);
  }
}

uint64_t sub_23985F390(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23985F4E8(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23985F3B8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  unsigned int v10;
  double v11;
  unsigned int v12;
  double v13;
  float v14;
  double v16;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  unint64_t v22;
  double v23;
  uint64_t v24;
  double v25;

  v10 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a3 + 16))
  {
    v11 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    a4.n128_u64[0] = 0x406FE00000000000;
    if (*(double *)(a3 + 8) <= 255.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v12 = (int)a4.n128_f64[0];
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      a4.n128_u64[0] = 0xC7EFFFFFE0000000;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
      a4.n128_f32[0] = a4.n128_f64[0];
      v13 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v13 = *(double *)(a3 + 32);
      v14 = v13;
      if (a4.n128_f32[0] != (float)v10 || v14 != (float)v12)
        goto LABEL_15;
      return sub_23985F4E8(a1, a2, (uint64_t)v21, a4);
    }
  }
  else
  {
    v12 = 255;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v14 = 1.0;
  a4.n128_u32[0] = 0;
  if ((float)v10 != 0.0 || 1.0 != (float)v12)
  {
LABEL_15:
    v25 = (double)v10;
    v23 = a4.n128_f32[0];
    v16 = v14;
    a4.n128_f64[0] = v16 - a4.n128_f32[0];
    v22 = a4.n128_u64[0];
    v21[0] = &v25;
    v21[1] = &v24;
    v20[0] = &v23;
    v20[1] = &v22;
    v19[0] = v21;
    v19[1] = v20;
    return sub_23985FA1C(a1, a2, (uint64_t)v19, a4, v16, 1.0 / ((double)v12 - (double)v10), 1.0, a8, a9, a10);
  }
  return sub_23985F4E8(a1, a2, (uint64_t)v21, a4);
}

uint64_t sub_23985F4E8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4 = sub_23985F790(a4, (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23985F72C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__n128 sub_23985F790(__n128 result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  BOOL v6;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  float *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  float *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  float *v33;
  int v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  float v43;
  float v44;

  v4 = *(_DWORD *)(a3 + 36);
  v5 = *(_DWORD *)(a3 + 40);
  if (*(_DWORD *)(a3 + 32))
    v6 = v4 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = v5 - 1;
    v11 = *(unsigned int *)(a3 + 48);
    v12 = *(unsigned int *)(a3 + 52);
    v14 = *(unsigned int *)(a4 + 48);
    v13 = *(unsigned int *)(a4 + 52);
    v15 = *(unsigned __int8 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v15 = *(unsigned __int8 **)(a3 + 24);
    }
    v21 = *(float **)(a4 + 24);
    if (*(_BYTE *)(a4 + 72) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(float **)(a4 + 24);
    }
    v27 = v4 - 1;
    v28 = 4 * v14;
    if (v10)
    {
      if (v4 == 1)
      {
        do
        {
          result.n128_u8[0] = *v15;
          v39 = (float)result.n128_u32[0];
          *v21 = v39;
          LOBYTE(v39) = v15[1];
          v40 = (float)LODWORD(v39);
          v21[1] = v40;
          LOBYTE(v40) = v15[2];
          result.n128_f32[0] = (float)LODWORD(v40);
          v21[2] = result.n128_f32[0];
          v15 += v12;
          v21 += v13;
          --v10;
        }
        while (v10);
      }
      else
      {
        v29 = 0;
        v30 = v21 + 2;
        v31 = v15 + 2;
        do
        {
          v32 = v31;
          v33 = v30;
          v34 = v4 - 1;
          do
          {
            result.n128_u8[0] = *(v32 - 2);
            v35 = (float)result.n128_u32[0];
            *(v33 - 2) = v35;
            LOBYTE(v35) = *(v32 - 1);
            v36 = (float)LODWORD(v35);
            *(v33 - 1) = v36;
            LOBYTE(v36) = *v32;
            result.n128_f32[0] = (float)LODWORD(v36);
            *v33 = result.n128_f32[0];
            v33 = (float *)((char *)v33 + v28);
            v32 += v11;
            --v34;
          }
          while (v34);
          result.n128_u8[0] = *(v32 - 2);
          v37 = (float)result.n128_u32[0];
          *(v33 - 2) = v37;
          LOBYTE(v37) = *(v32 - 1);
          v38 = (float)LODWORD(v37);
          *(v33 - 1) = v38;
          LOBYTE(v38) = *v32;
          result.n128_f32[0] = (float)LODWORD(v38);
          *v33 = result.n128_f32[0];
          v15 += v12;
          v21 += v13;
          ++v29;
          v30 += v13;
          v31 += v12;
        }
        while (v29 != v10);
      }
    }
    if (v4 != 1)
    {
      do
      {
        result.n128_u8[0] = *v15;
        v41 = (float)result.n128_u32[0];
        *v21 = v41;
        LOBYTE(v41) = v15[1];
        v42 = (float)LODWORD(v41);
        v21[1] = v42;
        LOBYTE(v42) = v15[2];
        result.n128_f32[0] = (float)LODWORD(v42);
        v21[2] = result.n128_f32[0];
        v15 += v11;
        v21 = (float *)((char *)v21 + v28);
        --v27;
      }
      while (v27);
    }
    result.n128_u8[0] = *v15;
    v43 = (float)result.n128_u32[0];
    *v21 = v43;
    LOBYTE(v43) = v15[1];
    v44 = (float)LODWORD(v43);
    v21[1] = v44;
    LOBYTE(v44) = v15[2];
    result.n128_f32[0] = (float)LODWORD(v44);
    v21[2] = result.n128_f32[0];
  }
  return result;
}

uint64_t sub_23985FA1C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double ****v36;

  v13 = *(_QWORD *)(a1 + 8);
  if (!v13)
    goto LABEL_17;
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a1 + 8);
  v18 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v18)
    goto LABEL_43;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v34 = 0;
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22)
      goto LABEL_33;
LABEL_18:
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(a2 + 8);
    v27 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v27)
      goto LABEL_29;
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v33, v22, 1);
    v35 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v34, v13, 0);
  v22 = *(_QWORD *)(a2 + 8);
  if (v22)
    goto LABEL_18;
LABEL_33:
  v33 = 0;
  v35 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v36 = (double ****)&v35;
    a4.n128_f32[0] = sub_23985FCC4(&v36, a1, a2, a4.n128_f32[0], a5, a6, a7, a8, a9, a10);
  }
LABEL_37:
  v31 = v33;
  v33 = 0;
  if (v31)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v31 + 8))(v31, a4);
  result = v34;
  v34 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23985FC60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_23985FCC4(double *****a1, uint64_t a2, uint64_t a3, float result, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int v10;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  float *v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  double v32;
  unsigned int i;
  uint64_t v34;
  int v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  _OWORD v41[2];

  v11 = *(_DWORD *)(a2 + 32);
  v10 = *(_DWORD *)(a2 + 36);
  v12 = *(_DWORD *)(a2 + 40);
  if (v11)
    v13 = v10 == 0;
  else
    v13 = 1;
  if (!v13 && v12 != 0)
  {
    v35 = v11 - 1;
    v18 = *(unsigned int *)(a2 + 48);
    v19 = *(unsigned int *)(a3 + 48);
    v36 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v34 = 0;
    v37 = v10 - 1;
    v38 = v18 | (v19 << 32);
    v39 = v12 - 1;
    v40 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v20 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v20)
    {
      v21 = *(_QWORD *)(a2 + 8);
      v22 = *(std::__shared_weak_count **)(a2 + 16);
      if (v22)
      {
        p_shared_owners = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(p_shared_owners);
        while (__stxr(v24 + 1, p_shared_owners));
        do
          v25 = __ldaxr(p_shared_owners);
        while (__stlxr(v25 - 1, p_shared_owners));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v21 + 88))(v21, 0, "unknown location");
      v20 = *(_BYTE **)(a2 + 24);
    }
    v26 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v26)
    {
      v27 = *(_QWORD *)(a3 + 8);
      v28 = *(std::__shared_weak_count **)(a3 + 16);
      if (v28)
      {
        v29 = (unint64_t *)&v28->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v27 + 88))(v27, 1, "unknown location");
      v26 = *(float **)(a3 + 24);
    }
    v32 = 0.0;
    memset(v41, 0, sizeof(v41));
    if (v39)
    {
      for (i = 0; i < v39; ++i)
      {
        *(float *)&v32 = sub_23985FEAC(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
        v20 += v40;
        v26 += HIDWORD(v40);
      }
    }
    return sub_23985FEAC(&v34, v41, a1, v20, v26, v32, a5, a6, a7, a8, a9, a10);
  }
  return result;
}

float sub_23985FEAC(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, float *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  float result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 4 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *(float *)&v25 = v25;
      *a5 = *(float *)&v25;
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      v29 = v18 + v19 * v28;
      *(float *)&v29 = v29;
      a5[1] = *(float *)&v29;
      LOBYTE(v29) = a4[2];
      v30 = v17 * ((double)*(unint64_t *)&v29 - v16);
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      a12 = v18 + v19 * v32;
      *(float *)&a12 = a12;
      a5[2] = *(float *)&a12;
      a4 += v20;
      a5 = (float *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v33 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v34 = fmax(v33, 0.0);
  if (v33 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  v36 = v18 + v19 * v35;
  *(float *)&v36 = v36;
  *a5 = *(float *)&v36;
  LOBYTE(v36) = a4[1];
  v37 = v17 * ((double)*(unint64_t *)&v36 - v16);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  v40 = v18 + v19 * v39;
  *(float *)&v40 = v40;
  a5[1] = *(float *)&v40;
  LOBYTE(v40) = a4[2];
  v41 = v17 * ((double)*(unint64_t *)&v40 - v16);
  v42 = fmax(v41, 0.0);
  if (v41 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  result = v18 + v19 * v43;
  a5[2] = result;
  return result;
}

uint64_t sub_239860024(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  char *v17;
  float *v18;
  char v19;
  char v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 255.0;
    v3 = a3 >= 255.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOBYTE(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_2398607F8(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1132396544;
      if (a3 <= 255.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOBYTE(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_239861018(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_23985F4E8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_239860124(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_239860124(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2398603CC(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239860368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2398603CC(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_2398605B4(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += 4 * HIDWORD(v33);
      }
    }
    return sub_2398605B4(&v27, v34, a1, v13, v19);
  }
  return result;
}

float sub_2398605B4(_DWORD *a1, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, uint64_t a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  float *v19;
  float result;
  float *v21;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = a1[6];
    v9 = 4 * a1[7];
    do
    {
      while (1)
      {
        *a2 = a4;
        a2[2] = a5;
        v11 = *a4;
        if (v11 >= *v7)
          break;
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v12 = a4[1];
        if (v12 < *v7)
          goto LABEL_13;
LABEL_10:
        if (v12 > *v6[2])
        {
          v13 = v6[3];
          goto LABEL_14;
        }
        *(float *)(a5 + 4) = (float)v12;
        v14 = a4[2];
        if (v14 >= *v7)
          goto LABEL_17;
LABEL_3:
        v10 = v6[1];
LABEL_4:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v10;
        a4 += v8;
        a5 += v9;
        if (!--v5)
          goto LABEL_20;
      }
      if (v11 <= *v6[2])
      {
        *(float *)a5 = (float)v11;
        v12 = a4[1];
        if (v12 >= *v7)
          goto LABEL_10;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[3];
        v12 = a4[1];
        if (v12 >= *v7)
          goto LABEL_10;
      }
LABEL_13:
      v13 = v6[1];
LABEL_14:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v13;
      v14 = a4[2];
      if (v14 < *v7)
        goto LABEL_3;
LABEL_17:
      if (v14 > *v6[2])
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      *(float *)(a5 + 8) = (float)v14;
      a4 += v8;
      a5 += v9;
      --v5;
    }
    while (v5);
  }
LABEL_20:
  *a2 = a4;
  a2[2] = a5;
  v15 = *a4;
  if (v15 >= *v7)
  {
    if (v15 <= *v6[2])
    {
      *(float *)a5 = (float)v15;
      v16 = a4[1];
      if (v16 >= *v7)
        goto LABEL_25;
    }
    else
    {
      *(_DWORD *)a5 = *(_DWORD *)v6[3];
      v16 = a4[1];
      if (v16 >= *v7)
        goto LABEL_25;
    }
LABEL_28:
    v17 = v6[1];
    goto LABEL_29;
  }
  *(_DWORD *)a5 = *(_DWORD *)v6[1];
  v16 = a4[1];
  if (v16 < *v7)
    goto LABEL_28;
LABEL_25:
  if (v16 <= *v6[2])
  {
    *(float *)(a5 + 4) = (float)v16;
    v18 = a4[2];
    if (v18 < *v7)
      goto LABEL_30;
    goto LABEL_32;
  }
  v17 = v6[3];
LABEL_29:
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v17;
  v18 = a4[2];
  if (v18 < *v7)
  {
LABEL_30:
    v19 = (float *)v6[1];
    result = *v19;
    *(float *)(a5 + 8) = *v19;
    return result;
  }
LABEL_32:
  if (v18 <= *v6[2])
  {
    result = (float)v18;
    *(float *)(a5 + 8) = (float)v18;
  }
  else
  {
    v21 = (float *)v6[3];
    result = *v21;
    *(float *)(a5 + 8) = *v21;
  }
  return result;
}

uint64_t sub_2398607F8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_239860AA0(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239860A3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_239860AA0(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  float *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v29 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v30 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v28 = 0;
    v31 = v3 - 1;
    v32 = v11 | (v12 << 32);
    v33 = v5 - 1;
    v34 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v27 = v13;
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    v26 = v19;
    return sub_239860C44(&v28, a1, &v27, &v26);
  }
  return result;
}

float sub_239860C44(_DWORD *a1, unsigned __int8 ****a2, unsigned __int8 **a3, float **a4)
{
  unsigned __int8 *v4;
  float *v5;
  int v6;
  int v7;
  unsigned __int8 **v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  float *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  float v18;
  unsigned __int8 *v19;
  float *v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  float result;
  float *v40;

  v4 = *a3;
  v5 = *a4;
  v6 = a1[8];
  if (v6)
  {
    v7 = a1[5];
    v8 = **a2;
    v9 = *v8;
    v10 = a1[9];
    v11 = a1[10];
    v12 = 4 * v11;
    if (v7)
    {
      v13 = 0;
      v14 = a1[6];
      v15 = v5 + 2;
      v16 = 4 * a1[7];
      v17 = v4 + 2;
      while (1)
      {
        v19 = v17;
        v20 = v15;
        v21 = v7;
        do
        {
          while (1)
          {
            v22 = *(v19 - 2);
            if (v22 >= *v9)
              break;
            *(v20 - 2) = *(float *)v8[1];
            v23 = *(v19 - 1);
            if (v23 >= *v9)
              goto LABEL_10;
LABEL_13:
            *(v20 - 1) = *(float *)v8[1];
            v24 = *v19;
            if (v24 >= *v9)
              goto LABEL_14;
LABEL_7:
            *v20 = *(float *)v8[1];
            v20 = (float *)((char *)v20 + v16);
            v19 += v14;
            if (!--v21)
              goto LABEL_15;
          }
          *(v20 - 2) = (float)v22;
          v23 = *(v19 - 1);
          if (v23 < *v9)
            goto LABEL_13;
LABEL_10:
          *(v20 - 1) = (float)v23;
          v24 = *v19;
          if (v24 < *v9)
            goto LABEL_7;
LABEL_14:
          *v20 = (float)v24;
          v20 = (float *)((char *)v20 + v16);
          v19 += v14;
          --v21;
        }
        while (v21);
LABEL_15:
        v25 = *(v19 - 2);
        if (v25 >= *v9)
        {
          *(v20 - 2) = (float)v25;
          v26 = *(v19 - 1);
          if (v26 < *v9)
            goto LABEL_20;
LABEL_17:
          *(v20 - 1) = (float)v26;
          v27 = *v19;
          if (v27 < *v9)
            goto LABEL_4;
LABEL_21:
          v18 = (float)v27;
        }
        else
        {
          *(v20 - 2) = *(float *)v8[1];
          v26 = *(v19 - 1);
          if (v26 >= *v9)
            goto LABEL_17;
LABEL_20:
          *(v20 - 1) = *(float *)v8[1];
          v27 = *v19;
          if (v27 >= *v9)
            goto LABEL_21;
LABEL_4:
          v18 = *(float *)v8[1];
        }
        *v20 = v18;
        v4 += v10;
        v5 += v11;
        ++v13;
        v15 = (float *)((char *)v15 + v12);
        v17 += v10;
        if (v13 == v6)
          goto LABEL_32;
      }
    }
    while (1)
    {
      v28 = *v4;
      if (v28 >= *v9)
      {
        *v5 = (float)v28;
        v29 = v4[1];
        if (v29 < *v9)
          goto LABEL_28;
LABEL_25:
        v5[1] = (float)v29;
        v30 = v4[2];
        if (v30 >= *v9)
          goto LABEL_29;
LABEL_22:
        v5[2] = *(float *)v8[1];
        v4 += v10;
        v5 = (float *)((char *)v5 + v12);
        if (!--v6)
          goto LABEL_42;
      }
      else
      {
        *v5 = *(float *)v8[1];
        v29 = v4[1];
        if (v29 >= *v9)
          goto LABEL_25;
LABEL_28:
        v5[1] = *(float *)v8[1];
        v30 = v4[2];
        if (v30 < *v9)
          goto LABEL_22;
LABEL_29:
        v5[2] = (float)v30;
        v4 += v10;
        v5 = (float *)((char *)v5 + v12);
        if (!--v6)
          goto LABEL_42;
      }
    }
  }
  v7 = a1[5];
  v8 = **a2;
  v9 = *v8;
LABEL_32:
  if (v7)
  {
    v31 = a1[6];
    v32 = 4 * a1[7];
    while (1)
    {
      v33 = *v4;
      if (v33 >= *v9)
      {
        *v5 = (float)v33;
        v34 = v4[1];
        if (v34 < *v9)
          goto LABEL_40;
LABEL_37:
        v5[1] = (float)v34;
        v35 = v4[2];
        if (v35 >= *v9)
          goto LABEL_41;
LABEL_34:
        v5[2] = *(float *)v8[1];
        v4 += v31;
        v5 = (float *)((char *)v5 + v32);
        if (!--v7)
          break;
      }
      else
      {
        *v5 = *(float *)v8[1];
        v34 = v4[1];
        if (v34 >= *v9)
          goto LABEL_37;
LABEL_40:
        v5[1] = *(float *)v8[1];
        v35 = v4[2];
        if (v35 < *v9)
          goto LABEL_34;
LABEL_41:
        v5[2] = (float)v35;
        v4 += v31;
        v5 = (float *)((char *)v5 + v32);
        if (!--v7)
          break;
      }
    }
  }
LABEL_42:
  v36 = *v4;
  if (v36 < *v9)
  {
    *v5 = *(float *)v8[1];
    v37 = v4[1];
    if (v37 >= *v9)
      goto LABEL_44;
LABEL_47:
    v5[1] = *(float *)v8[1];
    v38 = v4[2];
    if (v38 >= *v9)
      goto LABEL_45;
    goto LABEL_48;
  }
  *v5 = (float)v36;
  v37 = v4[1];
  if (v37 < *v9)
    goto LABEL_47;
LABEL_44:
  v5[1] = (float)v37;
  v38 = v4[2];
  if (v38 >= *v9)
  {
LABEL_45:
    result = (float)v38;
    v5[2] = (float)v38;
    return result;
  }
LABEL_48:
  v40 = (float *)v8[1];
  result = *v40;
  v5[2] = *v40;
  return result;
}

uint64_t sub_239861018(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int8 ***)&v29;
    a4.n128_f32[0] = sub_2398612C0(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23986125C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2398612C0(unsigned __int8 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  float *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v29 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v30 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v28 = 0;
    v31 = v3 - 1;
    v32 = v11 | (v12 << 32);
    v33 = v5 - 1;
    v34 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int8 **)(a2 + 24);
    }
    v27 = v13;
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    v26 = v19;
    return sub_239861464(&v28, a1, &v27, &v26);
  }
  return result;
}

float sub_239861464(_DWORD *a1, unsigned __int8 ****a2, unsigned __int8 **a3, float **a4)
{
  unsigned __int8 *v4;
  float *v5;
  int v6;
  int v7;
  unsigned __int8 **v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  float *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  float v18;
  unsigned __int8 *v19;
  float *v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  float result;
  float *v40;

  v4 = *a3;
  v5 = *a4;
  v6 = a1[8];
  if (v6)
  {
    v7 = a1[5];
    v8 = **a2;
    v9 = *v8;
    v10 = a1[9];
    v11 = a1[10];
    v12 = 4 * v11;
    if (v7)
    {
      v13 = 0;
      v14 = a1[6];
      v15 = v5 + 2;
      v16 = 4 * a1[7];
      v17 = v4 + 2;
      while (1)
      {
        v19 = v17;
        v20 = v15;
        v21 = v7;
        do
        {
          while (1)
          {
            v22 = *(v19 - 2);
            if (v22 <= *v9)
              break;
            *(v20 - 2) = *(float *)v8[1];
            v23 = *(v19 - 1);
            if (v23 <= *v9)
              goto LABEL_10;
LABEL_13:
            *(v20 - 1) = *(float *)v8[1];
            v24 = *v19;
            if (v24 <= *v9)
              goto LABEL_14;
LABEL_7:
            *v20 = *(float *)v8[1];
            v20 = (float *)((char *)v20 + v16);
            v19 += v14;
            if (!--v21)
              goto LABEL_15;
          }
          *(v20 - 2) = (float)v22;
          v23 = *(v19 - 1);
          if (v23 > *v9)
            goto LABEL_13;
LABEL_10:
          *(v20 - 1) = (float)v23;
          v24 = *v19;
          if (v24 > *v9)
            goto LABEL_7;
LABEL_14:
          *v20 = (float)v24;
          v20 = (float *)((char *)v20 + v16);
          v19 += v14;
          --v21;
        }
        while (v21);
LABEL_15:
        v25 = *(v19 - 2);
        if (v25 <= *v9)
        {
          *(v20 - 2) = (float)v25;
          v26 = *(v19 - 1);
          if (v26 > *v9)
            goto LABEL_20;
LABEL_17:
          *(v20 - 1) = (float)v26;
          v27 = *v19;
          if (v27 > *v9)
            goto LABEL_4;
LABEL_21:
          v18 = (float)v27;
        }
        else
        {
          *(v20 - 2) = *(float *)v8[1];
          v26 = *(v19 - 1);
          if (v26 <= *v9)
            goto LABEL_17;
LABEL_20:
          *(v20 - 1) = *(float *)v8[1];
          v27 = *v19;
          if (v27 <= *v9)
            goto LABEL_21;
LABEL_4:
          v18 = *(float *)v8[1];
        }
        *v20 = v18;
        v4 += v10;
        v5 += v11;
        ++v13;
        v15 = (float *)((char *)v15 + v12);
        v17 += v10;
        if (v13 == v6)
          goto LABEL_32;
      }
    }
    while (1)
    {
      v28 = *v4;
      if (v28 <= *v9)
      {
        *v5 = (float)v28;
        v29 = v4[1];
        if (v29 > *v9)
          goto LABEL_28;
LABEL_25:
        v5[1] = (float)v29;
        v30 = v4[2];
        if (v30 <= *v9)
          goto LABEL_29;
LABEL_22:
        v5[2] = *(float *)v8[1];
        v4 += v10;
        v5 = (float *)((char *)v5 + v12);
        if (!--v6)
          goto LABEL_42;
      }
      else
      {
        *v5 = *(float *)v8[1];
        v29 = v4[1];
        if (v29 <= *v9)
          goto LABEL_25;
LABEL_28:
        v5[1] = *(float *)v8[1];
        v30 = v4[2];
        if (v30 > *v9)
          goto LABEL_22;
LABEL_29:
        v5[2] = (float)v30;
        v4 += v10;
        v5 = (float *)((char *)v5 + v12);
        if (!--v6)
          goto LABEL_42;
      }
    }
  }
  v7 = a1[5];
  v8 = **a2;
  v9 = *v8;
LABEL_32:
  if (v7)
  {
    v31 = a1[6];
    v32 = 4 * a1[7];
    while (1)
    {
      v33 = *v4;
      if (v33 <= *v9)
      {
        *v5 = (float)v33;
        v34 = v4[1];
        if (v34 > *v9)
          goto LABEL_40;
LABEL_37:
        v5[1] = (float)v34;
        v35 = v4[2];
        if (v35 <= *v9)
          goto LABEL_41;
LABEL_34:
        v5[2] = *(float *)v8[1];
        v4 += v31;
        v5 = (float *)((char *)v5 + v32);
        if (!--v7)
          break;
      }
      else
      {
        *v5 = *(float *)v8[1];
        v34 = v4[1];
        if (v34 <= *v9)
          goto LABEL_37;
LABEL_40:
        v5[1] = *(float *)v8[1];
        v35 = v4[2];
        if (v35 > *v9)
          goto LABEL_34;
LABEL_41:
        v5[2] = (float)v35;
        v4 += v31;
        v5 = (float *)((char *)v5 + v32);
        if (!--v7)
          break;
      }
    }
  }
LABEL_42:
  v36 = *v4;
  if (v36 > *v9)
  {
    *v5 = *(float *)v8[1];
    v37 = v4[1];
    if (v37 <= *v9)
      goto LABEL_44;
LABEL_47:
    v5[1] = *(float *)v8[1];
    v38 = v4[2];
    if (v38 <= *v9)
      goto LABEL_45;
    goto LABEL_48;
  }
  *v5 = (float)v36;
  v37 = v4[1];
  if (v37 > *v9)
    goto LABEL_47;
LABEL_44:
  v5[1] = (float)v37;
  v38 = v4[2];
  if (v38 <= *v9)
  {
LABEL_45:
    result = (float)v38;
    v5[2] = (float)v38;
    return result;
  }
LABEL_48:
  v40 = (float *)v8[1];
  result = *v40;
  v5[2] = *v40;
  return result;
}

void sub_239861838(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239861940(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239861924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239861940(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 12);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239861A90(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_239861AA4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239858808(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE38E8;
  sub_239861CB0((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239861BB8(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239861B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239861B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239861BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEB190;
  sub_23986287C(a2, &v11);
  sub_23986233C(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_23970B00C(a2, (uint64_t)(a3 + 1));
}

void sub_239861C74(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239861C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397BF450((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239861C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239861CB0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int16 v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;

  sub_239861DB0(a1, &v13);
  v12 = v13;
  v13 = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v4 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v4 = 0;
  v5 = *(_WORD *)(a1 + 60);
  sub_239827210(a2, &v12, v4);
  *(_WORD *)(a2 + 120) = v5;
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239861D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_239861DB0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 17)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239861FF0(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_239861F90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239861FF0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_239862068();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_239862068()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256934308);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256934308))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_239708E5C();
    sub_23986226C((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23986226C((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_2569342F0, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_2569342F0, &dword_23940C000);
          __cxa_guard_release(&qword_256934308);
          return &stru_2569342F0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2569342F0;
}

void sub_2398621B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256934308);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256934308);
  _Unwind_Resume(a1);
}

void sub_23986226C(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239862300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23986233C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_239862510(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398624EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239862510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397E5638((unsigned int *)&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_2398626AC((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239862688(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398626AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  int v21;
  _BYTE *v22;
  int v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  int v28;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 24);
    v13 = *(unsigned int *)(a3 + 28);
    v14 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_BYTE **)(a2 + 24);
    }
    v21 = v3 - 1;
    v22 = *(_BYTE **)a3;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v22 = *v14;
          v22[1] = v14[1];
          v22[2] = v14[2];
          v14 += v11;
          v22 += v13;
          --v9;
        }
        while (v9);
      }
      else
      {
        v23 = 0;
        v24 = v22 + 2;
        v25 = v14 + 2;
        do
        {
          v26 = v25;
          v27 = v24;
          v28 = v3 - 1;
          do
          {
            *(v27 - 2) = *(v26 - 2);
            *(v27 - 1) = *(v26 - 1);
            *v27 = *v26;
            v27 += v12;
            v26 += v10;
            --v28;
          }
          while (v28);
          *(v27 - 2) = *(v26 - 2);
          *(v27 - 1) = *(v26 - 1);
          *v27 = *v26;
          v14 += v11;
          v22 += v13;
          ++v23;
          v24 += v13;
          v25 += v11;
        }
        while (v23 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        *v22 = *v14;
        v22[1] = v14[1];
        v22[2] = v14[2];
        v14 += v10;
        v22 += v12;
        --v21;
      }
      while (v21);
    }
    *v22 = *v14;
    v22[1] = v14[1];
    v22[2] = v14[2];
  }
  return result;
}

void sub_23986287C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239862984(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239862968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239862984(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 17);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239862AD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_239862AE8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_239858808(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250ADBEA0;
  sub_239469644((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239862BFC(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239862BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239862BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239862BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250ADCAF8;
  sub_23949D79C(a2, &v11);
  sub_239862CF4(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_239709138(a2, (uint64_t)(a3 + 1));
}

void sub_239862CB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239862CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23949ABF8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239862CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239862CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_239862510(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239862EA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239862EC8(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_239862EEC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239862FC0(a1, a2);
}

double sub_239862EF8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398652A0(a1, a2);
}

double sub_239862F04@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23986780C(a1, a2);
}

double sub_239862F10@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239869DB0(a1, a2);
}

double sub_239862F1C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23986AE14(a1, a2);
}

double sub_239862F28@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239864C8C(a1, a2);
}

uint64_t sub_239862FC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_2398631FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDA18;
  sub_239858A98((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_2398630D4(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_23986309C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398630B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398630D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEA9D0;
  sub_239864A20(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEA68[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23982F700(a2, (uint64_t)(a4 + 1));
}

void sub_2398631C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398631D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398631E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397B94B8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398631FC(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 10;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_23986333C((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_2398302E4((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_239863300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239863328(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23986333C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 10);
  *a2 = &off_250AEDB98;
  sub_239859828((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_239863454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239863478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23986348C(uint64_t **a1, uint64_t a2)
{
  return sub_2398634D4(**a1, (*a1)[1], a2);
}

uint64_t sub_23986349C(uint64_t **a1, uint64_t a2)
{
  return sub_2398642B4(**a1, (*a1)[1], a2);
}

uint64_t sub_2398634AC(uint64_t **a1)
{
  char v2;

  return sub_2398635FC(**a1, (*a1)[1], (uint64_t)&v2);
}

uint64_t sub_2398634D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  int v4;
  double v5;
  unsigned int v6;
  unsigned int v7;
  double v8;
  double v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (!*(_BYTE *)(a3 + 16))
  {
    v6 = -65536;
    v7 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_14:
    v10 = 255;
    v11 = HIWORD(v6);
    if (v7 != (unsigned __int16)v6)
      goto LABEL_17;
    goto LABEL_15;
  }
  v3 = *(double *)a3;
  if (*(double *)a3 < 0.0)
    v3 = 0.0;
  v4 = (int)v3;
  v5 = 65535.0;
  if (*(double *)(a3 + 8) <= 65535.0)
    v5 = *(double *)(a3 + 8);
  v6 = v4 | ((int)v5 << 16);
  v7 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_14;
LABEL_7:
  v8 = *(double *)(a3 + 24);
  if (v8 < 0.0)
    v8 = 0.0;
  v7 = (int)v8;
  v9 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v9 = *(double *)(a3 + 32);
  v10 = (int)v9;
  v11 = HIWORD(v6);
  if (v7 != (unsigned __int16)v6)
    goto LABEL_17;
LABEL_15:
  if (v11 == v10)
    return sub_2398635FC(a1, a2, (uint64_t)v15);
LABEL_17:
  v19 = (double)(unsigned __int16)v6;
  v17 = (double)v7;
  v18 = 1.0 / ((double)v11 - v19);
  v16 = (double)v10 - (double)v7;
  v15[0] = &v19;
  v15[1] = &v18;
  v14[0] = &v17;
  v14[1] = &v16;
  v13[0] = v15;
  v13[1] = v14;
  return sub_239863AF4(a1, a2, (uint64_t)v13);
}

uint64_t sub_2398635FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_2398638A4((uint64_t)&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239863840(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398638A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  _BYTE *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  int v34;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 48);
    v13 = *(unsigned int *)(a3 + 52);
    v14 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_BYTE **)(a2 + 24);
    }
    v21 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v21)
    {
      v22 = *(_QWORD *)(a3 + 8);
      v23 = *(std::__shared_weak_count **)(a3 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_BYTE **)(a3 + 24);
    }
    v27 = v3 - 1;
    v28 = 2 * v11;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[2];
          v21[2] = v14[4];
          v21 += v13;
          v14 += 2 * v10;
          --v9;
        }
        while (v9);
      }
      else
      {
        v29 = 0;
        v30 = v21 + 2;
        v31 = v14 + 4;
        do
        {
          v32 = v31;
          v33 = v30;
          v34 = v3 - 1;
          do
          {
            *(v33 - 2) = *(v32 - 4);
            *(v33 - 1) = *(v32 - 2);
            result = *v32;
            *v33 = result;
            v33 += v12;
            v32 += v28;
            --v34;
          }
          while (v34);
          *(v33 - 2) = *(v32 - 4);
          *(v33 - 1) = *(v32 - 2);
          *v33 = *v32;
          v14 += 2 * v10;
          v21 += v13;
          ++v29;
          v30 += v13;
          v31 += 2 * v10;
        }
        while (v29 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[2];
        v21[2] = v14[4];
        v21 += v12;
        v14 += v28;
        --v27;
      }
      while (v27);
    }
    *v21 = *v14;
    v21[1] = v14[2];
    v21[2] = v14[4];
  }
  return result;
}

uint64_t sub_239863AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_239863D9C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239863D38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239863D9C(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_BYTE **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    sub_239863F40(&v25, v32, a1, v13, v19, 0.0);
  }
}

void sub_239863F40(_DWORD *a1, _QWORD *a2, double *****a3, _WORD *a4, _BYTE *a5, double a6)
{
  unsigned int v11;
  unsigned int v12;
  _BYTE *v13;
  _WORD *v14;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double ***v22;
  double **v23;
  double **v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double ***v29;
  double **v30;
  double **v31;
  double v32;
  double v33;
  double v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  _WORD *v38;
  _BYTE *v39;
  _WORD *v40;

  if (a1[8])
  {
    v11 = 0;
    do
    {
      v39 = a5;
      v40 = a4;
      *a2 = a4;
      a2[2] = a5;
      if (a1[5])
      {
        v12 = 0;
        v13 = a5;
        v14 = a4;
        do
        {
          *a2 = v14;
          a2[2] = v13;
          v15 = **a3;
          LOWORD(a6) = *v14;
          v16 = *v15;
          v17 = v15[1];
          v18 = ((double)*(unint64_t *)&a6 - **v16) * *v16[1];
          v19 = fmax(v18, 0.0);
          if (v18 <= 1.0)
            v20 = v19;
          else
            v20 = 1.0;
          v21 = **v17 + v20 * *v17[1];
          *v13 = llround(v21);
          v22 = **a3;
          LOWORD(v21) = *(_WORD *)(*a2 + 2);
          v24 = *v22;
          v23 = v22[1];
          v25 = ((double)*(unint64_t *)&v21 - **v24) * *v24[1];
          v26 = fmax(v25, 0.0);
          if (v25 <= 1.0)
            v27 = v26;
          else
            v27 = 1.0;
          v28 = **v23 + v27 * *v23[1];
          *(_BYTE *)(a2[2] + 1) = llround(v28);
          v29 = **a3;
          LOWORD(v28) = *(_WORD *)(*a2 + 4);
          v31 = *v29;
          v30 = v29[1];
          v32 = ((double)*(unint64_t *)&v28 - **v31) * *v31[1];
          v33 = fmax(v32, 0.0);
          if (v32 <= 1.0)
            v34 = v33;
          else
            v34 = 1.0;
          a6 = **v30 + v34 * *v30[1];
          *(_BYTE *)(a2[2] + 2) = llround(a6);
          v35 = a1[5];
          v14 = &v40[a1[6]];
          v13 = &v39[a1[7]];
          v39 = v13;
          v40 = v14;
          ++v12;
        }
        while (v12 < v35);
      }
      a6 = sub_239864198(a6, (uint64_t)a1, a2, a3, &v40, &v39);
      a4 += a1[9];
      a5 += a1[10];
      ++v11;
    }
    while (v11 < a1[8]);
  }
  v39 = a5;
  v40 = a4;
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v36 = 0;
    do
    {
      a6 = sub_239864198(a6, (uint64_t)a1, a2, a3, &v40, &v39);
      v37 = a1[5];
      v38 = &v40[a1[6]];
      v39 += a1[7];
      v40 = v38;
      ++v36;
    }
    while (v36 < v37);
  }
  sub_239864198(a6, (uint64_t)a1, a2, a3, &v40, &v39);
}

double sub_239864198(double a1, uint64_t a2, _QWORD *a3, double *****a4, _WORD **a5, _BYTE **a6)
{
  _WORD *v6;
  _BYTE *v7;
  double ***v8;
  double **v9;
  double **v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double ***v22;
  double **v23;
  double **v24;
  double v25;
  double v26;
  double v27;
  double result;

  v6 = *a5;
  *a3 = *a5;
  v7 = *a6;
  v8 = **a4;
  LOWORD(a1) = *v6;
  v9 = *v8;
  v10 = v8[1];
  v11 = ((double)*(unint64_t *)&a1 - **v9) * *v9[1];
  v12 = fmax(v11, 0.0);
  if (v11 <= 1.0)
    v13 = v12;
  else
    v13 = 1.0;
  v14 = **v10 + v13 * *v10[1];
  a3[2] = v7;
  *v7 = llround(v14);
  v15 = **a4;
  LOWORD(v14) = *(_WORD *)(*a3 + 2);
  v17 = *v15;
  v16 = v15[1];
  v18 = ((double)*(unint64_t *)&v14 - **v17) * *v17[1];
  v19 = fmax(v18, 0.0);
  if (v18 <= 1.0)
    v20 = v19;
  else
    v20 = 1.0;
  v21 = **v16 + v20 * *v16[1];
  *(_BYTE *)(a3[2] + 1) = llround(v21);
  v22 = **a4;
  LOWORD(v21) = *(_WORD *)(*a3 + 4);
  v24 = *v22;
  v23 = v22[1];
  v25 = ((double)*(unint64_t *)&v21 - **v24) * *v24[1];
  v26 = fmax(v25, 0.0);
  if (v25 <= 1.0)
    v27 = v26;
  else
    v27 = 1.0;
  result = **v23 + v27 * *v23[1];
  *(_BYTE *)(a3[2] + 2) = llround(result);
  return result;
}

uint64_t sub_2398642B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  int v5;
  double v6;
  _QWORD v8[4];
  int v9;
  char v10;
  char v11;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v11 = v5;
    v10 = (int)v6;
    HIWORD(v9) = v5;
    LOWORD(v9) = (int)v6;
  }
  else
  {
    v11 = 0;
    v10 = -1;
    v9 = 255;
  }
  v8[0] = (char *)&v9 + 2;
  v8[1] = &v11;
  v8[2] = &v9;
  v8[3] = &v10;
  return sub_239864364(a1, a2, (uint64_t)v8);
}

uint64_t sub_239864364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (unsigned __int16 ***)&v28;
    sub_23986460C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398645A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 ****sub_23986460C(unsigned __int16 ****result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  unsigned __int16 ****v10;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(_WORD **)(a2 + 24);
    }
    v19 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_BYTE **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_2398647F4(&v26, v33, v10, v13, v19);
        v13 += v32;
        v19 += HIDWORD(v32);
      }
    }
    return (unsigned __int16 ****)sub_2398647F4(&v26, v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_2398647F4(_DWORD *result, _QWORD *a2, unsigned __int16 ****a3, _WORD *a4, _BYTE *a5)
{
  int v5;
  unsigned __int16 *v6;
  char v7;
  unsigned __int16 **v8;
  unsigned int v9;
  char v10;
  unsigned __int16 **v11;
  unsigned int v12;
  unsigned __int16 *v13;
  char v14;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v17;
  unsigned int v18;
  char v19;
  unsigned __int16 **v20;
  unsigned int v21;
  unsigned __int16 *v22;
  char v23;
  uint64_t v24;
  unsigned __int16 **v25;
  unsigned int v26;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    v5 = 0;
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = (unsigned __int16)*a4;
      if (v9 >= **v8)
        v10 = v9 <= *v8[2] ? *a4 : *(_BYTE *)v8[3];
      else
        v10 = *(_BYTE *)v8[1];
      *a5 = v10;
      v11 = **a3;
      v12 = *(unsigned __int16 *)(*a2 + 2);
      if (v12 < **v11)
        break;
      if (v12 > *v11[2])
      {
        v13 = v11[3];
        goto LABEL_15;
      }
      v14 = *(_WORD *)(*a2 + 2);
LABEL_17:
      *(_BYTE *)(a2[2] + 1) = v14;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 4);
      if (v16 < **v15)
      {
        v6 = v15[1];
      }
      else
      {
        if (v16 <= *v15[2])
        {
          v7 = *(_WORD *)(*a2 + 4);
          goto LABEL_5;
        }
        v6 = v15[3];
      }
      v7 = *(_BYTE *)v6;
LABEL_5:
      *(_BYTE *)(a2[2] + 2) = v7;
      a4 += result[6];
      a5 += result[7];
      if (++v5 >= result[5])
        goto LABEL_21;
    }
    v13 = v11[1];
LABEL_15:
    v14 = *(_BYTE *)v13;
    goto LABEL_17;
  }
LABEL_21:
  *a2 = a4;
  a2[2] = a5;
  v17 = **a3;
  v18 = (unsigned __int16)*a4;
  if (v18 >= **v17)
  {
    if (v18 <= *v17[2])
      v19 = *a4;
    else
      v19 = *(_BYTE *)v17[3];
  }
  else
  {
    v19 = *(_BYTE *)v17[1];
  }
  *a5 = v19;
  v20 = **a3;
  v21 = *(unsigned __int16 *)(*a2 + 2);
  if (v21 < **v20)
  {
    v22 = v20[1];
LABEL_30:
    v23 = *(_BYTE *)v22;
    goto LABEL_32;
  }
  if (v21 > *v20[2])
  {
    v22 = v20[3];
    goto LABEL_30;
  }
  v23 = *(_WORD *)(*a2 + 2);
LABEL_32:
  *(_BYTE *)(a2[2] + 1) = v23;
  v24 = a2[2];
  v25 = **a3;
  v26 = *(unsigned __int16 *)(*a2 + 4);
  if (v26 >= **v25)
  {
    if (v26 <= *v25[2])
      *(_BYTE *)(v24 + 2) = v26;
    else
      *(_BYTE *)(v24 + 2) = *(_BYTE *)v25[3];
  }
  else
  {
    *(_BYTE *)(v24 + 2) = *(_BYTE *)v25[1];
  }
  return result;
}

void sub_239864A20(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239864B28(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_239864B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239864B28(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 9);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239864C78(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_239864C8C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398631FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDB98;
  sub_239859828((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239864DD8(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_2398302E4((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239864D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239864DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239864DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239864DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v16 = 0;
LABEL_17:
  sub_239622218(a2, &v15);
  sub_239864F7C(a1, a2);
  v13 = v15;
  v15 = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239864F18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

void *sub_239864F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *result;
  unint64_t v8;
  const void *v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 == *(_DWORD *)(a2 + 108) && v4 == v5)
  {
    v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
    v9 = *(const void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72))
      v10 = v9 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(std::__shared_weak_count **)(a1 + 16);
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
      v9 = *(const void **)(v3 + 24);
    }
    if (v8 && !v9)
      sub_239EBF50C(a1, a2);
    result = *(void **)(a2 + 32);
    if (*(_BYTE *)(a2 + 128) && result)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
      result = *(void **)(a2 + 32);
    }
    if (v8 && !result)
      sub_239EBF50C(0, a2);
    if (v8)
      return memmove(result, v9, 2 * v8);
  }
  else
  {
    v16 = (3 * *(_DWORD *)(a1 + 56));
    return (void *)sub_2398650D4(a1, a2, (unsigned int *)&v16);
  }
  return result;
}

uint64_t sub_2398650D4(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v18 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v18, v6, 0);
LABEL_17:
  sub_239622218(a2, &v17);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    sub_2397D5B2C(a3, a1, a2);
  v15 = v17;
  v17 = 0;
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  result = v18;
  v18 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23986523C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_2398652A0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398631FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDD18;
  sub_23985BDE4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_2398653B4(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23986537C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239865398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2398653B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEABC0;
  sub_23985E784(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEA80[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239830F44(a2, (uint64_t)(a4 + 1));
}

void sub_2398654A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_2398654B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_2398654C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BACD4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2398654DC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_2398655EC(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_2398654EC(_QWORD **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned __int16 v11;
  _QWORD v13[5];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v3 = (*a1)[1];
  v16[0] = **a1;
  v16[1] = v3;
  v15[0] = v16[0];
  v15[1] = v3;
  v14[0] = v16[0];
  v14[1] = v3;
  v13[0] = v16;
  v13[1] = v15;
  v13[2] = v14;
  v13[3] = v16[0];
  v13[4] = v3;
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_2398663B4((uint64_t)v13, 2080373759, _Q0);
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -65504.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65504.0;
  if (v4 < -65504.0)
    v4 = -65504.0;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v11 = LOWORD(_S0);
  if (v5 <= 65504.0)
    _Q0.n128_f64[0] = v5;
  else
    _Q0.n128_f64[0] = 65504.0;
  _Q0.n128_f32[0] = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  return sub_2398663B4((uint64_t)v13, v11 | (_Q0.n128_u16[0] << 16), _Q0);
}

uint64_t sub_2398655C4(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23986573C(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_2398655EC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  unsigned __int16 v12;
  unsigned int v14;
  unsigned int v15;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    _Q0.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)_Q0.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v14 = 1006632960;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v7 = -65504.0;
  if (*(double *)(a3 + 24) >= -65504.0)
    v7 = *(double *)(a3 + 24);
  _S0 = v7;
  __asm { FCVT            H0, S0 }
  v12 = LOWORD(_S0);
  _Q0.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a3 + 32) <= 65504.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a3 + 32);
  _S0 = _Q0.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v14 = v12 | (LOWORD(_S0) << 16);
LABEL_14:
  v15 = (unsigned __int16)v6;
  _Q0.n128_u32[0] = v14;
  _S1 = HIWORD(v14);
  __asm { FCVT            S3, H0 }
  v18 = HIWORD(v6);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v18;
  if (_ZF)
    return sub_23986573C(a1, a2, (uint64_t)v25, _Q0);
  v29 = (double)v15;
  __asm { FCVT            D0, H0 }
  v27 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  _Q0.n128_f64[0] = _D1 - _Q0.n128_f64[0];
  v26 = _Q0.n128_u64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_239865CB8(a1, a2, (uint64_t)v23, _Q0, _D1, 1.0 / ((double)v18 - (double)v15));
}

uint64_t sub_23986573C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_u64[0] = sub_2398659E4(a4.n128_f32[0], (uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239865980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_2398659E4@<H0>(float _S0@<S0>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>)
{
  int v4;
  int v5;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _WORD *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  _WORD *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _WORD *v31;
  _WORD *v32;
  _WORD *v33;
  _WORD *v34;
  int v35;
  __int16 result;

  v4 = *(_DWORD *)(a3 + 36);
  v5 = *(_DWORD *)(a3 + 40);
  if (*(_DWORD *)(a3 + 32))
    _ZF = v4 == 0;
  else
    _ZF = 1;
  if (!_ZF && v5 != 0)
  {
    v10 = v5 - 1;
    v12 = *(unsigned int *)(a3 + 48);
    v11 = *(unsigned int *)(a3 + 52);
    v14 = *(unsigned int *)(a4 + 48);
    v13 = *(unsigned int *)(a4 + 52);
    v15 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v15)
    {
      v16 = *(_QWORD *)(a3 + 8);
      v17 = *(std::__shared_weak_count **)(a3 + 16);
      if (v17)
      {
        p_shared_owners = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
        do
          v20 = __ldaxr(p_shared_owners);
        while (__stlxr(v20 - 1, p_shared_owners));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v16 + 88))(v16, 0, "unknown location");
      v15 = *(_WORD **)(a3 + 24);
    }
    v21 = *(_WORD **)(a4 + 24);
    if (*(_BYTE *)(a4 + 72) && v21)
    {
      v22 = *(_QWORD *)(a4 + 8);
      v23 = *(std::__shared_weak_count **)(a4 + 16);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v22 + 88))(v22, 1, "unknown location");
      v21 = *(_WORD **)(a4 + 24);
    }
    v27 = v4 - 1;
    v28 = 2 * v14;
    v29 = 2 * v12;
    if (v10)
    {
      if (v4 == 1)
      {
        do
        {
          LOWORD(_S0) = *v15;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v21 = _S0;
          LOWORD(_S0) = v15[1];
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v21[1] = _S0;
          LOWORD(_S0) = v15[2];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v21[2] = LOWORD(_S0);
          v21 += v13;
          v15 += v11;
          --v10;
        }
        while (v10);
      }
      else
      {
        v30 = 0;
        v31 = v21 + 2;
        v32 = v15 + 2;
        do
        {
          v33 = v32;
          v34 = v31;
          v35 = v4 - 1;
          do
          {
            LOWORD(_S0) = *(v33 - 2);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v34 - 2) = _S0;
            LOWORD(_S0) = *(v33 - 1);
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *(v34 - 1) = _S0;
            LOWORD(_S0) = *v33;
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v34 = LOWORD(_S0);
            v34 = (_WORD *)((char *)v34 + v28);
            v33 = (_WORD *)((char *)v33 + v29);
            --v35;
          }
          while (v35);
          LOWORD(_S0) = *(v33 - 2);
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *(v34 - 2) = _S0;
          LOWORD(_S0) = *(v33 - 1);
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *(v34 - 1) = _S0;
          LOWORD(_S0) = *v33;
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          *v34 = LOWORD(_S0);
          v15 += v11;
          v21 += v13;
          ++v30;
          v31 += v13;
          v32 += v11;
        }
        while (v30 != v10);
      }
    }
    if (v4 != 1)
    {
      do
      {
        LOWORD(_S0) = *v15;
        *(float *)&_S0 = (float)LODWORD(_S0);
        __asm { FCVT            H0, S0 }
        *v21 = _S0;
        LOWORD(_S0) = v15[1];
        *(float *)&_S0 = (float)_S0;
        __asm { FCVT            H0, S0 }
        v21[1] = _S0;
        LOWORD(_S0) = v15[2];
        _S0 = (float)_S0;
        __asm { FCVT            H0, S0 }
        v21[2] = LOWORD(_S0);
        v21 = (_WORD *)((char *)v21 + v28);
        v15 = (_WORD *)((char *)v15 + v29);
        --v27;
      }
      while (v27);
    }
    LOWORD(_S0) = *v15;
    *(float *)&_S0 = (float)LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    *v21 = _S0;
    LOWORD(_S0) = v15[1];
    *(float *)&_S0 = (float)_S0;
    __asm { FCVT            H0, S0 }
    v21[1] = _S0;
    LOWORD(_S0) = v15[2];
    _S0 = (float)_S0;
    __asm { FCVT            H0, S0 }
    v21[2] = result;
  }
  return result;
}

uint64_t sub_239865CB8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, double a5, double a6)
{
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double ****v32;

  v9 = *(_QWORD *)(a1 + 8);
  if (!v9)
    goto LABEL_17;
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v9 = *(_QWORD *)(a1 + 8);
  v14 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v14)
    goto LABEL_43;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v30 = 0;
    v18 = *(_QWORD *)(a2 + 8);
    if (!v18)
      goto LABEL_33;
LABEL_18:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(a2 + 8);
    v23 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v23)
      goto LABEL_29;
    v24 = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v29, v18, 1);
    v31 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v30, v9, 0);
  v18 = *(_QWORD *)(a2 + 8);
  if (v18)
    goto LABEL_18;
LABEL_33:
  v29 = 0;
  v31 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v32 = (double ****)&v31;
    a4.n128_f64[0] = sub_239865F60(&v32, a1, a2, a4.n128_f64[0], a5, a6);
  }
LABEL_37:
  v27 = v29;
  v29 = 0;
  if (v27)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v27 + 8))(v27, a4);
  result = v30;
  v30 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239865EFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_239865F60(double *****a1, uint64_t a2, uint64_t a3, double result, double a5, double a6)
{
  int v6;
  int v7;
  int v8;
  BOOL v9;
  uint64_t v14;
  uint64_t v15;
  _WORD *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  _WORD *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  unsigned int i;
  uint64_t v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  _OWORD v37[2];

  v7 = *(_DWORD *)(a2 + 32);
  v6 = *(_DWORD *)(a2 + 36);
  v8 = *(_DWORD *)(a2 + 40);
  if (v7)
    v9 = v6 == 0;
  else
    v9 = 1;
  if (!v9 && v8 != 0)
  {
    v31 = v7 - 1;
    v14 = *(unsigned int *)(a2 + 48);
    v15 = *(unsigned int *)(a3 + 48);
    v32 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v30 = 0;
    v33 = v6 - 1;
    v34 = v14 | (v15 << 32);
    v35 = v8 - 1;
    v36 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v16 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v16)
    {
      v17 = *(_QWORD *)(a2 + 8);
      v18 = *(std::__shared_weak_count **)(a2 + 16);
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
        do
          v21 = __ldaxr(p_shared_owners);
        while (__stlxr(v21 - 1, p_shared_owners));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
      v16 = *(_WORD **)(a2 + 24);
    }
    v22 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v22)
    {
      v23 = *(_QWORD *)(a3 + 8);
      v24 = *(std::__shared_weak_count **)(a3 + 16);
      if (v24)
      {
        v25 = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v23 + 88))(v23, 1, "unknown location");
      v22 = *(_WORD **)(a3 + 24);
    }
    v28 = 0.0;
    memset(v37, 0, sizeof(v37));
    if (v35)
    {
      for (i = 0; i < v35; ++i)
      {
        *(_QWORD *)&v28 = sub_239866148(&v30, v37, a1, v16, v22, v28, a5, a6);
        v16 += v36;
        v22 += HIDWORD(v36);
      }
    }
    *(_QWORD *)&result = sub_239866148(&v30, v37, a1, v16, v22, v28, a5, a6);
  }
  return result;
}

__int16 sub_239866148@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, double *****a3@<X2>, _WORD *a4@<X3>, _WORD *a5@<X4>, double a6@<D0>, double a7@<D1>, double _D2@<D2>)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v27;
  double **v28;
  double **v29;
  double v30;
  double v31;
  double v32;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  double ***v40;
  double **v41;
  double **v42;
  double v43;
  double v44;
  double v45;
  double ***v47;
  double **v48;
  double **v49;
  double v50;
  double v51;
  double v52;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOWORD(_D2) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&_D2 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      _D2 = **v10 + v14 * *v10[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a5 = LOWORD(_D2);
      v20 = **a3;
      LOWORD(_D2) = *(_WORD *)(*a2 + 2);
      v22 = *v20;
      v21 = v20[1];
      v23 = ((double)*(unint64_t *)&_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = **v21 + v25 * *v21[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 2) = LOWORD(_D2);
      v27 = **a3;
      LOWORD(_D2) = *(_WORD *)(*a2 + 4);
      v29 = *v27;
      v28 = v27[1];
      v30 = ((double)*(unint64_t *)&_D2 - **v29) * *v29[1];
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      _D2 = **v28 + v32 * *v28[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 4) = LOWORD(_D2);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v33 = **a3;
  LOWORD(a6) = *a4;
  v35 = *v33;
  v34 = v33[1];
  v36 = ((double)*(unint64_t *)&a6 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  _D0 = **v34 + v38 * *v34[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *a5 = LOWORD(_D0);
  v40 = **a3;
  LOWORD(_D0) = *(_WORD *)(*a2 + 2);
  v42 = *v40;
  v41 = v40[1];
  v43 = ((double)*(unint64_t *)&_D0 - **v42) * *v42[1];
  v44 = fmax(v43, 0.0);
  if (v43 <= 1.0)
    v45 = v44;
  else
    v45 = 1.0;
  _D0 = **v41 + v45 * *v41[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = LOWORD(_D0);
  v47 = **a3;
  LOWORD(_D0) = *(_WORD *)(*a2 + 4);
  v49 = *v47;
  v48 = v47[1];
  v50 = ((double)*(unint64_t *)&_D0 - **v49) * *v49[1];
  v51 = fmax(v50, 0.0);
  if (v50 <= 1.0)
    v52 = v51;
  else
    v52 = 1.0;
  _S0 = **v48 + v52 * *v48[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 4) = result;
  return result;
}

uint64_t sub_2398663B4(uint64_t a1, int a2, __n128 _Q0)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int16 *v21;
  __int16 *v22;
  __int16 *v23;
  __int16 *v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;

  _H0 = a2;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(a2);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 >= 0.0)
    {
      v15 = *(uint64_t **)(a1 + 8);
      v28 = a2;
      v27 = (int)_S1;
      v16 = *v15;
      v17 = v15[1];
      v21 = &v27;
      v22 = &v28;
      return sub_239866BA4(v16, v17, (uint64_t)&v21, _Q0);
    }
    else if (_Q0.n128_f32[0] <= 65535.0)
    {
      v18 = *(uint64_t **)(a1 + 16);
      v28 = HIWORD(a2);
      v27 = (int)_Q0.n128_f32[0];
      v19 = *v18;
      v20 = v18[1];
      v21 = &v27;
      v22 = &v28;
      return sub_2398671D8(v19, v20, (uint64_t)&v21, _Q0);
    }
    else
    {
      return sub_23986573C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v21, _Q0);
    }
  }
  else
  {
    v11 = *(uint64_t **)a1;
    v27 = HIWORD(a2);
    v28 = a2;
    v26 = (int)_S1;
    v25 = (int)_Q0.n128_f32[0];
    v12 = *v11;
    v13 = v11[1];
    v21 = &v26;
    v22 = &v28;
    v23 = &v25;
    v24 = &v27;
    return sub_2398664D0(v12, v13, (uint64_t)&v21, _Q0);
  }
}

uint64_t sub_2398664D0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_239866778(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239866714(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_239866778@<H0>(unsigned __int16 ****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  unsigned __int16 result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239866960(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_239866960(&v27, v34, a1, v13, v19);
  }
  return result;
}

unsigned __int16 sub_239866960@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  int v5;
  unsigned __int16 *v6;
  unsigned __int16 **v8;
  unsigned int v9;
  unsigned __int16 **v16;
  unsigned int v17;
  unsigned __int16 *v18;
  unsigned __int16 **v21;
  unsigned int v22;
  unsigned __int16 **v24;
  unsigned int v25;
  unsigned __int16 **v28;
  unsigned int v29;
  unsigned __int16 *v30;
  uint64_t v33;
  unsigned __int16 **v34;
  unsigned int v35;
  unsigned __int16 *v36;
  unsigned __int16 result;
  unsigned __int16 *v38;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = *a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
        {
          _S0 = (float)v9;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *v8[3];
        }
      }
      else
      {
        _H0 = *v8[1];
      }
      *a5 = _H0;
      v16 = **a3;
      v17 = *(unsigned __int16 *)(*a2 + 2);
      if (v17 < **v16)
        break;
      if (v17 > *v16[2])
      {
        v18 = v16[3];
        goto LABEL_15;
      }
      _S0 = (float)v17;
      __asm { FCVT            H0, S0 }
LABEL_17:
      *(_WORD *)(a2[2] + 2) = _H0;
      v21 = **a3;
      v22 = *(unsigned __int16 *)(*a2 + 4);
      if (v22 < **v21)
      {
        v6 = v21[1];
      }
      else
      {
        if (v22 <= *v21[2])
        {
          _S0 = (float)v22;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = v21[3];
      }
      _H0 = *v6;
LABEL_5:
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      if (++v5 >= a1[5])
        goto LABEL_21;
    }
    v18 = v16[1];
LABEL_15:
    _H0 = *v18;
    goto LABEL_17;
  }
LABEL_21:
  *a2 = a4;
  a2[2] = a5;
  v24 = **a3;
  v25 = *a4;
  if (v25 >= **v24)
  {
    if (v25 <= *v24[2])
    {
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *v24[3];
    }
  }
  else
  {
    _H0 = *v24[1];
  }
  *a5 = _H0;
  v28 = **a3;
  v29 = *(unsigned __int16 *)(*a2 + 2);
  if (v29 < **v28)
  {
    v30 = v28[1];
LABEL_30:
    _H0 = *v30;
    goto LABEL_32;
  }
  if (v29 > *v28[2])
  {
    v30 = v28[3];
    goto LABEL_30;
  }
  _S0 = (float)v29;
  __asm { FCVT            H0, S0 }
LABEL_32:
  *(_WORD *)(a2[2] + 2) = _H0;
  v33 = a2[2];
  v34 = **a3;
  v35 = *(unsigned __int16 *)(*a2 + 4);
  if (v35 >= **v34)
  {
    if (v35 <= *v34[2])
    {
      _S0 = (float)v35;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v33 + 4) = result;
    }
    else
    {
      v38 = v34[3];
      result = *v38;
      *(_WORD *)(v33 + 4) = *v38;
    }
  }
  else
  {
    v36 = v34[1];
    result = *v36;
    *(_WORD *)(v33 + 4) = *v36;
  }
  return result;
}

uint64_t sub_239866BA4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_239866E4C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239866DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_239866E4C@<H0>(unsigned __int16 ****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  unsigned __int16 result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239867034(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_239867034(&v27, v34, a1, v13, v19);
  }
  return result;
}

unsigned __int16 sub_239867034@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int16 **v7;
  unsigned int v8;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v19;
  unsigned int v20;
  unsigned __int16 **v22;
  unsigned int v23;
  unsigned __int16 **v26;
  unsigned int v27;
  uint64_t v30;
  unsigned __int16 **v31;
  unsigned int v32;
  unsigned __int16 *v33;
  unsigned __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 >= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 2);
      if (v16 >= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int16 *)(*a2 + 4);
      if (v20 < **v19)
      {
        _H0 = *v19[1];
      }
      else
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  v23 = *a4;
  if (v23 >= **v22)
  {
    _S0 = (float)v23;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v22[1];
  }
  *a5 = _H0;
  v26 = **a3;
  v27 = *(unsigned __int16 *)(*a2 + 2);
  if (v27 >= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v26[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v30 = a2[2];
  v31 = **a3;
  v32 = *(unsigned __int16 *)(*a2 + 4);
  if (v32 >= **v31)
  {
    _S0 = (float)v32;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v30 + 4) = result;
  }
  else
  {
    v33 = v31[1];
    result = *v33;
    *(_WORD *)(v30 + 4) = *v33;
  }
  return result;
}

uint64_t sub_2398671D8(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_u64[0] = sub_239867480(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23986741C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_239867480@<H0>(unsigned __int16 ****a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  unsigned __int16 result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239867668(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_239867668(&v27, v34, a1, v13, v19);
  }
  return result;
}

unsigned __int16 sub_239867668@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int16 **v7;
  unsigned int v8;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v19;
  unsigned int v20;
  unsigned __int16 **v22;
  unsigned int v23;
  unsigned __int16 **v26;
  unsigned int v27;
  uint64_t v30;
  unsigned __int16 **v31;
  unsigned int v32;
  unsigned __int16 *v33;
  unsigned __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 <= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 2);
      if (v16 <= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int16 *)(*a2 + 4);
      if (v20 > **v19)
      {
        _H0 = *v19[1];
      }
      else
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  v23 = *a4;
  if (v23 <= **v22)
  {
    _S0 = (float)v23;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v22[1];
  }
  *a5 = _H0;
  v26 = **a3;
  v27 = *(unsigned __int16 *)(*a2 + 2);
  if (v27 <= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v26[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v30 = a2[2];
  v31 = **a3;
  v32 = *(unsigned __int16 *)(*a2 + 4);
  if (v32 <= **v31)
  {
    _S0 = (float)v32;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v30 + 4) = result;
  }
  else
  {
    v33 = v31[1];
    result = *v33;
    *(_WORD *)(v30 + 4) = *v33;
  }
  return result;
}

double sub_23986780C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398631FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDE98;
  sub_23985EC2C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239867920(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_2398678E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239867904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239867920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEACB8;
  sub_239861838(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEA98[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239831AFC(a2, (uint64_t)(a4 + 1));
}

void sub_239867A0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239867A20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239867A34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BB8AC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_239867A48(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239867B48(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239867A58(_QWORD **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  _QWORD v8[5];
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];

  v3 = (*a1)[1];
  v11[0] = **a1;
  v11[1] = v3;
  v10[0] = v11[0];
  v10[1] = v3;
  v9[0] = v11[0];
  v9[1] = v3;
  v8[0] = v11;
  v8[1] = v10;
  v8[2] = v9;
  v8[3] = v11[0];
  v8[4] = v3;
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    a3.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      a3.n128_f64[0] = -3.40282347e38;
    v4 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v4 = 3.40282347e38;
    if (a3.n128_f64[0] < -3.40282347e38)
      a3.n128_f64[0] = -3.40282347e38;
    a3.n128_f32[0] = a3.n128_f64[0];
    if (v4 <= 3.40282347e38)
      v5 = v4;
    else
      v5 = 3.40282347e38;
    v6 = v5;
    return sub_239868788((uint64_t)v8, a3, v6);
  }
  else
  {
    a3.n128_u32[0] = -8388609;
    return sub_239868788((uint64_t)v8, a3, 3.4028e38);
  }
}

uint64_t sub_239867B20(uint64_t **a1, __n128 a2, float a3)
{
  char v4;

  return sub_239867C74(**a1, (*a1)[1], (uint64_t)&v4, a2, a3);
}

uint64_t sub_239867B48(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  int v5;
  unsigned int v6;
  double v7;
  float v8;
  unsigned int v9;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  unint64_t v15;
  double v16;
  double v17;
  double v18;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = *(double *)a3;
    if (*(double *)a3 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    a4.n128_u64[0] = 0x40EFFFE000000000;
    if (*(double *)(a3 + 8) <= 65535.0)
      a4.n128_u64[0] = *(_QWORD *)(a3 + 8);
    v6 = v5 | ((int)a4.n128_f64[0] << 16);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v8 = 1.0;
    a4.n128_u32[0] = 0;
    goto LABEL_14;
  }
  v6 = -65536;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  a4.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)(a3 + 24) >= -3.40282347e38)
    a4.n128_u64[0] = *(_QWORD *)(a3 + 24);
  a4.n128_f32[0] = a4.n128_f64[0];
  v7 = 3.40282347e38;
  if (*(double *)(a3 + 32) <= 3.40282347e38)
    v7 = *(double *)(a3 + 32);
  v8 = v7;
LABEL_14:
  v9 = HIWORD(v6);
  if (a4.n128_f32[0] == (float)(unsigned __int16)v6 && v8 == (float)v9)
    return sub_239867C74(a1, a2, (uint64_t)v14, a4, v8);
  v18 = (double)(unsigned __int16)v6;
  v16 = a4.n128_f32[0];
  v17 = 1.0 / ((double)v9 - v18);
  a4.n128_f64[0] = v8 - a4.n128_f32[0];
  v15 = a4.n128_u64[0];
  v14[0] = &v18;
  v14[1] = &v17;
  v13[0] = &v16;
  v13[1] = &v15;
  v12[0] = v14;
  v12[1] = v13;
  return sub_2398681A0(a1, a2, (uint64_t)v12, a4);
}

uint64_t sub_239867C74(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4, float a5)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    goto LABEL_17;
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  v8 = *(_QWORD *)(a1 + 8);
  v13 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v13)
    goto LABEL_43;
  v14 = (unint64_t *)&v13->__shared_owners_;
  do
    v15 = __ldxr(v14);
  while (__stxr(v15 + 1, v14));
  do
    v16 = __ldaxr(v14);
  while (__stlxr(v16 - 1, v14));
  if (v16)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v29 = 0;
    v17 = *(_QWORD *)(a2 + 8);
    if (!v17)
      goto LABEL_33;
LABEL_18:
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
    v17 = *(_QWORD *)(a2 + 8);
    v22 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v22)
      goto LABEL_29;
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v28, v17, 1);
    v30 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v8 + 96))(&v29, v8, 0);
  v17 = *(_QWORD *)(a2 + 8);
  if (v17)
    goto LABEL_18;
LABEL_33:
  v28 = 0;
  v30 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v31 = &v30;
    a4.n128_f32[0] = sub_239867F1C(a4.n128_f32[0], a5, (uint64_t)&v31, a1, a2);
  }
LABEL_37:
  v26 = v28;
  v28 = 0;
  if (v26)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v26 + 8))(v26, a4);
  result = v29;
  v29 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239867EB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_239867F1C(float result, float a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  BOOL v7;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _WORD *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  float *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  float *v32;
  _WORD *v33;
  _WORD *v34;
  float *v35;
  int v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;

  v5 = *(_DWORD *)(a4 + 36);
  v6 = *(_DWORD *)(a4 + 40);
  if (*(_DWORD *)(a4 + 32))
    v7 = v5 == 0;
  else
    v7 = 1;
  if (!v7 && v6 != 0)
  {
    v11 = v6 - 1;
    v13 = *(unsigned int *)(a4 + 48);
    v12 = *(unsigned int *)(a4 + 52);
    v15 = *(unsigned int *)(a5 + 48);
    v14 = *(unsigned int *)(a5 + 52);
    v16 = *(_WORD **)(a4 + 24);
    if (*(_BYTE *)(a4 + 72) && v16)
    {
      v17 = *(_QWORD *)(a4 + 8);
      v18 = *(std::__shared_weak_count **)(a4 + 16);
      if (v18)
      {
        p_shared_owners = (unint64_t *)&v18->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
        do
          v21 = __ldaxr(p_shared_owners);
        while (__stlxr(v21 - 1, p_shared_owners));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "unknown location");
      v16 = *(_WORD **)(a4 + 24);
    }
    v22 = *(float **)(a5 + 24);
    if (*(_BYTE *)(a5 + 72) && v22)
    {
      v23 = *(_QWORD *)(a5 + 8);
      v24 = *(std::__shared_weak_count **)(a5 + 16);
      if (v24)
      {
        v25 = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v23 + 88))(v23, 1, "unknown location");
      v22 = *(float **)(a5 + 24);
    }
    v28 = v5 - 1;
    v29 = 2 * v13;
    v30 = 4 * v15;
    if (v11)
    {
      if (v5 == 1)
      {
        do
        {
          LOWORD(result) = *v16;
          v39 = (float)LODWORD(result);
          LOWORD(a2) = v16[1];
          a2 = (float)LODWORD(a2);
          *v22 = v39;
          v22[1] = a2;
          LOWORD(v39) = v16[2];
          result = (float)LODWORD(v39);
          v22[2] = result;
          v22 += v14;
          v16 += v12;
          --v11;
        }
        while (v11);
      }
      else
      {
        v31 = 0;
        v32 = v22 + 2;
        v33 = v16 + 2;
        do
        {
          v34 = v33;
          v35 = v32;
          v36 = v5 - 1;
          do
          {
            LOWORD(result) = *(v34 - 2);
            v37 = (float)LODWORD(result);
            LOWORD(a2) = *(v34 - 1);
            a2 = (float)LODWORD(a2);
            *(v35 - 2) = v37;
            *(v35 - 1) = a2;
            LOWORD(v37) = *v34;
            result = (float)LODWORD(v37);
            *v35 = result;
            v35 = (float *)((char *)v35 + v30);
            v34 = (_WORD *)((char *)v34 + v29);
            --v36;
          }
          while (v36);
          LOWORD(result) = *(v34 - 2);
          v38 = (float)LODWORD(result);
          LOWORD(a2) = *(v34 - 1);
          a2 = (float)LODWORD(a2);
          *(v35 - 2) = v38;
          *(v35 - 1) = a2;
          LOWORD(v38) = *v34;
          result = (float)LODWORD(v38);
          *v35 = result;
          v16 += v12;
          v22 += v14;
          ++v31;
          v32 += v14;
          v33 += v12;
        }
        while (v31 != v11);
      }
    }
    if (v5 != 1)
    {
      do
      {
        LOWORD(result) = *v16;
        v40 = (float)LODWORD(result);
        LOWORD(a2) = v16[1];
        a2 = (float)LODWORD(a2);
        *v22 = v40;
        v22[1] = a2;
        LOWORD(v40) = v16[2];
        result = (float)LODWORD(v40);
        v22[2] = result;
        v16 = (_WORD *)((char *)v16 + v29);
        v22 = (float *)((char *)v22 + v30);
        --v28;
      }
      while (v28);
    }
    LOWORD(result) = *v16;
    v41 = (float)LODWORD(result);
    LOWORD(a2) = v16[1];
    *v22 = v41;
    v22[1] = (float)LODWORD(a2);
    LOWORD(v41) = v16[2];
    result = (float)LODWORD(v41);
    v22[2] = result;
  }
  return result;
}

uint64_t sub_2398681A0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t **v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (uint64_t **)&v29;
    a4.n128_f32[0] = sub_239868448(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398683E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float32_t sub_239868448(uint64_t ***a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float32x2_t *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float32_t result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(float32x2_t **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float32x2_t **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239868630(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 = (float32x2_t *)((char *)v19 + 4 * HIDWORD(v33));
      }
    }
    return sub_239868630(&v27, v34, a1, v13, v19);
  }
  return result;
}

float32_t sub_239868630(_DWORD *a1, _QWORD *a2, uint64_t ***a3, unsigned __int16 *a4, float32x2_t *a5)
{
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64x2_t v22;
  float64x2_t v23;
  int8x16_t v24;
  float64x2_t v25;
  float32x2_t v26;
  BOOL v27;
  double v28;
  float32_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64x2_t v32;
  float64x2_t v33;
  unint64_t v34;
  double v35;
  double v36;
  double v37;
  float32_t result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **(uint64_t **)v8;
  v10 = **(double **)(v8 + 8);
  v11 = **(uint64_t **)v7;
  v12 = **(double **)(v7 + 8);
  __asm { FMOV            V4.2D, #1.0 }
  if (v5)
  {
    v18 = (float64x2_t)vdupq_lane_s64(v11, 0);
    v19 = (float64x2_t)vdupq_lane_s64(v9, 0);
    v20 = 2 * a1[6];
    v21 = 4 * a1[7];
    do
    {
      v22.i64[0] = *a4;
      v22.i64[1] = a4[1];
      v23 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v22), v19), v10);
      v24 = (int8x16_t)vcgtq_f64(v23, _Q4);
      v25 = vaddq_f64(v18, vmulq_n_f64((float64x2_t)vbslq_s8(v24, (int8x16_t)_Q4, (int8x16_t)vmaxnmq_f64(v23, (float64x2_t)0)), v12));
      v24.i16[0] = a4[2];
      v26 = vcvt_f32_f64(v25);
      *(double *)v24.i64 = v10 * ((double)v24.u64[0] - *(double *)&v9);
      v27 = *(double *)v24.i64 <= 1.0;
      v28 = fmax(*(double *)v24.i64, 0.0);
      if (!v27)
        v28 = 1.0;
      *a5 = v26;
      v29 = *(double *)&v11 + v12 * v28;
      a5[1].f32[0] = v29;
      a4 = (unsigned __int16 *)((char *)a4 + v20);
      a5 = (float32x2_t *)((char *)a5 + v21);
      --v5;
    }
    while (v5);
  }
  v30 = *a4;
  v31 = a4[1];
  *a2 = a4;
  a2[2] = a5;
  v32.i64[0] = v30;
  v32.i64[1] = v31;
  v33 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v32), (float64x2_t)vdupq_lane_s64(v9, 0)), v10);
  v34 = (unint64_t)vcvt_f32_f64(vaddq_f64((float64x2_t)vdupq_lane_s64(v11, 0), vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v33, _Q4), (int8x16_t)_Q4, (int8x16_t)vmaxnmq_f64(v33, (float64x2_t)0)), v12)));
  *a5 = (float32x2_t)v34;
  LOWORD(v34) = a4[2];
  v35 = v10 * ((double)v34 - *(double *)&v9);
  v36 = fmax(v35, 0.0);
  if (v35 <= 1.0)
    v37 = v36;
  else
    v37 = 1.0;
  result = *(double *)&v11 + v12 * v37;
  a5[1].f32[0] = result;
  return result;
}

uint64_t sub_239868788(uint64_t a1, __n128 a2, float a3)
{
  BOOL v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  unsigned __int32 *v16;
  __int16 *v17;
  float *v18;
  __int16 v19;
  __int16 v20;
  float v21;
  unsigned __int32 v22;

  if (a2.n128_f32[0] >= 0.0)
  {
    v4 = a3 == 65535.0;
    v3 = a3 >= 65535.0;
  }
  else
  {
    v3 = 1;
    v4 = 0;
  }
  if (!v4 && v3)
  {
    if (a2.n128_f32[0] >= 0.0)
    {
      v9 = *(uint64_t **)(a1 + 8);
      v22 = a2.n128_u32[0];
      LOWORD(v21) = (int)a2.n128_f32[0];
      v10 = *v9;
      v11 = v9[1];
      v15 = &v21;
      v16 = &v22;
      return sub_239868F58(v10, v11, (uint64_t)&v15, a2);
    }
    else
    {
      a2.n128_u32[0] = 1199570688;
      if (a3 <= 65535.0)
      {
        v12 = *(uint64_t **)(a1 + 16);
        v22 = LODWORD(a3);
        LOWORD(v21) = (int)a3;
        v13 = *v12;
        v14 = v12[1];
        v15 = &v21;
        v16 = &v22;
        return sub_239869684(v13, v14, (uint64_t)&v15, a2);
      }
      else
      {
        return sub_239867C74(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), (uint64_t)&v15, a2, a3);
      }
    }
  }
  else
  {
    v5 = *(uint64_t **)a1;
    v21 = a3;
    v22 = a2.n128_u32[0];
    v20 = (int)a2.n128_f32[0];
    v19 = (int)a3;
    v6 = *v5;
    v7 = v5[1];
    v15 = (float *)&v20;
    v16 = &v22;
    v17 = &v19;
    v18 = &v21;
    return sub_23986888C(v6, v7, (uint64_t)&v15, a2);
  }
}

uint64_t sub_23986888C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_239868B34(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239868AD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_239868B34(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239868D1C(&v27, v34, a1, v13, v19);
        v13 += v33;
        v19 += 4 * HIDWORD(v33);
      }
    }
    return sub_239868D1C(&v27, v34, a1, v13, v19);
  }
  return result;
}

float sub_239868D1C(_DWORD *a1, _QWORD *a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  int v5;
  unsigned __int16 **v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  float *v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = **v6;
  if (v5)
  {
    v8 = 2 * a1[6];
    v9 = 4 * a1[7];
    do
    {
      while (1)
      {
        v11 = *a4;
        if (v11 < v7)
          break;
        if (v11 <= *v6[2])
        {
          *(float *)a5 = (float)v11;
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
        else
        {
          *(_DWORD *)a5 = *(_DWORD *)v6[3];
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
LABEL_10:
        if (v12 <= *v6[2])
        {
          *(float *)(a5 + 4) = (float)v12;
          v13 = a4[2];
          if (v13 >= v7)
            goto LABEL_17;
        }
        else
        {
          *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[3];
          v13 = a4[2];
          if (v13 >= v7)
            goto LABEL_17;
        }
LABEL_3:
        v10 = v6[1];
LABEL_4:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v10;
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          goto LABEL_20;
      }
      *(_DWORD *)a5 = *(_DWORD *)v6[1];
      v12 = a4[1];
      if (v12 >= v7)
        goto LABEL_10;
LABEL_14:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
      v13 = a4[2];
      if (v13 < v7)
        goto LABEL_3;
LABEL_17:
      if (v13 > *v6[2])
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      *(float *)(a5 + 8) = (float)v13;
      a4 = (unsigned __int16 *)((char *)a4 + v8);
      a5 += v9;
      --v5;
    }
    while (v5);
  }
LABEL_20:
  *a2 = a4;
  a2[2] = a5;
  v14 = *a4;
  if (v14 >= v7)
  {
    if (v14 <= *v6[2])
    {
      *(float *)a5 = (float)v14;
      v15 = a4[1];
      if (v15 < v7)
        goto LABEL_29;
    }
    else
    {
      *(_DWORD *)a5 = *(_DWORD *)v6[3];
      v15 = a4[1];
      if (v15 < v7)
        goto LABEL_29;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 < v7)
    {
LABEL_29:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
      v16 = a4[2];
      if (v16 < v7)
        goto LABEL_30;
      goto LABEL_32;
    }
  }
  if (v15 <= *v6[2])
  {
    *(float *)(a5 + 4) = (float)v15;
    v16 = a4[2];
    if (v16 < v7)
      goto LABEL_30;
  }
  else
  {
    *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[3];
    v16 = a4[2];
    if (v16 < v7)
    {
LABEL_30:
      v17 = (float *)v6[1];
      result = *v17;
      *(float *)(a5 + 8) = *v17;
      return result;
    }
  }
LABEL_32:
  if (v16 <= *v6[2])
  {
    result = (float)v16;
    *(float *)(a5 + 8) = (float)v16;
  }
  else
  {
    v19 = (float *)v6[3];
    result = *v19;
    *(float *)(a5 + 8) = *v19;
  }
  return result;
}

uint64_t sub_239868F58(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_239869200(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23986919C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_239869200(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_2398693A4(&v26, v33, a1, v13, v19);
  }
  return result;
}

float sub_2398693A4(_DWORD *a1, _QWORD *a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  unsigned int i;
  float v6;
  int v7;
  unsigned __int16 **v8;
  unsigned int v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned __int16 **v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  float result;
  float *v32;

  if (a1[8])
  {
    for (i = 0; i < a1[8]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = a1[5];
      v8 = **a3;
      v9 = **v8;
      v10 = a5;
      v11 = a4;
      if (v7)
      {
        v12 = 2 * a1[6];
        v13 = 4 * a1[7];
        v10 = a5;
        v11 = a4;
        while (1)
        {
          v14 = *v11;
          if (v14 >= v9)
          {
            *(float *)v10 = (float)v14;
            v15 = v11[1];
            if (v15 < v9)
              goto LABEL_13;
LABEL_10:
            *(float *)(v10 + 4) = (float)v15;
            v16 = v11[2];
            if (v16 >= v9)
              goto LABEL_14;
LABEL_7:
            *(_DWORD *)(v10 + 8) = *(_DWORD *)v8[1];
            v11 = (unsigned __int16 *)((char *)v11 + v12);
            v10 += v13;
            if (!--v7)
              break;
          }
          else
          {
            *(_DWORD *)v10 = *(_DWORD *)v8[1];
            v15 = v11[1];
            if (v15 >= v9)
              goto LABEL_10;
LABEL_13:
            *(_DWORD *)(v10 + 4) = *(_DWORD *)v8[1];
            v16 = v11[2];
            if (v16 < v9)
              goto LABEL_7;
LABEL_14:
            *(float *)(v10 + 8) = (float)v16;
            v11 = (unsigned __int16 *)((char *)v11 + v12);
            v10 += v13;
            if (!--v7)
              break;
          }
        }
      }
      *a2 = v11;
      a2[2] = v10;
      v17 = *v11;
      if (v17 >= v9)
      {
        *(float *)v10 = (float)v17;
        v18 = v11[1];
        if (v18 >= v9)
        {
LABEL_17:
          *(float *)(v10 + 4) = (float)v18;
          v19 = v11[2];
          if (v19 >= v9)
            goto LABEL_21;
          goto LABEL_3;
        }
      }
      else
      {
        *(_DWORD *)v10 = *(_DWORD *)v8[1];
        v18 = v11[1];
        if (v18 >= v9)
          goto LABEL_17;
      }
      *(_DWORD *)(v10 + 4) = *(_DWORD *)v8[1];
      v19 = v11[2];
      if (v19 >= v9)
      {
LABEL_21:
        v6 = (float)v19;
        goto LABEL_4;
      }
LABEL_3:
      v6 = *(float *)v8[1];
LABEL_4:
      *(float *)(v10 + 8) = v6;
      a4 += a1[9];
      a5 += 4 * a1[10];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v20 = a1[5];
  v21 = **a3;
  v22 = **v21;
  if (v20)
  {
    v23 = 2 * a1[6];
    v24 = 4 * a1[7];
    while (1)
    {
      v25 = *a4;
      if (v25 >= v22)
      {
        *(float *)a5 = (float)v25;
        v26 = a4[1];
        if (v26 < v22)
          goto LABEL_30;
LABEL_27:
        *(float *)(a5 + 4) = (float)v26;
        v27 = a4[2];
        if (v27 >= v22)
          goto LABEL_31;
LABEL_24:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v21[1];
        a4 = (unsigned __int16 *)((char *)a4 + v23);
        a5 += v24;
        if (!--v20)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v21[1];
        v26 = a4[1];
        if (v26 >= v22)
          goto LABEL_27;
LABEL_30:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v21[1];
        v27 = a4[2];
        if (v27 < v22)
          goto LABEL_24;
LABEL_31:
        *(float *)(a5 + 8) = (float)v27;
        a4 = (unsigned __int16 *)((char *)a4 + v23);
        a5 += v24;
        if (!--v20)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v28 = *a4;
  if (v28 < v22)
  {
    *(_DWORD *)a5 = *(_DWORD *)v21[1];
    v29 = a4[1];
    if (v29 >= v22)
      goto LABEL_34;
LABEL_37:
    *(_DWORD *)(a5 + 4) = *(_DWORD *)v21[1];
    v30 = a4[2];
    if (v30 >= v22)
      goto LABEL_35;
    goto LABEL_38;
  }
  *(float *)a5 = (float)v28;
  v29 = a4[1];
  if (v29 < v22)
    goto LABEL_37;
LABEL_34:
  *(float *)(a5 + 4) = (float)v29;
  v30 = a4[2];
  if (v30 >= v22)
  {
LABEL_35:
    result = (float)v30;
    *(float *)(a5 + 8) = (float)v30;
    return result;
  }
LABEL_38:
  v32 = (float *)v21[1];
  result = *v32;
  *(float *)(a5 + 8) = *v32;
  return result;
}

uint64_t sub_239869684(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 ***v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (unsigned __int16 ***)&v29;
    a4.n128_f32[0] = sub_23986992C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398698C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_23986992C(unsigned __int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(unsigned __int16 **)(a2 + 24);
    }
    v19 = *(_QWORD *)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_QWORD *)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    return sub_239869AD0(&v26, v33, a1, v13, v19);
  }
  return result;
}

float sub_239869AD0(_DWORD *a1, _QWORD *a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  unsigned int i;
  float v6;
  int v7;
  unsigned __int16 **v8;
  unsigned int v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned __int16 **v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  float result;
  float *v32;

  if (a1[8])
  {
    for (i = 0; i < a1[8]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = a1[5];
      v8 = **a3;
      v9 = **v8;
      v10 = a5;
      v11 = a4;
      if (v7)
      {
        v12 = 2 * a1[6];
        v13 = 4 * a1[7];
        v10 = a5;
        v11 = a4;
        while (1)
        {
          v14 = *v11;
          if (v14 <= v9)
          {
            *(float *)v10 = (float)v14;
            v15 = v11[1];
            if (v15 > v9)
              goto LABEL_13;
LABEL_10:
            *(float *)(v10 + 4) = (float)v15;
            v16 = v11[2];
            if (v16 <= v9)
              goto LABEL_14;
LABEL_7:
            *(_DWORD *)(v10 + 8) = *(_DWORD *)v8[1];
            v11 = (unsigned __int16 *)((char *)v11 + v12);
            v10 += v13;
            if (!--v7)
              break;
          }
          else
          {
            *(_DWORD *)v10 = *(_DWORD *)v8[1];
            v15 = v11[1];
            if (v15 <= v9)
              goto LABEL_10;
LABEL_13:
            *(_DWORD *)(v10 + 4) = *(_DWORD *)v8[1];
            v16 = v11[2];
            if (v16 > v9)
              goto LABEL_7;
LABEL_14:
            *(float *)(v10 + 8) = (float)v16;
            v11 = (unsigned __int16 *)((char *)v11 + v12);
            v10 += v13;
            if (!--v7)
              break;
          }
        }
      }
      *a2 = v11;
      a2[2] = v10;
      v17 = *v11;
      if (v17 <= v9)
      {
        *(float *)v10 = (float)v17;
        v18 = v11[1];
        if (v18 <= v9)
        {
LABEL_17:
          *(float *)(v10 + 4) = (float)v18;
          v19 = v11[2];
          if (v19 <= v9)
            goto LABEL_21;
          goto LABEL_3;
        }
      }
      else
      {
        *(_DWORD *)v10 = *(_DWORD *)v8[1];
        v18 = v11[1];
        if (v18 <= v9)
          goto LABEL_17;
      }
      *(_DWORD *)(v10 + 4) = *(_DWORD *)v8[1];
      v19 = v11[2];
      if (v19 <= v9)
      {
LABEL_21:
        v6 = (float)v19;
        goto LABEL_4;
      }
LABEL_3:
      v6 = *(float *)v8[1];
LABEL_4:
      *(float *)(v10 + 8) = v6;
      a4 += a1[9];
      a5 += 4 * a1[10];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v20 = a1[5];
  v21 = **a3;
  v22 = **v21;
  if (v20)
  {
    v23 = 2 * a1[6];
    v24 = 4 * a1[7];
    while (1)
    {
      v25 = *a4;
      if (v25 <= v22)
      {
        *(float *)a5 = (float)v25;
        v26 = a4[1];
        if (v26 > v22)
          goto LABEL_30;
LABEL_27:
        *(float *)(a5 + 4) = (float)v26;
        v27 = a4[2];
        if (v27 <= v22)
          goto LABEL_31;
LABEL_24:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v21[1];
        a4 = (unsigned __int16 *)((char *)a4 + v23);
        a5 += v24;
        if (!--v20)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v21[1];
        v26 = a4[1];
        if (v26 <= v22)
          goto LABEL_27;
LABEL_30:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v21[1];
        v27 = a4[2];
        if (v27 > v22)
          goto LABEL_24;
LABEL_31:
        *(float *)(a5 + 8) = (float)v27;
        a4 = (unsigned __int16 *)((char *)a4 + v23);
        a5 += v24;
        if (!--v20)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v28 = *a4;
  if (v28 > v22)
  {
    *(_DWORD *)a5 = *(_DWORD *)v21[1];
    v29 = a4[1];
    if (v29 <= v22)
      goto LABEL_34;
LABEL_37:
    *(_DWORD *)(a5 + 4) = *(_DWORD *)v21[1];
    v30 = a4[2];
    if (v30 <= v22)
      goto LABEL_35;
    goto LABEL_38;
  }
  *(float *)a5 = (float)v28;
  v29 = a4[1];
  if (v29 > v22)
    goto LABEL_37;
LABEL_34:
  *(float *)(a5 + 4) = (float)v29;
  v30 = a4[2];
  if (v30 <= v22)
  {
LABEL_35:
    result = (float)v30;
    *(float *)(a5 + 8) = (float)v30;
    return result;
  }
LABEL_38:
  v32 = (float *)v21[1];
  result = *v32;
  *(float *)(a5 + 8) = *v32;
  return result;
}

double sub_239869DB0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398631FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE238;
  sub_239869FBC((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239869EC4(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239869E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239869EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239869EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AEB288;
  sub_23986ABA8(a2, &v11);
  sub_23986A648(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2398356DC(a2, (uint64_t)(a3 + 1));
}

void sub_239869F80(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239869F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397C0024((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239869FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239869FBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_23986A0BC(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_2398272CC(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_23986A0A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_23986A0BC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 18)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23986A2FC(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_23986A29C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23986A2FC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23986A374();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23986A374()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256934328);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256934328))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397AFEFC();
    sub_23986A578((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23986A578((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256934310, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256934310, &dword_23940C000);
          __cxa_guard_release(&qword_256934328);
          return &stru_256934310;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256934310;
}

void sub_23986A4C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256934328);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256934328);
  _Unwind_Resume(a1);
}

void sub_23986A578(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23986A60C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23986A648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_23986A81C(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23986A7F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23986A81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_33;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v16, v4, 0);
        v17 = a1;
        v18 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        sub_2397F28B8(&v17);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v16 = 0;
  v17 = a1;
  v18 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v20 = &v19;
    sub_23986A9B8((uint64_t)&v20, a1, a2);
  }
LABEL_29:
  result = v16;
  v16 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23986A994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23986A9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _WORD *v21;
  int v22;
  _WORD *v23;
  _WORD *v24;
  _WORD *v25;
  _WORD *v26;
  int v27;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v10 = *(unsigned int *)(a2 + 48);
    v11 = *(unsigned int *)(a2 + 52);
    v12 = *(unsigned int *)(a3 + 24);
    v13 = *(unsigned int *)(a3 + 28);
    v14 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_WORD **)(a2 + 24);
    }
    v20 = v3 - 1;
    v21 = *(_WORD **)a3;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[1];
          v21[2] = v14[2];
          v14 += v11;
          v21 += v13;
          --v9;
        }
        while (v9);
LABEL_27:
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        return;
      }
      v22 = 0;
      v23 = v21 + 2;
      v24 = v14 + 2;
      do
      {
        v25 = v24;
        v26 = v23;
        v27 = v3 - 1;
        do
        {
          *(v26 - 2) = *(v25 - 2);
          *(v26 - 1) = *(v25 - 1);
          *v26 = *v25;
          v26 += v12;
          v25 += v10;
          --v27;
        }
        while (v27);
        *(v26 - 2) = *(v25 - 2);
        *(v26 - 1) = *(v25 - 1);
        *v26 = *v25;
        v14 += v11;
        v21 += v13;
        ++v22;
        v23 += v13;
        v24 += v11;
      }
      while (v22 != v9);
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v14 += v10;
        v21 += v12;
        --v20;
      }
      while (v20);
    }
    goto LABEL_27;
  }
}

void sub_23986ABA8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_23986ACB0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_23986AC94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_23986ACB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 18);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_23986AE00(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_23986AE14@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_2398631FC(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE6058;
  sub_23986B020((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23986AF28(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23986AEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23986AF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23986AF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t (**v10)();
  uint64_t v11;
  std::__shared_weak_count *v12;

  v10 = &off_250AE4D98;
  sub_239763350(a2, &v11);
  sub_23986B6AC(a1, (uint64_t)&v10);
  v6 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  nullsub_4(&v10);
  *a3 = &off_250ADB778;
  return sub_2397635BC(a2, (uint64_t)(a3 + 1));
}

void sub_23986AFE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23986AFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23974B4CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23986B00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_23986B020(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_23986B120(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239827880(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_23986B104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_23986B120(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 22)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_23986B360(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_23986B300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_23986B360(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_23986B3D8();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_23986B3D8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256934348);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256934348))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_23970EDE0();
    sub_23986B5DC((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_23986B5DC((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256934330, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256934330, &dword_23940C000);
          __cxa_guard_release(&qword_256934348);
          return &stru_256934330;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256934330;
}

void sub_23986B528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256934348);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256934348);
  _Unwind_Resume(a1);
}

void sub_23986B5DC(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_23986B670(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23986B6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_21;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v5)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v9)
    goto LABEL_36;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v22 = 0;
    v13 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v15 = *(_QWORD *)(a2 + 24) == 0;
    else
      v15 = 1;
    if (v15)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v22, v4, 1);
  v13 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v14 = *(_QWORD *)(a2 + 24) == 0;
  else
    v14 = 1;
  if (v14)
    goto LABEL_32;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    v18 = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v17 + 88))(v17, 1, "unknown location");
LABEL_32:
  sub_23986A81C(a1, v13);
  result = v22;
  v22 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23986B85C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23986B880(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23986B8A4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23986B978(a1, a2);
}

double sub_23986B8B0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23986D5E4(a1, a2);
}

double sub_23986B8BC@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23986EE28(a1, a2);
}

double sub_23986B8C8@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23986F4AC(a1, a2);
}

double sub_23986B8D4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239870B08(a1, a2);
}

double sub_23986B8E0@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239871B64(a1, a2);
}

uint64_t sub_23986B978@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_23986BBB4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDA18;
  sub_239858A98((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_23986BA8C(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_23986BA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23986BA70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23986BA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEA9D0;
  sub_239864A20(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEAB0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23982F700(a2, (uint64_t)(a4 + 1));
}

void sub_23986BB78(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23986BB8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23986BBA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397B94B8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23986BBB4(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 11;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_23986BCF4((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239830F44((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_23986BCB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23986BCE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23986BCF4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 11);
  *a2 = &off_250AEDD18;
  sub_23985BDE4((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_23986BE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23986BE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23986BE44(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23986BE8C(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23986BE54(uint64_t **a1, uint64_t a2)
{
  return sub_23986CD44(**a1, (*a1)[1], a2);
}

uint64_t sub_23986BE64(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23986BFDC(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23986BE8C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  unsigned int v12;
  double v13;
  double v14;
  unsigned int v15;
  _QWORD v22[2];
  _QWORD v23[2];
  _QWORD v24[2];
  double v25;
  double v26;
  double v27;
  double v28;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v12 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = 255;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v12 = *(unsigned __int8 *)(a3 + 40);
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v13 = *(double *)(a3 + 24);
  if (v13 < 0.0)
    v13 = 0.0;
  v12 = (int)v13;
  v14 = 255.0;
  if (*(double *)(a3 + 32) <= 255.0)
    v14 = *(double *)(a3 + 32);
  v15 = (int)v14;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v15;
  if (_ZF)
    return sub_23986BFDC(a1, a2, (uint64_t)v24, _Q0);
  __asm { FCVT            D0, H0 }
  v28 = _D0;
  __asm { FCVT            D1, H1 }
  v26 = (double)v12;
  v27 = 1.0 / (_D1 - _D0);
  v25 = (double)v15 - (double)v12;
  v24[0] = &v28;
  v24[1] = &v27;
  v23[0] = &v26;
  v23[1] = &v25;
  v22[0] = v24;
  v22[1] = v23;
  return sub_23986C584(a1, a2, (uint64_t)v22);
}

uint64_t sub_23986BFDC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23986C284((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23986C220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_23986C284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  _BYTE *v26;
  __int16 *v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v29 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v30 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v28 = 0;
    v31 = v3 - 1;
    v32 = v11 | (v12 << 32);
    v33 = v5 - 1;
    v34 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v27 = v13;
    v19 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_BYTE **)(a3 + 24);
    }
    v26 = v19;
    return sub_23986C428(&v28, a1, &v27, &v26);
  }
  return result;
}

float sub_23986C428(_DWORD *a1, uint64_t a2, __int16 **a3, _BYTE **a4)
{
  __int16 *v4;
  _BYTE *v5;
  unsigned int v6;
  _BYTE *v15;
  __int16 *v16;
  unsigned int v17;
  unsigned int v22;
  float result;

  v4 = *a3;
  v5 = *a4;
  if (a1[8])
  {
    v6 = 0;
    do
    {
      v15 = v5;
      v16 = v4;
      if (a1[5])
      {
        v17 = 0;
        v16 = v4;
        v15 = v5;
        do
        {
          _H0 = *v16;
          __asm { FCVT            S0, H0 }
          *v15 = (int)_S0;
          LOWORD(_S0) = v16[1];
          __asm { FCVT            S0, H0 }
          v15[1] = (int)_S0;
          LOWORD(_S0) = v16[2];
          __asm { FCVT            S0, H0 }
          v15[2] = (int)_S0;
          v16 += a1[6];
          v15 += a1[7];
          ++v17;
        }
        while (v17 < a1[5]);
      }
      _H0 = *v16;
      __asm { FCVT            S0, H0 }
      *v15 = (int)_S0;
      LOWORD(_S0) = v16[1];
      __asm { FCVT            S0, H0 }
      v15[1] = (int)_S0;
      LOWORD(_S0) = v16[2];
      __asm { FCVT            S0, H0 }
      v15[2] = (int)_S0;
      v4 += a1[9];
      v5 += a1[10];
      ++v6;
    }
    while (v6 < a1[8]);
  }
  if (a1[5])
  {
    v22 = 0;
    do
    {
      _H0 = *v4;
      __asm { FCVT            S0, H0 }
      *v5 = (int)_S0;
      LOWORD(_S0) = v4[1];
      __asm { FCVT            S0, H0 }
      v5[1] = (int)_S0;
      LOWORD(_S0) = v4[2];
      __asm { FCVT            S0, H0 }
      v5[2] = (int)_S0;
      v4 += a1[6];
      v5 += a1[7];
      ++v22;
    }
    while (v22 < a1[5]);
  }
  _H0 = *v4;
  __asm { FCVT            S0, H0 }
  *v5 = (int)_S0;
  LOWORD(_S0) = v4[1];
  __asm { FCVT            S0, H0 }
  v5[1] = (int)_S0;
  LOWORD(_S0) = v4[2];
  __asm { FCVT            S0, H0 }
  v5[2] = (int)result;
  return result;
}

uint64_t sub_23986C584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double ****v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (double ****)&v28;
    sub_23986C82C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23986C7C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23986C82C(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    sub_23986C9D0(&v25, (__int16 **)v32, a1, v13, v19);
  }
}

void sub_23986C9D0(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, __int16 *a5)
{
  unsigned int v10;
  unsigned int v11;
  __int16 *v12;
  __int16 *v13;
  double ***v14;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v26;
  double **v29;
  double **v30;
  double v31;
  double v32;
  double v33;
  double ***v34;
  double **v37;
  double **v38;
  double v39;
  double v40;
  double v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  __int16 *v45;
  __int16 *v46;
  __int16 *v47;

  if (a1[8])
  {
    v10 = 0;
    do
    {
      v46 = a5;
      v47 = a4;
      *a2 = a4;
      a2[2] = a5;
      if (a1[5])
      {
        v11 = 0;
        v12 = a5;
        v13 = a4;
        do
        {
          *a2 = v13;
          a2[2] = v12;
          v14 = **a3;
          _H0 = *v13;
          __asm { FCVT            D0, H0 }
          v21 = *v14;
          v22 = v14[1];
          v23 = (_D0 - **v21) * *v21[1];
          v24 = fmax(v23, 0.0);
          if (v23 <= 1.0)
            v25 = v24;
          else
            v25 = 1.0;
          *(_BYTE *)v12 = llround(**v22 + v25 * *v22[1]);
          v26 = **a3;
          _H0 = (*a2)[1];
          __asm { FCVT            D0, H0 }
          v30 = *v26;
          v29 = v26[1];
          v31 = (_D0 - **v30) * *v30[1];
          v32 = fmax(v31, 0.0);
          if (v31 <= 1.0)
            v33 = v32;
          else
            v33 = 1.0;
          *((_BYTE *)a2[2] + 1) = llround(**v29 + v33 * *v29[1]);
          v34 = **a3;
          _H0 = (*a2)[2];
          __asm { FCVT            D0, H0 }
          v38 = *v34;
          v37 = v34[1];
          v39 = (_D0 - **v38) * *v38[1];
          v40 = fmax(v39, 0.0);
          if (v39 <= 1.0)
            v41 = v40;
          else
            v41 = 1.0;
          *((_BYTE *)a2[2] + 2) = llround(**v37 + v41 * *v37[1]);
          v42 = a1[5];
          v13 = &v47[a1[6]];
          v12 = (__int16 *)((char *)v46 + a1[7]);
          v46 = v12;
          v47 = v13;
          ++v11;
        }
        while (v11 < v42);
      }
      sub_23986CC28((uint64_t)a1, a2, a3, &v47, &v46);
      a4 += a1[9];
      a5 = (__int16 *)((char *)a5 + a1[10]);
      ++v10;
    }
    while (v10 < a1[8]);
  }
  v46 = a5;
  v47 = a4;
  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v43 = 0;
    do
    {
      sub_23986CC28((uint64_t)a1, a2, a3, &v47, &v46);
      v44 = a1[5];
      v45 = &v47[a1[6]];
      v46 = (__int16 *)((char *)v46 + a1[7]);
      v47 = v45;
      ++v43;
    }
    while (v43 < v44);
  }
  sub_23986CC28((uint64_t)a1, a2, a3, &v47, &v46);
}

double sub_23986CC28(uint64_t a1, __int16 **a2, double *****a3, __int16 **a4, __int16 **a5)
{
  __int16 *v5;
  __int16 *v6;
  double ***v7;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double ***v19;
  double **v22;
  double **v23;
  double v24;
  double v25;
  double v26;
  double ***v27;
  double **v30;
  double **v31;
  double v32;
  double v33;
  double v34;
  double result;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  a2[2] = *a5;
  v7 = **a3;
  _H0 = *v5;
  __asm { FCVT            D0, H0 }
  v14 = *v7;
  v15 = v7[1];
  v16 = (_D0 - **v14) * *v14[1];
  v17 = fmax(v16, 0.0);
  if (v16 <= 1.0)
    v18 = v17;
  else
    v18 = 1.0;
  *(_BYTE *)v6 = llround(**v15 + v18 * *v15[1]);
  v19 = **a3;
  _H0 = (*a2)[1];
  __asm { FCVT            D0, H0 }
  v23 = *v19;
  v22 = v19[1];
  v24 = (_D0 - **v23) * *v23[1];
  v25 = fmax(v24, 0.0);
  if (v24 <= 1.0)
    v26 = v25;
  else
    v26 = 1.0;
  *((_BYTE *)a2[2] + 1) = llround(**v22 + v26 * *v22[1]);
  v27 = **a3;
  _H0 = (*a2)[2];
  __asm { FCVT            D0, H0 }
  v31 = *v27;
  v30 = v27[1];
  v32 = (_D0 - **v31) * *v31[1];
  v33 = fmax(v32, 0.0);
  if (v32 <= 1.0)
    v34 = v33;
  else
    v34 = 1.0;
  result = **v30 + v34 * *v30[1];
  *((_BYTE *)a2[2] + 2) = llround(result);
  return result;
}

uint64_t sub_23986CD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  char v19;
  char v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 255.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 255.0)
      v6 = v4;
    else
      v6 = 255.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 23544;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_23986CE0C(a1, a2, (uint64_t)v16);
}

uint64_t sub_23986CE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_23986D0B4(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23986D050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23986D0B4(__int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    sub_23986D258(&v25, (uint64_t)v32, a1, v13, v19);
  }
}

void sub_23986D258(_DWORD *a1, uint64_t a2, __int16 ****a3, __int16 *a4, __int16 *a5)
{
  int v10;
  int v11;
  __int16 *v12;
  __int16 *v13;
  __int16 *v14;
  unsigned int v15;
  __int16 **v16;
  __int16 **v27;
  __int16 *v32;
  __int16 **v35;
  unsigned int v42;
  unsigned int v43;
  __int16 *v44;
  __int16 *v45;
  __int16 *v46;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      v45 = a5;
      v46 = a4;
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      if (a1[5])
        break;
LABEL_3:
      sub_23986D4B4((uint64_t)a1, (__int16 **)a2, a3, &v46, &v45);
      a4 += a1[9];
      a5 = (__int16 *)((char *)a5 + a1[10]);
      if (++v10 >= a1[8])
        goto LABEL_24;
    }
    v11 = 0;
    v12 = a5;
    v13 = a4;
    while (1)
    {
      *(_QWORD *)a2 = v13;
      *(_QWORD *)(a2 + 16) = v12;
      v16 = **a3;
      _H0 = *v13;
      _H1 = **v16;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 >= _S1)
      {
        _H1 = *v16[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          LODWORD(v16) = (int)_S0;
        else
          LOBYTE(v16) = *(_BYTE *)v16[3];
      }
      else
      {
        LOBYTE(v16) = *(_BYTE *)v16[1];
      }
      *(_BYTE *)v12 = (_BYTE)v16;
      v27 = **a3;
      _H0 = *(_WORD *)(*(_QWORD *)a2 + 2);
      _H1 = **v27;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 < _S1)
        break;
      _H1 = *v27[2];
      __asm { FCVT            S1, H1 }
      if (_S0 > _S1)
      {
        v32 = v27[3];
        goto LABEL_18;
      }
      LODWORD(v32) = (int)_S0;
LABEL_20:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 1) = (_BYTE)v32;
      v35 = **a3;
      _H0 = *(_WORD *)(*(_QWORD *)a2 + 4);
      _H1 = **v35;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 < _S1)
      {
        v14 = v35[1];
      }
      else
      {
        _H1 = *v35[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          LODWORD(v14) = (int)_S0;
          goto LABEL_8;
        }
        v14 = v35[3];
      }
      LOBYTE(v14) = *(_BYTE *)v14;
LABEL_8:
      *(_BYTE *)(*(_QWORD *)(a2 + 16) + 2) = (_BYTE)v14;
      v15 = a1[5];
      v13 = &v46[a1[6]];
      v12 = (__int16 *)((char *)v45 + a1[7]);
      v45 = v12;
      v46 = v13;
      if (++v11 >= v15)
        goto LABEL_3;
    }
    v32 = v27[1];
LABEL_18:
    LOBYTE(v32) = *(_BYTE *)v32;
    goto LABEL_20;
  }
LABEL_24:
  v45 = a5;
  v46 = a4;
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v42 = 0;
    do
    {
      sub_23986D4B4((uint64_t)a1, (__int16 **)a2, a3, &v46, &v45);
      v43 = a1[5];
      v44 = &v46[a1[6]];
      v45 = (__int16 *)((char *)v45 + a1[7]);
      v46 = v44;
      ++v42;
    }
    while (v42 < v43);
  }
  sub_23986D4B4((uint64_t)a1, (__int16 **)a2, a3, &v46, &v45);
}

void sub_23986D4B4(uint64_t a1, __int16 **a2, __int16 ****a3, __int16 **a4, __int16 **a5)
{
  __int16 *v5;
  __int16 *v6;
  __int16 **v7;
  __int16 **v18;
  __int16 *v23;
  __int16 *v26;
  __int16 **v27;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  a2[2] = *a5;
  v7 = **a3;
  _H0 = *v5;
  _H1 = **v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v7[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      LODWORD(v7) = (int)_S0;
    else
      LOBYTE(v7) = *(_BYTE *)v7[3];
  }
  else
  {
    LOBYTE(v7) = *(_BYTE *)v7[1];
  }
  *(_BYTE *)v6 = (_BYTE)v7;
  v18 = **a3;
  _H0 = (*a2)[1];
  _H1 = **v18;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 < _S1)
  {
    v23 = v18[1];
LABEL_10:
    LOBYTE(v23) = *(_BYTE *)v23;
    goto LABEL_12;
  }
  _H1 = *v18[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v23 = v18[3];
    goto LABEL_10;
  }
  LODWORD(v23) = (int)_S0;
LABEL_12:
  *((_BYTE *)a2[2] + 1) = (_BYTE)v23;
  v26 = a2[2];
  v27 = **a3;
  _H0 = (*a2)[2];
  _H1 = **v27;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v27[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      *((_BYTE *)v26 + 2) = (int)_S0;
    else
      *((_BYTE *)v26 + 2) = *(_BYTE *)v27[3];
  }
  else
  {
    *((_BYTE *)v26 + 2) = *(_BYTE *)v27[1];
  }
}

double sub_23986D5E4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23986BBB4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDB98;
  sub_239859828((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23986D6F8(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23986D6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23986D6DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23986D6F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEAAC8;
  sub_23985B93C(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEAC8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_2398302E4(a2, (uint64_t)(a4 + 1));
}

void sub_23986D7E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23986D7F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23986D80C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BA08C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23986D820(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23986D868(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23986D830(uint64_t **a1, uint64_t a2)
{
  return sub_23986E5CC(**a1, (*a1)[1], a2);
}

uint64_t sub_23986D840(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23986D9C4(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23986D868(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  int v13;
  double v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v18;
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  double v26;
  double v27;
  double v28;
  unint64_t v29;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
LABEL_13:
    v15 = -65536;
    goto LABEL_14;
  }
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a3 + 40))
    goto LABEL_13;
LABEL_7:
  v12 = *(double *)(a3 + 24);
  if (v12 < 0.0)
    v12 = 0.0;
  v13 = (int)v12;
  v14 = 65535.0;
  if (*(double *)(a3 + 32) <= 65535.0)
    v14 = *(double *)(a3 + 32);
  v15 = v13 | ((int)v14 << 16);
LABEL_14:
  v16 = (unsigned __int16)v15;
  __asm { FCVT            S2, H0 }
  v18 = HIWORD(v15);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v18;
  if (_ZF)
    return sub_23986D9C4(a1, a2, (uint64_t)v25, _Q0);
  __asm { FCVT            D0, H0 }
  v29 = _Q0.n128_u64[0];
  __asm { FCVT            D1, H1 }
  v27 = (double)v16;
  v28 = 1.0 / (_D1 - _Q0.n128_f64[0]);
  _Q0.n128_f64[0] = (double)v18 - (double)v16;
  v26 = _Q0.n128_f64[0];
  v25[0] = &v29;
  v25[1] = &v28;
  v24[0] = &v27;
  v24[1] = &v26;
  v23[0] = v25;
  v23[1] = v24;
  return sub_23986DFC0(a1, a2, (uint64_t)v23, _Q0);
}

uint64_t sub_23986D9C4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23986DC6C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23986DC08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_23986DC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _WORD *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  _WORD *v26;
  __int16 *v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v29 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v30 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v28 = 0;
    v31 = v3 - 1;
    v32 = v11 | (v12 << 32);
    v33 = v5 - 1;
    v34 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v27 = v13;
    v19 = *(_WORD **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_WORD **)(a3 + 24);
    }
    v26 = v19;
    return sub_23986DE10(&v28, a1, &v27, &v26);
  }
  return result;
}

float sub_23986DE10(_DWORD *a1, uint64_t a2, __int16 **a3, _WORD **a4)
{
  __int16 *v4;
  _WORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _WORD *v12;
  _WORD *v13;
  uint64_t v14;
  _WORD *v15;
  _WORD *v16;
  int v17;
  uint64_t v30;
  uint64_t v31;
  uint64_t v36;
  float result;

  v4 = *a3;
  v5 = *a4;
  v6 = a1[8];
  if (!v6)
  {
    v7 = a1[5];
    if (!v7)
      goto LABEL_14;
    goto LABEL_9;
  }
  v7 = a1[5];
  v8 = a1[9];
  v9 = a1[10];
  if (v7)
  {
    v10 = 0;
    v11 = 2 * a1[7];
    v12 = v5 + 2;
    v13 = v4 + 2;
    v14 = 2 * a1[6];
    do
    {
      v15 = v13;
      v16 = v12;
      v17 = v7;
      do
      {
        _H0 = *(v15 - 2);
        __asm { FCVT            S0, H0 }
        *(v16 - 2) = (int)_S0;
        LOWORD(_S0) = *(v15 - 1);
        __asm { FCVT            S0, H0 }
        *(v16 - 1) = (int)_S0;
        LOWORD(_S0) = *v15;
        __asm { FCVT            S0, H0 }
        *v16 = (int)_S0;
        v16 = (_WORD *)((char *)v16 + v11);
        v15 = (_WORD *)((char *)v15 + v14);
        --v17;
      }
      while (v17);
      _H0 = *(v15 - 2);
      __asm { FCVT            S0, H0 }
      *(v16 - 2) = (int)_S0;
      LOWORD(_S0) = *(v15 - 1);
      __asm { FCVT            S0, H0 }
      *(v16 - 1) = (int)_S0;
      LOWORD(_S0) = *v15;
      __asm { FCVT            S0, H0 }
      *v16 = (int)_S0;
      v4 += v8;
      v5 += v9;
      ++v10;
      v12 += v9;
      v13 += v8;
    }
    while (v10 != v6);
LABEL_9:
    v30 = 2 * a1[6];
    v31 = 2 * a1[7];
    do
    {
      _H0 = *v4;
      __asm { FCVT            S0, H0 }
      *v5 = (int)_S0;
      LOWORD(_S0) = v4[1];
      __asm { FCVT            S0, H0 }
      v5[1] = (int)_S0;
      LOWORD(_S0) = v4[2];
      __asm { FCVT            S0, H0 }
      v5[2] = (int)_S0;
      v4 = (__int16 *)((char *)v4 + v30);
      v5 = (_WORD *)((char *)v5 + v31);
      --v7;
    }
    while (v7);
    goto LABEL_14;
  }
  v36 = 2 * v8;
  do
  {
    _H0 = *v4;
    __asm { FCVT            S0, H0 }
    *v5 = (int)_S0;
    LOWORD(_S0) = v4[1];
    __asm { FCVT            S0, H0 }
    v5[1] = (int)_S0;
    LOWORD(_S0) = v4[2];
    __asm { FCVT            S0, H0 }
    v5[2] = (int)_S0;
    v5 += v9;
    v4 = (__int16 *)((char *)v4 + v36);
    --v6;
  }
  while (v6);
LABEL_14:
  _H0 = *v4;
  __asm { FCVT            S0, H0 }
  *v5 = (int)_S0;
  LOWORD(_S0) = v4[1];
  __asm { FCVT            S0, H0 }
  v5[1] = (int)_S0;
  LOWORD(_S0) = v4[2];
  __asm { FCVT            S0, H0 }
  v5[2] = (int)result;
  return result;
}

uint64_t sub_23986DFC0(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f64[0] = sub_23986E268(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23986E204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_23986E268(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  double result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_23986E450(&v27, (__int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_23986E450(&v27, (__int16 **)v34, a1, v13, v19);
  }
  return result;
}

double sub_23986E450(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, __int16 *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  double v31;
  double v32;
  double v33;
  double v36;
  double v37;
  double v38;
  double v41;
  double v42;
  double v43;
  double v46;
  double v47;
  double v48;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 2 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      *a5 = llround(v11 + v12 * v23);
      _H6 = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      a5[1] = llround(v11 + v12 * v28);
      _H6 = a4[2];
      __asm { FCVT            D6, H6 }
      v31 = v10 * (_D6 - v9);
      v32 = fmax(v31, 0.0);
      if (v31 <= 1.0)
        v33 = v32;
      else
        v33 = 1.0;
      a5[2] = llround(v11 + v12 * v33);
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (__int16 *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v36 = v10 * (_D4 - v9);
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  *a5 = llround(v11 + v12 * v38);
  _H4 = a4[1];
  __asm { FCVT            D4, H4 }
  v41 = v10 * (_D4 - v9);
  v42 = fmax(v41, 0.0);
  if (v41 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  a5[1] = llround(v11 + v12 * v43);
  _H4 = a4[2];
  __asm { FCVT            D4, H4 }
  v46 = v10 * (_D4 - v9);
  v47 = fmax(v46, 0.0);
  if (v46 <= 1.0)
    v48 = v47;
  else
    v48 = 1.0;
  result = v11 + v12 * v48;
  a5[2] = llround(result);
  return result;
}

uint64_t sub_23986E5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  unsigned int v5;
  double v6;
  unsigned int v7;
  _QWORD v16[4];
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = 0.0;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 65535.0;
    if (v3 < 0.0)
      v3 = 0.0;
    v5 = (int)v3;
    if (v4 <= 65535.0)
      v6 = v4;
    else
      v6 = 65535.0;
    v7 = (int)v6;
    v20 = v5;
    v19 = (int)v6;
    _S0 = (float)v5;
    __asm { FCVT            H0, S0 }
    v18 = LOWORD(_S0);
    _S0 = (float)v7;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v20 = 0;
    v19 = -1;
    _H0 = 31744;
    v18 = 0;
  }
  v17 = _H0;
  v16[0] = &v18;
  v16[1] = &v20;
  v16[2] = &v17;
  v16[3] = &v19;
  return sub_23986E694(a1, a2, (uint64_t)v16);
}

uint64_t sub_23986E694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 ***v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = (__int16 ***)&v28;
    sub_23986E93C(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23986E8D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_23986E93C(__int16 ****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  __int16 *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _OWORD v32[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v26 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v27 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v25 = 0;
    v28 = v3 - 1;
    v29 = v11 | (v12 << 32);
    v30 = v5 - 1;
    v31 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(__int16 **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(__int16 **)(a3 + 24);
    }
    memset(v32, 0, sizeof(v32));
    sub_23986EAE0(&v25, (uint64_t)v32, a1, v13, v19);
  }
}

void sub_23986EAE0(_DWORD *a1, uint64_t a2, __int16 ****a3, __int16 *a4, __int16 *a5)
{
  int v10;
  int v11;
  __int16 ***v12;
  uint64_t v13;
  uint64_t v14;
  __int16 *v15;
  __int16 *v16;
  __int16 *v17;
  __int16 **v18;
  __int16 *v19;
  int v28;
  __int16 *v35;
  unsigned int v44;
  unsigned int v45;
  __int16 *v46;
  __int16 *v47;
  __int16 *v48;

  if (a1[8])
  {
    v10 = 0;
    while (1)
    {
      v47 = a5;
      v48 = a4;
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 16) = a5;
      v11 = a1[5];
      if (v11)
        break;
LABEL_3:
      sub_23986ED20((uint64_t)a1, (__int16 **)a2, a3, &v48, &v47);
      a4 += a1[9];
      a5 += a1[10];
      if (++v10 >= a1[8])
        goto LABEL_24;
    }
    v12 = *a3;
    v13 = 2 * a1[7];
    v14 = 2 * a1[6];
    v15 = a4;
    v16 = a5;
    while (1)
    {
      *(_QWORD *)a2 = v15;
      *(_QWORD *)(a2 + 16) = v16;
      v18 = *v12;
      v19 = **v12;
      _H0 = *v15;
      _H1 = *v19;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 >= _S1)
      {
        _H1 = *v18[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          v28 = (int)_S0;
        else
          LOWORD(v28) = *v18[3];
      }
      else
      {
        LOWORD(v28) = *v18[1];
      }
      *v16 = v28;
      _H0 = v15[1];
      _H1 = *v19;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = *v18[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          LODWORD(v35) = (int)_S0;
          goto LABEL_19;
        }
        v35 = v18[3];
      }
      else
      {
        v35 = v18[1];
      }
      LOWORD(v35) = *v35;
LABEL_19:
      v16[1] = (__int16)v35;
      _H0 = v15[2];
      _H1 = *v19;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v17 = v18[1];
LABEL_7:
        v16[2] = *v17;
        v15 = (__int16 *)((char *)v15 + v14);
        v16 = (__int16 *)((char *)v16 + v13);
        v47 = v16;
        v48 = v15;
        if (!--v11)
          goto LABEL_3;
      }
      else
      {
        _H1 = *v18[2];
        __asm { FCVT            S1, H1 }
        if (_S0 > _S1)
        {
          v17 = v18[3];
          goto LABEL_7;
        }
        v16[2] = (int)_S0;
        v15 = (__int16 *)((char *)v15 + v14);
        v16 = (__int16 *)((char *)v16 + v13);
        v47 = v16;
        v48 = v15;
        if (!--v11)
          goto LABEL_3;
      }
    }
  }
LABEL_24:
  v47 = a5;
  v48 = a4;
  *(_QWORD *)a2 = a4;
  *(_QWORD *)(a2 + 16) = a5;
  if (a1[5])
  {
    v44 = 0;
    do
    {
      sub_23986ED20((uint64_t)a1, (__int16 **)a2, a3, &v48, &v47);
      v45 = a1[5];
      v46 = &v48[a1[6]];
      v47 += a1[7];
      v48 = v46;
      ++v44;
    }
    while (v44 < v45);
  }
  sub_23986ED20((uint64_t)a1, (__int16 **)a2, a3, &v48, &v47);
}

void sub_23986ED20(uint64_t a1, __int16 **a2, __int16 ****a3, __int16 **a4, __int16 **a5)
{
  __int16 *v5;
  __int16 *v6;
  __int16 **v7;
  __int16 *v8;
  int v17;
  __int16 *v24;

  v5 = *a4;
  *a2 = *a4;
  v6 = *a5;
  a2[2] = *a5;
  v7 = **a3;
  v8 = *v7;
  _H0 = *v5;
  _H1 = **v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v7[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      v17 = (int)_S0;
    else
      LOWORD(v17) = *v7[3];
  }
  else
  {
    LOWORD(v17) = *v7[1];
  }
  *v6 = v17;
  _H0 = v5[1];
  _H1 = *v8;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v24 = v7[1];
LABEL_10:
    LOWORD(v24) = *v24;
    goto LABEL_12;
  }
  _H1 = *v7[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v24 = v7[3];
    goto LABEL_10;
  }
  LODWORD(v24) = (int)_S0;
LABEL_12:
  v6[1] = (__int16)v24;
  _H0 = v5[2];
  _H1 = *v8;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v7[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      v6[2] = (int)_S0;
    else
      v6[2] = *v7[3];
  }
  else
  {
    v6[2] = *v7[1];
  }
}

double sub_23986EE28@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23986BBB4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDD18;
  sub_23985BDE4((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23986EF74(*(_QWORD *)a1, (uint64_t)&v12);
  *a2 = &off_250ADB778;
  sub_239830F44((uint64_t)&v12, (uint64_t)(a2 + 1));
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23986EF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  j_nullsub_4_89(v9);
  sub_239416DA0(v10);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23986EF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23986EF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23986EF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_23;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_23;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
    else
    {
LABEL_23:
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v17, v4, 0);
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
LABEL_17:
  sub_239622218(a2, &v16);
  v13.n128_u64[0] = sub_23986F118(a1, a2);
  v14 = v16;
  v16 = 0;
  if (v14)
    (*(void (**)(uint64_t, float))(*(_QWORD *)v14 + 8))(v14, v13.n128_f32[0]);
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v13);
  return result;
}

void sub_23986F0B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

__int16 sub_23986F118@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _WORD *v20;
  __int16 *v21;
  __int128 *v22;
  _OWORD *v23;
  unint64_t v24;
  __int128 v25;
  __int16 v26;
  uint64_t v28;

  v3 = a1;
  v4 = *(_DWORD *)(a1 + 52);
  v5 = 3 * *(_DWORD *)(a1 + 56);
  if (v4 != *(_DWORD *)(a2 + 108) || v4 != v5)
  {
    v28 = (3 * *(_DWORD *)(a1 + 56));
    sub_23986F2E0(a1, a2, &v28);
    return v7;
  }
  v8 = *(unsigned int *)(a1 + 60) * (unint64_t)v5;
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 72))
    v10 = v9 == 0;
  else
    v10 = 1;
  if (!v10)
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(std::__shared_weak_count **)(a1 + 16);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    a1 = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v11 + 88))(v11, 0, "unknown location");
    v9 = *(_QWORD *)(v3 + 24);
  }
  if (v8 && !v9)
    sub_239EBF50C(a1, a2);
  v16 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 128) && v16)
  {
    a1 = (*(uint64_t (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a2 + 8) + 88))(*(_QWORD *)(a2 + 8), 1, "unknown location");
    v16 = *(_QWORD *)(a2 + 32);
  }
  if (v8 && !v16)
    sub_239EBF50C(a1, a2);
  if (v8)
  {
    v17 = (v8 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v17 < 0xF || (unint64_t)(v16 - v9) < 0x20)
    {
      v20 = (_WORD *)v16;
      v21 = (__int16 *)v9;
    }
    else
    {
      v18 = v17 + 1;
      v19 = (v17 + 1) & 0xFFFFFFFFFFFFFFF0;
      v20 = (_WORD *)(v16 + 2 * v19);
      v21 = (__int16 *)(v9 + 2 * v19);
      v22 = (__int128 *)(v9 + 16);
      v23 = (_OWORD *)(v16 + 16);
      v24 = v19;
      do
      {
        v7 = *(v22 - 1);
        v25 = *v22;
        *(v23 - 1) = v7;
        *v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 16;
      }
      while (v24);
      if (v18 == v19)
        return v7;
    }
    do
    {
      v26 = *v21++;
      LOWORD(v7) = v26;
      *v20++ = v26;
    }
    while (v21 != (__int16 *)(v9 + 2 * v8));
  }
  return v7;
}

uint64_t sub_23986F2E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_16;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
        if (*(_BYTE *)(a1 + 73))
          goto LABEL_14;
LABEL_16:
        v19 = 0;
        goto LABEL_17;
      }
    }
  }
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_16;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v19, v6, 0);
LABEL_17:
  sub_239622218(a2, &v18);
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
    v15.n128_f64[0] = sub_2397DDAD4(a3, a1, a2);
  v16 = v18;
  v18 = 0;
  if (v16)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v16 + 8))(v16, v15);
  result = v19;
  v19 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, v15);
  return result;
}

void sub_23986F448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

double sub_23986F4AC@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23986BBB4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEDE98;
  sub_23985EC2C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_23986F5C0(*(_QWORD *)a1, (uint64_t)&v12, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_23986F588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23986F5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_23986F5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEACB8;
  sub_239861838(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEAE0[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_239831AFC(a2, (uint64_t)(a4 + 1));
}

void sub_23986F6AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_23986F6C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_23986F6D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397BB8AC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23986F6E8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_23986F730(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_23986F6F8(uint64_t **a1, uint64_t a2)
{
  return sub_2398703E0(**a1, (*a1)[1], a2);
}

uint64_t sub_23986F708(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_23986F894(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_23986F730(uint64_t a1, uint64_t a2, uint64_t a3, __n128 _Q0)
{
  double v4;
  unsigned __int16 v9;
  double v12;
  float v13;
  double v14;
  float v15;
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  double v27;
  double v28;
  double v29;
  unint64_t v30;

  if (*(_BYTE *)(a3 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a3 >= -65504.0)
      v4 = *(double *)a3;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a3 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a3 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v12 = -3.40282347e38;
      if (*(double *)(a3 + 24) >= -3.40282347e38)
        v12 = *(double *)(a3 + 24);
      v13 = v12;
      v14 = 3.40282347e38;
      if (*(double *)(a3 + 32) <= 3.40282347e38)
        v14 = *(double *)(a3 + 32);
      v15 = v14;
      __asm
      {
        FCVT            S4, H0
        FCVT            S5, H1
      }
      if (v13 != _S4 || v15 != _S5)
        goto LABEL_15;
      return sub_23986F894(a1, a2, (uint64_t)v26, _Q0);
    }
  }
  else
  {
    _Q0.n128_u32[0] = 1006632960;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v15 = 1.0;
  v13 = 0.0;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (_S4 != 0.0 || 1.0 != _S5)
  {
LABEL_15:
    __asm { FCVT            D0, H0 }
    v30 = _Q0.n128_u64[0];
    __asm { FCVT            D1, H1 }
    v28 = v13;
    v29 = 1.0 / (_D1 - _Q0.n128_f64[0]);
    _Q0.n128_f64[0] = v15 - v13;
    v27 = _Q0.n128_f64[0];
    v26[0] = &v30;
    v26[1] = &v29;
    v25[0] = &v28;
    v25[1] = &v27;
    v24[0] = v26;
    v24[1] = v25;
    return sub_23986FDD4(a1, a2, (uint64_t)v24, _Q0);
  }
  return sub_23986F894(a1, a2, (uint64_t)v26, _Q0);
}

uint64_t sub_23986F894(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_23986FB3C((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_23986FAD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_23986FB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  float *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  _DWORD *v30;
  _WORD *v31;
  _WORD *v32;
  _DWORD *v33;
  int v34;
  float result;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    _ZF = v3 == 0;
  else
    _ZF = 1;
  if (!_ZF && v4 != 0)
  {
    v9 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v13 = *(unsigned int *)(a3 + 48);
    v12 = *(unsigned int *)(a3 + 52);
    v14 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(__int16 **)(a2 + 24);
    }
    v20 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v20)
    {
      v21 = *(_QWORD *)(a3 + 8);
      v22 = *(std::__shared_weak_count **)(a3 + 16);
      if (v22)
      {
        v23 = (unint64_t *)&v22->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
        do
          v25 = __ldaxr(v23);
        while (__stlxr(v25 - 1, v23));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v21 + 88))(v21, 1, "unknown location");
      v20 = *(float **)(a3 + 24);
    }
    v26 = v3 - 1;
    v27 = 2 * v11;
    v28 = 4 * v13;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          _H0 = *v14;
          __asm { FCVT            S0, H0 }
          *(_DWORD *)v20 = _S0;
          LOWORD(_S0) = v14[1];
          __asm { FCVT            S0, H0 }
          *((_DWORD *)v20 + 1) = _S0;
          LOWORD(_S0) = v14[2];
          __asm { FCVT            S0, H0 }
          *((_DWORD *)v20 + 2) = _S0;
          v20 += v12;
          v14 += v10;
          --v9;
        }
        while (v9);
      }
      else
      {
        v29 = 0;
        v30 = v20 + 2;
        v31 = v14 + 2;
        do
        {
          v32 = v31;
          v33 = v30;
          v34 = v3 - 1;
          do
          {
            _H0 = *(v32 - 2);
            __asm { FCVT            S0, H0 }
            *(v33 - 2) = _S0;
            LOWORD(_S0) = *(v32 - 1);
            __asm { FCVT            S0, H0 }
            *(v33 - 1) = _S0;
            LOWORD(_S0) = *v32;
            __asm { FCVT            S0, H0 }
            *v33 = _S0;
            v33 = (_DWORD *)((char *)v33 + v28);
            v32 = (_WORD *)((char *)v32 + v27);
            --v34;
          }
          while (v34);
          _H0 = *(v32 - 2);
          __asm { FCVT            S0, H0 }
          *(v33 - 2) = _S0;
          LOWORD(_S0) = *(v32 - 1);
          __asm { FCVT            S0, H0 }
          *(v33 - 1) = _S0;
          LOWORD(_S0) = *v32;
          __asm { FCVT            S0, H0 }
          *v33 = _S0;
          v14 += v10;
          v20 += v12;
          ++v29;
          v30 += v12;
          v31 += v10;
        }
        while (v29 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        _H0 = *v14;
        __asm { FCVT            S0, H0 }
        *(_DWORD *)v20 = _S0;
        LOWORD(_S0) = v14[1];
        __asm { FCVT            S0, H0 }
        *((_DWORD *)v20 + 1) = _S0;
        LOWORD(_S0) = v14[2];
        __asm { FCVT            S0, H0 }
        *((_DWORD *)v20 + 2) = _S0;
        v14 = (__int16 *)((char *)v14 + v27);
        v20 = (float *)((char *)v20 + v28);
        --v26;
      }
      while (v26);
    }
    _H0 = *v14;
    __asm { FCVT            S0, H0 }
    *(_DWORD *)v20 = _S0;
    LOWORD(_S0) = v14[1];
    __asm { FCVT            S0, H0 }
    *((_DWORD *)v20 + 1) = _S0;
    LOWORD(_S0) = v14[2];
    __asm { FCVT            S0, H0 }
    v20[2] = result;
  }
  return result;
}

uint64_t sub_23986FDD4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double ****v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = (double ****)&v29;
    a4.n128_f32[0] = sub_23987007C(&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_239870018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_23987007C(double *****a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  float result;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unint64_t v33;
  _OWORD v34[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v28 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v29 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v27 = 0;
    v30 = v3 - 1;
    v31 = v11 | (v12 << 32);
    v32 = v5 - 1;
    v33 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v34, 0, sizeof(v34));
    if (v32)
    {
      for (i = 0; i < v32; ++i)
      {
        sub_239870264(&v27, (__int16 **)v34, a1, v13, v19);
        v13 += v33;
        v19 += HIDWORD(v33);
      }
    }
    return sub_239870264(&v27, (__int16 **)v34, a1, v13, v19);
  }
  return result;
}

float sub_239870264(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, float *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  double v31;
  double v32;
  double v33;
  float v34;
  double v37;
  double v38;
  double v39;
  double v42;
  double v43;
  double v44;
  double v47;
  double v48;
  double v49;
  float result;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 4 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      _S6 = v11 + v12 * v23;
      *a5 = _S6;
      LOWORD(_S6) = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      _S6 = v11 + v12 * v28;
      a5[1] = _S6;
      LOWORD(_S6) = a4[2];
      __asm { FCVT            D6, H6 }
      v31 = v10 * (_D6 - v9);
      v32 = fmax(v31, 0.0);
      if (v31 <= 1.0)
        v33 = v32;
      else
        v33 = 1.0;
      v34 = v11 + v12 * v33;
      a5[2] = v34;
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (float *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v37 = v10 * (_D4 - v9);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  _S4 = v11 + v12 * v39;
  *a5 = _S4;
  LOWORD(_S4) = a4[1];
  __asm { FCVT            D4, H4 }
  v42 = v10 * (_D4 - v9);
  v43 = fmax(v42, 0.0);
  if (v42 <= 1.0)
    v44 = v43;
  else
    v44 = 1.0;
  _S4 = v11 + v12 * v44;
  a5[1] = _S4;
  LOWORD(_S4) = a4[2];
  __asm { FCVT            D4, H4 }
  v47 = v10 * (_D4 - v9);
  v48 = fmax(v47, 0.0);
  if (v47 <= 1.0)
    v49 = v48;
  else
    v49 = 1.0;
  result = v11 + v12 * v49;
  a5[2] = result;
  return result;
}

uint64_t sub_2398703E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3;
  double v4;
  double v6;
  _QWORD v15[4];
  __int16 v16;
  __int16 v17;
  float v18;
  int v19;

  if (*(unsigned __int8 *)(a3 + 8) | *(unsigned __int8 *)(a3 + 24))
  {
    v3 = *(double *)a3;
    if (!*(_BYTE *)(a3 + 8))
      v3 = -3.40282347e38;
    v4 = *(double *)(a3 + 16);
    if (!*(_BYTE *)(a3 + 24))
      v4 = 3.40282347e38;
    if (v3 < -3.40282347e38)
      v3 = -3.40282347e38;
    _S0 = v3;
    if (v4 <= 3.40282347e38)
      v6 = v4;
    else
      v6 = 3.40282347e38;
    _S1 = v6;
    v18 = _S1;
    v19 = LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    v17 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v18 = 3.4028e38;
    v19 = -8388609;
    v17 = -1024;
    _H0 = 31744;
  }
  v16 = _H0;
  v15[0] = &v17;
  v15[1] = &v19;
  v15[2] = &v16;
  v15[3] = &v18;
  return sub_2398704A8(a1, a2, (uint64_t)v15);
}

uint64_t sub_2398704A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_43;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    v28 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  v28 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v29 = &v28;
    sub_239870750(&v29, a1, a2);
  }
LABEL_37:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2398706EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_239870750(uint64_t **result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int i;
  uint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  _OWORD v33[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v10 = result;
    v27 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v28 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v26 = 0;
    v29 = v3 - 1;
    v30 = v11 | (v12 << 32);
    v31 = v5 - 1;
    v32 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(__int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(__int16 **)(a2 + 24);
    }
    v19 = *(float **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(float **)(a3 + 24);
    }
    memset(v33, 0, sizeof(v33));
    if (v31)
    {
      for (i = 0; i < v31; ++i)
      {
        sub_239870938(&v26, (__int16 **)v33, v10, v13, v19);
        v13 += v32;
        v19 += HIDWORD(v32);
      }
    }
    return (uint64_t **)sub_239870938(&v26, (__int16 **)v33, v10, v13, v19);
  }
  return result;
}

_DWORD *sub_239870938(_DWORD *result, __int16 **a2, uint64_t **a3, __int16 *a4, float *a5)
{
  int v5;
  uint64_t v6;
  __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  float *v20;
  float *v27;
  float *v39;
  float *v46;
  float *v53;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *(__int16 **)v6;
  if (v5)
  {
    v8 = 2 * result[6];
    v9 = 4 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H0 = *a4;
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_11;
        v20 = *(float **)(v6 + 24);
      }
      else
      {
        v20 = *(float **)(v6 + 8);
      }
      _S0 = *v20;
LABEL_11:
      *a5 = _S0;
      _H0 = a4[1];
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_16;
        v27 = *(float **)(v6 + 24);
      }
      else
      {
        v27 = *(float **)(v6 + 8);
      }
      _S0 = *v27;
LABEL_16:
      a5[1] = _S0;
      _H0 = a4[2];
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v10 = *(float **)(v6 + 8);
      }
      else
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_5;
        v10 = *(float **)(v6 + 24);
      }
      _S0 = *v10;
LABEL_5:
      a5[2] = _S0;
      a4 = (__int16 *)((char *)a4 + v8);
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H0 = *a4;
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = **(_WORD **)(v6 + 16);
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      goto LABEL_24;
    v39 = *(float **)(v6 + 24);
  }
  else
  {
    v39 = *(float **)(v6 + 8);
  }
  _S0 = *v39;
LABEL_24:
  *a5 = _S0;
  _H0 = a4[1];
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = **(_WORD **)(v6 + 16);
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      goto LABEL_29;
    v46 = *(float **)(v6 + 24);
  }
  else
  {
    v46 = *(float **)(v6 + 8);
  }
  _S0 = *v46;
LABEL_29:
  a5[1] = _S0;
  _H0 = a4[2];
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v53 = *(float **)(v6 + 8);
LABEL_33:
    _S0 = *v53;
    goto LABEL_34;
  }
  _H1 = **(_WORD **)(v6 + 16);
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v53 = *(float **)(v6 + 24);
    goto LABEL_33;
  }
LABEL_34:
  a5[2] = _S0;
  return result;
}

double sub_239870B08@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23986BBB4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AEE3B8;
  sub_239870D14((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239870C1C(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239870BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239870C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239870C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AEB380;
  sub_2398718F8(a2, &v12);
  sub_2398713A0(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_23983633C(a2, (uint64_t)(a3 + 1));
}

void sub_239870CD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239870CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2397C0C6C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239870D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

void sub_239870D14(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  sub_239870E14(a1, &v14);
  v13 = v14;
  v14 = 0uLL;
  v4 = *(_QWORD *)(a1 + 24);
  if ((v4 & 0xFF00000000) != 0)
    v5 = (v4 >> 1) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  sub_239827388(a2, &v13, v5);
  *(_WORD *)(a2 + 120) = v6;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_239870DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_239870E14(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::string::size_type v13;
  _QWORD *v14;
  std::string::size_type v15;
  std::logic_error *exception;
  std::string v17;

  if (*(_DWORD *)(a1 + 56) != 19)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_239871054(a1, &v17);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB400, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
  {
    if (v4)
    {
      *a2 = v4;
      a2[1] = 0;
      return;
    }
    *a2 = 0;
    a2[1] = 0;
    v10 = (std::__shared_weak_count *)a2[1];
    if (!v10)
      goto LABEL_25;
    goto LABEL_21;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  if (v4)
  {
    *a2 = v4;
    a2[1] = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    if (*a2)
      return;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (*a2)
      return;
  }
  v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
LABEL_21:
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
LABEL_25:
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v17);
  v13 = v17.__r_.__value_.__r.__words[0];
  *a2 = v17.__r_.__value_.__r.__words[0];
  if (v13)
  {
    v14 = (_QWORD *)operator new();
    v15 = v17.__r_.__value_.__r.__words[0];
    *v14 = &off_250ADB740;
    v14[1] = 0;
    v14[2] = 0;
    v14[3] = v15;
    a2[1] = v14;
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_239870FF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_239871054(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  std::string *v5;
  unsigned int v6;

  v4 = sub_2398710CC();
  v5 = sub_2394244E4();
  v6 = *(_DWORD *)(a1 + 56);
  sub_239419DAC("Attempting to create an ", (uint64_t)v4, " from an ", (uint64_t)v5, " but the image is of incompatible format ", &v6, a2);
}

std::string *sub_2398710CC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  std::string v9;
  std::string __p;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_256934368);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_256934368))
  {
    sub_23941A4FC(v7, "Image");
    v2 = sub_2397B0744();
    sub_2398712D0((std::string::size_type)v2, &v9);
    v3 = sub_23941B478();
    sub_2398712D0((std::string::size_type)v3, &__p);
    sub_23941B674(v6, (uint64_t)&v9, 2uLL);
    sub_239A44200((uint64_t)v7, (uint64_t *)v6, &stru_256934350, v4, v5);
    sub_23941B08C(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x24BEDACF0], &stru_256934350, &dword_23940C000);
          __cxa_guard_release(&qword_256934368);
          return &stru_256934350;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_256934350;
}

void sub_23987121C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_23941B08C((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_256934368);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_256934368);
  _Unwind_Resume(a1);
}

void sub_2398712D0(std::string::size_type a1@<X1>, std::string *a2@<X8>)
{
  void *__p;
  char v3;
  void *v4[4];

  HIBYTE(v4[2]) = 16;
  strcpy((char *)v4, "cv3d::kit::img::");
  v3 = 0;
  LOBYTE(__p) = 0;
  sub_239A438B4(a1, (char *)v4, (uint64_t)&__p, 1, 1, a2);
  if ((v3 & 0x80000000) == 0)
  {
    if ((SHIBYTE(v4[2]) & 0x80000000) == 0)
      return;
LABEL_5:
    operator delete(v4[0]);
    return;
  }
  operator delete(__p);
  if (SHIBYTE(v4[2]) < 0)
    goto LABEL_5;
}

void sub_239871364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2398713A0(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239871574(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239871550(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239871574(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
  {
    v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6)
      goto LABEL_33;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    v5 = *(_QWORD *)(a1 + 8);
    v10 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v10)
      goto LABEL_33;
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v17, v5, 0);
        v18 = a1;
        v19 = a2;
        if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
          goto LABEL_25;
LABEL_19:
        a3.n128_f64[0] = sub_2397FDF14(&v18);
        goto LABEL_29;
      }
    }
    else
    {
LABEL_33:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v17 = 0;
  v18 = a1;
  v19 = a2;
  if (*(_DWORD *)(a1 + 44) == 1 && *(_DWORD *)(a2 + 20) == 1)
    goto LABEL_19;
LABEL_25:
  if (*(_DWORD *)(a1 + 32) && *(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v21 = &v20;
    a3.n128_u64[0] = sub_239871710((uint64_t)&v21, a1, a2);
  }
LABEL_29:
  result = v17;
  v17 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2398716EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_239871710@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>)
{
  int v3;
  int v4;
  BOOL v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  int v20;
  _WORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _WORD *v25;
  _WORD *v26;
  _WORD *v27;
  _WORD *v28;
  int v29;
  __int16 result;

  v3 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v9 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v13 = *(unsigned int *)(a3 + 24);
    v12 = *(unsigned int *)(a3 + 28);
    v14 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v14)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v18 = __ldxr(p_shared_owners);
        while (__stxr(v18 + 1, p_shared_owners));
        do
          v19 = __ldaxr(p_shared_owners);
        while (__stlxr(v19 - 1, p_shared_owners));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "unknown location");
      v14 = *(_WORD **)(a2 + 24);
    }
    v20 = v3 - 1;
    v21 = *(_WORD **)a3;
    v22 = 2 * v11;
    v23 = 2 * v13;
    if (v9)
    {
      if (v3 == 1)
      {
        do
        {
          *v21 = *v14;
          v21[1] = v14[1];
          v21[2] = v14[2];
          v21 += v12;
          v14 += v10;
          --v9;
        }
        while (v9);
      }
      else
      {
        v24 = 0;
        v25 = v21 + 2;
        v26 = v14 + 2;
        do
        {
          v27 = v26;
          v28 = v25;
          v29 = v3 - 1;
          do
          {
            *(v28 - 2) = *(v27 - 2);
            *(v28 - 1) = *(v27 - 1);
            *v28 = *v27;
            v28 = (_WORD *)((char *)v28 + v23);
            v27 = (_WORD *)((char *)v27 + v22);
            --v29;
          }
          while (v29);
          *(v28 - 2) = *(v27 - 2);
          *(v28 - 1) = *(v27 - 1);
          *v28 = *v27;
          v14 += v10;
          v21 += v12;
          ++v24;
          v25 += v12;
          v26 += v10;
        }
        while (v24 != v9);
      }
    }
    if (v3 != 1)
    {
      do
      {
        *v21 = *v14;
        v21[1] = v14[1];
        v21[2] = v14[2];
        v14 = (_WORD *)((char *)v14 + v22);
        v21 = (_WORD *)((char *)v21 + v23);
        --v20;
      }
      while (v20);
    }
    *v21 = *v14;
    v21[1] = v14[1];
    result = v14[2];
    v21[2] = result;
  }
  return result;
}

void sub_2398718F8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_239871A00(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2398719E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t *sub_239871A00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 19);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x23B83E31C]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_239871B50(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_239416DA0(v1);
  _Unwind_Resume(a1);
}

double sub_239871B64@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  double result;
  _QWORD v9[2];
  std::__shared_weak_count *v10;
  uint64_t v11;
  uint64_t (**v12)();
  _BYTE v13[135];

  sub_23986BBB4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v9);
  v12 = &off_250AE09C8;
  sub_23962787C((uint64_t)v9, (uint64_t)v13);
  v4 = nullsub_4(&v11);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v5->__on_zero_shared)(v5, v4);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  j_nullsub_4_89(v9);
  sub_239871C78(*(_QWORD *)a1, (uint64_t)&v12, a2);
  sub_239416DA0((uint64_t)v13);
  *(_QWORD *)&result = nullsub_4(&v12).n128_u64[0];
  return result;
}

void sub_239871C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239871C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239871C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __n128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = &off_250AE4F20;
  sub_239763690(a2, &v12);
  sub_239871D70(a1, (uint64_t)&v11, v6);
  v7 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  nullsub_4(&v11);
  *a3 = &off_250ADB778;
  return sub_2397638FC(a2, (uint64_t)(a3 + 1));
}

void sub_239871D34(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239871D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_23974D3CC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239871D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  nullsub_4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239871D70(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
    goto LABEL_21;
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v6)
    goto LABEL_36;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a2 + 8);
  v10 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v10)
    goto LABEL_36;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_36:
    if (*(_BYTE *)(a2 + 73))
      goto LABEL_14;
LABEL_21:
    v23 = 0;
    v14 = a2 + 24;
    if (*(_BYTE *)(a2 + 72))
      v16 = *(_QWORD *)(a2 + 24) == 0;
    else
      v16 = 1;
    if (v16)
      goto LABEL_32;
    goto LABEL_25;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a2 + 73))
    goto LABEL_21;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(&v23, v5, 1);
  v14 = a2 + 24;
  if (*(_BYTE *)(a2 + 72))
    v15 = *(_QWORD *)(a2 + 24) == 0;
  else
    v15 = 1;
  if (v15)
    goto LABEL_32;
LABEL_25:
  v18 = *(_QWORD *)(a2 + 8);
  v17 = *(std::__shared_weak_count **)(a2 + 16);
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  a3.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "unknown location");
LABEL_32:
  sub_239871574(a1, v14, a3);
  result = v23;
  v23 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_239871F20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_239871F44(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_239871F68@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_23987203C(a1, a2);
}

double sub_239871F74@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239873BF8(a1, a2);
}

double sub_239871F80@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398752A0(a1, a2);
}

double sub_239871F8C@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239876A3C(a1, a2);
}

double sub_239871F98@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_239877050(a1, a2);
}

double sub_239871FA4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_2398780B4(a1, a2);
}

uint64_t sub_23987203C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD v8[2];
  std::__shared_weak_count *v9;
  uint64_t v10;
  uint64_t (**v11)();
  _BYTE v12[135];

  sub_239872278(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *(_QWORD *)a1 + 56, v8);
  v11 = &off_250AEDA18;
  sub_239858A98((uint64_t)v8, (uint64_t)v12);
  nullsub_4(&v10);
  v4 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  j_nullsub_4_89(v8);
  sub_239872150(*(_QWORD *)a1, (uint64_t)&v11, *(_QWORD *)(a1 + 8), a2);
  sub_239416DA0((uint64_t)v12);
  return nullsub_4(&v11);
}

void sub_239872118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_239416DA0(v9);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239872134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  nullsub_4(&a17);
  sub_239422DD0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239872150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t (**v13)();
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  _QWORD *v17;

  v13 = &off_250AEA9D0;
  sub_239864A20(a2, &v14);
  v16[0] = a1;
  v16[1] = &v13;
  v8 = *(unsigned int *)(a3 + 64);
  if ((_DWORD)v8 == -1)
    sub_23964B158();
  v17 = v16;
  ((void (*)(_QWORD **, uint64_t))off_250AEEAF8[v8])(&v17, a3 + 8);
  v9 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  nullsub_4(&v13);
  *a4 = &off_250ADB778;
  return sub_23982F700(a2, (uint64_t)(a4 + 1));
}

void sub_23987223C(_Unwind_Exception *a1)
{
  uint64_t v1;

  j_nullsub_4_89(v1);
  _Unwind_Resume(a1);
}

void sub_239872250(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  nullsub_4(va);
  _Unwind_Resume(a1);
}

void sub_239872264(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2397B94B8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239872278(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  int v16;

  if (a2)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_2398D81F4((uint64_t)&v11, a2);
    v8 = v12;
    if (v12)
    {
      v9 = (unint64_t *)&v12->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
  }
  else
  {
    v16 = 12;
    v15[0] = a1;
    v15[1] = &v16;
    v15[2] = a3;
    sub_2398723B8((uint64_t)v15, &v13);
    *a4 = &off_250ADB778;
    sub_239831AFC((uint64_t)&v13, (uint64_t)(a4 + 1));
    sub_239416DA0((uint64_t)&v14);
    nullsub_4(&v13);
  }
}

void sub_23987237C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  j_nullsub_4_89(v4);
  sub_239416DA0((uint64_t)va1);
  nullsub_4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2398723A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2398723B8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[16];
  std::__shared_weak_count *v15;
  uint64_t v16;

  if (*(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v3 = *(std::__shared_weak_count **)(*(_QWORD *)a1 + 16);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    v13 = v3;
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldxr(p_shared_owners);
      while (__stxr(v5 + 1, p_shared_owners));
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  sub_2398D81F4((uint64_t)&v12, 12);
  *a2 = &off_250AEDE98;
  sub_23985EC2C((uint64_t)v14, (uint64_t)(a2 + 1));
  nullsub_4(&v16);
  v6 = v15;
  if (v15)
  {
    v7 = (unint64_t *)&v15->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  j_nullsub_4_89(v14);
  v9 = v13;
  if (v13)
  {
    v10 = (unint64_t *)&v13->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_2398724D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  nullsub_4(v11);
  sub_239422DD0((uint64_t)&a11);
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2398724F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239872508(uint64_t **a1, uint64_t a2, __n128 a3)
{
  return sub_239872550(**a1, (*a1)[1], a2, a3);
}

uint64_t sub_239872518(uint64_t **a1, uint64_t a2)
{
  return sub_2398733B8(**a1, (*a1)[1], a2);
}

uint64_t sub_239872528(uint64_t **a1, __n128 a2)
{
  char v3;

  return sub_239872680(**a1, (*a1)[1], (uint64_t)&v3, a2);
}

uint64_t sub_239872550(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  double v4;
  float v5;
  unsigned int v6;
  double v7;
  double v8;
  unsigned int v9;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  double v16;
  double v17;
  double v18;
  double v19;

  if (*(_BYTE *)(a3 + 16))
  {
    a4.n128_u64[0] = 0xC7EFFFFFE0000000;
    if (*(double *)a3 >= -3.40282347e38)
      a4.n128_u64[0] = *(_QWORD *)a3;
    a4.n128_f32[0] = a4.n128_f64[0];
    v4 = 3.40282347e38;
    if (*(double *)(a3 + 8) <= 3.40282347e38)
      v4 = *(double *)(a3 + 8);
    v5 = v4;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
    {
LABEL_7:
      v7 = *(double *)(a3 + 24);
      if (v7 < 0.0)
        v7 = 0.0;
      v6 = (int)v7;
      v8 = 255.0;
      if (*(double *)(a3 + 32) <= 255.0)
        v8 = *(double *)(a3 + 32);
      v9 = (int)v8;
      if (a4.n128_f32[0] != (float)v6 || v5 != (float)(int)v8)
        goto LABEL_15;
      return sub_239872680(a1, a2, (uint64_t)v15, a4);
    }
  }
  else
  {
    v5 = 1.0;
    a4.n128_u32[0] = 0;
    v6 = *(unsigned __int8 *)(a3 + 40);
    if (*(_BYTE *)(a3 + 40))
      goto LABEL_7;
  }
  v9 = 255;
  if (a4.n128_f32[0] != (float)v6 || v5 != (float)0xFFu)
  {
LABEL_15:
    v19 = a4.n128_f32[0];
    v17 = (double)v6;
    v18 = 1.0 / (v5 - a4.n128_f32[0]);
    v16 = (double)v9 - (double)v6;
    v15[0] = &v19;
    v15[1] = &v18;
    v14[0] = &v17;
    v14[1] = &v16;
    v13[0] = v15;
    v13[1] = v14;
    return sub_239872BF8(a1, a2, (uint64_t)v13);
  }
  return sub_239872680(a1, a2, (uint64_t)v15, a4);
}

uint64_t sub_239872680(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_43;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_43;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_43:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v28 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v27, v16, 1);
    v29 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_37;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v28, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v27 = 0;
  v29 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_37;
LABEL_34:
  if (*(_DWORD *)(a1 + 36) && *(_DWORD *)(a1 + 40))
  {
    v30 = &v29;
    a4.n128_f32[0] = sub_239872928((uint64_t)&v30, a1, a2);
  }
LABEL_37:
  v25 = v27;
  v27 = 0;
  if (v25)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v25 + 8))(v25, a4);
  result = v28;
  v28 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_2398728C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_239872928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  BOOL v6;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float result;
  _BYTE *v26;
  float *v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  v5 = *(_DWORD *)(a2 + 40);
  if (v4)
    v6 = v3 == 0;
  else
    v6 = 1;
  if (!v6 && v5 != 0)
  {
    v29 = v4 - 1;
    v11 = *(unsigned int *)(a2 + 48);
    v12 = *(unsigned int *)(a3 + 48);
    v30 = *(unsigned int *)(a2 + 44) | ((unint64_t)*(unsigned int *)(a3 + 44) << 32);
    v28 = 0;
    v31 = v3 - 1;
    v32 = v11 | (v12 << 32);
    v33 = v5 - 1;
    v34 = *(unsigned int *)(a2 + 52) | ((unint64_t)*(unsigned int *)(a3 + 52) << 32);
    v13 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v13)
    {
      v14 = *(_QWORD *)(a2 + 8);
      v15 = *(std::__shared_weak_count **)(a2 + 16);
      if (v15)
      {
        p_shared_owners = (unint64_t *)&v15->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v14 + 88))(v14, 0, "unknown location");
      v13 = *(float **)(a2 + 24);
    }
    v27 = v13;
    v19 = *(_BYTE **)(a3 + 24);
    if (*(_BYTE *)(a3 + 72) && v19)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v21 = *(std::__shared_weak_count **)(a3 + 16);
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
        do
          v24 = __ldaxr(v22);
        while (__stlxr(v24 - 1, v22));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v20 + 88))(v20, 1, "unknown location");
      v19 = *(_BYTE **)(a3 + 24);
    }
    v26 = v19;
    return sub_239872ACC(&v28, a1, &v27, &v26);
  }
  return result;
}

