void sub_23992C4C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _Unwind_Exception *exception_objecta, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23992C55C(_QWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;

  v14 = 0;
  *a2 = sub_23992CCF8((uint64_t)(a1 + 1), (uint64_t)&v14, a3);
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 16))(a1);
  v5 = (uint64_t *)a1[1];
  v6 = (uint64_t *)a1[2];
  if (v5 != v6)
  {
    v7 = v4;
    do
    {
      v8 = *v5;
      v9 = (std::__shared_weak_count *)v5[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(p_shared_owners);
        while (__stxr(v11 + 1, p_shared_owners));
      }
      if (v8)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v7);
      if (v9)
      {
        v12 = (unint64_t *)&v9->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
}

void sub_23992C638(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBED3C();
  _Unwind_Resume(exception_object);
}

void sub_23992C650(_QWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  char v14;

  v14 = 0;
  *a2 = sub_23992C744((uint64_t)(a1 + 1), (uint64_t)&v14, a3);
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 16))(a1);
  v5 = (uint64_t *)a1[1];
  v6 = (uint64_t *)a1[2];
  if (v5 != v6)
  {
    v7 = v4;
    do
    {
      v8 = *v5;
      v9 = (std::__shared_weak_count *)v5[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(p_shared_owners);
        while (__stxr(v11 + 1, p_shared_owners));
      }
      if (v8)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v7);
      if (v9)
      {
        v12 = (unint64_t *)&v9->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
}

void sub_23992C72C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBED3C();
  _Unwind_Resume(exception_object);
}

uint64_t sub_23992C744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v6 = *(char **)a1;
  v5 = *(char **)(a1 + 8);
  if (*(char **)a1 == v5)
  {
    v7 = 0;
  }
  else
  {
    v7 = 0;
    while (*(_QWORD *)v6)
    {
      v6 += 16;
      v7 = (v7 + 1);
      if (v6 == v5)
        goto LABEL_8;
    }
  }
  if (v6 == v5)
  {
LABEL_8:
    v19 = 0;
    v20 = 0;
    if ((unint64_t)v5 >= *(_QWORD *)(a1 + 16))
    {
      v8 = sub_2394E46BC((char **)a1, (uint64_t)&v19);
      v9 = v20;
      *(_QWORD *)(a1 + 8) = v8;
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      *(_QWORD *)v5 = 0;
      *((_QWORD *)v5 + 1) = 0;
      *(_QWORD *)(a1 + 8) = v5 + 16;
    }
  }
  v12 = operator new(0x58uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = &off_250AF01E0;
  v13 = v12 + 4;
  v12[3] = off_250AF0C30;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v13, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)a3;
    v12[6] = *(_QWORD *)(a3 + 16);
  }
  v12[3] = &off_250AF0218;
  v12[9] = 0;
  v12[10] = 0;
  v12[7] = sub_23992CCEC;
  v12[8] = 0;
  v14 = (_QWORD *)(*(_QWORD *)a1 + 16 * v7);
  v15 = (std::__shared_weak_count *)v14[1];
  *v14 = v12 + 3;
  v14[1] = v12;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  return v7;
}

void sub_23992C8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23992C8E4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_23992C8FC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF01E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23992C90C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF01E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23992C93C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_23992C94C(_QWORD *a1)
{
  void *v2;

  *a1 = &off_250AF0218;
  v2 = (void *)a1[5];
  if (v2)
    operator delete(v2);
  return sub_23995E4A4((uint64_t)a1);
}

void sub_23992C984(_QWORD *a1)
{
  void *v2;

  *a1 = &off_250AF0218;
  v2 = (void *)a1[5];
  if (v2)
    operator delete(v2);
  sub_23995E4A4((uint64_t)a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23992C9D0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

void sub_23992C9D8(uint64_t a1, unint64_t a2)
{
  sub_2394187EC(a1 + 40, a2);
}

void sub_23992C9E0(uint64_t a1, unint64_t a2)
{
  sub_23941C5D8(a1 + 40, a2, 0);
}

void sub_23992C9EC(_QWORD *a1)
{
  void *v2;

  v2 = (void *)a1[5];
  a1[6] = 0;
  a1[7] = 0;
  a1[5] = 0;
  if (v2)
    operator delete(v2);
}

void sub_23992CA08(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = a1[6];
  v3 = a1[7];
  if (v2 == v3 << 6)
  {
    v4 = (uint64_t)(a1 + 5);
    if ((uint64_t)(v2 + 1) < 0)
      sub_2394189F8();
    v5 = v3 << 7;
    if (v5 <= (v2 & 0xFFFFFFFFFFFFFFC0) + 64)
      v5 = (v2 & 0xFFFFFFFFFFFFFFC0) + 64;
    if (v2 <= 0x3FFFFFFFFFFFFFFELL)
      v6 = v5;
    else
      v6 = 0x7FFFFFFFFFFFFFFFLL;
    sub_2394187EC(v4, v6);
    v2 = a1[6];
  }
  a1[6] = v2 + 1;
  *(_QWORD *)(a1[5] + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= ~(1 << v2);
}

uint64_t sub_23992CA94(uint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(result + 40);
  v4 = (a2 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(v3 + v4);
  v6 = a3 >> 6;
  v7 = 1 << a3;
  if ((*(_QWORD *)(v3 + 8 * (a3 >> 6)) & (1 << a3)) != 0)
    v8 = v5 | (1 << a2);
  else
    v8 = v5 & ~(1 << a2);
  *(_QWORD *)(v3 + v4) = v8;
  if ((v5 & (1 << a2)) != 0)
    v9 = *(_QWORD *)(v3 + 8 * v6) | v7;
  else
    v9 = *(_QWORD *)(v3 + 8 * v6) & ~v7;
  *(_QWORD *)(v3 + 8 * v6) = v9;
  return result;
}

uint64_t sub_23992CAF4(uint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(result + 40);
  v4 = a3 >> 6;
  v5 = 1 << a3;
  if (((*(_QWORD *)(v3 + ((a2 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    v6 = *(_QWORD *)(v3 + 8 * v4) | v5;
  else
    v6 = *(_QWORD *)(v3 + 8 * v4) & ~v5;
  *(_QWORD *)(v3 + 8 * v4) = v6;
  return result;
}

uint64_t sub_23992CB38(uint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(result + 40);
  v4 = (a2 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(v3 + v4);
  v6 = v5 | (1 << a2);
  if ((((v5 & (1 << a2)) != 0) & (*(_QWORD *)(v3 + ((a3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a3)) == 0)
    v6 = v5 & ~(1 << a2);
  *(_QWORD *)(v3 + v4) = v6;
  return result;
}

_QWORD *sub_23992CB80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _BYTE *v5;
  _QWORD *result;

  v4 = (_QWORD *)operator new();
  *v4 = off_250AF0C30;
  v5 = v4 + 1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)(a1 + 8);
    v4[3] = *(_QWORD *)(a1 + 24);
  }
  v4[4] = *(_QWORD *)(a1 + 32);
  *v4 = &off_250AF0218;
  sub_23948C0E0(v4 + 5, a1 + 40);
  *a2 = v4;
  result = (_QWORD *)operator new();
  *result = &off_250AF0288;
  result[1] = 0;
  result[2] = 0;
  result[3] = v4;
  a2[1] = result;
  return result;
}

void sub_23992CC4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x1093C4034BBB111);
  _Unwind_Resume(a1);
}

uint64_t sub_23992CC9C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56) << 6;
}

void sub_23992CCAC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23992CCD0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t (*sub_23992CCEC())()
{
  return sub_23992CCEC;
}

uint64_t sub_23992CCF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v6 = *(char **)a1;
  v5 = *(char **)(a1 + 8);
  if (*(char **)a1 == v5)
  {
    v7 = 0;
  }
  else
  {
    v7 = 0;
    while (*(_QWORD *)v6)
    {
      v6 += 16;
      v7 = (v7 + 1);
      if (v6 == v5)
        goto LABEL_8;
    }
  }
  if (v6 == v5)
  {
LABEL_8:
    v19 = 0;
    v20 = 0;
    if ((unint64_t)v5 >= *(_QWORD *)(a1 + 16))
    {
      v8 = sub_2394E46BC((char **)a1, (uint64_t)&v19);
      v9 = v20;
      *(_QWORD *)(a1 + 8) = v8;
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      *(_QWORD *)v5 = 0;
      *((_QWORD *)v5 + 1) = 0;
      *(_QWORD *)(a1 + 8) = v5 + 16;
    }
  }
  v12 = operator new(0x58uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = &off_250AF02C0;
  v13 = v12 + 4;
  v12[3] = off_250AF0C30;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v13, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)a3;
    v12[6] = *(_QWORD *)(a3 + 16);
  }
  v12[3] = &off_250AF02F8;
  v12[9] = 0;
  v12[10] = 0;
  v12[7] = sub_23992D4A0;
  v12[8] = 0;
  v14 = (_QWORD *)(*(_QWORD *)a1 + 16 * v7);
  v15 = (std::__shared_weak_count *)v14[1];
  *v14 = v12 + 3;
  v14[1] = v12;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  return v7;
}

void sub_23992CE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23992CE98(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_23992CEB0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF02C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23992CEC0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF02C0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23992CEF0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_23992CF00(_QWORD *a1)
{
  void *v2;

  *a1 = &off_250AF02F8;
  v2 = (void *)a1[5];
  if (v2)
  {
    a1[6] = v2;
    operator delete(v2);
  }
  return sub_23995E4A4((uint64_t)a1);
}

void sub_23992CF3C(_QWORD *a1)
{
  void *v2;

  *a1 = &off_250AF02F8;
  v2 = (void *)a1[5];
  if (v2)
  {
    a1[6] = v2;
    operator delete(v2);
  }
  sub_23995E4A4((uint64_t)a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23992CF8C(uint64_t a1)
{
  return (uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 2;
}

void sub_23992CF9C(_QWORD *a1, unint64_t a2)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 *v15;
  uint64_t v16;
  __int128 v17;
  int v18;

  v3 = (_BYTE *)a1[5];
  if (a2 > (uint64_t)(a1[7] - (_QWORD)v3) >> 2)
  {
    if (a2 >> 62)
      sub_2394189F8();
    v4 = (_BYTE *)a1[6];
    v5 = 4 * a2;
    v6 = (char *)operator new(4 * a2);
    v7 = v4 - v3;
    v8 = &v6[(v4 - v3) & 0xFFFFFFFFFFFFFFFCLL];
    v9 = v8;
    if (v4 == v3)
      goto LABEL_11;
    if ((unint64_t)(v7 - 4) >= 0x2C)
    {
      v9 = &v6[(v4 - v3) & 0xFFFFFFFFFFFFFFFCLL];
      if (v4 - v6 - (v7 & 0xFFFFFFFFFFFFFFFCLL) >= 0x20)
      {
        v10 = v7 >> 2;
        v11 = ((unint64_t)(v7 - 4) >> 2) + 1;
        v12 = 4 * (v11 & 0x7FFFFFFFFFFFFFF8);
        v13 = &v4[-v12];
        v9 = &v8[-v12];
        v14 = &v6[4 * v10 - 16];
        v15 = (__int128 *)(v4 - 16);
        v16 = v11 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v17 = *v15;
          *((_OWORD *)v14 - 1) = *(v15 - 1);
          *(_OWORD *)v14 = v17;
          v14 -= 32;
          v15 -= 2;
          v16 -= 8;
        }
        while (v16);
        v4 = v13;
        if (v11 == (v11 & 0x7FFFFFFFFFFFFFF8))
          goto LABEL_11;
      }
    }
    else
    {
      v9 = &v6[(v4 - v3) & 0xFFFFFFFFFFFFFFFCLL];
    }
    do
    {
      v18 = *((_DWORD *)v4 - 1);
      v4 -= 4;
      *((_DWORD *)v9 - 1) = v18;
      v9 -= 4;
    }
    while (v4 != v3);
LABEL_11:
    a1[5] = v9;
    a1[6] = v8;
    a1[7] = &v6[v5];
    if (v3)
      operator delete(v3);
  }
}

void sub_23992D0B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (*(_QWORD *)(a1 + 48) - v2) >> 2;
  v4 = a2 >= v3;
  v5 = a2 - v3;
  if (v5 != 0 && v4)
  {
    sub_23942CB44(a1 + 40, v5);
  }
  else if (!v4)
  {
    *(_QWORD *)(a1 + 48) = v2 + 4 * a2;
  }
}

void sub_23992D0E8(_QWORD *a1)
{
  void *v2;

  v2 = (void *)a1[5];
  a1[6] = 0;
  a1[7] = 0;
  a1[5] = 0;
  if (v2)
    operator delete(v2);
}

void sub_23992D104(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  _DWORD *v12;
  char *v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  int v22;

  v3 = (char *)a1[6];
  v2 = a1[7];
  v4 = v3;
  if ((unint64_t)v3 < v2)
  {
    *(_DWORD *)v3 = 0;
    v5 = (uint64_t)(v3 + 4);
    goto LABEL_22;
  }
  v6 = (char *)a1[5];
  v7 = (v3 - v6) >> 2;
  v8 = v7 + 1;
  if ((unint64_t)(v7 + 1) >> 62)
    sub_2394189F8();
  v9 = v2 - (_QWORD)v6;
  if (v9 >> 1 > v8)
    v8 = v9 >> 1;
  if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFFCLL)
    v10 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v10 = v8;
  if (v10)
  {
    if (v10 >> 62)
      sub_239418A80();
    v11 = operator new(4 * v10);
    v12 = &v11[4 * v7];
    v13 = &v11[4 * v10];
    *v12 = 0;
    v5 = (uint64_t)(v12 + 1);
    v14 = v3 - v6;
    if (v3 == v6)
      goto LABEL_20;
    goto LABEL_14;
  }
  v11 = 0;
  v12 = (_DWORD *)(4 * v7);
  v13 = 0;
  *(_DWORD *)(4 * v7) = 0;
  v5 = 4 * v7 + 4;
  v14 = v3 - v6;
  if (v3 != v6)
  {
LABEL_14:
    v15 = v14 - 4;
    if (v15 < 0x2C)
      goto LABEL_27;
    if ((unint64_t)(v6 - v11) < 0x20)
      goto LABEL_27;
    v16 = (v15 >> 2) + 1;
    v17 = 4 * (v16 & 0x7FFFFFFFFFFFFFF8);
    v4 = &v3[-v17];
    v12 = (_DWORD *)((char *)v12 - v17);
    v18 = &v11[4 * v7 - 16];
    v19 = v3 - 16;
    v20 = v16 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v21 = *(_OWORD *)v19;
      *(v18 - 1) = *((_OWORD *)v19 - 1);
      *v18 = v21;
      v18 -= 2;
      v19 -= 32;
      v20 -= 8;
    }
    while (v20);
    if (v16 != (v16 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_27:
      do
      {
        v22 = *((_DWORD *)v4 - 1);
        v4 -= 4;
        *--v12 = v22;
      }
      while (v4 != v6);
    }
  }
LABEL_20:
  a1[5] = v12;
  a1[6] = v5;
  a1[7] = v13;
  if (v6)
    operator delete(v6);
LABEL_22:
  a1[6] = v5;
}

uint64_t sub_23992D270(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;

  v3 = *(_QWORD *)(result + 40);
  v4 = *(_DWORD *)(v3 + 4 * a2);
  *(_DWORD *)(v3 + 4 * a2) = *(_DWORD *)(v3 + 4 * a3);
  *(_DWORD *)(v3 + 4 * a3) = v4;
  return result;
}

uint64_t sub_23992D290(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(*(_QWORD *)(result + 40) + 4 * a3) = *(_DWORD *)(*(_QWORD *)(result + 40) + 4 * a2);
  return result;
}

_QWORD *sub_23992D2A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = (_QWORD *)operator new();
  sub_23992D370(v4, a1);
  *a2 = v4;
  result = (_QWORD *)operator new();
  *result = &off_250AF0368;
  result[1] = 0;
  result[2] = 0;
  result[3] = v4;
  a2[1] = result;
  return result;
}

void sub_23992D320(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_23992D33C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x1093C400FBCE358);
  _Unwind_Resume(a1);
}

uint64_t sub_23992D360(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 40);
}

_QWORD *sub_23992D370(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  __int128 v5;
  _BYTE *v6;
  _BYTE *v7;
  int64_t v8;
  char *v9;
  char *v10;

  *a1 = off_250AF0C30;
  v4 = a1 + 1;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 8);
    v4[2] = *(_QWORD *)(a2 + 24);
    *(_OWORD *)v4 = v5;
  }
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = 0;
  *a1 = &off_250AF02F8;
  a1[6] = 0;
  a1[7] = 0;
  v7 = *(_BYTE **)(a2 + 40);
  v6 = *(_BYTE **)(a2 + 48);
  v8 = v6 - v7;
  if (v6 != v7)
  {
    if (v8 < 0)
      sub_2394189F8();
    v9 = (char *)operator new(v6 - v7);
    a1[5] = v9;
    a1[6] = v9;
    v10 = &v9[4 * (v8 >> 2)];
    a1[7] = v10;
    memcpy(v9, v7, v8);
    a1[6] = v10;
  }
  return a1;
}

void sub_23992D438(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 48) = v4;
    operator delete(v4);
  }
  sub_23995E4A4(v1);
  _Unwind_Resume(a1);
}

void sub_23992D460(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23992D484(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t (*sub_23992D4A0())()
{
  return sub_23992D4A0;
}

uint64_t sub_23992D4AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int *v34;
  uint64_t v35;
  uint64_t *v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _DWORD v43[5];
  unsigned int v44;
  void *__p;
  unint64_t v46;
  unint64_t v47;

  v2 = *(_QWORD *)(a1 + 128);
  v1 = *(_QWORD *)(a1 + 136);
  v46 = 0;
  v47 = 0;
  __p = 0;
  v3 = v1 - v2;
  if (!v3)
    return 0;
  if (v3 < 0)
    sub_2394189F8();
  v5 = 0xCCCCCCCCCCCCCCCDLL * (v3 >> 2);
  v6 = (v5 - 1) >> 6;
  v7 = operator new(8 * (v6 + 1));
  v8 = v7;
  v46 = v5;
  v47 = v6 + 1;
  __p = v7;
  if (v5 >= 0x41)
    v9 = (v5 - 1) >> 6;
  else
    v9 = 0;
  v7[v9] = 0;
  if (v5 >= 0x40)
    bzero(v7, 8 * (v5 >> 6));
  if ((v5 & 0x3F) != 0)
    v8[v5 >> 6] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v5 & 0x3F));
  v10 = 0;
  v11 = 0;
  do
  {
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
    v16 = *v14;
    v15 = (std::__shared_weak_count *)v14[1];
    if (!v15)
      goto LABEL_17;
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v18 = __ldxr(p_shared_owners);
    while (__stxr(v18 + 1, p_shared_owners));
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (v19)
    {
LABEL_17:
      v20 = v10 >> 6;
      v21 = 1 << v10;
      if ((*(_QWORD *)(*(_QWORD *)(v16 + 40) + 8 * (v10 >> 6)) & (1 << v10)) == 0)
        goto LABEL_11;
LABEL_18:
      *((_QWORD *)__p + v20) &= ~v21;
      goto LABEL_11;
    }
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    v20 = v10 >> 6;
    v21 = 1 << v10;
    if ((*(_QWORD *)(*(_QWORD *)(v16 + 40) + 8 * (v10 >> 6)) & (1 << v10)) != 0)
      goto LABEL_18;
LABEL_11:
    v13 = *(_QWORD *)(a1 + 128);
    v12 = *(_QWORD *)(a1 + 136);
    v10 = ++v11;
  }
  while (0xCCCCCCCCCCCCCCCDLL * ((v12 - v13) >> 2) > v11);
  if (v12 != v13)
  {
    v22 = 0;
    v23 = 0;
    v24 = 0;
    while (1)
    {
      v25 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v27 = *v25;
      v26 = (std::__shared_weak_count *)v25[1];
      if (!v26)
        goto LABEL_29;
      v28 = (unint64_t *)&v26->__shared_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      do
        v30 = __ldaxr(v28);
      while (__stlxr(v30 - 1, v28));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
        v31 = v22 >> 6;
        v32 = 1 << v22;
        if ((*(_QWORD *)(*(_QWORD *)(v27 + 40) + 8 * (v22 >> 6)) & (1 << v22)) != 0)
        {
LABEL_30:
          if ((*((_QWORD *)__p + v31) & v32) == 0)
          {
            v24 = (v24 + 1);
            v44 = v23;
            v33 = v23;
LABEL_32:
            *(_QWORD *)((char *)__p + (((unint64_t)v33 >> 3) & 0x1FFFFFF8)) |= 1 << v33;
            v34 = (unsigned int *)sub_239962518(a1 + 104, &v44);
            v35 = sub_239962518(a1 + 104, v34);
            sub_239962B1C((uint64_t)v43, (_QWORD *)(a1 + 104), (unsigned int *)(v35 + 12));
            while (1)
            {
              v33 = sub_239962B44(v43);
              if (v33 == -1)
                break;
              v36 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
              v38 = *v36;
              v37 = (std::__shared_weak_count *)v36[1];
              if (v37)
              {
                v39 = (unint64_t *)&v37->__shared_owners_;
                do
                  v40 = __ldxr(v39);
                while (__stxr(v40 + 1, v39));
                do
                  v41 = __ldaxr(v39);
                while (__stlxr(v41 - 1, v39));
                if (!v41)
                {
                  ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
                  std::__shared_weak_count::__release_weak(v37);
                }
              }
              if (((*(_QWORD *)(*(_QWORD *)(v38 + 40) + (((unint64_t)v33 >> 3) & 0x1FFFFFF8)) >> v33) & 1) != 0)
              {
                v44 = v33;
                if (v33 != v23)
                  goto LABEL_32;
                break;
              }
            }
          }
        }
      }
      else
      {
LABEL_29:
        v31 = v22 >> 6;
        v32 = 1 << v22;
        if ((*(_QWORD *)(*(_QWORD *)(v27 + 40) + 8 * (v22 >> 6)) & (1 << v22)) != 0)
          goto LABEL_30;
      }
      v22 = ++v23;
      if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2) <= v23)
        goto LABEL_47;
    }
  }
  v24 = 0;
LABEL_47:
  if (__p)
    operator delete(__p);
  return v24;
}

void sub_23992D854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *v12;

  operator delete(v12);
  _Unwind_Resume(a1);
}

uint64_t sub_23992D878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  size_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t v23;
  unsigned int *v24;
  unint64_t v25;
  _QWORD *v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  void **v30;
  void **v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  unsigned int v37;
  unsigned int __src;
  void *__p[2];
  __int128 v40;
  __int128 v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;

  v2 = *(_QWORD *)(a1 + 152);
  v1 = *(_QWORD *)(a1 + 160);
  v43 = 0;
  v44 = 0;
  v42 = 0;
  v3 = v1 - v2;
  if (v1 == v2)
  {
    v31 = 0;
    v30 = 0;
    v11 = 0;
    v41 = 0uLL;
    *(_OWORD *)__p = 0u;
    v40 = 0u;
    v32 = 0;
    goto LABEL_35;
  }
  if (v3 < 0)
    sub_2394189F8();
  v5 = (unint64_t)((v3 >> 2) - 1) >> 6;
  v6 = (char *)operator new(8 * (v5 + 1));
  v7 = v6;
  v43 = v3 >> 2;
  v44 = v5 + 1;
  v42 = v6;
  if ((unint64_t)v3 >= 0x104)
    v8 = (unint64_t)((v3 >> 2) - 1) >> 6;
  else
    v8 = 0;
  *(_QWORD *)&v6[8 * v8] = 0;
  v9 = 8 * ((unint64_t)(v3 >> 2) >> 6);
  if ((unint64_t)v3 >= 0x100)
    bzero(v6, v9);
  if (v3 >> 2)
    *(_QWORD *)&v7[v9] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v3 >> 2));
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v40 = 0u;
  v41 = 0u;
  *(_OWORD *)__p = 0u;
  do
  {
    v13 = v42;
    v14 = v10 >> 6;
    v15 = 1 << v10;
    if ((*((_QWORD *)v42 + (v10 >> 6)) & (1 << v10)) == 0)
    {
      __src = v12;
      sub_239930E44(__p, (int *)&__src, 1uLL);
      v11 = (v11 + 1);
      v13[v14] |= v15;
LABEL_14:
      if (*((_QWORD *)&v41 + 1))
      {
        __src = *(_DWORD *)(*(_QWORD *)((char *)__p[1] + (((unint64_t)v41 >> 7) & 0x1FFFFFFFFFFFFF8))
                          + 4 * (v41 & 0x3FF));
        *(_QWORD *)&v41 = v41 + 1;
        --*((_QWORD *)&v41 + 1);
        if ((unint64_t)v41 >= 0x800)
        {
          operator delete(*(void **)__p[1]);
          __p[1] = (char *)__p[1] + 8;
          *(_QWORD *)&v41 = v41 - 1024;
        }
        v16 = *(_DWORD *)sub_23996252C(a1 + 104, &__src);
        v37 = v16;
        while (1)
        {
          v37 = *(_DWORD *)(sub_239962518(a1 + 104, &v37) + 4);
          v17 = *(unsigned int *)sub_239962518(a1 + 104, &v37);
          v18 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
          v20 = *v18;
          v19 = (std::__shared_weak_count *)v18[1];
          if (!v19)
            goto LABEL_25;
          p_shared_owners = (unint64_t *)&v19->__shared_owners_;
          do
            v22 = __ldxr(p_shared_owners);
          while (__stxr(v22 + 1, p_shared_owners));
          do
            v23 = __ldaxr(p_shared_owners);
          while (__stlxr(v23 - 1, p_shared_owners));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
            if (((*(_QWORD *)(*(_QWORD *)(v20 + 40) + ((v17 >> 3) & 0x1FFFFFF8)) >> v17) & 1) == 0)
            {
LABEL_26:
              v24 = (unsigned int *)sub_239962518(a1 + 104, &v37);
              v25 = *(unsigned int *)(sub_239962518(a1 + 104, v24) + 16);
              v26 = v42;
              if (((1 << v25) & *((_QWORD *)v42 + (v25 >> 6))) == 0)
              {
                v27 = (char *)__p[1];
                v28 = (((_QWORD)v40 - (unint64_t)__p[1]) << 7) - 1;
                if ((void *)v40 == __p[1])
                  v28 = 0;
                v29 = *((_QWORD *)&v41 + 1) + v41;
                if (v28 == *((_QWORD *)&v41 + 1) + (_QWORD)v41)
                {
                  sub_239931BC8((uint64_t)__p);
                  v27 = (char *)__p[1];
                  v29 = *((_QWORD *)&v41 + 1) + v41;
                }
                *(_DWORD *)(*(_QWORD *)&v27[(v29 >> 7) & 0x1FFFFFFFFFFFFF8] + 4 * (v29 & 0x3FF)) = v25;
                ++*((_QWORD *)&v41 + 1);
                v26[v25 >> 6] |= 1 << v25;
              }
            }
          }
          else
          {
LABEL_25:
            if (((*(_QWORD *)(*(_QWORD *)(v20 + 40) + ((v17 >> 3) & 0x1FFFFFF8)) >> v17) & 1) == 0)
              goto LABEL_26;
          }
          if (v37 == v16)
            goto LABEL_14;
        }
      }
    }
    v10 = ++v12;
  }
  while (v12 < (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2));
  v30 = (void **)__p[1];
  v31 = (void **)v40;
  *((_QWORD *)&v41 + 1) = 0;
  v32 = v40 - (unint64_t)__p[1];
  if ((unint64_t)v40 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v30);
      v31 = (void **)v40;
      v30 = (void **)((char *)__p[1] + 8);
      __p[1] = v30;
      v32 = v40 - (_QWORD)v30;
    }
    while ((_QWORD)v40 - (_QWORD)v30 > 0x10uLL);
  }
LABEL_35:
  v33 = v32 >> 3;
  if (v33 == 1)
  {
    v34 = 512;
LABEL_40:
    *(_QWORD *)&v41 = v34;
  }
  else if (v33 == 2)
  {
    v34 = 1024;
    goto LABEL_40;
  }
  if (v30 != v31)
  {
    do
    {
      v35 = *v30++;
      operator delete(v35);
    }
    while (v30 != v31);
    if ((void *)v40 != __p[1])
      *(_QWORD *)&v40 = v40 + (((unint64_t)__p[1] - v40 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (__p[0])
    operator delete(__p[0]);
  if (v42)
    operator delete(v42);
  return v11;
}

void sub_23992DD40(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  float v4;
  float32x4_t v5;
  float32x4_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  float32x4_t v16;
  uint64_t *v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  float32x4_t v23;
  unsigned int v24;

  if (*(_QWORD *)(a1 + 136) != *(_QWORD *)(a1 + 128))
  {
    LODWORD(v2) = 0;
    v3 = a1 + 104;
    v4 = 0.0;
    do
    {
      v24 = v2;
      v7 = *(unsigned int *)(sub_239962518(v3, &v24) + 12);
      v8 = (unsigned int *)sub_239962518(v3, &v24);
      v9 = *(unsigned int *)(sub_239962518(v3, v8) + 12);
      v10 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v12 = *v10;
      v11 = (std::__shared_weak_count *)v10[1];
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      v16 = *(float32x4_t *)(*(_QWORD *)(v12 + 40) + 16 * v9);
      v17 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v19 = *v17;
      v18 = (std::__shared_weak_count *)v17[1];
      if (v18)
      {
        v20 = (unint64_t *)&v18->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          v23 = v16;
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
          v16 = v23;
        }
      }
      v5 = vsubq_f32(v16, *(float32x4_t *)(*(_QWORD *)(v19 + 40) + 16 * v7));
      v6 = vmulq_f32(v5, v5);
      v6.i32[3] = 0;
      v4 = v4 + sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v6, v6)));
      v2 = (v2 + 1);
    }
    while (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2) > v2);
  }
}

uint64_t sub_23992DEE8(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  float v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  _DWORD v17[4];

  v1 = (_QWORD *)(result + 104);
  if (*(_QWORD *)(result + 112) != *(_QWORD *)(result + 104))
  {
    v2 = result;
    LODWORD(v3) = 0;
    v4 = 0.0;
    do
    {
      v16 = v3;
      sub_239962B1C((uint64_t)v17, v1, &v16);
      result = sub_239962B44(v17);
      if ((_DWORD)result == -1)
      {
        v5 = 6;
      }
      else
      {
        v6 = result;
        v7 = 0;
        LOBYTE(v8) = 0;
        do
        {
          while (1)
          {
            v9 = v7;
            if ((v8 & 1) == 0)
              break;
            LODWORD(v8) = 1;
            ++v7;
            result = sub_239962B44(v17);
            v6 = result;
            if ((_DWORD)result == -1)
              goto LABEL_16;
          }
          v10 = (uint64_t *)(*(_QWORD *)(v2 + 32) + 16 * *(unsigned int *)(v2 + 180));
          v12 = *v10;
          v11 = (std::__shared_weak_count *)v10[1];
          if (v11)
          {
            p_shared_owners = (unint64_t *)&v11->__shared_owners_;
            do
              v14 = __ldxr(p_shared_owners);
            while (__stxr(v14 + 1, p_shared_owners));
            do
              v15 = __ldaxr(p_shared_owners);
            while (__stlxr(v15 - 1, p_shared_owners));
            if (!v15)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v8 = (*(_QWORD *)(*(_QWORD *)(v12 + 40) + (((unint64_t)v6 >> 3) & 0x1FFFFFF8)) >> v6) & 1;
          v7 = v9 + 1;
          result = sub_239962B44(v17);
          v6 = result;
        }
        while ((_DWORD)result != -1);
LABEL_16:
        if ((_DWORD)v8)
        {
          v5 = v9 - 2;
          if (v7 < 3)
            v5 = 2 - v9;
        }
        else if (v9 > 4)
        {
          v5 = v9 - 5;
        }
        else
        {
          v5 = 5 - v9;
        }
      }
      v4 = v4 + (float)v5;
      v3 = (v3 + 1);
    }
    while (v3 < (uint64_t)(*(_QWORD *)(v2 + 112) - *(_QWORD *)(v2 + 104)) >> 2);
  }
  return result;
}

void sub_23992E09C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  float v4;
  float v5;
  float32x4_t v6;
  float32x4_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  float32x4_t v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  float32x4_t v24;
  unsigned int v25;

  if (*(_QWORD *)(a1 + 136) != *(_QWORD *)(a1 + 128))
  {
    LODWORD(v2) = 0;
    v3 = a1 + 104;
    v4 = 0.0;
    v5 = 0.0;
    do
    {
      v25 = v2;
      v8 = *(unsigned int *)(sub_239962518(v3, &v25) + 12);
      v9 = (unsigned int *)sub_239962518(v3, &v25);
      v10 = *(unsigned int *)(sub_239962518(v3, v9) + 12);
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v13 = *v11;
      v12 = (std::__shared_weak_count *)v11[1];
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      v17 = *(float32x4_t *)(*(_QWORD *)(v13 + 40) + 16 * v10);
      v18 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v20 = *v18;
      v19 = (std::__shared_weak_count *)v18[1];
      if (v19)
      {
        v21 = (unint64_t *)&v19->__shared_owners_;
        do
          v22 = __ldxr(v21);
        while (__stxr(v22 + 1, v21));
        do
          v23 = __ldaxr(v21);
        while (__stlxr(v23 - 1, v21));
        if (!v23)
        {
          v24 = v17;
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
          v17 = v24;
        }
      }
      v6 = vsubq_f32(v17, *(float32x4_t *)(*(_QWORD *)(v20 + 40) + 16 * v8));
      v7 = vmulq_f32(v6, v6);
      v7.i32[3] = 0;
      v7.f32[0] = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v7, v7));
      v4 = v4 + v7.f32[0];
      v5 = v5 + sqrtf(v7.f32[0]);
      v2 = (v2 + 1);
    }
    while (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2) > v2);
  }
}

float sub_23992E268(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t *v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float v34;
  float result;
  unint64_t v36;
  uint64_t *v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float v50;
  unsigned int v51;

  v51 = a2;
  v3 = a1 + 104;
  v4 = *(unsigned int *)(sub_239962518(a1 + 104, &v51) + 12);
  v5 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v7 = *v5;
  v6 = (std::__shared_weak_count *)v5[1];
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v49 = *(float32x4_t *)(*(_QWORD *)(v7 + 40) + 16 * v4);
  v11 = sub_239962518(v3, &v51);
  v12 = *(unsigned int *)(sub_239962518(v3, (unsigned int *)(v11 + 4)) + 12);
  v13 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v15 = *v13;
  v14 = (std::__shared_weak_count *)v13[1];
  if (v14)
  {
    v16 = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v47 = *(float32x4_t *)(*(_QWORD *)(v15 + 40) + 16 * v12);
  v19 = (unsigned int *)sub_239962518(v3, &v51);
  v20 = *(unsigned int *)(sub_239962518(v3, v19) + 12);
  v21 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v23 = *v21;
  v22 = (std::__shared_weak_count *)v21[1];
  if (v22)
  {
    v24 = (unint64_t *)&v22->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v27 = vsubq_f32(v47, v49);
  v28 = vsubq_f32(*(float32x4_t *)(*(_QWORD *)(v23 + 40) + 16 * v20), v49);
  v29 = vmulq_f32(v27, v27);
  v29.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v29, 2), vaddq_f32(v29, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v29.f32, 1))).u64[0];
  v29.f32[0] = sqrtf(v29.f32[0]);
  v30 = vmulq_f32(v28, v28);
  v31 = vdivq_f32(v27, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v29.f32, 0));
  v27.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).u64[0];
  v27.f32[0] = sqrtf(v27.f32[0]);
  v32 = vdivq_f32(v28, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v27.f32, 0));
  v33 = vmulq_f32(v31, v32);
  v34 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v33, 2), vaddq_f32(v33, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v33.f32, 1))).f32[0];
  result = 0.0;
  if (fabs(v34 + -1.0) >= 0.00000001)
  {
    if (fabs(v34 + 1.0) < 0.00000001)
      return 180.0;
    v36 = v51;
    v37 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
    v39 = *v37;
    v38 = (std::__shared_weak_count *)v37[1];
    if (!v38)
      goto LABEL_28;
    v40 = (unint64_t *)&v38->__shared_owners_;
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 1, v40));
    do
      v42 = __ldaxr(v40);
    while (__stlxr(v42 - 1, v40));
    if (!v42)
    {
      v48 = v31;
      v50 = v34;
      v46 = v32;
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
      v32 = v46;
      v31 = v48;
      v34 = v50;
      if (((*(_QWORD *)(*(_QWORD *)(v39 + 40) + ((v36 >> 3) & 0x1FFFFFF8)) >> v36) & 1) != 0)
        goto LABEL_29;
    }
    else
    {
LABEL_28:
      if (((*(_QWORD *)(*(_QWORD *)(v39 + 40) + ((v36 >> 3) & 0x1FFFFFF8)) >> v36) & 1) != 0)
      {
LABEL_29:
        v43 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v32, (int32x4_t)v32), (int8x16_t)v32, 0xCuLL), vnegq_f32(v31)), v32, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v31, (int32x4_t)v31), (int8x16_t)v31, 0xCuLL));
        v44 = vmulq_f32(v43, v43);
        v45 = atan2f(sqrtf(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v44.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v44, 2), v44)).f32[0]), v34);
        return v45 / 3.14159265 * 180.0;
      }
    }
    v45 = acosf(v34);
    return v45 / 3.14159265 * 180.0;
  }
  return result;
}

float32x4_t sub_23992E5C0@<Q0>(uint64_t a1@<X0>, float32x4_t *a2@<X8>)
{
  float32x4_t result;
  float32x4_t v4;
  uint64_t v6;
  unsigned int v7;
  float32x4_t v8;
  float32x4_t v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;

  result = (float32x4_t)vdupq_n_s32(0x7F7FFFFFu);
  v4.i64[0] = 0x80000000800000;
  v4.i64[1] = 0x80000000800000;
  *a2 = result;
  a2[1] = v4;
  if (*(_QWORD *)(a1 + 112) != *(_QWORD *)(a1 + 104))
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v10 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v12 = *v10;
      v11 = (std::__shared_weak_count *)v10[1];
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      v8 = *(float32x4_t *)(*(_QWORD *)(v12 + 40) + 16 * v6);
      v9 = vminq_f32(*a2, v8);
      result = vmaxq_f32(a2[1], v8);
      *a2 = v9;
      a2[1] = result;
      v6 = ++v7;
    }
    while (v7 < (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2));
  }
  return result;
}

uint64_t sub_23992E6A0(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v20;

  v4 = *(_QWORD *)(a1 + 104);
  v20 = *(_QWORD *)(a1 + 112);
  if (*(_QWORD *)(a1 + 136) == *(_QWORD *)(a1 + 128))
  {
    v6 = 0;
    v5 = 0;
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v10 = *v8;
      v9 = (std::__shared_weak_count *)v8[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      if ((*(_QWORD *)(*(_QWORD *)(v10 + 40) + 8 * (v7 >> 6)) & (1 << v7)) != 0)
        ++v6;
      else
        ++v5;
      ++v7;
    }
    while (v7 < 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2));
  }
  v14 = (unint64_t)(v20 - v4) >> 2;
  v15 = (v5 + v6) >> 1;
  v16 = (*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
  v17 = sub_23992D4AC(a1);
  v18 = sub_23992D878(a1);
  *a2 = v14;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v15;
  a2[4] = v16;
  a2[5] = v17;
  a2[6] = (v18 - (int)(v14 - v15 + v17 + v16) / 2) & ~((v18 - (int)(v14 - v15 + v17 + v16) / 2) >> 31);
  a2[7] = v18;
  return 1;
}

uint64_t sub_23992E814(uint64_t a1, float32x4_t *a2)
{
  __int32 v4;
  float v5;
  float v6;
  unint64_t v7;
  float v8;
  __int32 v9;
  __int32 v10;
  unint64_t v11;
  unsigned int v12;
  double v13;
  unsigned int v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  unsigned int v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  uint64_t *v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  unint64_t v29;
  float32x4_t v31;
  float32x4_t v32;
  unsigned int v33;
  _DWORD v34[4];

  sub_23992DD40(a1);
  a2->i32[0] = v4;
  v5 = 0.0;
  v6 = 0.0;
  if (*(_QWORD *)(a1 + 112) != *(_QWORD *)(a1 + 104))
  {
    LODWORD(v7) = 0;
    v8 = 0.0;
    do
    {
      v33 = v7;
      sub_239962B1C((uint64_t)v34, (_QWORD *)(a1 + 104), &v33);
      for (; sub_239962B44(v34) != -1; v8 = v8 + 1.0)
        ;
      v7 = (v7 + 1);
    }
    while (v7 < (uint64_t)(*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2);
    if ((_DWORD)v7)
      v6 = v8 / (float)v7;
    else
      v6 = 0.0;
  }
  a2->f32[1] = v6;
  sub_23992DEE8(a1);
  a2->i32[2] = v9;
  sub_23992E09C(a1);
  a2->i32[3] = v10;
  if (*(_QWORD *)(a1 + 136) != *(_QWORD *)(a1 + 128))
  {
    LODWORD(v11) = 0;
    v12 = 0;
    v13 = 0.0;
    v14 = 1;
    v15 = 0.0;
    do
    {
      v16 = sub_23992E268(a1, v11);
      v17 = v15 + v16;
      v18 = v13 + v16 * v16;
      v15 = v17;
      v13 = v18;
      ++v12;
      v11 = v14++;
    }
    while (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2) > v11);
    if (v12)
      v5 = sqrt(v18 / (double)v12 - v17 / (double)v12 * (v17 / (double)v12));
  }
  a2[1].f32[0] = v5;
  if (*(_QWORD *)(a1 + 112) == *(_QWORD *)(a1 + 104))
  {
    v21 = (float32x4_t)vdupq_n_s32(0x7F7FFFFFu);
    v22.i64[0] = 0x80000000800000;
    v22.i64[1] = 0x80000000800000;
  }
  else
  {
    v19 = 0;
    v20 = 0;
    v21 = (float32x4_t)vdupq_n_s32(0x7F7FFFFFu);
    v22.i64[0] = 0x80000000800000;
    v22.i64[1] = 0x80000000800000;
    do
    {
      v24 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v26 = *v24;
      v25 = (std::__shared_weak_count *)v24[1];
      if (v25)
      {
        p_shared_owners = (unint64_t *)&v25->__shared_owners_;
        do
          v28 = __ldxr(p_shared_owners);
        while (__stxr(v28 + 1, p_shared_owners));
        do
          v29 = __ldaxr(p_shared_owners);
        while (__stlxr(v29 - 1, p_shared_owners));
        if (!v29)
        {
          v31 = v22;
          v32 = v21;
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
          v22 = v31;
          v21 = v32;
        }
      }
      v23 = *(float32x4_t *)(*(_QWORD *)(v26 + 40) + 16 * v19);
      v21 = vminq_f32(v21, v23);
      v22 = vmaxq_f32(v22, v23);
      v19 = ++v20;
    }
    while (v20 < (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2));
  }
  a2[2] = v21;
  a2[3] = v22;
  return 1;
}

uint64_t sub_23992EA5C(uint64_t a1, _QWORD *a2, float *a3, int *a4)
{
  char *v4;
  size_t v5;
  size_t v6;
  void **p_dst;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  char *v11;
  size_t v12;
  size_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  char *v18;
  size_t v19;
  char *v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  size_t v25;
  char *v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  char *v31;
  size_t v32;
  char *v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  BOOL v41;
  uint64_t result;
  uint64_t *v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *p_shared_owners;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  int64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  _BYTE *v68;
  unsigned int *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _OWORD *v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  void **v89;
  uint64_t *v90;
  uint64_t v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unsigned __int16 v98;
  uint64_t v99;
  float v100;
  uint64_t *v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  std::__shared_weak_count *v109;
  uint64_t v110;
  unint64_t *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t *v114;
  unsigned int v115;
  uint64_t **v116;
  uint64_t *v117;
  uint64_t *v118;
  uint64_t *v119;
  int v120;
  size_t v121;
  uint64_t *v122;
  int v123;
  size_t v124;
  uint64_t *v125;
  size_t v126;
  int v127;
  _BOOL4 v128;
  int v129;
  _BOOL4 v130;
  uint64_t *v131;
  int v132;
  int v133;
  unsigned int v134;
  uint64_t v135;
  uint64_t v136;
  std::__shared_weak_count *v137;
  unint64_t *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  std::__shared_weak_count *v142;
  int v143;
  unint64_t *v144;
  unint64_t v145;
  int v146;
  unint64_t v147;
  int v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  float v152;
  float *v153;
  float *v154;
  uint64_t *v155;
  std::__shared_weak_count *v156;
  uint64_t v157;
  unint64_t *v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  std::__shared_weak_count *v163;
  uint64_t v164;
  unint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t *v168;
  unsigned int *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  std::__shared_weak_count *v173;
  uint64_t v174;
  unint64_t *v175;
  unint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  std::__shared_weak_count *v181;
  uint64_t v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  unsigned __int16 v186;
  float v187;
  uint64_t *v188;
  uint64_t v189;
  std::__shared_weak_count *v190;
  unint64_t *v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t *v194;
  unsigned int v195;
  uint64_t v197;
  unsigned int v198;
  unsigned int v201;
  unsigned int v202;
  unint64_t v203;
  unsigned int v205;
  int v206;
  unsigned int v207;
  uint64_t v208;
  uint64_t **v209;
  uint64_t **v210;
  void *__p;
  void **__dst;
  char *v213;
  unint64_t v214;
  char **v215;
  char *v216;
  char *v217;

  v4 = off_256934448[0];
  v5 = strlen(off_256934448[0]);
  if (v5 > 0x7FFFFFFFFFFFFFF7)
LABEL_252:
    sub_23941A5AC();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    v213 = (char *)v6;
    v214 = v9 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v214) = v5;
  p_dst = (void **)&__dst;
  if (v5)
LABEL_8:
    memmove(p_dst, v4, v6);
  *((_BYTE *)p_dst + v6) = 0;
  v215 = 0;
  v216 = 0;
  v217 = 0;
  v210 = (uint64_t **)(a1 + 80);
  v10 = sub_23958C0D8((uint64_t **)(a1 + 80), (uint64_t)&v215, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v217) < 0)
  {
    operator delete(v215);
    if ((SHIBYTE(v214) & 0x80000000) == 0)
      goto LABEL_11;
  }
  else if ((SHIBYTE(v214) & 0x80000000) == 0)
  {
    goto LABEL_11;
  }
  operator delete(__dst);
LABEL_11:
  v11 = off_256934458;
  v12 = strlen(off_256934458);
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_252;
  v13 = v12;
  if (v12 >= 0x17)
  {
    v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v15 = v12 | 7;
    v16 = v15 + 1;
    v14 = (void **)operator new(v15 + 1);
    v213 = (char *)v13;
    v214 = v16 | 0x8000000000000000;
    __dst = v14;
    goto LABEL_18;
  }
  HIBYTE(v214) = v12;
  v14 = (void **)&__dst;
  if (v12)
LABEL_18:
    memmove(v14, v11, v13);
  *((_BYTE *)v14 + v13) = 0;
  v216 = 0;
  v217 = 0;
  v215 = &v216;
  v17 = sub_23958C234(v210, (uint64_t)&v215, (unsigned __int8 *)&__dst);
  sub_23958B6B4((uint64_t)&v215, v216);
  if (SHIBYTE(v214) < 0)
    operator delete(__dst);
  v18 = off_256934438[0];
  v19 = strlen(off_256934438[0]);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
LABEL_250:
    sub_23941A5AC();
  v20 = (char *)v19;
  if (v19 >= 0x17)
  {
    v22 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v22 = v19 | 7;
    v23 = v22 + 1;
    v21 = (void **)operator new(v22 + 1);
    v216 = v20;
    v217 = (char *)(v23 | 0x8000000000000000);
    v215 = (char **)v21;
    goto LABEL_28;
  }
  HIBYTE(v217) = v19;
  v21 = (void **)&v215;
  if (v19)
LABEL_28:
    memmove(v21, v18, (size_t)v20);
  v20[(_QWORD)v21] = 0;
  __dst = 0;
  v205 = sub_2394E5C88(v210, (uint64_t)&__dst, (unsigned __int8 *)&v215);
  if (SHIBYTE(v217) < 0)
    operator delete(v215);
  v24 = off_256934428[0];
  v25 = strlen(off_256934428[0]);
  if (v25 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_250;
  v26 = (char *)v25;
  if (v25 >= 0x17)
  {
    v28 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v25 | 7) != 0x17)
      v28 = v25 | 7;
    v29 = v28 + 1;
    v27 = (void **)operator new(v28 + 1);
    v216 = v26;
    v217 = (char *)(v29 | 0x8000000000000000);
    v215 = (char **)v27;
    goto LABEL_38;
  }
  HIBYTE(v217) = v25;
  v27 = (void **)&v215;
  if (v25)
LABEL_38:
    memmove(v27, v24, (size_t)v26);
  v26[(_QWORD)v27] = 0;
  LOWORD(__dst) = 0;
  v209 = (uint64_t **)(a1 + 56);
  v30 = sub_23958CE84((uint64_t **)(a1 + 56), (uint64_t)&__dst, (unsigned __int8 *)&v215);
  if (SHIBYTE(v217) < 0)
    operator delete(v215);
  v31 = off_256934418[0];
  v32 = strlen(off_256934418[0]);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_250;
  v33 = (char *)v32;
  v207 = v10;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = (void **)operator new(v35 + 1);
    v216 = v33;
    v217 = (char *)(v36 | 0x8000000000000000);
    v215 = (char **)v34;
    goto LABEL_48;
  }
  HIBYTE(v217) = v32;
  v34 = (void **)&v215;
  if (v32)
LABEL_48:
    memmove(v34, v31, (size_t)v33);
  v33[(_QWORD)v34] = 0;
  LODWORD(v213) = 0;
  __dst = 0;
  v37 = sub_2394E5DE4(v209, (uint64_t)&__dst, (unsigned __int8 *)&v215);
  if (SHIBYTE(v217) < 0)
    operator delete(v215);
  v41 = v10 == -1 || v17 == -1 || v205 == -1 || v30 == -1 || v37 == -1;
  result = !v41;
  if (!v41)
  {
    v195 = result;
    v43 = &(*v210)[2 * v10];
    v44 = *v43;
    v45 = (std::__shared_weak_count *)v43[1];
    if (v45)
    {
      p_shared_owners = (unint64_t *)&v45->__shared_owners_;
      do
        v47 = __ldxr(p_shared_owners);
      while (__stxr(v47 + 1, p_shared_owners));
      do
        v48 = __ldaxr(p_shared_owners);
      while (__stlxr(v48 - 1, p_shared_owners));
      if (!v48)
      {
        ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
        std::__shared_weak_count::__release_weak(v45);
      }
    }
    v49 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v44 + 16))(v44);
    v215 = 0;
    v216 = 0;
    v217 = 0;
    if (v49)
    {
      v50 = v49;
      if (v49 >> 62)
        sub_2394189F8();
      v215 = (char **)operator new(4 * v49);
      v216 = (char *)v215;
      v217 = (char *)v215 + 4 * v50;
    }
    v201 = v37;
    v198 = v17;
    if (*(_QWORD *)(a1 + 160) != *(_QWORD *)(a1 + 152))
    {
      v51 = 0;
      v52 = 0;
      v53 = 0;
      v54 = v30;
      while (1)
      {
        v56 = &(*v209)[2 * v54];
        v57 = *v56;
        v58 = (std::__shared_weak_count *)v56[1];
        if (!v58)
          goto LABEL_259;
        v59 = (unint64_t *)&v58->__shared_owners_;
        do
          v60 = __ldxr(v59);
        while (__stxr(v60 + 1, v59));
        do
          v61 = __ldaxr(v59);
        while (__stlxr(v61 - 1, v59));
        if (!v61)
        {
          ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
          std::__shared_weak_count::__release_weak(v58);
          if (v52 != *(unsigned __int16 *)(*(_QWORD *)(v57 + 40) + 2 * v51))
            goto LABEL_80;
        }
        else
        {
LABEL_259:
          if (v52 != *(unsigned __int16 *)(*(_QWORD *)(v57 + 40) + 2 * v51))
            goto LABEL_80;
        }
        v62 = v216;
        if (v216 >= v217)
          break;
        *(_DWORD *)v216 = v53;
        v55 = v62 + 4;
LABEL_79:
        v216 = v55;
        ++v52;
LABEL_80:
        v51 = ++v53;
        if (v53 >= (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2))
          goto LABEL_109;
      }
      v63 = (char *)v215;
      v64 = (v216 - (char *)v215) >> 2;
      v65 = v64 + 1;
      if ((unint64_t)(v64 + 1) >> 62)
        sub_2394189F8();
      v66 = v217 - (char *)v215;
      if ((v217 - (char *)v215) >> 1 > v65)
        v65 = v66 >> 1;
      if ((unint64_t)v66 >= 0x7FFFFFFFFFFFFFFCLL)
        v67 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v67 = v65;
      if (v67)
      {
        if (v67 >> 62)
          sub_239418A80();
        v68 = operator new(4 * v67);
        v69 = (unsigned int *)&v68[4 * v64];
        *v69 = v53;
        v55 = (char *)(v69 + 1);
        if (v62 == v63)
          goto LABEL_107;
      }
      else
      {
        v68 = 0;
        v69 = (unsigned int *)(4 * v64);
        *(_DWORD *)(4 * v64) = v53;
        v55 = (char *)(4 * v64 + 4);
        if (v62 == v63)
        {
LABEL_107:
          v215 = (char **)v69;
          v216 = v55;
          v217 = &v68[4 * v67];
          if (v63)
            operator delete(v63);
          goto LABEL_79;
        }
      }
      v70 = v62 - 4 - v63;
      if (v70 < 0x2C)
        goto LABEL_260;
      if ((unint64_t)(v63 - v68) < 0x20)
        goto LABEL_260;
      v71 = (v70 >> 2) + 1;
      v72 = 4 * (v71 & 0x7FFFFFFFFFFFFFF8);
      v73 = &v62[-v72];
      v69 = (unsigned int *)((char *)v69 - v72);
      v74 = &v68[4 * v64 - 16];
      v75 = v62 - 16;
      v76 = v71 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v77 = *(_OWORD *)v75;
        *(v74 - 1) = *((_OWORD *)v75 - 1);
        *v74 = v77;
        v74 -= 2;
        v75 -= 32;
        v76 -= 8;
      }
      while (v76);
      v62 = v73;
      if (v71 != (v71 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_260:
        do
        {
          v78 = *((_DWORD *)v62 - 1);
          v62 -= 4;
          *--v69 = v78;
        }
        while (v62 != v63);
      }
      goto LABEL_107;
    }
LABEL_109:
    v79 = v207;
    v80 = &(*v210)[2 * v207];
    v81 = *v80;
    v82 = (std::__shared_weak_count *)v80[1];
    if (v82)
    {
      v83 = (unint64_t *)&v82->__shared_owners_;
      do
        v84 = __ldxr(v83);
      while (__stxr(v84 + 1, v83));
      do
        v85 = __ldaxr(v83);
      while (__stlxr(v85 - 1, v83));
      if (!v85)
      {
        ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
        std::__shared_weak_count::__release_weak(v82);
      }
    }
    v86 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v81 + 16))(v81);
    v87 = v86;
    __dst = 0;
    v213 = 0;
    v214 = 0;
    if (v86)
    {
      if (v86 >> 62)
        sub_2394189F8();
      v88 = 4 * v86;
      v89 = (void **)operator new(4 * v86);
      __dst = v89;
      v214 = (unint64_t)v89 + 4 * v87;
      bzero(v89, 4 * v87);
      v213 = (char *)v89 + v88;
    }
    v90 = &(*v210)[2 * v207];
    v91 = *v90;
    v92 = (std::__shared_weak_count *)v90[1];
    if (v92)
    {
      v93 = (unint64_t *)&v92->__shared_owners_;
      do
        v94 = __ldxr(v93);
      while (__stxr(v94 + 1, v93));
      do
        v95 = __ldaxr(v93);
      while (__stlxr(v95 - 1, v93));
      if (!v95)
      {
        ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
        std::__shared_weak_count::__release_weak(v92);
      }
    }
    v96 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v91 + 16))(v91);
    v97 = v96;
    __p = 0;
    if (v96)
    {
      if (v96 >> 62)
        sub_2394189F8();
      __p = operator new(4 * v96);
      bzero(__p, 4 * v97);
    }
    v98 = 0;
    v203 = 0;
    v197 = v207;
    v208 = v201;
    v99 = v205;
    while (1)
    {
      v101 = &(*v210)[2 * v79];
      v102 = *v101;
      v103 = (std::__shared_weak_count *)v101[1];
      if (v103)
      {
        v104 = (unint64_t *)&v103->__shared_owners_;
        do
          v105 = __ldxr(v104);
        while (__stxr(v105 + 1, v104));
        do
          v106 = __ldaxr(v104);
        while (__stlxr(v106 - 1, v104));
        if (!v106)
        {
          ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
          std::__shared_weak_count::__release_weak(v103);
        }
      }
      v107 = v98;
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v102 + 16))(v102) <= (unint64_t)v98)
        break;
      v108 = &(*v210)[2 * v198];
      v110 = *v108;
      v109 = (std::__shared_weak_count *)v108[1];
      if (v109)
      {
        v111 = (unint64_t *)&v109->__shared_owners_;
        do
          v112 = __ldxr(v111);
        while (__stxr(v112 + 1, v111));
        do
          v113 = __ldaxr(v111);
        while (__stlxr(v113 - 1, v111));
        if (!v113)
        {
          ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
          std::__shared_weak_count::__release_weak(v109);
        }
      }
      v114 = *(uint64_t **)(v110 + 40);
      do
      {
        v114 = (uint64_t *)v114[1];
        if (!v114)
          goto LABEL_248;
        while (1)
        {
          v115 = *((unsigned __int16 *)v114 + 16);
          if (v98 >= v115)
            break;
          v114 = (uint64_t *)*v114;
          if (!v114)
            goto LABEL_248;
        }
      }
      while (v115 < v98);
      v116 = (uint64_t **)a2[7];
      if (!v116)
LABEL_248:
        sub_23941D898("map::at:  key not found");
      v119 = (uint64_t *)v114[5];
      v117 = v114 + 5;
      v118 = v119;
      v120 = *((char *)v117 + 23);
      if (v120 >= 0)
        v121 = *((unsigned __int8 *)v117 + 23);
      else
        v121 = v117[1];
      if (v120 >= 0)
        v122 = v117;
      else
        v122 = v118;
      while (1)
      {
        while (1)
        {
          v123 = *((char *)v116 + 55);
          if (v123 >= 0)
            v124 = *((unsigned __int8 *)v116 + 55);
          else
            v124 = (size_t)v116[5];
          if (v123 >= 0)
            v125 = (uint64_t *)(v116 + 4);
          else
            v125 = v116[4];
          if (v124 >= v121)
            v126 = v121;
          else
            v126 = v124;
          v127 = memcmp(v122, v125, v126);
          v128 = v121 < v124;
          if (v127)
            v128 = v127 < 0;
          if (!v128)
            break;
          v116 = (uint64_t **)*v116;
          if (!v116)
            goto LABEL_248;
        }
        v129 = memcmp(v125, v122, v126);
        v130 = v124 < v121;
        if (v129)
          v130 = v129 < 0;
        if (!v130)
          break;
        v116 = (uint64_t **)v116[1];
        if (!v116)
          goto LABEL_248;
      }
      v131 = *(uint64_t **)(*a2 + 48 * *((unsigned __int16 *)v116 + 28) + 32);
      if (!v131)
LABEL_249:
        sub_23941D898("map::at:  key not found");
      v132 = *a4;
      while (1)
      {
        while (1)
        {
          v133 = *((_DWORD *)v131 + 7);
          if (v132 >= v133)
            break;
          v131 = (uint64_t *)*v131;
          if (!v131)
            goto LABEL_249;
        }
        if (v133 >= v132)
          break;
        v131 = (uint64_t *)v131[1];
        if (!v131)
          goto LABEL_249;
      }
      v134 = *((unsigned __int16 *)v131 + 16);
      v135 = a2[3] + 48 * v134;
      v136 = *(_QWORD *)(v135 + 8);
      v137 = *(std::__shared_weak_count **)(v135 + 16);
      if (v137)
      {
        v138 = (unint64_t *)&v137->__shared_owners_;
        do
          v139 = __ldxr(v138);
        while (__stxr(v139 + 1, v138));
        v140 = a2[3] + 48 * v134;
        v141 = *(_QWORD *)(v140 + 8);
        v142 = *(std::__shared_weak_count **)(v140 + 16);
        v143 = *(_DWORD *)(v136 + 4);
        if (v142)
        {
          v144 = (unint64_t *)&v142->__shared_owners_;
          do
            v145 = __ldxr(v144);
          while (__stxr(v145 + 1, v144));
          v146 = *(_DWORD *)(v141 + 8);
          do
            v147 = __ldaxr(v144);
          while (__stlxr(v147 - 1, v144));
          if (!v147)
          {
            ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
            std::__shared_weak_count::__release_weak(v142);
          }
        }
        else
        {
          v146 = *(_DWORD *)(v141 + 8);
        }
        v148 = v146 * v143;
        do
          v149 = __ldaxr(v138);
        while (__stlxr(v149 - 1, v138));
        if (!v149)
        {
          ((void (*)(std::__shared_weak_count *))v137->__on_zero_shared)(v137);
          std::__shared_weak_count::__release_weak(v137);
        }
      }
      else
      {
        v148 = *(_DWORD *)(v136 + 8) * *(_DWORD *)(v136 + 4);
      }
      *((_DWORD *)__p + v107) = v148;
      v150 = *((unsigned int *)v215 + v107);
      v202 = v148;
      if (v107 + 1 != (v216 - (char *)v215) >> 2)
      {
        LODWORD(v151) = *((_DWORD *)v215 + v107 + 1);
        v152 = 0.0;
        if (v150 >= v151)
          goto LABEL_128;
LABEL_203:
        v206 = v151;
        while (2)
        {
          v155 = &(*v209)[2 * v208];
          v157 = *v155;
          v156 = (std::__shared_weak_count *)v155[1];
          if (!v156)
            goto LABEL_210;
          v158 = (unint64_t *)&v156->__shared_owners_;
          do
            v159 = __ldxr(v158);
          while (__stxr(v159 + 1, v158));
          do
            v160 = __ldaxr(v158);
          while (__stlxr(v160 - 1, v158));
          if (!v160)
          {
            ((void (*)(std::__shared_weak_count *))v156->__on_zero_shared)(v156);
            std::__shared_weak_count::__release_weak(v156);
            LODWORD(v151) = v206;
            v161 = *(_QWORD *)(v157 + 40);
            v168 = &(*v210)[2 * v99];
            v164 = *v168;
            v163 = (std::__shared_weak_count *)v168[1];
            if (v163)
            {
LABEL_211:
              v165 = (unint64_t *)&v163->__shared_owners_;
              do
                v166 = __ldxr(v165);
              while (__stxr(v166 + 1, v165));
              do
                v167 = __ldaxr(v165);
              while (__stlxr(v167 - 1, v165));
              if (!v167)
              {
                ((void (*)(std::__shared_weak_count *))v163->__on_zero_shared)(v163);
                std::__shared_weak_count::__release_weak(v163);
                LODWORD(v151) = v206;
              }
            }
          }
          else
          {
LABEL_210:
            v161 = *(_QWORD *)(v157 + 40);
            v162 = &(*v210)[2 * v99];
            v164 = *v162;
            v163 = (std::__shared_weak_count *)v162[1];
            if (v163)
              goto LABEL_211;
          }
          v169 = (unsigned int *)(v161 + 12 * v150);
          v170 = *v169;
          v171 = *(_QWORD *)(v164 + 40);
          v172 = &(*v210)[2 * v99];
          v174 = *v172;
          v173 = (std::__shared_weak_count *)v172[1];
          if (v173)
          {
            v175 = (unint64_t *)&v173->__shared_owners_;
            do
              v176 = __ldxr(v175);
            while (__stxr(v176 + 1, v175));
            do
              v177 = __ldaxr(v175);
            while (__stlxr(v177 - 1, v175));
            if (!v177)
            {
              ((void (*)(std::__shared_weak_count *))v173->__on_zero_shared)(v173);
              std::__shared_weak_count::__release_weak(v173);
              LODWORD(v151) = v206;
            }
          }
          v178 = v169[1];
          v179 = *(_QWORD *)(v174 + 40);
          v180 = &(*v210)[2 * v99];
          v182 = *v180;
          v181 = (std::__shared_weak_count *)v180[1];
          if (v181)
          {
            v183 = (unint64_t *)&v181->__shared_owners_;
            do
              v184 = __ldxr(v183);
            while (__stxr(v184 + 1, v183));
            do
              v185 = __ldaxr(v183);
            while (__stlxr(v185 - 1, v183));
            if (!v185)
            {
              ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
              std::__shared_weak_count::__release_weak(v181);
              LODWORD(v151) = v206;
            }
          }
          v153 = (float *)(v171 + 8 * v170);
          v154 = (float *)(*(_QWORD *)(v182 + 40) + 8 * v169[2]);
          v152 = v152
               + fabsf((float)((float)((float)(*(float *)(v179 + 8 * v178) - *v153) * (float)(v154[1] - v153[1]))- (float)((float)(*(float *)(v179 + 8 * v178 + 4) - v153[1]) * (float)(*v154 - *v153)))* 0.5);
          if ((_DWORD)v151 == (_DWORD)++v150)
            goto LABEL_128;
          continue;
        }
      }
      v151 = (*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
      v152 = 0.0;
      if (v150 < v151)
        goto LABEL_203;
LABEL_128:
      if (v152 <= 1.0)
        v100 = v152;
      else
        v100 = 1.0;
      *((float *)__dst + v107) = v100;
      v203 += v202;
      v98 = v107 + 1;
      v79 = v197;
    }
    v186 = 0;
    v187 = 0.0;
    v188 = &(*v210)[2 * v79];
    v189 = *v188;
    v190 = (std::__shared_weak_count *)v188[1];
    if (!v190)
      goto LABEL_235;
LABEL_230:
    v191 = (unint64_t *)&v190->__shared_owners_;
    do
      v192 = __ldxr(v191);
    while (__stxr(v192 + 1, v191));
    do
      v193 = __ldaxr(v191);
    while (__stlxr(v193 - 1, v191));
    if (!v193)
    {
      ((void (*)(std::__shared_weak_count *))v190->__on_zero_shared)(v190);
      std::__shared_weak_count::__release_weak(v190);
    }
LABEL_235:
    while ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v189 + 16))(v189) > (unint64_t)v186)
    {
      v187 = v187 + (float)(*((float *)__dst + v186) * (float)((float)*((unsigned int *)__p + v186) / (float)v203));
      ++v186;
      v194 = &(*v210)[2 * v79];
      v189 = *v194;
      v190 = (std::__shared_weak_count *)v194[1];
      if (v190)
        goto LABEL_230;
    }
    *a3 = v187;
    if (__p)
      operator delete(__p);
    if (__dst)
      operator delete(__dst);
    if (v215)
    {
      v216 = (char *)v215;
      operator delete(v215);
    }
    return v195;
  }
  return result;
}

void sub_23992F924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  uint64_t v31;
  void *v33;

  if (__p)
    operator delete(__p);
  v33 = *(void **)(v31 - 144);
  if (v33)
  {
    *(_QWORD *)(v31 - 136) = v33;
    operator delete(v33);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23992FA08(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  unsigned int v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _BYTE *v26;
  unsigned int *v27;
  unint64_t v28;
  char *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  int v40;
  int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unsigned int *v47;
  uint64_t v48;
  unsigned int *v49;
  void *v50;
  _DWORD v53[4];
  void *__p;
  char *v55;
  char *v56;
  unsigned int v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;

  v2 = a1[16];
  v1 = a1[17];
  v62 = 0;
  v63 = 0;
  v61 = 0;
  v3 = v1 - v2;
  if (v1 != v2)
  {
    if (v3 < 0)
      sub_2394189F8();
    v4 = 0xCCCCCCCCCCCCCCCDLL * (v3 >> 2);
    v5 = (v4 - 1) >> 6;
    v6 = operator new(8 * (v5 + 1));
    v7 = v6;
    v62 = v4;
    v63 = v5 + 1;
    v61 = v6;
    if (v4 >= 0x41)
      v8 = (v4 - 1) >> 6;
    else
      v8 = 0;
    v6[v8] = 0;
    if (v4 >= 0x40)
      bzero(v6, 8 * (v4 >> 6));
    if ((v4 & 0x3F) != 0)
      v7[v4 >> 6] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v4 & 0x3F));
  }
  v9 = a1[13];
  v10 = a1[14];
  v11 = a1 + 13;
  v59 = 0;
  v60 = 0;
  v58 = 0;
  v12 = v10 - v9;
  if (v12)
  {
    if (v12 < 0)
      sub_2394189F8();
    v13 = v12 >> 2;
    v14 = ((unint64_t)((v12 >> 2) - 1) >> 6) + 1;
    v58 = operator new(8 * v14);
    v59 = 0;
    v60 = v14;
    sub_23942D8C8(&v58, v13, 0);
    v2 = a1[16];
    v1 = a1[17];
  }
  if (v1 == v2)
  {
    v37 = 1;
    v50 = v58;
    if (v58)
      goto LABEL_68;
    goto LABEL_69;
  }
  v15 = 0;
  v16 = 0;
  while (2)
  {
    if (((*(_QWORD *)((char *)v61 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      goto LABEL_15;
    LODWORD(__p) = v16;
    v57 = *(_DWORD *)(sub_239962518((uint64_t)v11, (unsigned int *)&__p) + 12);
    if (((*(_QWORD *)((char *)v58 + (((unint64_t)v57 >> 3) & 0x1FFFFFF8)) >> v57) & 1) != 0)
    {
      v37 = 0;
      v50 = v58;
      if (v58)
        goto LABEL_68;
      goto LABEL_69;
    }
    __p = 0;
    v55 = 0;
    v56 = 0;
    sub_239962B1C((uint64_t)v53, v11, &v57);
    v17 = sub_239962B44(v53);
    v18 = 0;
    while (v17 != -1)
    {
      *(_QWORD *)((char *)v61 + (((unint64_t)v17 >> 3) & 0x1FFFFFF8)) |= 1 << v17;
      if (v18 < v56)
      {
        *(_DWORD *)v18 = v17;
        v19 = (uint64_t)(v18 + 4);
        goto LABEL_20;
      }
      v20 = (char *)__p;
      v21 = v18 - (_BYTE *)__p;
      v22 = (v18 - (_BYTE *)__p) >> 2;
      v23 = v22 + 1;
      if ((unint64_t)(v22 + 1) >> 62)
        sub_2394189F8();
      v24 = v56 - (_BYTE *)__p;
      if ((v56 - (_BYTE *)__p) >> 1 > v23)
        v23 = v24 >> 1;
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL)
        v25 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v25 = v23;
      if (v25)
      {
        if (v25 >> 62)
          sub_239418A80();
        v26 = operator new(4 * v25);
        v27 = (unsigned int *)&v26[4 * v22];
        *v27 = v17;
        v19 = (uint64_t)(v27 + 1);
        if (v18 != v20)
        {
LABEL_35:
          v28 = v18 - 4 - v20;
          if (v28 < 0xBC)
          {
            v29 = v18;
            goto LABEL_37;
          }
          if (&v26[v21 - 4 - (v28 & 0xFFFFFFFFFFFFFFFCLL)] > &v26[v21 - 4])
          {
            v29 = v18;
            goto LABEL_37;
          }
          if (&v18[-(v28 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v18 - 4)
          {
            v29 = v18;
            goto LABEL_37;
          }
          if ((unint64_t)(v18 - v26 - v21) < 0x20)
          {
            v29 = v18;
            goto LABEL_37;
          }
          v31 = (v28 >> 2) + 1;
          v32 = 4 * (v31 & 0x7FFFFFFFFFFFFFF8);
          v29 = &v18[-v32];
          v27 = (unsigned int *)((char *)v27 - v32);
          v33 = &v26[4 * v22 - 16];
          v34 = v18 - 16;
          v35 = v31 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v36 = *(_OWORD *)v34;
            *(v33 - 1) = *((_OWORD *)v34 - 1);
            *v33 = v36;
            v33 -= 2;
            v34 -= 32;
            v35 -= 8;
          }
          while (v35);
          if (v31 != (v31 & 0x7FFFFFFFFFFFFFF8))
          {
            do
            {
LABEL_37:
              v30 = *((_DWORD *)v29 - 1);
              v29 -= 4;
              *--v27 = v30;
            }
            while (v29 != v20);
          }
          v18 = (char *)__p;
          __p = v27;
          v55 = (char *)v19;
          v56 = &v26[4 * v25];
          if (!v18)
            goto LABEL_20;
LABEL_39:
          operator delete(v18);
          goto LABEL_20;
        }
      }
      else
      {
        v26 = 0;
        v27 = (unsigned int *)(4 * v22);
        *(_DWORD *)(4 * v22) = v17;
        v19 = 4 * v22 + 4;
        if (v18 != v20)
          goto LABEL_35;
      }
      __p = v27;
      v55 = (char *)v19;
      v56 = &v26[4 * v25];
      if (v18)
        goto LABEL_39;
LABEL_20:
      v55 = (char *)v19;
      v17 = sub_239962B44(v53);
      v18 = (char *)v19;
    }
    v37 = 1;
    *(_QWORD *)((char *)v58 + (((unint64_t)v57 >> 3) & 0x1FFFFFF8)) |= 1 << v57;
    v38 = (char *)__p;
    if ((unint64_t)(v18 - (_BYTE *)__p) < 5)
    {
LABEL_58:
      if (v38)
      {
LABEL_59:
        v55 = v38;
        operator delete(v38);
      }
    }
    else
    {
      v39 = 0;
      v40 = 0;
      v41 = 2;
      do
      {
        v43 = v39;
        v39 = (v40 + 1);
        v44 = (v18 - v38) >> 2;
        v45 = v41;
        v46 = v39;
        if (v44 > v39)
        {
          while (1)
          {
            v47 = (unsigned int *)sub_239962518((uint64_t)v11, (unsigned int *)&v38[4 * v43]);
            v48 = sub_239962518((uint64_t)v11, v47);
            v38 = (char *)__p;
            v49 = (unsigned int *)sub_239962518((uint64_t)v11, (unsigned int *)__p + v46);
            if (*(_DWORD *)(v48 + 12) == *(_DWORD *)(sub_239962518((uint64_t)v11, v49) + 12))
              break;
            v46 = v45;
            v18 = v55;
            v44 = (v55 - v38) >> 2;
            ++v45;
            if (v44 <= v46)
              goto LABEL_52;
          }
          v37 = 0;
          goto LABEL_58;
        }
LABEL_52:
        v42 = v44 - 1;
        ++v41;
        v40 = v39;
      }
      while (v42 > v39);
      v37 = 1;
      if (v38)
        goto LABEL_59;
    }
    if ((_DWORD)v37)
    {
      v2 = a1[16];
      v1 = a1[17];
LABEL_15:
      v15 = ++v16;
      if (0xCCCCCCCCCCCCCCCDLL * ((v1 - v2) >> 2) > v16)
        continue;
      v37 = 1;
    }
    break;
  }
  v50 = v58;
  if (v58)
LABEL_68:
    operator delete(v50);
LABEL_69:
  if (v61)
    operator delete(v61);
  return v37;
}

void sub_23992FF24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *__p)
{
  if (!__p)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23992FFA4(uint64_t a1, _QWORD *a2, unsigned int **a3, unsigned int **a4)
{
  _QWORD *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  char *v11;
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  _BYTE *v22;
  _DWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _OWORD *v29;
  __int128 *v30;
  uint64_t v31;
  __int128 v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int *v37;
  char v38;
  unsigned int *v39;
  BOOL v40;
  unsigned int *v41;
  unsigned int *v42;
  char v43;
  unsigned int *v44;
  char *v46;
  unsigned int *v47;
  unsigned int *v48;
  unsigned int v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *p_shared_owners;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _BYTE *v65;
  _DWORD *v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  int v75;
  int v76;
  char *v77;
  int64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _BYTE *v83;
  _DWORD *v84;
  unint64_t v85;
  char *v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  char *v91;
  uint64_t v92;
  __int128 v93;
  char *v94;
  char *v95;
  int64_t v96;
  void *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _OWORD *v102;
  char *v103;
  uint64_t v104;
  __int128 v105;
  int v106;
  unint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  _BYTE *v115;
  _DWORD *v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _OWORD *v123;
  char *v124;
  uint64_t v125;
  __int128 v126;
  int v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  _OWORD *v132;
  char *v133;
  uint64_t v134;
  __int128 v135;
  int v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  _OWORD *v146;
  char *v147;
  uint64_t v148;
  __int128 v149;
  int v150;
  char *v151;
  char *v152;
  void *v153;
  char *v154;
  void *v155;
  void *v156;
  unint64_t v157;
  int v159;
  void *__p;
  uint64_t v164;
  char *v165;
  _DWORD v166[4];
  void *v167;
  char *v168;

  a2[1] = *a2;
  v4 = (_QWORD *)(a1 + 104);
  v5 = -858993459 * ((*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2);
  v157 = *(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104);
  sub_239930C88(&v167, (v157 >> 2));
  if (v5)
  {
    v6 = 0;
    v159 = v5;
    while (1)
    {
      LODWORD(__p) = v6;
      v8 = sub_239962518((uint64_t)v4, (unsigned int *)&__p);
      v9 = (char *)v167 + 24 * *(unsigned int *)(v8 + 12);
      v10 = v9 + 1;
      v11 = (char *)v9[1];
      v13 = v9 + 2;
      v12 = v9[2];
      if ((unint64_t)v11 < v12)
      {
        *(_DWORD *)v11 = v6;
        v7 = (uint64_t)(v11 + 4);
        goto LABEL_4;
      }
      v14 = (char *)*v9;
      v15 = (uint64_t)&v11[-*v9];
      v16 = v15 >> 2;
      v17 = (v15 >> 2) + 1;
      if (v17 >> 62)
        sub_2394189F8();
      v18 = v12 - (_QWORD)v14;
      if (v18 >> 1 > v17)
        v17 = v18 >> 1;
      v19 = (unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v17;
      if (v19)
      {
        if (v19 >> 62)
          sub_239418A80();
        v20 = v4;
        v21 = v19;
        v22 = operator new(4 * v19);
        v13 = v9 + 2;
        v19 = v21;
        v4 = v20;
        v10 = v9 + 1;
        v23 = &v22[4 * v16];
        *v23 = v6;
        v7 = (uint64_t)(v23 + 1);
        if (v11 == v14)
        {
LABEL_18:
          v5 = v159;
          *v9 = v23;
          *v10 = v7;
          *v13 = &v22[4 * v19];
          if (!v11)
            goto LABEL_4;
LABEL_26:
          operator delete(v11);
          goto LABEL_4;
        }
      }
      else
      {
        v22 = 0;
        v23 = (_DWORD *)(4 * v16);
        *(_DWORD *)(4 * v16) = v6;
        v7 = 4 * v16 + 4;
        if (v11 == v14)
          goto LABEL_18;
      }
      v24 = v11 - 4 - v14;
      if (v24 < 0x2C)
        break;
      v25 = v11 - &v22[v15];
      v5 = v159;
      if (v25 < 0x20)
        goto LABEL_24;
      v26 = (v24 >> 2) + 1;
      v27 = 4 * (v26 & 0x7FFFFFFFFFFFFFF8);
      v28 = &v11[-v27];
      v23 = (_DWORD *)((char *)v23 - v27);
      v29 = &v22[4 * v16 - 16];
      v30 = (__int128 *)(v11 - 16);
      v31 = v26 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v32 = *v30;
        *(v29 - 1) = *(v30 - 1);
        *v29 = v32;
        v29 -= 2;
        v30 -= 2;
        v31 -= 8;
      }
      while (v31);
      v11 = v28;
      if (v26 != (v26 & 0x7FFFFFFFFFFFFFF8))
        goto LABEL_24;
LABEL_25:
      v11 = (char *)*v9;
      *v9 = v23;
      *v10 = v7;
      *v13 = &v22[4 * v19];
      if (v11)
        goto LABEL_26;
LABEL_4:
      *v10 = v7;
      if (++v6 == v5)
        goto LABEL_27;
    }
    v5 = v159;
    do
    {
LABEL_24:
      v33 = *((_DWORD *)v11 - 1);
      v11 -= 4;
      *--v23 = v33;
    }
    while (v11 != v14);
    goto LABEL_25;
  }
LABEL_27:
  if ((v157 & 0x3FFFFFFFCLL) != 0)
  {
    v34 = 0;
    while (1)
    {
      if (*((_QWORD *)v167 + 3 * v34 + 1) == *((_QWORD *)v167 + 3 * v34))
      {
        v58 = (char *)a2[1];
        v57 = a2[2];
        if ((unint64_t)v58 >= v57)
        {
          v59 = (char *)*a2;
          v60 = (uint64_t)&v58[-*a2];
          v61 = v60 >> 2;
          v62 = (v60 >> 2) + 1;
          if (v62 >> 62)
            sub_2394189F8();
          v63 = v57 - (_QWORD)v59;
          if (v63 >> 1 > v62)
            v62 = v63 >> 1;
          if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL)
            v64 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v64 = v62;
          if (v64)
          {
            if (v64 >> 62)
              sub_239418A80();
            v65 = operator new(4 * v64);
            v66 = &v65[4 * v61];
            *v66 = v34;
            v35 = (uint64_t)(v66 + 1);
            if (v58 == v59)
            {
LABEL_164:
              *a2 = v66;
              a2[1] = v35;
              a2[2] = &v65[4 * v64];
              if (!v58)
                goto LABEL_30;
              goto LABEL_165;
            }
          }
          else
          {
            v65 = 0;
            v66 = (_DWORD *)(4 * v61);
            *(_DWORD *)(4 * v61) = v34;
            v35 = 4 * v61 + 4;
            if (v58 == v59)
              goto LABEL_164;
          }
          v98 = v58 - 4 - v59;
          if (v98 < 0x2C)
            goto LABEL_211;
          if ((unint64_t)(v58 - &v65[v60]) < 0x20)
            goto LABEL_211;
          v99 = (v98 >> 2) + 1;
          v100 = 4 * (v99 & 0x7FFFFFFFFFFFFFF8);
          v101 = &v58[-v100];
          v66 = (_DWORD *)((char *)v66 - v100);
          v102 = &v65[4 * v61 - 16];
          v103 = v58 - 16;
          v104 = v99 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v105 = *(_OWORD *)v103;
            *(v102 - 1) = *((_OWORD *)v103 - 1);
            *v102 = v105;
            v102 -= 2;
            v103 -= 32;
            v104 -= 8;
          }
          while (v104);
          v58 = v101;
          if (v99 != (v99 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_211:
            do
            {
              v106 = *((_DWORD *)v58 - 1);
              v58 -= 4;
              *--v66 = v106;
            }
            while (v58 != v59);
          }
          goto LABEL_133;
        }
LABEL_29:
        *(_DWORD *)v58 = v34;
        v35 = (uint64_t)(v58 + 4);
        goto LABEL_30;
      }
      v37 = *a4;
      v36 = a4[1];
      if (*a4 == v36)
        goto LABEL_50;
      v38 = 0;
      do
      {
        if (v34 == *(_DWORD *)(sub_239962518((uint64_t)v4, v37) + 12))
          goto LABEL_31;
        v39 = (unsigned int *)sub_239962518((uint64_t)v4, v37);
        v40 = v34 == *(unsigned int *)(sub_239962518((uint64_t)v4, v39) + 12);
        v38 |= v40;
        ++v37;
        v40 = v40 || v37 == v36;
      }
      while (!v40);
      if ((v38 & 1) == 0)
      {
LABEL_50:
        v42 = *a3;
        v41 = a3[1];
        if (*a3 == v41)
          break;
        v43 = 0;
        do
        {
          if (v34 == *(_DWORD *)(sub_239962518((uint64_t)v4, v42) + 12))
            goto LABEL_31;
          v44 = (unsigned int *)sub_239962518((uint64_t)v4, v42);
          v40 = v34 == *(unsigned int *)(sub_239962518((uint64_t)v4, v44) + 12);
          v43 |= v40;
          ++v42;
        }
        while (!v40 && v42 != v41);
        if ((v43 & 1) == 0)
          break;
      }
LABEL_31:
      if (++v34 == (v157 >> 2))
        goto LABEL_188;
    }
    v46 = (char *)v167 + 24 * v34;
    v47 = *(unsigned int **)v46;
    v48 = (unsigned int *)*((_QWORD *)v46 + 1);
    if (*(unsigned int **)v46 != v48)
    {
      v49 = 0;
      do
      {
        v50 = *v47;
        v51 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
        v52 = *v51;
        v53 = (std::__shared_weak_count *)v51[1];
        if (v53)
        {
          p_shared_owners = (unint64_t *)&v53->__shared_owners_;
          do
            v55 = __ldxr(p_shared_owners);
          while (__stxr(v55 + 1, p_shared_owners));
          do
            v56 = __ldaxr(p_shared_owners);
          while (__stlxr(v56 - 1, p_shared_owners));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
            std::__shared_weak_count::__release_weak(v53);
          }
        }
        v49 += (*(_QWORD *)(*(_QWORD *)(v52 + 40) + ((v50 >> 3) & 0x1FFFFFF8)) >> v50) & 1;
        ++v47;
      }
      while (v47 != v48);
      if (v49 > 1)
      {
        v58 = (char *)a2[1];
        v67 = a2[2];
        if ((unint64_t)v58 >= v67)
        {
          v68 = (char *)*a2;
          v69 = (uint64_t)&v58[-*a2];
          v70 = v69 >> 2;
          v71 = (v69 >> 2) + 1;
          if (v71 >> 62)
            sub_2394189F8();
          v72 = v67 - (_QWORD)v68;
          if (v72 >> 1 > v71)
            v71 = v72 >> 1;
          if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFFCLL)
            v64 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v64 = v71;
          if (v64)
          {
            if (v64 >> 62)
              sub_239418A80();
            v65 = operator new(4 * v64);
            v66 = &v65[4 * v70];
            *v66 = v34;
            v35 = (uint64_t)(v66 + 1);
            if (v58 == v68)
              goto LABEL_164;
          }
          else
          {
            v65 = 0;
            v66 = (_DWORD *)(4 * v70);
            *(_DWORD *)(4 * v70) = v34;
            v35 = 4 * v70 + 4;
            if (v58 == v68)
              goto LABEL_164;
          }
          v128 = v58 - 4 - v68;
          if (v128 < 0x2C)
            goto LABEL_212;
          if ((unint64_t)(v58 - &v65[v69]) < 0x20)
            goto LABEL_212;
          v129 = (v128 >> 2) + 1;
          v130 = 4 * (v129 & 0x7FFFFFFFFFFFFFF8);
          v131 = &v58[-v130];
          v66 = (_DWORD *)((char *)v66 - v130);
          v132 = &v65[4 * v70 - 16];
          v133 = v58 - 16;
          v134 = v129 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v135 = *(_OWORD *)v133;
            *(v132 - 1) = *((_OWORD *)v133 - 1);
            *v132 = v135;
            v132 -= 2;
            v133 -= 32;
            v134 -= 8;
          }
          while (v134);
          v58 = v131;
          if (v129 != (v129 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_212:
            do
            {
              v136 = *((_DWORD *)v58 - 1);
              v58 -= 4;
              *--v66 = v136;
            }
            while (v58 != v68);
          }
LABEL_133:
          v58 = (char *)*a2;
          *a2 = v66;
          a2[1] = v35;
          a2[2] = &v65[4 * v64];
          if (!v58)
          {
LABEL_30:
            a2[1] = v35;
            goto LABEL_31;
          }
LABEL_165:
          operator delete(v58);
          goto LABEL_30;
        }
        goto LABEL_29;
      }
    }
    LODWORD(__p) = v34;
    sub_239962B1C((uint64_t)v166, v4, (unsigned int *)&__p);
    v73 = 0;
    __p = 0;
    v164 = 0;
    v165 = 0;
    while (1)
    {
      v75 = sub_239962B44(v166);
      v76 = v75;
      if (v75 == -1)
      {
        v95 = (char *)*((_QWORD *)v167 + 3 * v34);
        v94 = (char *)*((_QWORD *)v167 + 3 * v34 + 1);
        if (v94 - v95 == v73 - (_BYTE *)__p)
        {
          if (v95 != v94)
          {
            while (1)
            {
              v96 = v73 - (_BYTE *)__p;
              if (__p != v73)
              {
                v96 = 0;
                while (*(_DWORD *)((char *)__p + v96) != *(_DWORD *)v95)
                {
                  v96 += 4;
                  if ((char *)__p + v96 == v73)
                  {
                    v96 = v73 - (_BYTE *)__p;
                    break;
                  }
                }
              }
              if ((char *)__p + v96 == v73)
                break;
              v95 += 4;
              if (v95 == v94)
                goto LABEL_124;
            }
            v108 = (char *)a2[1];
            v118 = a2[2];
            if ((unint64_t)v108 < v118)
            {
LABEL_147:
              *(_DWORD *)v108 = v34;
              v117 = (uint64_t)(v108 + 4);
              goto LABEL_183;
            }
            v137 = (char *)*a2;
            v138 = (uint64_t)&v108[-*a2];
            v139 = v138 >> 2;
            v140 = (v138 >> 2) + 1;
            if (v140 >> 62)
              sub_2394189F8();
            v141 = v118 - (_QWORD)v137;
            if (v141 >> 1 > v140)
              v140 = v141 >> 1;
            if ((unint64_t)v141 >= 0x7FFFFFFFFFFFFFFCLL)
              v114 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v114 = v140;
            if (v114)
            {
              if (v114 >> 62)
                sub_239418A80();
              v115 = operator new(4 * v114);
              v116 = &v115[4 * v139];
              *v116 = v34;
              v117 = (uint64_t)(v116 + 1);
              if (v108 != v137)
              {
LABEL_175:
                v142 = v108 - 4 - v137;
                if (v142 < 0x2C)
                  goto LABEL_213;
                if ((unint64_t)(v108 - &v115[v138]) < 0x20)
                  goto LABEL_213;
                v143 = (v142 >> 2) + 1;
                v144 = 4 * (v143 & 0x7FFFFFFFFFFFFFF8);
                v145 = &v108[-v144];
                v116 = (_DWORD *)((char *)v116 - v144);
                v146 = &v115[4 * v139 - 16];
                v147 = v108 - 16;
                v148 = v143 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v149 = *(_OWORD *)v147;
                  *(v146 - 1) = *((_OWORD *)v147 - 1);
                  *v146 = v149;
                  v146 -= 2;
                  v147 -= 32;
                  v148 -= 8;
                }
                while (v148);
                v108 = v145;
                if (v143 != (v143 & 0x7FFFFFFFFFFFFFF8))
                {
LABEL_213:
                  do
                  {
                    v150 = *((_DWORD *)v108 - 1);
                    v108 -= 4;
                    *--v116 = v150;
                  }
                  while (v108 != v137);
                }
                goto LABEL_181;
              }
            }
            else
            {
              v115 = 0;
              v116 = (_DWORD *)(4 * v139);
              *(_DWORD *)(4 * v139) = v34;
              v117 = 4 * v139 + 4;
              if (v108 != v137)
                goto LABEL_175;
            }
LABEL_186:
            *a2 = v116;
            a2[1] = v117;
            a2[2] = &v115[4 * v114];
            if (!v108)
              goto LABEL_183;
LABEL_182:
            operator delete(v108);
            goto LABEL_183;
          }
LABEL_124:
          v97 = __p;
          if (!__p)
            goto LABEL_31;
        }
        else
        {
          v108 = (char *)a2[1];
          v107 = a2[2];
          if ((unint64_t)v108 < v107)
            goto LABEL_147;
          v109 = (char *)*a2;
          v110 = (uint64_t)&v108[-*a2];
          v111 = v110 >> 2;
          v112 = (v110 >> 2) + 1;
          if (v112 >> 62)
            sub_2394189F8();
          v113 = v107 - (_QWORD)v109;
          if (v113 >> 1 > v112)
            v112 = v113 >> 1;
          if ((unint64_t)v113 >= 0x7FFFFFFFFFFFFFFCLL)
            v114 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v114 = v112;
          if (v114)
          {
            if (v114 >> 62)
              sub_239418A80();
            v115 = operator new(4 * v114);
            v116 = &v115[4 * v111];
            *v116 = v34;
            v117 = (uint64_t)(v116 + 1);
            if (v108 == v109)
              goto LABEL_186;
          }
          else
          {
            v115 = 0;
            v116 = (_DWORD *)(4 * v111);
            *(_DWORD *)(4 * v111) = v34;
            v117 = 4 * v111 + 4;
            if (v108 == v109)
              goto LABEL_186;
          }
          v119 = v108 - 4 - v109;
          if (v119 < 0x2C)
            goto LABEL_214;
          if ((unint64_t)(v108 - &v115[v110]) < 0x20)
            goto LABEL_214;
          v120 = (v119 >> 2) + 1;
          v121 = 4 * (v120 & 0x7FFFFFFFFFFFFFF8);
          v122 = &v108[-v121];
          v116 = (_DWORD *)((char *)v116 - v121);
          v123 = &v115[4 * v111 - 16];
          v124 = v108 - 16;
          v125 = v120 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v126 = *(_OWORD *)v124;
            *(v123 - 1) = *((_OWORD *)v124 - 1);
            *v123 = v126;
            v123 -= 2;
            v124 -= 32;
            v125 -= 8;
          }
          while (v125);
          v108 = v122;
          if (v120 != (v120 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_214:
            do
            {
              v127 = *((_DWORD *)v108 - 1);
              v108 -= 4;
              *--v116 = v127;
            }
            while (v108 != v109);
          }
LABEL_181:
          v108 = (char *)*a2;
          *a2 = v116;
          a2[1] = v117;
          a2[2] = &v115[4 * v114];
          if (v108)
            goto LABEL_182;
LABEL_183:
          a2[1] = v117;
          v97 = __p;
          if (!__p)
            goto LABEL_31;
        }
        operator delete(v97);
        goto LABEL_31;
      }
      if (v73 < v165)
      {
        *(_DWORD *)v73 = v75;
        v74 = (uint64_t)(v73 + 4);
        goto LABEL_85;
      }
      v77 = (char *)__p;
      v78 = v73 - (_BYTE *)__p;
      v79 = (v73 - (_BYTE *)__p) >> 2;
      v80 = v79 + 1;
      if ((unint64_t)(v79 + 1) >> 62)
        sub_2394189F8();
      v81 = v165 - (_BYTE *)__p;
      if ((v165 - (_BYTE *)__p) >> 1 > v80)
        v80 = v81 >> 1;
      if ((unint64_t)v81 >= 0x7FFFFFFFFFFFFFFCLL)
        v82 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v82 = v80;
      if (v82)
      {
        if (v82 >> 62)
          sub_239418A80();
        v83 = operator new(4 * v82);
        v84 = &v83[4 * v79];
        *v84 = v76;
        v74 = (uint64_t)(v84 + 1);
        if (v73 == v77)
        {
LABEL_103:
          __p = v84;
          v164 = v74;
          v165 = &v83[4 * v82];
          if (!v73)
            goto LABEL_85;
LABEL_104:
          operator delete(v73);
          goto LABEL_85;
        }
      }
      else
      {
        v83 = 0;
        v84 = (_DWORD *)(4 * v79);
        *(_DWORD *)(4 * v79) = v76;
        v74 = 4 * v79 + 4;
        if (v73 == v77)
          goto LABEL_103;
      }
      v85 = v73 - 4 - v77;
      if (v85 < 0xBC)
      {
        v86 = v73;
        goto LABEL_99;
      }
      if (&v83[v78 - 4 - (v85 & 0xFFFFFFFFFFFFFFFCLL)] > &v83[v78 - 4])
        break;
      if (&v73[-(v85 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v73 - 4)
      {
        v86 = v73;
        goto LABEL_99;
      }
      if ((unint64_t)(v73 - v83 - v78) < 0x20)
      {
        v86 = v73;
        goto LABEL_99;
      }
      v88 = (v85 >> 2) + 1;
      v89 = 4 * (v88 & 0x7FFFFFFFFFFFFFF8);
      v86 = &v73[-v89];
      v84 = (_DWORD *)((char *)v84 - v89);
      v90 = &v83[4 * v79 - 16];
      v91 = v73 - 16;
      v92 = v88 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v93 = *(_OWORD *)v91;
        *(v90 - 1) = *((_OWORD *)v91 - 1);
        *v90 = v93;
        v90 -= 2;
        v91 -= 32;
        v92 -= 8;
      }
      while (v92);
      if (v88 != (v88 & 0x7FFFFFFFFFFFFFF8))
        goto LABEL_99;
LABEL_100:
      v73 = (char *)__p;
      __p = v84;
      v164 = v74;
      v165 = &v83[4 * v82];
      if (v73)
        goto LABEL_104;
LABEL_85:
      v164 = v74;
      v73 = (char *)v74;
    }
    v86 = v73;
    do
    {
LABEL_99:
      v87 = *((_DWORD *)v86 - 1);
      v86 -= 4;
      *--v84 = v87;
    }
    while (v86 != v77);
    goto LABEL_100;
  }
LABEL_188:
  v151 = (char *)v167;
  if (v167)
  {
    v152 = v168;
    v153 = v167;
    if (v168 != v167)
    {
      v154 = v168;
      do
      {
        v156 = (void *)*((_QWORD *)v154 - 3);
        v154 -= 24;
        v155 = v156;
        if (v156)
        {
          *((_QWORD *)v152 - 2) = v155;
          operator delete(v155);
        }
        v152 = v154;
      }
      while (v154 != v151);
      v153 = v167;
    }
    v168 = v151;
    operator delete(v153);
  }
}

void sub_239930B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  if (__p)
  {
    operator delete(__p);
    sub_23942A16C(&a22);
    _Unwind_Resume(a1);
  }
  sub_23942A16C(&a22);
  _Unwind_Resume(a1);
}

_QWORD *sub_239930C88(_QWORD *a1, unint64_t a2)
{
  char *v4;
  size_t v5;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      sub_2394189F8();
    v4 = (char *)operator new(24 * a2);
    *a1 = v4;
    a1[2] = &v4[24 * a2];
    v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_239930D30(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_QWORD *)v1)
    sub_239EC3170((void **)(v1 + 8), *(char **)v1, (void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_239930D50(_QWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD v14[2];

  v14[0] = 0;
  v14[1] = 0;
  *a2 = sub_239932184((uint64_t)(a1 + 1), (uint64_t)v14, a3);
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 16))(a1);
  v5 = (uint64_t *)a1[1];
  v6 = (uint64_t *)a1[2];
  if (v5 != v6)
  {
    v7 = v4;
    do
    {
      v8 = *v5;
      v9 = (std::__shared_weak_count *)v5[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(p_shared_owners);
        while (__stxr(v11 + 1, p_shared_owners));
      }
      if (v8)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v7);
      if (v9)
      {
        v12 = (unint64_t *)&v9->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
}

void sub_239930E2C(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;

  if (v1)
    sub_239EC2FF0(v1);
  _Unwind_Resume(exception_object);
}

void sub_239930E44(_QWORD *a1, int *__src, unint64_t a3)
{
  int *v4;
  unint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int16 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE *v21;
  void **v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = __src;
  v6 = a1[5];
  if (v6 < a3)
  {
    v7 = &__src[v6];
    v8 = a1[4] >> 10;
    v9 = a1[1];
    if (a1[2] == v9)
    {
      v10 = 0;
      if (!v6)
      {
LABEL_20:
        sub_2399310B0(a1, v7, a3 - v6);
        return;
      }
    }
    else
    {
      v10 = (_BYTE *)(*(_QWORD *)(v9 + 8 * v8) + 4 * (a1[4] & 0x3FFLL));
      if (!v6)
        goto LABEL_20;
    }
    v20 = (_QWORD *)(v9 + 8 * v8);
    v23 = (_BYTE *)*v20;
    v22 = (void **)(v20 + 1);
    v21 = v23;
    while (1)
    {
      v24 = (v21 - v10 + 4096) >> 2;
      v25 = v7 - v4 >= v24 ? v24 : v7 - v4;
      if (v25)
        memmove(v10, v4, 4 * v25);
      v4 += v25;
      if (v4 == v7)
        break;
      v26 = *v22++;
      v21 = v26;
      v10 = v26;
    }
    v6 = a1[5];
    goto LABEL_20;
  }
  v11 = a1[4];
  v13 = a1[1];
  v12 = a1[2];
  v14 = (char *)(v13 + 8 * (v11 >> 10));
  if (v12 == v13)
  {
    v15 = 0;
    if (!a3)
    {
LABEL_7:
      v16 = v11 + v6;
      v17 = (char *)(v13 + 8 * ((v11 + v6) >> 10));
      v18 = v12 - v13;
      if (v12 != v13)
        goto LABEL_8;
      goto LABEL_34;
    }
  }
  else
  {
    v15 = (char *)(*(_QWORD *)v14 + 4 * (a1[4] & 0x3FFLL));
    if (!a3)
      goto LABEL_7;
  }
  v27 = (char *)&__src[a3];
  v28 = (_QWORD *)(v13 + 8 * (v11 >> 10));
  v30 = (char *)*v28;
  v14 = (char *)(v28 + 1);
  v29 = v30;
  while (1)
  {
    v31 = (v29 - v15 + 4096) >> 2;
    if ((v27 - (char *)v4) >> 2 >= v31)
      v32 = v31;
    else
      v32 = (v27 - (char *)v4) >> 2;
    if (v32)
      memmove(v15, v4, 4 * v32);
    v4 += v32;
    if (v4 == (int *)v27)
      break;
    v33 = *(char **)v14;
    v14 += 8;
    v29 = v33;
    v15 = v33;
  }
  v15 += 4 * v32;
  if ((char *)(*((_QWORD *)v14 - 1) + 4096) == v15)
    v15 = *(char **)v14;
  else
    v14 -= 8;
  v11 = a1[4];
  v6 = a1[5];
  v13 = a1[1];
  v12 = a1[2];
  v16 = v11 + v6;
  v17 = (char *)(v13 + 8 * ((v11 + v6) >> 10));
  v18 = v12 - v13;
  if (v12 != v13)
  {
LABEL_8:
    v19 = *(_QWORD *)v17 + 4 * (v16 & 0x3FF);
    if ((char *)v19 == v15)
      return;
    goto LABEL_35;
  }
LABEL_34:
  v19 = 0;
  if (!v15)
    return;
LABEL_35:
  v34 = ((v19 - *(_QWORD *)v17) >> 2) + ((v17 - v14) << 7) - ((uint64_t)&v15[-*(_QWORD *)v14] >> 2);
  if (v34 >= 1)
  {
    v35 = (v18 << 7) - 1;
    v36 = v12 == v13 ? 0 : v35;
    v37 = v6 - v34;
    a1[5] = v37;
    if (v36 - v11 - v37 >= 0x800)
    {
      do
      {
        operator delete(*(void **)(v12 - 8));
        v38 = a1[1];
        v12 = a1[2] - 8;
        v39 = ((v12 - v38) << 7) - 1;
        a1[2] = v12;
        if (v12 == v38)
          v39 = 0;
      }
      while ((unint64_t)(v39 - (a1[5] + a1[4])) > 0x7FF);
    }
  }
}

void sub_2399310B0(_QWORD *a1, int *a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  _DWORD *v23;
  _OWORD *v24;
  __int128 *v25;
  uint64_t v26;
  __int128 v27;
  int v28;
  uint64_t v29;

  v6 = a1[1];
  v7 = a1[2];
  v8 = ((v7 - v6) << 7) - 1;
  if (v7 == v6)
    v8 = 0;
  v9 = a1[5];
  v10 = v9 + a1[4];
  v11 = v8 - v10;
  if (a3 > v11)
  {
    sub_239931270((uint64_t)a1, a3 - v11);
    v9 = a1[5];
    v6 = a1[1];
    v7 = a1[2];
    v10 = a1[4] + v9;
  }
  v12 = (_QWORD *)(v6 + 8 * (v10 >> 10));
  if (v7 == v6)
  {
    v13 = 0;
    if (a3)
      goto LABEL_7;
LABEL_10:
    v16 = v13;
    v15 = v12;
    goto LABEL_28;
  }
  v13 = *v12 + 4 * (v10 & 0x3FF);
  if (!a3)
    goto LABEL_10;
LABEL_7:
  v14 = a3 + ((v13 - *v12) >> 2);
  if (v14 < 1)
  {
    v17 = 1023 - v14;
    LOWORD(v14) = ~(1023 - v14);
    v15 = &v12[-(v17 >> 10)];
  }
  else
  {
    v15 = &v12[(unint64_t)v14 >> 10];
  }
  v16 = *v15 + 4 * (v14 & 0x3FF);
LABEL_28:
  while (v13 != v16)
  {
    v18 = v16;
    if (v12 != v15)
      v18 = *v12 + 4096;
    if (v13 == v18)
    {
      a1[5] = v9;
      if (v12 == v15)
        return;
      goto LABEL_27;
    }
    v19 = v18 - v13 - 4;
    if (v19 < 0x1C || (unint64_t)(v13 - (_QWORD)a2) < 0x20)
    {
      v22 = a2;
      v23 = (_DWORD *)v13;
      do
      {
LABEL_25:
        v28 = *v22++;
        *v23++ = v28;
      }
      while (v23 != (_DWORD *)v18);
      goto LABEL_26;
    }
    v20 = (v19 >> 2) + 1;
    v21 = v20 & 0x7FFFFFFFFFFFFFF8;
    v22 = &a2[v21];
    v23 = (_DWORD *)(v13 + v21 * 4);
    v24 = (_OWORD *)(v13 + 16);
    v25 = (__int128 *)(a2 + 4);
    v26 = v20 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v27 = *v25;
      *(v24 - 1) = *(v25 - 1);
      *v24 = v27;
      v24 += 2;
      v25 += 2;
      v26 -= 8;
    }
    while (v26);
    if (v20 != (v20 & 0x7FFFFFFFFFFFFFF8))
      goto LABEL_25;
LABEL_26:
    a2 = v22;
    v9 = a1[5] + ((v18 - v13) >> 2);
    a1[5] = v9;
    if (v12 == v15)
      return;
LABEL_27:
    v29 = v12[1];
    ++v12;
    v13 = v29;
  }
}

void sub_239931270(uint64_t a1, unint64_t a2)
{
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  BOOL v29;
  int64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  char *v55;
  int64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  _QWORD *v68;
  char *v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  char *v79;
  char *v80;
  unint64_t v81;
  int64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 *v90;
  char *v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  char *v101;
  unint64_t v102;
  int64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 *v110;
  char *v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t i;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  int64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  int64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  __int128 *v139;
  char *v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;

  v3 = *(char **)(a1 + 16);
  v4 = (uint64_t)&v3[-*(_QWORD *)(a1 + 8)];
  if (v4)
    v5 = a2;
  else
    v5 = a2 + 1;
  if ((v5 & 0x3FF) != 0)
    v6 = (v5 >> 10) + 1;
  else
    v6 = v5 >> 10;
  v7 = *(_QWORD *)(a1 + 32);
  if (v6 >= v7 >> 10)
    v8 = v7 >> 10;
  else
    v8 = v6;
  if (v6 <= v7 >> 10)
  {
    *(_QWORD *)(a1 + 32) = v7 - (v8 << 10);
    if (!v8)
      return;
    while (1)
    {
      v15 = *(_QWORD **)(a1 + 8);
      v16 = (char *)(v15 + 1);
      v17 = *v15;
      *(_QWORD *)(a1 + 8) = v15 + 1;
      if (v3 == *(char **)(a1 + 24))
      {
        v18 = *(char **)a1;
        if ((unint64_t)v16 <= *(_QWORD *)a1)
        {
          v24 = (v3 - v18) >> 2;
          if (v3 == v18)
            v24 = 1;
          if (v24 >> 61)
            goto LABEL_159;
          v25 = v24 >> 2;
          v26 = 8 * v24;
          v27 = (char *)operator new(8 * v24);
          v28 = &v27[8 * v25];
          v30 = v3 - v16;
          v29 = v3 == v16;
          v3 = v28;
          if (!v29)
          {
            v3 = &v28[v30 & 0xFFFFFFFFFFFFFFF8];
            v31 = v30 - 8;
            if ((unint64_t)(v30 - 8) < 0x38)
            {
              v32 = &v27[8 * v25];
              goto LABEL_39;
            }
            v32 = &v27[8 * v25];
            if ((unint64_t)(v32 - v16) < 0x20)
              goto LABEL_165;
            v33 = (v31 >> 3) + 1;
            v34 = 8 * (v33 & 0x3FFFFFFFFFFFFFFCLL);
            v32 = &v28[v34];
            v16 += v34;
            v35 = (__int128 *)(v15 + 3);
            v36 = &v27[8 * v25 + 16];
            v37 = v33 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v38 = *v35;
              *((_OWORD *)v36 - 1) = *(v35 - 1);
              *(_OWORD *)v36 = v38;
              v35 += 2;
              v36 += 32;
              v37 -= 4;
            }
            while (v37);
            if (v33 != (v33 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_165:
              do
              {
LABEL_39:
                v39 = *(_QWORD *)v16;
                v16 += 8;
                *(_QWORD *)v32 = v39;
                v32 += 8;
              }
              while (v32 != v3);
            }
          }
          *(_QWORD *)a1 = v27;
          *(_QWORD *)(a1 + 8) = v28;
          *(_QWORD *)(a1 + 16) = v3;
          *(_QWORD *)(a1 + 24) = &v27[v26];
          if (v18)
          {
            operator delete(v18);
            v3 = *(char **)(a1 + 16);
          }
          goto LABEL_21;
        }
        v19 = (uint64_t)&v16[-*(_QWORD *)a1] >> 3;
        if (v19 >= -1)
          v20 = v19 + 1;
        else
          v20 = v19 + 2;
        v21 = v20 >> 1;
        v22 = &v16[-8 * (v20 >> 1)];
        v23 = v3 - v16;
        if (v3 != v16)
        {
          memmove(&v16[-8 * (v20 >> 1)], v16, v3 - v16);
          v3 = *(char **)(a1 + 8);
        }
        v14 = &v3[-8 * v21];
        v3 = &v22[v23];
        *(_QWORD *)(a1 + 8) = v14;
        *(_QWORD *)(a1 + 16) = &v22[v23];
      }
LABEL_21:
      *(_QWORD *)v3 = v17;
      v3 = (char *)(*(_QWORD *)(a1 + 16) + 8);
      *(_QWORD *)(a1 + 16) = v3;
      if (!--v8)
        return;
    }
  }
  v9 = v6 - v8;
  v10 = *(_QWORD *)(a1 + 24) - *(_QWORD *)a1;
  v11 = v4 >> 3;
  if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
  {
    if (v9)
    {
      while (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a1 + 16))
      {
        v145 = operator new(0x1000uLL);
        sub_23946CE0C((char **)a1, &v145);
        --v6;
        if (!--v9)
          goto LABEL_134;
      }
      for (i = 0; i != v9; ++i)
      {
        v145 = operator new(0x1000uLL);
        sub_23946CF98((void **)a1, &v145);
        if (*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8) == 8)
          v116 = 1023;
        else
          v116 = 1024;
        v117 = v116 + *(_QWORD *)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v117;
      }
      v8 = v6;
      *(_QWORD *)(a1 + 32) = v117 - (v6 << 10);
      if (!v6)
        return;
    }
    else
    {
LABEL_134:
      *(_QWORD *)(a1 + 32) -= v8 << 10;
      if (!v8)
        return;
    }
    v118 = *(char **)(a1 + 16);
    while (1)
    {
      v120 = *(_QWORD **)(a1 + 8);
      v121 = (char *)(v120 + 1);
      v122 = *v120;
      *(_QWORD *)(a1 + 8) = v120 + 1;
      if (v118 == *(char **)(a1 + 24))
      {
        v123 = *(char **)a1;
        if ((unint64_t)v121 <= *(_QWORD *)a1)
        {
          v129 = (v118 - v123) >> 2;
          if (v118 == v123)
            v129 = 1;
          if (v129 >> 61)
            goto LABEL_159;
          v130 = v129 >> 2;
          v131 = 8 * v129;
          v132 = (char *)operator new(8 * v129);
          v133 = &v132[8 * v130];
          v134 = v118 - v121;
          v29 = v118 == v121;
          v118 = v133;
          if (!v29)
          {
            v118 = &v133[v134 & 0xFFFFFFFFFFFFFFF8];
            v135 = v134 - 8;
            if ((unint64_t)(v134 - 8) < 0x38)
            {
              v136 = &v132[8 * v130];
              goto LABEL_155;
            }
            v136 = &v132[8 * v130];
            if ((unint64_t)(v136 - v121) < 0x20)
              goto LABEL_166;
            v137 = (v135 >> 3) + 1;
            v138 = 8 * (v137 & 0x3FFFFFFFFFFFFFFCLL);
            v136 = &v133[v138];
            v121 += v138;
            v139 = (__int128 *)(v120 + 3);
            v140 = &v132[8 * v130 + 16];
            v141 = v137 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v142 = *v139;
              *((_OWORD *)v140 - 1) = *(v139 - 1);
              *(_OWORD *)v140 = v142;
              v139 += 2;
              v140 += 32;
              v141 -= 4;
            }
            while (v141);
            if (v137 != (v137 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_166:
              do
              {
LABEL_155:
                v143 = *(_QWORD *)v121;
                v121 += 8;
                *(_QWORD *)v136 = v143;
                v136 += 8;
              }
              while (v136 != v118);
            }
          }
          *(_QWORD *)a1 = v132;
          *(_QWORD *)(a1 + 8) = v133;
          *(_QWORD *)(a1 + 16) = v118;
          *(_QWORD *)(a1 + 24) = &v132[v131];
          if (v123)
          {
            operator delete(v123);
            v118 = *(char **)(a1 + 16);
          }
          goto LABEL_137;
        }
        v124 = (uint64_t)&v121[-*(_QWORD *)a1] >> 3;
        if (v124 >= -1)
          v125 = v124 + 1;
        else
          v125 = v124 + 2;
        v126 = v125 >> 1;
        v127 = &v121[-8 * (v125 >> 1)];
        v128 = v118 - v121;
        if (v118 != v121)
        {
          memmove(&v121[-8 * (v125 >> 1)], v121, v118 - v121);
          v118 = *(char **)(a1 + 8);
        }
        v119 = &v118[-8 * v126];
        v118 = &v127[v128];
        *(_QWORD *)(a1 + 8) = v119;
        *(_QWORD *)(a1 + 16) = &v127[v128];
      }
LABEL_137:
      *(_QWORD *)v118 = v122;
      v118 = (char *)(*(_QWORD *)(a1 + 16) + 8);
      *(_QWORD *)(a1 + 16) = v118;
      if (!--v8)
        return;
    }
  }
  if (v10 >> 2 <= v9 + v11)
    v12 = v9 + v11;
  else
    v12 = v10 >> 2;
  if (v12)
  {
    if (v12 >> 61)
LABEL_159:
      sub_239418A80();
    v13 = (char *)operator new(8 * v12);
  }
  else
  {
    v13 = 0;
  }
  v144 = v8 << 10;
  v40 = &v13[8 * (v11 - v8)];
  v41 = &v13[8 * v12];
  v42 = v40;
  v43 = v13;
  do
  {
    v44 = operator new(0x1000uLL);
    if (v42 != v41)
      goto LABEL_49;
    if (v40 > v43)
    {
      v45 = v43;
      v46 = (v40 - v43) >> 3;
      if (v46 >= -1)
        v47 = v46 + 1;
      else
        v47 = v46 + 2;
      v48 = v47 >> 1;
      v49 = &v40[-8 * (v47 >> 1)];
      v50 = v41;
      if (v41 != v40)
      {
        memmove(v49, v40, v41 - v40);
        v50 = v40;
      }
      v42 = &v49[v41 - v40];
      v40 = &v50[-8 * v48];
      v43 = v45;
      goto LABEL_49;
    }
    if (v41 == v43)
      v51 = 1;
    else
      v51 = (v41 - v43) >> 2;
    if (v51 >> 61)
      sub_239418A80();
    v52 = (char *)operator new(8 * v51);
    v53 = v43;
    v54 = v51 >> 2;
    v55 = &v52[8 * (v51 >> 2)];
    v42 = v55;
    v56 = v41 - v40;
    if (v41 != v40)
    {
      v42 = &v55[v56 & 0xFFFFFFFFFFFFFFF8];
      v57 = v56 - 8;
      if (v57 >= 0x38 && (v58 = 8 * v54, (unint64_t)(&v52[8 * v54] - v40) >= 0x20))
      {
        v62 = (v57 >> 3) + 1;
        v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
        v59 = &v55[v63];
        v60 = &v40[v63];
        v64 = (__int128 *)(v40 + 16);
        v65 = &v52[v58 + 16];
        v66 = v62 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v67 = *v64;
          *((_OWORD *)v65 - 1) = *(v64 - 1);
          *(_OWORD *)v65 = v67;
          v64 += 2;
          v65 += 32;
          v66 -= 4;
        }
        while (v66);
        if (v62 == (v62 & 0x3FFFFFFFFFFFFFFCLL))
          goto LABEL_66;
      }
      else
      {
        v59 = &v52[8 * (v51 >> 2)];
        v60 = v40;
      }
      do
      {
        v61 = *(_QWORD *)v60;
        v60 += 8;
        *(_QWORD *)v59 = v61;
        v59 += 8;
      }
      while (v59 != v42);
    }
LABEL_66:
    v41 = &v52[8 * v51];
    if (v53)
      operator delete(v53);
    v40 = &v52[8 * (v51 >> 2)];
    v43 = v52;
LABEL_49:
    *(_QWORD *)v42 = v44;
    v42 += 8;
    --v9;
  }
  while (v9);
  v68 = *(_QWORD **)(a1 + 8);
  if (v8)
  {
    while (1)
    {
      if (v42 == v41)
      {
        if (v40 <= v43)
        {
          if (v41 == v43)
            v78 = 1;
          else
            v78 = (v41 - v43) >> 2;
          if (v78 >> 61)
            sub_239418A80();
          v79 = (char *)operator new(8 * v78);
          v80 = v79;
          v81 = v78 >> 2;
          v69 = &v79[8 * (v78 >> 2)];
          v42 = v69;
          v82 = v41 - v40;
          if (v41 != v40)
          {
            v42 = &v69[v82 & 0xFFFFFFFFFFFFFFF8];
            v83 = v82 - 8;
            if (v83 < 0x38 || (v84 = 8 * v81, (unint64_t)(&v79[8 * v81] - v40) < 0x20))
            {
              v85 = &v79[8 * (v78 >> 2)];
              v86 = v40;
              goto LABEL_96;
            }
            v88 = (v83 >> 3) + 1;
            v89 = 8 * (v88 & 0x3FFFFFFFFFFFFFFCLL);
            v85 = &v69[v89];
            v86 = &v40[v89];
            v90 = (__int128 *)(v40 + 16);
            v91 = &v79[v84 + 16];
            v92 = v88 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v93 = *v90;
              *((_OWORD *)v91 - 1) = *(v90 - 1);
              *(_OWORD *)v91 = v93;
              v90 += 2;
              v91 += 32;
              v92 -= 4;
            }
            while (v92);
            if (v88 != (v88 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_96:
                v87 = *(_QWORD *)v86;
                v86 += 8;
                *(_QWORD *)v85 = v87;
                v85 += 8;
              }
              while (v85 != v42);
            }
          }
          v41 = &v79[8 * v78];
          if (v43)
            operator delete(v43);
          v43 = v80;
          goto LABEL_79;
        }
        v72 = v43;
        v73 = (v40 - v43) >> 3;
        if (v73 >= -1)
          v74 = v73 + 1;
        else
          v74 = v73 + 2;
        v75 = v74 >> 1;
        v76 = &v40[-8 * (v74 >> 1)];
        v77 = v41;
        if (v41 != v40)
        {
          memmove(v76, v40, v41 - v40);
          v77 = v40;
        }
        v42 = &v76[v41 - v40];
        v69 = &v77[-8 * v75];
        v43 = v72;
      }
      else
      {
        v69 = v40;
      }
LABEL_79:
      *(_QWORD *)v42 = *v68;
      v42 += 8;
      v68 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v68;
      v40 = v69;
      if (!--v8)
        goto LABEL_75;
    }
  }
  v69 = v40;
LABEL_75:
  v70 = *(_QWORD **)(a1 + 16);
  if (v70 != v68)
  {
    do
    {
      if (v69 == v43)
      {
        if (v42 >= v41)
        {
          if (v41 == v43)
            v100 = 1;
          else
            v100 = (v41 - v43) >> 2;
          if (v100 >> 61)
            sub_239418A80();
          v101 = (char *)operator new(8 * v100);
          v97 = v101;
          v102 = (v100 + 3) >> 2;
          v69 = &v101[8 * v102];
          v103 = v42 - v43;
          v29 = v42 == v43;
          v42 = v69;
          if (!v29)
          {
            v42 = &v69[v103 & 0xFFFFFFFFFFFFFFF8];
            v104 = v103 - 8;
            v105 = &v101[8 * v102];
            v106 = v43;
            if (v104 < 0x38)
              goto LABEL_167;
            v107 = 8 * v102;
            v105 = &v101[8 * v102];
            v106 = v43;
            if ((unint64_t)(v105 - v43) < 0x20)
              goto LABEL_167;
            v108 = (v104 >> 3) + 1;
            v109 = 8 * (v108 & 0x3FFFFFFFFFFFFFFCLL);
            v105 = &v69[v109];
            v106 = &v43[v109];
            v110 = (__int128 *)(v43 + 16);
            v111 = &v101[v107 + 16];
            v112 = v108 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v113 = *v110;
              *((_OWORD *)v111 - 1) = *(v110 - 1);
              *(_OWORD *)v111 = v113;
              v110 += 2;
              v111 += 32;
              v112 -= 4;
            }
            while (v112);
            if (v108 != (v108 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_167:
              do
              {
                v114 = *(_QWORD *)v106;
                v106 += 8;
                *(_QWORD *)v105 = v114;
                v105 += 8;
              }
              while (v105 != v42);
            }
          }
          v41 = &v101[8 * v100];
          if (v43)
            operator delete(v43);
        }
        else
        {
          v95 = (v41 - v42) >> 3;
          if (v95 >= -1)
            v96 = v95 + 1;
          else
            v96 = v95 + 2;
          v97 = v43;
          v98 = v96 >> 1;
          v69 = &v97[8 * (v96 >> 1)];
          v99 = v97;
          if (v42 != v97)
          {
            memmove(v69, v97, v42 - v97);
            v99 = v42;
          }
          v42 = &v99[8 * v98];
        }
        v43 = v97;
      }
      v94 = *--v70;
      *((_QWORD *)v69 - 1) = v94;
      v69 -= 8;
    }
    while (v70 != *(_QWORD **)(a1 + 8));
  }
  v71 = *(char **)a1;
  *(_QWORD *)a1 = v43;
  *(_QWORD *)(a1 + 8) = v69;
  *(_QWORD *)(a1 + 16) = v42;
  *(_QWORD *)(a1 + 24) = v41;
  *(_QWORD *)(a1 + 32) -= v144;
  if (v71)
    operator delete(v71);
}

void sub_239931B5C(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_239931BA8()
{
  __cxa_end_catch();
  JUMPOUT(0x239931BB0);
}

void sub_239931BC8(uint64_t a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  char *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  void *v26;
  char *v27;
  char *v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  BOOL v37;
  int64_t v38;
  unint64_t v39;
  char *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  size_t v58;
  unint64_t v59;
  char *v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 *v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  _OWORD *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 *v85;
  _OWORD *v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  void *v90;
  void *v91;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = v2 >= 0x400;
  v4 = v2 - 1024;
  if (v3)
  {
    *(_QWORD *)(a1 + 32) = v4;
    v6 = *(_QWORD **)(a1 + 8);
    v5 = *(char **)(a1 + 16);
    v7 = (char *)(v6 + 1);
    v8 = *v6;
    *(_QWORD *)(a1 + 8) = v6 + 1;
    if (v5 != *(char **)(a1 + 24))
    {
LABEL_78:
      *(_QWORD *)v5 = v8;
      *(_QWORD *)(a1 + 16) += 8;
      return;
    }
    v9 = *(char **)a1;
    v10 = (uint64_t)&v7[-*(_QWORD *)a1];
    if ((unint64_t)v7 <= *(_QWORD *)a1)
    {
      v31 = (v5 - v9) >> 2;
      if (v5 == v9)
        v31 = 1;
      if (!(v31 >> 61))
      {
        v32 = v31 >> 2;
        v33 = 8 * v31;
        v34 = (char *)operator new(8 * v31);
        v35 = &v34[8 * v32];
        v36 = &v34[v33];
        v38 = v5 - v7;
        v37 = v5 == v7;
        v5 = v35;
        if (!v37)
        {
          v5 = &v35[v38 & 0xFFFFFFFFFFFFFFF8];
          v39 = v38 - 8;
          if ((unint64_t)(v38 - 8) >= 0x38)
          {
            v74 = &v34[8 * v32];
            v40 = v74;
            if ((unint64_t)(v74 - v7) >= 0x20)
            {
              v75 = (v39 >> 3) + 1;
              v76 = 8 * (v75 & 0x3FFFFFFFFFFFFFFCLL);
              v40 = &v35[v76];
              v7 += v76;
              v77 = (__int128 *)(v6 + 3);
              v78 = v74 + 16;
              v79 = v75 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v80 = *v77;
                *(v78 - 1) = *(v77 - 1);
                *v78 = v80;
                v77 += 2;
                v78 += 2;
                v79 -= 4;
              }
              while (v79);
              if (v75 == (v75 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_76;
            }
          }
          else
          {
            v40 = &v34[8 * v32];
          }
          do
          {
            v81 = *(_QWORD *)v7;
            v7 += 8;
            *(_QWORD *)v40 = v81;
            v40 += 8;
          }
          while (v40 != v5);
        }
        goto LABEL_76;
      }
LABEL_87:
      sub_239418A80();
    }
LABEL_5:
    v11 = v10 >> 3;
    if (v11 >= -1)
      v12 = v11 + 1;
    else
      v12 = v11 + 2;
    v13 = v12 >> 1;
    v14 = -v13;
    v15 = &v7[-8 * v13];
    v16 = v5 - v7;
    if (v5 != v7)
    {
      memmove(&v7[-8 * v13], v7, v5 - v7);
      v7 = *(char **)(a1 + 8);
    }
    v5 = &v15[v16];
    *(_QWORD *)(a1 + 8) = &v7[8 * v14];
    *(_QWORD *)(a1 + 16) = &v15[v16];
    goto LABEL_78;
  }
  v18 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 8);
  v20 = v18 - v19;
  v21 = (v18 - v19) >> 3;
  v22 = v17 - *(_QWORD *)a1;
  if (v21 < (unint64_t)(v22 >> 3))
  {
    if (v17 != v18)
    {
      v91 = operator new(0x1000uLL);
      sub_23946CE0C((char **)a1, &v91);
      return;
    }
    v91 = operator new(0x1000uLL);
    sub_23946CF98((void **)a1, &v91);
    v41 = *(_QWORD **)(a1 + 8);
    v5 = *(char **)(a1 + 16);
    v7 = (char *)(v41 + 1);
    v8 = *v41;
    *(_QWORD *)(a1 + 8) = v41 + 1;
    if (v5 != *(char **)(a1 + 24))
      goto LABEL_78;
    v9 = *(char **)a1;
    v10 = (uint64_t)&v7[-*(_QWORD *)a1];
    if ((unint64_t)v7 <= *(_QWORD *)a1)
    {
      v42 = (v5 - v9) >> 2;
      if (v5 == v9)
        v42 = 1;
      if (!(v42 >> 61))
      {
        v43 = v42 >> 2;
        v44 = 8 * v42;
        v34 = (char *)operator new(8 * v42);
        v35 = &v34[8 * v43];
        v36 = &v34[v44];
        v45 = v5 - v7;
        v37 = v5 == v7;
        v5 = v35;
        if (!v37)
        {
          v5 = &v35[v45 & 0xFFFFFFFFFFFFFFF8];
          v46 = v45 - 8;
          if ((unint64_t)(v45 - 8) >= 0x38)
          {
            v82 = &v34[8 * v43];
            v47 = v82;
            if ((unint64_t)(v82 - v7) >= 0x20)
            {
              v83 = (v46 >> 3) + 1;
              v84 = 8 * (v83 & 0x3FFFFFFFFFFFFFFCLL);
              v47 = &v35[v84];
              v7 += v84;
              v85 = (__int128 *)(v41 + 3);
              v86 = v82 + 16;
              v87 = v83 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v88 = *v85;
                *(v86 - 1) = *(v85 - 1);
                *v86 = v88;
                v85 += 2;
                v86 += 2;
                v87 -= 4;
              }
              while (v87);
              if (v83 == (v83 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_76;
            }
          }
          else
          {
            v47 = &v34[8 * v43];
          }
          do
          {
            v89 = *(_QWORD *)v7;
            v7 += 8;
            *(_QWORD *)v47 = v89;
            v47 += 8;
          }
          while (v47 != v5);
        }
LABEL_76:
        *(_QWORD *)a1 = v34;
        *(_QWORD *)(a1 + 8) = v35;
        *(_QWORD *)(a1 + 16) = v5;
        *(_QWORD *)(a1 + 24) = v36;
        if (v9)
        {
          operator delete(v9);
          v5 = *(char **)(a1 + 16);
        }
        goto LABEL_78;
      }
      goto LABEL_87;
    }
    goto LABEL_5;
  }
  v23 = v22 >> 2;
  if (v17 == *(_QWORD *)a1)
    v24 = 1;
  else
    v24 = v23;
  if (v24 >> 61)
    goto LABEL_87;
  v25 = (char *)operator new(8 * v24);
  v26 = operator new(0x1000uLL);
  v27 = &v25[8 * v21];
  v28 = &v25[8 * v24];
  if (v21 == v24)
  {
    v90 = v26;
    if (v20 < 1)
    {
      if (v18 == v19)
        v48 = 1;
      else
        v48 = v20 >> 2;
      if (v48 >> 61)
        sub_239418A80();
      v49 = (char *)operator new(8 * v48);
      v27 = &v49[8 * (v48 >> 2)];
      v28 = &v49[8 * v48];
      operator delete(v25);
      v50 = *(_QWORD *)(a1 + 8);
      v18 = *(_QWORD *)(a1 + 16);
      v25 = v49;
      *(_QWORD *)v27 = v90;
      v29 = v27 + 8;
      if (v18 == v50)
        goto LABEL_45;
    }
    else
    {
      v30 = v21 + 2;
      if (v21 >= -1)
        v30 = v21 + 1;
      v27 -= 8 * (v30 >> 1);
      *(_QWORD *)v27 = v26;
      v29 = v27 + 8;
      if (v18 == v19)
        goto LABEL_45;
    }
    do
    {
LABEL_50:
      if (v27 == v25)
      {
        if (v29 >= v28)
        {
          if (v28 == v27)
            v59 = 1;
          else
            v59 = (v28 - v27) >> 2;
          if (v59 >> 61)
            sub_239418A80();
          v60 = (char *)operator new(8 * v59);
          v25 = v60;
          v61 = (v59 + 3) >> 2;
          v53 = &v60[8 * v61];
          v62 = v29 - v27;
          v37 = v29 == v27;
          v29 = v53;
          if (!v37)
          {
            v29 = &v53[v62 & 0xFFFFFFFFFFFFFFF8];
            v63 = v62 - 8;
            v64 = &v60[8 * v61];
            v65 = v27;
            if (v63 < 0x38)
              goto LABEL_91;
            v66 = 8 * v61;
            v64 = &v60[8 * v61];
            v65 = v27;
            if ((unint64_t)(v64 - v27) < 0x20)
              goto LABEL_91;
            v67 = (v63 >> 3) + 1;
            v68 = 8 * (v67 & 0x3FFFFFFFFFFFFFFCLL);
            v64 = &v53[v68];
            v65 = &v27[v68];
            v69 = (__int128 *)(v27 + 16);
            v70 = &v60[v66 + 16];
            v71 = v67 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v72 = *v69;
              *((_OWORD *)v70 - 1) = *(v69 - 1);
              *(_OWORD *)v70 = v72;
              v69 += 2;
              v70 += 32;
              v71 -= 4;
            }
            while (v71);
            if (v67 != (v67 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_91:
              do
              {
                v73 = *(_QWORD *)v65;
                v65 += 8;
                *(_QWORD *)v64 = v73;
                v64 += 8;
              }
              while (v64 != v29);
            }
          }
          v28 = &v60[8 * v59];
          operator delete(v27);
        }
        else
        {
          v55 = (v28 - v29) >> 3;
          if (v55 >= -1)
            v56 = v55 + 1;
          else
            v56 = v55 + 2;
          v57 = &v29[8 * (v56 >> 1)];
          v53 = &v57[-(v29 - v27)];
          v58 = v29 - v27;
          v37 = v29 == v27;
          v29 = v57;
          if (!v37)
            memmove(v53, v27, v58);
          v25 = v27;
        }
      }
      else
      {
        v53 = v27;
      }
      v54 = *(_QWORD *)(v18 - 8);
      v18 -= 8;
      *((_QWORD *)v53 - 1) = v54;
      v51 = v53 - 8;
      v27 = v51;
    }
    while (v18 != *(_QWORD *)(a1 + 8));
    goto LABEL_46;
  }
  *(_QWORD *)v27 = v26;
  v29 = v27 + 8;
  if (v18 != v19)
    goto LABEL_50;
LABEL_45:
  v51 = v27;
LABEL_46:
  v52 = *(char **)a1;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v51;
  *(_QWORD *)(a1 + 16) = v29;
  *(_QWORD *)(a1 + 24) = v28;
  if (v52)
    operator delete(v52);
}

void sub_239932124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  void *v9;

  operator delete(__p);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_239932140(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239932154(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_23993216C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239932184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v6 = *(char **)a1;
  v5 = *(char **)(a1 + 8);
  if (*(char **)a1 == v5)
  {
    v7 = 0;
  }
  else
  {
    v7 = 0;
    while (*(_QWORD *)v6)
    {
      v6 += 16;
      v7 = (v7 + 1);
      if (v6 == v5)
        goto LABEL_8;
    }
  }
  if (v6 == v5)
  {
LABEL_8:
    v19 = 0;
    v20 = 0;
    if ((unint64_t)v5 >= *(_QWORD *)(a1 + 16))
    {
      v8 = sub_2394E46BC((char **)a1, (uint64_t)&v19);
      v9 = v20;
      *(_QWORD *)(a1 + 8) = v8;
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      *(_QWORD *)v5 = 0;
      *((_QWORD *)v5 + 1) = 0;
      *(_QWORD *)(a1 + 8) = v5 + 16;
    }
  }
  v12 = operator new(0x58uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = &off_250AF03A0;
  v13 = v12 + 4;
  v12[3] = off_250AF0C30;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v13, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)a3;
    v12[6] = *(_QWORD *)(a3 + 16);
  }
  v12[3] = &off_250AF03D8;
  v12[9] = 0;
  v12[10] = 0;
  v12[7] = sub_2394E609C;
  v12[8] = 0;
  v14 = (_QWORD *)(*(_QWORD *)a1 + 16 * v7);
  v15 = (std::__shared_weak_count *)v14[1];
  *v14 = v12 + 3;
  v14[1] = v12;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  return v7;
}

void sub_239932310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239932324(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_23993233C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF03A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23993234C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF03A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23993237C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_23993238C(_QWORD *a1)
{
  void *v2;

  *a1 = &off_250AF03D8;
  v2 = (void *)a1[5];
  if (v2)
  {
    a1[6] = v2;
    operator delete(v2);
  }
  return sub_23995E4A4((uint64_t)a1);
}

void sub_2399323C8(_QWORD *a1)
{
  void *v2;

  *a1 = &off_250AF03D8;
  v2 = (void *)a1[5];
  if (v2)
  {
    a1[6] = v2;
    operator delete(v2);
  }
  sub_23995E4A4((uint64_t)a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239932418(uint64_t a1)
{
  return (uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 4;
}

void sub_239932428(_QWORD *a1, unint64_t a2)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  __int128 v9;

  v3 = (_BYTE *)a1[5];
  if (a2 > (uint64_t)(a1[7] - (_QWORD)v3) >> 4)
  {
    if (a2 >> 60)
      sub_2394189F8();
    v4 = (_BYTE *)a1[6];
    v5 = 16 * a2;
    v6 = (char *)operator new(16 * a2);
    v7 = &v6[(v4 - v3) & 0xFFFFFFFFFFFFFFF0];
    v8 = v7;
    if (v4 != v3)
    {
      v8 = &v6[(v4 - v3) & 0xFFFFFFFFFFFFFFF0];
      do
      {
        v9 = *((_OWORD *)v4 - 1);
        v4 -= 16;
        *((_OWORD *)v8 - 1) = v9;
        v8 -= 16;
      }
      while (v4 != v3);
    }
    a1[5] = v8;
    a1[6] = v7;
    a1[7] = &v6[v5];
    if (v3)
      operator delete(v3);
  }
}

void sub_2399324C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (*(_QWORD *)(a1 + 48) - v2) >> 4;
  v4 = a2 >= v3;
  v5 = a2 - v3;
  if (v5 != 0 && v4)
  {
    sub_239932734((char **)(a1 + 40), v5);
  }
  else if (!v4)
  {
    *(_QWORD *)(a1 + 48) = v2 + 16 * a2;
  }
}

void sub_2399324FC(_QWORD *a1)
{
  void *v2;

  v2 = (void *)a1[5];
  a1[6] = 0;
  a1[7] = 0;
  a1[5] = 0;
  if (v2)
    operator delete(v2);
}

void sub_239932518(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  char **v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;

  v3 = (char *)a1[6];
  v2 = a1[7];
  if ((unint64_t)v3 < v2)
  {
    *(_QWORD *)v3 = 0;
    *((_QWORD *)v3 + 1) = 0;
    v4 = (uint64_t)(v3 + 16);
LABEL_3:
    a1[6] = v4;
    return;
  }
  v5 = (char **)(a1 + 5);
  v6 = (char *)a1[5];
  v7 = (v3 - v6) >> 4;
  v8 = v7 + 1;
  if ((unint64_t)(v7 + 1) >> 60)
    sub_2394189F8();
  v9 = v2 - (_QWORD)v6;
  if (v9 >> 3 > v8)
    v8 = v9 >> 3;
  if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0)
    v10 = 0xFFFFFFFFFFFFFFFLL;
  else
    v10 = v8;
  if (!v10)
  {
    v12 = (char *)(16 * v7);
    *(_QWORD *)v12 = 0;
    *((_QWORD *)v12 + 1) = 0;
    v13 = 0;
    v4 = 16 * v7 + 16;
    if (v3 == v6)
      goto LABEL_17;
    goto LABEL_15;
  }
  if (v10 >> 60)
    sub_239418A80();
  v11 = (char *)operator new(16 * v10);
  v12 = &v11[16 * v7];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v11[16 * v10];
  v4 = (uint64_t)(v12 + 16);
  if (v3 != v6)
  {
    do
    {
LABEL_15:
      v14 = *((_OWORD *)v3 - 1);
      v3 -= 16;
      *((_OWORD *)v12 - 1) = v14;
      v12 -= 16;
    }
    while (v3 != v6);
    v3 = *v5;
  }
LABEL_17:
  a1[5] = v12;
  a1[6] = v4;
  a1[7] = v13;
  if (!v3)
    goto LABEL_3;
  operator delete(v3);
  a1[6] = v4;
}

__n128 sub_239932630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)(v3 + 16 * a2);
  *(_OWORD *)(v3 + 16 * a2) = *(_OWORD *)(v3 + 16 * a3);
  *(__n128 *)(*(_QWORD *)(a1 + 40) + 16 * a3) = result;
  return result;
}

__n128 sub_239932654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)(v3 + 16 * a2);
  *(__n128 *)(v3 + 16 * a3) = result;
  return result;
}

_QWORD *sub_239932668@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = (_QWORD *)operator new();
  sub_239932850(v4, a1);
  *a2 = v4;
  result = (_QWORD *)operator new();
  *result = &off_250AF0448;
  result[1] = 0;
  result[2] = 0;
  result[3] = v4;
  a2[1] = result;
  return result;
}

void sub_2399326E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_239932700(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C402F26E7C1);
  _Unwind_Resume(a1);
}

uint64_t sub_239932724(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 40);
}

void sub_239932734(char **a1, unint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  size_t v14;
  char *v15;
  char *v16;
  __int128 v17;

  v5 = a1[1];
  v4 = a1[2];
  if (a2 <= (v4 - v5) >> 4)
  {
    if (a2)
    {
      v12 = 16 * a2;
      bzero(a1[1], 16 * a2);
      v5 += v12;
    }
    a1[1] = v5;
  }
  else
  {
    v6 = *a1;
    v7 = (v5 - *a1) >> 4;
    v8 = v7 + a2;
    if ((v7 + a2) >> 60)
      sub_2394189F8();
    v9 = v4 - v6;
    if (v9 >> 3 > v8)
      v8 = v9 >> 3;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0)
      v10 = 0xFFFFFFFFFFFFFFFLL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 >> 60)
        sub_239418A80();
      v11 = (char *)operator new(16 * v10);
    }
    else
    {
      v11 = 0;
    }
    v13 = &v11[16 * v7];
    v14 = 16 * a2;
    v15 = &v11[16 * v10];
    bzero(v13, v14);
    v16 = &v13[v14];
    if (v5 != v6)
    {
      do
      {
        v17 = *((_OWORD *)v5 - 1);
        v5 -= 16;
        *((_OWORD *)v13 - 1) = v17;
        v13 -= 16;
      }
      while (v5 != v6);
      v5 = *a1;
    }
    *a1 = v13;
    a1[1] = v16;
    a1[2] = v15;
    if (v5)
      operator delete(v5);
  }
}

_QWORD *sub_239932850(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  __int128 v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  char *v9;
  size_t v10;

  *a1 = off_250AF0C30;
  v4 = a1 + 1;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 8);
    v4[2] = *(_QWORD *)(a2 + 24);
    *(_OWORD *)v4 = v5;
  }
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = 0;
  *a1 = &off_250AF03D8;
  a1[6] = 0;
  a1[7] = 0;
  v7 = *(_BYTE **)(a2 + 40);
  v6 = *(_BYTE **)(a2 + 48);
  v8 = v6 - v7;
  if (v6 != v7)
  {
    if (v8 < 0)
      sub_2394189F8();
    v9 = (char *)operator new(v6 - v7);
    a1[5] = v9;
    a1[6] = v9;
    a1[7] = &v9[16 * (v8 >> 4)];
    v10 = v8 & 0xFFFFFFFFFFFFFFF0;
    memcpy(v9, v7, v10);
    a1[6] = &v9[v10];
  }
  return a1;
}

void sub_23993292C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 48) = v4;
    operator delete(v4);
  }
  sub_23995E4A4(v1);
  _Unwind_Resume(a1);
}

void sub_239932954(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239932978(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

float sub_239932994(uint64_t a1, unsigned int *a2)
{
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  unsigned int *v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int *v32;
  unsigned int *v33;
  uint64_t v34;
  uint64_t *v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int32x4_t v41;
  int32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;

  v4 = a1 + 104;
  v5 = (unsigned int *)sub_23996252C(a1 + 104, a2);
  v6 = sub_239962518(v4, v5);
  v7 = (unsigned int *)sub_239962518(v4, (unsigned int *)(v6 + 8));
  v8 = *(unsigned int *)(sub_239962518(v4, v7) + 12);
  v9 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v11 = *v9;
  v10 = (std::__shared_weak_count *)v9[1];
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v48 = *(float32x4_t *)(*(_QWORD *)(v11 + 40) + 16 * v8);
  v15 = (unsigned int *)sub_23996252C(v4, a2);
  v16 = (unsigned int *)sub_239962518(v4, v15);
  v17 = *(unsigned int *)(sub_239962518(v4, v16) + 12);
  v18 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v20 = *v18;
  v19 = (std::__shared_weak_count *)v18[1];
  if (v19)
  {
    v21 = (unint64_t *)&v19->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v47 = *(float32x4_t *)(*(_QWORD *)(v20 + 40) + 16 * v17);
  v24 = (unsigned int *)sub_23996252C(v4, a2);
  v25 = *(unsigned int *)(sub_239962518(v4, v24) + 12);
  v26 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (v27)
  {
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  v46 = *(float32x4_t *)(*(_QWORD *)(v28 + 40) + 16 * v25);
  v32 = (unsigned int *)sub_23996252C(v4, a2);
  v33 = (unsigned int *)sub_239962518(v4, v32);
  v34 = *(unsigned int *)(sub_239962518(v4, v33) + 12);
  v35 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v37 = *v35;
  v36 = (std::__shared_weak_count *)v35[1];
  if (v36)
  {
    v38 = (unint64_t *)&v36->__shared_owners_;
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
    do
      v40 = __ldaxr(v38);
    while (__stlxr(v40 - 1, v38));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  v41 = (int32x4_t)vsubq_f32(v48, v47);
  v42 = (int32x4_t)vsubq_f32(v46, *(float32x4_t *)(*(_QWORD *)(v37 + 40) + 16 * v34));
  v43 = vmlsq_f32(vmulq_f32((float32x4_t)vzip2q_s32(vzip1q_s32(v41, (int32x4_t)vextq_s8((int8x16_t)v41, (int8x16_t)v41, 0xCuLL)), v41), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v42, (int8x16_t)v42, 4uLL), v42)), (float32x4_t)vzip2q_s32(vzip1q_s32(v42, (int32x4_t)vextq_s8((int8x16_t)v42, (int8x16_t)v42, 0xCuLL)), v42), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v41, (int8x16_t)v41, 4uLL), v41));
  v44 = vmulq_f32(v43, v43);
  v44.i32[3] = 0;
  return sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v44, v44))) * 0.5;
}

uint64_t sub_239932C44(size_t a1, unint64_t a2)
{
  char *v4;
  size_t v5;
  size_t v6;
  uint64_t (***p_dst)();
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  uint64_t (***v17)();
  uint64_t v18;
  int v20;
  int v21;
  uint64_t (**__dst)();
  size_t v23;
  unint64_t v24;
  void **v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v4 = off_256934428[0];
  v5 = strlen(off_256934428[0]);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    p_dst = (uint64_t (***)())operator new(v8 + 1);
    v23 = v6;
    v24 = v9 | 0x8000000000000000;
    __dst = (uint64_t (**)())p_dst;
    goto LABEL_8;
  }
  HIBYTE(v24) = v5;
  p_dst = &__dst;
  if (v5)
LABEL_8:
    memmove(p_dst, v4, v6);
  *((_BYTE *)p_dst + v6) = 0;
  v21 = 0;
  v10 = sub_2399346C0((uint64_t **)(a1 + 56), (uint64_t)&v21, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v24) < 0)
    operator delete(__dst);
  v11 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v10);
  v12 = *v11;
  v13 = (std::__shared_weak_count *)v11[1];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v20 = ((*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2) - 1;
  v21 = 0;
  __dst = &off_250AF0480;
  v23 = a1;
  v24 = a2;
  v25 = (void **)&__dst;
  sub_239933D20(v12, &v21, &v20, (uint64_t)&__dst);
  v17 = (uint64_t (***)())v25;
  if (v25 == (void **)&__dst)
  {
    v18 = 4;
    v17 = &__dst;
    goto LABEL_21;
  }
  if (v25)
  {
    v18 = 5;
LABEL_21:
    (*v17)[v18]();
  }
  return 1;
}

void sub_239932E1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void (**__p)(void), uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  uint64_t v16;

  if (a16 == v16)
  {
    __p[4]();
    _Unwind_Resume(exception_object);
  }
  if (a16)
  {
    (*(void (**)(void))(*(_QWORD *)a16 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_239932E90(size_t a1, float *a2)
{
  _BYTE v3[76];
  int v4;
  char v5;

  memset(v3, 0, sizeof(v3));
  v4 = 3;
  v5 = 1;
  return sub_2399804D8(a1, a2, (uint64_t)v3);
}

uint64_t sub_239932ED4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[76];
  int v8;
  char v9;
  _QWORD v10[3];
  _QWORD *v11;
  _QWORD v12[3];
  _QWORD *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  memset(v7, 0, sizeof(v7));
  v8 = 3;
  v9 = 1;
  v13 = 0;
  v11 = 0;
  sub_239933010(a1, a2, (uint64_t)v7, v12, v10);
  v2 = v11;
  if (v11 == v10)
  {
    v3 = 4;
    v2 = v10;
  }
  else
  {
    if (!v11)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  v4 = v13;
  if (v13 == v12)
  {
    v5 = 4;
    v4 = v12;
    goto LABEL_10;
  }
  if (v13)
  {
    v5 = 5;
LABEL_10:
    (*(void (**)(void))(*v4 + 8 * v5))();
  }
  return 1;
}

void sub_239932FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char *a23)
{
  uint64_t v23;
  char *v25;
  uint64_t v26;

  v25 = a23;
  if (a23 == &a20)
  {
    v26 = 4;
    v25 = &a20;
  }
  else
  {
    if (!a23)
      goto LABEL_6;
    v26 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v25 + 8 * v26))();
LABEL_6:
  sub_239EC0548((_QWORD *)(v23 - 32), (_QWORD *)(v23 - 56));
  _Unwind_Resume(a1);
}

BOOL sub_239933010(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  char *v8;
  size_t v9;
  size_t v10;
  uint64_t *p_dst;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unsigned int v15;
  char *v16;
  size_t v17;
  size_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  char *v23;
  size_t v24;
  size_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unsigned int v30;
  char *v31;
  size_t v32;
  size_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  float32x4_t v38;
  _QWORD *v39;
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v42;
  _QWORD *v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  _QWORD *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  _QWORD *v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  float32x4_t v58;
  _QWORD *v59;
  __int128 *v60;
  uint64_t v61;
  _QWORD *v62;
  __int128 *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _BOOL8 v76;
  char *v77;
  unint64_t v79;
  _OWORD *v80;
  uint64_t *v81;
  std::__shared_weak_count *v82;
  uint64_t v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v90;
  uint64_t v91;
  void *v93;
  char *v94;
  char *v95;
  uint64_t __dst;
  size_t v97;
  _QWORD v98[3];
  _QWORD *v99;
  _QWORD v100[3];
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  std::mutex v119;
  __int128 v120;
  unint64_t v121;
  __int128 *v122;
  uint64_t v123;

  v123 = *MEMORY[0x24BDAC8D0];
  v8 = off_256934438[0];
  v9 = strlen(off_256934438[0]);
  if (v9 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v12 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v12 = v9 | 7;
    v13 = v12 + 1;
    p_dst = (uint64_t *)operator new(v12 + 1);
    v97 = v10;
    v98[0] = v13 | 0x8000000000000000;
    __dst = (uint64_t)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v98[0]) = v9;
  p_dst = &__dst;
  if (v9)
LABEL_8:
    memmove(p_dst, v8, v10);
  *((_BYTE *)p_dst + v10) = 0;
  v14 = (_QWORD *)(a1 + 80);
  *(_QWORD *)&v120 = 0;
  v15 = sub_2394E5C88((uint64_t **)(a1 + 80), (uint64_t)&v120, (unsigned __int8 *)&__dst);
  v91 = a3;
  if (SHIBYTE(v98[0]) < 0)
    operator delete((void *)__dst);
  v16 = off_256934448[0];
  v17 = strlen(off_256934448[0]);
  if (v17 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v18 = v17;
  v90 = v15;
  if (v17 >= 0x17)
  {
    v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v20 = v17 | 7;
    v21 = v20 + 1;
    v19 = (__int128 *)operator new(v20 + 1);
    *((_QWORD *)&v120 + 1) = v18;
    v121 = v21 | 0x8000000000000000;
    *(_QWORD *)&v120 = v19;
    goto LABEL_18;
  }
  HIBYTE(v121) = v17;
  v19 = &v120;
  if (v17)
LABEL_18:
    memmove(v19, v16, v18);
  *((_BYTE *)v19 + v18) = 0;
  __dst = 0;
  v97 = 0;
  v98[0] = 0;
  v22 = sub_23958C0D8((uint64_t **)(a1 + 80), (uint64_t)&__dst, (unsigned __int8 *)&v120);
  if (SHIBYTE(v98[0]) < 0)
  {
    operator delete((void *)__dst);
    if ((SHIBYTE(v121) & 0x80000000) == 0)
      goto LABEL_21;
  }
  else if ((SHIBYTE(v121) & 0x80000000) == 0)
  {
    goto LABEL_21;
  }
  operator delete((void *)v120);
LABEL_21:
  v23 = off_256934418[0];
  v24 = strlen(off_256934418[0]);
  if (v24 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v25 = v24;
  if (v24 >= 0x17)
  {
    v27 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v24 | 7) != 0x17)
      v27 = v24 | 7;
    v28 = v27 + 1;
    v26 = (uint64_t *)operator new(v27 + 1);
    v97 = v25;
    v98[0] = v28 | 0x8000000000000000;
    __dst = (uint64_t)v26;
    goto LABEL_28;
  }
  HIBYTE(v98[0]) = v24;
  v26 = &__dst;
  if (v24)
LABEL_28:
    memmove(v26, v23, v25);
  *((_BYTE *)v26 + v25) = 0;
  v29 = (_QWORD *)(a1 + 56);
  *(_QWORD *)((char *)&v120 + 4) = 0;
  LODWORD(v120) = 0;
  v30 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&v120, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v98[0]) < 0)
    operator delete((void *)__dst);
  v31 = off_256934428[0];
  v32 = strlen(off_256934428[0]);
  if (v32 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v33 = v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    v34 = (uint64_t *)operator new(v35 + 1);
    v97 = v33;
    v98[0] = v36 | 0x8000000000000000;
    __dst = (uint64_t)v34;
    goto LABEL_38;
  }
  HIBYTE(v98[0]) = v32;
  v34 = &__dst;
  if (v32)
LABEL_38:
    memmove(v34, v31, v33);
  *((_BYTE *)v34 + v33) = 0;
  LOWORD(v120) = 0;
  v37 = sub_23958CE84((uint64_t **)(a1 + 56), (uint64_t)&v120, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v98[0]) < 0)
    operator delete((void *)__dst);
  if (v90 != -1)
  {
    v39 = (_QWORD *)(*v14 + 16 * v90);
    v40 = (std::__shared_weak_count *)v39[1];
    *v39 = 0;
    v39[1] = 0;
    if (v40)
    {
      p_shared_owners = (unint64_t *)&v40->__shared_owners_;
      do
        v42 = __ldaxr(p_shared_owners);
      while (__stlxr(v42 - 1, p_shared_owners));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
  }
  if (v22 != -1)
  {
    v43 = (_QWORD *)(*v14 + 16 * v22);
    v44 = (std::__shared_weak_count *)v43[1];
    *v43 = 0;
    v43[1] = 0;
    if (v44)
    {
      v45 = (unint64_t *)&v44->__shared_owners_;
      do
        v46 = __ldaxr(v45);
      while (__stlxr(v46 - 1, v45));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v44);
      }
    }
  }
  if (v30 == -1)
    goto LABEL_58;
  v47 = (_QWORD *)(*v29 + 16 * v30);
  v48 = (std::__shared_weak_count *)v47[1];
  *v47 = 0;
  v47[1] = 0;
  if (!v48)
    goto LABEL_58;
  v49 = (unint64_t *)&v48->__shared_owners_;
  do
    v50 = __ldaxr(v49);
  while (__stlxr(v50 - 1, v49));
  if (v50)
  {
LABEL_58:
    if (v37 == -1)
      goto LABEL_63;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
    std::__shared_weak_count::__release_weak(v48);
    if (v37 == -1)
      goto LABEL_63;
  }
  v51 = (_QWORD *)(*v29 + 16 * v37);
  v52 = (std::__shared_weak_count *)v51[1];
  *v51 = 0;
  v51[1] = 0;
  if (v52)
  {
    v53 = (unint64_t *)&v52->__shared_owners_;
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
      v88 = *(_QWORD *)(a1 + 104);
      v87 = *(_QWORD *)(a1 + 112);
      v94 = 0;
      v95 = 0;
      v93 = 0;
      v57 = v87 - v88;
      if (v87 == v88)
        goto LABEL_66;
      goto LABEL_64;
    }
  }
LABEL_63:
  v56 = *(_QWORD *)(a1 + 104);
  v55 = *(_QWORD *)(a1 + 112);
  v94 = 0;
  v95 = 0;
  v93 = 0;
  v57 = v55 - v56;
  if (v55 == v56)
    goto LABEL_66;
LABEL_64:
  if ((unint64_t)v57 >= 0x3FFFFFFFFFFFFFFDLL)
    sub_2394189F8();
  v93 = operator new(4 * v57);
  v95 = (char *)v93 + 16 * (v57 >> 2);
  bzero(v93, 4 * v57);
  v94 = (char *)v93 + 4 * v57;
LABEL_66:
  v58 = sub_2399A21F8(a1, (uint64_t)&v93, v38);
  v59 = (_QWORD *)a4[3];
  if (v59)
  {
    if (((*(uint64_t (**)(_QWORD *, float32x4_t))(*v59 + 48))(v59, v58) & 1) != 0)
      goto LABEL_114;
    v59 = (_QWORD *)a4[3];
  }
  __dst = 4286578687;
  LODWORD(v97) = 0;
  v99 = 0;
  v101 = 0;
  v102 = a1;
  v103 = a2;
  v104 = a2 + 8;
  v105 = *(_DWORD *)(a2 + 16);
  v106 = *(_BYTE *)(a2 + 12);
  v107 = *(_BYTE *)(a2 + 20);
  v108 = a2 + 24;
  v109 = a2 + 28;
  v110 = a2 + 44;
  v111 = *(_BYTE *)(a2 + 40);
  v112 = 0u;
  v113 = 0u;
  v114 = 0u;
  v115 = v91;
  v116 = a2 + 32;
  v117 = a2 + 36;
  v118 = *(_BYTE *)(a2 + 41);
  memset(v119.__m_.__opaque, 0, sizeof(v119.__m_.__opaque));
  v119.__m_.__sig = 850045863;
  if (v59)
  {
    if (v59 == a4)
    {
      v122 = &v120;
      (*(void (**)(_QWORD *, __int128 *))(*a4 + 24))(a4, &v120);
    }
    else
    {
      v122 = (__int128 *)(*(uint64_t (**)(_QWORD *))(*v59 + 16))(v59);
    }
    sub_2394D9710(&v120, v98);
    v60 = v122;
    if (v122 == &v120)
    {
      v61 = 4;
      v60 = &v120;
    }
    else
    {
      if (!v122)
        goto LABEL_80;
      v61 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v60 + 8 * v61))();
  }
LABEL_80:
  v62 = (_QWORD *)a5[3];
  if (!v62)
    goto LABEL_89;
  if (v62 == a5)
  {
    v122 = &v120;
    (*(void (**)(_QWORD *, __int128 *))(*a5 + 24))(a5, &v120);
  }
  else
  {
    v122 = (__int128 *)(*(uint64_t (**)(_QWORD *))(*v62 + 16))(v62);
  }
  sub_23993481C(&v120, v100);
  v63 = v122;
  if (v122 == &v120)
  {
    v64 = 4;
    v63 = &v120;
  }
  else
  {
    if (!v122)
      goto LABEL_89;
    v64 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v63 + 8 * v64))();
LABEL_89:
  sub_23998C92C((uint64_t)&__dst);
  std::mutex::~mutex(&v119);
  v65 = *((_QWORD *)&v113 + 1);
  if (*((_QWORD *)&v113 + 1))
  {
    v66 = v114;
    v67 = (void *)*((_QWORD *)&v113 + 1);
    if ((_QWORD)v114 != *((_QWORD *)&v113 + 1))
    {
      do
      {
        v68 = *(std::__shared_weak_count **)(v66 - 8);
        if (v68)
        {
          v69 = (unint64_t *)&v68->__shared_owners_;
          do
            v70 = __ldaxr(v69);
          while (__stlxr(v70 - 1, v69));
          if (!v70)
          {
            ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
            std::__shared_weak_count::__release_weak(v68);
          }
        }
        v66 -= 16;
      }
      while (v66 != v65);
      v67 = (void *)*((_QWORD *)&v113 + 1);
    }
    *(_QWORD *)&v114 = v65;
    operator delete(v67);
  }
  if ((_QWORD)v112)
  {
    *((_QWORD *)&v112 + 1) = v112;
    operator delete((void *)v112);
  }
  v71 = v101;
  if (v101 == v100)
  {
    v72 = 4;
    v71 = v100;
  }
  else
  {
    if (!v101)
      goto LABEL_107;
    v72 = 5;
  }
  (*(void (**)(void))(*v71 + 8 * v72))();
LABEL_107:
  v73 = v99;
  if (v99 == v98)
  {
    v74 = 4;
    v73 = v98;
    goto LABEL_111;
  }
  if (v99)
  {
    v74 = 5;
LABEL_111:
    (*(void (**)(void))(*v73 + 8 * v74))();
  }
  v75 = a4[3];
  if (!v75 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v75 + 48))(v75) & 1) == 0)
  {
    if (*(_QWORD *)(a1 + 112) != *(_QWORD *)(a1 + 104))
    {
      v79 = 0;
      do
      {
        v80 = v93;
        v81 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v83 = *v81;
        v82 = (std::__shared_weak_count *)v81[1];
        if (v82)
        {
          v84 = (unint64_t *)&v82->__shared_owners_;
          do
            v85 = __ldxr(v84);
          while (__stxr(v85 + 1, v84));
          do
            v86 = __ldaxr(v84);
          while (__stlxr(v86 - 1, v84));
          if (!v86)
          {
            ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
            std::__shared_weak_count::__release_weak(v82);
          }
        }
        *(_OWORD *)(*(_QWORD *)(v83 + 40) + 16 * v79) = v80[v79];
        ++v79;
      }
      while (v79 < (uint64_t)(*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2);
    }
    v76 = (*(_DWORD *)(v91 + 76) & 0xFFFFFFFD) != 0;
    v77 = (char *)v93;
    if (v93)
      goto LABEL_115;
    return v76;
  }
LABEL_114:
  v76 = 0;
  v77 = (char *)v93;
  if (v93)
  {
LABEL_115:
    v94 = v77;
    operator delete(v77);
  }
  return v76;
}

void sub_2399338E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239933998(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  std::mutex::~mutex((std::mutex *)(a1 + 240));
  v2 = *(_QWORD *)(a1 + 184);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 192);
    v4 = *(void **)(a1 + 184);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 184);
    }
    *(_QWORD *)(a1 + 192) = v2;
    operator delete(v4);
  }
  v8 = *(void **)(a1 + 160);
  if (v8)
  {
    *(_QWORD *)(a1 + 168) = v8;
    operator delete(v8);
  }
  v9 = *(_QWORD **)(a1 + 72);
  if (v9 == (_QWORD *)(a1 + 48))
  {
    v10 = 4;
    v9 = (_QWORD *)(a1 + 48);
  }
  else
  {
    if (!v9)
      goto LABEL_19;
    v10 = 5;
  }
  (*(void (**)(void))(*v9 + 8 * v10))();
LABEL_19:
  v11 = *(_QWORD **)(a1 + 40);
  if (v11 == (_QWORD *)(a1 + 16))
  {
    v12 = 4;
    v11 = (_QWORD *)(a1 + 16);
    goto LABEL_23;
  }
  if (v11)
  {
    v12 = 5;
LABEL_23:
    (*(void (**)(void))(*v11 + 8 * v12))();
  }
  return a1;
}

uint64_t sub_239933AAC(unint64_t *a1, unint64_t *a2, unint64_t *a3, _DWORD *a4, unsigned int *a5, float *a6, _OWORD *a7, _OWORD *a8, unint64_t a9, uint64_t a10, _DWORD *a11)
{
  return sub_2399C84E4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, 0);
}

uint64_t sub_239933ADC(size_t a1)
{
  char *v2;
  size_t v3;
  size_t v4;
  uint64_t (***p_dst)();
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  uint64_t (***v15)();
  uint64_t v16;
  int v18;
  int v19;
  uint64_t (**__dst)();
  size_t v21;
  unint64_t v22;
  void **v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v2 = off_256934428[0];
  v3 = strlen(off_256934428[0]);
  if (v3 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v4 = v3;
  if (v3 >= 0x17)
  {
    v6 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17)
      v6 = v3 | 7;
    v7 = v6 + 1;
    p_dst = (uint64_t (***)())operator new(v6 + 1);
    v21 = v4;
    v22 = v7 | 0x8000000000000000;
    __dst = (uint64_t (**)())p_dst;
    goto LABEL_8;
  }
  HIBYTE(v22) = v3;
  p_dst = &__dst;
  if (v3)
LABEL_8:
    memmove(p_dst, v2, v4);
  *((_BYTE *)p_dst + v4) = 0;
  v19 = 0;
  v8 = sub_2399346C0((uint64_t **)(a1 + 56), (uint64_t)&v19, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst);
  v9 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v8);
  v10 = *v9;
  v11 = (std::__shared_weak_count *)v9[1];
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v18 = ((*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2) - 1;
  v19 = 0;
  __dst = &off_250AF0510;
  v21 = a1;
  v23 = (void **)&__dst;
  sub_239933D20(v10, &v19, &v18, (uint64_t)&__dst);
  v15 = (uint64_t (***)())v23;
  if (v23 == (void **)&__dst)
  {
    v16 = 4;
    v15 = &__dst;
    goto LABEL_21;
  }
  if (v23)
  {
    v16 = 5;
LABEL_21:
    (*v15)[v16]();
  }
  return 1;
}

void sub_239933CB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void (**__p)(void), uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  uint64_t v16;

  if (a16 == v16)
  {
    __p[4]();
    _Unwind_Resume(exception_object);
  }
  if (a16)
  {
    (*(void (**)(void))(*(_QWORD *)a16 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239933D20(uint64_t result, int *a2, int *a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  v4 = *a2;
  v5 = *a3;
  if (*a2 < *a3)
  {
    v9 = result;
    v10 = *(_DWORD *)(*(_QWORD *)(result + 40) + 4 * v4);
    v11 = *a2;
    while (1)
    {
      v12 = *(_DWORD *)(*(_QWORD *)(v9 + 40) + 4 * v11);
      if (v12 >= v10)
      {
        if (v12 <= v10)
          goto LABEL_3;
        v15 = v5;
        v16 = v11;
        v14 = *(_QWORD *)(a4 + 24);
        if (!v14)
LABEL_12:
          sub_2394172E0();
        (*(void (**)(uint64_t, int *, int *))(*(_QWORD *)v14 + 48))(v14, &v16, &v15);
        if (v11 > --v5)
        {
LABEL_10:
          v15 = v4 - 1;
          v16 = v11;
          sub_239933D20(v9, a2, &v15, a4);
          return sub_239933D20(v9, &v16, a3, a4);
        }
      }
      else
      {
        v15 = v11;
        v16 = v4;
        v13 = *(_QWORD *)(a4 + 24);
        if (!v13)
          goto LABEL_12;
        (*(void (**)(uint64_t, int *, int *))(*(_QWORD *)v13 + 48))(v13, &v16, &v15);
        ++v4;
LABEL_3:
        if (++v11 > v5)
          goto LABEL_10;
      }
    }
  }
  return result;
}

uint64_t sub_239933E34(size_t a1)
{
  char *v2;
  size_t v3;
  size_t v4;
  uint64_t (***p_dst)();
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  uint64_t (***v15)();
  uint64_t v16;
  int v18;
  int v19;
  uint64_t (**__dst)();
  size_t v21;
  unint64_t v22;
  void **v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v2 = off_256934428[0];
  v3 = strlen(off_256934428[0]);
  if (v3 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v4 = v3;
  if (v3 >= 0x17)
  {
    v6 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17)
      v6 = v3 | 7;
    v7 = v6 + 1;
    p_dst = (uint64_t (***)())operator new(v6 + 1);
    v21 = v4;
    v22 = v7 | 0x8000000000000000;
    __dst = (uint64_t (**)())p_dst;
    goto LABEL_8;
  }
  HIBYTE(v22) = v3;
  p_dst = &__dst;
  if (v3)
LABEL_8:
    memmove(p_dst, v2, v4);
  *((_BYTE *)p_dst + v4) = 0;
  LOWORD(v19) = 0;
  v8 = sub_23958CE84((uint64_t **)(a1 + 56), (uint64_t)&v19, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst);
  v9 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v8);
  v10 = *v9;
  v11 = (std::__shared_weak_count *)v9[1];
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v18 = ((*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2) - 1;
  v19 = 0;
  __dst = &off_250AF04C8;
  v21 = a1;
  v23 = (void **)&__dst;
  sub_239934078(v10, &v19, &v18, (uint64_t)&__dst);
  v15 = (uint64_t (***)())v23;
  if (v23 == (void **)&__dst)
  {
    v16 = 4;
    v15 = &__dst;
    goto LABEL_21;
  }
  if (v23)
  {
    v16 = 5;
LABEL_21:
    (*v15)[v16]();
  }
  return 1;
}

void sub_239934008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void (**__p)(void), uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  uint64_t v16;

  if (a16 == v16)
  {
    __p[4]();
    _Unwind_Resume(exception_object);
  }
  if (a16)
  {
    (*(void (**)(void))(*(_QWORD *)a16 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239934078(uint64_t result, int *a2, int *a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  v4 = *a2;
  v5 = *a3;
  if (*a2 < *a3)
  {
    v9 = result;
    v10 = *(unsigned __int16 *)(*(_QWORD *)(result + 40) + 2 * v4);
    v11 = *a2;
    while (1)
    {
      v12 = *(unsigned __int16 *)(*(_QWORD *)(v9 + 40) + 2 * v11);
      if (v12 >= v10)
      {
        if (v12 <= v10)
          goto LABEL_3;
        v15 = v5;
        v16 = v11;
        v14 = *(_QWORD *)(a4 + 24);
        if (!v14)
LABEL_12:
          sub_2394172E0();
        (*(void (**)(uint64_t, int *, int *))(*(_QWORD *)v14 + 48))(v14, &v16, &v15);
        if (v11 > --v5)
        {
LABEL_10:
          v15 = v4 - 1;
          v16 = v11;
          sub_239934078(v9, a2, &v15, a4);
          return sub_239934078(v9, &v16, a3, a4);
        }
      }
      else
      {
        v15 = v11;
        v16 = v4;
        v13 = *(_QWORD *)(a4 + 24);
        if (!v13)
          goto LABEL_12;
        (*(void (**)(uint64_t, int *, int *))(*(_QWORD *)v13 + 48))(v13, &v16, &v15);
        ++v4;
LABEL_3:
        if (++v11 > v5)
          goto LABEL_10;
      }
    }
  }
  return result;
}

uint64_t sub_23993418C(size_t a1, int *a2, int *a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v11;
  size_t v12;
  size_t v13;
  uint64_t (***p_dst)();
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t (***v25)();
  uint64_t v26;
  int v27;
  int v28;
  uint64_t (**__dst)();
  size_t v30;
  unint64_t v31;
  void **v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = *a3;
  if (v3 > v4)
    return 0;
  v6 = ((uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2) - 1;
  if (v6 < v3 || v6 < v4)
    return 0;
  v11 = off_256934428[0];
  v12 = strlen(off_256934428[0]);
  if (v12 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v13 = v12;
  if (v12 >= 0x17)
  {
    v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v15 = v12 | 7;
    v16 = v15 + 1;
    p_dst = (uint64_t (***)())operator new(v15 + 1);
    v30 = v13;
    v31 = v16 | 0x8000000000000000;
    __dst = (uint64_t (**)())p_dst;
    goto LABEL_14;
  }
  HIBYTE(v31) = v12;
  p_dst = &__dst;
  if (v12)
LABEL_14:
    memmove(p_dst, v11, v13);
  *((_BYTE *)p_dst + v13) = 0;
  v28 = 0;
  v17 = sub_2399346C0((uint64_t **)(a1 + 56), (uint64_t)&v28, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v31) < 0)
    operator delete(__dst);
  v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v17);
  v19 = *v18;
  v20 = (std::__shared_weak_count *)v18[1];
  if (v20)
  {
    p_shared_owners = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(p_shared_owners);
    while (__stxr(v22 + 1, p_shared_owners));
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v24 = *a2;
  v27 = *a3;
  v28 = v24;
  __dst = &off_250AF0558;
  v30 = a1;
  v32 = (void **)&__dst;
  sub_239933D20(v19, &v28, &v27, (uint64_t)&__dst);
  v25 = (uint64_t (***)())v32;
  if (v32 == (void **)&__dst)
  {
    v26 = 4;
    v25 = &__dst;
    goto LABEL_27;
  }
  if (v32)
  {
    v26 = 5;
LABEL_27:
    (*v25)[v26]();
  }
  return 1;
}

void sub_2399343B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void (**__p)(void), uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  uint64_t v16;

  if (a16 == v16)
  {
    __p[4]();
    _Unwind_Resume(exception_object);
  }
  if (a16)
  {
    (*(void (**)(void))(*(_QWORD *)a16 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239934420(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;

  v2 = (void *)a1[91];
  if (v2)
  {
    a1[92] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[88];
  if (v3)
  {
    a1[89] = v3;
    operator delete(v3);
  }
  v4 = a1[85];
  if (v4)
  {
    v5 = a1[86];
    v6 = (void *)a1[85];
    if (v5 != v4)
    {
      do
      {
        v7 = *(void **)(v5 - 24);
        if (v7)
        {
          *(_QWORD *)(v5 - 16) = v7;
          operator delete(v7);
        }
        v8 = *(void **)(v5 - 96);
        if (v8)
        {
          *(_QWORD *)(v5 - 88) = v8;
          operator delete(v8);
        }
        v9 = *(void **)(v5 - 168);
        if (v9)
        {
          *(_QWORD *)(v5 - 160) = v9;
          operator delete(v9);
        }
        v5 -= 232;
      }
      while (v5 != v4);
      v6 = (void *)a1[85];
    }
    a1[86] = v4;
    operator delete(v6);
  }
  v10 = (void *)a1[79];
  if (v10)
  {
    a1[80] = v10;
    operator delete(v10);
  }
  v11 = a1[76];
  if (v11)
  {
    v12 = a1[77];
    v13 = (void *)a1[76];
    if (v12 != v11)
    {
      v14 = a1[77];
      do
      {
        v16 = *(void **)(v14 - 24);
        v14 -= 24;
        v15 = v16;
        if (v16)
        {
          *(_QWORD *)(v12 - 16) = v15;
          operator delete(v15);
        }
        v12 = v14;
      }
      while (v14 != v11);
      v13 = (void *)a1[76];
    }
    a1[77] = v11;
    operator delete(v13);
  }
  v17 = a1[73];
  if (v17)
  {
    v18 = a1[74];
    v19 = (void *)a1[73];
    if (v18 != v17)
    {
      v20 = a1[74];
      do
      {
        v22 = *(void **)(v20 - 24);
        v20 -= 24;
        v21 = v22;
        if (v22)
        {
          *(_QWORD *)(v18 - 16) = v21;
          operator delete(v21);
        }
        v18 = v20;
      }
      while (v20 != v17);
      v19 = (void *)a1[73];
    }
    a1[74] = v17;
    operator delete(v19);
  }
  v23 = (void *)a1[70];
  if (v23)
  {
    a1[71] = v23;
    operator delete(v23);
  }
  v24 = (void *)a1[67];
  if (v24)
  {
    a1[68] = v24;
    operator delete(v24);
  }
  v25 = (void *)a1[64];
  if (v25)
  {
    a1[65] = v25;
    operator delete(v25);
  }
  v26 = (void *)a1[61];
  if (v26)
  {
    a1[62] = v26;
    operator delete(v26);
  }
  v27 = (void *)a1[58];
  if (v27)
  {
    a1[59] = v27;
    operator delete(v27);
  }
  v28 = (void *)a1[55];
  if (v28)
  {
    a1[56] = v28;
    operator delete(v28);
  }
  v29 = (void *)a1[52];
  if (v29)
  {
    a1[53] = v29;
    operator delete(v29);
  }
  v30 = (void *)a1[49];
  if (v30)
  {
    a1[50] = v30;
    operator delete(v30);
  }
  v31 = (void *)a1[46];
  if (v31)
  {
    a1[47] = v31;
    operator delete(v31);
  }
  v32 = (void *)a1[43];
  if (v32)
  {
    a1[44] = v32;
    operator delete(v32);
  }
  v33 = (void *)a1[40];
  if (v33)
  {
    a1[41] = v33;
    operator delete(v33);
  }
  v34 = (void *)a1[37];
  if (v34)
  {
    a1[38] = v34;
    operator delete(v34);
  }
  v35 = a1[28];
  if (v35)
  {
    v36 = a1[29];
    v37 = (void *)a1[28];
    if (v36 != v35)
    {
      v38 = a1[29];
      do
      {
        v40 = *(void **)(v38 - 24);
        v38 -= 24;
        v39 = v40;
        if (v40)
        {
          *(_QWORD *)(v36 - 16) = v39;
          operator delete(v39);
        }
        v36 = v38;
      }
      while (v38 != v35);
      v37 = (void *)a1[28];
    }
    a1[29] = v35;
    operator delete(v37);
  }
  v41 = (void *)a1[10];
  if (v41)
  {
    a1[11] = v41;
    operator delete(v41);
  }
  v42 = (_QWORD *)a1[3];
  if (v42 == a1)
  {
    v43 = 4;
    v42 = a1;
    goto LABEL_73;
  }
  if (v42)
  {
    v43 = 5;
LABEL_73:
    (*(void (**)(void))(*v42 + 8 * v43))();
  }
  return a1;
}

uint64_t sub_2399346C0(uint64_t **a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  void *v12;
  int v13;
  unsigned __int8 *v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *__s1[2];
  uint64_t v20;

  v3 = *a1;
  v4 = a1[1];
  if (*a1 != v4)
  {
    v6 = 0;
    do
    {
      v8 = *v3;
      if (!*v3)
        goto LABEL_5;
      if (*(char *)(v8 + 31) < 0)
      {
        sub_23941A7F8(__s1, *(void **)(v8 + 8), *(_QWORD *)(v8 + 16));
      }
      else
      {
        v9 = *(_OWORD *)(v8 + 8);
        v20 = *(_QWORD *)(v8 + 24);
        *(_OWORD *)__s1 = v9;
      }
      v10 = HIBYTE(v20);
      if (v20 >= 0)
        v11 = (void *)HIBYTE(v20);
      else
        v11 = __s1[1];
      v12 = (void *)a3[23];
      v13 = (char)v12;
      if ((char)v12 < 0)
        v12 = (void *)*((_QWORD *)a3 + 1);
      if (v11 == v12)
      {
        if (v13 >= 0)
          v14 = a3;
        else
          v14 = *(unsigned __int8 **)a3;
        if (v20 < 0)
        {
          v17 = __s1[0];
          if (memcmp(__s1[0], v14, (size_t)__s1[1]))
          {
            operator delete(v17);
            goto LABEL_5;
          }
LABEL_27:
          v7 = *(_QWORD *)(*v3 + 32) == (_QWORD)sub_2394E686C;
          if ((v10 & 0x80) == 0)
          {
LABEL_4:
            if (v7)
              return v6;
            goto LABEL_5;
          }
          goto LABEL_28;
        }
        if (!HIBYTE(v20))
          goto LABEL_27;
        v15 = __s1;
        v16 = HIBYTE(v20);
        while (*(unsigned __int8 *)v15 == *v14)
        {
          v15 = (void **)((char *)v15 + 1);
          ++v14;
          if (!--v16)
            goto LABEL_27;
        }
      }
      v7 = 0;
      if ((v20 & 0x8000000000000000) == 0)
        goto LABEL_4;
LABEL_28:
      operator delete(__s1[0]);
      if (v7)
        return v6;
LABEL_5:
      v3 += 2;
      v6 = (v6 + 1);
    }
    while (v3 != v4);
  }
  return 0xFFFFFFFFLL;
}

_QWORD *sub_23993481C(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  if (a2 != result)
  {
    v3 = result;
    v4 = (_QWORD *)result[3];
    v5 = (_QWORD *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, v6);
        (*(void (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(_QWORD *, _QWORD *))(v6[0] + 24))(v6, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *))(*result + 24))(result, a2);
        result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, result);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_2399349B0(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_239416A48(a1);
}

uint64_t sub_2399349BC(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v11;
  uint64_t result;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;

  v6 = a1 + 104;
  v19 = *a2;
  v7 = *(_DWORD *)sub_23996252C(a1 + 104, &v19);
  v19 = *a3;
  v8 = *(_DWORD *)sub_23996252C(v6, &v19);
  v19 = v7;
  do
  {
    v9 = *(_DWORD *)(sub_239962518(v6, &v19) + 8);
    v18 = *a3;
    v19 = v9;
    sub_23996259C(v6, &v18, &v19);
  }
  while (v19 != -1 && v19 != v7);
  v19 = v8;
  do
  {
    v11 = *(_DWORD *)(sub_239962518(v6, &v19) + 8);
    v18 = *a2;
    v19 = v11;
    result = sub_23996259C(v6, &v18, &v19);
  }
  while (v19 != -1 && v19 != v8);
  v15 = *(uint64_t **)(a1 + 56);
  v14 = *(uint64_t **)(a1 + 64);
  if (v15 != v14)
  {
    v16 = *a2;
    v17 = *a3;
    do
    {
      result = *v15;
      if (*v15)
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)result + 56))(result, v16, v17);
      v15 += 2;
    }
    while (v15 != v14);
  }
  return result;
}

void sub_239934AEC()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239934B00(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_250AF0480;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_239934B38(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF0480;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239934B58(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v10;
  unsigned int v11;

  v4 = *a2;
  v6 = *(_QWORD *)(a1 + 8);
  v10 = *a3;
  v5 = v10;
  v11 = v4;
  sub_2399349BC(v6, &v11, &v10);
  v7 = *(_QWORD *)(a1 + 16);
  v10 = v5;
  v11 = v4;
  v8 = *(_QWORD *)(v7 + 24);
  if (!v8)
    sub_2394172E0();
  return (*(uint64_t (**)(uint64_t, unsigned int *, unsigned int *))(*(_QWORD *)v8 + 48))(v8, &v11, &v10);
}

void sub_239934BCC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239934BE0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF04C8;
  result[1] = v3;
  return result;
}

uint64_t sub_239934C14(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF04C8;
  a2[1] = v2;
  return result;
}

uint64_t sub_239934C30(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v6;
  unsigned int v7;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a3;
  v7 = *a2;
  v6 = v4;
  return sub_2399349BC(v3, &v7, &v6);
}

void sub_239934C6C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239934C80(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF0510;
  result[1] = v3;
  return result;
}

uint64_t sub_239934CB4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF0510;
  a2[1] = v2;
  return result;
}

uint64_t sub_239934CD0(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v6;
  unsigned int v7;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a3;
  v7 = *a2;
  v6 = v4;
  return sub_2399349BC(v3, &v7, &v6);
}

void sub_239934D0C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239934D20(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF0558;
  result[1] = v3;
  return result;
}

uint64_t sub_239934D54(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF0558;
  a2[1] = v2;
  return result;
}

uint64_t sub_239934D70(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v6;
  unsigned int v7;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a3;
  v7 = *a2;
  v6 = v4;
  return sub_2399349BC(v3, &v7, &v6);
}

uint64_t sub_239934DA8(uint64_t a1, float *a2, _BYTE *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  char v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _QWORD *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  unsigned int v22;
  unsigned int v23;

  v12 = sub_2399F00D8(a4, a5);
  v13 = *a3;
  if (*a3)
  {
    v14 = 0;
    do
    {
      while ((v12 & 1) != 0)
      {
        v12 = sub_2399F0C64(a1, a4, a5);
        v13 = *a3;
        if (++v14 >= v13)
          goto LABEL_6;
      }
      v12 = 0;
      ++v14;
    }
    while (v14 < v13);
  }
LABEL_6:
  v15 = *(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176);
  v16 = *(_QWORD **)v15;
  v17 = *(std::__shared_weak_count **)(v15 + 8);
  if (!v17)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldxr(p_shared_owners);
  while (__stxr(v19 + 1, p_shared_owners));
  do
    v20 = __ldaxr(p_shared_owners);
  while (__stlxr(v20 - 1, p_shared_owners));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    if ((v12 & 1) != 0)
    {
LABEL_12:
      result = sub_2399F03A8(v16, a4, a6, *a2);
      v22 = *a3;
      if (!*a3)
        return result;
      goto LABEL_16;
    }
  }
  else
  {
LABEL_11:
    if ((v12 & 1) != 0)
      goto LABEL_12;
  }
  result = 0;
  v22 = *a3;
  if (!*a3)
    return result;
LABEL_16:
  v23 = 0;
  do
  {
    while ((result & 1) != 0)
    {
      result = sub_2399F0FD8(a1, a4, a5, a6, *a2);
      v22 = *a3;
      if (++v23 >= v22)
        return result;
    }
    result = 0;
    ++v23;
  }
  while (v23 < v22);
  return result;
}

uint64_t sub_239934F1C(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, float *a5, _BYTE *a6, uint64_t *a7, uint64_t *a8, _QWORD *a9)
{
  uint64_t v13;
  char v14;
  uint64_t *v15;
  std::__shared_weak_count *v16;
  uint64_t *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  float32x4_t v24;
  uint64_t v25;
  float32x4_t v26;
  uint64_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  uint64_t *v31;
  std::__shared_weak_count *v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int i;
  uint64_t v43;
  float32x4_t v45;
  float32x4_t v46;

  v13 = (uint64_t)(a2[1] - *a2) >> 2;
  if (v13 == (uint64_t)(*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2 && v13 == (a8[1] - *a8) >> 4)
  {
    v14 = v13 == (uint64_t)(a9[1] - *a9) >> 4;
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v16 = (std::__shared_weak_count *)v15[1];
    v43 = *v15;
    if (!v16)
      goto LABEL_10;
  }
  else
  {
    v14 = 0;
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v16 = (std::__shared_weak_count *)v17[1];
    v43 = *v17;
    if (!v16)
      goto LABEL_10;
  }
  p_shared_owners = (unint64_t *)&v16->__shared_owners_;
  do
    v19 = __ldxr(p_shared_owners);
  while (__stxr(v19 + 1, p_shared_owners));
  do
    v20 = __ldaxr(p_shared_owners);
  while (__stlxr(v20 - 1, p_shared_owners));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    v21 = *a8;
    if (a8[1] == *a8)
      goto LABEL_26;
    goto LABEL_11;
  }
LABEL_10:
  v21 = *a8;
  if (a8[1] == *a8)
    goto LABEL_26;
LABEL_11:
  v22 = 0;
  v23 = 0;
  do
  {
    v25 = *(unsigned int *)(*a2 + 4 * v22);
    if ((_DWORD)v25 == -1)
    {
      if ((v14 & 1) != 0
        && (v37 = 16 * v22, sub_2399EFFC8((float *)(*a7 + 16 * v22), (float32x4_t *)(v21 + 16 * v22))))
      {
        v14 = sub_2399F026C((float32x4_t *)(*(_QWORD *)(v43 + 40) + v37), (float *)(*a7 + v37), (float32x4_t *)(*a9 + v37), *a5);
      }
      else
      {
        v14 = 0;
      }
    }
    else
    {
      v26 = *(float32x4_t *)(*a3 + 16 * v25);
      v27 = 16 * v22;
      v28 = *(float32x4_t *)(*a7 + 16 * v22);
      v29 = vmulq_f32(v26, v28);
      v29.i32[3] = 0;
      *(float32x4_t *)(v21 + 16 * v22) = vsubq_f32(v26, vmulq_n_f32(v28, vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v29, v29))));
      v30 = *(float32x4_t *)(*a4 + 16 * *(unsigned int *)(*a2 + 4 * v22));
      v31 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v33 = *v31;
      v32 = (std::__shared_weak_count *)v31[1];
      if (v32)
      {
        v34 = (unint64_t *)&v32->__shared_owners_;
        do
          v35 = __ldxr(v34);
        while (__stxr(v35 + 1, v34));
        do
          v36 = __ldaxr(v34);
        while (__stlxr(v36 - 1, v34));
        if (!v36)
        {
          v45 = v30;
          v46 = v28;
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
          v30 = v45;
          v28 = v46;
        }
      }
      v24 = vmulq_f32(v28, vsubq_f32(v30, *(float32x4_t *)(*(_QWORD *)(v33 + 40) + v27)));
      v24.i32[3] = 0;
      *(float32x4_t *)(*a9 + v27) = vsubq_f32(v30, vmulq_n_f32(v28, vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v24, v24))));
    }
    v21 = *a8;
    v22 = ++v23;
  }
  while (v23 < (unint64_t)((a8[1] - *a8) >> 4));
LABEL_26:
  v38 = *a6;
  if (*a6)
  {
    v39 = 0;
    do
    {
      while ((v14 & 1) != 0)
      {
        v14 = sub_2399F0C64(a1, a7, a8);
        v38 = *a6;
        if (++v39 >= v38)
          goto LABEL_31;
      }
      v14 = 0;
      ++v39;
    }
    while (v39 < v38);
LABEL_31:
    if (v38)
    {
      for (i = 0; i < v38; ++i)
      {
        while ((v14 & 1) != 0)
        {
          v14 = sub_2399F0FD8(a1, a7, a8, a9, *a5);
          v38 = *a6;
          if (++i >= v38)
            return v14 & 1;
        }
        v14 = 0;
      }
    }
  }
  return v14 & 1;
}

uint64_t sub_239935244(_QWORD *a1, char **a2, std::string *__str, uint64_t a4, unsigned __int8 a5)
{
  float v9;
  uint64_t v10;
  unsigned int v12;
  std::string *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  unsigned int v20;
  float v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unsigned int v28;
  double v29;
  unint64_t v30;
  unsigned int *v31;
  uint64_t v32;
  uint64_t *v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  float32x4_t v46;
  float32x4_t v47;
  double v48;
  double v49;
  _DWORD *v50;
  char v51;
  uint64_t v52;
  double v53;
  unint64_t v54;
  unsigned int v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  _DWORD *v60;
  _OWORD *v61;
  _BYTE *v62;
  _DWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  uint64_t v73;
  unint64_t v74;
  _OWORD *v75;
  double v76;
  uint64_t v77;
  _OWORD *v78;
  int v79;
  char *v80;
  void *v81;
  char *v82;
  int64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _BYTE *v88;
  _DWORD *v89;
  unint64_t v90;
  char *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  char *v96;
  uint64_t v97;
  __int128 v98;
  unint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  _DWORD *v106;
  unsigned int *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  std::__shared_weak_count *v118;
  unint64_t *v119;
  unint64_t v120;
  unint64_t v121;
  float32x4_t v122;
  float32x4_t v123;
  double v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  unint64_t v128;
  int64_t v129;
  char *v130;
  char *v131;
  void *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  std::chrono::system_clock::time_point v136;
  std::chrono::system_clock::time_point v137;
  std::chrono::system_clock::time_point v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unsigned int v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  void *v156;
  char *v157;
  void *v158;
  void *v159;
  char *v160;
  char *v161;
  void *v162;
  char *v163;
  void *v164;
  void *v165;
  char *v166;
  char *v167;
  void *v168;
  char *v169;
  void *v170;
  void *v171;
  char *v172;
  char *v173;
  void *v174;
  char *v175;
  void *v176;
  void *v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  std::__shared_weak_count *v181;
  unint64_t *v182;
  unint64_t v183;
  uint64_t v184;
  std::chrono::system_clock::time_point v185;
  std::chrono::system_clock::time_point v186;
  __n128 v187;
  unint64_t v188;
  unsigned int v189;
  uint64_t *v190;
  std::__shared_weak_count *v191;
  uint64_t v192;
  unint64_t *v193;
  unint64_t v194;
  unint64_t v195;
  std::chrono::system_clock::time_point v196;
  int v197;
  std::chrono::system_clock::time_point v198;
  std::chrono::system_clock::time_point v199;
  char *v200;
  char *v201;
  void *v202;
  char *v203;
  void *v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  uint64_t v209;
  void *v210;
  void *v211;
  char *v212;
  size_t v213;
  void *v214;
  void *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unsigned int v219;
  char *v220;
  size_t v221;
  size_t v222;
  void *p_dst;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  size_t v227;
  size_t v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;
  int v232;
  uint64_t v233;
  unsigned int v234;
  uint64_t v235;
  uint64_t *v236;
  uint64_t v237;
  std::__shared_weak_count *v238;
  unint64_t *v239;
  unint64_t v240;
  unint64_t v241;
  _QWORD *v242;
  unint64_t v243;
  uint64_t *v244;
  uint64_t v245;
  std::__shared_weak_count *v246;
  unint64_t *v247;
  unint64_t v248;
  unint64_t v249;
  int v250;
  uint64_t *v251;
  uint64_t v252;
  std::__shared_weak_count *v253;
  unint64_t *v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t *v257;
  uint64_t v258;
  std::__shared_weak_count *v259;
  unint64_t *v260;
  unint64_t v261;
  unint64_t v262;
  int v263;
  uint64_t *v264;
  uint64_t v265;
  std::__shared_weak_count *v266;
  unint64_t *v267;
  unint64_t v268;
  unint64_t v269;
  uint64_t *v270;
  uint64_t v271;
  std::__shared_weak_count *v272;
  unint64_t *v273;
  unint64_t v274;
  unint64_t v275;
  int v276;
  uint64_t *v277;
  uint64_t v278;
  std::__shared_weak_count *v279;
  unint64_t *v280;
  unint64_t v281;
  unint64_t v282;
  std::chrono::system_clock::time_point v283;
  std::chrono::system_clock::time_point v284;
  char *v285;
  size_t v286;
  size_t v287;
  uint64_t v288;
  void *v289;
  uint64_t v290;
  uint64_t v291;
  std::chrono::system_clock::time_point v292;
  uint64_t v293;
  uint64_t v294;
  char **v295;
  char **v296;
  int v297;
  float32x4_t v299;
  float32x4_t v300;
  std::chrono::system_clock::time_point v301;
  void *v302;
  char *v303;
  uint64_t v304;
  void *v305;
  char *v306;
  uint64_t v307;
  void *v308;
  void *v309;
  uint64_t v310;
  void *v311;
  char *v312;
  uint64_t v313;
  char v314;
  void *v315;
  char *v316;
  uint64_t v317;
  void *v318;
  char *v319;
  uint64_t v320;
  void *v321;
  char *v322;
  uint64_t v323;
  void *v324;
  char *v325;
  uint64_t v326;
  __int128 v327;
  uint64_t v328;
  void *v329[2];
  char *v330;
  void *v331[2];
  char *v332;
  void *__p[4];
  void *v334;
  unint64_t v335;
  unint64_t v336;
  void *__dst;
  char *v338;
  unint64_t v339;
  float v340;
  unsigned int v341;
  char *v342;
  uint64_t v343;
  uint64_t *v344;
  uint64_t *v345[6];
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  unsigned int v352;
  unsigned int v353;

  if (a1[14] == a1[13])
    return 0;
  if (a1[20] == a1[19])
    return 0;
  if (a1[17] == a1[16])
    return 0;
  v9 = std::stof(__str, 0);
  if (v9 < 0.00000001)
    return 0;
  sub_23996301C((uint64_t)&v342);
  sub_23995F9AC(&v342, (uint64_t)a1);
  v341 = -1;
  strcpy((char *)__p, "h:is_quadmesh_diagonal");
  HIBYTE(__p[2]) = 22;
  LOBYTE(__dst) = 0;
  v12 = sub_23993A208(&v344, (uint64_t)&__dst, (unsigned __int8 *)__p);
  v341 = v12;
  if (SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
  if (v12 == -1)
  {
    strcpy((char *)__p, "h:is_quadmesh_diagonal");
    HIBYTE(__p[2]) = 22;
    sub_23992B82C(&v342, &v341, (uint64_t)__p);
    if (SHIBYTE(__p[2]) < 0)
      operator delete(__p[0]);
  }
  v297 = a5;
  v340 = 0.0;
  v13 = __str;
  if (__str[1].__r_.__value_.__s.__data_[2])
  {
    v14 = 1;
    v10 = 1;
    goto LABEL_290;
  }
  v15 = v347;
  v16 = v346;
  if (v351 == v350)
  {
    v19 = 0.0;
  }
  else
  {
    v17 = 0;
    if ((unint64_t)((v351 - v350) >> 2) <= 1)
      v18 = 1;
    else
      v18 = (v351 - v350) >> 2;
    v19 = 0.0;
    do
    {
      LODWORD(__p[0]) = v17;
      v19 = v19 + sub_239932994((uint64_t)&v342, (unsigned int *)__p);
      ++v17;
    }
    while (v18 != v17);
  }
  v20 = (float)(v9 * (float)(unint64_t)((v15 - v16) >> 2));
  if (v20 <= 1)
    v20 = 1;
  v21 = sqrtf(v19 / (float)v20);
  v340 = v21;
  if (a5)
    *(float *)(a4 + 40) = v21;
  if (!__str[1].__r_.__value_.__s.__data_[1])
    goto LABEL_154;
  v293 = a4;
  v295 = a2;
  v22 = v349;
  v338 = 0;
  v339 = 0;
  __dst = 0;
  if (v349 == v348)
  {
    v24 = 0;
    v26 = 0;
    v30 = 0;
    v334 = 0;
    v335 = 0;
    v29 = 0.0;
    v25 = v349;
    v336 = 0;
  }
  else
  {
    v23 = 0xCCCCCCCCCCCCCCCDLL * ((v349 - v348) >> 2);
    if (v23 >> 61)
      sub_2394189F8();
    v24 = (char *)operator new(0x6666666666666668 * ((v349 - v348) >> 2));
    __dst = v24;
    v339 = (unint64_t)&v24[8 * v23];
    bzero(v24, 8 * v23);
    v338 = &v24[8 * v23];
    v334 = operator new(8 * (((v23 - 1) >> 6) + 1));
    v335 = 0;
    v336 = ((v23 - 1) >> 6) + 1;
    sub_23942D8C8(&v334, v23, 0);
    v25 = v349;
    v22 = v348;
    v26 = v334;
    if (v349 == v348)
    {
      v30 = 0xCCCCCCCCCCCCCCCDLL * ((v349 - v348) >> 2);
      v29 = 0.0;
      v25 = v348;
    }
    else
    {
      v27 = 0;
      v28 = 0;
      v29 = 0.0;
      do
      {
        if ((v26[v27 >> 6] & (1 << v27)) == 0)
        {
          LODWORD(__p[0]) = v28;
          v31 = (unsigned int *)sub_239962518((uint64_t)&v346, (unsigned int *)__p);
          v32 = *(unsigned int *)(sub_239962518((uint64_t)&v346, v31) + 12);
          v33 = (uint64_t *)(v343 + 16 * v352);
          v35 = *v33;
          v34 = (std::__shared_weak_count *)v33[1];
          if (v34)
          {
            p_shared_owners = (unint64_t *)&v34->__shared_owners_;
            do
              v37 = __ldxr(p_shared_owners);
            while (__stxr(v37 + 1, p_shared_owners));
            do
              v38 = __ldaxr(p_shared_owners);
            while (__stlxr(v38 - 1, p_shared_owners));
            if (!v38)
            {
              ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
              std::__shared_weak_count::__release_weak(v34);
            }
          }
          v299 = *(float32x4_t *)(*(_QWORD *)(v35 + 40) + 16 * v32);
          v39 = *(unsigned int *)(sub_239962518((uint64_t)&v346, (unsigned int *)__p) + 12);
          v40 = (uint64_t *)(v343 + 16 * v352);
          v42 = *v40;
          v41 = (std::__shared_weak_count *)v40[1];
          if (v41)
          {
            v43 = (unint64_t *)&v41->__shared_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            do
              v45 = __ldaxr(v43);
            while (__stlxr(v45 - 1, v43));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          v46 = vsubq_f32(v299, *(float32x4_t *)(*(_QWORD *)(v42 + 40) + 16 * v39));
          v47 = vmulq_f32(v46, v46);
          v47.i32[3] = 0;
          v24 = (char *)__dst;
          v48 = sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v47, v47)));
          *((double *)__dst + v27) = v48;
          LODWORD(__p[0]) = v28;
          *(double *)&v24[8 * *(unsigned int *)sub_239962518((uint64_t)&v346, (unsigned int *)__p)] = v48;
          v49 = *(double *)&v24[8 * v27];
          *((_QWORD *)v334 + (v27 >> 6)) |= 1 << v27;
          LODWORD(__p[0]) = v28;
          v50 = (_DWORD *)sub_239962518((uint64_t)&v346, (unsigned int *)__p);
          v29 = v29 + v49;
          v26 = v334;
          *(_QWORD *)((char *)v334 + (((unint64_t)*v50 >> 3) & 0x1FFFFFF8)) |= 1 << *v50;
          v25 = v349;
          v22 = v348;
        }
        v30 = 0xCCCCCCCCCCCCCCCDLL * ((v25 - v22) >> 2);
        v27 = ++v28;
      }
      while (v30 > v28);
    }
  }
  v51 = v335;
  if (v335)
  {
    v52 = v335 >> 6;
    if (v335 >= 0x40)
      bzero(v26, 8 * (v335 >> 6));
    if ((v51 & 0x3F) != 0)
      v26[v52] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v51 & 0x3F));
  }
  if ((v29 + v29) / (double)v30 + (v29 + v29) / (double)v30 >= v340 * 0.5)
    v53 = v340 * 0.5;
  else
    v53 = (v29 + v29) / (double)v30 + (v29 + v29) / (double)v30;
  memset(__p, 0, 24);
  if (v25 == v22)
    goto LABEL_150;
  v54 = 0;
  v55 = 1;
  do
  {
    v56 = v54 >> 6;
    v57 = 1 << v54;
    v58 = v26[v54 >> 6];
    if ((v58 & (1 << v54)) == 0)
    {
      v59 = *(double *)&v24[8 * v54];
      if (v59 > v53)
      {
        LODWORD(v331[0]) = v55 - 1;
        v331[1] = *(void **)&v59;
        sub_2399372B0((char **)__p, v331);
        v26 = v334;
        v58 = *((_QWORD *)v334 + v56);
      }
      v26[v56] = v58 | v57;
      LODWORD(v331[0]) = v55 - 1;
      v60 = (_DWORD *)sub_239962518((uint64_t)&v346, (unsigned int *)v331);
      v26 = v334;
      *(_QWORD *)((char *)v334 + (((unint64_t)*v60 >> 3) & 0x1FFFFFF8)) |= 1 << *v60;
      v25 = v349;
      v22 = v348;
    }
    v54 = v55++;
  }
  while (0xCCCCCCCCCCCCCCCDLL * ((v25 - v22) >> 2) > v54);
  v61 = __p[0];
  v62 = __p[1];
  if (__p[0] == __p[1])
    goto LABEL_148;
  while (2)
  {
    *(_OWORD *)v329 = *v61;
    v64 = v62 - (_BYTE *)v61;
    if (v62 - (_BYTE *)v61 >= 17)
    {
      v65 = 0;
      v66 = v64 >> 4;
      *(_OWORD *)v331 = *v61;
      v67 = (unint64_t)((v64 >> 4) - 2) >> 1;
      v68 = v61;
      do
      {
        v69 = v68;
        v68 += v65 + 1;
        v70 = 2 * v65;
        v65 = (2 * v65) | 1;
        v71 = v70 + 2;
        if (v71 < v66 && *((double *)v68 + 1) < *((double *)v68 + 3))
        {
          ++v68;
          v65 = v71;
        }
        *v69 = *v68;
      }
      while (v65 <= v67);
      v72 = v62 - 16;
      if (v68 == (_OWORD *)(v62 - 16))
      {
        *v68 = *(_OWORD *)v331;
      }
      else
      {
        *v68 = *v72;
        *v72 = *(_OWORD *)v331;
        v73 = (char *)v68 - (char *)v61 + 16;
        if (v73 >= 17)
        {
          v74 = (((unint64_t)v73 >> 4) - 2) >> 1;
          v75 = &v61[v74];
          v76 = *((double *)v68 + 1);
          if (*((double *)v75 + 1) < v76)
          {
            v77 = *(_QWORD *)v68;
            do
            {
              v78 = v68;
              v68 = v75;
              *v78 = *v75;
              if (!v74)
                break;
              v74 = (v74 - 1) >> 1;
              v75 = &v61[v74];
            }
            while (*((double *)v75 + 1) < v76);
            *(_QWORD *)v68 = v77;
            *((double *)v68 + 1) = v76;
          }
        }
      }
      v62 = __p[1];
    }
    v62 -= 16;
    __p[1] = v62;
    LODWORD(v324) = -1;
    if (!sub_23996428C((uint64_t)&v342, (unsigned int *)v329, (unsigned int *)&v324, 0))
      goto LABEL_68;
    v331[0] = 0;
    v331[1] = 0;
    v332 = 0;
    sub_239962B1C((uint64_t)&v327, &v346, (unsigned int *)&v324);
    v79 = sub_239962B44(&v327);
    v80 = 0;
    while (v79 != -1)
    {
      if (v80 < v332)
      {
        *(_DWORD *)v80 = v79;
        v81 = v80 + 4;
        goto LABEL_87;
      }
      v82 = (char *)v331[0];
      v83 = v80 - (char *)v331[0];
      v84 = (v80 - (char *)v331[0]) >> 2;
      v85 = v84 + 1;
      if ((unint64_t)(v84 + 1) >> 62)
        sub_2394189F8();
      v86 = v332 - (char *)v331[0];
      if ((v332 - (char *)v331[0]) >> 1 > v85)
        v85 = v86 >> 1;
      if ((unint64_t)v86 >= 0x7FFFFFFFFFFFFFFCLL)
        v87 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v87 = v85;
      if (v87)
      {
        if (v87 >> 62)
          sub_239418A80();
        v88 = operator new(4 * v87);
        v89 = &v88[4 * v84];
        *v89 = v79;
        v81 = v89 + 1;
        if (v80 == v82)
        {
LABEL_105:
          v331[0] = v89;
          v331[1] = v81;
          v332 = &v88[4 * v87];
          if (!v80)
            goto LABEL_87;
LABEL_106:
          operator delete(v80);
          goto LABEL_87;
        }
      }
      else
      {
        v88 = 0;
        v89 = (_DWORD *)(4 * v84);
        *(_DWORD *)(4 * v84) = v79;
        v81 = (void *)(4 * v84 + 4);
        if (v80 == v82)
          goto LABEL_105;
      }
      v90 = v80 - 4 - v82;
      if (v90 < 0xBC)
      {
        v91 = v80;
        goto LABEL_101;
      }
      if (&v88[v83 - 4 - (v90 & 0xFFFFFFFFFFFFFFFCLL)] > &v88[v83 - 4])
      {
        v91 = v80;
        do
        {
LABEL_101:
          v92 = *((_DWORD *)v91 - 1);
          v91 -= 4;
          *--v89 = v92;
        }
        while (v91 != v82);
        goto LABEL_102;
      }
      if (&v80[-(v90 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v80 - 4)
      {
        v91 = v80;
        goto LABEL_101;
      }
      if ((unint64_t)(v80 - v88 - v83) < 0x20)
      {
        v91 = v80;
        goto LABEL_101;
      }
      v93 = (v90 >> 2) + 1;
      v94 = 4 * (v93 & 0x7FFFFFFFFFFFFFF8);
      v91 = &v80[-v94];
      v89 = (_DWORD *)((char *)v89 - v94);
      v95 = &v88[4 * v84 - 16];
      v96 = v80 - 16;
      v97 = v93 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v98 = *(_OWORD *)v96;
        *(v95 - 1) = *((_OWORD *)v96 - 1);
        *v95 = v98;
        v95 -= 2;
        v96 -= 32;
        v97 -= 8;
      }
      while (v97);
      if (v93 != (v93 & 0x7FFFFFFFFFFFFFF8))
        goto LABEL_101;
LABEL_102:
      v80 = (char *)v331[0];
      v331[0] = v89;
      v331[1] = v81;
      v332 = &v88[4 * v87];
      if (v80)
        goto LABEL_106;
LABEL_87:
      v331[1] = v81;
      v79 = sub_239962B44(&v327);
      v80 = (char *)v81;
    }
    v99 = LODWORD(v329[0]);
    v100 = &v344[2 * v353];
    v101 = *v100;
    v102 = (std::__shared_weak_count *)v100[1];
    if (v102)
    {
      v103 = (unint64_t *)&v102->__shared_owners_;
      do
        v104 = __ldxr(v103);
      while (__stxr(v104 + 1, v103));
      do
        v105 = __ldaxr(v103);
      while (__stlxr(v105 - 1, v103));
      if (!v105)
      {
        ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
        std::__shared_weak_count::__release_weak(v102);
      }
    }
    if (((*(_QWORD *)(*(_QWORD *)(v101 + 40) + ((v99 >> 3) & 0x1FFFFFF8)) >> v99) & 1) == 0)
    {
      sub_239962518((uint64_t)&v346, (unsigned int *)v329);
      v125 = (std::__shared_weak_count *)v344[2 * v353 + 1];
      if (v125)
      {
        v126 = (unint64_t *)&v125->__shared_owners_;
        do
          v127 = __ldxr(v126);
        while (__stxr(v127 + 1, v126));
        do
          v128 = __ldaxr(v126);
        while (__stlxr(v128 - 1, v126));
        if (!v128)
        {
          ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
          std::__shared_weak_count::__release_weak(v125);
        }
      }
    }
    v63 = v331[0];
    v106 = v331[1];
    if (v331[0] == v331[1])
    {
      if (!v331[0])
        goto LABEL_67;
LABEL_66:
      operator delete(v63);
      goto LABEL_67;
    }
    do
    {
      v107 = (unsigned int *)sub_239962518((uint64_t)&v346, v63);
      v108 = *(unsigned int *)(sub_239962518((uint64_t)&v346, v107) + 12);
      v109 = (uint64_t *)(v343 + 16 * v352);
      v110 = *v109;
      v111 = (std::__shared_weak_count *)v109[1];
      if (v111)
      {
        v112 = (unint64_t *)&v111->__shared_owners_;
        do
          v113 = __ldxr(v112);
        while (__stxr(v113 + 1, v112));
        do
          v114 = __ldaxr(v112);
        while (__stlxr(v114 - 1, v112));
        if (!v114)
        {
          ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
          std::__shared_weak_count::__release_weak(v111);
        }
      }
      v300 = *(float32x4_t *)(*(_QWORD *)(v110 + 40) + 16 * v108);
      v115 = *(unsigned int *)(sub_239962518((uint64_t)&v346, v63) + 12);
      v116 = (uint64_t *)(v343 + 16 * v352);
      v117 = *v116;
      v118 = (std::__shared_weak_count *)v116[1];
      if (v118)
      {
        v119 = (unint64_t *)&v118->__shared_owners_;
        do
          v120 = __ldxr(v119);
        while (__stxr(v120 + 1, v119));
        do
          v121 = __ldaxr(v119);
        while (__stlxr(v121 - 1, v119));
        if (!v121)
        {
          ((void (*)(std::__shared_weak_count *))v118->__on_zero_shared)(v118);
          std::__shared_weak_count::__release_weak(v118);
        }
      }
      v122 = vsubq_f32(v300, *(float32x4_t *)(*(_QWORD *)(v117 + 40) + 16 * v115));
      v123 = vmulq_f32(v122, v122);
      v123.i32[3] = 0;
      v124 = sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v123, v123)));
      if (v53 < v124)
      {
        LODWORD(v327) = *v63;
        *((double *)&v327 + 1) = v124;
        sub_2399372B0((char **)__p, &v327);
      }
      ++v63;
    }
    while (v63 != v106);
    v63 = v331[0];
    if (v331[0])
      goto LABEL_66;
LABEL_67:
    v62 = __p[1];
LABEL_68:
    v61 = __p[0];
    if (__p[0] != v62)
      continue;
    break;
  }
LABEL_148:
  if (v62)
  {
    __p[1] = v62;
    operator delete(v62);
  }
LABEL_150:
  a2 = v295;
  if (v334)
    operator delete(v334);
  a4 = v293;
  if (__dst)
    operator delete(__dst);
LABEL_154:
  memset(__p, 0, 24);
  v129 = v347 - v346;
  if (v347 == v346)
  {
    __dst = 0;
    v338 = 0;
    v339 = 0;
    v334 = 0;
    v335 = 0;
    v336 = 0;
    v331[0] = 0;
    v331[1] = 0;
    v332 = 0;
    v329[1] = 0;
    v330 = 0;
    v329[0] = 0;
    v134 = v351 - v350;
    if (v351 == v350)
      goto LABEL_161;
    goto LABEL_159;
  }
  if ((unint64_t)v129 >= 0x3FFFFFFFFFFFFFFDLL)
    sub_2394189F8();
  v130 = (char *)operator new(4 * v129);
  __p[0] = v130;
  __p[2] = &v130[16 * (v129 >> 2)];
  bzero(v130, 4 * v129);
  __p[1] = &v130[4 * v129];
  v131 = (char *)operator new(4 * v129);
  __dst = v131;
  v339 = (unint64_t)&v131[16 * (v129 >> 2)];
  bzero(v131, 4 * v129);
  v338 = &v131[4 * v129];
  v132 = operator new(4 * v129);
  v334 = v132;
  v336 = (unint64_t)v132 + 16 * (v129 >> 2);
  bzero(v132, 4 * v129);
  v335 = (unint64_t)v132 + 4 * v129;
  v133 = (char *)operator new(v129);
  v331[0] = v133;
  v332 = &v133[4 * (v129 >> 2)];
  bzero(v133, v129);
  v331[1] = &v133[v129];
  v329[1] = 0;
  v330 = 0;
  v329[0] = 0;
  v134 = v351 - v350;
  if (v351 != v350)
  {
LABEL_159:
    if ((unint64_t)v134 >= 0x3FFFFFFFFFFFFFFDLL)
      sub_2394189F8();
    v135 = (char *)operator new(4 * v134);
    v329[0] = v135;
    v330 = &v135[16 * (v134 >> 2)];
    bzero(v135, 4 * v134);
    v329[1] = &v135[4 * v134];
  }
LABEL_161:
  sub_2399DECBC(&v342, &v334, v329);
  sub_2399DEDD4((uint64_t)&v342, v331);
  v136.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (__str[1].__r_.__value_.__s.__data_[0])
  {
    v137.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    v327 = 0uLL;
    v328 = 0;
    v324 = 0;
    v325 = 0;
    v326 = 0;
    v321 = 0;
    v322 = 0;
    v323 = 0;
    v318 = 0;
    v319 = 0;
    v320 = 0;
    v315 = 0;
    v316 = 0;
    v317 = 0;
    sub_2399DF160((uint64_t)&v342, (uint64_t *)&v334, (uint64_t *)v331, &v327, (uint64_t)&v324, (uint64_t)&v321, (uint64_t)&v318, (uint64_t)&v315);
    v138.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (v297)
      *(double *)a4 = (double)(v138.__d_.__rep_ - v137.__d_.__rep_) / 1000000.0;
    v314 = 6;
    v311 = 0;
    v312 = 0;
    v313 = 0;
    v308 = 0;
    v309 = 0;
    v310 = 0;
    v305 = 0;
    v306 = 0;
    v307 = 0;
    v302 = 0;
    v303 = 0;
    v304 = 0;
    v139 = v327;
    if (*((_QWORD *)&v327 + 1) == (_QWORD)v327)
    {
      v153 = 0;
      v152 = 0;
    }
    else
    {
      v140 = 0;
      v141 = (uint64_t)(*((_QWORD *)&v327 + 1) - v327) >> 4;
      v142 = 1;
      do
      {
        v143 = v141 + ~v140;
        v144 = *(_QWORD *)(v139 + 16 * v143);
        v145 = (uint64_t *)((char *)v324 + 24 * v143);
        if (v142 == 1)
        {
          v146 = (uint64_t)(*(_QWORD *)(v144 + 112) - *(_QWORD *)(v144 + 104)) >> 2;
          v147 = (v306 - (_BYTE *)v305) >> 4;
          if (v146 <= v147)
          {
            if (v146 < v147)
              v306 = (char *)v305 + 16 * v146;
          }
          else
          {
            sub_239932734((char **)&v305, v146 - v147);
            v146 = (uint64_t)(*(_QWORD *)(v144 + 112) - *(_QWORD *)(v144 + 104)) >> 2;
          }
          v150 = (v303 - (_BYTE *)v302) >> 4;
          if (v146 > v150)
          {
            sub_239932734((char **)&v302, v146 - v150);
          }
          else if (v146 < v150)
          {
            v303 = (char *)v302 + 16 * v146;
          }
          sub_239934DA8(v144, &v340, &v314, v145, (uint64_t *)&v302, (uint64_t *)&v305);
        }
        else
        {
          sub_23945D23C(&v308, (char *)v302, v303, (v303 - (_BYTE *)v302) >> 4);
          sub_23945D23C(&v311, (char *)v305, v306, (v306 - (_BYTE *)v305) >> 4);
          v148 = (uint64_t)(*(_QWORD *)(v144 + 112) - *(_QWORD *)(v144 + 104)) >> 2;
          v149 = (v303 - (_BYTE *)v302) >> 4;
          if (v148 <= v149)
          {
            if (v148 < v149)
              v303 = (char *)v302 + 16 * v148;
          }
          else
          {
            sub_239932734((char **)&v302, v148 - v149);
            v148 = (uint64_t)(*(_QWORD *)(v144 + 112) - *(_QWORD *)(v144 + 104)) >> 2;
          }
          v151 = (v306 - (_BYTE *)v305) >> 4;
          if (v148 <= v151)
          {
            if (v148 < v151)
              v306 = (char *)v305 + 16 * v148;
          }
          else
          {
            sub_239932734((char **)&v305, v148 - v151);
          }
          sub_239934F1C(v144, (_QWORD *)v318 + 3 * (((uint64_t)(*((_QWORD *)&v327 + 1) - v327) >> 4) - v140), &v308, &v311, &v340, &v314, v145, (uint64_t *)&v302, &v305);
        }
        v140 = v142;
        v139 = v327;
        v141 = (uint64_t)(*((_QWORD *)&v327 + 1) - v327) >> 4;
        ++v142;
      }
      while (v141 > v140);
      v152 = (char *)v302;
      v153 = v303;
    }
    sub_23945D23C(&v308, v152, v153, (v153 - v152) >> 4);
    sub_23945D23C(&v311, (char *)v305, v306, (v306 - (_BYTE *)v305) >> 4);
    sub_239934F1C((uint64_t)&v342, v318, &v308, &v311, &v340, &v314, (uint64_t *)&v334, (uint64_t *)&__dst, __p);
    if (v302)
    {
      v303 = (char *)v302;
      operator delete(v302);
    }
    if (v305)
    {
      v306 = (char *)v305;
      operator delete(v305);
    }
    if (v308)
    {
      v309 = v308;
      operator delete(v308);
    }
    if (v311)
    {
      v312 = (char *)v311;
      operator delete(v311);
    }
    v154 = (char *)v315;
    if (v315)
    {
      v155 = v316;
      v156 = v315;
      if (v316 != v315)
      {
        v157 = v316;
        do
        {
          v159 = (void *)*((_QWORD *)v157 - 3);
          v157 -= 24;
          v158 = v159;
          if (v159)
          {
            *((_QWORD *)v155 - 2) = v158;
            operator delete(v158);
          }
          v155 = v157;
        }
        while (v157 != v154);
        v156 = v315;
      }
      v316 = v154;
      operator delete(v156);
    }
    v160 = (char *)v318;
    if (v318)
    {
      v161 = v319;
      v162 = v318;
      if (v319 != v318)
      {
        v163 = v319;
        do
        {
          v165 = (void *)*((_QWORD *)v163 - 3);
          v163 -= 24;
          v164 = v165;
          if (v165)
          {
            *((_QWORD *)v161 - 2) = v164;
            operator delete(v164);
          }
          v161 = v163;
        }
        while (v163 != v160);
        v162 = v318;
      }
      v319 = v160;
      operator delete(v162);
    }
    v166 = (char *)v321;
    if (v321)
    {
      v167 = v322;
      v168 = v321;
      if (v322 != v321)
      {
        v169 = v322;
        do
        {
          v171 = (void *)*((_QWORD *)v169 - 3);
          v169 -= 24;
          v170 = v171;
          if (v171)
          {
            *((_QWORD *)v167 - 2) = v170;
            operator delete(v170);
          }
          v167 = v169;
        }
        while (v169 != v166);
        v168 = v321;
      }
      v322 = v166;
      operator delete(v168);
    }
    v172 = (char *)v324;
    if (v324)
    {
      v173 = v325;
      v174 = v324;
      if (v325 != v324)
      {
        v175 = v325;
        do
        {
          v177 = (void *)*((_QWORD *)v175 - 3);
          v175 -= 24;
          v176 = v177;
          if (v177)
          {
            *((_QWORD *)v173 - 2) = v176;
            operator delete(v176);
          }
          v173 = v175;
        }
        while (v175 != v172);
        v174 = v324;
      }
      v325 = v172;
      operator delete(v174);
    }
    v178 = v327;
    if ((_QWORD)v327)
    {
      v179 = *((_QWORD *)&v327 + 1);
      v180 = (void *)v327;
      if (*((_QWORD *)&v327 + 1) != (_QWORD)v327)
      {
        do
        {
          v181 = *(std::__shared_weak_count **)(v179 - 8);
          if (v181)
          {
            v182 = (unint64_t *)&v181->__shared_owners_;
            do
              v183 = __ldaxr(v182);
            while (__stlxr(v183 - 1, v182));
            if (!v183)
            {
              ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
              std::__shared_weak_count::__release_weak(v181);
            }
          }
          v179 -= 16;
        }
        while (v179 != v178);
        v180 = (void *)v327;
      }
      *((_QWORD *)&v327 + 1) = v178;
      operator delete(v180);
    }
  }
  else
  {
    LOBYTE(v327) = 10;
    sub_239934DA8((uint64_t)&v342, &v340, &v327, (uint64_t *)&v334, (uint64_t *)&__dst, (uint64_t *)__p);
  }
  v184 = (uint64_t)a2;
  v185.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (v297)
    *(double *)(a4 + 8) = (double)(v185.__d_.__rep_ - v136.__d_.__rep_) / 1000000.0;
  v186.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (v349 != v348)
  {
    v188 = 0;
    v189 = 0;
    do
    {
      v190 = &v344[2 * v341];
      v192 = *v190;
      v191 = (std::__shared_weak_count *)v190[1];
      if (v191)
      {
        v193 = (unint64_t *)&v191->__shared_owners_;
        do
          v194 = __ldxr(v193);
        while (__stxr(v194 + 1, v193));
        do
          v195 = __ldaxr(v193);
        while (__stlxr(v195 - 1, v193));
        if (!v195)
        {
          ((void (*)(std::__shared_weak_count *))v191->__on_zero_shared)(v191);
          std::__shared_weak_count::__release_weak(v191);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v192 + 40) + ((v188 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= ~(1 << v188);
      v188 = ++v189;
    }
    while (0xCCCCCCCCCCCCCCCDLL * ((v349 - v348) >> 2) > v189);
  }
  LODWORD(v308) = 0;
  LODWORD(v305) = 0;
  LODWORD(v302) = 0;
  v327 = 0uLL;
  v328 = 0;
  v324 = 0;
  v325 = 0;
  v326 = 0;
  v321 = 0;
  v322 = 0;
  v323 = 0;
  sub_2399E4290((uint64_t)&v342, &v334, &__dst, (uint64_t *)__p, &v340, &v341, &v327, (uint64_t)&v324, v187, (uint64_t)&v321, &v308, &v305);
  v196.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  a2 = (char **)v184;
  if (v297)
  {
    *(double *)(a4 + 16) = (double)(v196.__d_.__rep_ - v186.__d_.__rep_) / 1000000.0;
    v197 = (int)v305;
    *(_DWORD *)(a4 + 44) = (_DWORD)v308;
    *(_DWORD *)(a4 + 48) = v197;
  }
  v198.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  v318 = 0;
  v319 = 0;
  v320 = 0;
  sub_2399E82FC((uint64_t *)&v327, (uint64_t)&v321, (uint64_t)&v324, (uint64_t)&v318, (uint64_t)&v340, &v302);
  v315 = 0;
  v316 = 0;
  v317 = 0;
  v311 = 0;
  v312 = 0;
  v313 = 0;
  sub_2399E191C((uint64_t *)&v318, &v315, &v311);
  sub_2399E1744((uint64_t *)&v321, (uint64_t *)&v311);
  v10 = sub_2399617E4(v184, (uint64_t *)&v321, (uint64_t *)&v315, (uint64_t *)&v311);
  v199.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (v297)
  {
    *(double *)(a4 + 24) = (double)(v199.__d_.__rep_ - v198.__d_.__rep_) / 1000000.0;
    *(_DWORD *)(a4 + 52) = (_DWORD)v302;
  }
  v200 = (char *)v311;
  if (v311)
  {
    v201 = v312;
    v202 = v311;
    if (v312 != v311)
    {
      v203 = v312;
      do
      {
        v205 = (void *)*((_QWORD *)v203 - 3);
        v203 -= 24;
        v204 = v205;
        if (v205)
        {
          *((_QWORD *)v201 - 2) = v204;
          operator delete(v204);
        }
        v201 = v203;
      }
      while (v203 != v200);
      v202 = v311;
    }
    v312 = v200;
    operator delete(v202);
  }
  if (v315)
  {
    v316 = (char *)v315;
    operator delete(v315);
  }
  if (v318)
  {
    v319 = (char *)v318;
    operator delete(v318);
  }
  if (v321)
  {
    v322 = (char *)v321;
    operator delete(v321);
  }
  if (v324)
  {
    v325 = (char *)v324;
    operator delete(v324);
  }
  v206 = v327;
  if ((_QWORD)v327)
  {
    v207 = *((_QWORD *)&v327 + 1);
    v208 = (void *)v327;
    if (*((_QWORD *)&v327 + 1) != (_QWORD)v327)
    {
      v209 = *((_QWORD *)&v327 + 1);
      do
      {
        v211 = *(void **)(v209 - 24);
        v209 -= 24;
        v210 = v211;
        if (v211)
        {
          *(_QWORD *)(v207 - 16) = v210;
          operator delete(v210);
        }
        v207 = v209;
      }
      while (v209 != v206);
      v208 = (void *)v327;
    }
    *((_QWORD *)&v327 + 1) = v206;
    operator delete(v208);
  }
  if (v329[0])
  {
    v329[1] = v329[0];
    operator delete(v329[0]);
  }
  v13 = __str;
  if (v331[0])
  {
    v331[1] = v331[0];
    operator delete(v331[0]);
  }
  if (v334)
  {
    v335 = (unint64_t)v334;
    operator delete(v334);
  }
  if (__dst)
  {
    v338 = (char *)__dst;
    operator delete(__dst);
  }
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v14 = __str[1].__r_.__value_.__s.__data_[2];
  if (!__str[1].__r_.__value_.__s.__data_[2])
    goto LABEL_384;
LABEL_290:
  if (!v13[1].__r_.__value_.__s.__data_[3])
    goto LABEL_384;
  v296 = a2;
  v301.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  v212 = off_256934418[0];
  v213 = strlen(off_256934418[0]);
  if (v213 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v214 = (void *)v213;
  if (v213 >= 0x17)
  {
    v216 = a4;
    v217 = (v213 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v213 | 7) != 0x17)
      v217 = v213 | 7;
    v218 = v217 + 1;
    v215 = operator new(v217 + 1);
    __p[1] = v214;
    __p[2] = (void *)(v218 | 0x8000000000000000);
    __p[0] = v215;
    a4 = v216;
    goto LABEL_298;
  }
  HIBYTE(__p[2]) = v213;
  v215 = __p;
  if (v213)
LABEL_298:
    memmove(v215, v212, (size_t)v214);
  *((_BYTE *)v214 + (_QWORD)v215) = 0;
  LODWORD(v338) = 0;
  __dst = 0;
  v219 = sub_2394E5DE4(v345, (uint64_t)&__dst, (unsigned __int8 *)__p);
  v294 = a4;
  if (SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
  LODWORD(v334) = -1;
  v220 = off_256934418[0];
  v221 = strlen(off_256934418[0]);
  if (v221 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v222 = v221;
  if (v221 >= 0x17)
  {
    v224 = (v221 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v221 | 7) != 0x17)
      v224 = v221 | 7;
    v225 = v224 + 1;
    p_dst = operator new(v224 + 1);
    v338 = (char *)v222;
    v339 = v225 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_308;
  }
  HIBYTE(v339) = v221;
  p_dst = &__dst;
  if (v221)
LABEL_308:
    memmove(p_dst, v220, v222);
  *((_BYTE *)p_dst + v222) = 0;
  memset(__p, 0, 24);
  LODWORD(v334) = sub_23993A364(v345, (uint64_t)__p, (unsigned __int8 *)&__dst);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (SHIBYTE(v339) < 0)
    operator delete(__dst);
  if (v219 != -1)
  {
    v226 = off_256934418[0];
    v227 = strlen(off_256934418[0]);
    if (v227 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v228 = v227;
    if (v227 >= 0x17)
    {
      v230 = (v227 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v227 | 7) != 0x17)
        v230 = v227 | 7;
      v231 = v230 + 1;
      v229 = operator new(v230 + 1);
      v338 = (char *)v228;
      v339 = v231 | 0x8000000000000000;
      __dst = v229;
    }
    else
    {
      HIBYTE(v339) = v227;
      v229 = &__dst;
      if (!v227)
      {
LABEL_322:
        *((_BYTE *)v229 + v228) = 0;
        memset(__p, 0, 24);
        v232 = sub_23993A364(v345, (uint64_t)__p, (unsigned __int8 *)&__dst);
        LODWORD(v334) = v232;
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        if (SHIBYTE(v339) < 0)
          operator delete(__dst);
        if (v232 == -1)
        {
          sub_23941A4FC(__p, off_256934418[0]);
          sub_239937414(&v342, &v334, (uint64_t)__p);
          if (SHIBYTE(__p[2]) < 0)
            operator delete(__p[0]);
        }
        if (v351 != v350)
        {
          v233 = 0;
          v234 = 0;
          v235 = v219;
          do
          {
            v236 = &v345[0][2 * v334];
            v237 = *v236;
            v238 = (std::__shared_weak_count *)v236[1];
            if (v238)
            {
              v239 = (unint64_t *)&v238->__shared_owners_;
              do
                v240 = __ldxr(v239);
              while (__stxr(v240 + 1, v239));
              do
                v241 = __ldaxr(v239);
              while (__stlxr(v241 - 1, v239));
              if (!v241)
              {
                ((void (*)(std::__shared_weak_count *))v238->__on_zero_shared)(v238);
                std::__shared_weak_count::__release_weak(v238);
              }
            }
            v242 = (_QWORD *)(*(_QWORD *)(v237 + 40) + 24 * v233);
            v243 = v242[1] - *v242;
            if (v243 > 0xB)
            {
              if (v243 != 12)
                v242[1] = *v242 + 12;
            }
            else
            {
              sub_23942CB44((uint64_t)v242, 3 - (v243 >> 2));
            }
            v244 = &v345[0][2 * v235];
            v245 = *v244;
            v246 = (std::__shared_weak_count *)v244[1];
            if (v246)
            {
              v247 = (unint64_t *)&v246->__shared_owners_;
              do
                v248 = __ldxr(v247);
              while (__stxr(v248 + 1, v247));
              do
                v249 = __ldaxr(v247);
              while (__stlxr(v249 - 1, v247));
              if (!v249)
              {
                ((void (*)(std::__shared_weak_count *))v246->__on_zero_shared)(v246);
                std::__shared_weak_count::__release_weak(v246);
              }
            }
            v250 = *(_DWORD *)(*(_QWORD *)(v245 + 40) + 12 * v233);
            v251 = &v345[0][2 * v334];
            v252 = *v251;
            v253 = (std::__shared_weak_count *)v251[1];
            if (v253)
            {
              v254 = (unint64_t *)&v253->__shared_owners_;
              do
                v255 = __ldxr(v254);
              while (__stxr(v255 + 1, v254));
              do
                v256 = __ldaxr(v254);
              while (__stlxr(v256 - 1, v254));
              if (!v256)
              {
                ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
                std::__shared_weak_count::__release_weak(v253);
              }
            }
            **(_DWORD **)(*(_QWORD *)(v252 + 40) + 24 * v233) = v250;
            v257 = &v345[0][2 * v235];
            v258 = *v257;
            v259 = (std::__shared_weak_count *)v257[1];
            if (v259)
            {
              v260 = (unint64_t *)&v259->__shared_owners_;
              do
                v261 = __ldxr(v260);
              while (__stxr(v261 + 1, v260));
              do
                v262 = __ldaxr(v260);
              while (__stlxr(v262 - 1, v260));
              if (!v262)
              {
                ((void (*)(std::__shared_weak_count *))v259->__on_zero_shared)(v259);
                std::__shared_weak_count::__release_weak(v259);
              }
            }
            v263 = *(_DWORD *)(*(_QWORD *)(v258 + 40) + 12 * v233 + 4);
            v264 = &v345[0][2 * v334];
            v265 = *v264;
            v266 = (std::__shared_weak_count *)v264[1];
            if (v266)
            {
              v267 = (unint64_t *)&v266->__shared_owners_;
              do
                v268 = __ldxr(v267);
              while (__stxr(v268 + 1, v267));
              do
                v269 = __ldaxr(v267);
              while (__stlxr(v269 - 1, v267));
              if (!v269)
              {
                ((void (*)(std::__shared_weak_count *))v266->__on_zero_shared)(v266);
                std::__shared_weak_count::__release_weak(v266);
              }
            }
            *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v265 + 40) + 24 * v233) + 4) = v263;
            v270 = &v345[0][2 * v235];
            v271 = *v270;
            v272 = (std::__shared_weak_count *)v270[1];
            if (v272)
            {
              v273 = (unint64_t *)&v272->__shared_owners_;
              do
                v274 = __ldxr(v273);
              while (__stxr(v274 + 1, v273));
              do
                v275 = __ldaxr(v273);
              while (__stlxr(v275 - 1, v273));
              if (!v275)
              {
                ((void (*)(std::__shared_weak_count *))v272->__on_zero_shared)(v272);
                std::__shared_weak_count::__release_weak(v272);
              }
            }
            v276 = *(_DWORD *)(*(_QWORD *)(v271 + 40) + 12 * v233 + 8);
            v277 = &v345[0][2 * v334];
            v278 = *v277;
            v279 = (std::__shared_weak_count *)v277[1];
            if (v279)
            {
              v280 = (unint64_t *)&v279->__shared_owners_;
              do
                v281 = __ldxr(v280);
              while (__stxr(v281 + 1, v280));
              do
                v282 = __ldaxr(v280);
              while (__stlxr(v282 - 1, v280));
              if (!v282)
              {
                ((void (*)(std::__shared_weak_count *))v279->__on_zero_shared)(v279);
                std::__shared_weak_count::__release_weak(v279);
              }
            }
            *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v278 + 40) + 24 * v233) + 8) = v276;
            v233 = ++v234;
          }
          while (v234 < (unint64_t)((v351 - v350) >> 2));
        }
        goto LABEL_378;
      }
    }
    memmove(v229, v226, v228);
    goto LABEL_322;
  }
LABEL_378:
  sub_2399E9D40((uint64_t)&v342, &v341);
  v283.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  a4 = v294;
  a2 = v296;
  if (v297)
    *(double *)(v294 + 24) = (double)(v283.__d_.__rep_ - v301.__d_.__rep_) / 1000000.0;
  if (sub_2394ED744((uint64_t)&v342) && sub_2394ED928((uint64_t)&v342))
    sub_2394EDB0C((uint64_t)&v342);
  sub_239961D8C(v296, (uint64_t)&v342);
  v14 = __str[1].__r_.__value_.__s.__data_[2];
LABEL_384:
  if (!v14)
  {
    v284.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    v285 = off_256934418[0];
    v286 = strlen(off_256934418[0]);
    if (v286 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v287 = v286;
    v288 = (uint64_t)a2;
    if (v286 >= 0x17)
    {
      v290 = (v286 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v286 | 7) != 0x17)
        v290 = v286 | 7;
      v291 = v290 + 1;
      v289 = operator new(v290 + 1);
      v338 = (char *)v287;
      v339 = v291 | 0x8000000000000000;
      __dst = v289;
    }
    else
    {
      HIBYTE(v339) = v286;
      v289 = &__dst;
      if (!v286)
      {
LABEL_393:
        *((_BYTE *)v289 + v287) = 0;
        memset(__p, 0, 24);
        LODWORD(v334) = sub_23993A364((uint64_t **)(v288 + 56), (uint64_t)__p, (unsigned __int8 *)&__dst);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        if (SHIBYTE(v339) < 0)
          operator delete(__dst);
        sub_2399EA1A0(v288, &v340, (unsigned int *)&v334);
        sub_23993F8A0((_QWORD *)v288);
        sub_23994046C((_QWORD *)v288);
        v292.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
        if (v297)
          *(double *)(a4 + 32) = (double)(v292.__d_.__rep_ - v284.__d_.__rep_) / 1000000.0;
        goto LABEL_399;
      }
    }
    memmove(v289, v285, v287);
    goto LABEL_393;
  }
LABEL_399:
  sub_23996303C(&v342);
  return v10;
}

void sub_239936F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,int a57,__int16 a58,char a59,char a60,uint64_t a61,void *a62,uint64_t a63)
{
  char a69;

  if (a60 < 0)
    operator delete(__p);
  sub_23996303C(&a69);
  JUMPOUT(0x23993727CLL);
}

void sub_2399372B0(char **a1, _OWORD *a2)
{
  unint64_t v4;
  double *v5;
  double *v6;
  double *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  double *v14;
  uint64_t v15;
  unint64_t v16;
  double *v17;
  double v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  double *v22;

  v5 = (double *)a1[1];
  v4 = (unint64_t)a1[2];
  if ((unint64_t)v5 >= v4)
  {
    v7 = (double *)*a1;
    v8 = ((char *)v5 - *a1) >> 4;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 60)
      sub_2394189F8();
    v10 = v4 - (_QWORD)v7;
    if (v10 >> 3 > v9)
      v9 = v10 >> 3;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0)
      v11 = 0xFFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    if (v11)
    {
      if (v11 >> 60)
        sub_239418A80();
      v12 = (char *)operator new(16 * v11);
    }
    else
    {
      v12 = 0;
    }
    v13 = &v12[16 * v8];
    *(_OWORD *)v13 = *a2;
    v6 = (double *)(v13 + 16);
    if (v5 != v7)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v5 - 1);
        v13 -= 16;
        v5 -= 2;
      }
      while (v5 != v7);
      v5 = (double *)*a1;
    }
    *a1 = v13;
    a1[1] = (char *)v6;
    a1[2] = &v12[16 * v11];
    if (v5)
      operator delete(v5);
  }
  else
  {
    *(_OWORD *)v5 = *a2;
    v6 = v5 + 2;
  }
  a1[1] = (char *)v6;
  v14 = (double *)*a1;
  v15 = (char *)v6 - *a1;
  if (v15 >= 17)
  {
    v16 = (((unint64_t)v15 >> 4) - 2) >> 1;
    v17 = &v14[2 * v16];
    v18 = *(v6 - 1);
    if (v17[1] < v18)
    {
      v21 = *((_QWORD *)v6 - 2);
      v20 = v6 - 2;
      v19 = v21;
      do
      {
        v22 = v20;
        v20 = v17;
        *(_OWORD *)v22 = *(_OWORD *)v17;
        if (!v16)
          break;
        v16 = (v16 - 1) >> 1;
        v17 = &v14[2 * v16];
      }
      while (v17[1] < v18);
      *(_QWORD *)v20 = v19;
      v20[1] = v18;
    }
  }
}

void sub_239937414(_QWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  void *__p;
  void *v15;
  uint64_t v16;

  __p = 0;
  v15 = 0;
  v16 = 0;
  *a2 = sub_23993A4CC((uint64_t)(a1 + 7), (uint64_t)&__p, a3);
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 32))(a1);
  v5 = (uint64_t *)a1[7];
  v6 = (uint64_t *)a1[8];
  if (v5 != v6)
  {
    v7 = v4;
    do
    {
      v8 = *v5;
      v9 = (std::__shared_weak_count *)v5[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(p_shared_owners);
        while (__stxr(v11 + 1, p_shared_owners));
      }
      if (v8)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v7);
      if (v9)
      {
        v12 = (unint64_t *)&v9->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
}

void sub_239937504(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239937560(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  unsigned int v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  void *v16;
  unsigned int v17;
  char *v18;
  char *v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  _BYTE *v25;
  unsigned int *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _OWORD *v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  unsigned int v35;
  _BYTE *v36;
  _QWORD *v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  void *__p[3];
  unsigned int v43;

  sub_23995F9AC((char **)a2, a1);
  strcpy((char *)__p, "h:is_quadmesh_diagonal");
  HIBYTE(__p[2]) = 22;
  LOBYTE(v41) = 0;
  v3 = sub_23993A208((uint64_t **)(a2 + 32), (uint64_t)&v41, (unsigned __int8 *)__p);
  v4 = v3;
  v43 = v3;
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if (v4 != -1)
    {
LABEL_3:
      if (*(_QWORD *)(a2 + 136) != *(_QWORD *)(a2 + 128))
      {
        v5 = 0;
        v6 = 0;
        do
        {
          v7 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 16 * v43);
          v8 = *v7;
          v9 = (std::__shared_weak_count *)v7[1];
          if (v9)
          {
            p_shared_owners = (unint64_t *)&v9->__shared_owners_;
            do
              v11 = __ldxr(p_shared_owners);
            while (__stxr(v11 + 1, p_shared_owners));
            do
              v12 = __ldaxr(p_shared_owners);
            while (__stlxr(v12 - 1, p_shared_owners));
            if (!v12)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          *(_QWORD *)(*(_QWORD *)(v8 + 40) + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= ~(1 << v5);
          v5 = ++v6;
        }
        while (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 2) > v6);
      }
LABEL_14:
      memset(__p, 0, sizeof(__p));
      if (*(_QWORD *)(a2 + 160) == *(_QWORD *)(a2 + 152))
        return 1;
      goto LABEL_15;
    }
  }
  else if (v3 != -1)
  {
    goto LABEL_3;
  }
  strcpy((char *)__p, "h:is_quadmesh_diagonal");
  HIBYTE(__p[2]) = 22;
  sub_23992B82C((_QWORD *)a2, &v43, (uint64_t)__p);
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
    goto LABEL_14;
  operator delete(__p[0]);
  memset(__p, 0, sizeof(__p));
  if (*(_QWORD *)(a2 + 160) == *(_QWORD *)(a2 + 152))
    return 1;
LABEL_15:
  LODWORD(v13) = 0;
  v14 = a2 + 104;
  v38 = (_QWORD *)a2;
  do
  {
    v39 = v13;
    v41 = v13;
    __p[1] = __p[0];
    v15 = *(_DWORD *)sub_23996252C(v14, &v41);
    v40 = v15;
    do
    {
      v17 = *(_DWORD *)(sub_239962518(v14, &v40) + 8);
      v40 = v17;
      v18 = (char *)__p[1];
      if (__p[1] < __p[2])
      {
        *(_DWORD *)__p[1] = v17;
        v16 = v18 + 4;
        goto LABEL_19;
      }
      v19 = (char *)__p[0];
      v20 = (char *)__p[1] - (char *)__p[0];
      v21 = ((char *)__p[1] - (char *)__p[0]) >> 2;
      v22 = v21 + 1;
      if ((unint64_t)(v21 + 1) >> 62)
        sub_2394189F8();
      v23 = (char *)__p[2] - (char *)__p[0];
      if (((char *)__p[2] - (char *)__p[0]) >> 1 > v22)
        v22 = v23 >> 1;
      if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFFCLL)
        v24 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v24 = v22;
      if (v24)
      {
        if (v24 >> 62)
          sub_239418A80();
        v25 = operator new(4 * v24);
        v26 = (unsigned int *)&v25[4 * v21];
        *v26 = v17;
        v16 = v26 + 1;
        if (v18 == v19)
        {
LABEL_30:
          __p[0] = v26;
          __p[1] = v16;
          __p[2] = &v25[4 * v24];
          if (v18)
            goto LABEL_40;
          goto LABEL_19;
        }
      }
      else
      {
        v25 = 0;
        v26 = (unsigned int *)(4 * v21);
        *(_DWORD *)(4 * v21) = v17;
        v16 = (void *)(4 * v21 + 4);
        if (v18 == v19)
          goto LABEL_30;
      }
      v27 = v18 - 4 - v19;
      if (v27 < 0x2C)
        goto LABEL_55;
      if ((unint64_t)(v18 - &v25[v20]) < 0x20)
        goto LABEL_55;
      v28 = (v27 >> 2) + 1;
      v29 = 4 * (v28 & 0x7FFFFFFFFFFFFFF8);
      v30 = &v18[-v29];
      v26 = (unsigned int *)((char *)v26 - v29);
      v31 = &v25[4 * v21 - 16];
      v32 = v18 - 16;
      v33 = v28 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v34 = *(_OWORD *)v32;
        *(v31 - 1) = *((_OWORD *)v32 - 1);
        *v31 = v34;
        v31 -= 2;
        v32 -= 32;
        v33 -= 8;
      }
      while (v33);
      v18 = v30;
      if (v28 != (v28 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_55:
        do
        {
          v35 = *((_DWORD *)v18 - 1);
          v18 -= 4;
          *--v26 = v35;
        }
        while (v18 != v19);
      }
      v18 = (char *)__p[0];
      __p[0] = v26;
      __p[1] = v16;
      __p[2] = &v25[4 * v24];
      if (v18)
LABEL_40:
        operator delete(v18);
LABEL_19:
      __p[1] = v16;
    }
    while (v40 != v15);
    v36 = __p[0];
    if ((unint64_t)v16 - (unint64_t)__p[0] >= 0x10)
    {
      if ((_BYTE *)((_BYTE *)v16 - (char *)__p[0]) == (_BYTE *)16)
      {
        sub_2399DBD58(v38, &v41, (unsigned int **)__p, v43);
        v36 = __p[0];
        v16 = __p[1];
      }
      if ((_BYTE *)v16 - v36 == 20)
        sub_2399DBFCC(v38, &v41, (unsigned int **)__p, v43);
    }
    v13 = (v39 + 1);
  }
  while (v13 < (uint64_t)(v38[20] - v38[19]) >> 2);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return 1;
}

void sub_23993795C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23993799C(uint64_t a1, const std::__fs::filesystem::path *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, _QWORD *a6)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  __int128 v12;
  std::__shared_weak_count *v13;
  _QWORD *v14;
  char *v15;
  std::chrono::system_clock::time_point v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  std::chrono::system_clock::time_point v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  BOOL v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  size_t v45;
  size_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  char *v54;
  _QWORD *v55;
  _QWORD *v56;
  char **v57;
  uint64_t v58;
  _BYTE *v59;
  unsigned int v60;
  unsigned int v61;
  _DWORD *v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t *v65;
  std::__shared_weak_count *v66;
  uint64_t v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  std::__shared_weak_count *v74;
  uint64_t v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  std::__shared_weak_count *v80;
  uint64_t v81;
  unint64_t *v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  std::__shared_weak_count *v88;
  uint64_t v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  std::__shared_weak_count *v94;
  uint64_t v95;
  unint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  std::__shared_weak_count *v102;
  uint64_t v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  std::__shared_weak_count *v112;
  uint64_t v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t v116;
  int v117;
  uint64_t *v118;
  std::__shared_weak_count *v119;
  uint64_t v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t *v130;
  std::__shared_weak_count *v131;
  uint64_t v132;
  unint64_t *v133;
  unint64_t v134;
  unint64_t v135;
  int v136;
  uint64_t *v137;
  std::__shared_weak_count *v138;
  uint64_t v139;
  unint64_t *v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t *v149;
  std::__shared_weak_count *v150;
  uint64_t v151;
  unint64_t *v152;
  unint64_t v153;
  unint64_t v154;
  int v155;
  uint64_t *v156;
  std::__shared_weak_count *v157;
  uint64_t v158;
  unint64_t *v159;
  unint64_t v160;
  unint64_t v161;
  void *v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  char *v168;
  _BOOL4 v169;
  uint64_t v170;
  _BYTE *v171;
  uint64_t v172;
  char *v173;
  size_t v174;
  size_t v175;
  void **p_dst;
  std::__shared_weak_count *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int v181;
  uint64_t v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  size_t v189;
  size_t v190;
  void **v191;
  uint64_t v192;
  uint64_t v193;
  unsigned int v194;
  uint64_t v195;
  char *v196;
  size_t v197;
  size_t v198;
  void **v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  std::__shared_weak_count *v204;
  unint64_t *v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t **v209;
  uint64_t **v210;
  uint64_t v211;
  __int128 v212;
  uint64_t *v213;
  uint64_t **v214;
  uint64_t **v215;
  unsigned int v216;
  char *v217;
  uint64_t *v218;
  uint64_t *v219;
  uint64_t v220;
  void **v221;
  uint64_t v222;
  uint64_t v223;
  _QWORD *v224;
  void **v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t *v230;
  _QWORD *v231;
  uint64_t v232;
  int v233;
  uint64_t v234;
  _QWORD *v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  _BYTE *v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t **v250;
  uint64_t *v251;
  uint64_t **v252;
  uint64_t **v253;
  int v254;
  _DWORD *v255;
  uint64_t *v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t *v259;
  uint64_t **v260;
  uint64_t **v261;
  int v262;
  _DWORD *v263;
  uint64_t *v264;
  _QWORD *v265;
  uint64_t v266;
  uint64_t *v267;
  uint64_t **v268;
  uint64_t **v269;
  int v270;
  _DWORD *v271;
  uint64_t *v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t *v275;
  uint64_t **v276;
  uint64_t **v277;
  int v278;
  _DWORD *v279;
  uint64_t *v280;
  _QWORD *v281;
  uint64_t v282;
  uint64_t *v283;
  uint64_t **v284;
  uint64_t **v285;
  int v286;
  _DWORD *v287;
  uint64_t *v288;
  _QWORD *v289;
  uint64_t v290;
  uint64_t *v291;
  uint64_t **v292;
  uint64_t **v293;
  int v294;
  _DWORD *v295;
  uint64_t *v296;
  _QWORD *v297;
  uint64_t v298;
  uint64_t *v299;
  uint64_t **v300;
  int v301;
  _DWORD *v302;
  uint64_t *v303;
  _QWORD *v304;
  uint64_t v305;
  int v306;
  char *v307;
  __int128 v308;
  std::__fs::filesystem::path *v309;
  char *v310;
  __int128 v311;
  int v312;
  int v313;
  char v314;
  uint64_t v315;
  char *v316;
  char *v317;
  void *v318;
  std::__shared_weak_count *v319;
  unint64_t *v320;
  unint64_t v321;
  std::__shared_weak_count *v322;
  unint64_t *v323;
  unint64_t v324;
  std::__shared_weak_count *v325;
  unint64_t *v326;
  unint64_t v327;
  std::__shared_weak_count *v328;
  unint64_t *v329;
  unint64_t v330;
  std::__shared_weak_count *v331;
  unint64_t *v332;
  unint64_t v333;
  void *v334;
  _QWORD *v335;
  uint64_t v336;
  _QWORD *v337;
  uint64_t v338;
  uint64_t v340;
  uint64_t v341;
  int v342;
  _BOOL4 v343;
  _QWORD *v344;
  uint64_t v346;
  std::__fs::filesystem::path v349;
  std::__fs::filesystem::path __replacement;
  _BYTE v351[27];
  char v352;
  void *v353;
  char *v354;
  unint64_t v355;
  uint64_t *v356;
  std::__shared_weak_count *v357;
  void *v358[2];
  int v359;
  char v360;
  int v361[2];
  std::__shared_weak_count *v362;
  int v363[2];
  std::__shared_weak_count *v364;
  _QWORD *v365;
  std::__shared_weak_count *v366;
  int v367[2];
  std::__shared_weak_count *v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  char v372;
  int v373;
  int v374;
  char v375;
  char v376;
  char v377;
  char v378;
  void *v379[3];
  std::string v380;
  char v381;
  std::string v382;
  uint64_t v383;
  int v384;
  void **__dst;
  size_t v386;
  uint64_t *v387;
  void **v388;
  _QWORD *v389;
  uint64_t *v390;
  uint64_t v391;
  _QWORD v392[20];
  _QWORD v393[20];
  _BYTE __p[32];
  _BYTE v395[44];
  int v396;
  char v397;
  _BYTE *v398;
  uint64_t v399;
  int v400;
  uint64_t v401;
  uint64_t *v402;
  _BYTE v403[24];
  _BYTE *v404;
  _BYTE v405[24];
  _BYTE *v406;
  _BYTE v407[24];
  _BYTE *v408;
  uint64_t v409;

  v409 = *MEMORY[0x24BDAC8D0];
  v9 = (_QWORD *)a6[3];
  if (v9)
  {
    if (v9 == a6)
    {
      v408 = v407;
      (*(void (**)(_QWORD *, _BYTE *))(*a6 + 24))(a6, v407);
    }
    else
    {
      v408 = (_BYTE *)(*(uint64_t (**)(_QWORD *))(*v9 + 16))(v9);
    }
  }
  else
  {
    v408 = 0;
  }
  v10 = a6 + 4;
  v11 = a6[7];
  v344 = a6 + 4;
  if (!v11)
    goto LABEL_9;
  if ((_QWORD *)v11 != v10)
  {
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
LABEL_9:
    v406 = (_BYTE *)v11;
    goto LABEL_11;
  }
  v406 = v405;
  (*(void (**)(_QWORD *, _BYTE *))(*v10 + 24))(a6 + 4, v405);
LABEL_11:
  sub_239586CA4((uint64_t)&v369);
  v12 = *(_OWORD *)(a3 + 48);
  v369 = *(_OWORD *)(a3 + 32);
  v370 = v12;
  v371 = *(_OWORD *)(a3 + 64);
  v372 = *(_BYTE *)(a3 + 80);
  sub_239586B60((uint64_t)&v373, a3 + 88);
  if (&v369 != (__int128 *)(a3 + 32))
    sub_23945D3D0(v379, *(char **)(a3 + 488), *(char **)(a3 + 496), (uint64_t)(*(_QWORD *)(a3 + 496) - *(_QWORD *)(a3 + 488)) >> 3);
  std::string::operator=(&v380, (const std::string *)(a3 + 512));
  v381 = *(_BYTE *)(a3 + 536);
  std::string::operator=(&v382, (const std::string *)(a3 + 544));
  v383 = *(_QWORD *)(a3 + 568);
  v384 = *(_DWORD *)(a3 + 576);
  v374 = 1;
  v13 = (std::__shared_weak_count *)operator new(0xD0uLL);
  v13->__shared_owners_ = 0;
  v13->__shared_weak_owners_ = 0;
  v13->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADED90;
  v14 = &v13[1].__vftable;
  sub_23996301C((uint64_t)&v13[1]);
  *(_QWORD *)v367 = v13 + 1;
  v368 = v13;
  v15 = (char *)operator new(0x60uLL);
  *((_QWORD *)v15 + 1) = 0;
  *((_QWORD *)v15 + 2) = 0;
  *(_QWORD *)v15 = &off_250ADEDC8;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  *(_OWORD *)(v15 + 56) = 0u;
  *((_QWORD *)v15 + 11) = 0;
  *((_QWORD *)v15 + 9) = v15 + 80;
  v365 = v15 + 24;
  v366 = (std::__shared_weak_count *)v15;
  v16.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  LOWORD(__dst) = 1;
  BYTE2(__dst) = 1;
  HIDWORD(__dst) = 2;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_23941A7F8(__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a1;
    *(_QWORD *)&__p[16] = *(_QWORD *)(a1 + 16);
  }
  v17 = sub_23994C314((uint64_t)__p, (uint64_t)v14, (uint64_t *)v15 + 3, (uint64_t)&__dst);
  v18 = v17;
  if ((__p[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__p);
    if ((v18 & 1) != 0)
      goto LABEL_22;
  }
  else if ((v17 & 1) != 0)
  {
    goto LABEL_22;
  }
  if (v13[7].__shared_weak_owners_ == v13[7].__shared_owners_
    && v13[5].__shared_weak_owners_ == v13[5].__shared_owners_)
  {
    goto LABEL_44;
  }
LABEL_22:
  v20 = *((_QWORD *)v15 + 6);
  v19 = *((_QWORD *)v15 + 7);
  sub_2399407A8(v14);
  v21.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  v346 = a5;
  if (a5)
    *(double *)(a4 + 64) = (double)(v21.__d_.__rep_ - v16.__d_.__rep_) / 1000000.0;
  v22 = *((_QWORD *)v15 + 6);
  if (v22 == *((_QWORD *)v15 + 7))
  {
LABEL_39:
    v34 = v408;
    if (!v408)
      goto LABEL_42;
    goto LABEL_40;
  }
  v24 = *(_QWORD *)(v22 + 8);
  v23 = *(std::__shared_weak_count **)(v22 + 16);
  if (!v23)
    goto LABEL_30;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v26 = __ldxr(p_shared_owners);
  while (__stxr(v26 + 1, p_shared_owners));
  do
    v27 = __ldaxr(p_shared_owners);
  while (__stlxr(v27 - 1, p_shared_owners));
  if (!v27)
  {
    ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
    std::__shared_weak_count::__release_weak(v23);
    if (!v24)
      goto LABEL_39;
  }
  else
  {
LABEL_30:
    if (!v24)
      goto LABEL_39;
  }
  v28 = v365[3];
  v29 = *(_QWORD *)(v28 + 8);
  v30 = *(std::__shared_weak_count **)(v28 + 16);
  if (v30)
  {
    v31 = (unint64_t *)&v30->__shared_owners_;
    do
      v32 = __ldxr(v31);
    while (__stxr(v32 + 1, v31));
    v373 = *(_DWORD *)(v29 + 4);
    do
      v33 = __ldaxr(v31);
    while (__stlxr(v33 - 1, v31));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
    goto LABEL_39;
  }
  v373 = *(_DWORD *)(v29 + 4);
  v34 = v408;
  if (!v408)
    goto LABEL_42;
LABEL_40:
  __p[23] = 0;
  __p[0] = 0;
  LODWORD(v358[0]) = 1092616192;
  (*(void (**)(_BYTE *, void **, _BYTE *))(*(_QWORD *)v34 + 48))(v34, v358, __p);
  if ((__p[23] & 0x80000000) != 0)
    operator delete(*(void **)__p);
LABEL_42:
  if (v406 && ((*(uint64_t (**)(_BYTE *))(*(_QWORD *)v406 + 48))(v406) & 1) != 0)
  {
LABEL_44:
    v35 = 0;
    goto LABEL_513;
  }
  v36 = *v365;
  v37 = v365[1];
  if (*v365 != v37)
  {
    while (1)
    {
      v38 = *(_QWORD *)(v36 + 32);
      if (!v38)
        break;
      v39 = v36 + 32;
      do
      {
        v40 = *(_DWORD *)(v38 + 28);
        v41 = v40 < 1;
        if (v40 >= 1)
          v42 = (uint64_t *)v38;
        else
          v42 = (uint64_t *)(v38 + 8);
        if (!v41)
          v39 = v38;
        v38 = *v42;
      }
      while (*v42);
      if (v39 == v36 + 32 || *(int *)(v39 + 28) >= 2)
        break;
      v36 += 48;
      if (v36 == v37)
        goto LABEL_59;
    }
  }
  v375 = 0;
  v377 = 0;
  v376 = 0;
LABEL_59:
  v43 = *(_QWORD *)v367;
  v44 = off_256934408[0];
  v45 = strlen(off_256934408[0]);
  if (v45 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v46 = v45;
  if (v45 >= 0x17)
  {
    v48 = v19;
    v49 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v45 | 7) != 0x17)
      v49 = v45 | 7;
    v50 = v49 + 1;
    v47 = operator new(v49 + 1);
    *(_QWORD *)&__p[16] = v50 | 0x8000000000000000;
    *(_QWORD *)__p = v47;
    *(_QWORD *)&__p[8] = v46;
    v19 = v48;
    goto LABEL_66;
  }
  __p[23] = v45;
  v47 = __p;
  if (v45)
LABEL_66:
    memmove(v47, v44, v46);
  v47[v46] = 0;
  v386 = 0;
  __dst = 0;
  v51 = sub_2394E5F40((uint64_t **)(v43 + 8), (uint64_t)&__dst, __p);
  v52 = v51;
  if ((__p[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__p);
    if (v52 != -1)
      goto LABEL_69;
  }
  else if (v51 != -1)
  {
LABEL_69:
    v53 = 1;
    goto LABEL_72;
  }
  v53 = sub_23996008C(*(uint64_t *)v367);
LABEL_72:
  v341 = v20;
  v54 = (char *)operator new(0xD0uLL);
  v342 = v53;
  *((_QWORD *)v54 + 1) = 0;
  *((_QWORD *)v54 + 2) = 0;
  v55 = v54 + 24;
  *(_QWORD *)v54 = &off_250ADED90;
  sub_23996301C((uint64_t)(v54 + 24));
  *(_QWORD *)v363 = v54 + 24;
  v364 = (std::__shared_weak_count *)v54;
  v56 = operator new(0xD0uLL);
  v56[1] = 0;
  v56[2] = 0;
  *v56 = &off_250AF0680;
  v57 = (char **)(v56 + 3);
  sub_23996179C((uint64_t)(v56 + 3));
  *(_QWORD *)v361 = v56 + 3;
  v362 = (std::__shared_weak_count *)v56;
  strcpy((char *)v358, "0.25");
  v359 = 65796;
  v360 = 0;
  std::string::operator=((std::string *)v358, (const std::string *)a3);
  *(_WORD *)((char *)&v359 + 1) = *(_WORD *)(a3 + 24);
  if (v346)
    v58 = a4;
  else
    v58 = 0;
  sub_239935244(*(_QWORD **)v367, v57, (std::string *)v358, v58, v346 != 0);
  if (v408
    && (__p[23] = 0,
        __p[0] = 0,
        LODWORD(__dst) = 1109393408,
        (*(void (**)(_BYTE *, void ***, _BYTE *))(*(_QWORD *)v408 + 48))(v408, &__dst, __p),
        (__p[23] & 0x80000000) != 0))
  {
    operator delete(*(void **)__p);
    v59 = v406;
    if (!v406)
      goto LABEL_81;
  }
  else
  {
    v59 = v406;
    if (!v406)
      goto LABEL_81;
  }
  if (((*(uint64_t (**)(_BYTE *))(*(_QWORD *)v59 + 48))(v59) & 1) != 0)
    goto LABEL_174;
LABEL_81:
  sub_239937560((uint64_t)v57, (uint64_t)v55);
  strcpy(__p, "h:is_quadmesh_diagonal");
  __p[23] = 22;
  LOBYTE(__dst) = 0;
  v60 = sub_23993A208((uint64_t **)v54 + 7, (uint64_t)&__dst, __p);
  v61 = v60;
  if ((__p[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)__p);
    if (v61 != -1)
    {
LABEL_83:
      LODWORD(__dst) = -1;
      __p[23] = 16;
      strcpy(__p, "f:hedge_diagonal");
      sub_23993A110(v55, &__dst, (uint64_t)__p);
      if ((__p[23] & 0x80000000) != 0)
        operator delete(*(void **)__p);
      v62 = operator new(0xCuLL);
      v340 = v19;
      *(_QWORD *)&__p[16] = v62 + 3;
      *(_QWORD *)v62 = -1;
      v62[2] = -1;
      *(_QWORD *)__p = v62;
      *(_QWORD *)&__p[8] = v62 + 3;
      if (*((_QWORD *)v54 + 23) != *((_QWORD *)v54 + 22))
      {
        v63 = 0;
        v64 = 0;
        do
        {
          *(_DWORD *)v351 = v64;
          sub_23996389C((uint64_t)v55, (unsigned int *)v351, (uint64_t)__p);
          v65 = (uint64_t *)(v55[4] + 16 * v61);
          v67 = *v65;
          v66 = (std::__shared_weak_count *)v65[1];
          if (v66)
          {
            v68 = (unint64_t *)&v66->__shared_owners_;
            do
              v69 = __ldxr(v68);
            while (__stxr(v69 + 1, v68));
            do
              v70 = __ldaxr(v68);
            while (__stlxr(v70 - 1, v68));
            if (!v70)
            {
              ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
              std::__shared_weak_count::__release_weak(v66);
            }
          }
          v71 = **(_DWORD **)__p;
          v72 = *(_QWORD *)(*(_QWORD *)(v67 + 40) + ((v71 >> 3) & 0x1FFFFFF8));
          v73 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 56) + 16 * __dst);
          v75 = *v73;
          v74 = (std::__shared_weak_count *)v73[1];
          if (v74)
          {
            v76 = (unint64_t *)&v74->__shared_owners_;
            do
              v77 = __ldxr(v76);
            while (__stxr(v77 + 1, v76));
            do
              v78 = __ldaxr(v76);
            while (__stlxr(v78 - 1, v76));
            if (!v78)
            {
              ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
              std::__shared_weak_count::__release_weak(v74);
            }
          }
          *(_BYTE *)(*(_QWORD *)(v75 + 40) + 3 * v63) = ((1 << v71) & v72) != 0;
          v79 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 32) + 16 * v61);
          v81 = *v79;
          v80 = (std::__shared_weak_count *)v79[1];
          if (v80)
          {
            v82 = (unint64_t *)&v80->__shared_owners_;
            do
              v83 = __ldxr(v82);
            while (__stxr(v83 + 1, v82));
            do
              v84 = __ldaxr(v82);
            while (__stlxr(v84 - 1, v82));
            if (!v84)
            {
              ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
              std::__shared_weak_count::__release_weak(v80);
            }
          }
          v85 = *(unsigned int *)(*(_QWORD *)__p + 4);
          v86 = *(_QWORD *)(*(_QWORD *)(v81 + 40) + ((v85 >> 3) & 0x1FFFFFF8));
          v87 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 56) + 16 * __dst);
          v89 = *v87;
          v88 = (std::__shared_weak_count *)v87[1];
          if (v88)
          {
            v90 = (unint64_t *)&v88->__shared_owners_;
            do
              v91 = __ldxr(v90);
            while (__stxr(v91 + 1, v90));
            do
              v92 = __ldaxr(v90);
            while (__stlxr(v92 - 1, v90));
            if (!v92)
            {
              ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
              std::__shared_weak_count::__release_weak(v88);
            }
          }
          *(_BYTE *)(*(_QWORD *)(v89 + 40) + 3 * v63 + 1) = ((1 << v85) & v86) != 0;
          v93 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 32) + 16 * v61);
          v95 = *v93;
          v94 = (std::__shared_weak_count *)v93[1];
          if (v94)
          {
            v96 = (unint64_t *)&v94->__shared_owners_;
            do
              v97 = __ldxr(v96);
            while (__stxr(v97 + 1, v96));
            do
              v98 = __ldaxr(v96);
            while (__stlxr(v98 - 1, v96));
            if (!v98)
            {
              ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
              std::__shared_weak_count::__release_weak(v94);
            }
          }
          v99 = *(unsigned int *)(*(_QWORD *)__p + 8);
          v100 = *(_QWORD *)(*(_QWORD *)(v95 + 40) + ((v99 >> 3) & 0x1FFFFFF8));
          v101 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 56) + 16 * __dst);
          v103 = *v101;
          v102 = (std::__shared_weak_count *)v101[1];
          if (v102)
          {
            v104 = (unint64_t *)&v102->__shared_owners_;
            do
              v105 = __ldxr(v104);
            while (__stxr(v105 + 1, v104));
            do
              v106 = __ldaxr(v104);
            while (__stlxr(v106 - 1, v104));
            if (!v106)
            {
              ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
              std::__shared_weak_count::__release_weak(v102);
            }
          }
          *(_BYTE *)(*(_QWORD *)(v103 + 40) + 3 * v63 + 2) = ((1 << v99) & v100) != 0;
          v55 = *(_QWORD **)v363;
          v63 = ++v64;
        }
        while (v64 < (unint64_t)((uint64_t)(*(_QWORD *)(*(_QWORD *)v363 + 160)
                                                 - *(_QWORD *)(*(_QWORD *)v363 + 152)) >> 2));
      }
      LOBYTE(v353) = 0;
      sub_239940718(v55, &v353);
      if (v55[20] != v55[19])
      {
        v107 = 0;
        v108 = 0;
        v109 = v61;
        while (1)
        {
          *(_DWORD *)v351 = v108;
          sub_23996389C((uint64_t)v55, (unsigned int *)v351, (uint64_t)__p);
          v111 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 56) + 16 * __dst);
          v113 = *v111;
          v112 = (std::__shared_weak_count *)v111[1];
          if (v112)
          {
            v114 = (unint64_t *)&v112->__shared_owners_;
            do
              v115 = __ldxr(v114);
            while (__stxr(v115 + 1, v114));
            do
              v116 = __ldaxr(v114);
            while (__stlxr(v116 - 1, v114));
            if (!v116)
            {
              ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
              std::__shared_weak_count::__release_weak(v112);
            }
          }
          v117 = *(unsigned __int8 *)(*(_QWORD *)(v113 + 40) + 3 * v107);
          v118 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 32) + 16 * v109);
          v120 = *v118;
          v119 = (std::__shared_weak_count *)v118[1];
          if (!v119)
            goto LABEL_139;
          v121 = (unint64_t *)&v119->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
          do
            v123 = __ldaxr(v121);
          while (__stlxr(v123 - 1, v121));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
            std::__shared_weak_count::__release_weak(v119);
            v129 = **(_DWORD **)__p;
            v125 = *(_QWORD *)(v120 + 40);
            v126 = v129 >> 6;
            v127 = 1 << v129;
            if (!v117)
            {
LABEL_142:
              v128 = *(_QWORD *)(v125 + 8 * v126) & ~v127;
              goto LABEL_143;
            }
          }
          else
          {
LABEL_139:
            v124 = **(_DWORD **)__p;
            v125 = *(_QWORD *)(v120 + 40);
            v126 = v124 >> 6;
            v127 = 1 << v124;
            if (!v117)
              goto LABEL_142;
          }
          v128 = *(_QWORD *)(v125 + 8 * v126) | v127;
LABEL_143:
          *(_QWORD *)(v125 + 8 * v126) = v128;
          v130 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 56) + 16 * __dst);
          v132 = *v130;
          v131 = (std::__shared_weak_count *)v130[1];
          if (v131)
          {
            v133 = (unint64_t *)&v131->__shared_owners_;
            do
              v134 = __ldxr(v133);
            while (__stxr(v134 + 1, v133));
            do
              v135 = __ldaxr(v133);
            while (__stlxr(v135 - 1, v133));
            if (!v135)
            {
              ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
              std::__shared_weak_count::__release_weak(v131);
            }
          }
          v136 = *(unsigned __int8 *)(*(_QWORD *)(v132 + 40) + 3 * v107 + 1);
          v137 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 32) + 16 * v109);
          v139 = *v137;
          v138 = (std::__shared_weak_count *)v137[1];
          if (!v138)
            goto LABEL_154;
          v140 = (unint64_t *)&v138->__shared_owners_;
          do
            v141 = __ldxr(v140);
          while (__stxr(v141 + 1, v140));
          do
            v142 = __ldaxr(v140);
          while (__stlxr(v142 - 1, v140));
          if (!v142)
          {
            ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
            std::__shared_weak_count::__release_weak(v138);
            v148 = *(unsigned int *)(*(_QWORD *)__p + 4);
            v144 = *(_QWORD *)(v139 + 40);
            v145 = v148 >> 6;
            v146 = 1 << v148;
            if (!v136)
            {
LABEL_157:
              v147 = *(_QWORD *)(v144 + 8 * v145) & ~v146;
              goto LABEL_158;
            }
          }
          else
          {
LABEL_154:
            v143 = *(unsigned int *)(*(_QWORD *)__p + 4);
            v144 = *(_QWORD *)(v139 + 40);
            v145 = v143 >> 6;
            v146 = 1 << v143;
            if (!v136)
              goto LABEL_157;
          }
          v147 = *(_QWORD *)(v144 + 8 * v145) | v146;
LABEL_158:
          *(_QWORD *)(v144 + 8 * v145) = v147;
          v149 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 56) + 16 * __dst);
          v151 = *v149;
          v150 = (std::__shared_weak_count *)v149[1];
          if (v150)
          {
            v152 = (unint64_t *)&v150->__shared_owners_;
            do
              v153 = __ldxr(v152);
            while (__stxr(v153 + 1, v152));
            do
              v154 = __ldaxr(v152);
            while (__stlxr(v154 - 1, v152));
            if (!v154)
            {
              ((void (*)(std::__shared_weak_count *))v150->__on_zero_shared)(v150);
              std::__shared_weak_count::__release_weak(v150);
            }
          }
          v155 = *(unsigned __int8 *)(*(_QWORD *)(v151 + 40) + 3 * v107 + 2);
          v156 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v363 + 32) + 16 * v109);
          v158 = *v156;
          v157 = (std::__shared_weak_count *)v156[1];
          if (!v157)
            goto LABEL_169;
          v159 = (unint64_t *)&v157->__shared_owners_;
          do
            v160 = __ldxr(v159);
          while (__stxr(v160 + 1, v159));
          do
            v161 = __ldaxr(v159);
          while (__stlxr(v161 - 1, v159));
          if (!v161)
          {
            ((void (*)(std::__shared_weak_count *))v157->__on_zero_shared)(v157);
            std::__shared_weak_count::__release_weak(v157);
            v162 = *(void **)__p;
            v167 = *(unsigned int *)(*(_QWORD *)__p + 8);
            v164 = *(_QWORD *)(v158 + 40);
            v165 = v167 >> 6;
            v166 = 1 << v167;
            if (v155)
            {
LABEL_170:
              v110 = *(_QWORD *)(v164 + 8 * v165) | v166;
              goto LABEL_127;
            }
          }
          else
          {
LABEL_169:
            v162 = *(void **)__p;
            v163 = *(unsigned int *)(*(_QWORD *)__p + 8);
            v164 = *(_QWORD *)(v158 + 40);
            v165 = v163 >> 6;
            v166 = 1 << v163;
            if (v155)
              goto LABEL_170;
          }
          v110 = *(_QWORD *)(v164 + 8 * v165) & ~v166;
LABEL_127:
          *(_QWORD *)(v164 + 8 * v165) = v110;
          v55 = *(_QWORD **)v363;
          v107 = ++v108;
          if (v108 >= (unint64_t)((uint64_t)(*(_QWORD *)(*(_QWORD *)v363 + 160)
                                                  - *(_QWORD *)(*(_QWORD *)v363 + 152)) >> 2))
            goto LABEL_178;
        }
      }
      v162 = *(void **)__p;
      if (*(_QWORD *)__p)
      {
LABEL_178:
        *(_QWORD *)&__p[8] = v162;
        operator delete(v162);
      }
      v168 = (char *)operator new(0x60uLL);
      *((_QWORD *)v168 + 1) = 0;
      *((_QWORD *)v168 + 2) = 0;
      *(_QWORD *)v168 = &off_250ADEDC8;
      *(_OWORD *)(v168 + 72) = 0u;
      *(_OWORD *)(v168 + 40) = 0u;
      *(_OWORD *)(v168 + 56) = 0u;
      *((_QWORD *)v168 + 11) = 0;
      *(_OWORD *)(v168 + 24) = 0u;
      *((_QWORD *)v168 + 9) = v168 + 80;
      v356 = (uint64_t *)(v168 + 24);
      v357 = (std::__shared_weak_count *)v168;
      v353 = 0;
      v354 = 0;
      v355 = 0;
      memset(v395, 0, sizeof(v395));
      memset(__p, 0, sizeof(__p));
      v396 = 3;
      v397 = 1;
      LODWORD(__dst) = 1065749138;
      HIDWORD(__dst) = v373;
      LOBYTE(v386) = v374;
      LODWORD(v387) = HIDWORD(v370);
      HIDWORD(v386) = 2;
      if (v342)
      {
        v169 = sub_239932ED0((size_t)v55, (float *)&__dst, (uint64_t)__p);
        if (!v346)
          goto LABEL_184;
      }
      else
      {
        v169 = 0;
        if (!v346)
        {
LABEL_184:
          if (v408
            && (__p[23] = 0,
                __p[0] = 0,
                LODWORD(__dst) = 1112014848,
                (*(void (**)(_BYTE *, void ***, _BYTE *))(*(_QWORD *)v408 + 48))(v408, &__dst, __p),
                (__p[23] & 0x80000000) != 0))
          {
            operator delete(*(void **)__p);
            v171 = v406;
            if (!v406)
              goto LABEL_190;
          }
          else
          {
            v171 = v406;
            if (!v406)
              goto LABEL_190;
          }
          if (((*(uint64_t (**)(_BYTE *))(*(_QWORD *)v171 + 48))(v171) & 1) != 0)
            goto LABEL_294;
LABEL_190:
          v172 = *(_QWORD *)v363;
          if (!v169 || !sub_23996008C(*(uint64_t *)v363))
          {
            v343 = 0;
            v178 = *(_QWORD **)(*(_QWORD *)(v172 + 80) + 0xFFFFFFFF0);
            v177 = *(std::__shared_weak_count **)(*(_QWORD *)(v172 + 80) + 0xFFFFFFFF8);
            if (!v177)
              goto LABEL_212;
            goto LABEL_207;
          }
          v173 = off_256934448[0];
          v174 = strlen(off_256934448[0]);
          if (v174 > 0x7FFFFFFFFFFFFFF7)
            sub_23941A5AC();
          v175 = v174;
          if (v174 >= 0x17)
          {
            v179 = (v174 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v174 | 7) != 0x17)
              v179 = v174 | 7;
            v180 = v179 + 1;
            p_dst = (void **)operator new(v179 + 1);
            v387 = (uint64_t *)(v180 | 0x8000000000000000);
            __dst = p_dst;
            v386 = v175;
          }
          else
          {
            HIBYTE(v387) = v174;
            p_dst = (void **)&__dst;
            if (!v174)
            {
LABEL_202:
              *((_BYTE *)p_dst + v175) = 0;
              memset(__p, 0, 24);
              v181 = sub_23958C0D8((uint64_t **)(v172 + 80), (uint64_t)__p, (unsigned __int8 *)&__dst);
              if ((__p[23] & 0x80000000) != 0)
                operator delete(*(void **)__p);
              v343 = v181 != -1;
              if (SHIBYTE(v387) < 0)
                operator delete(__dst);
              v182 = *(_QWORD *)(*(_QWORD *)v363 + 80) + 16 * v181;
              v178 = *(_QWORD **)v182;
              v177 = *(std::__shared_weak_count **)(v182 + 8);
              if (!v177)
              {
LABEL_212:
                v186 = (*(uint64_t (**)(_QWORD *))(*v178 + 16))(v178);
                v187 = *(_QWORD *)v363;
                v188 = off_256934458;
                v189 = strlen(off_256934458);
                if (v189 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                v190 = v189;
                if (v189 >= 0x17)
                {
                  v192 = (v189 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v189 | 7) != 0x17)
                    v192 = v189 | 7;
                  v193 = v192 + 1;
                  v191 = (void **)operator new(v192 + 1);
                  v387 = (uint64_t *)(v193 | 0x8000000000000000);
                  __dst = v191;
                  v386 = v190;
                }
                else
                {
                  HIBYTE(v387) = v189;
                  v191 = (void **)&__dst;
                  if (!v189)
                  {
LABEL_220:
                    *((_BYTE *)v191 + v190) = 0;
                    *(_QWORD *)&__p[16] = 0;
                    *(_QWORD *)&__p[8] = 0;
                    *(_QWORD *)__p = &__p[8];
                    v194 = sub_23958C234((uint64_t **)(v187 + 80), (uint64_t)__p, (unsigned __int8 *)&__dst);
                    sub_23958B6B4((uint64_t)__p, *(char **)&__p[8]);
                    if (SHIBYTE(v387) < 0)
                    {
                      operator delete(__dst);
                      if (v194 != -1)
                        goto LABEL_234;
                    }
                    else if (v194 != -1)
                    {
                      goto LABEL_234;
                    }
                    v195 = *(_QWORD *)v363;
                    v196 = off_256934458;
                    v197 = strlen(off_256934458);
                    if (v197 > 0x7FFFFFFFFFFFFFF7)
                      sub_23941A5AC();
                    v198 = v197;
                    if (v197 >= 0x17)
                    {
                      v200 = (v197 & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v197 | 7) != 0x17)
                        v200 = v197 | 7;
                      v201 = v200 + 1;
                      v199 = (void **)operator new(v200 + 1);
                      v387 = (uint64_t *)(v201 | 0x8000000000000000);
                      __dst = v199;
                      v386 = v198;
                    }
                    else
                    {
                      HIBYTE(v387) = v197;
                      v199 = (void **)&__dst;
                      if (!v197)
                      {
LABEL_232:
                        *((_BYTE *)v199 + v198) = 0;
                        *(_QWORD *)&__p[16] = 0;
                        *(_QWORD *)&__p[8] = 0;
                        *(_QWORD *)__p = &__p[8];
                        v194 = sub_23958A738(v195 + 80, (uint64_t)__p, (uint64_t)&__dst);
                        sub_23958B6B4((uint64_t)__p, *(char **)&__p[8]);
                        if (SHIBYTE(v387) < 0)
                          operator delete(__dst);
LABEL_234:
                        v202 = *(_QWORD *)(*(_QWORD *)v363 + 80) + 16 * v194;
                        v203 = *(_QWORD **)v202;
                        v204 = *(std::__shared_weak_count **)(v202 + 8);
                        if (v204)
                        {
                          v205 = (unint64_t *)&v204->__shared_owners_;
                          do
                            v206 = __ldxr(v205);
                          while (__stxr(v206 + 1, v205));
                          do
                            v207 = __ldaxr(v205);
                          while (__stlxr(v207 - 1, v205));
                          if (!v207)
                          {
                            ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
                            std::__shared_weak_count::__release_weak(v204);
                          }
                        }
                        (*(void (**)(_QWORD *, uint64_t))(*v203 + 32))(v203, 1);
                        if (v186)
                        {
                          v208 = 0;
                          v209 = (uint64_t **)v203[5];
                          v210 = v209 + 1;
                          do
                          {
                            v211 = v178[5] + 24 * v208;
                            if (*(char *)(v211 + 23) < 0)
                            {
                              sub_23941A7F8(__p, *(void **)v211, *(_QWORD *)(v211 + 8));
                            }
                            else
                            {
                              v212 = *(_OWORD *)v211;
                              *(_QWORD *)&__p[16] = *(_QWORD *)(v211 + 16);
                              *(_OWORD *)__p = v212;
                            }
                            v213 = *v210;
                            v214 = v209 + 1;
                            v215 = v209 + 1;
                            if (*v210)
                            {
                              while (1)
                              {
                                while (1)
                                {
                                  v215 = (uint64_t **)v213;
                                  v216 = *((unsigned __int16 *)v213 + 16);
                                  if (v216 <= (unsigned __int16)v208)
                                    break;
                                  v213 = *v215;
                                  v214 = v215;
                                  if (!*v215)
                                    goto LABEL_253;
                                }
                                if (v216 >= (unsigned __int16)v208)
                                  break;
                                v213 = v215[1];
                                if (!v213)
                                {
                                  v214 = v215 + 1;
                                  goto LABEL_253;
                                }
                              }
                              v217 = (char *)v215;
                            }
                            else
                            {
LABEL_253:
                              v217 = (char *)operator new(0x40uLL);
                              *((_WORD *)v217 + 16) = v208;
                              *((_QWORD *)v217 + 6) = 0;
                              *((_QWORD *)v217 + 7) = 0;
                              *((_QWORD *)v217 + 5) = 0;
                              *(_QWORD *)v217 = 0;
                              *((_QWORD *)v217 + 1) = 0;
                              *((_QWORD *)v217 + 2) = v215;
                              *v214 = (uint64_t *)v217;
                              v218 = (uint64_t *)**v209;
                              v219 = (uint64_t *)v217;
                              if (v218)
                              {
                                *v209 = v218;
                                v219 = *v214;
                              }
                              sub_2394213B8(v209[1], v219);
                              v209[2] = (uint64_t *)((char *)v209[2] + 1);
                            }
                            std::string::operator=((std::string *)(v217 + 40), (const std::string *)__p);
                            if ((__p[23] & 0x80000000) != 0)
                              operator delete(*(void **)__p);
                            ++v208;
                          }
                          while (v208 != v186);
                        }
                        *(_QWORD *)&__p[24] = 0;
                        *(_QWORD *)&v395[24] = 0;
                        v398 = 0;
                        v402 = 0;
                        v404 = 0;
                        v220 = a6[3];
                        if (v220)
                        {
                          if ((_QWORD *)v220 == a6)
                          {
                            v388 = (void **)&__dst;
                            (*(void (**)(_QWORD *, void ***))(*a6 + 24))(a6, &__dst);
LABEL_264:
                            sub_239587C2C(&__dst, __p);
                            v221 = v388;
                            if (v388 == (void **)&__dst)
                            {
                              v222 = 4;
                              v221 = (void **)&__dst;
                            }
                            else
                            {
                              if (!v388)
                                goto LABEL_269;
                              v222 = 5;
                            }
                            (*((void (**)(void))*v221 + v222))();
LABEL_269:
                            v223 = a6[7];
                            if (v223)
                            {
                              if ((_QWORD *)v223 == v344)
                              {
                                v388 = (void **)&__dst;
                                (*(void (**)(_QWORD *, void ***))(*v344 + 24))(v344, &__dst);
LABEL_274:
                                v224 = v395;
                                sub_2394D9710(&__dst, v395);
                                v225 = v388;
                                if (v388 == (void **)&__dst)
                                {
                                  v226 = 4;
                                  v225 = (void **)&__dst;
                                }
                                else
                                {
                                  if (!v388)
                                    goto LABEL_279;
                                  v226 = 5;
                                }
                                (*((void (**)(void))*v225 + v226))();
LABEL_279:
                                if (v341 != v340)
                                {
                                  if (!v346)
                                  {
                                    if (!v343)
                                    {
                                      v343 = 0;
                                      v239 = v408;
                                      if (!v408)
                                        goto LABEL_291;
LABEL_289:
                                      HIBYTE(v387) = 0;
                                      LOBYTE(__dst) = 0;
                                      *(_DWORD *)v351 = 1119092736;
                                      (*(void (**)(_BYTE *, _BYTE *, void ***))(*(_QWORD *)v239 + 48))(v239, v351, &__dst);
                                      if (SHIBYTE(v387) < 0)
                                        operator delete(__dst);
LABEL_291:
                                      if (v406
                                        && ((*(uint64_t (**)(_BYTE *))(*(_QWORD *)v406 + 48))(v406) & 1) != 0)
                                      {
                                        sub_239584310(__p);
LABEL_294:
                                        v35 = 0;
LABEL_488:
                                        v316 = (char *)v353;
                                        if (v353)
                                        {
                                          v317 = v354;
                                          v318 = v353;
                                          if (v354 != v353)
                                          {
                                            do
                                            {
                                              if (*(v317 - 1) < 0)
                                                operator delete(*((void **)v317 - 3));
                                              v317 -= 24;
                                            }
                                            while (v317 != v316);
                                            v318 = v353;
                                          }
                                          v354 = v316;
                                          operator delete(v318);
                                        }
                                        v319 = v357;
                                        if (v357)
                                        {
                                          v320 = (unint64_t *)&v357->__shared_owners_;
                                          do
                                            v321 = __ldaxr(v320);
                                          while (__stlxr(v321 - 1, v320));
                                          if (!v321)
                                          {
                                            ((void (*)(std::__shared_weak_count *))v319->__on_zero_shared)(v319);
                                            std::__shared_weak_count::__release_weak(v319);
                                          }
                                        }
                                        goto LABEL_501;
                                      }
                                      v240 = v404;
                                      if (v404 == v403)
                                      {
                                        v242 = 4;
                                        v240 = v403;
                                        v241 = (uint64_t)a2;
                                      }
                                      else
                                      {
                                        v241 = (uint64_t)a2;
                                        if (!v404)
                                          goto LABEL_300;
                                        v242 = 5;
                                      }
                                      (*(void (**)(void))(*v240 + 8 * v242))();
LABEL_300:
                                      v243 = v402;
                                      if (v402 == &v399)
                                      {
                                        v244 = 4;
                                        v243 = &v399;
                                      }
                                      else
                                      {
                                        if (!v402)
                                          goto LABEL_305;
                                        v244 = 5;
                                      }
                                      (*(void (**)(void))(*v243 + 8 * v244))();
LABEL_305:
                                      v245 = v398;
                                      if (v398 == &v395[32])
                                      {
                                        v246 = 4;
                                        v245 = &v395[32];
                                      }
                                      else
                                      {
                                        if (!v398)
                                          goto LABEL_310;
                                        v246 = 5;
                                      }
                                      (*(void (**)(void))(*v245 + 8 * v246))();
LABEL_310:
                                      if (*(_BYTE **)&v395[24] == v395)
                                      {
                                        v247 = 4;
                                      }
                                      else
                                      {
                                        if (!*(_QWORD *)&v395[24])
                                          goto LABEL_315;
                                        v247 = 5;
                                        v224 = *(_QWORD **)&v395[24];
                                      }
                                      (*(void (**)(_QWORD *))(*v224 + 8 * v247))(v224);
LABEL_315:
                                      v248 = *(_QWORD **)&__p[24];
                                      if (*(_BYTE **)&__p[24] == __p)
                                      {
                                        v249 = 4;
                                        v248 = __p;
                                      }
                                      else
                                      {
                                        if (!*(_QWORD *)&__p[24])
                                          goto LABEL_320;
                                        v249 = 5;
                                      }
                                      (*(void (**)(void))(*v248 + 8 * v249))();
LABEL_320:
                                      strcpy(v351, "0.25");
                                      *(_DWORD *)&v351[23] = 16843012;
                                      v352 = 1;
                                      sub_239935244(*(_QWORD **)v363, *(char ***)v361, (std::string *)v351, 0, 0);
                                      LOBYTE(__dst) = 0;
                                      HIDWORD(__dst) = 1;
                                      LOWORD(v386) = 0;
                                      sub_239953B78(&v387);
                                      LOBYTE(__dst) = 1;
                                      BYTE1(v386) = 1;
                                      v250 = &v390;
                                      v251 = v390;
                                      v252 = &v390;
                                      v253 = &v390;
                                      if (v390)
                                      {
                                        while (1)
                                        {
                                          while (1)
                                          {
                                            v253 = (uint64_t **)v251;
                                            v254 = *((_DWORD *)v251 + 8);
                                            if (v254 < 2)
                                              break;
                                            v251 = *v253;
                                            v252 = v253;
                                            if (!*v253)
                                              goto LABEL_327;
                                          }
                                          if (v254 == 1)
                                            break;
                                          v251 = v253[1];
                                          if (!v251)
                                          {
                                            v252 = v253 + 1;
                                            goto LABEL_327;
                                          }
                                        }
                                        v255 = v253;
                                      }
                                      else
                                      {
LABEL_327:
                                        v255 = operator new(0x48uLL);
                                        v255[8] = 1;
                                        *((_QWORD *)v255 + 8) = 0;
                                        *(_QWORD *)v255 = 0;
                                        *((_QWORD *)v255 + 1) = 0;
                                        *((_QWORD *)v255 + 2) = v253;
                                        *v252 = (uint64_t *)v255;
                                        v256 = (uint64_t *)v255;
                                        if (*v389)
                                        {
                                          v389 = (_QWORD *)*v389;
                                          v256 = *v252;
                                        }
                                        sub_2394213B8(v390, v256);
                                        ++v391;
                                      }
                                      *(_QWORD *)__p = &off_250AF0798;
                                      *(_QWORD *)&__p[24] = __p;
                                      sub_23958886C(__p, (_QWORD *)v255 + 5);
                                      v257 = *(_QWORD **)&__p[24];
                                      if (*(_BYTE **)&__p[24] == __p)
                                      {
                                        v258 = 4;
                                        v257 = __p;
                                      }
                                      else
                                      {
                                        if (!*(_QWORD *)&__p[24])
                                          goto LABEL_336;
                                        v258 = 5;
                                      }
                                      (*(void (**)(void))(*v257 + 8 * v258))();
LABEL_336:
                                      v259 = v390;
                                      v260 = &v390;
                                      v261 = &v390;
                                      if (v390)
                                      {
                                        while (1)
                                        {
                                          while (1)
                                          {
                                            v261 = (uint64_t **)v259;
                                            v262 = *((_DWORD *)v259 + 8);
                                            if (v262 < 3)
                                              break;
                                            v259 = *v261;
                                            v260 = v261;
                                            if (!*v261)
                                              goto LABEL_343;
                                          }
                                          if (v262 == 2)
                                            break;
                                          v259 = v261[1];
                                          if (!v259)
                                          {
                                            v260 = v261 + 1;
                                            goto LABEL_343;
                                          }
                                        }
                                        v263 = v261;
                                      }
                                      else
                                      {
LABEL_343:
                                        v263 = operator new(0x48uLL);
                                        v263[8] = 2;
                                        *((_QWORD *)v263 + 8) = 0;
                                        *(_QWORD *)v263 = 0;
                                        *((_QWORD *)v263 + 1) = 0;
                                        *((_QWORD *)v263 + 2) = v261;
                                        *v260 = (uint64_t *)v263;
                                        v264 = (uint64_t *)v263;
                                        if (*v389)
                                        {
                                          v389 = (_QWORD *)*v389;
                                          v264 = *v260;
                                        }
                                        sub_2394213B8(v390, v264);
                                        ++v391;
                                      }
                                      *(_QWORD *)__p = &off_250AF0798;
                                      *(_QWORD *)&__p[24] = __p;
                                      sub_23958886C(__p, (_QWORD *)v263 + 5);
                                      v265 = *(_QWORD **)&__p[24];
                                      if (*(_BYTE **)&__p[24] == __p)
                                      {
                                        v266 = 4;
                                        v265 = __p;
                                      }
                                      else
                                      {
                                        if (!*(_QWORD *)&__p[24])
                                          goto LABEL_352;
                                        v266 = 5;
                                      }
                                      (*(void (**)(void))(*v265 + 8 * v266))();
LABEL_352:
                                      v267 = v390;
                                      v268 = &v390;
                                      v269 = &v390;
                                      if (v390)
                                      {
                                        while (1)
                                        {
                                          while (1)
                                          {
                                            v269 = (uint64_t **)v267;
                                            v270 = *((_DWORD *)v267 + 8);
                                            if (v270 < 4)
                                              break;
                                            v267 = *v269;
                                            v268 = v269;
                                            if (!*v269)
                                              goto LABEL_359;
                                          }
                                          if (v270 == 3)
                                            break;
                                          v267 = v269[1];
                                          if (!v267)
                                          {
                                            v268 = v269 + 1;
                                            goto LABEL_359;
                                          }
                                        }
                                        v271 = v269;
                                      }
                                      else
                                      {
LABEL_359:
                                        v271 = operator new(0x48uLL);
                                        v271[8] = 3;
                                        *((_QWORD *)v271 + 8) = 0;
                                        *(_QWORD *)v271 = 0;
                                        *((_QWORD *)v271 + 1) = 0;
                                        *((_QWORD *)v271 + 2) = v269;
                                        *v268 = (uint64_t *)v271;
                                        v272 = (uint64_t *)v271;
                                        if (*v389)
                                        {
                                          v389 = (_QWORD *)*v389;
                                          v272 = *v268;
                                        }
                                        sub_2394213B8(v390, v272);
                                        ++v391;
                                      }
                                      *(_QWORD *)__p = &off_250AF0798;
                                      *(_QWORD *)&__p[24] = __p;
                                      sub_23958886C(__p, (_QWORD *)v271 + 5);
                                      v273 = *(_QWORD **)&__p[24];
                                      if (*(_BYTE **)&__p[24] == __p)
                                      {
                                        v274 = 4;
                                        v273 = __p;
                                      }
                                      else
                                      {
                                        if (!*(_QWORD *)&__p[24])
                                          goto LABEL_368;
                                        v274 = 5;
                                      }
                                      (*(void (**)(void))(*v273 + 8 * v274))();
LABEL_368:
                                      v275 = v390;
                                      v276 = &v390;
                                      v277 = &v390;
                                      if (v390)
                                      {
                                        while (1)
                                        {
                                          while (1)
                                          {
                                            v277 = (uint64_t **)v275;
                                            v278 = *((_DWORD *)v275 + 8);
                                            if (v278 < 5)
                                              break;
                                            v275 = *v277;
                                            v276 = v277;
                                            if (!*v277)
                                              goto LABEL_375;
                                          }
                                          if (v278 == 4)
                                            break;
                                          v275 = v277[1];
                                          if (!v275)
                                          {
                                            v276 = v277 + 1;
                                            goto LABEL_375;
                                          }
                                        }
                                        v279 = v277;
                                      }
                                      else
                                      {
LABEL_375:
                                        v279 = operator new(0x48uLL);
                                        v279[8] = 4;
                                        *((_QWORD *)v279 + 8) = 0;
                                        *(_QWORD *)v279 = 0;
                                        *((_QWORD *)v279 + 1) = 0;
                                        *((_QWORD *)v279 + 2) = v277;
                                        *v276 = (uint64_t *)v279;
                                        v280 = (uint64_t *)v279;
                                        if (*v389)
                                        {
                                          v389 = (_QWORD *)*v389;
                                          v280 = *v276;
                                        }
                                        sub_2394213B8(v390, v280);
                                        ++v391;
                                      }
                                      *(_QWORD *)__p = &off_250AF0798;
                                      *(_QWORD *)&__p[24] = __p;
                                      sub_23958886C(__p, (_QWORD *)v279 + 5);
                                      v281 = *(_QWORD **)&__p[24];
                                      if (*(_BYTE **)&__p[24] == __p)
                                      {
                                        v282 = 4;
                                        v281 = __p;
                                      }
                                      else
                                      {
                                        if (!*(_QWORD *)&__p[24])
                                          goto LABEL_384;
                                        v282 = 5;
                                      }
                                      (*(void (**)(void))(*v281 + 8 * v282))();
LABEL_384:
                                      v283 = v390;
                                      v284 = &v390;
                                      v285 = &v390;
                                      if (v390)
                                      {
                                        while (1)
                                        {
                                          while (1)
                                          {
                                            v285 = (uint64_t **)v283;
                                            v286 = *((_DWORD *)v283 + 8);
                                            if (v286 < 6)
                                              break;
                                            v283 = *v285;
                                            v284 = v285;
                                            if (!*v285)
                                              goto LABEL_391;
                                          }
                                          if (v286 == 5)
                                            break;
                                          v283 = v285[1];
                                          if (!v283)
                                          {
                                            v284 = v285 + 1;
                                            goto LABEL_391;
                                          }
                                        }
                                        v287 = v285;
                                      }
                                      else
                                      {
LABEL_391:
                                        v287 = operator new(0x48uLL);
                                        v287[8] = 5;
                                        *((_QWORD *)v287 + 8) = 0;
                                        *(_QWORD *)v287 = 0;
                                        *((_QWORD *)v287 + 1) = 0;
                                        *((_QWORD *)v287 + 2) = v285;
                                        *v284 = (uint64_t *)v287;
                                        v288 = (uint64_t *)v287;
                                        if (*v389)
                                        {
                                          v389 = (_QWORD *)*v389;
                                          v288 = *v284;
                                        }
                                        sub_2394213B8(v390, v288);
                                        ++v391;
                                      }
                                      *(_QWORD *)__p = &off_250AF0798;
                                      *(_QWORD *)&__p[24] = __p;
                                      sub_23958886C(__p, (_QWORD *)v287 + 5);
                                      v289 = *(_QWORD **)&__p[24];
                                      if (*(_BYTE **)&__p[24] == __p)
                                      {
                                        v290 = 4;
                                        v289 = __p;
                                      }
                                      else
                                      {
                                        if (!*(_QWORD *)&__p[24])
                                          goto LABEL_400;
                                        v290 = 5;
                                      }
                                      (*(void (**)(void))(*v289 + 8 * v290))();
LABEL_400:
                                      v291 = v390;
                                      v292 = &v390;
                                      v293 = &v390;
                                      if (v390)
                                      {
                                        while (1)
                                        {
                                          while (1)
                                          {
                                            v293 = (uint64_t **)v291;
                                            v294 = *((_DWORD *)v291 + 8);
                                            if (v294 < 8)
                                              break;
                                            v291 = *v293;
                                            v292 = v293;
                                            if (!*v293)
                                              goto LABEL_407;
                                          }
                                          if (v294 == 7)
                                            break;
                                          v291 = v293[1];
                                          if (!v291)
                                          {
                                            v292 = v293 + 1;
                                            goto LABEL_407;
                                          }
                                        }
                                        v295 = v293;
                                      }
                                      else
                                      {
LABEL_407:
                                        v295 = operator new(0x48uLL);
                                        v295[8] = 7;
                                        *((_QWORD *)v295 + 8) = 0;
                                        *(_QWORD *)v295 = 0;
                                        *((_QWORD *)v295 + 1) = 0;
                                        *((_QWORD *)v295 + 2) = v293;
                                        *v292 = (uint64_t *)v295;
                                        v296 = (uint64_t *)v295;
                                        if (*v389)
                                        {
                                          v389 = (_QWORD *)*v389;
                                          v296 = *v292;
                                        }
                                        sub_2394213B8(v390, v296);
                                        ++v391;
                                      }
                                      *(_QWORD *)__p = &off_250AF0798;
                                      *(_QWORD *)&__p[24] = __p;
                                      sub_23958886C(__p, (_QWORD *)v295 + 5);
                                      v297 = *(_QWORD **)&__p[24];
                                      if (*(_BYTE **)&__p[24] == __p)
                                      {
                                        v298 = 4;
                                        v297 = __p;
                                      }
                                      else
                                      {
                                        if (!*(_QWORD *)&__p[24])
                                          goto LABEL_416;
                                        v298 = 5;
                                      }
                                      (*(void (**)(void))(*v297 + 8 * v298))();
LABEL_416:
                                      v299 = v390;
                                      v300 = &v390;
                                      if (v390)
                                      {
                                        while (1)
                                        {
                                          while (1)
                                          {
                                            v300 = (uint64_t **)v299;
                                            v301 = *((_DWORD *)v299 + 8);
                                            if (v301 < 14)
                                              break;
                                            v299 = *v300;
                                            v250 = v300;
                                            if (!*v300)
                                              goto LABEL_423;
                                          }
                                          if (v301 == 13)
                                            break;
                                          v299 = v300[1];
                                          if (!v299)
                                          {
                                            v250 = v300 + 1;
                                            goto LABEL_423;
                                          }
                                        }
                                        v302 = v300;
                                      }
                                      else
                                      {
LABEL_423:
                                        v302 = operator new(0x48uLL);
                                        v302[8] = 13;
                                        *((_QWORD *)v302 + 8) = 0;
                                        *(_QWORD *)v302 = 0;
                                        *((_QWORD *)v302 + 1) = 0;
                                        *((_QWORD *)v302 + 2) = v300;
                                        *v250 = (uint64_t *)v302;
                                        v303 = (uint64_t *)v302;
                                        if (*v389)
                                        {
                                          v389 = (_QWORD *)*v389;
                                          v303 = *v250;
                                        }
                                        sub_2394213B8(v390, v303);
                                        ++v391;
                                      }
                                      *(_QWORD *)__p = &off_250AF0798;
                                      *(_QWORD *)&__p[24] = __p;
                                      sub_23958886C(__p, (_QWORD *)v302 + 5);
                                      v304 = *(_QWORD **)&__p[24];
                                      if (*(_BYTE **)&__p[24] == __p)
                                      {
                                        v305 = 4;
                                        v304 = __p;
                                      }
                                      else
                                      {
                                        if (!*(_QWORD *)&__p[24])
                                        {
LABEL_432:
                                          if (v343 && sub_239929498((float *)&v373, &v387))
                                          {
                                            if (*(char *)(v241 + 23) < 0)
                                            {
                                              sub_23941A7F8(__p, *(void **)v241, *(_QWORD *)(v241 + 8));
                                            }
                                            else
                                            {
                                              *(_OWORD *)__p = *(_OWORD *)v241;
                                              *(_QWORD *)&__p[16] = *(_QWORD *)(v241 + 16);
                                            }
                                            v306 = sub_239955904((uint64_t)__p, *(uint64_t *)v361, v356, (uint64_t)&__dst);
                                            if ((__p[23] & 0x80000000) != 0)
                                              operator delete(*(void **)__p);
                                          }
                                          else
                                          {
                                            v306 = 0;
                                          }
                                          v307 = v354;
                                          if ((unint64_t)v354 >= v355)
                                          {
                                            v354 = sub_23958837C((char **)&v353, v241);
                                            if (*(char *)(v241 + 23) < 0)
                                              goto LABEL_440;
                                          }
                                          else if (*(char *)(v241 + 23) < 0)
                                          {
                                            sub_23941A7F8(v354, *(void **)v241, *(_QWORD *)(v241 + 8));
                                            v354 = v307 + 24;
                                            if (*(char *)(v241 + 23) < 0)
                                              goto LABEL_440;
                                          }
                                          else
                                          {
                                            v308 = *(_OWORD *)v241;
                                            *((_QWORD *)v354 + 2) = *(_QWORD *)(v241 + 16);
                                            *(_OWORD *)v307 = v308;
                                            v354 = v307 + 24;
                                            if (*(char *)(v241 + 23) < 0)
                                            {
LABEL_440:
                                              sub_23941A7F8(__p, *(void **)v241, *(_QWORD *)(v241 + 8));
                                              goto LABEL_443;
                                            }
                                          }
                                          *(_OWORD *)__p = *(_OWORD *)v241;
                                          *(_QWORD *)&__p[16] = *(_QWORD *)(v241 + 16);
LABEL_443:
                                          memset(&__replacement, 0, sizeof(__replacement));
                                          sub_23948900C(&__replacement.__pn_, (std::string *)".mtl", (std::string *)"");
                                          v309 = std::__fs::filesystem::path::replace_extension((std::__fs::filesystem::path *)__p, &__replacement);
                                          v310 = v354;
                                          if ((unint64_t)v354 >= v355)
                                          {
                                            v354 = sub_23958837C((char **)&v353, (uint64_t)v309);
                                            if ((SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                              goto LABEL_454;
                                          }
                                          else
                                          {
                                            if ((SHIBYTE(v309->__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                            {
                                              v311 = *(_OWORD *)&v309->__pn_.__r_.__value_.__l.__data_;
                                              *((_QWORD *)v354 + 2) = *((_QWORD *)&v309->__pn_.__r_.__value_.__l + 2);
                                              *(_OWORD *)v310 = v311;
                                              v354 = v310 + 24;
                                              if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                                goto LABEL_446;
LABEL_454:
                                              if ((__p[23] & 0x80000000) != 0)
                                              {
LABEL_447:
                                                operator delete(*(void **)__p);
                                                if (v378)
                                                  v312 = v306;
                                                else
                                                  v312 = 0;
                                                if (v312 != 1)
                                                  goto LABEL_451;
                                                goto LABEL_459;
                                              }
LABEL_455:
                                              if (v378)
                                                v313 = v306;
                                              else
                                                v313 = 0;
                                              if (v313 != 1)
                                              {
LABEL_451:
                                                if (!v408)
                                                  goto LABEL_481;
                                                goto LABEL_478;
                                              }
LABEL_459:
                                              sub_239587260((uint64_t)__p, (uint64_t *)&__dst);
                                              std::string::operator=((std::string *)&v395[40], &v382);
                                              v399 = v383;
                                              v400 = v384;
                                              MEMORY[0x23B83DBFC](&v401, "ObjectCapture");
                                              if (*(char *)(v241 + 23) < 0)
                                                sub_23941A7F8(&__replacement, *(void **)v241, *(_QWORD *)(v241 + 8));
                                              else
                                                __replacement = *(std::__fs::filesystem::path *)v241;
                                              sub_239916D44(&v349.__pn_, (std::string *)".usdz");
                                              std::__fs::filesystem::path::replace_extension(&__replacement, &v349);
                                              if (SHIBYTE(v349.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                                operator delete(v349.__pn_.__r_.__value_.__l.__data_);
                                              if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                                sub_23941A7F8(&v349, __replacement.__pn_.__r_.__value_.__l.__data_, __replacement.__pn_.__r_.__value_.__l.__size_);
                                              else
                                                v349 = __replacement;
                                              v314 = sub_23995D1C0((uint64_t)&v349, *(uint64_t *)v361, v356, (uint64_t)__p);
                                              if (SHIBYTE(v349.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                              {
                                                operator delete(v349.__pn_.__r_.__value_.__l.__data_);
                                                if ((SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                                {
LABEL_473:
                                                  sub_239586A64((uint64_t)__p);
                                                  if ((v314 & 1) == 0)
                                                    goto LABEL_485;
LABEL_477:
                                                  v306 = 1;
                                                  if (!v408)
                                                    goto LABEL_481;
LABEL_478:
                                                  sub_23941A4FC(__p, "");
                                                  LODWORD(__replacement.__pn_.__r_.__value_.__l.__data_) = 1120403456;
                                                  if (!v408)
                                                    sub_2394172E0();
                                                  (*(void (**)(_BYTE *, std::__fs::filesystem::path *, _BYTE *))(*(_QWORD *)v408 + 48))(v408, &__replacement, __p);
                                                  if ((__p[23] & 0x80000000) != 0)
                                                    operator delete(*(void **)__p);
LABEL_481:
                                                  if (v306)
                                                  {
                                                    v315 = a6[11];
                                                    if (v315)
                                                      (*(void (**)(uint64_t, void **))(*(_QWORD *)v315 + 48))(v315, &v353);
                                                    v35 = 1;
                                                    goto LABEL_486;
                                                  }
LABEL_485:
                                                  v35 = 0;
LABEL_486:
                                                  sub_2395879A4((uint64_t)&v389, v390);
                                                  sub_23958781C((uint64_t)&v387, (uint64_t)v388);
                                                  if ((v351[23] & 0x80000000) != 0)
                                                    operator delete(*(void **)v351);
                                                  goto LABEL_488;
                                                }
                                              }
                                              else if ((SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                              {
                                                goto LABEL_473;
                                              }
                                              operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
                                              sub_239586A64((uint64_t)__p);
                                              if ((v314 & 1) == 0)
                                                goto LABEL_485;
                                              goto LABEL_477;
                                            }
                                            sub_23941A7F8(v354, v309->__pn_.__r_.__value_.__l.__data_, v309->__pn_.__r_.__value_.__l.__size_);
                                            v354 = v310 + 24;
                                            if ((SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                              goto LABEL_454;
                                          }
LABEL_446:
                                          operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
                                          if ((__p[23] & 0x80000000) != 0)
                                            goto LABEL_447;
                                          goto LABEL_455;
                                        }
                                        v305 = 5;
                                      }
                                      (*(void (**)(void))(*v304 + 8 * v305))();
                                      goto LABEL_432;
                                    }
                                    v234 = *(_QWORD *)v367;
                                    v235 = v365;
                                    v236 = *(_QWORD *)v363;
                                    v237 = v356;
                                    v231 = v392;
                                    sub_239586FCC(v392, __p);
                                    v233 = sub_239917258(v234, v235, v236, v237, (uint64_t)&v369, 0, 0, v238, (uint64_t)&v353, 1, v392, 1, a2);
LABEL_285:
                                    v343 = v233;
                                    sub_239584310(v231);
                                    v239 = v408;
                                    if (!v408)
                                      goto LABEL_291;
                                    goto LABEL_289;
                                  }
                                  if (v343)
                                  {
                                    v227 = *(_QWORD *)v367;
                                    v228 = v365;
                                    v229 = *(_QWORD *)v363;
                                    v230 = v356;
                                    v231 = v393;
                                    sub_239586FCC(v393, __p);
                                    v233 = sub_239917258(v227, v228, v229, v230, (uint64_t)&v369, a4 + 64, 1, v232, (uint64_t)&v353, 1, v393, 1, a2);
                                    goto LABEL_285;
                                  }
                                  v343 = 0;
                                }
                                v239 = v408;
                                if (!v408)
                                  goto LABEL_291;
                                goto LABEL_289;
                              }
                              v223 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v223 + 16))(v223);
                            }
                            v388 = (void **)v223;
                            goto LABEL_274;
                          }
                          v220 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v220 + 16))(v220);
                        }
                        v388 = (void **)v220;
                        goto LABEL_264;
                      }
                    }
                    memmove(v199, v196, v198);
                    goto LABEL_232;
                  }
                }
                memmove(v191, v188, v190);
                goto LABEL_220;
              }
LABEL_207:
              v183 = (unint64_t *)&v177->__shared_owners_;
              do
                v184 = __ldxr(v183);
              while (__stxr(v184 + 1, v183));
              do
                v185 = __ldaxr(v183);
              while (__stlxr(v185 - 1, v183));
              if (!v185)
              {
                ((void (*)(std::__shared_weak_count *))v177->__on_zero_shared)(v177);
                std::__shared_weak_count::__release_weak(v177);
              }
              goto LABEL_212;
            }
          }
          memmove(p_dst, v173, v175);
          goto LABEL_202;
        }
      }
      v170 = *(_QWORD *)&v395[16];
      *(_QWORD *)(a4 + 288) = *(_QWORD *)__p;
      *(_QWORD *)(a4 + 320) = v170;
      goto LABEL_184;
    }
  }
  else if (v60 != -1)
  {
    goto LABEL_83;
  }
LABEL_174:
  v35 = 0;
LABEL_501:
  if ((char)v359 < 0)
    operator delete(v358[0]);
  v322 = v362;
  if (v362)
  {
    v323 = (unint64_t *)&v362->__shared_owners_;
    do
      v324 = __ldaxr(v323);
    while (__stlxr(v324 - 1, v323));
    if (!v324)
    {
      ((void (*)(std::__shared_weak_count *))v322->__on_zero_shared)(v322);
      std::__shared_weak_count::__release_weak(v322);
    }
  }
  v325 = v364;
  if (v364)
  {
    v326 = (unint64_t *)&v364->__shared_owners_;
    do
      v327 = __ldaxr(v326);
    while (__stlxr(v327 - 1, v326));
    if (!v327)
    {
      ((void (*)(std::__shared_weak_count *))v325->__on_zero_shared)(v325);
      std::__shared_weak_count::__release_weak(v325);
    }
  }
LABEL_513:
  v328 = v366;
  if (!v366)
    goto LABEL_517;
  v329 = (unint64_t *)&v366->__shared_owners_;
  do
    v330 = __ldaxr(v329);
  while (__stlxr(v330 - 1, v329));
  if (!v330)
  {
    ((void (*)(std::__shared_weak_count *))v328->__on_zero_shared)(v328);
    std::__shared_weak_count::__release_weak(v328);
    v331 = v368;
    if (!v368)
      goto LABEL_521;
  }
  else
  {
LABEL_517:
    v331 = v368;
    if (!v368)
      goto LABEL_521;
  }
  v332 = (unint64_t *)&v331->__shared_owners_;
  do
    v333 = __ldaxr(v332);
  while (__stlxr(v333 - 1, v332));
  if (v333)
  {
LABEL_521:
    if ((SHIBYTE(v382.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_522;
    goto LABEL_539;
  }
  ((void (*)(std::__shared_weak_count *))v331->__on_zero_shared)(v331);
  std::__shared_weak_count::__release_weak(v331);
  if ((SHIBYTE(v382.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_522:
    if ((SHIBYTE(v380.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_523;
    goto LABEL_540;
  }
LABEL_539:
  operator delete(v382.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v380.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_523:
    v334 = v379[0];
    if (!v379[0])
      goto LABEL_525;
    goto LABEL_524;
  }
LABEL_540:
  operator delete(v380.__r_.__value_.__l.__data_);
  v334 = v379[0];
  if (v379[0])
  {
LABEL_524:
    v379[1] = v334;
    operator delete(v334);
  }
LABEL_525:
  sub_239586EB4((uint64_t)&v373);
  v335 = v406;
  if (v406 == v405)
  {
    v336 = 4;
    v335 = v405;
  }
  else
  {
    if (!v406)
      goto LABEL_530;
    v336 = 5;
  }
  (*(void (**)(void))(*v335 + 8 * v336))();
LABEL_530:
  v337 = v408;
  if (v408 == v407)
  {
    v338 = 4;
    v337 = v407;
    goto LABEL_534;
  }
  if (v408)
  {
    v338 = 5;
LABEL_534:
    (*(void (**)(void))(*v337 + 8 * v338))();
  }
  return v35;
}

void sub_239939D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,uint64_t a50,char a51,uint64_t a52,char a53,uint64_t a54,char a55,uint64_t a56,char a57,uint64_t a58,char a59)
{
  uint64_t v59;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;

  sub_239586B24((uint64_t)&STACK[0x390]);
  if (a37 < 0)
    operator delete(__p);
  sub_23941A260(&a39);
  sub_239416DA0((uint64_t)&a42);
  if (a49 < 0)
    operator delete(a44);
  sub_239416DA0((uint64_t)&a51);
  sub_239416DA0((uint64_t)&a53);
  sub_239416DA0((uint64_t)&a55);
  sub_239416DA0((uint64_t)&a57);
  sub_23958441C((uint64_t)&a59);
  v61 = *(_QWORD **)(v59 - 144);
  if (v61 == (_QWORD *)(v59 - 168))
  {
    v62 = 4;
    v61 = (_QWORD *)(v59 - 168);
  }
  else
  {
    if (!v61)
      goto LABEL_10;
    v62 = 5;
  }
  (*(void (**)(void))(*v61 + 8 * v62))();
LABEL_10:
  v63 = *(_QWORD *)(v59 - 112);
  if (v63 == v59 - 136)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v59 - 136) + 32))(v59 - 136);
    _Unwind_Resume(a1);
  }
  if (!v63)
    _Unwind_Resume(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v63 + 40))(v63);
  _Unwind_Resume(a1);
}

void sub_23993A110(_QWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  __int16 v14;
  char v15;

  v15 = 0;
  v14 = 0;
  *a2 = sub_23993ACEC((uint64_t)(a1 + 7), (uint64_t)&v14, a3);
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 32))(a1);
  v5 = (uint64_t *)a1[7];
  v6 = (uint64_t *)a1[8];
  if (v5 != v6)
  {
    v7 = v4;
    do
    {
      v8 = *v5;
      v9 = (std::__shared_weak_count *)v5[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(p_shared_owners);
        while (__stxr(v11 + 1, p_shared_owners));
      }
      if (v8)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v7);
      if (v9)
      {
        v12 = (unint64_t *)&v9->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
}

void sub_23993A1F0(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;

  if (v1)
    sub_239EC00D0(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23993A208(uint64_t **a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  void *v12;
  int v13;
  unsigned __int8 *v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *__s1[2];
  uint64_t v20;

  v3 = *a1;
  v4 = a1[1];
  if (*a1 != v4)
  {
    v6 = 0;
    do
    {
      v8 = *v3;
      if (!*v3)
        goto LABEL_5;
      if (*(char *)(v8 + 31) < 0)
      {
        sub_23941A7F8(__s1, *(void **)(v8 + 8), *(_QWORD *)(v8 + 16));
      }
      else
      {
        v9 = *(_OWORD *)(v8 + 8);
        v20 = *(_QWORD *)(v8 + 24);
        *(_OWORD *)__s1 = v9;
      }
      v10 = HIBYTE(v20);
      if (v20 >= 0)
        v11 = (void *)HIBYTE(v20);
      else
        v11 = __s1[1];
      v12 = (void *)a3[23];
      v13 = (char)v12;
      if ((char)v12 < 0)
        v12 = (void *)*((_QWORD *)a3 + 1);
      if (v11 == v12)
      {
        if (v13 >= 0)
          v14 = a3;
        else
          v14 = *(unsigned __int8 **)a3;
        if (v20 < 0)
        {
          v17 = __s1[0];
          if (memcmp(__s1[0], v14, (size_t)__s1[1]))
          {
            operator delete(v17);
            goto LABEL_5;
          }
LABEL_27:
          v7 = *(_QWORD *)(*v3 + 32) == (_QWORD)sub_23992CCEC;
          if ((v10 & 0x80) == 0)
          {
LABEL_4:
            if (v7)
              return v6;
            goto LABEL_5;
          }
          goto LABEL_28;
        }
        if (!HIBYTE(v20))
          goto LABEL_27;
        v15 = __s1;
        v16 = HIBYTE(v20);
        while (*(unsigned __int8 *)v15 == *v14)
        {
          v15 = (void **)((char *)v15 + 1);
          ++v14;
          if (!--v16)
            goto LABEL_27;
        }
      }
      v7 = 0;
      if ((v20 & 0x8000000000000000) == 0)
        goto LABEL_4;
LABEL_28:
      operator delete(__s1[0]);
      if (v7)
        return v6;
LABEL_5:
      v3 += 2;
      v6 = (v6 + 1);
    }
    while (v3 != v4);
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_23993A364(uint64_t **a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  void *v12;
  int v13;
  unsigned __int8 *v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *__s1[2];
  uint64_t v20;

  v3 = *a1;
  v4 = a1[1];
  if (*a1 != v4)
  {
    v6 = 0;
    do
    {
      v8 = *v3;
      if (!*v3)
        goto LABEL_5;
      if (*(char *)(v8 + 31) < 0)
      {
        sub_23941A7F8(__s1, *(void **)(v8 + 8), *(_QWORD *)(v8 + 16));
      }
      else
      {
        v9 = *(_OWORD *)(v8 + 8);
        v20 = *(_QWORD *)(v8 + 24);
        *(_OWORD *)__s1 = v9;
      }
      v10 = HIBYTE(v20);
      if (v20 >= 0)
        v11 = (void *)HIBYTE(v20);
      else
        v11 = __s1[1];
      v12 = (void *)a3[23];
      v13 = (char)v12;
      if ((char)v12 < 0)
        v12 = (void *)*((_QWORD *)a3 + 1);
      if (v11 == v12)
      {
        if (v13 >= 0)
          v14 = a3;
        else
          v14 = *(unsigned __int8 **)a3;
        if (v20 < 0)
        {
          v17 = __s1[0];
          if (memcmp(__s1[0], v14, (size_t)__s1[1]))
          {
            operator delete(v17);
            goto LABEL_5;
          }
LABEL_27:
          v7 = *(_QWORD *)(*v3 + 32) == (_QWORD)sub_23993A4C0;
          if ((v10 & 0x80) == 0)
          {
LABEL_4:
            if (v7)
              return v6;
            goto LABEL_5;
          }
          goto LABEL_28;
        }
        if (!HIBYTE(v20))
          goto LABEL_27;
        v15 = __s1;
        v16 = HIBYTE(v20);
        while (*(unsigned __int8 *)v15 == *v14)
        {
          v15 = (void **)((char *)v15 + 1);
          ++v14;
          if (!--v16)
            goto LABEL_27;
        }
      }
      v7 = 0;
      if ((v20 & 0x8000000000000000) == 0)
        goto LABEL_4;
LABEL_28:
      operator delete(__s1[0]);
      if (v7)
        return v6;
LABEL_5:
      v3 += 2;
      v6 = (v6 + 1);
    }
    while (v3 != v4);
  }
  return 0xFFFFFFFFLL;
}

uint64_t (*sub_23993A4C0())()
{
  return sub_23993A4C0;
}

uint64_t sub_23993A4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v6 = *(char **)a1;
  v5 = *(char **)(a1 + 8);
  if (*(char **)a1 == v5)
  {
    v7 = 0;
  }
  else
  {
    v7 = 0;
    while (*(_QWORD *)v6)
    {
      v6 += 16;
      v7 = (v7 + 1);
      if (v6 == v5)
        goto LABEL_8;
    }
  }
  if (v6 == v5)
  {
LABEL_8:
    v19 = 0;
    v20 = 0;
    if ((unint64_t)v5 >= *(_QWORD *)(a1 + 16))
    {
      v8 = sub_2394E46BC((char **)a1, (uint64_t)&v19);
      v9 = v20;
      *(_QWORD *)(a1 + 8) = v8;
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      *(_QWORD *)v5 = 0;
      *((_QWORD *)v5 + 1) = 0;
      *(_QWORD *)(a1 + 8) = v5 + 16;
    }
  }
  v12 = operator new(0x58uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = &off_250AF05A0;
  v13 = v12 + 4;
  v12[3] = off_250AF0C30;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v13, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)a3;
    v12[6] = *(_QWORD *)(a3 + 16);
  }
  v12[3] = &off_250AF05D8;
  v12[9] = 0;
  v12[10] = 0;
  v12[7] = sub_23993A4C0;
  v12[8] = 0;
  v14 = (_QWORD *)(*(_QWORD *)a1 + 16 * v7);
  v15 = (std::__shared_weak_count *)v14[1];
  *v14 = v12 + 3;
  v14[1] = v12;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  return v7;
}

void sub_23993A658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23993A66C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_23993A684(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF05A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23993A694(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF05A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23993A6C4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_23993A6D4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  *a1 = &off_250AF05D8;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      v5 = a1[6];
      do
      {
        v7 = *(void **)(v5 - 24);
        v5 -= 24;
        v6 = v7;
        if (v7)
        {
          *(_QWORD *)(v3 - 16) = v6;
          operator delete(v6);
        }
        v3 = v5;
      }
      while (v5 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  return sub_23995E4A4((uint64_t)a1);
}

void sub_23993A754(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  *a1 = &off_250AF05D8;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      v5 = a1[6];
      do
      {
        v7 = *(void **)(v5 - 24);
        v5 -= 24;
        v6 = v7;
        if (v7)
        {
          *(_QWORD *)(v3 - 16) = v6;
          operator delete(v6);
        }
        v3 = v5;
      }
      while (v5 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  sub_23995E4A4((uint64_t)a1);
  JUMPOUT(0x23B83E31CLL);
}

unint64_t sub_23993A7E8(uint64_t a1)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3);
}

void sub_23993A804(uint64_t a1, unint64_t a2)
{
  sub_2395135EC(a1 + 40, a2);
}

void sub_23993A80C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;

  v5 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v3 = a1 + 40;
  v6 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3);
  v7 = a2 >= v6;
  v8 = a2 - v6;
  if (v8 != 0 && v7)
  {
    sub_2394D951C(v3, v8);
  }
  else if (!v7)
  {
    v9 = v5 + 24 * a2;
    if (v4 != v9)
    {
      v10 = v4;
      do
      {
        v12 = *(void **)(v10 - 24);
        v10 -= 24;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v4 - 16) = v11;
          operator delete(v11);
        }
        v4 = v10;
      }
      while (v10 != v9);
    }
    *(_QWORD *)(a1 + 48) = v9;
  }
}

void sub_23993A8A4(_QWORD *a1)
{
  char *v1;
  char *v2;
  char *v3;
  void *v4;
  void *v5;

  v2 = (char *)a1[5];
  v1 = (char *)a1[6];
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  if (v2)
  {
    if (v1 != v2)
    {
      v3 = v1;
      do
      {
        v5 = (void *)*((_QWORD *)v3 - 3);
        v3 -= 24;
        v4 = v5;
        if (v5)
        {
          *((_QWORD *)v1 - 2) = v4;
          operator delete(v4);
        }
        v1 = v3;
      }
      while (v3 != v2);
    }
    operator delete(v2);
  }
}

void sub_23993A90C(uint64_t a1)
{
  _QWORD *v2;
  char *v3;
  void *v4;
  void *__p;
  void *v6;
  uint64_t v7;

  __p = 0;
  v6 = 0;
  v7 = 0;
  v2 = *(_QWORD **)(a1 + 48);
  if ((unint64_t)v2 >= *(_QWORD *)(a1 + 56))
  {
    v3 = sub_2396C8920((char **)(a1 + 40), (uint64_t)&__p);
    v4 = __p;
    *(_QWORD *)(a1 + 48) = v3;
    if (v4)
    {
      v6 = v4;
      operator delete(v4);
    }
  }
  else
  {
    *v2 = 0;
    v2[1] = 0;
    v2[2] = 0;
    *(_QWORD *)(a1 + 48) = v2 + 3;
  }
}

void sub_23993A988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23993A9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  const void **v7;
  _BYTE *v8;
  const void *v9;
  int64_t v10;
  char *v11;
  void **v12;
  char *v13;
  int v14[2];
  char *v15;

  v6 = *(_QWORD *)(a1 + 40);
  v7 = (const void **)(v6 + 24 * a2);
  *(_QWORD *)v14 = 0;
  v15 = 0;
  v13 = 0;
  v9 = *v7;
  v8 = v7[1];
  v10 = v8 - (_BYTE *)*v7;
  if (v8 == *v7)
  {
    v11 = 0;
    if (a2 == a3)
      goto LABEL_4;
  }
  else
  {
    if (v10 < 0)
      sub_2394189F8();
    v11 = (char *)operator new(v8 - (_BYTE *)*v7);
    v13 = v11;
    v15 = &v11[4 * (v10 >> 2)];
    memcpy(v11, v9, v10);
    *(_QWORD *)v14 = v15;
    if (a2 == a3)
    {
LABEL_4:
      v12 = (void **)(v6 + 24 * a3);
      if (v12 == (void **)&v13)
        goto LABEL_5;
      goto LABEL_10;
    }
  }
  sub_23942156C(v7, *(char **)(v6 + 24 * a3), *(char **)(v6 + 24 * a3 + 8), (uint64_t)(*(_QWORD *)(v6 + 24 * a3 + 8) - *(_QWORD *)(v6 + 24 * a3)) >> 2);
  v11 = v13;
  v12 = (void **)(*(_QWORD *)(a1 + 40) + 24 * a3);
  if (v12 == (void **)&v13)
  {
LABEL_5:
    if (!v11)
      return;
    goto LABEL_6;
  }
LABEL_10:
  sub_23942156C(v12, v11, *(char **)v14, (uint64_t)(*(_QWORD *)v14 - (_QWORD)v11) >> 2);
  v11 = v13;
  if (v13)
  {
LABEL_6:
    *(_QWORD *)v14 = v11;
    operator delete(v11);
  }
}

void sub_23993AADC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_23993AAFC(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a3 != a2)
  {
    v3 = result[5];
    return sub_23942156C((_QWORD *)(v3 + 24 * a3), *(char **)(v3 + 24 * a2), *(char **)(v3 + 24 * a2 + 8), (uint64_t)(*(_QWORD *)(v3 + 24 * a2 + 8) - *(_QWORD *)(v3 + 24 * a2)) >> 2);
  }
  return result;
}

_QWORD *sub_23993AB2C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _BYTE *v5;
  _QWORD *result;

  v4 = (_QWORD *)operator new();
  *v4 = off_250AF0C30;
  v5 = v4 + 1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)(a1 + 8);
    v4[3] = *(_QWORD *)(a1 + 24);
  }
  v4[4] = *(_QWORD *)(a1 + 32);
  *v4 = &off_250AF05D8;
  sub_2394B7184(v4 + 5, (uint64_t *)(a1 + 40));
  *a2 = v4;
  result = (_QWORD *)operator new();
  *result = &off_250AF0648;
  result[1] = 0;
  result[2] = 0;
  result[3] = v4;
  a2[1] = result;
  return result;
}

void sub_23993ABF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C402F26E7C1);
  _Unwind_Resume(a1);
}

uint64_t sub_23993AC48(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 40);
}

void sub_23993AC5C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23993AC80(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_23993AC9C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF0680;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23993ACAC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF0680;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23993ACDC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_23993ACEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v6 = *(char **)a1;
  v5 = *(char **)(a1 + 8);
  if (*(char **)a1 == v5)
  {
    v7 = 0;
  }
  else
  {
    v7 = 0;
    while (*(_QWORD *)v6)
    {
      v6 += 16;
      v7 = (v7 + 1);
      if (v6 == v5)
        goto LABEL_8;
    }
  }
  if (v6 == v5)
  {
LABEL_8:
    v19 = 0;
    v20 = 0;
    if ((unint64_t)v5 >= *(_QWORD *)(a1 + 16))
    {
      v8 = sub_2394E46BC((char **)a1, (uint64_t)&v19);
      v9 = v20;
      *(_QWORD *)(a1 + 8) = v8;
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      *(_QWORD *)v5 = 0;
      *((_QWORD *)v5 + 1) = 0;
      *(_QWORD *)(a1 + 8) = v5 + 16;
    }
  }
  v12 = operator new(0x58uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = &off_250AF06B8;
  v13 = v12 + 4;
  v12[3] = off_250AF0C30;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v13, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)a3;
    v12[6] = *(_QWORD *)(a3 + 16);
  }
  v12[3] = &off_250AF06F0;
  v12[9] = 0;
  v12[10] = 0;
  v12[7] = sub_23993B89C;
  v12[8] = 0;
  v14 = (_QWORD *)(*(_QWORD *)a1 + 16 * v7);
  v15 = (std::__shared_weak_count *)v14[1];
  *v14 = v12 + 3;
  v14[1] = v12;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  return v7;
}

void sub_23993AE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_23993AE8C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_23993AEA4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF06B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23993AEB4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF06B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23993AEE4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_23993AEF4(_QWORD *a1)
{
  void *v2;

  *a1 = &off_250AF06F0;
  v2 = (void *)a1[5];
  if (v2)
  {
    a1[6] = v2;
    operator delete(v2);
  }
  return sub_23995E4A4((uint64_t)a1);
}

void sub_23993AF30(_QWORD *a1)
{
  void *v2;

  *a1 = &off_250AF06F0;
  v2 = (void *)a1[5];
  if (v2)
  {
    a1[6] = v2;
    operator delete(v2);
  }
  sub_23995E4A4((uint64_t)a1);
  JUMPOUT(0x23B83E31CLL);
}

unint64_t sub_23993AF80(uint64_t a1)
{
  return 0xAAAAAAAAAAAAAAABLL * (*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40));
}

void sub_23993AF98(_QWORD *a1, unint64_t a2)
{
  void *v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  const char *v15;
  char *v16;
  uint64_t v17;
  char v18;
  int8x16x3_t v19;

  v3 = (void *)a1[5];
  if (0xAAAAAAAAAAAAAAABLL * (a1[7] - (_QWORD)v3) < a2)
  {
    if (a2 >= 0x5555555555555556)
      sub_2394189F8();
    v4 = a1[6];
    v5 = 3 * a2;
    v6 = (char *)operator new(3 * a2);
    v7 = v4 - (_QWORD)v3;
    v8 = (uint64_t)(v4 - (_QWORD)v3) / 3;
    v9 = (unint64_t)&v6[3 * v8];
    v10 = (char *)v9;
    if ((void *)v4 == v3)
      goto LABEL_15;
    v11 = v7 - 3;
    if (v7 - 3 >= 0x2D)
    {
      v12 = v11 / 3;
      v13 = (unint64_t)&v6[3 * v8 - 3 * (v11 / 3) - 3] >= v4 || v4 - 3 * v12 - 3 >= v9;
      v10 = &v6[3 * v8];
      if (v13)
      {
        v14 = v12 + 1;
        v10 = (char *)(v9 - 3 * (v14 & 0x7FFFFFFFFFFFFFF0));
        v15 = (const char *)(v4 - 48);
        v16 = (char *)(v9 - 48);
        v17 = v14 & 0x7FFFFFFFFFFFFFF0;
        do
        {
          v19 = vld3q_s8(v15);
          vst3q_s8(v16, v19);
          v16 -= 48;
          v15 -= 48;
          v17 -= 16;
        }
        while (v17);
        v4 -= 3 * (v14 & 0x7FFFFFFFFFFFFFF0);
        if (v14 == (v14 & 0x7FFFFFFFFFFFFFF0))
          goto LABEL_15;
      }
    }
    else
    {
      v10 = &v6[3 * v8];
    }
    do
    {
      v18 = *(_BYTE *)(v4 - 3);
      v4 -= 3;
      *(v10 - 3) = v18;
      v10 -= 3;
      v10[1] = *(_BYTE *)(v4 + 1);
      v10[2] = *(_BYTE *)(v4 + 2);
    }
    while ((void *)v4 != v3);
LABEL_15:
    a1[5] = v10;
    a1[6] = v9;
    a1[7] = &v6[v5];
    if (v3)
      operator delete(v3);
  }
}

void sub_23993B100(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = 0xAAAAAAAAAAAAAAABLL * (*(_QWORD *)(a1 + 48) - v2);
  v4 = a2 >= v3;
  v5 = a2 - v3;
  if (v5 != 0 && v4)
  {
    sub_23993B468((unint64_t *)(a1 + 40), v5);
  }
  else if (!v4)
  {
    *(_QWORD *)(a1 + 48) = v2 + 3 * a2;
  }
}

void sub_23993B140(_QWORD *a1)
{
  void *v2;

  v2 = (void *)a1[5];
  a1[6] = 0;
  a1[7] = 0;
  a1[5] = 0;
  if (v2)
    operator delete(v2);
}

void sub_23993B15C(_QWORD *a1)
{
  unint64_t v2;
  unint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  const char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  int8x16x3_t v23;

  v3 = a1[6];
  v2 = a1[7];
  v4 = (_BYTE *)v3;
  if (v3 < v2)
  {
    *(_WORD *)v3 = 0;
    *(_BYTE *)(v3 + 2) = 0;
    v5 = v3 + 3;
    goto LABEL_27;
  }
  v6 = (_BYTE *)a1[5];
  v7 = 0xAAAAAAAAAAAAAAABLL * (v3 - (_QWORD)v6) + 1;
  if (v7 >= 0x5555555555555556)
    sub_2394189F8();
  v8 = 0xAAAAAAAAAAAAAAABLL * (v2 - (_QWORD)v6);
  if (2 * v8 > v7)
    v7 = 2 * v8;
  if (v8 >= 0x2AAAAAAAAAAAAAAALL)
    v9 = 0x5555555555555555;
  else
    v9 = v7;
  if (v9)
  {
    if (v9 >= 0x5555555555555556)
      sub_239418A80();
    v10 = (char *)operator new(3 * v9);
  }
  else
  {
    v10 = 0;
  }
  v11 = (unint64_t)&v10[v3 - (_QWORD)v6];
  v12 = &v10[3 * v9];
  *(_WORD *)v11 = 0;
  *(_BYTE *)(v11 + 2) = 0;
  v5 = v11 + 3;
  if ((_BYTE *)v3 == v6)
  {
    a1[5] = v11;
    a1[6] = v5;
    a1[7] = v12;
    if (!v6)
      goto LABEL_27;
    goto LABEL_26;
  }
  v13 = v3 - (_QWORD)v6 - 3;
  if (v13 < 0x2D)
    goto LABEL_23;
  v14 = v13 / 3;
  if ((unint64_t)&v10[v3 - (_QWORD)v6 - 3 * v14 - 3] < v3 && v3 - 3 * v14 - 3 < v11)
    goto LABEL_23;
  v16 = v14 + 1;
  v17 = (v14 + 1) & 0x7FFFFFFFFFFFFFF0;
  v4 = (_BYTE *)(v3 - 3 * v17);
  v18 = v11 - 3 * v17;
  v19 = (const char *)(v3 - 48);
  v20 = (char *)(v11 - 48);
  v21 = v17;
  do
  {
    v23 = vld3q_s8(v19);
    vst3q_s8(v20, v23);
    v20 -= 48;
    v19 -= 48;
    v21 -= 16;
  }
  while (v21);
  v11 = v18;
  if (v16 != v17)
  {
LABEL_23:
    v18 = v11;
    do
    {
      v22 = *(v4 - 3);
      v4 -= 3;
      *(_BYTE *)(v18 - 3) = v22;
      v18 -= 3;
      *(_BYTE *)(v18 + 1) = v4[1];
      *(_BYTE *)(v18 + 2) = v4[2];
    }
    while (v4 != v6);
  }
  a1[5] = v18;
  a1[6] = v5;
  a1[7] = v12;
  if (v6)
LABEL_26:
    operator delete(v6);
LABEL_27:
  a1[6] = v5;
}

uint64_t sub_23993B328(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  char v5;
  char v6;
  char v7;
  char *v8;

  v3 = *(_QWORD *)(result + 40);
  v4 = (char *)(v3 + 3 * a2);
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = (char *)(v3 + 3 * a3);
  *v4 = *v8;
  v4[1] = v8[1];
  v4[2] = v8[2];
  *v8 = v5;
  v8[1] = v6;
  v8[2] = v7;
  return result;
}

uint64_t sub_23993B370(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(result + 40);
  v4 = v3 + 3 * a2;
  v5 = v3 + 3 * a3;
  *(_BYTE *)v5 = *(_BYTE *)v4;
  *(_WORD *)(v5 + 1) = *(_WORD *)(v4 + 1);
  return result;
}

_QWORD *sub_23993B39C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = (_QWORD *)operator new();
  sub_23993B6A4(v4, a1);
  *a2 = v4;
  result = (_QWORD *)operator new();
  *result = &off_250AF0760;
  result[1] = 0;
  result[2] = 0;
  result[3] = v4;
  a2[1] = result;
  return result;
}

void sub_23993B418(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_23993B434(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C402F26E7C1);
  _Unwind_Resume(a1);
}

uint64_t sub_23993B458(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 40);
}

void sub_23993B468(unint64_t *a1, unint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  size_t v13;
  unint64_t v14;
  char *v15;
  size_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  const char *v24;
  char *v25;
  uint64_t v26;
  char v27;
  int8x16x3_t v28;

  v5 = (char *)a1[1];
  v4 = (char *)a1[2];
  v6 = v5;
  if (0xAAAAAAAAAAAAAAABLL * (v4 - v5) >= a2)
  {
    if (a2)
    {
      v13 = 3 * ((3 * a2 - 3) / 3) + 3;
      bzero(v5, v13);
      v6 = &v5[v13];
    }
    a1[1] = (unint64_t)v6;
  }
  else
  {
    v7 = (char *)*a1;
    v8 = &v5[-*a1];
    v9 = 0xAAAAAAAAAAAAAAABLL * (_QWORD)v8 + a2;
    if (v9 >= 0x5555555555555556)
      sub_2394189F8();
    v10 = 0xAAAAAAAAAAAAAAABLL * (v4 - v7);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x2AAAAAAAAAAAAAAALL)
      v11 = 0x5555555555555555;
    else
      v11 = v9;
    if (v11)
    {
      if (v11 >= 0x5555555555555556)
        sub_239418A80();
      v12 = operator new(3 * v11);
    }
    else
    {
      v12 = 0;
    }
    v14 = (unint64_t)&v8[(_QWORD)v12];
    v15 = (char *)v12 + 3 * v11;
    v16 = 3 * ((3 * a2 - 3) / 3) + 3;
    bzero(&v8[(_QWORD)v12], v16);
    v17 = &v8[(_QWORD)v12 + v16];
    if (v5 == v7)
    {
      *a1 = v14;
      a1[1] = (unint64_t)v17;
      a1[2] = (unint64_t)v15;
      if (v7)
LABEL_28:
        operator delete(v7);
    }
    else
    {
      v18 = v5 - v7 - 3;
      if (v18 < 0x2D)
        goto LABEL_25;
      v19 = v18 / 3;
      if (&v8[(_QWORD)v12 - 3 + -3 * v19] < v5 && (unint64_t)&v5[-3 * v19 - 3] < v14)
        goto LABEL_25;
      v21 = v19 + 1;
      v22 = (v19 + 1) & 0x7FFFFFFFFFFFFFF0;
      v6 = &v5[-3 * v22];
      v23 = v14 - 3 * v22;
      v24 = v5 - 48;
      v25 = (char *)(v14 - 48);
      v26 = v22;
      do
      {
        v28 = vld3q_s8(v24);
        vst3q_s8(v25, v28);
        v25 -= 48;
        v24 -= 48;
        v26 -= 16;
      }
      while (v26);
      v14 -= 3 * v22;
      if (v21 != v22)
      {
LABEL_25:
        v23 = v14;
        do
        {
          v27 = *(v6 - 3);
          v6 -= 3;
          *(_BYTE *)(v23 - 3) = v27;
          v23 -= 3;
          *(_BYTE *)(v23 + 1) = v6[1];
          *(_BYTE *)(v23 + 2) = v6[2];
        }
        while (v6 != v7);
      }
      *a1 = v23;
      a1[1] = (unint64_t)v17;
      a1[2] = (unint64_t)v15;
      if (v7)
        goto LABEL_28;
    }
  }
}

_QWORD *sub_23993B6A4(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  __int128 v5;
  _BYTE *v6;
  _OWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  *a1 = off_250AF0C30;
  v4 = a1 + 1;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_23941A7F8(v4, *(void **)(a2 + 8), *(_QWORD *)(a2 + 16));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 8);
    v4[2] = *(_QWORD *)(a2 + 24);
    *(_OWORD *)v4 = v5;
  }
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = 0;
  *a1 = &off_250AF06F0;
  a1[6] = 0;
  a1[7] = 0;
  v7 = *(_OWORD **)(a2 + 40);
  v6 = *(_BYTE **)(a2 + 48);
  v8 = v6 - (_BYTE *)v7;
  if (v6 != (_BYTE *)v7)
  {
    if (0xAAAAAAAAAAAAAAABLL * v8 >= 0x5555555555555556)
      sub_2394189F8();
    v9 = operator new(v6 - (_BYTE *)v7);
    a1[5] = v9;
    a1[6] = v9;
    a1[7] = (char *)v9 + v8;
    if ((unint64_t)(v8 - 3) >= 0x5D
      && ((v10 = (v8 - 3) / 3uLL, v11 = 3 * v10 + 3, v9 < (_OWORD *)((char *)v7 + v11))
        ? (v12 = v7 >= (_OWORD *)((char *)v9 + v11))
        : (v12 = 1),
          v12))
    {
      v13 = v10 + 1;
      v14 = (v10 + 1) & 0x7FFFFFFFFFFFFFE0;
      v15 = (char *)v7 + 3 * v14;
      v16 = (char *)v9 + 3 * v14;
      v17 = v14;
      do
      {
        v18 = v7[1];
        v20 = v7[4];
        v19 = v7[5];
        v21 = v7[2];
        v22 = v7[3];
        *v9 = *v7;
        v9[1] = v18;
        v9[2] = v21;
        v9[3] = v22;
        v9[4] = v20;
        v9[5] = v19;
        v9 += 6;
        v7 += 6;
        v17 -= 32;
      }
      while (v17);
      if (v13 == v14)
        goto LABEL_18;
    }
    else
    {
      v15 = v7;
      v16 = v9;
    }
    do
    {
      *v16 = *v15;
      v16[1] = v15[1];
      v16[2] = v15[2];
      v16 += 3;
      v15 += 3;
    }
    while (v15 != v6);
LABEL_18:
    a1[6] = v16;
  }
  return a1;
}

void sub_23993B834(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 48) = v4;
    operator delete(v4);
  }
  sub_23995E4A4(v1);
  _Unwind_Resume(a1);
}

void sub_23993B85C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23993B880(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t (*sub_23993B89C())()
{
  return sub_23993B89C;
}

void sub_23993B8AC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23993B8C0()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF0798;
  return result;
}

void sub_23993B8E4(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF0798;
}

uint64_t sub_23993B8FC(uint64_t a1, uint64_t a2)
{
  void *v2;
  int v3;

  v2 = *(void **)a2;
  v3 = *(char *)(a2 + 23);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  if (v3 < 0)
    operator delete(v2);
  return 1;
}

uint64_t sub_23993B934(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = v1;
  if (v1 && objc_msgSend(v1, "code"))
  {

    return 1;
  }
  else
  {

    return 0;
  }
}

void sub_23993B988(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_23993B998(uint64_t a1, id **a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  dispatch_semaphore_t v21;
  void *v22;
  id v24;
  id v25;

  *(_QWORD *)a1 = 0;
  v8 = (void *)MEMORY[0x23B83EC40]();
  *(_QWORD *)(a1 + 16) = a4;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = a3;
  v9 = operator new();
  *(_QWORD *)(v9 + 48) = 0;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)v9 = 0u;
  v10 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v9;
  if (v10)
    sub_23993D798(a1, v10);
  if (*(_QWORD *)(a1 + 8))
  {
    v11 = 0;
    do
    {
      v14 = *(_QWORD **)a1;
      v15 = (void *)objc_msgSend(**a2, "newBufferWithLength:options:", 32 * *(_QWORD *)(a1 + 16), 0, v24);
      v25 = v15;
      v16 = (_QWORD *)v14[2];
      if ((unint64_t)v16 >= v14[3])
      {
        v17 = sub_2397A8FBC(v14 + 1, (uint64_t *)&v25);
      }
      else
      {
        v25 = 0;
        *v16 = v15;
        v17 = v16 + 1;
      }
      v14[2] = v17;

      v18 = *(_QWORD **)a1;
      v19 = (void *)objc_msgSend(**a2, "newBufferWithLength:options:", 16 * *(_QWORD *)(a1 + 16), 0);
      v24 = v19;
      v20 = (_QWORD *)v18[5];
      if ((unint64_t)v20 < v18[6])
      {
        v24 = 0;
        *v20 = v19;
        v12 = v20 + 1;
      }
      else
      {
        v12 = sub_2397A8FBC(v18 + 4, (uint64_t *)&v24);
      }
      v18[5] = v12;

      ++v11;
      v13 = *(_QWORD *)(a1 + 8);
    }
    while (v11 < v13);
  }
  else
  {
    v13 = 0;
  }
  v21 = dispatch_semaphore_create(v13);
  v22 = **(void ***)a1;
  **(_QWORD **)a1 = v21;

  objc_autoreleasePoolPop(v8);
  return a1;
}

void sub_23993BB14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v12;

  v12 = *v10;
  *v10 = 0;
  if (v12)
    sub_23993D798((uint64_t)v10, v12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23993BB60(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void **v16;

  v2 = (void *)MEMORY[0x23B83EC40]();
  v4 = (uint64_t *)(*(_QWORD *)a1 + 16);
  v3 = *v4;
  if (*v4 != *(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v5 = 0;
    v3 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    do
    {
      v6 = *(void **)(v3 + 8 * v5);
      *(_QWORD *)(v3 + 8 * v5) = 0;

      ++v5;
      v3 = *(_QWORD *)(*(_QWORD *)a1 + 8);
      v7 = *(_QWORD *)(*(_QWORD *)a1 + 16);
    }
    while (v5 < (v7 - v3) >> 3);
    v4 = (uint64_t *)(*(_QWORD *)a1 + 16);
    while (v7 != v3)
    {
      v8 = *(void **)(v7 - 8);
      v7 -= 8;

    }
  }
  *v4 = v3;
  v10 = (uint64_t *)(*(_QWORD *)a1 + 40);
  v9 = *v10;
  if (*v10 != *(_QWORD *)(*(_QWORD *)a1 + 32))
  {
    v11 = 0;
    v9 = *(_QWORD *)(*(_QWORD *)a1 + 32);
    do
    {
      v12 = *(void **)(v9 + 8 * v11);
      *(_QWORD *)(v9 + 8 * v11) = 0;

      ++v11;
      v9 = *(_QWORD *)(*(_QWORD *)a1 + 32);
      v13 = *(_QWORD *)(*(_QWORD *)a1 + 40);
    }
    while (v11 < (v13 - v9) >> 3);
    v10 = (uint64_t *)(*(_QWORD *)a1 + 40);
    while (v13 != v9)
    {
      v14 = *(void **)(v13 - 8);
      v13 -= 8;

    }
  }
  *v10 = v9;
  v15 = **(void ***)a1;
  **(_QWORD **)a1 = 0;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  objc_autoreleasePoolPop(v2);
  v16 = *(void ***)a1;
  *(_QWORD *)a1 = 0;
  if (v16)
    sub_23993D798(a1, (uint64_t)v16);
  return a1;
}

_QWORD *sub_23993BC9C(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = *a2;
  result[1] = *a2;
  if (*(_BYTE *)(*result + 32))
  {
    v3 = *(void **)(*result + 48);
    if (v2 >= 3)
      v4 = 0;
    else
      v4 = v2;
    return (_QWORD *)objc_msgSend(v3, "setCullMode:", v4);
  }
  return result;
}

void ***sub_23993BCC8(void ***a1, uint64_t a2, void ***a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  void *v67;
  id v68;
  id v69;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  id v76;
  id v77;
  void *v78;
  void *v79;
  void *v80;
  uint64_t v81;
  void *v82;
  BOOL v83;
  void *v84;
  void *v85;
  id *v86;
  void *v87;
  void *v88;
  void *v89;
  uint64_t v90;
  void *v91;
  char v92;
  void *v93;
  void *v94;
  id v95;
  void *v96;
  void *v97;
  uint64_t v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  char v103;
  void ***result;
  void *v105;
  void *v106;
  id v107;
  id v108;
  void *v110;
  void *context;
  void *v112;
  void ***v113;
  id v114[2];
  unsigned int v115;
  void *__p;
  char *v117;
  char *v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  void *v123;
  _BYTE v124[128];
  _QWORD v125[3];

  v125[1] = *MEMORY[0x24BDAC8D0];
  *a1 = 0;
  a1[1] = 0;
  context = (void *)MEMORY[0x23B83EC40]();
  v113 = a1;
  v7 = operator new();
  *(_QWORD *)(v7 + 64) = 0;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  __p = 0;
  sub_23993D848(a1, (id *)v7);
  sub_23993D848((id **)&__p, 0);
  *((_BYTE *)*a1 + 32) = 1;
  v8 = MTLCreateSystemDefaultDevice();
  v125[0] = v8;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v125, 1);
  v112 = (void *)objc_claimAutoreleasedReturnValue();

  if (*(_QWORD *)a4 == *(_QWORD *)(a4 + 8))
  {
    v10 = MTLCreateSystemDefaultDevice();
    if ((objc_msgSend(v10, "supportsRaytracing") & 1) != 0)
    {
      v11 = *a1;
      v12 = v10;
      v13 = *v11;
      *v11 = v12;
    }
    else
    {
      v121 = 0u;
      v122 = 0u;
      v119 = 0u;
      v120 = 0u;
      v13 = v112;
      v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v119, v124, 16);
      if (v14)
      {
        v15 = *(_QWORD *)v120;
        while (2)
        {
          for (i = 0; i != v14; ++i)
          {
            if (*(_QWORD *)v120 != v15)
              objc_enumerationMutation(v13);
            v17 = *(id *)(*((_QWORD *)&v119 + 1) + 8 * i);
            if (objc_msgSend(v17, "supportsRaytracing"))
            {
              v18 = **a1;
              **a1 = v17;

              goto LABEL_15;
            }

          }
          v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v119, v124, 16);
          if (v14)
            continue;
          break;
        }
      }
    }
LABEL_15:

  }
  else
  {
    objc_msgSend(v112, "objectAtIndexedSubscript:", **(_QWORD **)a4);
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = **a1;
    **a1 = (void *)v9;
  }

  v19 = objc_msgSend(**v113, "newCommandQueue");
  v20 = (*v113)[1];
  (*v113)[1] = (void *)v19;

  v22 = *(_QWORD *)(a2 + 152);
  v21 = *(_QWORD *)(a2 + 160);
  v23 = (v21 - v22) >> 2;
  v24 = objc_msgSend(**v113, "newBufferWithLength:options:", 4 * (v23 + 2 * (v21 - v22)), 0);
  v25 = (*v113)[2];
  (*v113)[2] = (void *)v24;

  v26 = objc_msgSend(**v113, "newBufferWithLength:options:", 12 * v23, 0);
  v27 = (*v113)[3];
  (*v113)[3] = (void *)v26;

  v28 = (*v113)[2];
  if (v28 && (*v113)[3])
  {
    v29 = objc_msgSend(v28, "contents");
    v30 = objc_msgSend((*v113)[3], "contents");
    v31 = operator new(0xCuLL);
    v117 = (char *)(v31 + 3);
    v118 = (char *)(v31 + 3);
    *(_QWORD *)v31 = -1;
    v31[2] = -1;
    __p = v31;
    if (v21 == v22)
      goto LABEL_43;
    v32 = 0;
    v107 = (id)v23;
    v33 = v23 <= 1 ? 1 : v23;
    do
    {
      v115 = v32;
      sub_23996362C(a2, &v115, (uint64_t)&__p);
      v37 = *(unsigned int *)__p;
      v38 = (uint64_t *)(*(_QWORD *)(a2 + 8) + 16 * *(unsigned int *)(a2 + 176));
      v39 = *v38;
      v40 = (std::__shared_weak_count *)v38[1];
      if (v40)
      {
        p_shared_owners = (unint64_t *)&v40->__shared_owners_;
        do
          v42 = __ldxr(p_shared_owners);
        while (__stxr(v42 + 1, p_shared_owners));
        do
          v43 = __ldaxr(p_shared_owners);
        while (__stlxr(v43 - 1, p_shared_owners));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
        }
      }
      v44 = 3 * v32;
      v45 = *(_QWORD *)(v39 + 40) + 16 * v37;
      v46 = *(_DWORD *)(v45 + 8);
      v47 = v29 + 36 * v32;
      *(_QWORD *)v47 = *(_QWORD *)v45;
      *(_DWORD *)(v47 + 8) = v46;
      *(_DWORD *)(v30 + 12 * v32) = 3 * v32;
      v48 = *((unsigned int *)__p + 1);
      v49 = (uint64_t *)(*(_QWORD *)(a2 + 8) + 16 * *(unsigned int *)(a2 + 176));
      v50 = *v49;
      v51 = (std::__shared_weak_count *)v49[1];
      if (v51)
      {
        v52 = (unint64_t *)&v51->__shared_owners_;
        do
          v53 = __ldxr(v52);
        while (__stxr(v53 + 1, v52));
        do
          v54 = __ldaxr(v52);
        while (__stlxr(v54 - 1, v52));
        if (!v54)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      v55 = *(_QWORD *)(v50 + 40) + 16 * v48;
      v56 = *(_DWORD *)(v55 + 8);
      v57 = v29 + 12 * (v44 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v55;
      *(_DWORD *)(v57 + 8) = v56;
      *(_DWORD *)(v30 + 4 * (v44 + 1)) = v44 + 1;
      v58 = *((unsigned int *)__p + 2);
      v59 = (uint64_t *)(*(_QWORD *)(a2 + 8) + 16 * *(unsigned int *)(a2 + 176));
      v60 = *v59;
      v61 = (std::__shared_weak_count *)v59[1];
      if (v61)
      {
        v62 = (unint64_t *)&v61->__shared_owners_;
        do
          v63 = __ldxr(v62);
        while (__stxr(v63 + 1, v62));
        do
          v64 = __ldaxr(v62);
        while (__stlxr(v64 - 1, v62));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
      }
      v34 = *(_QWORD *)(v60 + 40) + 16 * v58;
      v35 = *(_DWORD *)(v34 + 8);
      v36 = v29 + 12 * (v44 + 2);
      *(_QWORD *)v36 = *(_QWORD *)v34;
      *(_DWORD *)(v36 + 8) = v35;
      *(_DWORD *)(v30 + 4 * (v44 + 2)) = v44 + 2;
      ++v32;
    }
    while (v32 != v33);
    v31 = __p;
    v23 = (unint64_t)v107;
    if (__p)
    {
LABEL_43:
      v117 = (char *)v31;
      operator delete(v31);
    }
    if (*((_BYTE *)*v113 + 32))
    {
      v66 = objc_msgSend(objc_alloc(MEMORY[0x24BDDE4F0]), "initWithDevice:", **v113);
      v67 = (*v113)[6];
      (*v113)[6] = (void *)v66;

      v68 = (*v113)[6];
      v69 = v68;
      v65 = v68 != 0;
      if (v68)
      {
        objc_msgSend(v68, "setFrontFacingWinding:", 1);
        objc_msgSend(v69, "setRayDataType:", 1);
        objc_msgSend(v69, "setRayStride:", 32);
        objc_msgSend(v69, "setIntersectionDataType:", 2);
        objc_msgSend(v69, "setIntersectionStride:", 16);
        v70 = *a3;
        v113[1] = *a3;
        if (*((_BYTE *)*v113 + 32))
        {
          if (v70 >= 3)
            v71 = 0;
          else
            v71 = v70;
          objc_msgSend((*v113)[6], "setCullMode:", v71);
        }
      }
      v72 = objc_msgSend(objc_alloc(MEMORY[0x24BDDE500]), "initWithDevice:", **v113);
      v73 = (*v113)[5];
      (*v113)[5] = (void *)v72;

      v74 = (*v113)[5];
      if (v74)
      {
        objc_msgSend(v74, "setVertexBuffer:", (*v113)[2]);
        objc_msgSend((*v113)[5], "setVertexStride:", 12);
        objc_msgSend((*v113)[5], "setIndexBuffer:", (*v113)[3]);
        objc_msgSend((*v113)[5], "setIndexType:", 32);
        objc_msgSend((*v113)[5], "setTriangleCount:", v23);
        objc_msgSend((*v113)[5], "rebuild");
      }
      else
      {
        v65 = 0;
      }
    }
    else
    {
      v75 = **v113;
      v114[1] = 0;
      sub_2399FA070(v75);
      v110 = (void *)objc_claimAutoreleasedReturnValue();
      v76 = 0;
      v77 = objc_alloc_init(MEMORY[0x24BDDD550]);
      objc_msgSend(v77, "setThreadGroupSizeIsMultipleOfThreadExecutionWidth:", 1);
      v78 = (void *)objc_msgSend(v110, "newFunctionWithName:", CFSTR("rtk"));
      v79 = v77;
      objc_msgSend(v77, "setComputeFunction:", v78);

      v80 = **v113;
      v114[0] = v76;
      v81 = objc_msgSend(v80, "newComputePipelineStateWithDescriptor:options:reflection:error:", v77, 0, 0, v114);
      v69 = v114[0];

      v82 = (*v113)[8];
      (*v113)[8] = (void *)v81;

      if ((*v113)[8])
        v83 = v76 == 0;
      else
        v83 = 0;
      if (v83)
      {
        objc_msgSend(MEMORY[0x24BDDD4B0], "descriptor");
        v84 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v84, "setVertexBuffer:", (*v113)[2]);
        objc_msgSend(v84, "setVertexBufferOffset:", 0);
        objc_msgSend(v84, "setVertexStride:", 12);
        objc_msgSend(v84, "setTriangleCount:", v23);
        objc_msgSend(v84, "setIndexBuffer:", (*v113)[3]);
        objc_msgSend(v84, "setIndexBufferOffset:", 0);
        objc_msgSend(v84, "setIndexType:", 1);
        objc_msgSend(MEMORY[0x24BDDD658], "descriptor");
        v105 = (void *)objc_claimAutoreleasedReturnValue();
        v123 = v84;
        objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", &v123, 1);
        v85 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v105, "setGeometryDescriptors:", v85);

        __p = 0;
        v117 = 0;
        v118 = 0;
        v86 = *v113;
        v87 = **v113;
        if (v87)
        {
          objc_msgSend(v87, "accelerationStructureSizesWithDescriptor:", v105);
          v86 = *v113;
          v88 = __p;
        }
        else
        {
          v88 = 0;
        }
        v106 = (void *)objc_msgSend(*v86, "newAccelerationStructureWithSize:", v88);
        v108 = (id)objc_msgSend(**v113, "newBufferWithLength:options:", 4, 0);
        v89 = (void *)MEMORY[0x23B83EC40]();
        v90 = objc_msgSend(**v113, "newBufferWithLength:options:", v117, 32);
        v91 = (void *)v90;
        v92 = 0;
        v93 = 0;
        if (v106 && v108 && v90)
        {
          objc_msgSend((*v113)[1], "commandBuffer");
          v93 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v93, "accelerationStructureCommandEncoder");
          v94 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v94, "buildAccelerationStructure:descriptor:scratchBuffer:scratchBufferOffset:", v106, v105, v91, 0);
          objc_msgSend(v94, "writeCompactedAccelerationStructureSize:toBuffer:offset:", v106, v108, 0);
          objc_msgSend(v94, "endEncoding");
          sub_2399FCF18();
          objc_msgSend(v93, "commit");
          objc_msgSend(v93, "waitUntilCompleted");
          objc_msgSend(v93, "error");
          v95 = (id)objc_claimAutoreleasedReturnValue();
          v96 = v95;
          if (v95)
          {
            if (objc_msgSend(v95, "code"))
              v92 = 0;
            else
              v92 = -1;
          }
          else
          {
            v92 = 1;
          }

        }
        objc_autoreleasePoolPop(v89);
        if ((v92 & 1) != 0)
        {
          v97 = (void *)MEMORY[0x23B83EC40]();
          v98 = objc_msgSend(**v113, "newAccelerationStructureWithSize:", *(unsigned int *)objc_msgSend(objc_retainAutorelease(v108), "contents"));
          v99 = (*v113)[7];
          (*v113)[7] = (void *)v98;

          if ((*v113)[7])
          {
            objc_msgSend((*v113)[1], "commandBuffer");
            v100 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v100, "accelerationStructureCommandEncoder");
            v101 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v101, "copyAndCompactAccelerationStructure:toAccelerationStructure:", v106, (*v113)[7]);
            objc_msgSend(v101, "endEncoding");
            sub_2399FCF18();
            objc_msgSend(v100, "commit");
            objc_msgSend(v100, "waitUntilCompleted");
            objc_msgSend(v100, "error");
            v102 = (void *)objc_claimAutoreleasedReturnValue();
            v103 = sub_23993B934(v102);

            v65 = v103 ^ 1;
            v93 = v100;
          }
          else
          {
            v65 = 0;
          }
          objc_autoreleasePoolPop(v97);
        }
        else
        {
          v65 = 0;
        }

      }
      else
      {
        v65 = 0;
      }

    }
  }
  else
  {
    v65 = 0;
  }

  objc_autoreleasePoolPop(context);
  result = v113;
  *((_BYTE *)v113 + 16) = v65;
  return result;
}

void sub_23993C700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13, uint64_t a14, void *a15, id **a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  sub_23993D848(a16, 0);
  _Unwind_Resume(a1);
}

id **sub_23993C8E4(id **a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v2 = (void *)MEMORY[0x23B83EC40]();
  objc_msgSend((*a1)[2], "setPurgeableState:", 4);
  v3 = (*a1)[2];
  (*a1)[2] = 0;

  objc_msgSend((*a1)[3], "setPurgeableState:", 4);
  v4 = (*a1)[3];
  (*a1)[3] = 0;

  v5 = (*a1)[1];
  (*a1)[1] = 0;

  v6 = **a1;
  **a1 = 0;

  v7 = (*a1)[6];
  (*a1)[6] = 0;

  v8 = (*a1)[5];
  (*a1)[5] = 0;

  v9 = (*a1)[7];
  (*a1)[7] = 0;

  v10 = (*a1)[8];
  (*a1)[8] = 0;

  objc_autoreleasePoolPop(v2);
  sub_23993D848(a1, 0);
  return a1;
}

double sub_23993C9C8(uint64_t a1, double *a2)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_23993C9D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

BOOL sub_23993C9DC(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void *v22;
  id *v23;
  uint64_t v24;
  int v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  void *v31;
  _BOOL8 v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  uint64_t v37;
  void *v39;
  _QWORD *v40;
  unint64_t v41;
  int64x2_t v42;
  unint64_t v43;
  int64x2_t v44;
  int v45;
  int v46;

  v6 = (void *)MEMORY[0x23B83EC40]();
  v7 = *a2;
  v8 = a2[1];
  v9 = 0xAAAAAAAAAAAAAAABLL * ((v8 - *a2) >> 4);
  v39 = (void *)objc_msgSend(**(id **)a1, "newBufferWithLength:options:", 0x5555555555555560 * ((v8 - *a2) >> 4), 0);
  v10 = (void *)objc_msgSend(**(id **)a1, "newBufferWithLength:options:", 16 * v9, 0);
  v11 = objc_retainAutorelease(v39);
  v12 = objc_msgSend(v11, "contents");
  if (v8 != v7)
  {
    v13 = 0;
    if (v9 <= 1)
      v14 = 1;
    else
      v14 = v9;
    v15 = *a2;
    v16 = v12 + 16;
    do
    {
      v17 = v15 + v13;
      v18 = *(_DWORD *)(v17 + 24);
      *(_QWORD *)v16 = *(_QWORD *)(v17 + 16);
      *(_DWORD *)(v16 + 8) = v18;
      v19 = *a2 + v13;
      v20 = *(_DWORD *)(v19 + 8);
      *(_QWORD *)(v16 - 16) = *(_QWORD *)v19;
      *(_DWORD *)(v16 - 8) = v20;
      v15 = *a2;
      v21 = *a2 + v13;
      *(_DWORD *)(v16 - 4) = *(_DWORD *)(v21 + 32);
      *(_DWORD *)(v16 + 12) = *(_DWORD *)(v21 + 36);
      v13 += 48;
      v16 += 32;
      --v14;
    }
    while (v14);
  }
  objc_msgSend(*(id *)(*(_QWORD *)a1 + 8), "commandBuffer");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = *(id **)a1;
  v40 = a3;
  if (*(_BYTE *)(*(_QWORD *)a1 + 32))
  {
    objc_msgSend(v23[6], "encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:intersectionBuffer:intersectionBufferOffset:rayCount:accelerationStructure:", v22, *(_DWORD *)(a1 + 12) == 1, v11, 0, v10, 0, v9, v23[5]);
  }
  else
  {
    v24 = *(int *)(a1 + 8);
    if (*(_DWORD *)(a1 + 12) == 1)
      v25 = 1;
    else
      v25 = 2;
    v46 = v25;
    if (v24 > 2)
      v26 = 5;
    else
      v26 = dword_239F028F0[v24];
    v45 = v26;
    v27 = objc_msgSend(v23[8], "maxTotalThreadsPerThreadgroup");
    if (v27 >= v9)
      v28 = v9;
    else
      v28 = v27;
    objc_msgSend(v22, "computeCommandEncoder");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "setBuffer:offset:atIndex:", v11, 0, 0);
    objc_msgSend(v29, "setBuffer:offset:atIndex:", v10, 0, 1);
    objc_msgSend(v29, "setAccelerationStructure:atBufferIndex:", *(_QWORD *)(*(_QWORD *)a1 + 56), 2);
    objc_msgSend(v29, "useResource:usage:", *(_QWORD *)(*(_QWORD *)a1 + 56), 1);
    objc_msgSend(v29, "setBytes:length:atIndex:", &v46, 4, 3);
    objc_msgSend(v29, "setBytes:length:atIndex:", &v45, 4, 4);
    objc_msgSend(v29, "setComputePipelineState:", *(_QWORD *)(*(_QWORD *)a1 + 64));
    v43 = v9;
    v44 = vdupq_n_s64(1uLL);
    v41 = v28;
    v42 = v44;
    objc_msgSend(v29, "dispatchThreads:threadsPerThreadgroup:", &v43, &v41);
    objc_msgSend(v29, "endEncoding");

  }
  sub_2399FCF18();
  objc_msgSend(v22, "commit");
  objc_msgSend(v22, "waitUntilCompleted");
  objc_msgSend(v22, "error");
  v30 = (id)objc_claimAutoreleasedReturnValue();
  v31 = v30;
  v32 = !v30 || !objc_msgSend(v30, "code");

  v33 = objc_retainAutorelease(v10);
  v34 = objc_msgSend(v33, "contents");
  if (v8 != v7)
  {
    if (v9 <= 1)
      v35 = 1;
    else
      v35 = v9;
    v36 = (_DWORD *)(*v40 + 8);
    v37 = v34 + 8;
    do
    {
      *(v36 - 2) = *(_DWORD *)(v37 - 8);
      *(v36 - 1) = *(_DWORD *)(v37 - 4);
      *v36 = *(_QWORD *)v37;
      v36[1] = *(_DWORD *)(v37 + 4);
      v36 += 4;
      v37 += 16;
      --v35;
    }
    while (v35);
  }

  objc_autoreleasePoolPop(v6);
  return v32;
}

void sub_23993CD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

BOOL sub_23993CDF8(int *a1, uint64_t a2, uint64_t *a3, _QWORD *a4, int a5)
{
  void *v9;
  uint64_t v10;
  dispatch_semaphore_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  void *v36;
  _BOOL8 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  char *v42;
  unint64_t v43;
  _OWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void *v51;
  unint64_t v53;
  int64x2_t v54;
  unint64_t v55;
  int64x2_t v56;
  _QWORD v57[4];
  _QWORD v58[5];
  id v59;
  void *__p;
  char *p_p;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  void (*v64)(uint64_t);
  id v65;
  _QWORD v66[7];
  _BYTE v67[24];
  _BYTE *v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v9 = (void *)MEMORY[0x23B83EC40]();
  dispatch_semaphore_wait(**(dispatch_semaphore_t **)a2, 0xFFFFFFFFFFFFFFFFLL);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(dispatch_semaphore_t **)a2;
  if (0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4) >= *(_QWORD *)(a2 + 16))
    v12 = *(_QWORD *)(a2 + 16);
  else
    v12 = 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4);
  *(_QWORD *)(a2 + 24) = (unint64_t)(v10 + 1) % *(_QWORD *)(a2 + 8);
  v13 = -[objc_class contents](objc_retainAutorelease(v11[1][v10].isa), "contents");
  if (v12)
  {
    v14 = 0;
    v15 = *a3;
    v16 = v13 + 16;
    v17 = v12;
    do
    {
      v18 = v15 + v14;
      v19 = *(_DWORD *)(v18 + 24);
      *(_QWORD *)v16 = *(_QWORD *)(v18 + 16);
      *(_DWORD *)(v16 + 8) = v19;
      v20 = *a3 + v14;
      v21 = *(_DWORD *)(v20 + 8);
      *(_QWORD *)(v16 - 16) = *(_QWORD *)v20;
      *(_DWORD *)(v16 - 8) = v21;
      v15 = *a3;
      v22 = *a3 + v14;
      *(_DWORD *)(v16 - 4) = *(_DWORD *)(v22 + 32);
      *(_DWORD *)(v16 + 12) = *(_DWORD *)(v22 + 36);
      v14 += 48;
      v16 += 32;
      --v17;
    }
    while (v17);
  }
  objc_msgSend(*(id *)(*(_QWORD *)a1 + 8), "commandBuffer");
  v23 = objc_claimAutoreleasedReturnValue();
  v24 = (void *)v23;
  if ((a5 & 1) == 0)
  {
    v51 = (void *)v23;
    __p = 0;
    p_p = (char *)&__p;
    v62 = 0x3032000000;
    v63 = sub_23993D4D4;
    v64 = sub_23993D4E4;
    v65 = **(id **)a2;
    v58[0] = 0;
    v58[1] = v58;
    v58[2] = 0x3032000000;
    v58[3] = sub_23993D4D4;
    v58[4] = sub_23993D4E4;
    v59 = *(id *)(*(_QWORD *)(*(_QWORD *)a2 + 32) + 8 * v10);
    v57[0] = 0;
    v57[1] = v57;
    v57[2] = 0x2020000000;
    v57[3] = v12;
    v66[0] = MEMORY[0x24BDAC760];
    v66[1] = 3321888768;
    v66[2] = sub_23993D4EC;
    v66[3] = &unk_250AF07D8;
    v66[4] = &__p;
    v66[5] = v58;
    v66[6] = v57;
    v25 = v67;
    v26 = a4[3];
    if (v26)
    {
      if ((_QWORD *)v26 == a4)
      {
        v68 = v67;
        (*(void (**)(_QWORD *, _BYTE *))(*a4 + 24))(a4, v67);
LABEL_13:
        v24 = v51;
        objc_msgSend(v51, "addCompletedHandler:", v66);
        if (v68 == v67)
        {
          v27 = 4;
        }
        else
        {
          if (!v68)
          {
LABEL_18:
            _Block_object_dispose(v57, 8);
            _Block_object_dispose(v58, 8);

            _Block_object_dispose(&__p, 8);
            goto LABEL_19;
          }
          v27 = 5;
          v25 = v68;
        }
        (*(void (**)(_QWORD *))(*v25 + 8 * v27))(v25);
        goto LABEL_18;
      }
      v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v26 + 16))(v26);
    }
    v68 = (_BYTE *)v26;
    goto LABEL_13;
  }
LABEL_19:
  v28 = *(_QWORD *)a1;
  if (*(_BYTE *)(*(_QWORD *)a1 + 32))
  {
    objc_msgSend(*(id *)(v28 + 48), "encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:intersectionBuffer:intersectionBufferOffset:rayCount:accelerationStructure:", v24, a1[3] == 1, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 8) + 8 * v10), 0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 32) + 8 * v10), 0, v12, *(_QWORD *)(v28 + 40));
  }
  else
  {
    v29 = a1[2];
    if (a1[3] == 1)
      v30 = 1;
    else
      v30 = 2;
    LODWORD(__p) = v30;
    if (v29 > 2)
      v31 = 5;
    else
      v31 = dword_239F028F0[v29];
    LODWORD(v58[0]) = v31;
    v32 = objc_msgSend(*(id *)(v28 + 64), "maxTotalThreadsPerThreadgroup");
    if (v32 >= v12)
      v33 = v12;
    else
      v33 = v32;
    objc_msgSend(v24, "computeCommandEncoder");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "setBuffer:offset:atIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 8) + 8 * v10), 0, 0);
    objc_msgSend(v34, "setBuffer:offset:atIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 32) + 8 * v10), 0, 1);
    objc_msgSend(v34, "setAccelerationStructure:atBufferIndex:", *(_QWORD *)(*(_QWORD *)a1 + 56), 2);
    objc_msgSend(v34, "useResource:usage:", *(_QWORD *)(*(_QWORD *)a1 + 56), 1);
    objc_msgSend(v34, "setBytes:length:atIndex:", &__p, 4, 3);
    objc_msgSend(v34, "setBytes:length:atIndex:", v58, 4, 4);
    objc_msgSend(v34, "setComputePipelineState:", *(_QWORD *)(*(_QWORD *)a1 + 64));
    v55 = v12;
    v56 = vdupq_n_s64(1uLL);
    v53 = v33;
    v54 = v56;
    objc_msgSend(v34, "dispatchThreads:threadsPerThreadgroup:", &v55, &v53);
    objc_msgSend(v34, "endEncoding");

  }
  sub_2399FCF18();
  objc_msgSend(v24, "commit");
  if (a5)
  {
    objc_msgSend(v24, "waitUntilCompleted");
    objc_msgSend(v24, "error");
    v35 = (id)objc_claimAutoreleasedReturnValue();
    v36 = v35;
    v37 = !v35 || !objc_msgSend(v35, "code");

    dispatch_semaphore_signal(**(dispatch_semaphore_t **)a2);
    v38 = objc_msgSend(objc_retainAutorelease(*(id *)(*(_QWORD *)(*(_QWORD *)a2 + 32) + 8 * v10)), "contents");
    __p = 0;
    p_p = 0;
    v62 = 0;
    if (v12)
    {
      if (v12 >> 60)
        sub_2394189F8();
      v39 = v38;
      v40 = (char *)operator new(16 * v12);
      __p = v40;
      v62 = (uint64_t)&v40[16 * v12];
      v41 = (v12 - 1) & 0xFFFFFFFFFFFFFFFLL;
      v42 = v40;
      if (v41 < 7)
        goto LABEL_54;
      v43 = v41 + 1;
      v42 = &v40[16 * (v43 & 0x1FFFFFFFFFFFFFF8)];
      v44 = v40 + 64;
      v45 = v43 & 0x1FFFFFFFFFFFFFF8;
      do
      {
        *(v44 - 2) = xmmword_239F02830;
        *(v44 - 1) = xmmword_239F02830;
        *(v44 - 4) = xmmword_239F02830;
        *(v44 - 3) = xmmword_239F02830;
        v44[2] = xmmword_239F02830;
        v44[3] = xmmword_239F02830;
        *v44 = xmmword_239F02830;
        v44[1] = xmmword_239F02830;
        v44 += 8;
        v45 -= 8;
      }
      while (v45);
      if (v43 != (v43 & 0x1FFFFFFFFFFFFFF8))
      {
LABEL_54:
        do
        {
          *(_QWORD *)v42 = -1082130432;
          *((_QWORD *)v42 + 1) = 0;
          v42 += 16;
        }
        while (v42 != &v40[16 * v12]);
      }
      p_p = &v40[16 * v12];
      v46 = (_QWORD *)(v39 + 8);
      v47 = v40 + 8;
      do
      {
        *((_DWORD *)v47 - 2) = *((_DWORD *)v46 - 2);
        *((_DWORD *)v47 - 1) = *((_DWORD *)v46 - 1);
        v48 = *v46;
        v46 += 2;
        *v47 = v48;
        v47 += 2;
        --v12;
      }
      while (v12);
    }
    v49 = a4[3];
    if (!v49)
      sub_2394172E0();
    (*(void (**)(uint64_t, void **))(*(_QWORD *)v49 + 48))(v49, &__p);
    if (__p)
    {
      p_p = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    v37 = 1;
  }

  objc_autoreleasePoolPop(v9);
  return v37;
}

void sub_23993D3F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  void *v35;
  void *v36;

  _Unwind_Resume(a1);
}

uint64_t sub_23993D4D4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_23993D4E4(uint64_t a1)
{

}

void sub_23993D4EC(_QWORD *a1, void *a2)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *__p;
  char *v19;
  char *v20;

  v3 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(_QWORD *)(a1[4] + 8) + 40));
  v4 = objc_msgSend(objc_retainAutorelease(*(id *)(*(_QWORD *)(a1[5] + 8) + 40)), "contents");
  v5 = *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
  v19 = 0;
  v20 = 0;
  __p = 0;
  if (v5)
  {
    if (v5 >> 60)
      sub_2394189F8();
    v6 = v4;
    v7 = (char *)operator new(16 * v5);
    __p = v7;
    v20 = &v7[16 * v5];
    v8 = (v5 - 1) & 0xFFFFFFFFFFFFFFFLL;
    v9 = v7;
    if (v8 < 7)
      goto LABEL_18;
    v10 = v8 + 1;
    v9 = &v7[16 * (v10 & 0x1FFFFFFFFFFFFFF8)];
    v11 = v7 + 64;
    v12 = v10 & 0x1FFFFFFFFFFFFFF8;
    do
    {
      *(v11 - 2) = xmmword_239F02830;
      *(v11 - 1) = xmmword_239F02830;
      *(v11 - 4) = xmmword_239F02830;
      *(v11 - 3) = xmmword_239F02830;
      v11[2] = xmmword_239F02830;
      v11[3] = xmmword_239F02830;
      *v11 = xmmword_239F02830;
      v11[1] = xmmword_239F02830;
      v11 += 8;
      v12 -= 8;
    }
    while (v12);
    if (v10 != (v10 & 0x1FFFFFFFFFFFFFF8))
    {
LABEL_18:
      do
      {
        *(_QWORD *)v9 = -1082130432;
        *((_QWORD *)v9 + 1) = 0;
        v9 += 16;
      }
      while (v9 != &v7[16 * v5]);
    }
    v13 = 0;
    v19 = &v7[16 * v5];
    v14 = (_QWORD *)(v6 + 8);
    v15 = v7 + 8;
    do
    {
      *((_DWORD *)v15 - 2) = *((_DWORD *)v14 - 2);
      *((_DWORD *)v15 - 1) = *((_DWORD *)v14 - 1);
      v16 = *v14;
      v14 += 2;
      *v15 = v16;
      v15 += 2;
      ++v13;
    }
    while (v13 < v5);
  }
  v17 = a1[10];
  if (!v17)
    sub_2394172E0();
  (*(void (**)(uint64_t, void **))(*(_QWORD *)v17 + 48))(v17, &__p);
  if (__p)
  {
    v19 = (char *)__p;
    operator delete(__p);
  }

}

void sub_23993D654(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_23993D664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  void *v11;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

uint64_t sub_23993D688(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a2 + 80);
  if (result)
  {
    if (result == a2 + 56)
    {
      *(_QWORD *)(a1 + 80) = a1 + 56;
      return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 80) + 24))(*(_QWORD *)(a2 + 80), a1 + 56);
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
      *(_QWORD *)(a1 + 80) = result;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 80) = 0;
  }
  return result;
}

uint64_t sub_23993D6FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 56;
  result = *(_QWORD *)(a1 + 80);
  if (result == v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
  return result;
}

uint64_t sub_23993D738(uint64_t a1)
{
  return **(_QWORD **)a1;
}

uint64_t sub_23993D744(uint64_t a1)
{
  if (*(_BYTE *)(*(_QWORD *)a1 + 32))
    return 0;
  else
    return *(_QWORD *)(*(_QWORD *)a1 + 56);
}

uint64_t sub_23993D760(uint64_t a1)
{
  if (*(_BYTE *)(*(_QWORD *)a1 + 32))
    return *(_QWORD *)(*(_QWORD *)a1 + 48);
  else
    return 0;
}

uint64_t sub_23993D77C(uint64_t a1)
{
  if (*(_BYTE *)(*(_QWORD *)a1 + 32))
    return *(_QWORD *)(*(_QWORD *)a1 + 40);
  else
    return 0;
}

void sub_23993D798(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;

  if (a2)
  {
    v3 = *(_QWORD *)(a2 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a2 + 40);
      v5 = *(void **)(a2 + 32);
      if (v4 != v3)
      {
        do
        {
          v6 = *(void **)(v4 - 8);
          v4 -= 8;

        }
        while (v4 != v3);
        v5 = *(void **)(a2 + 32);
      }
      *(_QWORD *)(a2 + 40) = v3;
      operator delete(v5);
    }
    v7 = *(_QWORD *)(a2 + 8);
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 16);
      v9 = *(void **)(a2 + 8);
      if (v8 != v7)
      {
        do
        {
          v10 = *(void **)(v8 - 8);
          v8 -= 8;

        }
        while (v8 != v7);
        v9 = *(void **)(a2 + 8);
      }
      *(_QWORD *)(a2 + 16) = v7;
      operator delete(v9);
    }

    JUMPOUT(0x23B83E31CLL);
  }
}

id **sub_23993D848(id **result, id *a2)
{
  id *v2;

  v2 = *result;
  *result = a2;
  if (v2)
  {

    JUMPOUT(0x23B83E31CLL);
  }
  return result;
}

void sub_23993D8CC(char **a1, unint64_t a2)
{
  char *v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  __int128 v18;

  v4 = a1[1];
  v5 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v5 - v4) >> 4) >= a2)
  {
    if (a2)
    {
      v11 = &v4[48 * a2];
      do
      {
        *(_QWORD *)v4 = 0;
        *((_QWORD *)v4 + 1) = 0;
        *((_OWORD *)v4 + 1) = xmmword_239F028E0;
        *((_QWORD *)v4 + 4) = 0x7F7FFFFF3089705FLL;
        v4 += 48;
      }
      while (v4 != v11);
      v4 = v11;
    }
    a1[1] = v4;
  }
  else
  {
    v6 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 4);
    v7 = v6 + a2;
    if (v6 + a2 > 0x555555555555555)
      sub_2394189F8();
    v8 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 4);
    if (2 * v8 > v7)
      v7 = 2 * v8;
    if (v8 >= 0x2AAAAAAAAAAAAAALL)
      v9 = 0x555555555555555;
    else
      v9 = v7;
    if (v9)
    {
      if (v9 > 0x555555555555555)
        sub_239418A80();
      v10 = (char *)operator new(48 * v9);
    }
    else
    {
      v10 = 0;
    }
    v12 = &v10[48 * v6];
    v13 = &v12[48 * a2];
    v14 = v12;
    do
    {
      *(_QWORD *)v14 = 0;
      *((_QWORD *)v14 + 1) = 0;
      *((_OWORD *)v14 + 1) = xmmword_239F028E0;
      *((_QWORD *)v14 + 4) = 0x7F7FFFFF3089705FLL;
      v14 += 48;
    }
    while (v14 != v13);
    v15 = &v10[48 * v9];
    v17 = *a1;
    v16 = a1[1];
    if (v16 != *a1)
    {
      do
      {
        v18 = *((_OWORD *)v16 - 3);
        v16 -= 48;
        *((_OWORD *)v12 - 3) = v18;
        v12 -= 48;
        *((_OWORD *)v12 + 1) = *((_OWORD *)v16 + 1);
        *((_QWORD *)v12 + 4) = *((_QWORD *)v16 + 4);
      }
      while (v16 != v17);
      v16 = *a1;
    }
    *a1 = v12;
    a1[1] = v13;
    a1[2] = v15;
    if (v16)
      operator delete(v16);
  }
}

uint64_t sub_23993DA5C(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  float v16;
  uint64_t v17;
  double v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  _DWORD *v33;
  uint64_t v34;
  _DWORD *v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  unsigned int *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  float32x4_t v65;
  float32x4_t v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _BYTE *v77;
  _DWORD *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _OWORD *v83;
  __int128 *v84;
  uint64_t v85;
  __int128 v86;
  int v87;
  char *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int v95;
  uint64_t *v96;
  std::__shared_weak_count *v97;
  uint64_t v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  float32x4_t v104;
  uint64_t v105;
  unsigned int v106;
  _QWORD *v107;
  uint64_t v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  __int128 __p;
  char *v113;
  unsigned int v114;
  int32x4_t v115;
  int v116;
  unsigned int v117[2];
  uint64_t v118;

  v118 = *MEMORY[0x24BDAC8D0];
  v7 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  HIBYTE(v113) = 14;
  strcpy((char *)&__p, "h:remesh_fixed");
  LOBYTE(v114) = 0;
  v107 = (_QWORD *)(a1 + 32);
  v109 = sub_23993A208((uint64_t **)(a1 + 32), (uint64_t)&v114, (unsigned __int8 *)&__p);
  v8 = 0xCCCCCCCCCCCCCCCDLL * ((v6 - v7) >> 2);
  if (SHIBYTE(v113) < 0)
  {
    operator delete((void *)__p);
    v9 = -858993459 * ((v6 - v7) >> 2);
    if (-858993459 * ((v6 - v7) >> 2))
      goto LABEL_3;
LABEL_11:
    v11 = 0;
    goto LABEL_12;
  }
  v9 = -858993459 * ((v6 - v7) >> 2);
  if (!(-858993459 * ((v6 - v7) >> 2)))
    goto LABEL_11;
LABEL_3:
  v10 = operator new(8 * ((v9 - 1) >> 6) + 8);
  v11 = v10;
  if (v9 >= 0x41)
    v12 = (v9 - 1) >> 6;
  else
    v12 = 0;
  v10[v12] = 0;
  if (v9 >= 0x40)
    bzero(v10, 8 * (v9 >> 6));
  if ((v8 & 0x3F) != 0)
    v11[v9 >> 6] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v8 & 0x3F));
LABEL_12:
  __p = 0uLL;
  v113 = 0;
  v13 = (unint64_t)((double)v8 * 0.1);
  if (v13)
  {
    if (v13 >> 62)
      sub_2394189F8();
    v14 = (char *)operator new(4 * v13);
    *(_QWORD *)&__p = v14;
    *((_QWORD *)&__p + 1) = v14;
    v113 = &v14[4 * v13];
    if ((_DWORD)v8)
      goto LABEL_15;
  }
  else
  {
    v14 = 0;
    if ((_DWORD)v8)
    {
LABEL_15:
      v15 = 0;
      v106 = 0;
      v16 = a2 * a2;
      v17 = a1 + 104;
      v18 = a3 * a3 * v16;
      v108 = a1 + 104;
      while (1)
      {
        v19 = v15 >> 6;
        v20 = 1 << v15;
        if ((v11[v15 >> 6] & (1 << v15)) != 0)
          goto LABEL_18;
        if (v109 != -1)
        {
          v21 = (uint64_t *)(*v107 + 16 * v109);
          v22 = *v21;
          v23 = (std::__shared_weak_count *)v21[1];
          if (v23)
          {
            p_shared_owners = (unint64_t *)&v23->__shared_owners_;
            do
              v25 = __ldxr(p_shared_owners);
            while (__stxr(v25 + 1, p_shared_owners));
            do
              v26 = __ldaxr(p_shared_owners);
            while (__stlxr(v26 - 1, p_shared_owners));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
              std::__shared_weak_count::__release_weak(v23);
            }
          }
          if ((*(_QWORD *)(*(_QWORD *)(v22 + 40) + 8 * v19) & v20) != 0)
          {
            v17 = a1 + 104;
            goto LABEL_18;
          }
          v114 = v15;
          v17 = a1 + 104;
          if (*(_DWORD *)sub_239962518(v108, &v114) != -1)
          {
            v27 = (uint64_t *)(*v107 + 16 * v109);
            v28 = *v27;
            v29 = (std::__shared_weak_count *)v27[1];
            if (v29)
            {
              v30 = (unint64_t *)&v29->__shared_owners_;
              do
                v31 = __ldxr(v30);
              while (__stxr(v31 + 1, v30));
              do
                v32 = __ldaxr(v30);
              while (__stlxr(v32 - 1, v30));
              if (!v32)
              {
                ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
                std::__shared_weak_count::__release_weak(v29);
              }
            }
            v117[0] = v15;
            v33 = (_DWORD *)sub_239962518(v108, v117);
            v34 = *(_QWORD *)(*(_QWORD *)(v28 + 40) + (((unint64_t)*v33 >> 3) & 0x1FFFFFF8)) >> *v33;
            v17 = a1 + 104;
            if ((v34 & 1) != 0)
              goto LABEL_18;
          }
        }
        v114 = v15;
        v11[v19] |= v20;
        v35 = (_DWORD *)sub_239962518(v17, &v114);
        *(_QWORD *)((char *)v11 + (((unint64_t)*v35 >> 3) & 0x1FFFFFF8)) |= 1 << *v35;
        v36 = v114;
        v37 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
        v38 = *v37;
        v39 = (std::__shared_weak_count *)v37[1];
        if (!v39)
          goto LABEL_40;
        v40 = (unint64_t *)&v39->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
          if (((*(_QWORD *)(*(_QWORD *)(v38 + 40) + ((v36 >> 3) & 0x1FFFFFF8)) >> v36) & 1) != 0)
            goto LABEL_18;
        }
        else
        {
LABEL_40:
          if (((*(_QWORD *)(*(_QWORD *)(v38 + 40) + ((v36 >> 3) & 0x1FFFFFF8)) >> v36) & 1) != 0)
            goto LABEL_18;
        }
        v43 = *(unsigned int *)sub_239962518(v17, &v114);
        v44 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
        v45 = *v44;
        v46 = (std::__shared_weak_count *)v44[1];
        if (!v46)
          goto LABEL_46;
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldxr(v47);
        while (__stxr(v48 + 1, v47));
        do
          v49 = __ldaxr(v47);
        while (__stlxr(v49 - 1, v47));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
          if (((*(_QWORD *)(*(_QWORD *)(v45 + 40) + ((v43 >> 3) & 0x1FFFFFF8)) >> v43) & 1) == 0)
          {
LABEL_47:
            v50 = (unsigned int *)sub_239962518(v17, &v114);
            v51 = *(unsigned int *)(sub_239962518(v17, v50) + 12);
            v52 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
            v53 = *v52;
            v54 = (std::__shared_weak_count *)v52[1];
            if (v54)
            {
              v55 = (unint64_t *)&v54->__shared_owners_;
              do
                v56 = __ldxr(v55);
              while (__stxr(v56 + 1, v55));
              do
                v57 = __ldaxr(v55);
              while (__stlxr(v57 - 1, v55));
              if (!v57)
              {
                ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
                std::__shared_weak_count::__release_weak(v54);
              }
            }
            v104 = *(float32x4_t *)(*(_QWORD *)(v53 + 40) + 16 * v51);
            v58 = *(unsigned int *)(sub_239962518(v17, &v114) + 12);
            v59 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
            v60 = *v59;
            v61 = (std::__shared_weak_count *)v59[1];
            if (v61)
            {
              v62 = (unint64_t *)&v61->__shared_owners_;
              do
                v63 = __ldxr(v62);
              while (__stxr(v63 + 1, v62));
              do
                v64 = __ldaxr(v62);
              while (__stlxr(v64 - 1, v62));
              if (!v64)
              {
                ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
                std::__shared_weak_count::__release_weak(v61);
              }
            }
            v65 = vsubq_f32(v104, *(float32x4_t *)(*(_QWORD *)(v60 + 40) + 16 * v58));
            v66 = vmulq_f32(v65, v65);
            v66.i32[3] = 0;
            if (v18 >= vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v66, v66)))
              goto LABEL_18;
            v67 = (_BYTE *)*((_QWORD *)&__p + 1);
            if (*((_QWORD *)&__p + 1) < (unint64_t)v113)
            {
              **((_DWORD **)&__p + 1) = v114;
              v68 = (uint64_t)(v67 + 4);
LABEL_87:
              *((_QWORD *)&__p + 1) = v68;
              ++v106;
              goto LABEL_18;
            }
            v69 = (_BYTE *)__p;
            v70 = *((_QWORD *)&__p + 1) - __p;
            v71 = (uint64_t)(*((_QWORD *)&__p + 1) - __p) >> 2;
            v72 = v71 + 1;
            if ((unint64_t)(v71 + 1) >> 62)
              sub_2394189F8();
            v73 = (uint64_t)&v113[-__p];
            if ((uint64_t)&v113[-__p] >> 1 > v72)
              v72 = v73 >> 1;
            if ((unint64_t)v73 >= 0x7FFFFFFFFFFFFFFCLL)
              v74 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v74 = v72;
            if (v74)
            {
              v105 = *((_QWORD *)&__p + 1) - __p;
              if (v74 >> 62)
                sub_239418A80();
              v75 = (uint64_t)(*((_QWORD *)&__p + 1) - __p) >> 2;
              v76 = v74;
              v77 = operator new(4 * v74);
              v74 = v76;
              v71 = v75;
              v70 = v105;
              v78 = &v77[4 * v75];
              *v78 = v114;
              v68 = (uint64_t)(v78 + 1);
              if (v67 != v69)
              {
LABEL_75:
                v79 = v67 - 4 - v69;
                if (v79 < 0x2C)
                {
                  v17 = a1 + 104;
                  goto LABEL_83;
                }
                v17 = a1 + 104;
                if ((unint64_t)(v67 - &v77[v70]) < 0x20)
                  goto LABEL_113;
                v80 = (v79 >> 2) + 1;
                v81 = 4 * (v80 & 0x7FFFFFFFFFFFFFF8);
                v82 = &v67[-v81];
                v78 = (_DWORD *)((char *)v78 - v81);
                v83 = &v77[4 * v71 - 16];
                v84 = (__int128 *)(v67 - 16);
                v85 = v80 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v86 = *v84;
                  *(v83 - 1) = *(v84 - 1);
                  *v83 = v86;
                  v83 -= 2;
                  v84 -= 2;
                  v85 -= 8;
                }
                while (v85);
                v67 = v82;
                if (v80 != (v80 & 0x7FFFFFFFFFFFFFF8))
                {
LABEL_113:
                  do
                  {
LABEL_83:
                    v87 = *((_DWORD *)v67 - 1);
                    v67 -= 4;
                    *--v78 = v87;
                  }
                  while (v67 != v69);
                }
                v67 = (_BYTE *)__p;
LABEL_85:
                *(_QWORD *)&__p = v78;
                *((_QWORD *)&__p + 1) = v68;
                v113 = &v77[4 * v74];
                if (v67)
                  operator delete(v67);
                goto LABEL_87;
              }
            }
            else
            {
              v77 = 0;
              v78 = (_DWORD *)(4 * v71);
              *(_DWORD *)(4 * v71) = v114;
              v68 = 4 * v71 + 4;
              if (v67 != v69)
                goto LABEL_75;
            }
            v17 = a1 + 104;
            goto LABEL_85;
          }
        }
        else
        {
LABEL_46:
          if (((*(_QWORD *)(*(_QWORD *)(v45 + 40) + ((v43 >> 3) & 0x1FFFFFF8)) >> v43) & 1) == 0)
            goto LABEL_47;
        }
LABEL_18:
        if (++v15 == v9)
        {
          v88 = (char *)*((_QWORD *)&__p + 1);
          v14 = (char *)__p;
          goto LABEL_91;
        }
      }
    }
  }
  v106 = 0;
  v88 = v14;
LABEL_91:
  v89 = v88 - v14;
  v90 = (unint64_t)(v88 - v14) >> 2;
  v91 = (*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2;
  v93 = *(_QWORD *)(a1 + 152);
  v92 = *(_QWORD *)(a1 + 160);
  sub_23995FDF8((_QWORD *)a1, (v91 + v90));
  v94 = (v92 - v93) >> 2;
  sub_23995FFB0((_QWORD *)a1, v94 + (v89 >> 1));
  v95 = v8 + 6 * v90;
  sub_23995FED4((_QWORD *)a1, v95);
  v110 = v90;
  if (v95 > v8)
  {
    do
    {
      v96 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v98 = *v96;
      v97 = (std::__shared_weak_count *)v96[1];
      if (v97)
      {
        v99 = (unint64_t *)&v97->__shared_owners_;
        do
          v100 = __ldxr(v99);
        while (__stxr(v100 + 1, v99));
        do
          v101 = __ldaxr(v99);
        while (__stlxr(v101 - 1, v99));
        if (!v101)
        {
          ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
          std::__shared_weak_count::__release_weak(v97);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v98 + 40) + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= ~(1 << v9);
      ++v9;
    }
    while (v95 != (_DWORD)v9);
  }
  if (v110)
  {
    v102 = 0;
    do
    {
      v117[0] = v94;
      v117[1] = v94 + 1;
      v114 = v8;
      v115 = vaddq_s32(vdupq_n_s32(v8), (int32x4_t)xmmword_239EFBB30);
      v116 = v8 + 5;
      v111 = v91;
      sub_239965DFC(a1, (unsigned int *)(__p + v102), &v111, v117, &v114, 0, 1);
      v102 += 4;
      LODWORD(v91) = v91 + 1;
      LODWORD(v8) = v8 + 6;
      LODWORD(v94) = v94 + 2;
    }
    while ((v89 & 0x3FFFFFFFCLL) != v102);
  }
  if ((_QWORD)__p)
  {
    *((_QWORD *)&__p + 1) = __p;
    operator delete((void *)__p);
  }
  if (v11)
    operator delete(v11);
  return v106;
}

void sub_23993E314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  void *v23;

  if (__p)
    operator delete(__p);
  if (!v23)
    _Unwind_Resume(exception_object);
  operator delete(v23);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23993E38C(uint64_t a1, double a2, double a3, uint64_t a4, int a5, int a6)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  float v17;
  double v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  _DWORD *v33;
  _DWORD *v34;
  unsigned int *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  float32x4_t v50;
  float32x4_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  float32x4_t v68;
  unsigned int v69;
  _QWORD *v71;
  unsigned int v72;
  unsigned int v73;
  void *__p[2];
  char v75;

  v10 = *(_QWORD *)(a1 + 128);
  v9 = *(_QWORD *)(a1 + 136);
  v75 = 14;
  strcpy((char *)__p, "h:remesh_fixed");
  LOBYTE(v73) = 0;
  v71 = (_QWORD *)(a1 + 32);
  v72 = sub_23993A208((uint64_t **)(a1 + 32), (uint64_t)&v73, (unsigned __int8 *)__p);
  v11 = 0xCCCCCCCCCCCCCCCDLL * ((v9 - v10) >> 2);
  if (v75 < 0)
  {
    operator delete(__p[0]);
    v12 = v11;
    if ((_DWORD)v11)
    {
LABEL_3:
      v13 = operator new(8 * ((v12 - 1) >> 6) + 8);
      v14 = v13;
      if (v12 >= 0x41)
        v15 = (v12 - 1) >> 6;
      else
        v15 = 0;
      v13[v15] = 0;
      if (v12 >= 0x40)
        bzero(v13, 8 * (v12 >> 6));
      if ((v11 & 0x3F) != 0)
        v14[v12 >> 6] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v11 & 0x3F));
      if (v12)
        goto LABEL_11;
      goto LABEL_65;
    }
  }
  else
  {
    v12 = v11;
    if ((_DWORD)v11)
      goto LABEL_3;
  }
  v14 = 0;
  if (v12)
  {
LABEL_11:
    v16 = 0;
    v69 = 0;
    v17 = a2 * a2;
    v18 = a3 * a3 * v17;
    while (1)
    {
      v19 = v16 >> 6;
      v20 = 1 << v16;
      if ((v14[v16 >> 6] & (1 << v16)) != 0)
        goto LABEL_13;
      if (v72 != -1)
      {
        v21 = (uint64_t *)(*v71 + 16 * v72);
        v22 = *v21;
        v23 = (std::__shared_weak_count *)v21[1];
        if (v23)
        {
          p_shared_owners = (unint64_t *)&v23->__shared_owners_;
          do
            v25 = __ldxr(p_shared_owners);
          while (__stxr(v25 + 1, p_shared_owners));
          do
            v26 = __ldaxr(p_shared_owners);
          while (__stlxr(v26 - 1, p_shared_owners));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
            std::__shared_weak_count::__release_weak(v23);
          }
        }
        if ((*(_QWORD *)(*(_QWORD *)(v22 + 40) + 8 * v19) & v20) != 0)
          goto LABEL_13;
        LODWORD(__p[0]) = v16;
        if (*(_DWORD *)sub_239962518(a1 + 104, (unsigned int *)__p) != -1)
        {
          v27 = (uint64_t *)(*v71 + 16 * v72);
          v28 = *v27;
          v29 = (std::__shared_weak_count *)v27[1];
          if (v29)
          {
            v30 = (unint64_t *)&v29->__shared_owners_;
            do
              v31 = __ldxr(v30);
            while (__stxr(v31 + 1, v30));
            do
              v32 = __ldaxr(v30);
            while (__stlxr(v32 - 1, v30));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
              std::__shared_weak_count::__release_weak(v29);
            }
          }
          v73 = v16;
          v33 = (_DWORD *)sub_239962518(a1 + 104, &v73);
          if (((*(_QWORD *)(*(_QWORD *)(v28 + 40) + (((unint64_t)*v33 >> 3) & 0x1FFFFFF8)) >> *v33) & 1) != 0)
            goto LABEL_13;
        }
      }
      v73 = v16;
      LODWORD(__p[0]) = v16;
      v14[v19] |= v20;
      if (*(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)__p) + 12) == -1)
        goto LABEL_13;
      v34 = (_DWORD *)sub_239962518(a1 + 104, &v73);
      *(_QWORD *)((char *)v14 + (((unint64_t)*v34 >> 3) & 0x1FFFFFF8)) |= 1 << *v34;
      if ((a5 & 1) != 0)
      {
LABEL_32:
        v35 = (unsigned int *)sub_239962518(a1 + 104, &v73);
        v36 = *(unsigned int *)(sub_239962518(a1 + 104, v35) + 12);
        v37 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v38 = *v37;
        v39 = (std::__shared_weak_count *)v37[1];
        if (v39)
        {
          v40 = (unint64_t *)&v39->__shared_owners_;
          do
            v41 = __ldxr(v40);
          while (__stxr(v41 + 1, v40));
          do
            v42 = __ldaxr(v40);
          while (__stlxr(v42 - 1, v40));
          if (!v42)
          {
            ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
            std::__shared_weak_count::__release_weak(v39);
          }
        }
        v68 = *(float32x4_t *)(*(_QWORD *)(v38 + 40) + 16 * v36);
        v43 = *(unsigned int *)(sub_239962518(a1 + 104, &v73) + 12);
        v44 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v45 = *v44;
        v46 = (std::__shared_weak_count *)v44[1];
        if (v46)
        {
          v47 = (unint64_t *)&v46->__shared_owners_;
          do
            v48 = __ldxr(v47);
          while (__stxr(v48 + 1, v47));
          do
            v49 = __ldaxr(v47);
          while (__stlxr(v49 - 1, v47));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
        }
        v50 = vsubq_f32(v68, *(float32x4_t *)(*(_QWORD *)(v45 + 40) + 16 * v43));
        v51 = vmulq_f32(v50, v50);
        v51.i32[3] = 0;
        if (v18 > vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v51, v51)))
          v69 += sub_239967B4C(a1, &v73, a5, a6);
        goto LABEL_13;
      }
      v52 = v73;
      v53 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v54 = *v53;
      v55 = (std::__shared_weak_count *)v53[1];
      if (!v55)
        goto LABEL_51;
      v56 = (unint64_t *)&v55->__shared_owners_;
      do
        v57 = __ldxr(v56);
      while (__stxr(v57 + 1, v56));
      do
        v58 = __ldaxr(v56);
      while (__stlxr(v58 - 1, v56));
      if (!v58)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
        if (((*(_QWORD *)(*(_QWORD *)(v54 + 40) + ((v52 >> 3) & 0x1FFFFFF8)) >> v52) & 1) != 0)
          goto LABEL_13;
      }
      else
      {
LABEL_51:
        if (((*(_QWORD *)(*(_QWORD *)(v54 + 40) + ((v52 >> 3) & 0x1FFFFFF8)) >> v52) & 1) != 0)
          goto LABEL_13;
      }
      v59 = *(unsigned int *)sub_239962518(a1 + 104, &v73);
      v60 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v61 = *v60;
      v62 = (std::__shared_weak_count *)v60[1];
      if (!v62)
        goto LABEL_57;
      v63 = (unint64_t *)&v62->__shared_owners_;
      do
        v64 = __ldxr(v63);
      while (__stxr(v64 + 1, v63));
      do
        v65 = __ldaxr(v63);
      while (__stlxr(v65 - 1, v63));
      if (!v65)
      {
        ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
        std::__shared_weak_count::__release_weak(v62);
        if (((*(_QWORD *)(*(_QWORD *)(v61 + 40) + ((v59 >> 3) & 0x1FFFFFF8)) >> v59) & 1) == 0)
          goto LABEL_32;
      }
      else
      {
LABEL_57:
        if (((*(_QWORD *)(*(_QWORD *)(v61 + 40) + ((v59 >> 3) & 0x1FFFFFF8)) >> v59) & 1) == 0)
          goto LABEL_32;
      }
LABEL_13:
      if (++v16 == v12)
        goto LABEL_66;
    }
  }
LABEL_65:
  v69 = 0;
LABEL_66:
  if (sub_2394ED744(a1) && sub_2394ED928(a1))
    sub_2394EDB0C(a1);
  if (v14)
    operator delete(v14);
  return v69;
}

void sub_23993E918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  void *v23;

  operator delete(v23);
  _Unwind_Resume(a1);
}

uint64_t sub_23993E964(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  _DWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  std::__shared_weak_count *v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unsigned int *v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int v42;
  unsigned int *v43;
  uint64_t v44;
  unsigned int *v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int32x4_t v50;
  int32x4_t v51;
  int32x4_t v52;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  void *__p[2];
  char v58;
  unsigned int v59;

  v3 = *(_QWORD *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 136);
  v58 = 14;
  strcpy((char *)__p, "h:remesh_fixed");
  v4 = (_QWORD *)(a1 + 32);
  LOBYTE(v59) = 0;
  v5 = sub_23993A208((uint64_t **)(a1 + 32), (uint64_t)&v59, (unsigned __int8 *)__p);
  v6 = 0xCCCCCCCCCCCCCCCDLL * ((v2 - v3) >> 2);
  if (v58 < 0)
  {
    operator delete(__p[0]);
    v7 = v6;
    if ((_DWORD)v6)
      goto LABEL_3;
  }
  else
  {
    v7 = v6;
    if ((_DWORD)v6)
    {
LABEL_3:
      v8 = 0;
      v9 = 0;
      while (1)
      {
        v10 = v8 >> 3;
        if (v5 != -1)
        {
          v11 = (uint64_t *)(*v4 + 16 * v5);
          v12 = *v11;
          v13 = (std::__shared_weak_count *)v11[1];
          if (v13)
          {
            p_shared_owners = (unint64_t *)&v13->__shared_owners_;
            do
              v15 = __ldxr(p_shared_owners);
            while (__stxr(v15 + 1, p_shared_owners));
            do
              v16 = __ldaxr(p_shared_owners);
            while (__stlxr(v16 - 1, p_shared_owners));
            if (!v16)
            {
              ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
              std::__shared_weak_count::__release_weak(v13);
            }
          }
          if (((*(_QWORD *)(*(_QWORD *)(v12 + 40) + (v10 & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
            goto LABEL_5;
          LODWORD(__p[0]) = v8;
          if (*(_DWORD *)sub_239962518(a1 + 104, (unsigned int *)__p) != -1)
          {
            v17 = (uint64_t *)(*v4 + 16 * v5);
            v18 = *v17;
            v19 = (std::__shared_weak_count *)v17[1];
            if (v19)
            {
              v20 = (unint64_t *)&v19->__shared_owners_;
              do
                v21 = __ldxr(v20);
              while (__stxr(v21 + 1, v20));
              do
                v22 = __ldaxr(v20);
              while (__stlxr(v22 - 1, v20));
              if (!v22)
              {
                ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
                std::__shared_weak_count::__release_weak(v19);
              }
            }
            v59 = v8;
            v23 = (_DWORD *)sub_239962518(a1 + 104, &v59);
            if (((*(_QWORD *)(*(_QWORD *)(v18 + 40) + (((unint64_t)*v23 >> 3) & 0x1FFFFFF8)) >> *v23) & 1) != 0)
              goto LABEL_5;
          }
        }
        v56 = v8;
        v24 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
        v25 = *v24;
        v26 = (std::__shared_weak_count *)v24[1];
        if (!v26)
          goto LABEL_26;
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
        do
          v29 = __ldaxr(v27);
        while (__stlxr(v29 - 1, v27));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
          if (((*(_QWORD *)(*(_QWORD *)(v25 + 40) + (v10 & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
            goto LABEL_5;
        }
        else
        {
LABEL_26:
          if (((*(_QWORD *)(*(_QWORD *)(v25 + 40) + (v10 & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
            goto LABEL_5;
        }
        v30 = *(unsigned int *)sub_239962518(a1 + 104, &v56);
        v31 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
        v33 = *v31;
        v32 = (std::__shared_weak_count *)v31[1];
        if (!v32)
          goto LABEL_32;
        v34 = (unint64_t *)&v32->__shared_owners_;
        do
          v35 = __ldxr(v34);
        while (__stxr(v35 + 1, v34));
        do
          v36 = __ldaxr(v34);
        while (__stlxr(v36 - 1, v34));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
          if (((*(_QWORD *)(*(_QWORD *)(v33 + 40) + ((v30 >> 3) & 0x1FFFFFF8)) >> v30) & 1) == 0)
          {
LABEL_33:
            v37 = *(_DWORD *)(sub_239962518(a1 + 104, &v56) + 12);
            v38 = (unsigned int *)sub_239962518(a1 + 104, &v56);
            v39 = *(_DWORD *)(sub_239962518(a1 + 104, v38) + 12);
            v40 = sub_239962518(a1 + 104, &v56);
            v41 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)(v40 + 8));
            v42 = *(_DWORD *)(sub_239962518(a1 + 104, v41) + 12);
            v43 = (unsigned int *)sub_239962518(a1 + 104, &v56);
            v44 = sub_239962518(a1 + 104, v43);
            v45 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)(v44 + 8));
            v54 = *(_DWORD *)(sub_239962518(a1 + 104, v45) + 12);
            v59 = v37;
            sub_239962B1C((uint64_t)__p, (_QWORD *)(a1 + 104), &v59);
            v46 = -1;
            do
              ++v46;
            while (sub_239962B44(__p) != -1);
            v59 = v39;
            sub_239962B1C((uint64_t)__p, (_QWORD *)(a1 + 104), &v59);
            v47 = -1;
            do
              ++v47;
            while (sub_239962B44(__p) != -1);
            v55 = v9;
            v59 = v42;
            sub_239962B1C((uint64_t)__p, (_QWORD *)(a1 + 104), &v59);
            v48 = -1;
            do
              ++v48;
            while (sub_239962B44(__p) != -1);
            v59 = v54;
            sub_239962B1C((uint64_t)__p, (_QWORD *)(a1 + 104), &v59);
            v49 = -1;
            do
              ++v49;
            while (sub_239962B44(__p) != -1);
            v50.i64[0] = __PAIR64__(v47, v46);
            v50.i64[1] = __PAIR64__(v49, v48);
            v51.i64[0] = 0x500000005;
            v51.i64[1] = 0x500000005;
            v52.i64[0] = 0x600000006;
            v52.i64[1] = 0x600000006;
            if (vaddvq_s32((int32x4_t)vbslq_s8((int8x16_t)vcgtq_s32(v52, v50), (int8x16_t)vsubq_s32(v52, v50), (int8x16_t)vaddq_s32(v50, v51))) <= vaddvq_s32((int32x4_t)vbslq_s8((int8x16_t)vcgtq_s32((int32x4_t)xmmword_239F02910, v50), (int8x16_t)vsubq_s32((int32x4_t)xmmword_239F02910, v50), (int8x16_t)vaddq_s32(v50, (int32x4_t)xmmword_239F02900))))
            {
              v9 = v55;
            }
            else
            {
              LODWORD(__p[0]) = -1;
              v9 = v55 + sub_239963924(a1, &v56, 1, (unsigned int *)__p);
            }
          }
        }
        else
        {
LABEL_32:
          if (((*(_QWORD *)(*(_QWORD *)(v33 + 40) + ((v30 >> 3) & 0x1FFFFFF8)) >> v30) & 1) == 0)
            goto LABEL_33;
        }
LABEL_5:
        if (++v8 == v7)
          return v9;
      }
    }
  }
  return 0;
}

void sub_23993EE5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23993EE78(uint64_t a1, int a2, int a3, double a4)
{
  float v4;

  v4 = a4;
  return sub_2399424B4(a1, a2, a3, 1, v4);
}

uint64_t sub_23993EE84(uint64_t a1, _QWORD *a2, int a3, int a4)
{
  return sub_23994286C(a1, a2, a3, a4, 1);
}

uint64_t sub_23993EE8C(uint64_t a1, int a2, int a3, double a4, double a5, double a6)
{
  float v12;
  float v13;
  float v14;
  double v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  void *exception;

  if (a4 <= a5)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x23B83DB6C](exception, "split ratio <= collapse ratio");
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  sub_23992DD40(a1);
  v13 = v12;
  v14 = a6;
  sub_2399424B4(a1, a3, 1, 1, v14);
  if (a2 >= 1)
  {
    v15 = v13;
    do
    {
      v16 = sub_23993DA5C(a1, v15, a4);
      v17 = sub_23993E38C(a1, v15, a5, 0, 0, 4);
      v18 = v17 | v16 | sub_23993E964(a1);
      sub_2399424B4(a1, a3, 1, 1, v14);
      if (v18)
        v19 = a2 > 1;
      else
        v19 = 0;
      --a2;
    }
    while (v19);
  }
  return 1;
}

void sub_23993EFBC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23993EFD0(uint64_t a1, unsigned int **a2)
{
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  size_t v29;
  size_t v30;
  unsigned int **p_dst;
  uint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  unsigned int *v35;
  unsigned int *v36;
  _DWORD *v37;
  unsigned int *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  unsigned int *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unint64_t v64;
  int v65;
  _BOOL4 v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BOOL4 v72;
  unsigned int *v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  _QWORD *v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  uint64_t v90;
  unsigned int v91;
  unsigned int *__dst;
  unsigned int *v93;
  unint64_t v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  void *__p[2];
  char v99;
  void *v100[2];
  char v101;
  unsigned int v102;
  uint64_t v103;

  v89 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2);
  v4 = -858993459 * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2);
  if (-858993459 * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2))
  {
    v5 = operator new(8 * ((v4 - 1) >> 6) + 8);
    v6 = v5;
    if (v4 >= 0x41)
      v7 = (v4 - 1) >> 6;
    else
      v7 = 0;
    v5[v7] = 0;
    if (v4 >= 0x40)
      bzero(v5, 8 * (v4 >> 6));
    if ((v89 & 0x3F) != 0)
      v6[v4 >> 6] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v89 & 0x3F));
  }
  else
  {
    v6 = 0;
  }
  v101 = 15;
  strcpy((char *)v100, "th:isnew_subdiv");
  v99 = 15;
  strcpy((char *)__p, "tv:isnew_subdiv");
  v97 = -1;
  sub_23992B82C((_QWORD *)a1, &v97, (uint64_t)v100);
  v8 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * v97);
  v9 = *v8;
  v10 = (std::__shared_weak_count *)v8[1];
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v14 = *(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128);
  if (v14)
  {
    v15 = 0;
    v16 = 0xCCCCCCCCCCCCCCCDLL * (v14 >> 2);
    v17 = *(_QWORD *)(v9 + 40);
    do
    {
      *(_QWORD *)(v17 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= ~(1 << v15);
      ++v15;
    }
    while (v16 > v15);
  }
  v96 = -1;
  sub_23992C650((_QWORD *)a1, &v96, (uint64_t)__p);
  v18 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * v96);
  v19 = (std::__shared_weak_count *)v18[1];
  v90 = *v18;
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v23 = a1 + 104;
  v24 = *(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104);
  if (v24)
  {
    v25 = 0;
    v26 = v24 >> 2;
    v27 = *(_QWORD *)(v90 + 40);
    do
    {
      *(_QWORD *)(v27 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= ~(1 << v25);
      ++v25;
    }
    while (v26 > v25);
  }
  v95 = -1;
  v28 = off_256934418[0];
  v29 = strlen(off_256934418[0]);
  if (v29 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v30 = v29;
  v87 = v9;
  v88 = (_QWORD *)a1;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    p_dst = (unsigned int **)operator new(v32 + 1);
    v93 = (unsigned int *)v30;
    v94 = v33 | 0x8000000000000000;
    __dst = (unsigned int *)p_dst;
    goto LABEL_35;
  }
  HIBYTE(v94) = v29;
  p_dst = &__dst;
  if (v29)
LABEL_35:
    memmove(p_dst, v28, v30);
  *((_BYTE *)p_dst + v30) = 0;
  v103 = 0;
  v102 = 0;
  v95 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&v102, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v94) < 0)
    operator delete(__dst);
  v34 = (unsigned int *)operator new(0xCuLL);
  v93 = v34 + 3;
  v94 = (unint64_t)(v34 + 3);
  *(_QWORD *)v34 = -1;
  v34[2] = -1;
  __dst = v34;
  v35 = *a2;
  v36 = a2[1];
  if (*a2 != v36)
  {
    do
    {
      sub_23996389C(a1, v35, (uint64_t)&__dst);
      v37 = (_DWORD *)sub_239962518(v23, __dst);
      v38 = __dst;
      v39 = *__dst;
      v40 = v39 >> 6;
      v41 = 1 << v39;
      v42 = v6[v40];
      if ((v41 & v42) == 0
        && ((*(_QWORD *)((char *)v6 + (((unint64_t)*v37 >> 3) & 0x1FFFFFF8)) >> *v37) & 1) == 0)
      {
        v6[v40] = v41 | v42;
      }
      v43 = (_DWORD *)sub_239962518(v23, v38 + 1);
      v44 = __dst;
      v45 = __dst[1];
      v46 = v45 >> 6;
      v47 = 1 << v45;
      v48 = v6[v46];
      if ((v47 & v48) == 0
        && ((*(_QWORD *)((char *)v6 + (((unint64_t)*v43 >> 3) & 0x1FFFFFF8)) >> *v43) & 1) == 0)
      {
        v6[v46] = v47 | v48;
      }
      v49 = (_DWORD *)sub_239962518(v23, v44 + 2);
      v50 = __dst[2];
      v51 = v50 >> 6;
      v52 = 1 << v50;
      v53 = v6[v51];
      if ((v52 & v53) == 0
        && ((*(_QWORD *)((char *)v6 + (((unint64_t)*v49 >> 3) & 0x1FFFFFF8)) >> *v49) & 1) == 0)
      {
        v6[v51] = v52 | v53;
      }
      ++v35;
    }
    while (v35 != v36);
  }
  if ((_DWORD)v89)
  {
    v54 = 0;
    do
    {
      if (((*(_QWORD *)((char *)v6 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v54) & 1) != 0)
      {
        v102 = v54;
        sub_239967A34(a1, &v102, 0);
      }
      ++v54;
    }
    while (v4 != v54);
  }
  v56 = *(_QWORD *)(a1 + 128);
  v55 = *(_QWORD *)(a1 + 136);
  if (0xCCCCCCCCCCCCCCCDLL * ((v55 - v56) >> 2) > v4)
  {
    v57 = *(_QWORD *)(v87 + 40);
    do
    {
      v59 = v4 >> 6;
      v60 = 1 << v4;
      if ((*(_QWORD *)(v57 + 8 * (v4 >> 6)) & (1 << v4)) != 0)
      {
        v91 = v89;
        v102 = v89;
        v61 = sub_239962518(v23, &v102);
        v62 = (1 << *(_DWORD *)(v61 + 12)) & *(_QWORD *)(*(_QWORD *)(v90 + 40)
                                                         + (((unint64_t)*(unsigned int *)(v61 + 12) >> 3) & 0x1FFFFFF8));
        v63 = (unsigned int *)sub_239962518(v23, &v102);
        v64 = *(unsigned int *)(sub_239962518(v23, v63) + 12);
        if (v62)
          v65 = 2;
        else
          v65 = 1;
        if (((*(_QWORD *)(*(_QWORD *)(v90 + 40) + ((v64 >> 3) & 0x1FFFFFF8)) >> v64) & 1) != 0)
          v66 = v65;
        else
          v66 = v62 != 0;
        v67 = sub_239962518(v23, &v102);
        v68 = *(unsigned int *)(sub_239962518(v23, (unsigned int *)(v67 + 4)) + 12);
        v69 = *(_QWORD *)(*(_QWORD *)(v90 + 40) + ((v68 >> 3) & 0x1FFFFFF8));
        v102 = *(_DWORD *)sub_239962518(v23, &v91);
        v70 = sub_239962518(v23, &v102);
        v71 = (1 << *(_DWORD *)(v70 + 12)) & *(_QWORD *)(*(_QWORD *)(v90 + 40)
                                                         + (((unint64_t)*(unsigned int *)(v70 + 12) >> 3) & 0x1FFFFFF8));
        v72 = v71 != 0;
        v73 = (unsigned int *)sub_239962518(v23, &v102);
        v74 = *(unsigned int *)(sub_239962518(v23, v73) + 12);
        if (v71)
          v75 = 2;
        else
          v75 = 1;
        if (((*(_QWORD *)(*(_QWORD *)(v90 + 40) + ((v74 >> 3) & 0x1FFFFFF8)) >> v74) & 1) != 0)
          v72 = v75;
        v76 = sub_239962518(v23, &v102);
        v77 = sub_239962518(v23, (unsigned int *)(v76 + 4));
        if (v66 + ((v69 >> v68) & 1) == 2
          && v72
           + ((*(_QWORD *)(*(_QWORD *)(v90 + 40) + (((unint64_t)*(unsigned int *)(v77 + 12) >> 3) & 0x1FFFFFF8)) >> *(_DWORD *)(v77 + 12)) & 1) == 2)
        {
          sub_239963924((uint64_t)v88, &v91, 1, &v95);
        }
        *(_QWORD *)(*(_QWORD *)(v87 + 40) + 8 * v59) &= ~v60;
        v58 = (_DWORD *)sub_239962518(v23, &v91);
        v57 = *(_QWORD *)(v87 + 40);
        *(_QWORD *)(v57 + (((unint64_t)*v58 >> 3) & 0x1FFFFFF8)) &= ~(1 << *v58);
        v56 = v88[16];
        v55 = v88[17];
      }
      LODWORD(v89) = v89 + 1;
      v4 = v89;
    }
    while (0xCCCCCCCCCCCCCCCDLL * ((v55 - v56) >> 2) > v89);
  }
  if (v97 != -1)
  {
    v78 = (_QWORD *)(v88[4] + 16 * v97);
    v79 = (std::__shared_weak_count *)v78[1];
    *v78 = 0;
    v78[1] = 0;
    if (v79)
    {
      v80 = (unint64_t *)&v79->__shared_owners_;
      do
        v81 = __ldaxr(v80);
      while (__stlxr(v81 - 1, v80));
      if (!v81)
      {
        ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
        std::__shared_weak_count::__release_weak(v79);
      }
    }
  }
  v97 = -1;
  if (v96 != -1)
  {
    v82 = (_QWORD *)(v88[1] + 16 * v96);
    v83 = (std::__shared_weak_count *)v82[1];
    *v82 = 0;
    v82[1] = 0;
    if (v83)
    {
      v84 = (unint64_t *)&v83->__shared_owners_;
      do
        v85 = __ldaxr(v84);
      while (__stlxr(v85 - 1, v84));
      if (!v85)
      {
        ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
        std::__shared_weak_count::__release_weak(v83);
      }
    }
  }
  v96 = -1;
  if (__dst)
  {
    v93 = __dst;
    operator delete(__dst);
  }
  if ((v99 & 0x80000000) == 0)
  {
    if ((v101 & 0x80000000) == 0)
      goto LABEL_90;
LABEL_94:
    operator delete(v100[0]);
    if (!v6)
      return 1;
    goto LABEL_91;
  }
  operator delete(__p[0]);
  if (v101 < 0)
    goto LABEL_94;
LABEL_90:
  if (v6)
LABEL_91:
    operator delete(v6);
  return 1;
}

void sub_23993F7FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  void *v33;

  if (a27 < 0)
  {
    operator delete(__p);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_3:
      if (!v33)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a28);
  if (!v33)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v33);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23993F8A0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  _QWORD *v18;
  char *v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _DWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _OWORD *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int **v47;
  unsigned int *v48;
  unint64_t v49;
  char *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _BYTE *v63;
  _DWORD *v64;
  unint64_t v65;
  char *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  char *v71;
  uint64_t v72;
  __int128 v73;
  void *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  int *v103;
  int *v104;
  _QWORD *v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  _QWORD *v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  __int128 v119;
  uint64_t v120;
  _QWORD *v121;
  unsigned int *v122;
  int v123;
  uint64_t v124;
  unint64_t v125;
  void **v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  __int128 __p;
  char *v133;
  unsigned int v134;
  _QWORD *v135;
  unint64_t v136;
  int v137[3];

  v1 = a1;
  v134 = -1;
  HIBYTE(v133) = 11;
  strcpy((char *)&__p, "ring hedges");
  sub_239940320(a1, &v134, (uint64_t)&__p);
  if (SHIBYTE(v133) < 0)
    operator delete((void *)__p);
  v2 = (uint64_t *)(v1[1] + 16 * v134);
  v4 = *v2;
  v3 = (std::__shared_weak_count *)v2[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v131 = -1;
  HIBYTE(v133) = 12;
  strcpy((char *)&__p, "hedges flags");
  sub_23992B82C(v1, &v131, (uint64_t)&__p);
  if (SHIBYTE(v133) < 0)
    operator delete((void *)__p);
  v8 = (uint64_t *)(v1[4] + 16 * v131);
  v9 = (std::__shared_weak_count *)v8[1];
  v124 = *v8;
  if (!v9)
    goto LABEL_16;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    v120 = v4;
    v121 = v1;
    if (v1[17] != v1[16])
      goto LABEL_17;
  }
  else
  {
LABEL_16:
    v120 = v4;
    v121 = v1;
    if (v1[17] != v1[16])
    {
LABEL_17:
      v13 = 0;
      v14 = 0;
      v15 = (uint64_t)(v1 + 13);
      while (1)
      {
        LODWORD(__p) = v14;
        *(_QWORD *)(*(_QWORD *)(v124 + 40) + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= ~(1 << v13);
        v17 = *(_DWORD *)(sub_239962518(v15, (unsigned int *)&__p) + 12);
        if (v17 == -1)
          goto LABEL_20;
        v18 = (_QWORD *)(*(_QWORD *)(v4 + 40) + 24 * v17);
        v20 = v18 + 1;
        v19 = (char *)v18[1];
        v21 = v18[2];
        if ((unint64_t)v19 >= v21)
          break;
        *(_DWORD *)v19 = __p;
        v16 = (uint64_t)(v19 + 4);
LABEL_19:
        v4 = v120;
        v1 = v121;
        *v20 = v16;
LABEL_20:
        v13 = ++v14;
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v1[17] - v1[16]) >> 2) <= v14)
          goto LABEL_44;
      }
      v22 = v15;
      v23 = (char *)*v18;
      v24 = (uint64_t)&v19[-*v18];
      v25 = v24 >> 2;
      v26 = (v24 >> 2) + 1;
      if (v26 >> 62)
        sub_2394189F8();
      v27 = v21 - (_QWORD)v23;
      if (v27 >> 1 > v26)
        v26 = v27 >> 1;
      if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL)
        v26 = 0x3FFFFFFFFFFFFFFFLL;
      v125 = v26;
      if (v26)
      {
        if (v26 >> 62)
          sub_239418A80();
        v28 = operator new(4 * v26);
        v29 = &v28[4 * v25];
        *v29 = __p;
        v16 = (uint64_t)(v29 + 1);
        if (v19 != v23)
        {
LABEL_31:
          v30 = v19 - 4 - v23;
          if (v30 >= 0x2C)
          {
            v31 = v19 - &v28[v24];
            v15 = v22;
            if (v31 >= 0x20)
            {
              v32 = (v30 >> 2) + 1;
              v33 = 4 * (v32 & 0x7FFFFFFFFFFFFFF8);
              v34 = &v19[-v33];
              v29 = (_DWORD *)((char *)v29 - v33);
              v35 = &v28[4 * v25 - 16];
              v36 = v19 - 16;
              v37 = v32 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                v38 = *(_OWORD *)v36;
                *(v35 - 1) = *((_OWORD *)v36 - 1);
                *v35 = v38;
                v35 -= 2;
                v36 -= 32;
                v37 -= 8;
              }
              while (v37);
              v19 = v34;
              if (v32 == (v32 & 0x7FFFFFFFFFFFFFF8))
                goto LABEL_40;
            }
          }
          else
          {
            v15 = v22;
          }
          do
          {
            v39 = *((_DWORD *)v19 - 1);
            v19 -= 4;
            *--v29 = v39;
          }
          while (v19 != v23);
LABEL_40:
          v19 = (char *)*v18;
LABEL_41:
          *v18 = v29;
          *v20 = v16;
          v18[2] = &v28[4 * v125];
          if (v19)
            operator delete(v19);
          goto LABEL_19;
        }
      }
      else
      {
        v28 = 0;
        v29 = (_DWORD *)(4 * v25);
        *(_DWORD *)(4 * v25) = __p;
        v16 = 4 * v25 + 4;
        if (v19 != v23)
          goto LABEL_31;
      }
      v15 = v22;
      goto LABEL_41;
    }
  }
LABEL_44:
  v126 = (void **)(v1 + 13);
  v40 = v1[14] - v1[13];
  if ((v40 & 0x3FFFFFFFCLL) != 0)
  {
    v41 = 0;
    v114 = (v40 >> 2);
    v116 = 0;
    while (1)
    {
      v130 = v41;
      v115 = v41;
      v43 = (*(_QWORD *)(*(_QWORD *)(v4 + 40) + 24 * v41 + 8) - *(_QWORD *)(*(_QWORD *)(v4 + 40) + 24 * v41)) & 0x3FFFFFFFCLL;
      v44 = (int *)sub_239962508(v126, &v130);
      if (!v43)
      {
        *v44 = -1;
        v42 = 1;
        goto LABEL_48;
      }
      v45 = v130;
      v46 = *(_QWORD *)(v4 + 40);
      v47 = (unsigned int **)(v46 + 24 * v130);
      v48 = *v47;
      if (*v47 == v47[1])
      {
        v118 = 0;
        goto LABEL_47;
      }
      v118 = 0;
      v123 = *v44;
      while (2)
      {
        v49 = *v48;
        if (((*(_QWORD *)(*(_QWORD *)(v124 + 40) + ((v49 >> 3) & 0x1FFFFFF8)) >> v49) & 1) != 0)
          goto LABEL_53;
        v122 = v48;
        v50 = 0;
        v51 = 0;
        __p = 0uLL;
        v133 = 0;
        v52 = v49;
        v129 = v49;
        do
        {
          v128 = v52;
          v55 = sub_239962518((uint64_t)v126, &v129);
          v56 = *(unsigned int *)sub_239962518((uint64_t)v126, (unsigned int *)(v55 + 4));
          v129 = v56;
          *(_QWORD *)(*(_QWORD *)(v124 + 40) + ((v56 >> 3) & 0x1FFFFFF8)) |= 1 << v56;
          if (v50 < v133)
          {
            *(_DWORD *)v50 = v56;
            v53 = (uint64_t)(v50 + 4);
            goto LABEL_57;
          }
          v57 = (char *)__p;
          v58 = &v50[-__p];
          v59 = (uint64_t)&v50[-__p] >> 2;
          v60 = v59 + 1;
          if ((unint64_t)(v59 + 1) >> 62)
            sub_2394189F8();
          v61 = (uint64_t)&v133[-__p];
          if ((uint64_t)&v133[-__p] >> 1 > v60)
            v60 = v61 >> 1;
          if ((unint64_t)v61 >= 0x7FFFFFFFFFFFFFFCLL)
            v62 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v62 = v60;
          if (v62)
          {
            if (v62 >> 62)
              sub_239418A80();
            v63 = operator new(4 * v62);
            v64 = &v63[4 * v59];
            *v64 = v56;
            v53 = (uint64_t)(v64 + 1);
            if (v50 != v57)
            {
LABEL_74:
              v65 = v50 - 4 - v57;
              if (v65 < 0xBC)
              {
                v66 = v50;
                goto LABEL_76;
              }
              if (&v58[(_QWORD)v63 - 4 - (v65 & 0xFFFFFFFFFFFFFFFCLL)] > &v58[(_QWORD)v63 - 4])
              {
                v66 = v50;
                goto LABEL_76;
              }
              if (&v50[-(v65 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v50 - 4)
              {
                v66 = v50;
                goto LABEL_76;
              }
              if ((unint64_t)(v50 - v63 - (_QWORD)v58) < 0x20)
              {
                v66 = v50;
                goto LABEL_76;
              }
              v68 = (v65 >> 2) + 1;
              v69 = 4 * (v68 & 0x7FFFFFFFFFFFFFF8);
              v66 = &v50[-v69];
              v64 = (_DWORD *)((char *)v64 - v69);
              v70 = &v63[4 * v59 - 16];
              v71 = v50 - 16;
              v72 = v68 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                v73 = *(_OWORD *)v71;
                *(v70 - 1) = *((_OWORD *)v71 - 1);
                *v70 = v73;
                v70 -= 2;
                v71 -= 32;
                v72 -= 8;
              }
              while (v72);
              if (v68 != (v68 & 0x7FFFFFFFFFFFFFF8))
              {
                do
                {
LABEL_76:
                  v67 = *((_DWORD *)v66 - 1);
                  v66 -= 4;
                  *--v64 = v67;
                }
                while (v66 != v57);
              }
              v50 = (char *)__p;
              *(_QWORD *)&__p = v64;
              *((_QWORD *)&__p + 1) = v53;
              v133 = &v63[4 * v62];
              if (!v50)
                goto LABEL_57;
LABEL_78:
              operator delete(v50);
              goto LABEL_57;
            }
          }
          else
          {
            v63 = 0;
            v64 = (_DWORD *)(4 * v59);
            *(_DWORD *)(4 * v59) = v56;
            v53 = 4 * v59 + 4;
            if (v50 != v57)
              goto LABEL_74;
          }
          *(_QWORD *)&__p = v64;
          *((_QWORD *)&__p + 1) = v53;
          v133 = &v63[4 * v62];
          if (v50)
            goto LABEL_78;
LABEL_57:
          v51 |= (_DWORD)v56 == v123;
          *((_QWORD *)&__p + 1) = v53;
          v52 = v129;
          v54 = v129 == -1 || v129 == (_DWORD)v49;
          v50 = (char *)v53;
        }
        while (!v54);
        if ((v51 & 1) != 0)
        {
          v74 = (void *)__p;
          v1 = v121;
          if (!(_QWORD)__p)
            goto LABEL_52;
LABEL_128:
          operator delete(v74);
          goto LABEL_52;
        }
        v1 = v121;
        v75 = v130;
        v76 = (uint64_t *)(v121[1] + 16 * *((unsigned int *)v121 + 44));
        v77 = *v76;
        v78 = (std::__shared_weak_count *)v76[1];
        if (v78)
        {
          v79 = (unint64_t *)&v78->__shared_owners_;
          do
            v80 = __ldxr(v79);
          while (__stxr(v80 + 1, v79));
          do
            v81 = __ldaxr(v79);
          while (__stlxr(v81 - 1, v79));
          if (!v81)
          {
            ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
            std::__shared_weak_count::__release_weak(v78);
          }
        }
        v119 = *(_OWORD *)(*(_QWORD *)(v77 + 40) + 16 * v75);
        LODWORD(v135) = -1;
        v82 = sub_239962620(v126, &v135);
        v83 = (*(uint64_t (**)(_QWORD *))(*v121 + 16))(v121);
        v84 = (uint64_t *)v121[1];
        v85 = (uint64_t *)v121[2];
        if (v84 != v85)
        {
          v86 = v83;
          do
          {
            v87 = *v84;
            v88 = (std::__shared_weak_count *)v84[1];
            if (v88)
            {
              v89 = (unint64_t *)&v88->__shared_owners_;
              do
                v90 = __ldxr(v89);
              while (__stxr(v90 + 1, v89));
            }
            if (v87)
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v87 + 32))(v87, v86);
            if (v88)
            {
              v91 = (unint64_t *)&v88->__shared_owners_;
              do
                v92 = __ldaxr(v91);
              while (__stlxr(v92 - 1, v91));
              if (!v92)
              {
                ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
                std::__shared_weak_count::__release_weak(v88);
              }
            }
            v84 += 2;
          }
          while (v84 != v85);
          v84 = (uint64_t *)v121[1];
        }
        v93 = &v84[2 * *((unsigned int *)v121 + 44)];
        v94 = *v93;
        v95 = (std::__shared_weak_count *)v93[1];
        if (v95)
        {
          v96 = (unint64_t *)&v95->__shared_owners_;
          do
            v97 = __ldxr(v96);
          while (__stxr(v97 + 1, v96));
          do
            v98 = __ldaxr(v96);
          while (__stlxr(v98 - 1, v96));
          if (!v98)
          {
            ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
            std::__shared_weak_count::__release_weak(v95);
          }
        }
        v99 = v82;
        *(_OWORD *)(*(_QWORD *)(v94 + 40) + 16 * v82) = v119;
        v127 = v82;
        v101 = (_QWORD *)v121[1];
        v100 = (_QWORD *)v121[2];
        if (v101 != v100)
        {
          v102 = v130;
          do
          {
            if (*v101)
            {
              (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*v101 + 64))(*v101, v102, v99);
              v100 = (_QWORD *)v121[2];
            }
            v101 += 2;
          }
          while (v101 != v100);
          v99 = v127;
        }
        v103 = (int *)*((_QWORD *)&__p + 1);
        v74 = (void *)__p;
        v135 = v121;
        v136 = v117 & 0xFFFFFFFF00000000 | v99;
        v117 = v136;
        if ((_QWORD)__p != *((_QWORD *)&__p + 1))
        {
          v104 = (int *)__p;
          do
          {
            v137[0] = *v104;
            sub_2399625C8(v135 + 13, v137, &v136);
            ++v104;
          }
          while (v104 != v103);
        }
        sub_2399625F4(v126, &v127, &v128);
        v118 = 1;
        if (v74)
          goto LABEL_128;
LABEL_52:
        v45 = v130;
        v4 = v120;
        v46 = *(_QWORD *)(v120 + 40);
        v48 = v122;
LABEL_53:
        if (++v48 != *(unsigned int **)(v46 + 24 * v45 + 8))
          continue;
        break;
      }
LABEL_47:
      v42 = v118 & 1;
LABEL_48:
      v116 += v42;
      v41 = v115 + 1;
      if (v115 + 1 == v114)
        goto LABEL_131;
    }
  }
  v116 = 0;
LABEL_131:
  if (v134 != -1)
  {
    v105 = (_QWORD *)(v1[1] + 16 * v134);
    v106 = (std::__shared_weak_count *)v105[1];
    *v105 = 0;
    v105[1] = 0;
    if (v106)
    {
      v107 = (unint64_t *)&v106->__shared_owners_;
      do
        v108 = __ldaxr(v107);
      while (__stlxr(v108 - 1, v107));
      if (!v108)
      {
        ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
        std::__shared_weak_count::__release_weak(v106);
      }
    }
  }
  v134 = -1;
  if (v131 != -1)
  {
    v109 = (_QWORD *)(v1[4] + 16 * v131);
    v110 = (std::__shared_weak_count *)v109[1];
    *v109 = 0;
    v109[1] = 0;
    if (v110)
    {
      v111 = (unint64_t *)&v110->__shared_owners_;
      do
        v112 = __ldaxr(v111);
      while (__stlxr(v112 - 1, v111));
      if (!v112)
      {
        ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
        std::__shared_weak_count::__release_weak(v110);
      }
    }
  }
  return v116;
}

void sub_23994029C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239940320(_QWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  void *__p;
  void *v15;
  uint64_t v16;

  __p = 0;
  v15 = 0;
  v16 = 0;
  *a2 = sub_239941254((uint64_t)(a1 + 1), (uint64_t)&__p, a3);
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 16))(a1);
  v5 = (uint64_t *)a1[1];
  v6 = (uint64_t *)a1[2];
  if (v5 != v6)
  {
    v7 = v4;
    do
    {
      v8 = *v5;
      v9 = (std::__shared_weak_count *)v5[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(p_shared_owners);
        while (__stxr(v11 + 1, p_shared_owners));
      }
      if (v8)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v7);
      if (v9)
      {
        v12 = (unint64_t *)&v9->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
}

void sub_239940410(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23994046C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a1[13];
  v2 = a1[14];
  v5 = a1[19];
  v4 = a1[20];
  v7 = a1[16];
  v6 = a1[17];
  if (sub_2394ED744((uint64_t)a1) && sub_2394ED928((uint64_t)a1))
    sub_2394EDB0C((uint64_t)a1);
  return ((v4 - v5) >> 2)
       + ((v2 - v3) >> 2)
       - 0x3333333333333333 * ((v6 - v7) >> 2)
       - (((uint64_t)(a1[14] - a1[13]) >> 2)
        + ((uint64_t)(a1[20] - a1[19]) >> 2))
       + 0x3333333333333333 * ((uint64_t)(a1[17] - a1[16]) >> 2);
}

uint64_t sub_23994051C(_QWORD *a1, _BYTE *a2)
{
  BOOL v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v13;

  *a2 = 0;
  if (sub_23993F8A0(a1))
    v4 = 0;
  else
    v4 = *a2 == 0;
  v5 = !v4;
  *a2 = v5;
  v7 = a1[13];
  v6 = a1[14];
  v9 = a1[19];
  v8 = a1[20];
  v11 = a1[16];
  v10 = a1[17];
  if (sub_2394ED744((uint64_t)a1) && sub_2394ED928((uint64_t)a1))
    sub_2394EDB0C((uint64_t)a1);
  v13 = ((v8 - v9) >> 2)
      + ((v6 - v7) >> 2)
      - 0x3333333333333333 * ((v10 - v11) >> 2)
      - (((uint64_t)(a1[14] - a1[13]) >> 2)
       + ((uint64_t)(a1[20] - a1[19]) >> 2)) != 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[17] - a1[16]) >> 2)
     || *a2 != 0;
  *a2 = v13;
  return 1;
}

uint64_t sub_239940634(_QWORD *a1, _BYTE *a2)
{
  uint64_t result;
  char v5;

  *a2 = 0;
  result = sub_23994051C(a1, a2);
  if (!(_DWORD)result)
  {
    *a2 = *a2;
    return result;
  }
  if ((sub_23992FA08(a1) & 1) != 0)
  {
    v5 = 0;
LABEL_10:
    result = 1;
    *a2 |= v5;
    return result;
  }
  result = sub_239963064(a1);
  if ((_DWORD)result)
  {
    sub_23993F8A0(a1);
    if (sub_2394ED744((uint64_t)a1) && sub_2394ED928((uint64_t)a1))
      sub_2394EDB0C((uint64_t)a1);
    v5 = 1;
    goto LABEL_10;
  }
  *a2 |= 1u;
  return result;
}

uint64_t sub_239940718(_QWORD *a1, _BYTE *a2)
{
  uint64_t v5;

  *a2 = 0;
  if ((sub_23992FA08(a1) & 1) != 0)
    return 1;
  v5 = sub_239963064(a1);
  if ((_DWORD)v5)
  {
    sub_23993F8A0(a1);
    if (sub_2394ED744((uint64_t)a1) && sub_2394ED928((uint64_t)a1))
      sub_2394EDB0C((uint64_t)a1);
  }
  *a2 = 1;
  return v5;
}

uint64_t sub_2399407A8(_QWORD *a1)
{
  char v2;

  v2 = 0;
  return sub_239940634(a1, &v2);
}

uint64_t sub_2399407CC(uint64_t a1, uint64_t *a2, _BYTE *a3)
{
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v12;
  double v13;
  double v14;
  unsigned int *v15;
  unint64_t v17;
  unsigned int *v18;
  unsigned int *v19;
  unsigned int *v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  unint64_t v30;
  float32x4_t v31;
  uint64_t v32;
  uint64_t *v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  float32x4_t v39;
  uint64_t v40;
  uint64_t *v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  float32x4_t v47;
  uint64_t v48;
  uint64_t *v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  int32x4_t v55;
  int32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  uint64_t v59;
  uint64_t v60;
  float32x4_t v61;
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  unsigned int v67;
  unsigned int v68;

  v6 = 0.0;
  if (*(_QWORD *)(a1 + 160) == *(_QWORD *)(a1 + 152))
    goto LABEL_6;
  v7 = 1;
  do
  {
    v68 = v7 - 1;
    v6 = v6 + sub_239932994(a1, &v68);
    v9 = *(_QWORD *)(a1 + 152);
    v8 = *(_QWORD *)(a1 + 160);
    v10 = (v8 - v9) >> 2;
  }
  while (v10 > v7++);
  if (v8 == v9)
  {
LABEL_6:
    v12 = 1;
  }
  else
  {
    v12 = 0;
    v6 = v6 / (double)v10;
  }
  v13 = v6 * 0.0001;
  if (v6 * 0.0001 > 0.000001)
    v13 = 0.000001;
  if (v13 >= 1.0e-10)
    v14 = v13;
  else
    v14 = 1.0e-10;
  *a3 = 0;
  v15 = (unsigned int *)operator new(0xCuLL);
  *(_QWORD *)v15 = -1;
  v15[2] = -1;
  if ((v12 & 1) == 0)
  {
    LODWORD(v17) = 0;
    do
    {
      v67 = v17;
      v18 = (unsigned int *)sub_23996252C(a1 + 104, &v67);
      v19 = (unsigned int *)sub_239962518(a1 + 104, v18);
      *v15 = *(_DWORD *)(sub_239962518(a1 + 104, v19) + 12);
      v20 = (unsigned int *)sub_23996252C(a1 + 104, &v67);
      v21 = sub_239962518(a1 + 104, v20);
      v22 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)(v21 + 8));
      v15[1] = *(_DWORD *)(sub_239962518(a1 + 104, v22) + 12);
      v23 = (unsigned int *)sub_23996252C(a1 + 104, &v67);
      v15[2] = *(_DWORD *)(sub_239962518(a1 + 104, v23) + 12);
      v24 = v15[1];
      v25 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v27 = *v25;
      v26 = (std::__shared_weak_count *)v25[1];
      if (v26)
      {
        p_shared_owners = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(p_shared_owners);
        while (__stxr(v29 + 1, p_shared_owners));
        do
          v30 = __ldaxr(p_shared_owners);
        while (__stlxr(v30 - 1, p_shared_owners));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      v31 = *(float32x4_t *)(*(_QWORD *)(v27 + 40) + 16 * v24);
      v32 = *v15;
      v33 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v35 = *v33;
      v34 = (std::__shared_weak_count *)v33[1];
      if (v34)
      {
        v36 = (unint64_t *)&v34->__shared_owners_;
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
        do
          v38 = __ldaxr(v36);
        while (__stlxr(v38 - 1, v36));
        if (!v38)
        {
          v64 = v31;
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
          v31 = v64;
        }
      }
      v39 = *(float32x4_t *)(*(_QWORD *)(v35 + 40) + 16 * v32);
      v40 = v15[2];
      v41 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v43 = *v41;
      v42 = (std::__shared_weak_count *)v41[1];
      if (v42)
      {
        v44 = (unint64_t *)&v42->__shared_owners_;
        do
          v45 = __ldxr(v44);
        while (__stxr(v45 + 1, v44));
        do
          v46 = __ldaxr(v44);
        while (__stlxr(v46 - 1, v44));
        if (!v46)
        {
          v62 = v39;
          v65 = v31;
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
          v39 = v62;
          v31 = v65;
        }
      }
      v47 = *(float32x4_t *)(*(_QWORD *)(v43 + 40) + 16 * v40);
      v48 = *v15;
      v49 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v51 = *v49;
      v50 = (std::__shared_weak_count *)v49[1];
      if (v50)
      {
        v52 = (unint64_t *)&v50->__shared_owners_;
        do
          v53 = __ldxr(v52);
        while (__stxr(v53 + 1, v52));
        do
          v54 = __ldaxr(v52);
        while (__stlxr(v54 - 1, v52));
        if (!v54)
        {
          v63 = v39;
          v66 = v31;
          v61 = v47;
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
          v47 = v61;
          v39 = v63;
          v31 = v66;
        }
      }
      v55 = (int32x4_t)vsubq_f32(v31, v39);
      v56 = (int32x4_t)vsubq_f32(v47, *(float32x4_t *)(*(_QWORD *)(v51 + 40) + 16 * v48));
      v57 = vmlsq_f32(vmulq_f32((float32x4_t)vzip2q_s32(vzip1q_s32(v55, (int32x4_t)vextq_s8((int8x16_t)v55, (int8x16_t)v55, 0xCuLL)), v55), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v56, (int8x16_t)v56, 4uLL), v56)), (float32x4_t)vzip2q_s32(vzip1q_s32(v56, (int32x4_t)vextq_s8((int8x16_t)v56, (int8x16_t)v56, 0xCuLL)), v56), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v55, (int8x16_t)v55, 4uLL), v55));
      v58 = vmulq_f32(v57, v57);
      v58.i32[3] = 0;
      if (v14 > sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v58, v58))))
      {
        v59 = *a2;
        v60 = v15[1];
        *(_DWORD *)(*a2 + 4 * *v15) = 1056964608;
        *(_DWORD *)(v59 + 4 * v60) = 1056964608;
        *(_DWORD *)(v59 + 4 * v15[2]) = 1056964608;
        *a3 = 1;
      }
      v17 = (v17 + 1);
    }
    while (v17 < (uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2);
  }
  operator delete(v15);
  return 1;
}

void sub_239940BA4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239940BB8(uint64_t a1, int a2, _BYTE *a3, float a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  double v13;
  unsigned int v14;
  float v15;
  unint64_t v16;
  _BYTE *v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  char v22;
  void *__p;
  char *v24;
  char *v25;

  v9 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v24 = 0;
  v25 = 0;
  __p = 0;
  v10 = v8 - v9;
  if (v8 != v9)
  {
    if (v10 < 0)
      sub_2394189F8();
    v11 = (char *)operator new(v8 - v9);
    v12 = &v11[4 * (v10 >> 2)];
    __p = v11;
    v25 = v12;
    bzero(v11, v10 & 0xFFFFFFFFFFFFFFFCLL);
    v24 = v12;
  }
  v22 = 0;
  *a3 = 0;
  if (a2)
  {
    v13 = a4;
    v14 = -1;
    do
    {
      sub_2399407CC(a1, (uint64_t *)&__p, &v22);
      if (!v22)
        break;
      sub_23992DD40(a1);
      if (sub_23993E38C(a1, v15, v13, 0, 1, 4))
      {
        v16 = (uint64_t)(*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2;
        v17 = __p;
        v18 = v24;
        v19 = (v24 - (_BYTE *)__p) >> 2;
        if (v16 <= v19)
        {
          if (v16 < v19)
          {
            v18 = (char *)__p + 4 * v16;
            v24 = v18;
          }
        }
        else
        {
          sub_2394807B4((uint64_t)&__p, v16 - v19);
          v17 = __p;
          v18 = v24;
        }
        v20 = v18 - v17;
        if (v20 >= 1)
          bzero(v17, 4 * (((unint64_t)v20 >> 2) - ((unint64_t)v20 > 3)) + 4);
        sub_2399407CC(a1, (uint64_t *)&__p, &v22);
        *a3 = 1;
        if (!v22)
          break;
      }
      sub_23993EE84(a1, &__p, 5, 0);
      *a3 = 1;
      ++v14;
    }
    while (v14 <= 8);
  }
  else
  {
    sub_2399407CC(a1, (uint64_t *)&__p, &v22);
    if (v22)
    {
      sub_23993EE84(a1, &__p, 5, 0);
      *a3 = 1;
      sub_2399407CC(a1, (uint64_t *)&__p, &v22);
      if (v22)
      {
        sub_23993EE84(a1, &__p, 5, 0);
        *a3 = 1;
        sub_2399407CC(a1, (uint64_t *)&__p, &v22);
        if (v22)
        {
          sub_23993EE84(a1, &__p, 5, 0);
          *a3 = 1;
          sub_2399407CC(a1, (uint64_t *)&__p, &v22);
          if (v22)
          {
            sub_23993EE84(a1, &__p, 5, 0);
            *a3 = 1;
            sub_2399407CC(a1, (uint64_t *)&__p, &v22);
            if (v22)
            {
              sub_23993EE84(a1, &__p, 5, 0);
              *a3 = 1;
              sub_2399407CC(a1, (uint64_t *)&__p, &v22);
              if (v22)
              {
                sub_23993EE84(a1, &__p, 5, 0);
                *a3 = 1;
                sub_2399407CC(a1, (uint64_t *)&__p, &v22);
                if (v22)
                {
                  sub_23993EE84(a1, &__p, 5, 0);
                  *a3 = 1;
                  sub_2399407CC(a1, (uint64_t *)&__p, &v22);
                  if (v22)
                  {
                    sub_23993EE84(a1, &__p, 5, 0);
                    *a3 = 1;
                    sub_2399407CC(a1, (uint64_t *)&__p, &v22);
                    if (v22)
                    {
                      sub_23993EE84(a1, &__p, 5, 0);
                      *a3 = 1;
                      sub_2399407CC(a1, (uint64_t *)&__p, &v22);
                      if (v22)
                      {
                        sub_23993EE84(a1, &__p, 5, 0);
                        *a3 = 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (__p)
  {
    v24 = (char *)__p;
    operator delete(__p);
  }
  return 1;
}

void sub_239940F70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239940F9C(float *a1, float *a2, float *a3, float *a4)
{
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;
  _BOOL8 result;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;

  v4 = a3[1];
  v5 = a2[1];
  v6 = *a3 - *a2;
  v7 = *a1;
  v8 = a1[1];
  v9 = (float)(v6 * (float)(v8 - v5)) - (float)((float)(v4 - v5) * (float)(*a1 - *a2));
  result = 0;
  if (v9 >= 0.0)
  {
    v11 = *a4;
    v12 = a4[1];
    v13 = *a4 - *a2;
    v14 = (float)((float)(v6 * (float)(v12 - v5)) - (float)((float)(v4 - v5) * v13)) + 1.0e-12;
    if (v9 <= v14)
    {
      v15 = (float)((float)(v11 - *a3) * (float)(v8 - v4)) - (float)((float)(v12 - v4) * (float)(v7 - *a3));
      if (v15 >= 0.0)
      {
        result = 0;
        if (v15 <= v14)
        {
          v16 = (float)((float)(v7 - v11) * (float)(v12 - v5)) - (float)((float)(v8 - v12) * v13);
          if (v16 >= 0.0 && v16 <= v14)
            return (float)((float)(v9 + v15) + v16) <= v14;
        }
      }
    }
  }
  return result;
}

uint64_t sub_239941054(float *a1, float *a2, float *a3, float *a4, double *a5, double *a6)
{
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  double v13;
  float v14;
  float v15;
  double v16;
  double v17;
  double v18;
  double v19;
  float v20;
  float v21;
  double v23;
  double v24;
  double v25;
  double v29;
  _BOOL4 v30;
  int v32;
  _BOOL4 v34;
  BOOL v35;
  double v36;

  v6 = a1[1];
  v7 = *a2 - *a1;
  v8 = a2[1] - v6;
  v9 = a4[1];
  v10 = a3[1];
  v11 = *a4 - *a3;
  v12 = v9 - v10;
  v13 = (float)((float)(v7 * (float)(v9 - v10)) - (float)(v8 * v11));
  v14 = *a3 - *a1;
  v15 = v10 - v6;
  v16 = *a5;
  v17 = *a6 * *a6;
  v18 = (float)((float)(v8 * v8) + (float)(v7 * v7));
  if (fabs(v13 / sqrt(fmax(v18 * (float)((float)(v12 * v12) + (float)(v11 * v11)), 1.17549435e-38))) < v17)
  {
    if (fabs((float)((float)(v14 * v8) - (float)(v15 * v7))/ sqrt(fmax(v18 * (float)((float)(v15 * v15) + (float)(v14 * v14)), 1.17549435e-38))) < v17)
    {
      v19 = v16 * v16;
      v20 = (float)(v8 * v15) + (float)(v14 * v7);
      if (v20 >= 0.0 && v19 + v18 >= v20)
        return 4;
      v21 = (float)(v8 * (float)(v9 - v6)) + (float)((float)(*a4 - *a1) * v7);
      if (v21 >= 0.0 && v19 + v18 >= v21)
        return 4;
    }
    return 3;
  }
  v23 = (float)((float)(v14 * v12) - (float)(v15 * v11)) / v13;
  v24 = (float)((float)(v14 * v8) - (float)(v15 * v7)) / v13;
  v25 = 1.0 - v16;
  if (v23 > v16 && v23 < v25 && v24 > v16 && v24 < v25)
    return 0;
  v29 = -v16;
  v30 = v23 >= v25;
  if (v23 > v16 + 1.0)
    v30 = 0;
  v32 = v23 <= v16 && v23 >= v29 || v30;
  if (v24 > v16 || v24 < v29)
  {
    if (v24 <= v16 + 1.0)
    {
      v34 = v24 >= 1.0 - v16;
      if ((v32 & v34) != 0)
        return 2;
    }
    else
    {
      v34 = 0;
    }
  }
  else
  {
    v34 = 1;
    if ((v32 & 1) != 0)
      return 2;
  }
  if (!v32 || (v24 >= v29 ? (v35 = v24 > v16 + 1.0) : (v35 = 1), v35))
  {
    if (!v34)
      return 3;
    v36 = v16 + 1.0;
    if (v23 < v29 || v23 > v36)
      return 3;
  }
  return 1;
}

uint64_t sub_239941254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v19;
  std::__shared_weak_count *v20;

  v6 = *(char **)a1;
  v5 = *(char **)(a1 + 8);
  if (*(char **)a1 == v5)
  {
    v7 = 0;
  }
  else
  {
    v7 = 0;
    while (*(_QWORD *)v6)
    {
      v6 += 16;
      v7 = (v7 + 1);
      if (v6 == v5)
        goto LABEL_8;
    }
  }
  if (v6 == v5)
  {
LABEL_8:
    v19 = 0;
    v20 = 0;
    if ((unint64_t)v5 >= *(_QWORD *)(a1 + 16))
    {
      v8 = sub_2394E46BC((char **)a1, (uint64_t)&v19);
      v9 = v20;
      *(_QWORD *)(a1 + 8) = v8;
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    else
    {
      *(_QWORD *)v5 = 0;
      *((_QWORD *)v5 + 1) = 0;
      *(_QWORD *)(a1 + 8) = v5 + 16;
    }
  }
  v12 = operator new(0x58uLL);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = &off_250AF0818;
  v13 = v12 + 4;
  v12[3] = off_250AF0C30;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_23941A7F8(v13, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)a3;
    v12[6] = *(_QWORD *)(a3 + 16);
  }
  v12[3] = &off_250AF0850;
  v12[9] = 0;
  v12[10] = 0;
  v12[7] = sub_239941BF8;
  v12[8] = 0;
  v14 = (_QWORD *)(*(_QWORD *)a1 + 16 * v7);
  v15 = (std::__shared_weak_count *)v14[1];
  *v14 = v12 + 3;
  v14[1] = v12;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  return v7;
}

void sub_2399413E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239416DA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2399413F4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_23994140C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF0818;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_23994141C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF0818;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_23994144C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_23994145C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  *a1 = &off_250AF0850;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      v5 = a1[6];
      do
      {
        v7 = *(void **)(v5 - 24);
        v5 -= 24;
        v6 = v7;
        if (v7)
        {
          *(_QWORD *)(v3 - 16) = v6;
          operator delete(v6);
        }
        v3 = v5;
      }
      while (v5 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  return sub_23995E4A4((uint64_t)a1);
}

void sub_2399414DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  *a1 = &off_250AF0850;
  v2 = a1[5];
  if (v2)
  {
    v3 = a1[6];
    v4 = (void *)a1[5];
    if (v3 != v2)
    {
      v5 = a1[6];
      do
      {
        v7 = *(void **)(v5 - 24);
        v5 -= 24;
        v6 = v7;
        if (v7)
        {
          *(_QWORD *)(v3 - 16) = v6;
          operator delete(v6);
        }
        v3 = v5;
      }
      while (v5 != v2);
      v4 = (void *)a1[5];
    }
    a1[6] = v2;
    operator delete(v4);
  }
  sub_23995E4A4((uint64_t)a1);
  JUMPOUT(0x23B83E31CLL);
}

unint64_t sub_239941570(uint64_t a1)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 40)) >> 3);
}

void sub_23994158C(uint64_t a1, unint64_t a2)
{
  sub_2395135EC(a1 + 40, a2);
}

void sub_239941594(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;

  v5 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v3 = a1 + 40;
  v6 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3);
  v7 = a2 >= v6;
  v8 = a2 - v6;
  if (v8 != 0 && v7)
  {
    sub_2394D951C(v3, v8);
  }
  else if (!v7)
  {
    v9 = v5 + 24 * a2;
    if (v4 != v9)
    {
      v10 = v4;
      do
      {
        v12 = *(void **)(v10 - 24);
        v10 -= 24;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v4 - 16) = v11;
          operator delete(v11);
        }
        v4 = v10;
      }
      while (v10 != v9);
    }
    *(_QWORD *)(a1 + 48) = v9;
  }
}

void sub_23994162C(_QWORD *a1)
{
  char *v1;
  char *v2;
  char *v3;
  void *v4;
  void *v5;

  v2 = (char *)a1[5];
  v1 = (char *)a1[6];
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  if (v2)
  {
    if (v1 != v2)
    {
      v3 = v1;
      do
      {
        v5 = (void *)*((_QWORD *)v3 - 3);
        v3 -= 24;
        v4 = v5;
        if (v5)
        {
          *((_QWORD *)v1 - 2) = v4;
          operator delete(v4);
        }
        v1 = v3;
      }
      while (v3 != v2);
    }
    operator delete(v2);
  }
}

void sub_239941694(uint64_t a1)
{
  _QWORD *v2;
  char *v3;
  void *v4;
  void *__p;
  void *v6;
  uint64_t v7;

  __p = 0;
  v6 = 0;
  v7 = 0;
  v2 = *(_QWORD **)(a1 + 48);
  if ((unint64_t)v2 >= *(_QWORD *)(a1 + 56))
  {
    v3 = sub_2396C8920((char **)(a1 + 40), (uint64_t)&__p);
    v4 = __p;
    *(_QWORD *)(a1 + 48) = v3;
    if (v4)
    {
      v6 = v4;
      operator delete(v4);
    }
  }
  else
  {
    *v2 = 0;
    v2[1] = 0;
    v2[2] = 0;
    *(_QWORD *)(a1 + 48) = v2 + 3;
  }
}

void sub_239941710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23994172C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  const void **v7;
  _BYTE *v8;
  const void *v9;
  int64_t v10;
  char *v11;
  void **v12;
  char *v13;
  int v14[2];
  char *v15;

  v6 = *(_QWORD *)(a1 + 40);
  v7 = (const void **)(v6 + 24 * a2);
  *(_QWORD *)v14 = 0;
  v15 = 0;
  v13 = 0;
  v9 = *v7;
  v8 = v7[1];
  v10 = v8 - (_BYTE *)*v7;
  if (v8 == *v7)
  {
    v11 = 0;
    if (a2 == a3)
      goto LABEL_4;
  }
  else
  {
    if (v10 < 0)
      sub_2394189F8();
    v11 = (char *)operator new(v8 - (_BYTE *)*v7);
    v13 = v11;
    v15 = &v11[4 * (v10 >> 2)];
    memcpy(v11, v9, v10);
    *(_QWORD *)v14 = v15;
    if (a2 == a3)
    {
LABEL_4:
      v12 = (void **)(v6 + 24 * a3);
      if (v12 == (void **)&v13)
        goto LABEL_5;
      goto LABEL_10;
    }
  }
  sub_23942156C(v7, *(char **)(v6 + 24 * a3), *(char **)(v6 + 24 * a3 + 8), (uint64_t)(*(_QWORD *)(v6 + 24 * a3 + 8) - *(_QWORD *)(v6 + 24 * a3)) >> 2);
  v11 = v13;
  v12 = (void **)(*(_QWORD *)(a1 + 40) + 24 * a3);
  if (v12 == (void **)&v13)
  {
LABEL_5:
    if (!v11)
      return;
    goto LABEL_6;
  }
LABEL_10:
  sub_23942156C(v12, v11, *(char **)v14, (uint64_t)(*(_QWORD *)v14 - (_QWORD)v11) >> 2);
  v11 = v13;
  if (v13)
  {
LABEL_6:
    *(_QWORD *)v14 = v11;
    operator delete(v11);
  }
}

void sub_239941864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239941884(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a3 != a2)
  {
    v3 = result[5];
    return sub_23942156C((_QWORD *)(v3 + 24 * a3), *(char **)(v3 + 24 * a2), *(char **)(v3 + 24 * a2 + 8), (uint64_t)(*(_QWORD *)(v3 + 24 * a2 + 8) - *(_QWORD *)(v3 + 24 * a2)) >> 2);
  }
  return result;
}

_QWORD *sub_2399418B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _BYTE *v5;
  _QWORD *result;

  v4 = (_QWORD *)operator new();
  *v4 = off_250AF0C30;
  v5 = v4 + 1;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_23941A7F8(v5, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)(a1 + 8);
    v4[3] = *(_QWORD *)(a1 + 24);
  }
  v4[4] = *(_QWORD *)(a1 + 32);
  *v4 = &off_250AF0850;
  sub_2399419E0(v4 + 5, (uint64_t *)(a1 + 40));
  *a2 = v4;
  result = (_QWORD *)operator new();
  *result = &off_250AF08C0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v4;
  a2[1] = result;
  return result;
}

void sub_239941980(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x23B83E31C](v1, 0x10B3C402F26E7C1);
  _Unwind_Resume(a1);
}

uint64_t sub_2399419D0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 40);
}

_QWORD *sub_2399419E0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  _QWORD *v8;

  a1[2] = 0;
  v3 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  v4 = *a2;
  v5 = a2[1];
  v6 = v5 - *a2;
  if (v5 != *a2)
  {
    v7 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
    if (v7 >= 0xAAAAAAAAAAAAAABLL)
      sub_2394189F8();
    v8 = operator new(v6);
    *a1 = v8;
    a1[1] = v8;
    a1[2] = &v8[3 * v7];
    a1[1] = sub_239941AB4(v3, v4, v5, v8);
  }
  return a1;
}

void sub_239941A88(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  if (*(_QWORD *)v1)
    sub_239EC3170((void **)(v1 + 8), *(char **)v1, (void **)v1);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239941AB4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  const void *v9;
  int64_t v10;
  char *v11;

  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      v9 = *(const void **)v6;
      v8 = *(_QWORD *)(v6 + 8);
      v10 = v8 - *(_QWORD *)v6;
      if (v8 != *(_QWORD *)v6)
      {
        if (v10 < 0)
          sub_2394189F8();
        v11 = (char *)operator new(v8 - *(_QWORD *)v6);
        *a4 = v11;
        a4[1] = v11;
        v7 = &v11[4 * (v10 >> 2)];
        a4[2] = v7;
        memcpy(v11, v9, v10);
        a4[1] = v7;
      }
      a4 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  return a4;
}

void sub_239941B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2394B7358((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239941B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  void *v11;

  v11 = *(void **)v9;
  if (*(_QWORD *)v9)
  {
    *(_QWORD *)(v9 + 8) = v11;
    operator delete(v11);
  }
  sub_2394B7358((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_239941BB8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239941BDC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t (*sub_239941BF8())()
{
  return sub_239941BF8;
}

BOOL sub_239941C04(uint64_t a1, int *a2, _QWORD *a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _BOOL8 result;
  int v9;
  char v10;
  int v11;
  __int16 v12;
  _BYTE v13[24];
  _QWORD v14[32];
  _QWORD v15[3];
  _QWORD *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v12 = 0;
  v10 = *((_BYTE *)a2 + 5);
  v11 = a2[2];
  v9 = *a2;
  sub_2399F765C(v13, a1, &v9);
  v5 = (_QWORD *)a3[3];
  if (v5)
  {
    if (v5 == a3)
    {
      v16 = v15;
      (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v15);
    }
    else
    {
      v16 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v5 + 16))(v5);
    }
    sub_2394D9710(v15, v14);
    v6 = v16;
    if (v16 == v15)
    {
      v7 = 4;
      v6 = v15;
    }
    else
    {
      if (!v16)
        goto LABEL_10;
      v7 = 5;
    }
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
LABEL_10:
  sub_2399F7660((uint64_t)v13);
  sub_239941D94((uint64_t)v13);
  result = sub_2394ED744(a1);
  if (result)
  {
    result = sub_2394ED928(a1);
    if (result)
      return sub_2394EDB0C(a1);
  }
  return result;
}

uint64_t sub_239941D94(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;

  v2 = *(void **)(a1 + 232);
  if (v2)
  {
    *(_QWORD *)(a1 + 240) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 208);
  if (v3)
  {
    *(_QWORD *)(a1 + 216) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 184);
  if (v4)
  {
    *(_QWORD *)(a1 + 192) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 160);
  if (v5)
  {
    *(_QWORD *)(a1 + 168) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 136);
  if (v6)
    operator delete(v6);
  v7 = *(void **)(a1 + 112);
  if (v7)
  {
    *(_QWORD *)(a1 + 120) = v7;
    operator delete(v7);
  }
  v8 = *(void **)(a1 + 88);
  if (v8)
  {
    *(_QWORD *)(a1 + 96) = v8;
    operator delete(v8);
  }
  v9 = *(std::__shared_weak_count **)(a1 + 80);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      v12 = (_QWORD *)(a1 + 24);
      v13 = *(_QWORD **)(a1 + 48);
      if (v13 != (_QWORD *)(a1 + 24))
        goto LABEL_20;
LABEL_23:
      v14 = 4;
      v13 = v12;
      goto LABEL_24;
    }
  }
  v12 = (_QWORD *)(a1 + 24);
  v13 = *(_QWORD **)(a1 + 48);
  if (v13 == (_QWORD *)(a1 + 24))
    goto LABEL_23;
LABEL_20:
  if (!v13)
    goto LABEL_25;
  v14 = 5;
LABEL_24:
  (*(void (**)(void))(*v13 + 8 * v14))();
LABEL_25:
  v15 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v15;
    operator delete(v15);
  }
  return a1;
}

void sub_239941EA8(unint64_t *a1, uint64_t *a2, float64x2_t **a3, unsigned int a4)
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  float64x2_t *v11;
  unint64_t v12;
  float64x2_t *v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD *f64;
  __int128 *v17;
  _OWORD *v18;
  _OWORD *v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  float64x2_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  BOOL v41;
  char v44;
  char v47;
  double v48;
  double *v49;
  unint64_t v50;
  double v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  double v57;
  unint64_t v58;
  double *v59;
  unint64_t v60;
  double v61;
  double v62;
  unint64_t v63;
  float64x2_t *v64;
  float64x2_t *v65;
  float64x2_t v66;
  float64x2_t v67;
  unint64_t v68;
  uint64_t v69;
  double *v70;
  double *v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  unint64_t v77;
  float64x2_t v78;
  float64x2_t v79;
  unint64_t v80;
  float64x2_t *v81;
  float64x2_t *v82;
  float64x2_t *v83;
  float64x2_t *v84;
  float64x2_t v85;
  float64x2_t v86;
  float64x2_t v87;
  float64x2_t v88;
  float64x2_t v89;
  unint64_t v90;
  uint64_t v91;
  double *v92;
  double *v93;
  double *v94;
  double *v95;
  double v96;
  double v97;
  double v98;
  double v99;
  unint64_t v100;
  float64x2_t v101;
  unint64_t v102;
  float64x2_t *v103;
  float64x2_t *v104;
  float64x2_t v105;
  unint64_t v106;
  uint64_t v107;
  double *v108;
  double *v109;
  double v110;

  v8 = operator new[]();
  v9 = operator new[]();
  v10 = operator new[]();
  v11 = (float64x2_t *)v10;
  v12 = a1[1];
  if (!v12)
    goto LABEL_15;
  v13 = *a3;
  v14 = *a2;
  if (v12 >= 0x12)
  {
    v15 = 0;
    if (v8 - (unint64_t)v13 >= 0x20
      && v9 - (unint64_t)v13 >= 0x20
      && (unint64_t)(v14 - (_QWORD)v13) >= 0x20
      && v9 - v8 >= 0x20
      && v8 - v14 >= 0x20
      && v9 - v14 >= 0x20)
    {
      v15 = v12 & 0xFFFFFFFFFFFFFFFCLL;
      f64 = (_OWORD *)v13[1].f64;
      v17 = (__int128 *)(v14 + 16);
      v18 = (_OWORD *)(v8 + 16);
      v19 = (_OWORD *)(v9 + 16);
      v20 = v12 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        *(f64 - 1) = 0uLL;
        *f64 = 0uLL;
        v21 = *(v17 - 1);
        v22 = *v17;
        *(v18 - 1) = v21;
        *v18 = v22;
        f64 += 2;
        *(v19 - 1) = v21;
        *v19 = v22;
        v17 += 2;
        v18 += 2;
        v19 += 2;
        v20 -= 4;
      }
      while (v20);
      if (v12 == v15)
        goto LABEL_15;
    }
  }
  else
  {
    v15 = 0;
  }
  v23 = v12 - v15;
  v24 = 8 * v15;
  v25 = (_QWORD *)(v9 + 8 * v15);
  v26 = (_QWORD *)(v8 + v24);
  v27 = (_QWORD *)&v13->f64[(unint64_t)v24 / 8];
  v28 = (uint64_t *)(v14 + v24);
  do
  {
    *v27++ = 0;
    v29 = *v28++;
    *v26++ = v29;
    *v25++ = v29;
    --v23;
  }
  while (v23);
LABEL_15:
  v30 = *a1;
  if (!a4)
  {
LABEL_83:
    MEMORY[0x23B83E2F8](v8, 0x1000C8000313F17);
    MEMORY[0x23B83E2F8](v9, 0x1000C8000313F17);
    JUMPOUT(0x23B83E2F8);
  }
  v31 = 0;
  v32 = a1[v12 < *a1];
  v33 = a4;
  v34 = *a3;
  v35 = (unint64_t)&(*a3)->f64[v32];
  v36 = v9 + 8 * v32;
  v37 = v8 + 8 * v32;
  v38 = v10 + 8 * v32;
  v39 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  v41 = (unint64_t)*a3 < v36 && v9 < v35;
  if ((unint64_t)v34 < v37 && v8 < v35)
    v41 = 1;
  v44 = (unint64_t)v34 < v38 && (unint64_t)v11 < v35 || v41;
  if (v9 < v37 && v8 < v36)
    v44 = 1;
  if (v9 >= v38 || (unint64_t)v11 >= v36)
    v47 = v44;
  else
    v47 = 1;
  if (v32 < 0xC)
    v47 = 1;
  while (1)
  {
    v48 = 0.0;
    if (v12)
    {
      v49 = (double *)v9;
      v50 = v12;
      do
      {
        v51 = *v49++;
        v48 = v48 + v51 * v51;
        --v50;
      }
      while (v50);
    }
    if (v30)
    {
      v52 = 0;
      v53 = (unint64_t *)a1[5];
      v54 = *v53;
      do
      {
        v55 = v52 + 1;
        v56 = v53[v52 + 1];
        v57 = 0.0;
        v58 = v56 - v54;
        if (v56 > v54)
        {
          v59 = (double *)(a1[2] + 24 * v54 + 16);
          do
          {
            v57 = v57 + *v59 * *(double *)(v8 + 8 * *((_QWORD *)v59 - 1));
            v59 += 3;
            --v58;
          }
          while (v58);
        }
        v11->f64[v52] = v57;
        v54 = v56;
        ++v52;
      }
      while (v55 != v30);
    }
    if (!v32)
    {
      v62 = 0.0;
      goto LABEL_74;
    }
    if (v32 < 4)
      break;
    v61 = 0.0;
    v63 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    v64 = v11 + 1;
    v65 = (float64x2_t *)(v8 + 16);
    do
    {
      v66 = vmulq_f64(v65[-1], v64[-1]);
      v67 = vmulq_f64(*v65, *v64);
      v61 = v61 + v66.f64[0] + v66.f64[1] + v67.f64[0] + v67.f64[1];
      v65 += 2;
      v64 += 2;
      v63 -= 4;
    }
    while (v63);
    v60 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    if (v32 != v39)
      goto LABEL_65;
LABEL_67:
    v75 = v48 / v61;
    v76 = -v75;
    if ((v47 & 1) != 0)
    {
      v77 = 0;
      v62 = 0.0;
LABEL_72:
      v90 = v32 - v77;
      v91 = v77;
      v92 = (double *)(v9 + 8 * v77);
      v93 = &v11->f64[v91];
      v94 = (double *)(v8 + v91 * 8);
      v95 = &v34->f64[v91];
      do
      {
        v96 = *v94++;
        *v95 = *v95 + v75 * v96;
        ++v95;
        v97 = *v93++;
        v98 = *v92 + v76 * v97;
        *v92++ = v98;
        v62 = v62 + v98 * v98;
        --v90;
      }
      while (v90);
      goto LABEL_74;
    }
    v78 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v75, 0);
    v79 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v76, 0);
    v80 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    v62 = 0.0;
    v81 = (float64x2_t *)(v9 + 16);
    v82 = v11 + 1;
    v83 = v34 + 1;
    v84 = (float64x2_t *)(v8 + 16);
    do
    {
      v85 = vmlaq_f64(*v83, *v84, v78);
      v83[-1] = vmlaq_f64(v83[-1], v84[-1], v78);
      *v83 = v85;
      v86 = vmlaq_f64(v81[-1], v82[-1], v79);
      v87 = vmlaq_f64(*v81, *v82, v79);
      v81[-1] = v86;
      *v81 = v87;
      v88 = vmulq_f64(v86, v86);
      v89 = vmulq_f64(v87, v87);
      v84 += 2;
      v62 = v62 + v88.f64[0] + v88.f64[1] + v89.f64[0] + v89.f64[1];
      v83 += 2;
      v82 += 2;
      v81 += 2;
      v80 -= 4;
    }
    while (v80);
    v77 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    if (v32 != v39)
      goto LABEL_72;
LABEL_74:
    if (v12)
    {
      v99 = v62 / v48;
      if (v12 >= 4)
      {
        v101 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v99, 0);
        v102 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        v103 = (float64x2_t *)(v8 + 16);
        v104 = (float64x2_t *)(v9 + 16);
        do
        {
          v105 = vmlaq_f64(*v104, *v103, v101);
          v103[-1] = vmlaq_f64(v104[-1], v103[-1], v101);
          *v103 = v105;
          v104 += 2;
          v103 += 2;
          v102 -= 4;
        }
        while (v102);
        v100 = v12 & 0xFFFFFFFFFFFFFFFCLL;
        if (v12 == (v12 & 0xFFFFFFFFFFFFFFFCLL))
          goto LABEL_47;
      }
      else
      {
        v100 = 0;
      }
      v106 = v12 - v100;
      v107 = 8 * v100;
      v108 = (double *)(v8 + 8 * v100);
      v109 = (double *)(v9 + v107);
      do
      {
        v110 = *v109++;
        *v108 = v110 + v99 * *v108;
        ++v108;
        --v106;
      }
      while (v106);
    }
LABEL_47:
    if (++v31 == v33)
      goto LABEL_83;
  }
  v60 = 0;
  v61 = 0.0;
LABEL_65:
  v68 = v32 - v60;
  v69 = 8 * v60;
  v70 = &v11->f64[v60];
  v71 = (double *)(v8 + v69);
  do
  {
    v72 = *v71++;
    v73 = v72;
    v74 = *v70++;
    v61 = v61 + v73 * v74;
    --v68;
  }
  while (v68);
  goto LABEL_67;
}

BOOL sub_2399423C8(uint64_t a1, unsigned int *a2)
{
  unsigned int v3;
  unsigned int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 result;
  _DWORD v13[4];

  sub_239962B1C((uint64_t)v13, (_QWORD *)(a1 + 104), a2);
  v3 = sub_239962B44(v13);
  if (v3 == -1)
    return 0;
  v4 = v3;
  while (1)
  {
    v5 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
    v7 = *v5;
    v6 = (std::__shared_weak_count *)v5[1];
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v11 = *(_QWORD *)(*(_QWORD *)(v7 + 40) + (((unint64_t)v4 >> 3) & 0x1FFFFFF8)) & (1 << v4);
    result = v11 != 0;
    if (v11)
      break;
    v4 = sub_239962B44(v13);
    if (v4 == -1)
      return 0;
  }
  return result;
}

uint64_t sub_2399424B4(uint64_t a1, int a2, int a3, int a4, float a5)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  float32x4_t *v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  float v19;
  uint64_t v20;
  unsigned int i;
  unsigned int v22;
  uint64_t *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unsigned int v29;
  int32x2_t v30;
  float32x4_t v31;
  float32x4_t v32;
  double v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  uint64_t v43;
  int v46;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  uint64_t v52[3];
  unsigned int v53;
  float32x4_t v54[2];

  v7 = (_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104);
  v9 = (v8 >> 2);
  if ((v8 >> 2))
  {
    v10 = (float32x4_t *)operator new(16 * v9);
    bzero(v10, 16 * v9);
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v13 = *v11;
    v12 = (std::__shared_weak_count *)v11[1];
    if (!v12)
      goto LABEL_9;
  }
  else
  {
    v10 = 0;
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v13 = *v14;
    v12 = (std::__shared_weak_count *)v14[1];
    if (!v12)
      goto LABEL_9;
  }
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
    v54[0] = 0uLL;
    if (!a2)
      goto LABEL_42;
    goto LABEL_10;
  }
LABEL_9:
  v54[0] = 0uLL;
  if (!a2)
    goto LABEL_42;
LABEL_10:
  if ((v8 & 0x3FFFFFFFCLL) != 0)
  {
    v18 = 0;
    v19 = fabsf(a5);
    while (1)
    {
      v46 = v18;
      v20 = 0;
      do
      {
        v53 = v20;
        if (a3)
        {
          sub_239962B1C((uint64_t)v52, v7, &v53);
          for (i = sub_239962B44(v52); ; i = sub_239962B44(v52))
          {
            v22 = i;
            if (i == -1)
              break;
            v23 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
            v24 = *v23;
            v25 = (std::__shared_weak_count *)v23[1];
            if (v25)
            {
              v26 = (unint64_t *)&v25->__shared_owners_;
              do
                v27 = __ldxr(v26);
              while (__stxr(v27 + 1, v26));
              do
                v28 = __ldaxr(v26);
              while (__stlxr(v28 - 1, v26));
              if (!v28)
              {
                ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
                std::__shared_weak_count::__release_weak(v25);
              }
            }
            if (((*(_QWORD *)(*(_QWORD *)(v24 + 40) + (((unint64_t)v22 >> 3) & 0x1FFFFFF8)) >> v22) & 1) != 0)
              goto LABEL_13;
          }
        }
        if (v19 < 0.000001)
        {
LABEL_13:
          v10[v20] = *(float32x4_t *)(*(_QWORD *)(v13 + 40) + 16 * v20);
          goto LABEL_14;
        }
        sub_239962480((uint64_t)v52, v7, &v53);
        v29 = sub_2399624A8(v52);
        if (v29 == -1)
        {
          v33 = 0.0;
          v32 = 0uLL;
        }
        else
        {
          v32 = 0uLL;
          v33 = 0.0;
          do
          {
            v49 = *(float32x4_t *)(*(_QWORD *)(v13 + 40) + 16 * v29);
            v50 = v32;
            v29 = sub_2399624A8(v52);
            v30.i32[1] = v49.i32[1];
            v32 = vaddq_f32(v50, v49);
            v33 = v33 + 1.0;
          }
          while (v29 != -1);
        }
        *(float *)v30.i32 = v33;
        v34 = vdivq_f32(v32, (float32x4_t)vdupq_lane_s32(v30, 0));
        v35 = vmulq_f32(v34, v34);
        v35.i32[3] = 0;
        v36 = vpaddq_f32(v35, v35);
        v36.f32[0] = vaddv_f32(*(float32x2_t *)v36.f32);
        v31.i32[0] = 0;
        v37 = *(float32x4_t *)(*(_QWORD *)(v13 + 40) + 16 * v20);
        v38 = vaddq_f32(vmulq_n_f32((float32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8(vorrq_s8((int8x16_t)vcgtq_f32(v31, v36), (int8x16_t)vcgeq_f32(v36, v31))), 0), (int8x16_t)v37, (int8x16_t)v34), a5), vmulq_n_f32(v37, 1.0 - a5));
        if (!a4)
          goto LABEL_35;
        v51 = v38;
        sub_23995D9F4(a1, v53, v54);
        v39 = vmulq_f32(v54[0], v54[0]);
        v39.i32[3] = 0;
        if (vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v39, v39)) > 0.0)
        {
          v40 = *(float32x4_t *)(*(_QWORD *)(v13 + 40) + 16 * v20);
          v41 = vsubq_f32(v51, v40);
          v42 = vmulq_f32(v54[0], v41);
          v42.i32[3] = 0;
          v38 = vaddq_f32(v40, vsubq_f32(v41, vmulq_n_f32(v54[0], vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v42, v42)))));
LABEL_35:
          v10[v20] = v38;
          goto LABEL_14;
        }
        v10[v20] = v51;
LABEL_14:
        ++v20;
      }
      while (v20 != v9);
      v43 = 0;
      do
      {
        *(float32x4_t *)(*(_QWORD *)(v13 + 40) + 16 * v43) = v10[v43];
        ++v43;
      }
      while (v9 != v43);
      v18 = v46 + 1;
      if (v46 + 1 == a2)
      {
LABEL_43:
        operator delete(v10);
        return 1;
      }
    }
  }
LABEL_42:
  if (v10)
    goto LABEL_43;
  return 1;
}

void sub_239942840(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23994286C(uint64_t a1, _QWORD *a2, int a3, int a4, int a5)
{
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  float32x4_t *v10;
  uint64_t *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  unsigned int i;
  unsigned int v25;
  uint64_t *v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int v32;
  int32x2_t v33;
  float32x4_t v34;
  float32x4_t v35;
  double v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  uint64_t v42;
  int v45;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  uint64_t v51[3];
  unsigned int v52;
  float32x4_t v53;

  v7 = (_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104);
  v9 = (v8 >> 2);
  if ((v8 >> 2))
  {
    v10 = (float32x4_t *)operator new(16 * v9);
    bzero(v10, 16 * v9);
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v12 = *v11;
    v13 = (std::__shared_weak_count *)v11[1];
    if (!v13)
      goto LABEL_9;
  }
  else
  {
    v10 = 0;
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v12 = *v14;
    v13 = (std::__shared_weak_count *)v14[1];
    if (!v13)
      goto LABEL_9;
  }
  p_shared_owners = (unint64_t *)&v13->__shared_owners_;
  do
    v16 = __ldxr(p_shared_owners);
  while (__stxr(v16 + 1, p_shared_owners));
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v53 = 0uLL;
    if (!a3)
      goto LABEL_41;
    goto LABEL_10;
  }
LABEL_9:
  v53 = 0uLL;
  if (!a3)
    goto LABEL_41;
LABEL_10:
  if ((v8 & 0x3FFFFFFFCLL) != 0)
  {
    v18 = 0;
    while (1)
    {
      v45 = v18;
      v19 = 0;
      do
      {
        while (1)
        {
LABEL_15:
          v52 = v19;
          if (a4)
          {
            sub_239962B1C((uint64_t)v51, v7, &v52);
            for (i = sub_239962B44(v51); ; i = sub_239962B44(v51))
            {
              v25 = i;
              if (i == -1)
                break;
              v26 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
              v27 = *v26;
              v28 = (std::__shared_weak_count *)v26[1];
              if (v28)
              {
                v29 = (unint64_t *)&v28->__shared_owners_;
                do
                  v30 = __ldxr(v29);
                while (__stxr(v30 + 1, v29));
                do
                  v31 = __ldaxr(v29);
                while (__stlxr(v31 - 1, v29));
                if (!v31)
                {
                  ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
                  std::__shared_weak_count::__release_weak(v28);
                }
              }
              if (((*(_QWORD *)(*(_QWORD *)(v27 + 40) + (((unint64_t)v25 >> 3) & 0x1FFFFFF8)) >> v25) & 1) != 0)
              {
                v10[v19] = *(float32x4_t *)(*(_QWORD *)(v12 + 40) + 16 * v19);
                if (++v19 != v9)
                  goto LABEL_15;
                goto LABEL_36;
              }
            }
          }
          sub_239962480((uint64_t)v51, v7, &v52);
          v32 = sub_2399624A8(v51);
          if (v32 == -1)
          {
            v36 = 0.0;
            v35 = 0uLL;
          }
          else
          {
            v35 = 0uLL;
            v36 = 0.0;
            do
            {
              v48 = *(float32x4_t *)(*(_QWORD *)(v12 + 40) + 16 * v32);
              v49 = v35;
              v32 = sub_2399624A8(v51);
              v33.i32[1] = v48.i32[1];
              v35 = vaddq_f32(v49, v48);
              v36 = v36 + 1.0;
            }
            while (v32 != -1);
          }
          *(float *)v33.i32 = v36;
          v37 = vdivq_f32(v35, (float32x4_t)vdupq_lane_s32(v33, 0));
          v38 = vmulq_f32(v37, v37);
          v38.i32[3] = 0;
          v39 = vpaddq_f32(v38, v38);
          v39.f32[0] = vaddv_f32(*(float32x2_t *)v39.f32);
          v34.i32[0] = 0;
          v40 = *(float32x4_t *)(*(_QWORD *)(v12 + 40) + 16 * v19);
          v23 = vaddq_f32(vmulq_n_f32((float32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8(vorrq_s8((int8x16_t)vcgtq_f32(v34, v39), (int8x16_t)vcgeq_f32(v39, v34))), 0), (int8x16_t)v40, (int8x16_t)v37), *(float *)(*a2 + 4 * v19)), vmulq_n_f32(v40, 1.0 - *(float *)(*a2 + 4 * v19)));
          if (!a5)
            goto LABEL_14;
          v50 = v23;
          sub_23995D9F4(a1, v52, &v53);
          v41 = vmulq_f32(v53, v53);
          v41.i32[3] = 0;
          if (vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v41, v41)) <= 0.0)
            break;
          v20 = *(float32x4_t *)(*(_QWORD *)(v12 + 40) + 16 * v19);
          v21 = vsubq_f32(v50, v20);
          v22 = vmulq_f32(v53, v21);
          v22.i32[3] = 0;
          v23 = vaddq_f32(v20, vsubq_f32(v21, vmulq_n_f32(v53, vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v22, v22)))));
LABEL_14:
          v10[v19++] = v23;
          if (v19 == v9)
            goto LABEL_36;
        }
        v10[v19++] = v50;
      }
      while (v19 != v9);
LABEL_36:
      v42 = 0;
      do
      {
        *(float32x4_t *)(*(_QWORD *)(v12 + 40) + 16 * v42) = v10[v42];
        ++v42;
      }
      while (v9 != v42);
      v18 = v45 + 1;
      if (v45 + 1 == a3)
      {
LABEL_42:
        operator delete(v10);
        return 1;
      }
    }
  }
LABEL_41:
  if (v10)
    goto LABEL_42;
  return 1;
}

void sub_239942BF0(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239942C1C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = operator new[]();
  a1[6] = operator new[]();
  a1[7] = operator new[]();
  a1[8] = operator new[]();
  a1[9] = operator new[]();
  a1[10] = operator new[]();
  a1[11] = operator new[]();
  a1[12] = operator new[]();
  return a1;
}

void sub_239942D58(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 24) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239942D74(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v2 = a1[5];
  if (v2)
    MEMORY[0x23B83E2F8](v2, 0x1000C8000313F17);
  v3 = a1[6];
  if (v3)
    MEMORY[0x23B83E2F8](v3, 0x1000C8000313F17);
  v4 = a1[7];
  if (v4)
    MEMORY[0x23B83E2F8](v4, 0x1000C8000313F17);
  v5 = a1[8];
  if (v5)
    MEMORY[0x23B83E2F8](v5, 0x1000C8000313F17);
  v6 = a1[9];
  if (v6)
    MEMORY[0x23B83E2F8](v6, 0x1000C8000313F17);
  v7 = a1[10];
  if (v7)
    MEMORY[0x23B83E2F8](v7, 0x1000C8000313F17);
  v8 = a1[11];
  if (v8)
    MEMORY[0x23B83E2F8](v8, 0x1000C8000313F17);
  v9 = a1[12];
  if (v9)
    MEMORY[0x23B83E2F8](v9, 0x1000C8000313F17);
  v10 = (void *)a1[2];
  if (v10)
  {
    a1[3] = v10;
    operator delete(v10);
  }
  return a1;
}

BOOL sub_239942E84(_QWORD *a1, _QWORD *a2)
{
  if (*a1 < *a2)
    return 1;
  if (*a1 == *a2)
    return a1[1] < a2[1];
  return 0;
}

void sub_239942EBC(uint64_t a1, __int128 *a2, unsigned int (**a3)(__int128 *, __int128 *), uint64_t a4, char a5)
{
  __int128 *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  __int128 *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  unsigned int (*v24)(__int128 *, __int128 *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  BOOL v29;
  unsigned int (*v30)(__int128 *, __int128 *);
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 *v35;
  __int128 *v36;
  unsigned int (*v37)(__int128 *, __int128 *);
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  unsigned int (*v42)(__int128 *, __int128 *);
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  unsigned int (*v46)(__int128 *, __int128 *);
  uint64_t v47;
  __int128 v48;
  __int128 *v49;
  BOOL v51;
  uint64_t v52;
  __int128 *v53;
  uint64_t v54;
  __int128 v55;
  __int128 *v56;
  unsigned int (*v57)(__int128 *, __int128 *);
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  unsigned int (*v63)(__int128 *, __int128 *);
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(__int128 *, __int128 *);
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(__int128 *, __int128 *);
  uint64_t v73;
  char v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;

uint64_t sub_2399434B4(__int128 *a1, __int128 *a2, __int128 *a3, unsigned int (**a4)(__int128 *, __int128 *))
{
  unsigned int (*v8)(__int128 *, __int128 *);
  char v9;
  unsigned int (*v10)(__int128 *, __int128 *);
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  unsigned int (*v18)(__int128 *, __int128 *);
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  unsigned int (*v26)(__int128 *, __int128 *);
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v8 = *a4;
  v49 = *a2;
  v50 = *((_QWORD *)a2 + 2);
  v47 = *a1;
  v48 = *((_QWORD *)a1 + 2);
  v9 = v8(&v49, &v47);
  v10 = *a4;
  if ((v9 & 1) != 0)
  {
    v37 = *a3;
    v38 = *((_QWORD *)a3 + 2);
    v35 = *a2;
    v36 = *((_QWORD *)a2 + 2);
    if (v10(&v37, &v35))
    {
      v11 = *((_QWORD *)a1 + 2);
      v12 = *a1;
      v13 = *((_QWORD *)a3 + 2);
      *a1 = *a3;
      *((_QWORD *)a1 + 2) = v13;
      *a3 = v12;
      *((_QWORD *)a3 + 2) = v11;
      return 1;
    }
    v23 = *((_QWORD *)a1 + 2);
    v24 = *a1;
    v25 = *((_QWORD *)a2 + 2);
    *a1 = *a2;
    *((_QWORD *)a1 + 2) = v25;
    *a2 = v24;
    *((_QWORD *)a2 + 2) = v23;
    v26 = *a4;
    v34 = *((_QWORD *)a3 + 2);
    v33 = *a3;
    v27 = *a2;
    v32 = *((_QWORD *)a2 + 2);
    v31 = v27;
    if (v26(&v33, &v31))
    {
      v28 = *((_QWORD *)a2 + 2);
      v29 = *a2;
      v30 = *((_QWORD *)a3 + 2);
      *a2 = *a3;
      *((_QWORD *)a2 + 2) = v30;
      *a3 = v29;
      *((_QWORD *)a3 + 2) = v28;
      return 2;
    }
    return 1;
  }
  v45 = *a3;
  v46 = *((_QWORD *)a3 + 2);
  v43 = *a2;
  v44 = *((_QWORD *)a2 + 2);
  result = ((uint64_t (*)(__int128 *, __int128 *))v10)(&v45, &v43);
  if ((_DWORD)result)
  {
    v15 = *((_QWORD *)a2 + 2);
    v16 = *a2;
    v17 = *((_QWORD *)a3 + 2);
    *a2 = *a3;
    *((_QWORD *)a2 + 2) = v17;
    *a3 = v16;
    *((_QWORD *)a3 + 2) = v15;
    v18 = *a4;
    v42 = *((_QWORD *)a2 + 2);
    v41 = *a2;
    v19 = *a1;
    v40 = *((_QWORD *)a1 + 2);
    v39 = v19;
    if (v18(&v41, &v39))
    {
      v20 = *((_QWORD *)a1 + 2);
      v21 = *a1;
      v22 = *((_QWORD *)a2 + 2);
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = v22;
      *a2 = v21;
      *((_QWORD *)a2 + 2) = v20;
      return 2;
    }
    return 1;
  }
  return result;
}

__int128 *sub_2399436D8(__int128 *a1, __int128 *a2, uint64_t (**a3)(__int128 *, __int128 *))
{
  __int128 *v4;
  uint64_t (*v6)(__int128 *, __int128 *);
  __int128 *v7;
  __int128 *v8;
  uint64_t (*v9)(__int128 *, __int128 *);
  char v10;
  __int128 *v11;
  uint64_t (*v12)(__int128 *, __int128 *);
  int v13;
  __int128 *v14;
  uint64_t (*v15)(__int128 *, __int128 *);
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t (*v21)(__int128 *, __int128 *);
  uint64_t v22;
  __int128 v23;
  uint64_t (*v24)(__int128 *, __int128 *);
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;

  v4 = a2;
  v53 = *a1;
  v54 = *((_QWORD *)a1 + 2);
  v6 = *a3;
  v51 = v53;
  v52 = v54;
  v49 = *(__int128 *)((char *)a2 - 24);
  v50 = *((_QWORD *)a2 - 1);
  if ((v6(&v51, &v49) & 1) != 0)
  {
    v7 = a1;
    do
    {
      v8 = (__int128 *)((char *)v7 + 24);
      v9 = *a3;
      v47 = v53;
      v48 = v54;
      v45 = *(__int128 *)((char *)v7 + 24);
      v46 = *((_QWORD *)v7 + 5);
      v10 = v9(&v47, &v45);
      v7 = v8;
    }
    while ((v10 & 1) == 0);
  }
  else
  {
    v11 = (__int128 *)((char *)a1 + 24);
    do
    {
      v8 = v11;
      if (v11 >= v4)
        break;
      v12 = *a3;
      v43 = v53;
      v44 = v54;
      v41 = *v8;
      v42 = *((_QWORD *)v8 + 2);
      v13 = v12(&v43, &v41);
      v11 = (__int128 *)((char *)v8 + 24);
    }
    while (!v13);
  }
  if (v8 >= v4)
  {
    v14 = v4;
  }
  else
  {
    do
    {
      v14 = (__int128 *)((char *)v4 - 24);
      v15 = *a3;
      v39 = v53;
      v40 = v54;
      v37 = *(__int128 *)((char *)v4 - 24);
      v38 = *((_QWORD *)v4 - 1);
      v4 = (__int128 *)((char *)v4 - 24);
    }
    while ((v15(&v39, &v37) & 1) != 0);
  }
  while (v8 < v14)
  {
    v16 = *v8;
    v56 = *((_QWORD *)v8 + 2);
    v55 = v16;
    v17 = *v14;
    *((_QWORD *)v8 + 2) = *((_QWORD *)v14 + 2);
    *v8 = v17;
    v18 = v55;
    *((_QWORD *)v14 + 2) = v56;
    *v14 = v18;
    do
    {
      v35 = v53;
      v36 = v54;
      v19 = *((_QWORD *)v8 + 5);
      v20 = *(__int128 *)((char *)v8 + 24);
      v8 = (__int128 *)((char *)v8 + 24);
      v21 = *a3;
      v33 = v20;
      v34 = v19;
    }
    while (!v21(&v35, &v33));
    do
    {
      v31 = v53;
      v32 = v54;
      v22 = *((_QWORD *)v14 - 1);
      v23 = *(__int128 *)((char *)v14 - 24);
      v14 = (__int128 *)((char *)v14 - 24);
      v24 = *a3;
      v29 = v23;
      v30 = v22;
    }
    while ((v24(&v31, &v29) & 1) != 0);
  }
  v25 = (__int128 *)((char *)v8 - 24);
  if ((__int128 *)((char *)v8 - 24) != a1)
  {
    v26 = *v25;
    *((_QWORD *)a1 + 2) = *((_QWORD *)v8 - 1);
    *a1 = v26;
  }
  v27 = v53;
  *((_QWORD *)v8 - 1) = v54;
  *v25 = v27;
  return v8;
}

uint64_t sub_239943904(__int128 *a1, unint64_t a2, uint64_t (**a3)(__int128 *, __int128 *))
{
  uint64_t v6;
  uint64_t (*v7)(__int128 *, __int128 *);
  __int128 *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(__int128 *, __int128 *);
  uint64_t (*v12)(__int128 *, __int128 *);
  __int128 *v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t (*v20)(__int128 *, __int128 *);
  uint64_t v21;
  __int128 v22;
  uint64_t (*v23)(__int128 *, __int128 *);
  __int128 v24;
  __int128 v25;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v6 = 0;
  v47 = *a1;
  v48 = *((_QWORD *)a1 + 2);
  do
  {
    v7 = *a3;
    v45 = *(__int128 *)((char *)a1 + v6 + 24);
    v46 = *(_QWORD *)((char *)a1 + v6 + 40);
    v43 = v47;
    v44 = v48;
    v6 += 24;
  }
  while ((v7(&v45, &v43) & 1) != 0);
  v8 = (__int128 *)((char *)a1 + v6);
  v9 = (uint64_t)a1 + v6 - 24;
  if (v6 == 24)
  {
    while ((unint64_t)v8 < a2)
    {
      v12 = *a3;
      v10 = a2 - 24;
      v41 = *(_OWORD *)(a2 - 24);
      v42 = *(_QWORD *)(a2 - 8);
      v39 = v47;
      v40 = v48;
      a2 -= 24;
      if ((v12(&v41, &v39) & 1) != 0)
        goto LABEL_9;
    }
    v10 = a2;
  }
  else
  {
    do
    {
      v10 = a2 - 24;
      v11 = *a3;
      v37 = *(_OWORD *)(a2 - 24);
      v38 = *(_QWORD *)(a2 - 8);
      v35 = v47;
      v36 = v48;
      a2 -= 24;
    }
    while (!v11(&v37, &v35));
  }
LABEL_9:
  if ((unint64_t)v8 < v10)
  {
    v13 = v8;
    v14 = v10;
    do
    {
      v49 = *v13;
      v15 = v49;
      v50 = *((_QWORD *)v13 + 2);
      v16 = v50;
      v17 = *(_QWORD *)(v14 + 16);
      *v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = v17;
      *(_QWORD *)(v14 + 16) = v16;
      *(_OWORD *)v14 = v15;
      do
      {
        v18 = *((_QWORD *)v13 + 5);
        v19 = *(__int128 *)((char *)v13 + 24);
        v13 = (__int128 *)((char *)v13 + 24);
        v20 = *a3;
        v33 = v19;
        v34 = v18;
        v31 = v47;
        v32 = v48;
      }
      while ((v20(&v33, &v31) & 1) != 0);
      do
      {
        v21 = *(_QWORD *)(v14 - 8);
        v22 = *(_OWORD *)(v14 - 24);
        v14 -= 24;
        v23 = *a3;
        v29 = v22;
        v30 = v21;
        v27 = v47;
        v28 = v48;
      }
      while (!v23(&v29, &v27));
    }
    while ((unint64_t)v13 < v14);
    v9 = (uint64_t)v13 - 24;
  }
  if ((__int128 *)v9 != a1)
  {
    v24 = *(_OWORD *)v9;
    *((_QWORD *)a1 + 2) = *(_QWORD *)(v9 + 16);
    *a1 = v24;
  }
  v25 = v47;
  *(_QWORD *)(v9 + 16) = v48;
  *(_OWORD *)v9 = v25;
  return v9;
}

BOOL sub_239943B18(uint64_t a1, uint64_t a2, unsigned int (**a3)(__int128 *, __int128 *))
{
  unint64_t v6;
  _BOOL8 result;
  unsigned int (*v8)(__int128 *, __int128 *);
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int (*v18)(__int128 *, __int128 *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(__int128 *, __int128 *);
  __int128 *v23;
  __int128 *v24;
  unsigned int (*v25)(__int128 *, __int128 *);
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unsigned int (*v30)(__int128 *, __int128 *);
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  unsigned int (*v35)(__int128 *, __int128 *);
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;

  v6 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  result = 1;
  switch(v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v8 = *a3;
      v49 = *(_OWORD *)(a2 - 24);
      v50 = *(_QWORD *)(a2 - 8);
      v47 = *(_OWORD *)a1;
      v48 = *(_QWORD *)(a1 + 16);
      if (v8(&v49, &v47))
      {
        v9 = a2 - 24;
        v10 = *(_QWORD *)(a1 + 16);
        v11 = *(_OWORD *)a1;
        v12 = *(_QWORD *)(a2 - 8);
        *(_OWORD *)a1 = *(_OWORD *)(a2 - 24);
        *(_QWORD *)(a1 + 16) = v12;
        *(_OWORD *)v9 = v11;
        *(_QWORD *)(v9 + 16) = v10;
      }
      return 1;
    case 3uLL:
      sub_2399434B4((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a2 - 24), a3);
      return 1;
    case 4uLL:
      v23 = (__int128 *)(a1 + 24);
      v24 = (__int128 *)(a1 + 48);
      sub_2399434B4((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a1 + 48), a3);
      v25 = *a3;
      v61 = *(_OWORD *)(a2 - 24);
      v62 = *(_QWORD *)(a2 - 8);
      v59 = *(_OWORD *)(a1 + 48);
      v60 = *(_QWORD *)(a1 + 64);
      if (v25(&v61, &v59))
      {
        v26 = a2 - 24;
        v27 = *(_QWORD *)(a1 + 64);
        v28 = *v24;
        v29 = *(_QWORD *)(a2 - 8);
        *v24 = *(_OWORD *)(a2 - 24);
        *(_QWORD *)(a1 + 64) = v29;
        *(_OWORD *)v26 = v28;
        *(_QWORD *)(v26 + 16) = v27;
        v30 = *a3;
        v58 = *(_QWORD *)(a1 + 64);
        v57 = *v24;
        v31 = *v23;
        v56 = *(_QWORD *)(a1 + 40);
        v55 = v31;
        if (v30(&v57, &v55))
        {
          v32 = *(_QWORD *)(a1 + 40);
          v33 = *v23;
          *v23 = *v24;
          v34 = *(_QWORD *)(a1 + 64);
          *(_QWORD *)(a1 + 40) = v34;
          *v24 = v33;
          *(_QWORD *)(a1 + 64) = v32;
          v35 = *a3;
          v54 = v34;
          v53 = *v23;
          v36 = *(_OWORD *)a1;
          v52 = *(_QWORD *)(a1 + 16);
          v51 = v36;
          if (v35(&v53, &v51))
          {
            v37 = *(_QWORD *)(a1 + 16);
            v38 = *(_OWORD *)a1;
            *(_OWORD *)a1 = *v23;
            *(_QWORD *)(a1 + 16) = *(_QWORD *)(a1 + 40);
            *v23 = v38;
            *(_QWORD *)(a1 + 40) = v37;
          }
        }
      }
      return 1;
    case 5uLL:
      sub_239943E64(a1, a1 + 24, a1 + 48, (__int128 *)(a1 + 72), (__int128 *)(a2 - 24), a3);
      return 1;
    default:
      v13 = a1 + 48;
      sub_2399434B4((__int128 *)a1, (__int128 *)(a1 + 24), (__int128 *)(a1 + 48), a3);
      v14 = a1 + 72;
      if (a1 + 72 == a2)
        return 1;
      v15 = 0;
      v16 = 0;
      break;
  }
  while (1)
  {
    v18 = *a3;
    v45 = *(_OWORD *)v14;
    v46 = *(_QWORD *)(v14 + 16);
    v19 = *(_QWORD *)(v13 + 16);
    v43 = *(_OWORD *)v13;
    v44 = v19;
    if (v18(&v45, &v43))
    {
      v61 = *(_OWORD *)v14;
      v62 = *(_QWORD *)(v14 + 16);
      v20 = v15;
      do
      {
        v21 = a1 + v20;
        *(_OWORD *)(v21 + 72) = *(_OWORD *)(a1 + v20 + 48);
        *(_QWORD *)(v21 + 88) = *(_QWORD *)(a1 + v20 + 64);
        if (v20 == -48)
        {
          v17 = a1;
          goto LABEL_7;
        }
        v22 = *a3;
        v41 = v61;
        v42 = v62;
        v39 = *(_OWORD *)(v21 + 24);
        v40 = *(_QWORD *)(v21 + 40);
        v20 -= 24;
      }
      while ((((uint64_t (*)(__int128 *, __int128 *))v22)(&v41, &v39) & 1) != 0);
      v17 = a1 + v20 + 72;
LABEL_7:
      *(_OWORD *)v17 = v61;
      *(_QWORD *)(v17 + 16) = v62;
      if (++v16 == 8)
        return v14 + 24 == a2;
    }
    v13 = v14;
    v15 += 24;
    v14 += 24;
    if (v14 == a2)
      return 1;
  }
}

__n128 sub_239943E64(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5, unsigned int (**a6)(__int128 *, __int128 *))
{
  unsigned int (*v12)(__int128 *, __int128 *);
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  unsigned int (*v16)(__int128 *, __int128 *);
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  unsigned int (*v21)(__int128 *, __int128 *);
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  unsigned int (*v26)(__int128 *, __int128 *);
  __n128 result;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  unsigned int (*v31)(__int128 *, __int128 *);
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  unsigned int (*v36)(__int128 *, __int128 *);
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  unsigned int (*v41)(__int128 *, __int128 *);
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;

  sub_2399434B4((__int128 *)a1, (__int128 *)a2, (__int128 *)a3, a6);
  v12 = *a6;
  v71 = *a4;
  v72 = *((_QWORD *)a4 + 2);
  v69 = *(_OWORD *)a3;
  v70 = *(_QWORD *)(a3 + 16);
  if (v12(&v71, &v69))
  {
    v13 = *(_QWORD *)(a3 + 16);
    v14 = *(_OWORD *)a3;
    v15 = *((_QWORD *)a4 + 2);
    *(_OWORD *)a3 = *a4;
    *(_QWORD *)(a3 + 16) = v15;
    *a4 = v14;
    *((_QWORD *)a4 + 2) = v13;
    v16 = *a6;
    v68 = *(_QWORD *)(a3 + 16);
    v67 = *(_OWORD *)a3;
    v17 = *(_OWORD *)a2;
    v66 = *(_QWORD *)(a2 + 16);
    v65 = v17;
    if (v16(&v67, &v65))
    {
      v18 = *(_QWORD *)(a2 + 16);
      v19 = *(_OWORD *)a2;
      v20 = *(_QWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_QWORD *)(a2 + 16) = v20;
      *(_OWORD *)a3 = v19;
      *(_QWORD *)(a3 + 16) = v18;
      v21 = *a6;
      v64 = *(_QWORD *)(a2 + 16);
      v63 = *(_OWORD *)a2;
      v22 = *(_OWORD *)a1;
      v62 = *(_QWORD *)(a1 + 16);
      v61 = v22;
      if (v21(&v63, &v61))
      {
        v23 = *(_QWORD *)(a1 + 16);
        v24 = *(_OWORD *)a1;
        v25 = *(_QWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = v25;
        *(_OWORD *)a2 = v24;
        *(_QWORD *)(a2 + 16) = v23;
      }
    }
  }
  v26 = *a6;
  v59 = *a5;
  v60 = *((_QWORD *)a5 + 2);
  v57 = *a4;
  v58 = *((_QWORD *)a4 + 2);
  if (v26(&v59, &v57))
  {
    v28 = *((_QWORD *)a4 + 2);
    v29 = *a4;
    v30 = *((_QWORD *)a5 + 2);
    *a4 = *a5;
    *((_QWORD *)a4 + 2) = v30;
    *a5 = v29;
    *((_QWORD *)a5 + 2) = v28;
    v31 = *a6;
    v56 = *((_QWORD *)a4 + 2);
    v55 = *a4;
    v32 = *(_OWORD *)a3;
    v54 = *(_QWORD *)(a3 + 16);
    v53 = v32;
    if (v31(&v55, &v53))
    {
      v33 = *(_QWORD *)(a3 + 16);
      v34 = *(_OWORD *)a3;
      v35 = *((_QWORD *)a4 + 2);
      *(_OWORD *)a3 = *a4;
      *(_QWORD *)(a3 + 16) = v35;
      *a4 = v34;
      *((_QWORD *)a4 + 2) = v33;
      v36 = *a6;
      v52 = *(_QWORD *)(a3 + 16);
      v51 = *(_OWORD *)a3;
      v37 = *(_OWORD *)a2;
      v50 = *(_QWORD *)(a2 + 16);
      v49 = v37;
      if (v36(&v51, &v49))
      {
        v38 = *(_QWORD *)(a2 + 16);
        v39 = *(_OWORD *)a2;
        v40 = *(_QWORD *)(a3 + 16);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(_QWORD *)(a2 + 16) = v40;
        *(_OWORD *)a3 = v39;
        *(_QWORD *)(a3 + 16) = v38;
        v41 = *a6;
        v48 = *(_QWORD *)(a2 + 16);
        v47 = *(_OWORD *)a2;
        v42 = *(_OWORD *)a1;
        v46 = *(_QWORD *)(a1 + 16);
        v45 = v42;
        if (v41(&v47, &v45))
        {
          v43 = *(_QWORD *)(a1 + 16);
          result = *(__n128 *)a1;
          v44 = *(_QWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_QWORD *)(a1 + 16) = v44;
          *(__n128 *)a2 = result;
          *(_QWORD *)(a2 + 16) = v43;
        }
      }
    }
  }
  return result;
}

__int128 *sub_239944108(uint64_t a1, __int128 *a2, __int128 *a3, unsigned int (**a4)(__n128 *, __int128 *))
{
  __int128 *v6;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __n128 *v11;
  __int128 *v12;
  unint64_t v13;
  uint64_t v14;
  __int128 *v15;
  unsigned int (*v16)(__n128 *, __int128 *);
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  unsigned int (*v21)(__n128 *, __int128 *);
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  unsigned int (*v25)(__n128 *, __int128 *);
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(__n128 *, __int128 *);
  uint64_t v30;
  unsigned int (*v31)(__n128 *, __int128 *);
  unsigned int v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(__n128 *, __int128 *);
  int64_t v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(__n128 *, __int128 *);
  uint64_t v48;
  uint64_t v49;
  __int128 *v50;
  BOOL v51;
  __int128 v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unsigned int (*v56)(__n128 *, __int128 *);
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  unsigned int (*v61)(__n128 *, __int128 *);
  uint64_t v63;
  __int128 *v64;
  __int128 *v65;
  __int128 *v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;

  if ((__int128 *)a1 == a2)
    return a3;
  v6 = a2;
  v8 = ((uint64_t)a2 - a1) / 24;
  v63 = (uint64_t)a2 - a1;
  if ((uint64_t)a2 - a1 >= 25)
  {
    v9 = (v8 - 2) >> 1;
    v10 = v9 + 1;
    v11 = (__n128 *)(a1 + 24 * v9);
    do
    {
      sub_239944654(a1, a4, v8, v11);
      v11 = (__n128 *)((char *)v11 - 24);
      --v10;
    }
    while (v10);
  }
  v12 = v6;
  v66 = v6;
  v13 = v63;
  if (v6 == a3)
    goto LABEL_31;
  if (v63 < 48)
  {
    do
    {
      v16 = *a4;
      v69 = *v6;
      v70 = *((_QWORD *)v6 + 2);
      v67 = *(_OWORD *)a1;
      v68 = *(_QWORD *)(a1 + 16);
      if (v16((__n128 *)&v69, &v67))
      {
        v17 = *((_QWORD *)v6 + 2);
        v18 = *v6;
        v19 = *(_QWORD *)(a1 + 16);
        *v6 = *(_OWORD *)a1;
        *((_QWORD *)v6 + 2) = v19;
        *(_OWORD *)a1 = v18;
        *(_QWORD *)(a1 + 16) = v17;
      }
      v6 = (__int128 *)((char *)v6 + 24);
    }
    while (v6 != a3);
    v12 = a3;
LABEL_31:
    if (v63 < 25)
      return v12;
    goto LABEL_32;
  }
  v14 = a1 + 24;
  v15 = v6;
  v64 = a3;
  do
  {
    v21 = *a4;
    v69 = *v15;
    v70 = *((_QWORD *)v15 + 2);
    v67 = *(_OWORD *)a1;
    v68 = *(_QWORD *)(a1 + 16);
    if (v21((__n128 *)&v69, &v67))
    {
      v22 = *((_QWORD *)v15 + 2);
      v23 = *v15;
      v24 = *(_QWORD *)(a1 + 16);
      *v15 = *(_OWORD *)a1;
      *((_QWORD *)v15 + 2) = v24;
      *(_OWORD *)a1 = v23;
      *(_QWORD *)(a1 + 16) = v22;
      if (v8 < 3)
      {
        v27 = v14;
        v28 = 1;
      }
      else
      {
        v25 = *a4;
        v87 = *(_OWORD *)v14;
        v88 = *(_QWORD *)(v14 + 16);
        v85 = *(_OWORD *)(a1 + 48);
        v86 = *(_QWORD *)(a1 + 64);
        v26 = v25((__n128 *)&v87, &v85);
        v27 = v26 ? a1 + 48 : v14;
        v28 = v26 ? 2 : 1;
      }
      v29 = *a4;
      v83 = *(_OWORD *)v27;
      v84 = *(_QWORD *)(v27 + 16);
      v81 = *(_OWORD *)a1;
      v82 = *(_QWORD *)(a1 + 16);
      if ((((uint64_t (*)(__int128 *, __int128 *))v29)(&v83, &v81) & 1) == 0)
      {
        v79 = *(_OWORD *)a1;
        v80 = *(_QWORD *)(a1 + 16);
        v30 = a1;
        do
        {
          v33 = v27;
          v34 = *(_OWORD *)v27;
          *(_QWORD *)(v30 + 16) = *(_QWORD *)(v27 + 16);
          *(_OWORD *)v30 = v34;
          if ((uint64_t)((v8 - 2) >> 1) < v28)
            break;
          v35 = (2 * v28) | 1;
          v27 = a1 + 24 * v35;
          v36 = 2 * v28 + 2;
          if (v36 < (uint64_t)v8)
          {
            v37 = *a4;
            v77 = *(_OWORD *)v27;
            v78 = *(_QWORD *)(v27 + 16);
            v75 = *(_OWORD *)(v27 + 24);
            v76 = *(_QWORD *)(v27 + 40);
            if (v37((__n128 *)&v77, &v75))
            {
              v27 += 24;
              v35 = v36;
            }
          }
          v31 = *a4;
          v73 = *(_OWORD *)v27;
          v74 = *(_QWORD *)(v27 + 16);
          v71 = v79;
          v72 = v80;
          v32 = v31((__n128 *)&v73, &v71);
          v30 = v33;
          v28 = v35;
        }
        while (!v32);
        v20 = v79;
        *(_QWORD *)(v33 + 16) = v80;
        *(_OWORD *)v33 = v20;
        v14 = a1 + 24;
        a3 = v64;
      }
    }
    v15 = (__int128 *)((char *)v15 + 24);
  }
  while (v15 != a3);
  v12 = a3;
  v13 = v63;
LABEL_32:
  v65 = v12;
  v38 = v13 / 0x18;
  do
  {
    v41 = 0;
    v77 = *(_OWORD *)a1;
    v78 = *(_QWORD *)(a1 + 16);
    v42 = a1;
    do
    {
      v44 = v42 + 24 * v41 + 24;
      v45 = (2 * v41) | 1;
      v46 = 2 * v41 + 2;
      if (v46 < v38)
      {
        v47 = *a4;
        v48 = *(_QWORD *)(v44 + 16);
        v87 = *(_OWORD *)v44;
        v88 = v48;
        v49 = *(_QWORD *)(v44 + 40);
        v85 = *(_OWORD *)(v44 + 24);
        v86 = v49;
        if (v47((__n128 *)&v87, &v85))
        {
          v44 += 24;
          v45 = v46;
        }
      }
      v43 = *(_OWORD *)v44;
      *(_QWORD *)(v42 + 16) = *(_QWORD *)(v44 + 16);
      *(_OWORD *)v42 = v43;
      v42 = v44;
      v41 = v45;
    }
    while (v45 <= (uint64_t)((unint64_t)(v38 - 2) >> 1));
    v50 = (__int128 *)((char *)v66 - 24);
    v51 = v44 == (_QWORD)v66 - 24;
    v66 = (__int128 *)((char *)v66 - 24);
    if (v51)
    {
      v39 = v77;
      *(_QWORD *)(v44 + 16) = v78;
      *(_OWORD *)v44 = v39;
    }
    else
    {
      v52 = *v50;
      *(_QWORD *)(v44 + 16) = *((_QWORD *)v50 + 2);
      *(_OWORD *)v44 = v52;
      *v50 = v77;
      *((_QWORD *)v50 + 2) = v78;
      v53 = v44 - a1 + 24;
      if (v53 >= 25)
      {
        v54 = (v53 / 0x18uLL - 2) >> 1;
        v55 = a1 + 24 * v54;
        v56 = *a4;
        v87 = *(_OWORD *)v55;
        v88 = *(_QWORD *)(v55 + 16);
        v57 = *(_QWORD *)(v44 + 16);
        v85 = *(_OWORD *)v44;
        v86 = v57;
        if (v56((__n128 *)&v87, &v85))
        {
          v58 = *(_OWORD *)v44;
          v84 = *(_QWORD *)(v44 + 16);
          v83 = v58;
          do
          {
            v59 = v55;
            v60 = *(_OWORD *)v55;
            *(_QWORD *)(v44 + 16) = *(_QWORD *)(v55 + 16);
            *(_OWORD *)v44 = v60;
            if (!v54)
              break;
            v54 = (v54 - 1) >> 1;
            v55 = a1 + 24 * v54;
            v61 = *a4;
            v81 = *(_OWORD *)v55;
            v82 = *(_QWORD *)(v55 + 16);
            v79 = v83;
            v80 = v84;
            v44 = v59;
          }
          while ((((uint64_t (*)(__int128 *, __int128 *))v61)(&v81, &v79) & 1) != 0);
          *(_OWORD *)v59 = v83;
          *(_QWORD *)(v59 + 16) = v84;
        }
      }
    }
  }
  while (v38-- > 2);
  return v65;
}

__n128 sub_239944654(uint64_t a1, unsigned int (**a2)(__n128 *, __int128 *), uint64_t a3, __n128 *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 *v7;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(__n128 *, __int128 *);
  uint64_t (*v16)(__n128 *, __n128 *);
  __n128 result;
  unsigned int (*v18)(__n128 *, __int128 *);
  __n128 *v19;
  __n128 v20;
  uint64_t v21;
  unsigned int (*v22)(__n128 *, __int128 *);
  __n128 v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  __n128 v31;
  unint64_t v32;
  __n128 v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = a3 - 2;
  if (a3 >= 2)
  {
    v41 = v4;
    v42 = v5;
    v7 = a4;
    v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 3)))
    {
      v12 = (0x5555555555555556 * (((uint64_t)a4 - a1) >> 3)) | 1;
      v13 = a1 + 24 * v12;
      v14 = 0x5555555555555556 * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v14 < a3)
      {
        v15 = *a2;
        v39 = *(__n128 *)v13;
        v40 = *(_QWORD *)(v13 + 16);
        v37 = *(_OWORD *)(v13 + 24);
        v38 = *(_QWORD *)(v13 + 40);
        if (v15(&v39, &v37))
        {
          v13 += 24;
          v12 = v14;
        }
      }
      v16 = (uint64_t (*)(__n128 *, __n128 *))*a2;
      v35 = *(__n128 *)v13;
      v36 = *(_QWORD *)(v13 + 16);
      v33 = *v7;
      v34 = v7[1].n128_u64[0];
      if ((v16(&v35, &v33) & 1) == 0)
      {
        v31 = *v7;
        v32 = v7[1].n128_u64[0];
        do
        {
          v19 = (__n128 *)v13;
          v20 = *(__n128 *)v13;
          v7[1].n128_u64[0] = *(_QWORD *)(v13 + 16);
          *v7 = v20;
          if (v9 < v12)
            break;
          v21 = (2 * v12) | 1;
          v13 = a1 + 24 * v21;
          if (2 * v12 + 2 < a3)
          {
            v22 = *a2;
            v29 = *(__n128 *)v13;
            v30 = *(_QWORD *)(v13 + 16);
            v27 = *(_OWORD *)(v13 + 24);
            v28 = *(_QWORD *)(v13 + 40);
            if (v22(&v29, &v27))
            {
              v13 += 24;
              v21 = 2 * v12 + 2;
            }
          }
          v18 = *a2;
          v25 = *(__n128 *)v13;
          v26 = *(_QWORD *)(v13 + 16);
          v23 = v31;
          v24 = v32;
          v7 = v19;
          v12 = v21;
        }
        while (!v18(&v25, (__int128 *)&v23));
        result = v31;
        v19[1].n128_u64[0] = v32;
        *v19 = result;
      }
    }
  }
  return result;
}

BOOL sub_239944840(uint64_t a1, _OWORD *a2)
{
  _BOOL8 v3;
  void *__p[2];
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v7 = 0uLL;
  v8 = 0;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_23941A7F8(__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a1;
    v6 = *(_QWORD *)(a1 + 16);
  }
  v3 = sub_2399D4F80((uint64_t *)__p, (int *)&v7);
  if (SHIBYTE(v6) < 0)
    operator delete(__p[0]);
  *a2 = v7;
  if (v8)
    MEMORY[0x23B83E2F8](v8, 0x1000C8077774924);
  return v3;
}

void sub_2399448DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (!a18)
    _Unwind_Resume(exception_object);
  MEMORY[0x23B83E2F8](a18, 0x1000C8077774924);
  _Unwind_Resume(exception_object);
}

BOOL sub_239944938(uint64_t a1, uint64_t a2, int a3)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  _BOOL8 v8;
  unint64_t v9;
  std::string __p;
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;

  v6 = (std::__shared_weak_count *)operator new(0x30uLL);
  v6->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  v6[1].__vftable = 0;
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF08F8;
  v6[1].__shared_owners_ = 0;
  v6[1].__shared_weak_owners_ = 0;
  v12 = v6 + 1;
  v13 = v6;
  if (sub_2399FC90C((uint64_t)&v6[1], a2))
  {
    if (*(char *)(a1 + 23) < 0)
      sub_23941A7F8(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
    else
      __p = *(std::string *)a1;
    v8 = sub_2399D5330(&__p, (uint64_t)&v6[1], a3, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v8 = 0;
  }
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  return v8;
}

void sub_239944A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  if (a14 < 0)
  {
    operator delete(__p);
    sub_239416DA0((uint64_t)&a16);
    _Unwind_Resume(a1);
  }
  sub_239416DA0((uint64_t)&a16);
  _Unwind_Resume(a1);
}

BOOL sub_239944A78(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  _BOOL8 v6;
  unint64_t v7;
  std::string __p;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;

  v4 = (std::__shared_weak_count *)operator new(0x30uLL);
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4[1].__vftable = 0;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF08F8;
  v4[1].__shared_owners_ = 0;
  v4[1].__shared_weak_owners_ = 0;
  v10 = v4 + 1;
  v11 = v4;
  if (sub_2399FC90C((uint64_t)&v4[1], a2))
  {
    if (*(char *)(a1 + 23) < 0)
      sub_23941A7F8(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
    else
      __p = *(std::string *)a1;
    v6 = sub_2399D5330(&__p, (uint64_t)&v4[1], 100, 0);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v6 = 0;
  }
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return v6;
}

void sub_239944B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  if (a14 < 0)
  {
    operator delete(__p);
    sub_239416DA0((uint64_t)&a16);
    _Unwind_Resume(a1);
  }
  sub_239416DA0((uint64_t)&a16);
  _Unwind_Resume(a1);
}

BOOL sub_239944BB8(char *a1, uint64_t a2, int a3)
{
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unint64_t v11;
  unint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  _OWORD *v17;
  unsigned int v18;
  unsigned int v19;
  const float *v20;
  int v21;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  BOOL v26;
  unsigned int v27;
  unsigned int v28;
  const float *v29;
  int v30;
  unint64_t v32;
  char *v33;
  unint64_t v34;
  BOOL v35;
  _BOOL8 v36;
  char *v37;
  unint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  const float *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  int v50;
  const float *v51;
  const float *v52;
  const float *v53;
  const float *v54;
  BOOL v56;
  BOOL v58;
  BOOL v60;
  BOOL v62;
  BOOL v64;
  uint64_t v66;
  unint64_t v67;
  const float *v68;
  unint64_t v69;
  char *v70;
  unint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  unint64_t v75;
  const float *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  int v84;
  const float *v85;
  const float *v86;
  const float *v87;
  const float *v88;
  const float *v89;
  BOOL v91;
  BOOL v93;
  BOOL v95;
  BOOL v97;
  BOOL v99;
  BOOL v101;
  BOOL v103;
  BOOL v105;
  BOOL v107;
  uint64_t v109;
  unint64_t v110;
  const float *v111;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  int v117;
  char *v118;
  __int128 v119;
  __int128 v120;
  void *v121[2];
  void *v122[2];
  __int128 v123;
  void *v124[2];
  void *__p[2];
  __int128 v126;
  void *v127[3];
  __int128 *v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  _BYTE v132[104];
  void *v133;
  void *v134;
  int v135;
  int v136;
  void *v137;
  uint64_t v138;
  float32x4x3_t v139;
  float32x4x4_t v140;

  v138 = *MEMORY[0x24BDAC8D0];
  v5 = *(_DWORD *)(a2 + 12);
  if (v5 == 4)
  {
    v27 = *(_DWORD *)(a2 + 4);
    v28 = *(_DWORD *)(a2 + 8);
    v29 = *(const float **)(a2 + 16);
    sub_239A18FFC((uint64_t)v132);
    if (a3)
      v30 = 4;
    else
      v30 = 0;
    if (v28 < 0x10 && v27 < 0x10)
      v30 = 0;
    v136 = v30;
    sub_239A1903C(v127);
    v131 = 4;
    *(_OWORD *)__p = 0u;
    v126 = 0u;
    v123 = 0u;
    *(_OWORD *)v124 = 0u;
    v32 = v28 * (unint64_t)v27;
    *(_OWORD *)v121 = 0u;
    *(_OWORD *)v122 = 0u;
    if (v32)
    {
      sub_2394807B4((uint64_t)v121, v28 * (unint64_t)v27);
      v33 = (char *)v122[1];
      v34 = (uint64_t)(v123 - (unint64_t)v122[1]) >> 2;
      v35 = v32 >= v34;
      if (v32 > v34)
      {
        sub_2394807B4((uint64_t)&v122[1], v32 - v34);
        goto LABEL_111;
      }
    }
    else
    {
      v33 = 0;
      v35 = 1;
    }
    if (!v35)
      *(_QWORD *)&v123 = &v33[4 * v32];
LABEL_111:
    v69 = ((char *)v124[1] - (char *)v124[0]) >> 2;
    if (v32 <= v69)
    {
      if (v32 < v69)
        v124[1] = (char *)v124[0] + 4 * v32;
    }
    else
    {
      sub_2394807B4((uint64_t)v124, v32 - v69);
    }
    v70 = (char *)__p[1];
    v71 = (uint64_t)(v126 - (unint64_t)__p[1]) >> 2;
    if (v32 <= v71)
    {
      if (v32 < v71)
        *(_QWORD *)&v126 = (char *)__p[1] + 4 * v32;
      if (!v32)
        goto LABEL_124;
    }
    else
    {
      sub_2394807B4((uint64_t)&__p[1], v32 - v71);
      v70 = (char *)__p[1];
    }
    v72 = (char *)v121[0];
    v73 = (char *)v122[1];
    v74 = (char *)v124[0];
    if (v32 >= 0x14)
    {
      v75 = 0;
      v85 = (const float *)((char *)v121[0] + 4 * v32);
      v86 = (const float *)((char *)v122[1] + 4 * v32);
      v87 = (const float *)((char *)v124[0] + 4 * v32);
      v88 = (const float *)&v70[4 * v32];
      v89 = &v29[4 * v32];
      v91 = v121[0] < v87 && v124[0] < v85;
      v93 = v121[0] < v88 && v70 < (char *)v85;
      v95 = v121[0] < v89 && v29 < v85;
      v97 = v122[1] < v87 && v124[0] < v86;
      v99 = v122[1] < v88 && v70 < (char *)v86;
      v101 = v122[1] < v89 && v29 < v86;
      v103 = v124[0] < v88 && v70 < (char *)v87;
      v105 = v124[0] < v89 && v29 < v87;
      v107 = v70 < (char *)v89 && v29 < v88;
      if ((v122[1] >= v85 || v121[0] >= v86)
        && !v91
        && !v93
        && !v95
        && !v97
        && !v99
        && !v101
        && !v103
        && !v105
        && !v107)
      {
        v109 = 0;
        v75 = v32 & 0xFFFFFFFFFFFFFFFCLL;
        v110 = v32 & 0xFFFFFFFFFFFFFFFCLL;
        v111 = v29;
        do
        {
          v140 = vld4q_f32(v111);
          v111 += 16;
          *(float32x4_t *)&v72[v109] = v140.val[0];
          *(float32x4_t *)&v73[v109] = v140.val[1];
          *(float32x4_t *)&v74[v109] = v140.val[2];
          *(float32x4_t *)&v70[v109] = v140.val[3];
          v109 += 16;
          v110 -= 4;
        }
        while (v110);
        if (v32 == v75)
          goto LABEL_124;
      }
    }
    else
    {
      v75 = 0;
    }
    v76 = &v29[4 * v75 + 2];
    do
    {
      v77 = 4 * v75;
      *(float *)&v72[v77] = *(v76 - 2);
      *(float *)&v73[v77] = *(v76 - 1);
      *(float *)&v74[v77] = *v76;
      *(float *)&v70[v77] = v76[1];
      ++v75;
      v76 += 4;
    }
    while (v32 != v75);
LABEL_124:
    v119 = 0u;
    v120 = 0u;
    if ((char *)v126 == v70
      || (*(_QWORD *)&v119 = v70, v124[1] == v124[0])
      || (*((void **)&v119 + 1) = v124[0], (void *)v123 == v122[1])
      || (*(void **)&v120 = v122[1], v121[1] == v121[0]))
    {
      sub_23941D884();
    }
    *((void **)&v120 + 1) = v121[0];
    v128 = &v119;
    v129 = v27;
    v130 = v28;
    v135 = 4;
    v78 = (char *)malloc_type_malloc(0x440uLL, 0x1000040881B329AuLL);
    v133 = v78;
    v79 = strncpy(v78, "A", 0xFFuLL);
    v79[1] = 0;
    strncpy(v79 + 272, "B", 0xFFuLL);
    v78[273] = 0;
    strncpy(v78 + 544, "G", 0xFFuLL);
    v78[545] = 0;
    strncpy(v78 + 816, "R", 0xFFuLL);
    v78[817] = 0;
    v134 = malloc_type_malloc(0x10uLL, 0x100004052888210uLL);
    v80 = (char *)malloc_type_malloc(0x10uLL, 0x100004052888210uLL);
    v137 = v80;
    if (v135 >= 1)
    {
      v81 = 0;
      v82 = (char *)v134;
      do
      {
        v83 = 4 * v81;
        *(_DWORD *)&v82[v83] = 2;
        *(_DWORD *)&v80[v83] = 2;
        ++v81;
      }
      while (v81 < v135);
    }
    v118 = 0;
    if (a1[23] < 0)
      a1 = *(char **)a1;
    v84 = sub_239A1B880((int32x2_t *)v127, (std::string::size_type)v132, a1, &v118);
    v36 = v84 == 0;
    if (v84)
      sub_239A1BB94(v118);
    free(v133);
    free(v134);
    free(v137);
    if (__p[1])
    {
      *(void **)&v126 = __p[1];
      operator delete(__p[1]);
    }
    goto LABEL_137;
  }
  if (v5 == 3)
  {
    v18 = *(_DWORD *)(a2 + 4);
    v19 = *(_DWORD *)(a2 + 8);
    v20 = *(const float **)(a2 + 16);
    sub_239A18FFC((uint64_t)v132);
    if (a3)
      v21 = 4;
    else
      v21 = 0;
    if (v19 < 0x10 && v18 < 0x10)
      v21 = 0;
    v136 = v21;
    sub_239A1903C(v127);
    v131 = 3;
    __p[0] = 0;
    v123 = 0u;
    *(_OWORD *)v124 = 0u;
    *(_OWORD *)v121 = 0u;
    *(_OWORD *)v122 = 0u;
    v23 = v19 * (unint64_t)v18;
    if (v23)
    {
      sub_2394807B4((uint64_t)v121, v19 * (unint64_t)v18);
      v24 = (char *)v122[1];
      v25 = (uint64_t)(v123 - (unint64_t)v122[1]) >> 2;
      v26 = v23 >= v25;
      if (v23 > v25)
      {
        sub_2394807B4((uint64_t)&v122[1], v23 - v25);
        goto LABEL_44;
      }
    }
    else
    {
      v24 = 0;
      v26 = 1;
    }
    if (!v26)
      *(_QWORD *)&v123 = &v24[4 * v23];
LABEL_44:
    v37 = (char *)v124[0];
    v38 = ((char *)v124[1] - (char *)v124[0]) >> 2;
    if (v23 <= v38)
    {
      if (v23 < v38)
        v124[1] = (char *)v124[0] + 4 * v23;
      if (!v23)
        goto LABEL_53;
    }
    else
    {
      sub_2394807B4((uint64_t)v124, v23 - v38);
      v37 = (char *)v124[0];
    }
    v39 = (char *)v121[0];
    v40 = (char *)v122[1];
    if (v23 >= 0x10)
    {
      v41 = 0;
      v51 = (const float *)((char *)v121[0] + 4 * v23);
      v52 = (const float *)((char *)v122[1] + 4 * v23);
      v53 = (const float *)&v37[4 * v23];
      v54 = &v20[3 * v23];
      v56 = v121[0] < v53 && v37 < (char *)v51;
      v58 = v121[0] < v54 && v20 < v51;
      v60 = v122[1] < v53 && v37 < (char *)v52;
      v62 = v122[1] < v54 && v20 < v52;
      v64 = v37 < (char *)v54 && v20 < v53;
      if ((v122[1] >= v51 || v121[0] >= v52) && !v56 && !v58 && !v60 && !v62 && !v64)
      {
        v66 = 0;
        v41 = v23 & 0xFFFFFFFFFFFFFFFCLL;
        v67 = v23 & 0xFFFFFFFFFFFFFFFCLL;
        v68 = v20;
        do
        {
          v139 = vld3q_f32(v68);
          v68 += 12;
          *(float32x4_t *)&v39[v66] = v139.val[0];
          *(float32x4_t *)&v40[v66] = v139.val[1];
          *(float32x4_t *)&v37[v66] = v139.val[2];
          v66 += 16;
          v67 -= 4;
        }
        while (v67);
        if (v23 == v41)
          goto LABEL_53;
      }
    }
    else
    {
      v41 = 0;
    }
    v42 = &v20[3 * v41 + 1];
    do
    {
      v43 = 4 * v41;
      *(float *)&v39[v43] = *(v42 - 1);
      *(float *)&v40[v43] = *v42;
      *(float *)&v37[v43] = v42[1];
      ++v41;
      v42 += 3;
    }
    while (v23 != v41);
LABEL_53:
    v119 = 0uLL;
    *(_QWORD *)&v120 = 0;
    if (v124[1] == v37
      || (*(_QWORD *)&v119 = v37, (void *)v123 == v122[1])
      || (*((void **)&v119 + 1) = v122[1], v121[1] == v121[0]))
    {
      sub_23941D884();
    }
    *(void **)&v120 = v121[0];
    v128 = &v119;
    v129 = v18;
    v130 = v19;
    v135 = 3;
    v44 = (char *)malloc_type_malloc(0x330uLL, 0x1000040881B329AuLL);
    v133 = v44;
    v45 = strncpy(v44, "B", 0xFFuLL);
    v45[1] = 0;
    strncpy(v45 + 272, "G", 0xFFuLL);
    v44[273] = 0;
    strncpy(v44 + 544, "R", 0xFFuLL);
    v44[545] = 0;
    v134 = malloc_type_malloc(0xCuLL, 0x100004052888210uLL);
    v46 = (char *)malloc_type_malloc(0xCuLL, 0x100004052888210uLL);
    v137 = v46;
    if (v135 >= 1)
    {
      v47 = 0;
      v48 = (char *)v134;
      do
      {
        v49 = 4 * v47;
        *(_DWORD *)&v48[v49] = 2;
        *(_DWORD *)&v46[v49] = 2;
        ++v47;
      }
      while (v47 < v135);
    }
    v118 = 0;
    if (a1[23] < 0)
      a1 = *(char **)a1;
    v50 = sub_239A1B880((int32x2_t *)v127, (std::string::size_type)v132, a1, &v118);
    v36 = v50 == 0;
    if (v50)
      sub_239A1BB94(v118);
    free(v133);
    free(v134);
    free(v137);
LABEL_137:
    if (v124[0])
    {
      v124[1] = v124[0];
      operator delete(v124[0]);
    }
    if (v122[1])
    {
      *(void **)&v123 = v122[1];
      operator delete(v122[1]);
    }
    if (v121[0])
    {
      v121[1] = v121[0];
      operator delete(v121[0]);
    }
    return v36;
  }
  if (v5 != 1)
    return 0;
  v6 = *(_DWORD *)(a2 + 4);
  v7 = *(_DWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  sub_239A18FFC((uint64_t)v132);
  if (a3)
    v9 = 3;
  else
    v9 = 0;
  if (v7 < 0x10 && v6 < 0x10)
    v9 = 0;
  v136 = v9;
  sub_239A1903C(v121);
  DWORD2(v123) = 1;
  memset(v127, 0, sizeof(v127));
  v11 = v7 * (unint64_t)v6;
  if (v11)
  {
    sub_2394807B4((uint64_t)v127, v7 * (unint64_t)v6);
    v12 = 0;
    v13 = v127[0];
    if (v11 < 8 || (unint64_t)v127[0] - v8 < 0x20)
      goto LABEL_220;
    v14 = 0;
    v12 = v11 & 0xFFFFFFFFFFFFFFF8;
    v15 = v11 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v16 = *(_OWORD *)(v8 + v14 * 4 + 16);
      v17 = &v13[v14];
      *v17 = *(_OWORD *)(v8 + v14 * 4);
      v17[1] = v16;
      v14 += 8;
      v15 -= 8;
    }
    while (v15);
    while (v11 != v12)
    {
LABEL_220:
      v13[v12] = *(_DWORD *)(v8 + 4 * v12);
      ++v12;
    }
  }
  else
  {
    v13 = 0;
  }
  if (v127[1] == v13)
    sub_23941D884();
  *(_QWORD *)&v119 = v13;
  v122[1] = &v119;
  *(_QWORD *)&v123 = __PAIR64__(v7, v6);
  v135 = 1;
  v133 = malloc_type_malloc(0x110uLL, 0x1000040881B329AuLL);
  strncpy((char *)v133, "R", 0xFFuLL);
  *((_BYTE *)v133 + 1) = 0;
  v134 = malloc_type_malloc(4uLL, 0x100004052888210uLL);
  v113 = (char *)malloc_type_malloc(4uLL, 0x100004052888210uLL);
  v137 = v113;
  if (v135 >= 1)
  {
    v114 = 0;
    v115 = (char *)v134;
    do
    {
      v116 = 4 * v114;
      *(_DWORD *)&v115[v116] = 2;
      *(_DWORD *)&v113[v116] = 2;
      ++v114;
    }
    while (v114 < v135);
  }
  v118 = 0;
  if (a1[23] < 0)
    a1 = *(char **)a1;
  v117 = sub_239A1B880((int32x2_t *)v121, (std::string::size_type)v132, a1, &v118);
  v36 = v117 == 0;
  if (v117)
    sub_239A1BB94(v118);
  free(v133);
  free(v134);
  free(v137);
  if (v127[0])
  {
    v127[1] = v127[0];
    operator delete(v127[0]);
  }
  return v36;
}

void sub_2399456A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28)
{
  if (!__p)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2399456C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF08F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2399456D8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF08F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239945708(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    result = MEMORY[0x23B83E2F8](result, 0x1000C8077774924);
    *(_QWORD *)(a1 + 40) = 0;
  }
  return result;
}

uint64_t sub_239945748(uint64_t a1, float **a2, _QWORD *a3)
{
  uint64_t v6;
  __int128 v7;
  std::string::size_type v8;
  const std::locale::facet *v9;
  unsigned __int8 v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  float v24;
  float *v25;
  float *v26;
  float *v27;
  float *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  float *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  float *v39;
  _OWORD *v40;
  float *v41;
  uint64_t v42;
  __int128 v43;
  int v44;
  float v45;
  float *v46;
  float *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _BYTE *v53;
  float *v54;
  unint64_t v55;
  float *v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  float *v60;
  uint64_t v61;
  __int128 v62;
  int v63;
  float v64;
  float *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _BYTE *v71;
  float *v72;
  uint64_t v73;
  unint64_t v74;
  float *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  float *v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  _BYTE *v94;
  int *v95;
  unint64_t v96;
  char *v97;
  int v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  _OWORD *v102;
  char *v103;
  uint64_t v104;
  __int128 v105;
  std::runtime_error *exception;
  std::string *v108;
  __int128 v109;
  std::string *v110;
  __int128 v111;
  float **v112;
  std::string::size_type v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  std::string v120[3];
  void *__p;
  char v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127[2];
  uint64_t v128;
  void *v129[2];
  uint64_t v130;
  void *v131[2];
  uint64_t v132;
  double v133;
  double v134;
  double v135;
  std::string __dst;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  _BYTE v140[24];
  _QWORD v141[2];
  _BYTE v142[408];
  _QWORD v143[22];

  v143[19] = *MEMORY[0x24BDAC8D0];
  sub_2399464A4(v141);
  a2[1] = *a2;
  a3[1] = *a3;
  v6 = *(_QWORD *)(v141[0] - 24);
  if ((v142[v6 + 16] & 5) != 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    if (*(char *)(a1 + 23) < 0)
      sub_23941A7F8(&__dst, *(void **)a1, *(_QWORD *)(a1 + 8));
    else
      __dst = *(std::string *)a1;
    v108 = std::string::insert(&__dst, 0, "Unable to open OBJ file \"");
    v109 = *(_OWORD *)&v108->__r_.__value_.__l.__data_;
    *(_QWORD *)&v138 = *((_QWORD *)&v108->__r_.__value_.__l + 2);
    v137 = v109;
    v108->__r_.__value_.__l.__size_ = 0;
    v108->__r_.__value_.__r.__words[2] = 0;
    v108->__r_.__value_.__r.__words[0] = 0;
    v110 = std::string::append((std::string *)&v137, "\"!");
    v111 = *(_OWORD *)&v110->__r_.__value_.__l.__data_;
    v120[0].__r_.__value_.__r.__words[2] = v110->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v120[0].__r_.__value_.__l.__data_ = v111;
    v110->__r_.__value_.__l.__size_ = 0;
    v110->__r_.__value_.__r.__words[2] = 0;
    v110->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, v120);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  v135 = 0.0;
  memset(&__dst, 0, sizeof(__dst));
  v133 = 0.0;
  v134 = 0.0;
  v131[1] = 0;
  v132 = 0;
  v129[0] = 0;
  v129[1] = 0;
  v130 = 0;
  v131[0] = 0;
  v127[1] = 0;
  v128 = 0;
  v124 = 0;
  v125 = 0;
  *(_QWORD *)&v7 = -1;
  *((_QWORD *)&v7 + 1) = -1;
  v126 = 0;
  v127[0] = 0;
  *(_QWORD *)&v140[16] = -1;
  *(_OWORD *)v140 = v7;
  v139 = v7;
  v138 = v7;
  v137 = v7;
  v8 = *MEMORY[0x24BEDB7F8];
  v113 = *(_QWORD *)(MEMORY[0x24BEDB7F8] + 24);
  v114 = MEMORY[0x24BEDB848] + 16;
  v112 = a2;
  while (1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v141 + v6));
    v9 = std::locale::use_facet((const std::locale *)v120, MEMORY[0x24BEDB350]);
    v10 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v9->__vftable[2].~facet_0)(v9, 10);
    std::locale::~locale((std::locale *)v120);
    v11 = sub_23955D1B4(v141, (uint64_t)&__dst, v10);
    if ((*((_BYTE *)v11 + *(_QWORD *)(*v11 - 24) + 32) & 5) != 0)
      break;
    sub_23955C9D0((uint64_t)v120, (uint64_t)&__dst, 8);
    v117 = 0;
    v118 = 0;
    v119 = 0;
    sub_23955CC24((uint64_t *)v120, (uint64_t)&v117);
    if ((SHIBYTE(v119) & 0x80000000) == 0)
    {
      if (HIBYTE(v119) != 1)
      {
        if (HIBYTE(v119) != 2)
          goto LABEL_3;
        goto LABEL_94;
      }
      v13 = v117;
      if (v117 != 118)
        goto LABEL_19;
LABEL_31:
      v22 = MEMORY[0x23B83DCEC](v120, &v135);
      v23 = MEMORY[0x23B83DCEC](v22, &v134);
      MEMORY[0x23B83DCEC](v23, &v133);
      v24 = v135;
      v26 = a2[1];
      v25 = a2[2];
      if (v26 < v25)
      {
        *v26 = v24;
        v27 = v26 + 1;
        goto LABEL_50;
      }
      v28 = *a2;
      v29 = (char *)v26 - (char *)*a2;
      v30 = v29 >> 2;
      v31 = (v29 >> 2) + 1;
      if (v31 >> 62)
        sub_2394189F8();
      v32 = (char *)v25 - (char *)v28;
      if (v32 >> 1 > v31)
        v31 = v32 >> 1;
      if ((unint64_t)v32 >= 0x7FFFFFFFFFFFFFFCLL)
        v33 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v33 = v31;
      if (v33)
      {
        if (v33 >> 62)
          sub_239418A80();
        v34 = operator new(4 * v33);
        v35 = (float *)&v34[4 * v30];
        *v35 = v24;
        v27 = v35 + 1;
        if (v26 != v28)
        {
LABEL_42:
          v36 = (char *)(v26 - 1) - (char *)v28;
          a2 = v112;
          if (v36 < 0x2C)
            goto LABEL_157;
          if ((unint64_t)((char *)v26 - &v34[v29]) < 0x20)
            goto LABEL_157;
          v37 = (v36 >> 2) + 1;
          v38 = 4 * (v37 & 0x7FFFFFFFFFFFFFF8);
          v39 = &v26[v38 / 0xFFFFFFFFFFFFFFFCLL];
          v35 = (float *)((char *)v35 - v38);
          v40 = &v34[v29 - 16];
          v41 = v26 - 4;
          v42 = v37 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v43 = *(_OWORD *)v41;
            *(v40 - 1) = *((_OWORD *)v41 - 1);
            *v40 = v43;
            v40 -= 2;
            v41 -= 8;
            v42 -= 8;
          }
          while (v42);
          v26 = v39;
          if (v37 != (v37 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_157:
            do
            {
              v44 = *((_DWORD *)v26-- - 1);
              *((_DWORD *)v35-- - 1) = v44;
            }
            while (v26 != v28);
          }
          v25 = (float *)&v34[4 * v33];
          *v112 = v35;
          v112[1] = v27;
          v112[2] = v25;
          if (v28)
          {
LABEL_49:
            operator delete(v28);
            v25 = a2[2];
          }
LABEL_50:
          a2[1] = v27;
          v45 = v134;
          if (v27 < v25)
          {
            *v27 = v45;
            v46 = v27 + 1;
            goto LABEL_76;
          }
          v47 = *a2;
          v48 = (char *)v27 - (char *)*a2;
          v49 = v48 >> 2;
          v50 = (v48 >> 2) + 1;
          if (v50 >> 62)
            sub_2394189F8();
          v51 = (char *)v25 - (char *)v47;
          if (v51 >> 1 > v50)
            v50 = v51 >> 1;
          if ((unint64_t)v51 >= 0x7FFFFFFFFFFFFFFCLL)
            v52 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v52 = v50;
          if (v52)
          {
            if (v52 >> 62)
              sub_239418A80();
            v53 = operator new(4 * v52);
            v54 = (float *)&v53[4 * v49];
            *v54 = v45;
            v46 = v54 + 1;
            if (v27 == v47)
              goto LABEL_74;
LABEL_66:
            v55 = (char *)(v27 - 1) - (char *)v47;
            if (v55 < 0x2C)
            {
              v56 = v27;
              goto LABEL_73;
            }
            if ((unint64_t)((char *)v27 - v53 - v48) < 0x20)
            {
              v56 = v27;
              goto LABEL_73;
            }
            v57 = (v55 >> 2) + 1;
            v58 = 4 * (v57 & 0x7FFFFFFFFFFFFFF8);
            v56 = &v27[v58 / 0xFFFFFFFFFFFFFFFCLL];
            v54 = (float *)((char *)v54 - v58);
            v59 = &v53[v48 - 16];
            v60 = v27 - 4;
            v61 = v57 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v62 = *(_OWORD *)v60;
              *(v59 - 1) = *((_OWORD *)v60 - 1);
              *v59 = v62;
              v59 -= 2;
              v60 -= 8;
              v61 -= 8;
            }
            while (v61);
            if (v57 != (v57 & 0x7FFFFFFFFFFFFFF8))
            {
              do
              {
LABEL_73:
                v63 = *((_DWORD *)v56-- - 1);
                *((_DWORD *)v54-- - 1) = v63;
              }
              while (v56 != v47);
            }
          }
          else
          {
            v53 = 0;
            v54 = (float *)(4 * v49);
            *(float *)(4 * v49) = v45;
            v46 = (float *)(4 * v49 + 4);
            if (v27 != v47)
              goto LABEL_66;
          }
LABEL_74:
          v25 = (float *)&v53[4 * v52];
          *a2 = v54;
          a2[1] = v46;
          a2[2] = v25;
          if (v47)
          {
            operator delete(v47);
            v25 = a2[2];
          }
LABEL_76:
          a2[1] = v46;
          v64 = v133;
          if (v46 < v25)
          {
            *v46 = v64;
            a2[1] = v46 + 1;
            goto LABEL_94;
          }
          v65 = *a2;
          v66 = (char *)v46 - (char *)*a2;
          v67 = v66 >> 2;
          v68 = (v66 >> 2) + 1;
          if (v68 >> 62)
            sub_2394189F8();
          v69 = (char *)v25 - (char *)v65;
          if (v69 >> 1 > v68)
            v68 = v69 >> 1;
          if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFFCLL)
            v70 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v70 = v68;
          if (v70)
          {
            if (v70 >> 62)
              sub_239418A80();
            v71 = operator new(4 * v70);
            v72 = (float *)&v71[4 * v67];
            *v72 = v64;
            v73 = (uint64_t)(v72 + 1);
            if (v46 != v65)
            {
LABEL_87:
              v74 = (char *)(v46 - 1) - (char *)v65;
              if (v74 < 0x2C || (unint64_t)((char *)v46 - v71 - v66) < 0x20)
              {
                v75 = v46;
                a2 = v112;
                goto LABEL_90;
              }
              v77 = (v74 >> 2) + 1;
              v78 = 4 * (v77 & 0x7FFFFFFFFFFFFFF8);
              v75 = &v46[v78 / 0xFFFFFFFFFFFFFFFCLL];
              v72 = (float *)((char *)v72 - v78);
              v79 = &v71[v66 - 16];
              v80 = v46 - 4;
              v81 = v77 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                v82 = *(_OWORD *)v80;
                *(v79 - 1) = *((_OWORD *)v80 - 1);
                *v79 = v82;
                v79 -= 2;
                v80 -= 8;
                v81 -= 8;
              }
              while (v81);
              a2 = v112;
              if (v77 != (v77 & 0x7FFFFFFFFFFFFFF8))
              {
                do
                {
LABEL_90:
                  v76 = *((_DWORD *)v75-- - 1);
                  *((_DWORD *)v72-- - 1) = v76;
                }
                while (v75 != v65);
              }
              *a2 = v72;
              a2[1] = (float *)v73;
              a2[2] = (float *)&v71[4 * v70];
              if (v65)
LABEL_92:
                operator delete(v65);
LABEL_93:
              a2[1] = (float *)v73;
              goto LABEL_94;
            }
          }
          else
          {
            v71 = 0;
            v72 = (float *)(4 * v67);
            *(float *)(4 * v67) = v64;
            v73 = 4 * v67 + 4;
            if (v46 != v65)
              goto LABEL_87;
          }
          a2 = v112;
          *v112 = v72;
          v112[1] = (float *)v73;
          v112[2] = (float *)&v71[4 * v70];
          if (v65)
            goto LABEL_92;
          goto LABEL_93;
        }
      }
      else
      {
        v34 = 0;
        v35 = (float *)(4 * v30);
        *(float *)(4 * v30) = v24;
        v27 = (float *)(4 * v30 + 4);
        if (v26 != v28)
          goto LABEL_42;
      }
      a2 = v112;
      v25 = (float *)&v34[4 * v33];
      *v112 = v35;
      v112[1] = v27;
      v112[2] = v25;
      if (v28)
        goto LABEL_49;
      goto LABEL_50;
    }
    v12 = v118;
    if (v118 == 1 && *(_BYTE *)v117 == 118)
      goto LABEL_31;
    if (v118 == 2)
    {
      if (*(_WORD *)v117 == 29814 || *(_WORD *)v117 == 28278)
        goto LABEL_94;
      v12 = 2;
    }
    if (v12 == 1)
    {
      v13 = *(unsigned __int8 *)v117;
LABEL_19:
      if (v13 == 102)
      {
        v14 = sub_23955CC24((uint64_t *)v120, (uint64_t)v131);
        v15 = sub_23955CC24(v14, (uint64_t)v129);
        v16 = sub_23955CC24(v15, (uint64_t)v127);
        sub_23955CC24(v16, (uint64_t)&v124);
        sub_2399465C8((uint64_t)&v115, (uint64_t)v131);
        *(_QWORD *)&v137 = v115;
        DWORD2(v137) = v116;
        sub_2399465C8((uint64_t)&v115, (uint64_t)v129);
        *(_QWORD *)((unint64_t)&v137 | 0xC) = v115;
        *(_DWORD *)(((unint64_t)&v137 | 0xC) + 8) = v116;
        sub_2399465C8((uint64_t)&v115, (uint64_t)v127);
        *((_QWORD *)&v138 + 1) = v115;
        LODWORD(v139) = v116;
        v17 = v137;
        v18 = HIDWORD(v137);
        if ((_DWORD)v137 != HIDWORD(v137))
        {
          v19 = DWORD2(v138);
          if (HIDWORD(v137) != DWORD2(v138) && DWORD2(v138) != (_DWORD)v137)
          {
            v20 = HIBYTE(v126);
            if (v126 < 0)
              v20 = v125;
            if (!v20)
            {
              v21 = 3;
LABEL_104:
              v83 = 0;
              v84 = (char *)a3[1];
              while (2)
              {
                v86 = *((_DWORD *)&v137 + 3 * v83) - 1;
                v87 = a3[2];
                if ((unint64_t)v84 < v87)
                {
                  *(_DWORD *)v84 = v86;
                  v85 = v84 + 4;
                  goto LABEL_106;
                }
                v88 = (char *)*a3;
                v89 = (uint64_t)&v84[-*a3];
                v90 = v89 >> 2;
                v91 = (v89 >> 2) + 1;
                if (v91 >> 62)
                  sub_2394189F8();
                v92 = v87 - (_QWORD)v88;
                if (v92 >> 1 > v91)
                  v91 = v92 >> 1;
                if ((unint64_t)v92 >= 0x7FFFFFFFFFFFFFFCLL)
                  v93 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v93 = v91;
                if (v93)
                {
                  if (v93 >> 62)
                    sub_239418A80();
                  v94 = operator new(4 * v93);
                  v95 = (int *)&v94[4 * v90];
                  *v95 = v86;
                  v85 = (char *)(v95 + 1);
                  if (v84 != v88)
                  {
LABEL_117:
                    v96 = v84 - 4 - v88;
                    if (v96 < 0xBC
                      || &v94[v89 - 4 - (v96 & 0xFFFFFFFFFFFFFFFCLL)] > &v94[v89 - 4]
                      || &v84[-(v96 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v84 - 4
                      || (unint64_t)(v84 - &v94[v89]) < 0x20)
                    {
                      v97 = v84;
                    }
                    else
                    {
                      v100 = (v96 >> 2) + 1;
                      v101 = 4 * (v100 & 0x7FFFFFFFFFFFFFF8);
                      v97 = &v84[-v101];
                      v95 = (int *)((char *)v95 - v101);
                      v102 = &v94[v89 - 16];
                      v103 = v84 - 16;
                      v104 = v100 & 0x7FFFFFFFFFFFFFF8;
                      do
                      {
                        v105 = *(_OWORD *)v103;
                        *(v102 - 1) = *((_OWORD *)v103 - 1);
                        *v102 = v105;
                        v102 -= 2;
                        v103 -= 32;
                        v104 -= 8;
                      }
                      while (v104);
                      if (v100 == (v100 & 0x7FFFFFFFFFFFFFF8))
                      {
LABEL_120:
                        *a3 = v95;
                        a3[1] = v85;
                        a3[2] = &v94[4 * v93];
                        if (!v88)
                        {
LABEL_106:
                          a3[1] = v85;
                          ++v83;
                          v84 = v85;
                          a2 = v112;
                          if (v83 == v21)
                            goto LABEL_94;
                          continue;
                        }
LABEL_124:
                        operator delete(v88);
                        goto LABEL_106;
                      }
                    }
                    do
                    {
                      v98 = *((_DWORD *)v97 - 1);
                      v97 -= 4;
                      *--v95 = v98;
                    }
                    while (v97 != v88);
                    goto LABEL_120;
                  }
                }
                else
                {
                  v94 = 0;
                  v95 = (int *)(4 * v90);
                  v99 = (int *)(4 * v90);
                  *v99 = v86;
                  v85 = (char *)(v99 + 1);
                  if (v84 != v88)
                    goto LABEL_117;
                }
                break;
              }
              *a3 = v95;
              a3[1] = v85;
              a3[2] = &v94[4 * v93];
              if (!v88)
                goto LABEL_106;
              goto LABEL_124;
            }
            sub_2399465C8((uint64_t)&v115, (uint64_t)&v124);
            *(_QWORD *)((char *)&v139 + 4) = v115;
            HIDWORD(v139) = v116;
            if (v19 != (_DWORD)v115 && v17 != DWORD1(v139) && v18 != DWORD1(v139))
            {
              *(_QWORD *)v140 = v137;
              *(_DWORD *)&v140[8] = DWORD2(v137);
              *(_QWORD *)&v140[12] = *((_QWORD *)&v138 + 1);
              *(_DWORD *)&v140[20] = v139;
              MEMORY[0x23B83DBFC](&v124, "");
              v21 = 6;
              goto LABEL_104;
            }
          }
        }
      }
    }
LABEL_94:
    if (SHIBYTE(v119) < 0)
      operator delete(v117);
LABEL_3:
    v120[0].__r_.__value_.__r.__words[0] = v8;
    *(std::string::size_type *)((char *)v120[0].__r_.__value_.__r.__words + *(_QWORD *)(v8 - 24)) = v113;
    v120[0].__r_.__value_.__r.__words[2] = v114;
    if (v122 < 0)
      operator delete(__p);
    std::streambuf::~streambuf();
    std::istream::~istream();
    MEMORY[0x23B83E250](&v123);
    v6 = *(_QWORD *)(v141[0] - 24);
  }
  if (SHIBYTE(v126) < 0)
  {
    operator delete(v124);
    if (SHIBYTE(v128) < 0)
      goto LABEL_139;
LABEL_134:
    if ((SHIBYTE(v130) & 0x80000000) == 0)
      goto LABEL_135;
LABEL_140:
    operator delete(v129[0]);
    if (SHIBYTE(v132) < 0)
      goto LABEL_141;
LABEL_136:
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
LABEL_142:
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  else
  {
    if ((SHIBYTE(v128) & 0x80000000) == 0)
      goto LABEL_134;
LABEL_139:
    operator delete(v127[0]);
    if (SHIBYTE(v130) < 0)
      goto LABEL_140;
LABEL_135:
    if ((SHIBYTE(v132) & 0x80000000) == 0)
      goto LABEL_136;
LABEL_141:
    operator delete(v131[0]);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_142;
  }
  v141[0] = *MEMORY[0x24BEDB7E0];
  *(_QWORD *)((char *)v141 + *(_QWORD *)(v141[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 24);
  MEMORY[0x23B83DC8C](v142);
  std::istream::~istream();
  MEMORY[0x23B83E250](v143);
  return 1;
}

void sub_239946300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  void *v30;
  int v31;
  uint64_t v32;

  if (a30 < 0)
  {
    operator delete(__p);
    if (SLOBYTE(STACK[0x247]) < 0)
    {
LABEL_5:
      operator delete(*(void **)(v32 + 152));
      if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
        goto LABEL_6;
      goto LABEL_9;
    }
  }
  else if (SLOBYTE(STACK[0x247]) < 0)
  {
    goto LABEL_5;
  }
  if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
  {
LABEL_6:
    if (!v31)
    {
LABEL_11:
      sub_23955CB90(&STACK[0x278]);
      _Unwind_Resume(a1);
    }
LABEL_10:
    __cxa_free_exception(v30);
    sub_23955CB90(&STACK[0x278]);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(*(void **)(v32 + 120));
  if ((v31 & 1) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

_QWORD *sub_2399464A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;

  v2 = MEMORY[0x24BEDB838];
  v3 = MEMORY[0x24BEDB838] + 64;
  a1[53] = MEMORY[0x24BEDB838] + 64;
  v4 = a1 + 2;
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 16);
  *a1 = v5;
  *(_QWORD *)((char *)a1 + *(_QWORD *)(v5 - 24)) = v6;
  a1[1] = 0;
  v7 = (std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::ios_base::init(v7, a1 + 2);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *a1 = v2 + 24;
  a1[53] = v3;
  MEMORY[0x23B83DC80](v4);
  if (!std::filebuf::open())
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 4);
  return a1;
}

void sub_239946584(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x23B83E250](v1 + 424);
  _Unwind_Resume(a1);
}

uint64_t sub_2399465C8(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  _QWORD *v4;
  _OWORD *v5;
  std::string::size_type v6;
  char *v7;
  char *v8;
  unint64_t v9;
  std::runtime_error *exception;
  std::string *v12;
  __int128 v13;
  char *v14;
  void *v15;
  unint64_t v16;
  std::string __p;
  std::string v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;

  *(_QWORD *)a1 = -1;
  *(_DWORD *)(a1 + 8) = -1;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  sub_239593804((uint64_t)&v18, a2, 24);
  memset(&__p, 0, sizeof(__p));
  while (1)
  {
    v4 = sub_23955D1B4(&v18, (uint64_t)&__p, 0x2Fu);
    if ((*((_BYTE *)v4 + *(_QWORD *)(*v4 - 24) + 32) & 5) != 0)
      break;
    v5 = v15;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      if ((unint64_t)v15 >= v16)
        goto LABEL_10;
      sub_23941A7F8(v15, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
LABEL_2:
      v15 = (char *)v5 + 24;
    }
    else
    {
      if ((unint64_t)v15 < v16)
      {
        v3 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *((_QWORD *)v15 + 2) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
        *v5 = v3;
        goto LABEL_2;
      }
LABEL_10:
      v15 = sub_23959AE70(&v14, (uint64_t)&__p);
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v18.__r_.__value_.__r.__words[0] = *MEMORY[0x24BEDB7F0];
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(std::string::size_type *)((char *)v18.__r_.__value_.__r.__words + *(_QWORD *)(v18.__r_.__value_.__r.__words[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v18.__r_.__value_.__r.__words[2] = v6;
  v19 = MEMORY[0x24BEDB848] + 16;
  if (v21 < 0)
    operator delete(v20);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x23B83E250](&v22);
  if (v15 == v14 || 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)v15 - v14) >> 3) >= 4)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    v12 = std::string::append(&__p, "\"");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, &v18);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *(_DWORD *)a1 = sub_239955AB0(v14);
  v8 = v14;
  v7 = (char *)v15;
  v9 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)v15 - v14) >> 3);
  if (v9 < 2)
    goto LABEL_21;
  if (v14[47] < 0)
  {
    if (*((_QWORD *)v14 + 4))
      goto LABEL_32;
LABEL_20:
    if (v9 < 3)
      goto LABEL_21;
LABEL_33:
    if (v8[71] < 0)
    {
      if (!*((_QWORD *)v8 + 7))
      {
LABEL_23:
        if (v7 != v8)
        {
          do
          {
            if (*(v7 - 1) < 0)
              operator delete(*((void **)v7 - 3));
            v7 -= 24;
          }
          while (v7 != v8);
          v7 = v14;
        }
        v15 = v8;
        operator delete(v7);
        return a1;
      }
    }
    else if (!v8[71])
    {
      goto LABEL_23;
    }
    *(_DWORD *)(a1 + 8) = sub_239955AB0(v8 + 48);
    v8 = v14;
    if (v14)
      goto LABEL_22;
    return a1;
  }
  if (!v14[47])
    goto LABEL_20;
LABEL_32:
  *(_DWORD *)(a1 + 4) = sub_239955AB0(v14 + 24);
  v8 = v14;
  v7 = (char *)v15;
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)v15 - v14) >> 3) >= 3)
    goto LABEL_33;
LABEL_21:
  if (v8)
  {
LABEL_22:
    v7 = (char *)v15;
    goto LABEL_23;
  }
  return a1;
}

void sub_2399468AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, void **a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  int v37;
  void *v38;
  void **v40;
  void **v41;

  if (a23 < 0)
    operator delete(__p);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v37 & 1) == 0)
    {
LABEL_8:
      if (a9)
      {
        v40 = a10;
        v41 = a9;
        if (a10 != a9)
        {
          do
          {
            if (*((char *)v40 - 1) < 0)
              operator delete(*(v40 - 3));
            v40 -= 3;
          }
          while (v40 != a9);
          v41 = a9;
        }
        operator delete(v41);
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v37)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v38);
  goto LABEL_8;
}

uint64_t sub_239946A1C(uint64_t a1, uint64_t a2)
{
  int v3;
  int v4;
  uint64_t v5;
  void *v6;
  void *__p[2];
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  float *v13;
  float *v14;
  uint64_t v15;

  v13 = 0;
  v14 = 0;
  v15 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_23941A7F8(__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a1;
    v9 = *(_QWORD *)(a1 + 16);
  }
  v3 = sub_239945748((uint64_t)__p, &v13, &v10);
  v4 = v3;
  if ((SHIBYTE(v9) & 0x80000000) == 0)
  {
    if (v3)
      goto LABEL_6;
LABEL_9:
    v5 = 0;
    v6 = v10;
    if (!v10)
      goto LABEL_11;
    goto LABEL_10;
  }
  operator delete(__p[0]);
  if (!v4)
    goto LABEL_9;
LABEL_6:
  v5 = sub_239962D44(a2, &v13, (uint64_t *)&v10);
  v6 = v10;
  if (v10)
  {
LABEL_10:
    v11 = v6;
    operator delete(v6);
  }
LABEL_11:
  if (v13)
  {
    v14 = v13;
    operator delete(v13);
  }
  return v5;
}

void sub_239946AEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17)
{
  uint64_t v17;
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = *(void **)(v17 - 40);
    if (!v19)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v19 = *(void **)(v17 - 40);
    if (!v19)
      goto LABEL_3;
  }
  *(_QWORD *)(v17 - 32) = v19;
  operator delete(v19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239946B50(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  BOOL v4;
  uint64_t v6;
  _OWORD v8[15];
  _QWORD *v9;
  _QWORD v10[5];
  int v11;

  if (*a3)
    v4 = 0;
  else
    v4 = a3[1] == 0;
  if (v4 && a3[2] == 0)
    return sub_239946A1C(a1, a2);
  memset(v8, 0, sizeof(v8));
  v9 = v10;
  memset(v10, 0, sizeof(v10));
  v11 = 1;
  sub_239946C24(a1, (uint64_t)v8, a3, 0);
  v6 = sub_23994C324(a2, (uint64_t)v8, 0);
  sub_239955BE0((uint64_t)v8);
  return v6;
}

void sub_239946C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_239955BE0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_239946C24(uint64_t a1, uint64_t a2, _BYTE *a3, int a4)
{
  uint64_t v6;
  uint64_t i;
  char *v8;
  uint64_t v9;
  __int128 v10;
  _QWORD *v11;
  int v12;
  const std::locale::facet *v13;
  unsigned __int8 v14;
  _QWORD *v15;
  uint64_t v18;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  float v28;
  float *v29;
  float *v30;
  float *v31;
  int v32;
  int v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  std::string *v50;
  std::string::size_type v51;
  char v52;
  unint64_t v53;
  __int128 v54;
  float *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE *v61;
  float *v62;
  std::string::size_type v63;
  std::string *v64;
  std::string::size_type v65;
  char v66;
  unint64_t v67;
  __int128 v68;
  std::string::size_type size;
  int v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _BYTE *v77;
  _DWORD *v78;
  uint64_t *v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t j;
  _DWORD *v84;
  int v85;
  unint64_t v86;
  int *v87;
  _DWORD *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  _BYTE *v95;
  int *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  _OWORD *v101;
  int *v102;
  uint64_t v103;
  __int128 v104;
  int v105;
  int v106;
  int v107;
  unint64_t v108;
  char *v109;
  _DWORD *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  _BYTE *v117;
  _DWORD *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _OWORD *v123;
  char *v124;
  uint64_t v125;
  __int128 v126;
  int v127;
  int v128;
  int v129;
  unint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  _BYTE *v138;
  _DWORD *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  _OWORD *v144;
  char *v145;
  uint64_t v146;
  __int128 v147;
  int v148;
  int *v149;
  _DWORD *v150;
  _DWORD *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  _BYTE *v158;
  _DWORD *v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  float *v163;
  _OWORD *v164;
  float *v165;
  uint64_t v166;
  __int128 v167;
  int v168;
  float v169;
  float *v170;
  float *v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  _BYTE *v177;
  float *v178;
  unint64_t v179;
  float *v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  _OWORD *v185;
  char *v186;
  uint64_t v187;
  __int128 v188;
  int v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  unint64_t v196;
  _BYTE *v197;
  _DWORD *v198;
  unint64_t v199;
  char *v200;
  char *v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  _OWORD *v206;
  char *v207;
  uint64_t v208;
  __int128 v209;
  int v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  unint64_t v216;
  _BYTE *v217;
  _DWORD *v218;
  _DWORD *v219;
  _DWORD *v220;
  unint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  _OWORD *v226;
  float *v227;
  uint64_t v228;
  __int128 v229;
  int v230;
  float v231;
  uint64_t v232;
  float *v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  unint64_t v238;
  _BYTE *v239;
  float *v240;
  unint64_t v241;
  float *v242;
  uint64_t v243;
  uint64_t v244;
  _OWORD *v245;
  float *v246;
  uint64_t v247;
  __int128 v248;
  int v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  char *v254;
  uint64_t *v255;
  uint64_t *v256;
  std::string::size_type v257;
  std::string::size_type v258;
  std::string::size_type v259;
  float v260;
  float v261;
  unint64_t v262;
  float *v263;
  uint64_t v264;
  _BYTE *v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  unint64_t v270;
  _BYTE *v271;
  _DWORD *v272;
  uint64_t **v273;
  uint64_t *v274;
  uint64_t **v275;
  unsigned int v276;
  char *v277;
  _QWORD *v278;
  uint64_t *v279;
  uint64_t v280;
  uint64_t v281;
  _OWORD *v282;
  char *v283;
  uint64_t v284;
  __int128 v285;
  int v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  unint64_t v292;
  _BYTE *v293;
  _DWORD *v294;
  uint64_t v295;
  unint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  _OWORD *v300;
  char *v301;
  uint64_t v302;
  __int128 v303;
  int v304;
  unint64_t v305;
  char *v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  _OWORD *v312;
  __int128 *v313;
  uint64_t v314;
  __int128 v315;
  int v316;
  char *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  unint64_t v321;
  uint64_t v322;
  unint64_t v323;
  _BYTE *v324;
  _DWORD *v325;
  unint64_t v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  _OWORD *v330;
  char *v331;
  uint64_t v332;
  __int128 v333;
  int v334;
  float *v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  uint64_t v339;
  unint64_t v340;
  _BYTE *v341;
  float *v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  unint64_t v346;
  unint64_t v347;
  uint64_t v348;
  _BYTE *v349;
  _WORD *v350;
  uint64_t v351;
  uint64_t v352;
  _OWORD *v353;
  char *v354;
  uint64_t v355;
  __int128 v356;
  int v357;
  uint64_t v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  unint64_t v362;
  uint64_t v363;
  unint64_t v364;
  _BYTE *v365;
  _DWORD *v366;
  unint64_t v367;
  char *v368;
  uint64_t v369;
  uint64_t v370;
  _OWORD *v371;
  char *v372;
  uint64_t v373;
  __int128 v374;
  int v375;
  int v376;
  char v377;
  unsigned __int8 v378;
  uint64_t v379;
  _DWORD *v380;
  char v381;
  int v382;
  unint64_t v383;
  int *v384;
  _DWORD *v385;
  int *v386;
  uint64_t v387;
  uint64_t v388;
  unint64_t v389;
  uint64_t v390;
  unint64_t v391;
  _BYTE *v392;
  int *v393;
  unint64_t v394;
  uint64_t v395;
  uint64_t v396;
  int *v397;
  _OWORD *v398;
  int *v399;
  uint64_t v400;
  __int128 v401;
  int v402;
  int v403;
  int v404;
  unint64_t v405;
  char *v406;
  _DWORD *v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  unint64_t v411;
  uint64_t v412;
  unint64_t v413;
  _BYTE *v414;
  _DWORD *v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  _OWORD *v420;
  char *v421;
  uint64_t v422;
  __int128 v423;
  int v424;
  int v425;
  int v426;
  unint64_t v427;
  char *v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  unint64_t v432;
  uint64_t v433;
  unint64_t v434;
  _BYTE *v435;
  _DWORD *v436;
  unint64_t v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  _OWORD *v441;
  char *v442;
  uint64_t v443;
  __int128 v444;
  int v445;
  int *v446;
  _DWORD *v447;
  _DWORD *v448;
  unint64_t v449;
  _BYTE *v450;
  uint64_t v451;
  _BYTE *v452;
  unint64_t v453;
  unint64_t v454;
  unint64_t v455;
  size_t v456;
  char *v457;
  char *v458;
  unint64_t v459;
  uint64_t v460;
  uint64_t v461;
  float *v462;
  _OWORD *v463;
  float *v464;
  uint64_t v465;
  __int128 v466;
  int v467;
  float v468;
  float v469;
  unint64_t v470;
  float *v471;
  uint64_t v472;
  float *v473;
  uint64_t v474;
  uint64_t v475;
  unint64_t v476;
  uint64_t v477;
  unint64_t v478;
  _BYTE *v479;
  float *v480;
  unint64_t v481;
  uint64_t v482;
  uint64_t v483;
  float *v484;
  _OWORD *v485;
  float *v486;
  uint64_t v487;
  __int128 v488;
  int v489;
  float v490;
  float v491;
  unint64_t v492;
  float *v493;
  uint64_t v494;
  float *v495;
  uint64_t v496;
  uint64_t v497;
  unint64_t v498;
  uint64_t v499;
  unint64_t v500;
  _BYTE *v501;
  float *v502;
  unint64_t v503;
  uint64_t v504;
  uint64_t v505;
  float *v506;
  _OWORD *v507;
  float *v508;
  uint64_t v509;
  __int128 v510;
  int v511;
  unint64_t v512;
  uint64_t v513;
  unint64_t v514;
  char *v515;
  _OWORD *v516;
  char *v517;
  unint64_t v518;
  __int128 v519;
  __int16 v520;
  unint64_t v521;
  char *v522;
  __int128 *v523;
  unint64_t v524;
  __int128 v525;
  char *v526;
  uint64_t *v527;
  unint64_t v528;
  uint64_t v529;
  char *v530;
  char v531;
  unint64_t v532;
  char *v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  unint64_t v537;
  unint64_t v538;
  uint64_t v539;
  _BYTE *v540;
  _WORD *v541;
  uint64_t v542;
  unint64_t v543;
  uint64_t v544;
  unint64_t v545;
  char *v546;
  _OWORD *v547;
  char *v548;
  unint64_t v549;
  __int128 v550;
  __int16 v551;
  std::string *v552;
  std::string::size_type v553;
  char v554;
  unint64_t v555;
  __int128 v556;
  void *v557;
  uint64_t v558;
  BOOL v559;
  unint64_t v560;
  uint64_t v561;
  _QWORD *v562;
  uint64_t v563;
  std::runtime_error *exception;
  std::string *v566;
  __int128 v567;
  std::string *v568;
  __int128 v569;
  _QWORD *v570;
  _QWORD *v571;
  void **v572;
  void **v573;
  void **v575;
  void **v576;
  _QWORD **v577;
  char **v578;
  void **v579;
  void **v581;
  int v582;
  int __val;
  uint64_t v584;
  std::string::size_type v585;
  std::string::size_type v586;
  std::string v587;
  std::string v588;
  std::string v589[3];
  void *__p;
  char v591;
  uint64_t v592;
  char v593;
  int v594;
  void *v595;
  uint64_t v596;
  uint64_t v597;
  void *v598[2];
  uint64_t v599;
  void *v600[2];
  uint64_t v601;
  void *v602[2];
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  double v608;
  double v609;
  double v610;
  std::string v611;
  std::string __str;
  void *v613[2];
  uint64_t v614;
  std::string v615;
  __int128 v616;
  uint64_t v617;
  _BYTE v618[24];
  _BYTE *v619;
  __int128 v620;
  __int128 v621;
  __int128 v622;
  _BYTE v623[24];
  _BYTE v624[32];
  __int128 v625;
  void *v626[2];
  void *v627[2];
  __int128 v628;
  void *v629[2];
  void *v630[2];
  __int128 v631;
  _BYTE __dst[32];
  __int128 v633;
  _BYTE v634[24];
  _QWORD v635[2];
  _BYTE v636[408];
  _QWORD v637[22];

  v637[19] = *MEMORY[0x24BDAC8D0];
  sub_2399464A4(v635);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)a2;
  v572 = (void **)(a2 + 24);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a2 + 24);
  v579 = (void **)(a2 + 48);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a2 + 48);
  v576 = (void **)(a2 + 72);
  *(_QWORD *)(a2 + 80) = *(_QWORD *)(a2 + 72);
  v575 = (void **)(a2 + 96);
  *(_QWORD *)(a2 + 104) = *(_QWORD *)(a2 + 96);
  v571 = (_QWORD *)(a2 + 120);
  *(_QWORD *)(a2 + 128) = *(_QWORD *)(a2 + 120);
  v581 = (void **)(a2 + 168);
  *(_QWORD *)(a2 + 176) = *(_QWORD *)(a2 + 168);
  v573 = (void **)(a2 + 192);
  *(_QWORD *)(a2 + 200) = *(_QWORD *)(a2 + 192);
  v6 = *(_QWORD *)(a2 + 216);
  v578 = (char **)(a2 + 216);
  for (i = *(_QWORD *)(a2 + 224); i != v6; i -= 24)
  {
    if (*(char *)(i - 1) < 0)
      operator delete(*(void **)(i - 24));
  }
  v8 = *(char **)(a2 + 248);
  *(_QWORD *)(a2 + 224) = v6;
  v577 = (_QWORD **)(a2 + 240);
  sub_23958B6B4(a2 + 240, v8);
  *(_QWORD *)(a2 + 240) = a2 + 248;
  *(_QWORD *)(a2 + 248) = 0;
  *(_QWORD *)(a2 + 256) = 0;
  if (*(char *)(a2 + 287) < 0)
  {
    **(_BYTE **)(a2 + 264) = 0;
    *(_QWORD *)(a2 + 272) = 0;
  }
  else
  {
    *(_BYTE *)(a2 + 264) = 0;
    *(_BYTE *)(a2 + 287) = 0;
  }
  v9 = v635[0];
  if ((v636[*(_QWORD *)(v635[0] - 24) + 16] & 5) != 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_23941A7F8(__dst, *(void **)a1, *(_QWORD *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)a1;
      *(_QWORD *)&__dst[16] = *(_QWORD *)(a1 + 16);
    }
    v566 = std::string::insert((std::string *)__dst, 0, "Unable to open OBJ file \"");
    v567 = *(_OWORD *)&v566->__r_.__value_.__l.__data_;
    *(_QWORD *)&v624[16] = *((_QWORD *)&v566->__r_.__value_.__l + 2);
    *(_OWORD *)v624 = v567;
    v566->__r_.__value_.__l.__size_ = 0;
    v566->__r_.__value_.__r.__words[2] = 0;
    v566->__r_.__value_.__r.__words[0] = 0;
    v568 = std::string::append((std::string *)v624, "\"!");
    v569 = *(_OWORD *)&v568->__r_.__value_.__l.__data_;
    v589[0].__r_.__value_.__r.__words[2] = v568->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v589[0].__r_.__value_.__l.__data_ = v569;
    v568->__r_.__value_.__l.__size_ = 0;
    v568->__r_.__value_.__r.__words[2] = 0;
    v568->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, v589);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  v613[1] = 0;
  v613[0] = 0;
  v614 = 0;
  memset(&__str, 0, sizeof(__str));
  memset(&v611, 0, sizeof(v611));
  v610 = 0.0;
  v609 = 0.0;
  v608 = 0.0;
  v607 = 0;
  v606 = 0;
  v605 = 0;
  v604 = 0;
  v602[1] = 0;
  v602[0] = 0;
  v603 = 0;
  v600[1] = 0;
  v600[0] = 0;
  v601 = 0;
  v598[1] = 0;
  v598[0] = 0;
  v599 = 0;
  v596 = 0;
  v595 = 0;
  v597 = 0;
  *(_QWORD *)&v634[16] = -1;
  *(_QWORD *)&v10 = -1;
  *((_QWORD *)&v10 + 1) = -1;
  *(_OWORD *)v634 = v10;
  v633 = v10;
  *(_OWORD *)&__dst[16] = v10;
  *(_OWORD *)__dst = v10;
  v594 = 3;
  v631 = 0u;
  *(_OWORD *)v630 = 0u;
  *(_OWORD *)v629 = 0u;
  v628 = 0u;
  *(_OWORD *)v627 = 0u;
  *(_OWORD *)v626 = 0u;
  v625 = 0u;
  memset(v624, 0, sizeof(v624));
  *(_QWORD *)&v623[16] = -1;
  v622 = v10;
  *(_OWORD *)v623 = v10;
  v620 = v10;
  v621 = v10;
  v593 = 0;
  v11 = operator new(0x20uLL);
  v582 = 0;
  v12 = 0;
  *v11 = &off_250AF0930;
  v11[1] = a2;
  v11[2] = &v593;
  v11[3] = &v594;
  v619 = v11;
  v570 = (_QWORD *)(a2 + 144);
  v585 = *(_QWORD *)(MEMORY[0x24BEDB7F8] + 24);
  v586 = *MEMORY[0x24BEDB7F8];
  v584 = MEMORY[0x24BEDB848] + 16;
  __val = -1;
  while (1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v635 + *(_QWORD *)(v9 - 24)));
    v13 = std::locale::use_facet((const std::locale *)v589, MEMORY[0x24BEDB350]);
    v14 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v13->__vftable[2].~facet_0)(v13, 10);
    std::locale::~locale((std::locale *)v589);
    v15 = sub_23955D1B4(v635, (uint64_t)v613, v14);
    if ((*((_BYTE *)v15 + *(_QWORD *)(*v15 - 24) + 32) & 5) != 0)
      break;
    sub_23955C9D0((uint64_t)v589, (uint64_t)v613, 8);
    v616 = 0uLL;
    v617 = 0;
    sub_23955CC24((uint64_t *)v589, (uint64_t)&v616);
    if (SHIBYTE(v617) < 0)
    {
      v18 = *((_QWORD *)&v616 + 1);
      if (*((_QWORD *)&v616 + 1) == 1)
      {
        if (*(_BYTE *)v616 == 103)
          goto LABEL_65;
        v18 = *((_QWORD *)&v616 + 1);
      }
      else if (*((_QWORD *)&v616 + 1) == 6 && *(_DWORD *)v616 == 1819047021 && *(_WORD *)(v616 + 4) == 25193)
      {
LABEL_11:
        sub_23955CC24((uint64_t *)v589, a2 + 264);
        goto LABEL_12;
      }
      if (v18 == 6)
      {
        if (*(_DWORD *)v616 == 1835365237 && *(_WORD *)(v616 + 4) == 27764)
          goto LABEL_97;
        v18 = *((_QWORD *)&v616 + 1);
      }
      if (v18 == 1)
      {
        if (*(_BYTE *)v616 == 118)
          goto LABEL_63;
        v18 = *((_QWORD *)&v616 + 1);
      }
      if (v18 == 2)
      {
        if (*(_WORD *)v616 == 28278)
          goto LABEL_95;
        v18 = *((_QWORD *)&v616 + 1);
        if (*((_QWORD *)&v616 + 1) == 2)
        {
          if (*(_WORD *)v616 == 29814)
            goto LABEL_59;
          v18 = 2;
        }
      }
      if (v18 != 1)
        goto LABEL_12;
      v21 = *(unsigned __int8 *)v616;
    }
    else
    {
      if (HIBYTE(v617) != 1)
      {
        if (HIBYTE(v617) != 2)
        {
          if (HIBYTE(v617) != 6)
            goto LABEL_14;
          if ((_DWORD)v616 == 1819047021 && WORD2(v616) == 25193)
            goto LABEL_11;
          if ((_DWORD)v616 != 1835365237 || WORD2(v616) != 27764)
            goto LABEL_12;
LABEL_97:
          if (v582 == 1)
          {
LABEL_375:
            sub_23955CC24((uint64_t *)v589, (uint64_t)&v611);
            v273 = (uint64_t **)(a2 + 248);
            while (1)
            {
              v274 = *v273;
              v275 = v273;
              if (!*v273)
                break;
              while (1)
              {
                v273 = (uint64_t **)v274;
                v276 = *((unsigned __int16 *)v274 + 16);
                if (v276 > (unsigned __int16)__val)
                  break;
                if (v276 >= (unsigned __int16)__val)
                {
                  v277 = (char *)v273;
                  goto LABEL_385;
                }
                v274 = v273[1];
                if (!v274)
                {
                  v275 = v273 + 1;
                  goto LABEL_381;
                }
              }
            }
LABEL_381:
            v277 = (char *)operator new(0x40uLL);
            *((_WORD *)v277 + 16) = __val;
            *((_QWORD *)v277 + 6) = 0;
            *((_QWORD *)v277 + 7) = 0;
            *((_QWORD *)v277 + 5) = 0;
            *(_QWORD *)v277 = 0;
            *((_QWORD *)v277 + 1) = 0;
            *((_QWORD *)v277 + 2) = v273;
            *v275 = (uint64_t *)v277;
            v278 = (_QWORD *)**v577;
            v279 = (uint64_t *)v277;
            if (v278)
            {
              *v577 = v278;
              v279 = *v275;
            }
            sub_2394213B8(*(uint64_t **)(a2 + 248), v279);
            ++*(_QWORD *)(a2 + 256);
LABEL_385:
            std::string::operator=((std::string *)(v277 + 40), &v611);
            goto LABEL_12;
          }
          std::to_string(&v588, ++__val);
          v50 = std::string::insert(&v588, 0, "group_");
          v51 = v50->__r_.__value_.__r.__words[0];
          v615.__r_.__value_.__r.__words[0] = v50->__r_.__value_.__l.__size_;
          *(std::string::size_type *)((char *)v615.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v50->__r_.__value_.__r.__words[1] + 7);
          v52 = HIBYTE(v50->__r_.__value_.__r.__words[2]);
          v50->__r_.__value_.__l.__size_ = 0;
          v50->__r_.__value_.__r.__words[2] = 0;
          v50->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__str.__r_.__value_.__l.__data_);
          __str.__r_.__value_.__r.__words[0] = v51;
          __str.__r_.__value_.__l.__size_ = v615.__r_.__value_.__r.__words[0];
          *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v615.__r_.__value_.__r.__words + 7);
          *((_BYTE *)&__str.__r_.__value_.__s + 23) = v52;
          if (SHIBYTE(v588.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v588.__r_.__value_.__l.__data_);
            v53 = *(_QWORD *)(a2 + 224);
            if (v53 < *(_QWORD *)(a2 + 232))
              goto LABEL_102;
          }
          else
          {
            v53 = *(_QWORD *)(a2 + 224);
            if (v53 < *(_QWORD *)(a2 + 232))
            {
LABEL_102:
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
              {
                sub_23941A7F8((_BYTE *)v53, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
              }
              else
              {
                v54 = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
                *(_QWORD *)(v53 + 16) = *((_QWORD *)&__str.__r_.__value_.__l + 2);
                *(_OWORD *)v53 = v54;
              }
              v201 = (char *)(v53 + 24);
              *(_QWORD *)(a2 + 224) = v53 + 24;
              goto LABEL_374;
            }
          }
          v201 = sub_23959AE70(v578, (uint64_t)&__str);
LABEL_374:
          *(_QWORD *)(a2 + 224) = v201;
          goto LABEL_375;
        }
        if ((unsigned __int16)v616 != 28278)
        {
          if ((unsigned __int16)v616 != 29814)
            goto LABEL_12;
LABEL_59:
          v22 = MEMORY[0x23B83DCF8](v589, (char *)&v604 + 4);
          MEMORY[0x23B83DCF8](v22, &v604);
          v24 = *(char **)(a2 + 200);
          v23 = *(char **)(a2 + 208);
          if (v24 < v23)
          {
            *(_DWORD *)v24 = HIDWORD(v604);
            v25 = v24 + 4;
            goto LABEL_296;
          }
          v152 = (char *)*v573;
          v153 = v24 - (_BYTE *)*v573;
          v154 = v153 >> 2;
          v155 = (v153 >> 2) + 1;
          if (v155 >> 62)
            goto LABEL_773;
          v156 = v23 - v152;
          if (v156 >> 1 > v155)
            v155 = v156 >> 1;
          if ((unint64_t)v156 >= 0x7FFFFFFFFFFFFFFCLL)
            v157 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v157 = v155;
          if (v157)
          {
            if (v157 >> 62)
              goto LABEL_774;
            v158 = operator new(4 * v157);
            v159 = &v158[4 * v154];
            *v159 = HIDWORD(v604);
            v25 = (char *)(v159 + 1);
            if (v24 == v152)
              goto LABEL_294;
          }
          else
          {
            v158 = 0;
            v159 = (_DWORD *)(4 * v154);
            *(_DWORD *)(4 * v154) = HIDWORD(v604);
            v25 = (char *)(4 * v154 + 4);
            if (v24 == v152)
            {
LABEL_294:
              v23 = &v158[4 * v157];
              *(_QWORD *)(a2 + 192) = v159;
              *(_QWORD *)(a2 + 200) = v25;
              *(_QWORD *)(a2 + 208) = v23;
              if (v152)
              {
                operator delete(v152);
                v23 = *(char **)(a2 + 208);
              }
LABEL_296:
              *(_QWORD *)(a2 + 200) = v25;
              if (v25 < v23)
              {
                *(_DWORD *)v25 = v604;
                *(_QWORD *)(a2 + 200) = v25 + 4;
                goto LABEL_12;
              }
              v211 = (char *)*v573;
              v212 = v25 - (_BYTE *)*v573;
              v213 = v212 >> 2;
              v214 = (v212 >> 2) + 1;
              if (!(v214 >> 62))
              {
                v215 = v23 - v211;
                if (v215 >> 1 > v214)
                  v214 = v215 >> 1;
                if ((unint64_t)v215 >= 0x7FFFFFFFFFFFFFFCLL)
                  v216 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v216 = v214;
                if (!v216)
                {
                  v217 = 0;
                  v218 = (_DWORD *)(4 * v213);
                  v220 = (_DWORD *)(4 * v213);
                  *v220 = v604;
                  v219 = v220 + 1;
                  if (v25 == v211)
                    goto LABEL_459;
                  goto LABEL_309;
                }
                if (!(v216 >> 62))
                {
                  v217 = operator new(4 * v216);
                  v218 = &v217[4 * v213];
                  *v218 = v604;
                  v219 = v218 + 1;
                  if (v25 == v211)
                    goto LABEL_459;
LABEL_309:
                  v221 = v25 - 4 - v211;
                  if (v221 >= 0x2C)
                  {
                    if ((unint64_t)(v25 - v217 - v212) >= 0x20)
                    {
                      v328 = (v221 >> 2) + 1;
                      v329 = 4 * (v328 & 0x7FFFFFFFFFFFFFF8);
                      v222 = &v25[-v329];
                      v218 = (_DWORD *)((char *)v218 - v329);
                      v330 = &v217[v212 - 16];
                      v331 = v25 - 16;
                      v332 = v328 & 0x7FFFFFFFFFFFFFF8;
                      do
                      {
                        v333 = *(_OWORD *)v331;
                        *(v330 - 1) = *((_OWORD *)v331 - 1);
                        *v330 = v333;
                        v330 -= 2;
                        v331 -= 32;
                        v332 -= 8;
                      }
                      while (v332);
                      if (v328 == (v328 & 0x7FFFFFFFFFFFFFF8))
                        goto LABEL_459;
                    }
                    else
                    {
                      v222 = v25;
                    }
                  }
                  else
                  {
                    v222 = v25;
                  }
                  do
                  {
                    v334 = *((_DWORD *)v222 - 1);
                    v222 -= 4;
                    *--v218 = v334;
                  }
                  while (v222 != v211);
LABEL_459:
                  *(_QWORD *)(a2 + 192) = v218;
                  *(_QWORD *)(a2 + 200) = v219;
                  *(_QWORD *)(a2 + 208) = &v217[4 * v216];
                  if (v211)
                    operator delete(v211);
                  *(_QWORD *)(a2 + 200) = v219;
                  goto LABEL_12;
                }
LABEL_774:
                sub_239418A80();
              }
LABEL_773:
              sub_2394189F8();
            }
          }
          v202 = v24 - 4 - v152;
          if (v202 < 0x2C)
            goto LABEL_813;
          if ((unint64_t)(v24 - &v158[v153]) < 0x20)
            goto LABEL_813;
          v203 = (v202 >> 2) + 1;
          v204 = 4 * (v203 & 0x7FFFFFFFFFFFFFF8);
          v205 = &v24[-v204];
          v159 = (_DWORD *)((char *)v159 - v204);
          v206 = &v158[v153 - 16];
          v207 = v24 - 16;
          v208 = v203 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v209 = *(_OWORD *)v207;
            *(v206 - 1) = *((_OWORD *)v207 - 1);
            *v206 = v209;
            v206 -= 2;
            v207 -= 32;
            v208 -= 8;
          }
          while (v208);
          v24 = v205;
          if (v203 != (v203 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_813:
            do
            {
              v210 = *((_DWORD *)v24 - 1);
              v24 -= 4;
              *--v159 = v210;
            }
            while (v24 != v152);
          }
          goto LABEL_294;
        }
LABEL_95:
        v45 = MEMORY[0x23B83DCF8](v589, &v606);
        v46 = MEMORY[0x23B83DCF8](v45, (char *)&v605 + 4);
        MEMORY[0x23B83DCF8](v46, &v605);
        v48 = *(char **)(a2 + 176);
        v47 = *(char **)(a2 + 184);
        if (v48 < v47)
        {
          *(_DWORD *)v48 = v606;
          v49 = v48 + 4;
          goto LABEL_266;
        }
        v71 = (char *)*v581;
        v72 = v48 - (_BYTE *)*v581;
        v73 = v72 >> 2;
        v74 = (v72 >> 2) + 1;
        if (v74 >> 62)
          goto LABEL_773;
        v75 = v47 - v71;
        if (v75 >> 1 > v74)
          v74 = v75 >> 1;
        if ((unint64_t)v75 >= 0x7FFFFFFFFFFFFFFCLL)
          v76 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v76 = v74;
        if (v76)
        {
          if (v76 >> 62)
            goto LABEL_774;
          v77 = operator new(4 * v76);
          v78 = &v77[4 * v73];
          *v78 = v606;
          v49 = (char *)(v78 + 1);
          if (v48 == v71)
            goto LABEL_264;
        }
        else
        {
          v77 = 0;
          v78 = (_DWORD *)(4 * v73);
          *(_DWORD *)(4 * v73) = v606;
          v49 = (char *)(4 * v73 + 4);
          if (v48 == v71)
          {
LABEL_264:
            v47 = &v77[4 * v76];
            *(_QWORD *)(a2 + 168) = v78;
            *(_QWORD *)(a2 + 176) = v49;
            *(_QWORD *)(a2 + 184) = v47;
            if (v71)
            {
              operator delete(v71);
              v47 = *(char **)(a2 + 184);
            }
LABEL_266:
            *(_QWORD *)(a2 + 176) = v49;
            if (v49 < v47)
            {
              *(_DWORD *)v49 = HIDWORD(v605);
              v190 = v49 + 4;
              goto LABEL_394;
            }
            v191 = (char *)*v581;
            v192 = v49 - (_BYTE *)*v581;
            v193 = v192 >> 2;
            v194 = (v192 >> 2) + 1;
            if (v194 >> 62)
              goto LABEL_773;
            v195 = v47 - v191;
            if (v195 >> 1 > v194)
              v194 = v195 >> 1;
            if ((unint64_t)v195 >= 0x7FFFFFFFFFFFFFFCLL)
              v196 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v196 = v194;
            if (v196)
            {
              if (v196 >> 62)
                goto LABEL_774;
              v197 = operator new(4 * v196);
              v198 = &v197[4 * v193];
              *v198 = HIDWORD(v605);
              v190 = (char *)(v198 + 1);
              if (v49 == v191)
                goto LABEL_392;
            }
            else
            {
              v197 = 0;
              v198 = (_DWORD *)(4 * v193);
              *(_DWORD *)(4 * v193) = HIDWORD(v605);
              v190 = (char *)(4 * v193 + 4);
              if (v49 == v191)
                goto LABEL_392;
            }
            v199 = v49 - 4 - v191;
            if (v199 >= 0x2C)
            {
              if ((unint64_t)(v49 - v197 - v192) >= 0x20)
              {
                v280 = (v199 >> 2) + 1;
                v281 = 4 * (v280 & 0x7FFFFFFFFFFFFFF8);
                v200 = &v49[-v281];
                v198 = (_DWORD *)((char *)v198 - v281);
                v282 = &v197[v192 - 16];
                v283 = v49 - 16;
                v284 = v280 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v285 = *(_OWORD *)v283;
                  *(v282 - 1) = *((_OWORD *)v283 - 1);
                  *v282 = v285;
                  v282 -= 2;
                  v283 -= 32;
                  v284 -= 8;
                }
                while (v284);
                if (v280 == (v280 & 0x7FFFFFFFFFFFFFF8))
                {
LABEL_392:
                  v47 = &v197[4 * v196];
                  *(_QWORD *)(a2 + 168) = v198;
                  *(_QWORD *)(a2 + 176) = v190;
                  *(_QWORD *)(a2 + 184) = v47;
                  if (v191)
                  {
                    operator delete(v191);
                    v47 = *(char **)(a2 + 184);
                  }
LABEL_394:
                  *(_QWORD *)(a2 + 176) = v190;
                  if (v190 < v47)
                  {
                    *(_DWORD *)v190 = v605;
                    *(_QWORD *)(a2 + 176) = v190 + 4;
                    goto LABEL_12;
                  }
                  v287 = (char *)*v581;
                  v288 = v190 - (_BYTE *)*v581;
                  v289 = v288 >> 2;
                  v290 = (v288 >> 2) + 1;
                  if (v290 >> 62)
                    goto LABEL_773;
                  v291 = v47 - v287;
                  if (v291 >> 1 > v290)
                    v290 = v291 >> 1;
                  if ((unint64_t)v291 >= 0x7FFFFFFFFFFFFFFCLL)
                    v292 = 0x3FFFFFFFFFFFFFFFLL;
                  else
                    v292 = v290;
                  if (v292)
                  {
                    if (v292 >> 62)
                      goto LABEL_774;
                    v293 = operator new(4 * v292);
                    v294 = &v293[4 * v289];
                    *v294 = v605;
                    v295 = (uint64_t)(v294 + 1);
                    if (v190 == v287)
                      goto LABEL_415;
                  }
                  else
                  {
                    v293 = 0;
                    v294 = (_DWORD *)(4 * v289);
                    *(_DWORD *)(4 * v289) = v605;
                    v295 = 4 * v289 + 4;
                    if (v190 == v287)
                      goto LABEL_415;
                  }
                  v296 = v190 - 4 - v287;
                  if (v296 >= 0x2C)
                  {
                    if ((unint64_t)(v190 - v293 - v288) >= 0x20)
                    {
                      v298 = (v296 >> 2) + 1;
                      v299 = 4 * (v298 & 0x7FFFFFFFFFFFFFF8);
                      v297 = &v190[-v299];
                      v294 = (_DWORD *)((char *)v294 - v299);
                      v300 = &v293[v288 - 16];
                      v301 = v190 - 16;
                      v302 = v298 & 0x7FFFFFFFFFFFFFF8;
                      do
                      {
                        v303 = *(_OWORD *)v301;
                        *(v300 - 1) = *((_OWORD *)v301 - 1);
                        *v300 = v303;
                        v300 -= 2;
                        v301 -= 32;
                        v302 -= 8;
                      }
                      while (v302);
                      if (v298 == (v298 & 0x7FFFFFFFFFFFFFF8))
                        goto LABEL_415;
                    }
                    else
                    {
                      v297 = v190;
                    }
                  }
                  else
                  {
                    v297 = v190;
                  }
                  do
                  {
                    v304 = *((_DWORD *)v297 - 1);
                    v297 -= 4;
                    *--v294 = v304;
                  }
                  while (v297 != v287);
LABEL_415:
                  *(_QWORD *)(a2 + 168) = v294;
                  *(_QWORD *)(a2 + 176) = v295;
                  *(_QWORD *)(a2 + 184) = &v293[4 * v292];
                  if (v287)
                    operator delete(v287);
                  *(_QWORD *)(a2 + 176) = v295;
                  goto LABEL_12;
                }
              }
              else
              {
                v200 = v49;
              }
            }
            else
            {
              v200 = v49;
            }
            do
            {
              v286 = *((_DWORD *)v200 - 1);
              v200 -= 4;
              *--v198 = v286;
            }
            while (v200 != v191);
            goto LABEL_392;
          }
        }
        v181 = v48 - 4 - v71;
        if (v181 < 0x2C)
          goto LABEL_814;
        if ((unint64_t)(v48 - &v77[v72]) < 0x20)
          goto LABEL_814;
        v182 = (v181 >> 2) + 1;
        v183 = 4 * (v182 & 0x7FFFFFFFFFFFFFF8);
        v184 = &v48[-v183];
        v78 = (_DWORD *)((char *)v78 - v183);
        v185 = &v77[v72 - 16];
        v186 = v48 - 16;
        v187 = v182 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v188 = *(_OWORD *)v186;
          *(v185 - 1) = *((_OWORD *)v186 - 1);
          *v185 = v188;
          v185 -= 2;
          v186 -= 32;
          v187 -= 8;
        }
        while (v187);
        v48 = v184;
        if (v182 != (v182 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_814:
          do
          {
            v189 = *((_DWORD *)v48 - 1);
            v48 -= 4;
            *--v78 = v189;
          }
          while (v48 != v71);
        }
        goto LABEL_264;
      }
      v21 = v616;
      if (v616 == 103)
      {
LABEL_65:
        if (__val == -1)
          v32 = 1;
        else
          v32 = 3;
        if (v582)
          v33 = v582;
        else
          v33 = v32;
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        {
          *__str.__r_.__value_.__l.__data_ = 0;
          __str.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          __str.__r_.__value_.__s.__data_[0] = 0;
          *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
        }
        sub_23955CC24((uint64_t *)v589, (uint64_t)&__str);
        if (v33 == 3)
        {
          size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            size = __str.__r_.__value_.__l.__size_;
          if (size)
            std::string::operator=((std::string *)&(*v578)[24 * __val], &__str);
          v70 = 3;
        }
        else
        {
          v63 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v63 = __str.__r_.__value_.__l.__size_;
          if (v63)
            goto LABEL_122;
          std::to_string(&v588, __val);
          v64 = std::string::insert(&v588, 0, "group_");
          v65 = v64->__r_.__value_.__r.__words[0];
          v615.__r_.__value_.__r.__words[0] = v64->__r_.__value_.__l.__size_;
          *(std::string::size_type *)((char *)v615.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v64->__r_.__value_.__r.__words[1] + 7);
          v66 = HIBYTE(v64->__r_.__value_.__r.__words[2]);
          v64->__r_.__value_.__l.__size_ = 0;
          v64->__r_.__value_.__r.__words[2] = 0;
          v64->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__str.__r_.__value_.__l.__data_);
          __str.__r_.__value_.__r.__words[0] = v65;
          __str.__r_.__value_.__l.__size_ = v615.__r_.__value_.__r.__words[0];
          *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v615.__r_.__value_.__r.__words + 7);
          *((_BYTE *)&__str.__r_.__value_.__s + 23) = v66;
          if (SHIBYTE(v588.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v588.__r_.__value_.__l.__data_);
            v67 = *(_QWORD *)(a2 + 224);
            if (v67 >= *(_QWORD *)(a2 + 232))
              goto LABEL_420;
LABEL_123:
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            {
              sub_23941A7F8((_BYTE *)v67, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
            }
            else
            {
              v68 = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
              *(_QWORD *)(v67 + 16) = *((_QWORD *)&__str.__r_.__value_.__l + 2);
              *(_OWORD *)v67 = v68;
            }
            v223 = (char *)(v67 + 24);
            *(_QWORD *)(a2 + 224) = v67 + 24;
          }
          else
          {
LABEL_122:
            v67 = *(_QWORD *)(a2 + 224);
            if (v67 < *(_QWORD *)(a2 + 232))
              goto LABEL_123;
LABEL_420:
            v223 = sub_23959AE70(v578, (uint64_t)&__str);
          }
          ++__val;
          *(_QWORD *)(a2 + 224) = v223;
          v70 = 1;
        }
        v582 = v70;
        goto LABEL_12;
      }
      if (v616 == 118)
      {
LABEL_63:
        v26 = MEMORY[0x23B83DCEC](v589, &v610);
        v27 = MEMORY[0x23B83DCEC](v26, &v609);
        MEMORY[0x23B83DCEC](v27, &v608);
        v28 = v610;
        v30 = *(float **)(a2 + 8);
        v29 = *(float **)(a2 + 16);
        if (v30 < v29)
        {
          *v30 = v28;
          v31 = v30 + 1;
          goto LABEL_242;
        }
        v55 = *(float **)a2;
        v56 = (uint64_t)v30 - *(_QWORD *)a2;
        v57 = v56 >> 2;
        v58 = (v56 >> 2) + 1;
        if (v58 >> 62)
          sub_2394189F8();
        v59 = (char *)v29 - (char *)v55;
        if (v59 >> 1 > v58)
          v58 = v59 >> 1;
        if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFFCLL)
          v60 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v60 = v58;
        if (v60)
        {
          if (v60 >> 62)
            sub_239418A80();
          v61 = operator new(4 * v60);
          v62 = (float *)&v61[4 * v57];
          *v62 = v28;
          v31 = v62 + 1;
          if (v30 == v55)
            goto LABEL_240;
LABEL_234:
          v160 = (char *)(v30 - 1) - (char *)v55;
          if (v160 < 0x2C)
            goto LABEL_815;
          if ((unint64_t)((char *)v30 - &v61[v56]) < 0x20)
            goto LABEL_815;
          v161 = (v160 >> 2) + 1;
          v162 = 4 * (v161 & 0x7FFFFFFFFFFFFFF8);
          v163 = &v30[v162 / 0xFFFFFFFFFFFFFFFCLL];
          v62 = (float *)((char *)v62 - v162);
          v164 = &v61[v56 - 16];
          v165 = v30 - 4;
          v166 = v161 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v167 = *(_OWORD *)v165;
            *(v164 - 1) = *((_OWORD *)v165 - 1);
            *v164 = v167;
            v164 -= 2;
            v165 -= 8;
            v166 -= 8;
          }
          while (v166);
          v30 = v163;
          if (v161 != (v161 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_815:
            do
            {
              v168 = *((_DWORD *)v30-- - 1);
              *((_DWORD *)v62-- - 1) = v168;
            }
            while (v30 != v55);
          }
        }
        else
        {
          v61 = 0;
          v62 = (float *)(4 * v57);
          *(float *)(4 * v57) = v28;
          v31 = (float *)(4 * v57 + 4);
          if (v30 != v55)
            goto LABEL_234;
        }
LABEL_240:
        v29 = (float *)&v61[4 * v60];
        *(_QWORD *)a2 = v62;
        *(_QWORD *)(a2 + 8) = v31;
        *(_QWORD *)(a2 + 16) = v29;
        if (v55)
        {
          operator delete(v55);
          v29 = *(float **)(a2 + 16);
        }
LABEL_242:
        *(_QWORD *)(a2 + 8) = v31;
        v169 = v609;
        if (v31 < v29)
        {
          *v31 = v169;
          v170 = v31 + 1;
          goto LABEL_319;
        }
        v171 = *(float **)a2;
        v172 = (uint64_t)v31 - *(_QWORD *)a2;
        v173 = v172 >> 2;
        v174 = (v172 >> 2) + 1;
        if (v174 >> 62)
          sub_2394189F8();
        v175 = (char *)v29 - (char *)v171;
        if (v175 >> 1 > v174)
          v174 = v175 >> 1;
        if ((unint64_t)v175 >= 0x7FFFFFFFFFFFFFFCLL)
          v176 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v176 = v174;
        if (v176)
        {
          if (v176 >> 62)
            sub_239418A80();
          v177 = operator new(4 * v176);
          v178 = (float *)&v177[4 * v173];
          *v178 = v169;
          v170 = v178 + 1;
          if (v31 == v171)
            goto LABEL_317;
LABEL_255:
          v179 = (char *)(v31 - 1) - (char *)v171;
          if (v179 < 0x2C)
          {
            v180 = v31;
            goto LABEL_316;
          }
          if ((unint64_t)((char *)v31 - v177 - v172) < 0x20)
          {
            v180 = v31;
            goto LABEL_316;
          }
          v224 = (v179 >> 2) + 1;
          v225 = 4 * (v224 & 0x7FFFFFFFFFFFFFF8);
          v180 = &v31[v225 / 0xFFFFFFFFFFFFFFFCLL];
          v178 = (float *)((char *)v178 - v225);
          v226 = &v177[v172 - 16];
          v227 = v31 - 4;
          v228 = v224 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v229 = *(_OWORD *)v227;
            *(v226 - 1) = *((_OWORD *)v227 - 1);
            *v226 = v229;
            v226 -= 2;
            v227 -= 8;
            v228 -= 8;
          }
          while (v228);
          if (v224 != (v224 & 0x7FFFFFFFFFFFFFF8))
          {
            do
            {
LABEL_316:
              v230 = *((_DWORD *)v180-- - 1);
              *((_DWORD *)v178-- - 1) = v230;
            }
            while (v180 != v171);
          }
        }
        else
        {
          v177 = 0;
          v178 = (float *)(4 * v173);
          *(float *)(4 * v173) = v169;
          v170 = (float *)(4 * v173 + 4);
          if (v31 != v171)
            goto LABEL_255;
        }
LABEL_317:
        v29 = (float *)&v177[4 * v176];
        *(_QWORD *)a2 = v178;
        *(_QWORD *)(a2 + 8) = v170;
        *(_QWORD *)(a2 + 16) = v29;
        if (v171)
        {
          operator delete(v171);
          v29 = *(float **)(a2 + 16);
        }
LABEL_319:
        *(_QWORD *)(a2 + 8) = v170;
        v231 = v608;
        if (v170 < v29)
        {
          *v170 = v231;
          v232 = (uint64_t)(v170 + 1);
          goto LABEL_342;
        }
        v233 = *(float **)a2;
        v234 = (uint64_t)v170 - *(_QWORD *)a2;
        v235 = v234 >> 2;
        v236 = (v234 >> 2) + 1;
        if (v236 >> 62)
          sub_2394189F8();
        v237 = (char *)v29 - (char *)v233;
        if (v237 >> 1 > v236)
          v236 = v237 >> 1;
        if ((unint64_t)v237 >= 0x7FFFFFFFFFFFFFFCLL)
          v238 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v238 = v236;
        if (v238)
        {
          if (v238 >> 62)
            sub_239418A80();
          v239 = operator new(4 * v238);
          v240 = (float *)&v239[4 * v235];
          *v240 = v231;
          v232 = (uint64_t)(v240 + 1);
          if (v170 == v233)
            goto LABEL_340;
LABEL_332:
          v241 = (char *)(v170 - 1) - (char *)v233;
          if (v241 < 0x2C)
          {
            v242 = v170;
            goto LABEL_339;
          }
          if ((unint64_t)((char *)v170 - v239 - v234) < 0x20)
          {
            v242 = v170;
            goto LABEL_339;
          }
          v243 = (v241 >> 2) + 1;
          v244 = 4 * (v243 & 0x7FFFFFFFFFFFFFF8);
          v242 = &v170[v244 / 0xFFFFFFFFFFFFFFFCLL];
          v240 = (float *)((char *)v240 - v244);
          v245 = &v239[v234 - 16];
          v246 = v170 - 4;
          v247 = v243 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v248 = *(_OWORD *)v246;
            *(v245 - 1) = *((_OWORD *)v246 - 1);
            *v245 = v248;
            v245 -= 2;
            v246 -= 8;
            v247 -= 8;
          }
          while (v247);
          if (v243 != (v243 & 0x7FFFFFFFFFFFFFF8))
          {
            do
            {
LABEL_339:
              v249 = *((_DWORD *)v242-- - 1);
              *((_DWORD *)v240-- - 1) = v249;
            }
            while (v242 != v233);
          }
        }
        else
        {
          v239 = 0;
          v240 = (float *)(4 * v235);
          *(float *)(4 * v235) = v231;
          v232 = 4 * v235 + 4;
          if (v170 != v233)
            goto LABEL_332;
        }
LABEL_340:
        *(_QWORD *)a2 = v240;
        *(_QWORD *)(a2 + 8) = v232;
        *(_QWORD *)(a2 + 16) = &v239[4 * v238];
        if (v233)
          operator delete(v233);
LABEL_342:
        *(_QWORD *)(a2 + 8) = v232;
        if (!a3[1])
          goto LABEL_12;
        if (v12)
        {
          if (v12 != 1)
            goto LABEL_12;
          v250 = MEMORY[0x23B83DCF8](v589, (char *)&v607 + 4);
          v251 = MEMORY[0x23B83DCF8](v250, &v607);
          MEMORY[0x23B83DCF8](v251, (char *)&v606 + 4);
          v253 = *(char **)(a2 + 32);
          v252 = *(char **)(a2 + 40);
          if (v253 < v252)
          {
            *(_DWORD *)v253 = HIDWORD(v607);
            v254 = v253 + 4;
            goto LABEL_439;
          }
          v265 = *v572;
          v266 = v253 - (_BYTE *)*v572;
          v267 = v266 >> 2;
          v268 = (v266 >> 2) + 1;
          if (v268 >> 62)
            goto LABEL_773;
          v269 = v252 - v265;
          if (v269 >> 1 > v268)
            v268 = v269 >> 1;
          if ((unint64_t)v269 >= 0x7FFFFFFFFFFFFFFCLL)
            v270 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v270 = v268;
          if (v270)
          {
            if (v270 >> 62)
              goto LABEL_774;
            v271 = operator new(4 * v270);
            v272 = &v271[4 * v267];
            *v272 = HIDWORD(v607);
            v254 = (char *)(v272 + 1);
            if (v253 == v265)
              goto LABEL_437;
LABEL_431:
            v308 = v253 - 4 - v265;
            if (v308 < 0x2C)
              goto LABEL_816;
            if ((unint64_t)(v253 - &v271[v266]) < 0x20)
              goto LABEL_816;
            v309 = (v308 >> 2) + 1;
            v310 = 4 * (v309 & 0x7FFFFFFFFFFFFFF8);
            v311 = &v253[-v310];
            v272 = (_DWORD *)((char *)v272 - v310);
            v312 = &v271[v266 - 16];
            v313 = (__int128 *)(v253 - 16);
            v314 = v309 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v315 = *v313;
              *(v312 - 1) = *(v313 - 1);
              *v312 = v315;
              v312 -= 2;
              v313 -= 2;
              v314 -= 8;
            }
            while (v314);
            v253 = v311;
            if (v309 != (v309 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_816:
              do
              {
                v316 = *((_DWORD *)v253 - 1);
                v253 -= 4;
                *--v272 = v316;
              }
              while (v253 != v265);
            }
          }
          else
          {
            v271 = 0;
            v272 = (_DWORD *)(4 * v267);
            *(_DWORD *)(4 * v267) = HIDWORD(v607);
            v254 = (char *)(4 * v267 + 4);
            if (v253 != v265)
              goto LABEL_431;
          }
LABEL_437:
          v252 = &v271[4 * v270];
          *(_QWORD *)(a2 + 24) = v272;
          *(_QWORD *)(a2 + 32) = v254;
          *(_QWORD *)(a2 + 40) = v252;
          if (v265)
          {
            operator delete(v265);
            v252 = *(char **)(a2 + 40);
          }
LABEL_439:
          *(_QWORD *)(a2 + 32) = v254;
          if (v254 < v252)
          {
            *(_DWORD *)v254 = v607;
            v317 = v254 + 4;
            goto LABEL_492;
          }
          v318 = (char *)*v572;
          v319 = v254 - (_BYTE *)*v572;
          v320 = v319 >> 2;
          v321 = (v319 >> 2) + 1;
          if (v321 >> 62)
            goto LABEL_773;
          v322 = v252 - v318;
          if (v322 >> 1 > v321)
            v321 = v322 >> 1;
          if ((unint64_t)v322 >= 0x7FFFFFFFFFFFFFFCLL)
            v323 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v323 = v321;
          if (v323)
          {
            if (v323 >> 62)
              goto LABEL_774;
            v324 = operator new(4 * v323);
            v325 = &v324[4 * v320];
            *v325 = v607;
            v317 = (char *)(v325 + 1);
            if (v254 == v318)
              goto LABEL_490;
LABEL_452:
            v326 = v254 - 4 - v318;
            if (v326 < 0x2C)
            {
              v327 = v254;
              goto LABEL_489;
            }
            if ((unint64_t)(v254 - v324 - v319) < 0x20)
            {
              v327 = v254;
              goto LABEL_489;
            }
            v351 = (v326 >> 2) + 1;
            v352 = 4 * (v351 & 0x7FFFFFFFFFFFFFF8);
            v327 = &v254[-v352];
            v325 = (_DWORD *)((char *)v325 - v352);
            v353 = &v324[v319 - 16];
            v354 = v254 - 16;
            v355 = v351 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v356 = *(_OWORD *)v354;
              *(v353 - 1) = *((_OWORD *)v354 - 1);
              *v353 = v356;
              v353 -= 2;
              v354 -= 32;
              v355 -= 8;
            }
            while (v355);
            if (v351 != (v351 & 0x7FFFFFFFFFFFFFF8))
            {
              do
              {
LABEL_489:
                v357 = *((_DWORD *)v327 - 1);
                v327 -= 4;
                *--v325 = v357;
              }
              while (v327 != v318);
            }
          }
          else
          {
            v324 = 0;
            v325 = (_DWORD *)(4 * v320);
            *(_DWORD *)(4 * v320) = v607;
            v317 = (char *)(4 * v320 + 4);
            if (v254 != v318)
              goto LABEL_452;
          }
LABEL_490:
          v252 = &v324[4 * v323];
          *(_QWORD *)(a2 + 24) = v325;
          *(_QWORD *)(a2 + 32) = v317;
          *(_QWORD *)(a2 + 40) = v252;
          if (v318)
          {
            operator delete(v318);
            v252 = *(char **)(a2 + 40);
          }
LABEL_492:
          *(_QWORD *)(a2 + 32) = v317;
          if (v317 < v252)
          {
            *(_DWORD *)v317 = HIDWORD(v606);
            v358 = (uint64_t)(v317 + 4);
LABEL_515:
            *(_QWORD *)(a2 + 32) = v358;
            v12 = 1;
            goto LABEL_12;
          }
          v359 = (char *)*v572;
          v360 = v317 - (_BYTE *)*v572;
          v361 = v360 >> 2;
          v362 = (v360 >> 2) + 1;
          if (v362 >> 62)
            goto LABEL_773;
          v363 = v252 - v359;
          if (v363 >> 1 > v362)
            v362 = v363 >> 1;
          if ((unint64_t)v363 >= 0x7FFFFFFFFFFFFFFCLL)
            v364 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v364 = v362;
          if (v364)
          {
            if (v364 >> 62)
              goto LABEL_774;
            v365 = operator new(4 * v364);
            v366 = &v365[4 * v361];
            *v366 = HIDWORD(v606);
            v358 = (uint64_t)(v366 + 1);
            if (v317 == v359)
              goto LABEL_513;
LABEL_505:
            v367 = v317 - 4 - v359;
            if (v367 < 0x2C)
            {
              v368 = v317;
              goto LABEL_512;
            }
            if ((unint64_t)(v317 - v365 - v360) < 0x20)
            {
              v368 = v317;
              goto LABEL_512;
            }
            v369 = (v367 >> 2) + 1;
            v370 = 4 * (v369 & 0x7FFFFFFFFFFFFFF8);
            v368 = &v317[-v370];
            v366 = (_DWORD *)((char *)v366 - v370);
            v371 = &v365[v360 - 16];
            v372 = v317 - 16;
            v373 = v369 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v374 = *(_OWORD *)v372;
              *(v371 - 1) = *((_OWORD *)v372 - 1);
              *v371 = v374;
              v371 -= 2;
              v372 -= 32;
              v373 -= 8;
            }
            while (v373);
            if (v369 != (v369 & 0x7FFFFFFFFFFFFFF8))
            {
              do
              {
LABEL_512:
                v375 = *((_DWORD *)v368 - 1);
                v368 -= 4;
                *--v366 = v375;
              }
              while (v368 != v359);
            }
          }
          else
          {
            v365 = 0;
            v366 = (_DWORD *)(4 * v361);
            *(_DWORD *)(4 * v361) = HIDWORD(v606);
            v358 = 4 * v361 + 4;
            if (v317 != v359)
              goto LABEL_505;
          }
LABEL_513:
          *(_QWORD *)(a2 + 24) = v366;
          *(_QWORD *)(a2 + 32) = v358;
          *(_QWORD *)(a2 + 40) = &v365[4 * v364];
          if (v359)
            operator delete(v359);
          goto LABEL_515;
        }
        memset(&v588, 0, sizeof(v588));
        memset(&v615, 0, sizeof(v615));
        memset(&v587, 0, sizeof(v587));
        v255 = sub_23955CC24((uint64_t *)v589, (uint64_t)&v588);
        v256 = sub_23955CC24(v255, (uint64_t)&v615);
        sub_23955CC24(v256, (uint64_t)&v587);
        v257 = HIBYTE(v588.__r_.__value_.__r.__words[2]);
        if ((v588.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v257 = v588.__r_.__value_.__l.__size_;
        if (!v257)
          goto LABEL_358;
        v258 = HIBYTE(v615.__r_.__value_.__r.__words[2]);
        if ((v615.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v258 = v615.__r_.__value_.__l.__size_;
        if (!v258)
          goto LABEL_358;
        v259 = HIBYTE(v587.__r_.__value_.__r.__words[2]);
        if ((v587.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v259 = v587.__r_.__value_.__l.__size_;
        if (v259)
        {
          v260 = std::stof(&v588, 0);
          v261 = v260;
          v263 = *(float **)(a2 + 32);
          v262 = *(_QWORD *)(a2 + 40);
          if ((unint64_t)v263 < v262)
          {
            *v263 = v260;
            v264 = (uint64_t)(v263 + 1);
            goto LABEL_623;
          }
          v335 = (float *)*v572;
          v336 = (char *)v263 - (_BYTE *)*v572;
          v337 = v336 >> 2;
          v338 = (v336 >> 2) + 1;
          if (v338 >> 62)
            sub_2394189F8();
          v339 = v262 - (_QWORD)v335;
          if (v339 >> 1 > v338)
            v338 = v339 >> 1;
          if ((unint64_t)v339 >= 0x7FFFFFFFFFFFFFFCLL)
            v340 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v340 = v338;
          if (v340)
          {
            if (v340 >> 62)
              sub_239418A80();
            v341 = operator new(4 * v340);
            v342 = (float *)&v341[4 * v337];
            *v342 = v261;
            v264 = (uint64_t)(v342 + 1);
            if (v263 == v335)
              goto LABEL_621;
LABEL_615:
            v459 = (char *)(v263 - 1) - (char *)v335;
            if (v459 < 0x2C)
              goto LABEL_817;
            if ((unint64_t)((char *)v263 - &v341[v336]) < 0x20)
              goto LABEL_817;
            v460 = (v459 >> 2) + 1;
            v461 = 4 * (v460 & 0x7FFFFFFFFFFFFFF8);
            v462 = &v263[v461 / 0xFFFFFFFFFFFFFFFCLL];
            v342 = (float *)((char *)v342 - v461);
            v463 = &v341[v336 - 16];
            v464 = v263 - 4;
            v465 = v460 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v466 = *(_OWORD *)v464;
              *(v463 - 1) = *((_OWORD *)v464 - 1);
              *v463 = v466;
              v463 -= 2;
              v464 -= 8;
              v465 -= 8;
            }
            while (v465);
            v263 = v462;
            if (v460 != (v460 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_817:
              do
              {
                v467 = *((_DWORD *)v263-- - 1);
                *((_DWORD *)v342-- - 1) = v467;
              }
              while (v263 != v335);
            }
          }
          else
          {
            v341 = 0;
            v342 = (float *)(4 * v337);
            *(float *)(4 * v337) = v260;
            v264 = 4 * v337 + 4;
            if (v263 != v335)
              goto LABEL_615;
          }
LABEL_621:
          *(_QWORD *)(a2 + 24) = v342;
          *(_QWORD *)(a2 + 32) = v264;
          *(_QWORD *)(a2 + 40) = &v341[4 * v340];
          if (v335)
            operator delete(v335);
LABEL_623:
          *(_QWORD *)(a2 + 32) = v264;
          v468 = std::stof(&v615, 0);
          v469 = v468;
          v471 = *(float **)(a2 + 32);
          v470 = *(_QWORD *)(a2 + 40);
          if ((unint64_t)v471 < v470)
          {
            *v471 = v468;
            v472 = (uint64_t)(v471 + 1);
            goto LABEL_644;
          }
          v473 = (float *)*v572;
          v474 = (char *)v471 - (_BYTE *)*v572;
          v475 = v474 >> 2;
          v476 = (v474 >> 2) + 1;
          if (v476 >> 62)
            sub_2394189F8();
          v477 = v470 - (_QWORD)v473;
          if (v477 >> 1 > v476)
            v476 = v477 >> 1;
          if ((unint64_t)v477 >= 0x7FFFFFFFFFFFFFFCLL)
            v478 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v478 = v476;
          if (v478)
          {
            if (v478 >> 62)
              sub_239418A80();
            v479 = operator new(4 * v478);
            v480 = (float *)&v479[4 * v475];
            *v480 = v469;
            v472 = (uint64_t)(v480 + 1);
            if (v471 == v473)
              goto LABEL_642;
LABEL_636:
            v481 = (char *)(v471 - 1) - (char *)v473;
            if (v481 < 0x2C)
              goto LABEL_818;
            if ((unint64_t)((char *)v471 - &v479[v474]) < 0x20)
              goto LABEL_818;
            v482 = (v481 >> 2) + 1;
            v483 = 4 * (v482 & 0x7FFFFFFFFFFFFFF8);
            v484 = &v471[v483 / 0xFFFFFFFFFFFFFFFCLL];
            v480 = (float *)((char *)v480 - v483);
            v485 = &v479[v474 - 16];
            v486 = v471 - 4;
            v487 = v482 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v488 = *(_OWORD *)v486;
              *(v485 - 1) = *((_OWORD *)v486 - 1);
              *v485 = v488;
              v485 -= 2;
              v486 -= 8;
              v487 -= 8;
            }
            while (v487);
            v471 = v484;
            if (v482 != (v482 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_818:
              do
              {
                v489 = *((_DWORD *)v471-- - 1);
                *((_DWORD *)v480-- - 1) = v489;
              }
              while (v471 != v473);
            }
          }
          else
          {
            v479 = 0;
            v480 = (float *)(4 * v475);
            *(float *)(4 * v475) = v468;
            v472 = 4 * v475 + 4;
            if (v471 != v473)
              goto LABEL_636;
          }
LABEL_642:
          *(_QWORD *)(a2 + 24) = v480;
          *(_QWORD *)(a2 + 32) = v472;
          *(_QWORD *)(a2 + 40) = &v479[4 * v478];
          if (v473)
            operator delete(v473);
LABEL_644:
          *(_QWORD *)(a2 + 32) = v472;
          v490 = std::stof(&v587, 0);
          v491 = v490;
          v493 = *(float **)(a2 + 32);
          v492 = *(_QWORD *)(a2 + 40);
          if ((unint64_t)v493 < v492)
          {
            *v493 = v490;
            v494 = (uint64_t)(v493 + 1);
            goto LABEL_665;
          }
          v495 = (float *)*v572;
          v496 = (char *)v493 - (_BYTE *)*v572;
          v497 = v496 >> 2;
          v498 = (v496 >> 2) + 1;
          if (v498 >> 62)
            sub_2394189F8();
          v499 = v492 - (_QWORD)v495;
          if (v499 >> 1 > v498)
            v498 = v499 >> 1;
          if ((unint64_t)v499 >= 0x7FFFFFFFFFFFFFFCLL)
            v500 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v500 = v498;
          if (v500)
          {
            if (v500 >> 62)
              sub_239418A80();
            v501 = operator new(4 * v500);
            v502 = (float *)&v501[4 * v497];
            *v502 = v491;
            v494 = (uint64_t)(v502 + 1);
            if (v493 == v495)
              goto LABEL_663;
LABEL_657:
            v503 = (char *)(v493 - 1) - (char *)v495;
            if (v503 < 0x2C)
              goto LABEL_819;
            if ((unint64_t)((char *)v493 - &v501[v496]) < 0x20)
              goto LABEL_819;
            v504 = (v503 >> 2) + 1;
            v505 = 4 * (v504 & 0x7FFFFFFFFFFFFFF8);
            v506 = &v493[v505 / 0xFFFFFFFFFFFFFFFCLL];
            v502 = (float *)((char *)v502 - v505);
            v507 = &v501[v496 - 16];
            v508 = v493 - 4;
            v509 = v504 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v510 = *(_OWORD *)v508;
              *(v507 - 1) = *((_OWORD *)v508 - 1);
              *v507 = v510;
              v507 -= 2;
              v508 -= 8;
              v509 -= 8;
            }
            while (v509);
            v493 = v506;
            if (v504 != (v504 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_819:
              do
              {
                v511 = *((_DWORD *)v493-- - 1);
                *((_DWORD *)v502-- - 1) = v511;
              }
              while (v493 != v495);
            }
          }
          else
          {
            v501 = 0;
            v502 = (float *)(4 * v497);
            *(float *)(4 * v497) = v490;
            v494 = 4 * v497 + 4;
            if (v493 != v495)
              goto LABEL_657;
          }
LABEL_663:
          *(_QWORD *)(a2 + 24) = v502;
          *(_QWORD *)(a2 + 32) = v494;
          *(_QWORD *)(a2 + 40) = &v501[4 * v500];
          if (v495)
            operator delete(v495);
LABEL_665:
          *(_QWORD *)(a2 + 32) = v494;
          v12 = 1;
          if (SHIBYTE(v587.__r_.__value_.__r.__words[2]) < 0)
          {
LABEL_666:
            operator delete(v587.__r_.__value_.__l.__data_);
            if (SHIBYTE(v615.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_667;
LABEL_360:
            if ((SHIBYTE(v588.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_12;
            goto LABEL_668;
          }
        }
        else
        {
LABEL_358:
          v12 = 2;
          if (SHIBYTE(v587.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_666;
        }
        if ((SHIBYTE(v615.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_360;
LABEL_667:
        operator delete(v615.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v588.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_12;
LABEL_668:
        operator delete(v588.__r_.__value_.__l.__data_);
        goto LABEL_12;
      }
    }
    if (v21 != 102)
      goto LABEL_12;
    if (a4)
    {
      MEMORY[0x23B83DBFC](v624, "");
      MEMORY[0x23B83DBFC](&v624[24], "");
      MEMORY[0x23B83DBFC](v626, "");
      MEMORY[0x23B83DBFC](&v627[1], "");
      MEMORY[0x23B83DBFC](v629, "");
      MEMORY[0x23B83DBFC](&v630[1], "");
      v34 = sub_23955CC24((uint64_t *)v589, (uint64_t)v624);
      v35 = sub_23955CC24(v34, (uint64_t)&v624[24]);
      v36 = sub_23955CC24(v35, (uint64_t)v626);
      v37 = sub_23955CC24(v36, (uint64_t)&v627[1]);
      v38 = sub_23955CC24(v37, (uint64_t)v629);
      sub_23955CC24(v38, (uint64_t)&v630[1]);
      v594 = 6;
      v39 = v624[23];
      if (v624[23] < 0)
        v39 = *(_QWORD *)&v624[8];
      if (v39)
      {
        sub_2399465C8((uint64_t)&v588, (uint64_t)v624);
        *(_QWORD *)&v620 = v588.__r_.__value_.__r.__words[0];
        DWORD2(v620) = v588.__r_.__value_.__r.__words[1];
        v40 = HIBYTE(v625);
        if (v625 < 0)
          v40 = v625;
        if (!v40)
        {
          v594 = 1;
          goto LABEL_12;
        }
        sub_2399465C8((uint64_t)&v588, (uint64_t)&v624[24]);
        *(_QWORD *)((unint64_t)&v620 | 0xC) = v588.__r_.__value_.__r.__words[0];
        *(_DWORD *)(((unint64_t)&v620 | 0xC) + 8) = v588.__r_.__value_.__r.__words[1];
        v41 = (void *)HIBYTE(v627[0]);
        if (SHIBYTE(v627[0]) < 0)
          v41 = v626[1];
        if (!v41)
        {
          v594 = 2;
          goto LABEL_12;
        }
        sub_2399465C8((uint64_t)&v588, (uint64_t)v626);
        *((_QWORD *)&v621 + 1) = v588.__r_.__value_.__r.__words[0];
        LODWORD(v622) = v588.__r_.__value_.__r.__words[1];
        v42 = HIBYTE(v628);
        if (v628 < 0)
          v42 = v628;
        if (!v42)
        {
          LODWORD(v39) = 3;
          v594 = 3;
          goto LABEL_518;
        }
        sub_2399465C8((uint64_t)&v588, (uint64_t)&v627[1]);
        *(_QWORD *)((char *)&v622 + 4) = v588.__r_.__value_.__r.__words[0];
        HIDWORD(v622) = v588.__r_.__value_.__r.__words[1];
        v43 = (void *)HIBYTE(v630[0]);
        if (SHIBYTE(v630[0]) < 0)
          v43 = v629[1];
        if (v43)
        {
          sub_2399465C8((uint64_t)&v588, (uint64_t)v629);
          *(_QWORD *)v623 = v588.__r_.__value_.__r.__words[0];
          *(_DWORD *)&v623[8] = v588.__r_.__value_.__r.__words[1];
          v44 = HIBYTE(v631);
          if (v631 < 0)
            v44 = v631;
          if (v44)
          {
            sub_2399465C8((uint64_t)&v588, (uint64_t)&v630[1]);
            *(_QWORD *)&v623[12] = v588.__r_.__value_.__r.__words[0];
            *(_DWORD *)&v623[20] = v588.__r_.__value_.__r.__words[1];
            LODWORD(v39) = v594;
            if (v594 < 3)
              goto LABEL_12;
          }
          else
          {
            LODWORD(v39) = 5;
            v594 = 5;
          }
LABEL_518:
          v376 = 0;
          v377 = 0;
LABEL_520:
          while (2)
          {
            v378 = v376;
            while ((int)v39 > ++v378)
            {
              if (*((_DWORD *)&v620 + 3 * v376) == *((_DWORD *)&v620 + 3 * v378))
              {
                ++v376;
                v377 = 1;
                if ((int)v39 <= v376)
                  goto LABEL_12;
                goto LABEL_520;
              }
            }
            if ((int)v39 > ++v376)
              continue;
            break;
          }
          if ((v377 & 1) != 0)
            goto LABEL_12;
          v379 = 0;
          while (2)
          {
            v382 = *((_DWORD *)&v620 + 3 * v379) - 1;
            v384 = *(int **)(a2 + 56);
            v383 = *(_QWORD *)(a2 + 64);
            if ((unint64_t)v384 < v383)
            {
              *v384 = v382;
              v385 = v384 + 1;
              goto LABEL_549;
            }
            v386 = (int *)*v579;
            v387 = (char *)v384 - (_BYTE *)*v579;
            v388 = v387 >> 2;
            v389 = (v387 >> 2) + 1;
            if (v389 >> 62)
              sub_2394189F8();
            v390 = v383 - (_QWORD)v386;
            if (v390 >> 1 > v389)
              v389 = v390 >> 1;
            if ((unint64_t)v390 >= 0x7FFFFFFFFFFFFFFCLL)
              v391 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v391 = v389;
            if (v391)
            {
              if (v391 >> 62)
                sub_239418A80();
              v392 = operator new(4 * v391);
              v393 = (int *)&v392[4 * v388];
              *v393 = v382;
              v385 = v393 + 1;
              if (v384 != v386)
              {
LABEL_541:
                v394 = (char *)(v384 - 1) - (char *)v386;
                if (v394 < 0x2C)
                  goto LABEL_820;
                if ((unint64_t)((char *)v384 - &v392[v387]) < 0x20)
                  goto LABEL_820;
                v395 = (v394 >> 2) + 1;
                v396 = 4 * (v395 & 0x7FFFFFFFFFFFFFF8);
                v397 = &v384[v396 / 0xFFFFFFFFFFFFFFFCLL];
                v393 = (int *)((char *)v393 - v396);
                v398 = &v392[v387 - 16];
                v399 = v384 - 4;
                v400 = v395 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v401 = *(_OWORD *)v399;
                  *(v398 - 1) = *((_OWORD *)v399 - 1);
                  *v398 = v401;
                  v398 -= 2;
                  v399 -= 8;
                  v400 -= 8;
                }
                while (v400);
                v384 = v397;
                if (v395 != (v395 & 0x7FFFFFFFFFFFFFF8))
                {
LABEL_820:
                  do
                  {
                    v402 = *--v384;
                    *--v393 = v402;
                  }
                  while (v384 != v386);
                }
                *(_QWORD *)(a2 + 48) = v393;
                *(_QWORD *)(a2 + 56) = v385;
                *(_QWORD *)(a2 + 64) = &v392[4 * v391];
                if (v386)
LABEL_548:
                  operator delete(v386);
LABEL_549:
                *(_QWORD *)(a2 + 56) = v385;
                v403 = *((_DWORD *)&v620 + 3 * v379 + 1);
                if (v403 == -1)
                  goto LABEL_570;
                v404 = v403 - 1;
                v406 = *(char **)(a2 + 80);
                v405 = *(_QWORD *)(a2 + 88);
                if ((unint64_t)v406 < v405)
                {
                  *(_DWORD *)v406 = v404;
                  v407 = v406 + 4;
                  goto LABEL_569;
                }
                v408 = (char *)*v576;
                v409 = v406 - (_BYTE *)*v576;
                v410 = v409 >> 2;
                v411 = (v409 >> 2) + 1;
                if (v411 >> 62)
                  sub_2394189F8();
                v412 = v405 - (_QWORD)v408;
                if (v412 >> 1 > v411)
                  v411 = v412 >> 1;
                if ((unint64_t)v412 >= 0x7FFFFFFFFFFFFFFCLL)
                  v413 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v413 = v411;
                if (v413)
                {
                  if (v413 >> 62)
                    sub_239418A80();
                  v414 = operator new(4 * v413);
                  v415 = &v414[4 * v410];
                  *v415 = v404;
                  v407 = v415 + 1;
                  if (v406 != v408)
                  {
LABEL_561:
                    v416 = v406 - 4 - v408;
                    if (v416 < 0x2C)
                      goto LABEL_821;
                    if ((unint64_t)(v406 - &v414[v409]) < 0x20)
                      goto LABEL_821;
                    v417 = (v416 >> 2) + 1;
                    v418 = 4 * (v417 & 0x7FFFFFFFFFFFFFF8);
                    v419 = &v406[-v418];
                    v415 = (_DWORD *)((char *)v415 - v418);
                    v420 = &v414[v409 - 16];
                    v421 = v406 - 16;
                    v422 = v417 & 0x7FFFFFFFFFFFFFF8;
                    do
                    {
                      v423 = *(_OWORD *)v421;
                      *(v420 - 1) = *((_OWORD *)v421 - 1);
                      *v420 = v423;
                      v420 -= 2;
                      v421 -= 32;
                      v422 -= 8;
                    }
                    while (v422);
                    v406 = v419;
                    if (v417 != (v417 & 0x7FFFFFFFFFFFFFF8))
                    {
LABEL_821:
                      do
                      {
                        v424 = *((_DWORD *)v406 - 1);
                        v406 -= 4;
                        *--v415 = v424;
                      }
                      while (v406 != v408);
                    }
                    *(_QWORD *)(a2 + 72) = v415;
                    *(_QWORD *)(a2 + 80) = v407;
                    *(_QWORD *)(a2 + 88) = &v414[4 * v413];
                    if (v408)
LABEL_568:
                      operator delete(v408);
LABEL_569:
                    *(_QWORD *)(a2 + 80) = v407;
LABEL_570:
                    v425 = *((_DWORD *)&v620 + 3 * v379 + 2);
                    if (v425 == -1)
                    {
LABEL_529:
                      ++v379;
                      v381 = v594;
                      if (v379 >= v594)
                      {
                        if (*a3 && !v593 && DWORD2(v620) != -1)
                        {
                          v588.__r_.__value_.__r.__words[0] = (std::string::size_type)&v620;
                          if (!v619)
                            sub_2394172E0();
                          (*(void (**)(_BYTE *, std::string *))(*(_QWORD *)v619 + 48))(v619, &v588);
                          v381 = v594;
                        }
                        v450 = *(_BYTE **)(a2 + 152);
                        v449 = *(_QWORD *)(a2 + 160);
                        if ((unint64_t)v450 < v449)
                        {
                          *v450 = v381;
                          v451 = (uint64_t)(v450 + 1);
                          goto LABEL_701;
                        }
                        v452 = (_BYTE *)*v570;
                        v453 = (unint64_t)&v450[-*v570];
                        v454 = v453 + 1;
                        if ((uint64_t)(v453 + 1) < 0)
                          sub_2394189F8();
                        v455 = v449 - (_QWORD)v452;
                        if (2 * v455 > v454)
                          v454 = 2 * v455;
                        if (v455 >= 0x3FFFFFFFFFFFFFFFLL)
                          v456 = 0x7FFFFFFFFFFFFFFFLL;
                        else
                          v456 = v454;
                        if (v456)
                        {
                          v457 = (char *)operator new(v456);
                          v458 = &v457[v453];
                          v457[v453] = v381;
                          v451 = (uint64_t)&v457[v453 + 1];
                          if (v450 == v452)
                          {
LABEL_699:
                            *(_QWORD *)(a2 + 144) = v458;
                            *(_QWORD *)(a2 + 152) = v451;
                            *(_QWORD *)(a2 + 160) = &v457[v456];
                            if (v450)
                              operator delete(v450);
LABEL_701:
                            *(_QWORD *)(a2 + 152) = v451;
                            v533 = *(char **)(a2 + 128);
                            v532 = *(_QWORD *)(a2 + 136);
                            if ((unint64_t)v533 < v532)
                            {
                              *(_WORD *)v533 = __val;
                              *(_QWORD *)(a2 + 128) = v533 + 2;
                              goto LABEL_12;
                            }
                            v534 = (char *)*v571;
                            v535 = (uint64_t)&v533[-*v571];
                            if (v535 <= -3)
                              sub_2394189F8();
                            v536 = v535 >> 1;
                            v537 = v532 - (_QWORD)v534;
                            if (v537 <= (v535 >> 1) + 1)
                              v538 = v536 + 1;
                            else
                              v538 = v537;
                            if (v537 >= 0x7FFFFFFFFFFFFFFELL)
                              v539 = 0x7FFFFFFFFFFFFFFFLL;
                            else
                              v539 = v538;
                            if (v539)
                            {
                              if (v539 < 0)
                                sub_239418A80();
                              v540 = operator new(2 * v539);
                              v541 = &v540[2 * v536];
                              *v541 = __val;
                              v542 = (uint64_t)(v541 + 1);
                              if (v533 == v534)
                              {
LABEL_721:
                                *(_QWORD *)(a2 + 120) = v541;
                                *(_QWORD *)(a2 + 128) = v542;
                                *(_QWORD *)(a2 + 136) = &v540[2 * v539];
                                if (v534)
                                  operator delete(v534);
                                *(_QWORD *)(a2 + 128) = v542;
                                goto LABEL_12;
                              }
                            }
                            else
                            {
                              v540 = 0;
                              v541 = (_WORD *)(2 * v536);
                              *(_WORD *)(2 * v536) = __val;
                              v542 = 2 * v536 + 2;
                              if (v533 == v534)
                                goto LABEL_721;
                            }
                            v543 = v533 - 2 - v534;
                            if (v543 < 0x1E)
                              goto LABEL_822;
                            if (v533 - v540 - (v535 & 0xFFFFFFFFFFFFFFFELL) < 0x20)
                              goto LABEL_822;
                            v544 = (v543 >> 1) + 1;
                            v545 = 2 * (v544 & 0xFFFFFFFFFFFFFFF0);
                            v546 = &v533[-v545];
                            v541 = (_WORD *)((char *)v541 - v545);
                            v547 = &v540[2 * v536 - 16];
                            v548 = v533 - 16;
                            v549 = v544 & 0xFFFFFFFFFFFFFFF0;
                            do
                            {
                              v550 = *(_OWORD *)v548;
                              *(v547 - 1) = *((_OWORD *)v548 - 1);
                              *v547 = v550;
                              v547 -= 2;
                              v548 -= 32;
                              v549 -= 16;
                            }
                            while (v549);
                            v533 = v546;
                            if (v544 != (v544 & 0xFFFFFFFFFFFFFFF0))
                            {
LABEL_822:
                              do
                              {
                                v551 = *((_WORD *)v533 - 1);
                                v533 -= 2;
                                *--v541 = v551;
                              }
                              while (v533 != v534);
                            }
                            goto LABEL_721;
                          }
                        }
                        else
                        {
                          v457 = 0;
                          v458 = &v450[-*v570];
                          *(_BYTE *)v453 = v381;
                          v451 = v453 + 1;
                          if (v450 == v452)
                            goto LABEL_699;
                        }
                        if (v453 >= 8 && (unint64_t)(v452 - v457) >= 0x20)
                        {
                          if (v453 >= 0x20)
                          {
                            v521 = v453 & 0xFFFFFFFFFFFFFFE0;
                            v522 = &v457[v453 - 16];
                            v523 = (__int128 *)(v450 - 16);
                            v524 = v453 & 0xFFFFFFFFFFFFFFE0;
                            do
                            {
                              v525 = *v523;
                              *((_OWORD *)v522 - 1) = *(v523 - 1);
                              *(_OWORD *)v522 = v525;
                              v522 -= 32;
                              v523 -= 2;
                              v524 -= 32;
                            }
                            while (v524);
                            if (v453 == v521)
                              goto LABEL_698;
                            if ((v453 & 0x18) != 0)
                              goto LABEL_691;
                            v458 -= v521;
                            v450 -= v521;
                          }
                          else
                          {
                            v521 = 0;
LABEL_691:
                            v458 -= v453 & 0xFFFFFFFFFFFFFFF8;
                            v526 = &v457[&v450[-v521] - v452 - 8];
                            v527 = (uint64_t *)&v450[-v521 - 8];
                            v528 = v521 - (v453 & 0xFFFFFFFFFFFFFFF8);
                            do
                            {
                              v529 = *v527--;
                              *(_QWORD *)v526 = v529;
                              v526 -= 8;
                              v528 += 8;
                            }
                            while (v528);
                            v450 -= v453 & 0xFFFFFFFFFFFFFFF8;
                            if (v453 == (v453 & 0xFFFFFFFFFFFFFFF8))
                            {
LABEL_698:
                              v450 = (_BYTE *)*v570;
                              v458 = v457;
                              goto LABEL_699;
                            }
                          }
                        }
                        v530 = v458 - 1;
                        do
                        {
                          v531 = *--v450;
                          *v530-- = v531;
                        }
                        while (v450 != v452);
                        goto LABEL_698;
                      }
                      continue;
                    }
                    v426 = v425 - 1;
                    v428 = *(char **)(a2 + 104);
                    v427 = *(_QWORD *)(a2 + 112);
                    if ((unint64_t)v428 < v427)
                    {
                      *(_DWORD *)v428 = v426;
                      v380 = v428 + 4;
                      goto LABEL_528;
                    }
                    v429 = (char *)*v575;
                    v430 = v428 - (_BYTE *)*v575;
                    v431 = v430 >> 2;
                    v432 = (v430 >> 2) + 1;
                    if (v432 >> 62)
                      sub_2394189F8();
                    v433 = v427 - (_QWORD)v429;
                    if (v433 >> 1 > v432)
                      v432 = v433 >> 1;
                    if ((unint64_t)v433 >= 0x7FFFFFFFFFFFFFFCLL)
                      v434 = 0x3FFFFFFFFFFFFFFFLL;
                    else
                      v434 = v432;
                    if (v434)
                    {
                      if (v434 >> 62)
                        sub_239418A80();
                      v435 = operator new(4 * v434);
                      v436 = &v435[4 * v431];
                      *v436 = v426;
                      v380 = v436 + 1;
                      if (v428 != v429)
                      {
LABEL_581:
                        v437 = v428 - 4 - v429;
                        if (v437 < 0x2C)
                          goto LABEL_823;
                        if ((unint64_t)(v428 - &v435[v430]) < 0x20)
                          goto LABEL_823;
                        v438 = (v437 >> 2) + 1;
                        v439 = 4 * (v438 & 0x7FFFFFFFFFFFFFF8);
                        v440 = &v428[-v439];
                        v436 = (_DWORD *)((char *)v436 - v439);
                        v441 = &v435[v430 - 16];
                        v442 = v428 - 16;
                        v443 = v438 & 0x7FFFFFFFFFFFFFF8;
                        do
                        {
                          v444 = *(_OWORD *)v442;
                          *(v441 - 1) = *((_OWORD *)v442 - 1);
                          *v441 = v444;
                          v441 -= 2;
                          v442 -= 32;
                          v443 -= 8;
                        }
                        while (v443);
                        v428 = v440;
                        if (v438 != (v438 & 0x7FFFFFFFFFFFFFF8))
                        {
LABEL_823:
                          do
                          {
                            v445 = *((_DWORD *)v428 - 1);
                            v428 -= 4;
                            *--v436 = v445;
                          }
                          while (v428 != v429);
                        }
                        *(_QWORD *)(a2 + 96) = v436;
                        *(_QWORD *)(a2 + 104) = v380;
                        *(_QWORD *)(a2 + 112) = &v435[4 * v434];
                        if (!v429)
                        {
LABEL_528:
                          *(_QWORD *)(a2 + 104) = v380;
                          goto LABEL_529;
                        }
LABEL_597:
                        operator delete(v429);
                        goto LABEL_528;
                      }
                    }
                    else
                    {
                      v435 = 0;
                      v436 = (_DWORD *)(4 * v431);
                      v448 = (_DWORD *)(4 * v431);
                      *v448 = v426;
                      v380 = v448 + 1;
                      if (v428 != v429)
                        goto LABEL_581;
                    }
                    *(_QWORD *)(a2 + 96) = v436;
                    *(_QWORD *)(a2 + 104) = v380;
                    *(_QWORD *)(a2 + 112) = &v435[4 * v434];
                    if (!v429)
                      goto LABEL_528;
                    goto LABEL_597;
                  }
                }
                else
                {
                  v414 = 0;
                  v415 = (_DWORD *)(4 * v410);
                  v447 = (_DWORD *)(4 * v410);
                  *v447 = v404;
                  v407 = v447 + 1;
                  if (v406 != v408)
                    goto LABEL_561;
                }
                *(_QWORD *)(a2 + 72) = v415;
                *(_QWORD *)(a2 + 80) = v407;
                *(_QWORD *)(a2 + 88) = &v414[4 * v413];
                if (v408)
                  goto LABEL_568;
                goto LABEL_569;
              }
            }
            else
            {
              v392 = 0;
              v393 = (int *)(4 * v388);
              v446 = (int *)(4 * v388);
              *v446 = v382;
              v385 = v446 + 1;
              if (v384 != v386)
                goto LABEL_541;
            }
            break;
          }
          *(_QWORD *)(a2 + 48) = v393;
          *(_QWORD *)(a2 + 56) = v385;
          *(_QWORD *)(a2 + 64) = &v392[4 * v391];
          if (v386)
            goto LABEL_548;
          goto LABEL_549;
        }
        LODWORD(v39) = 4;
      }
      v594 = v39;
      if ((int)v39 < 3)
        goto LABEL_12;
      goto LABEL_518;
    }
    v79 = sub_23955CC24((uint64_t *)v589, (uint64_t)v602);
    v80 = sub_23955CC24(v79, (uint64_t)v600);
    v81 = sub_23955CC24(v80, (uint64_t)v598);
    sub_23955CC24(v81, (uint64_t)&v595);
    sub_2399465C8((uint64_t)&v588, (uint64_t)v602);
    *(_QWORD *)__dst = v588.__r_.__value_.__r.__words[0];
    *(_DWORD *)&__dst[8] = v588.__r_.__value_.__r.__words[1];
    sub_2399465C8((uint64_t)&v588, (uint64_t)v600);
    *(_QWORD *)((unint64_t)__dst | 0xC) = v588.__r_.__value_.__r.__words[0];
    *(_DWORD *)(((unint64_t)__dst | 0xC) + 8) = v588.__r_.__value_.__r.__words[1];
    sub_2399465C8((uint64_t)&v588, (uint64_t)v598);
    *(_QWORD *)&__dst[24] = v588.__r_.__value_.__r.__words[0];
    LODWORD(v633) = v588.__r_.__value_.__r.__words[1];
    if (*(_DWORD *)__dst == *(_DWORD *)&__dst[12]
      || *(_DWORD *)&__dst[12] == *(_DWORD *)&__dst[24]
      || *(_DWORD *)&__dst[24] == *(_DWORD *)__dst)
    {
      goto LABEL_12;
    }
    v82 = HIBYTE(v597);
    if (v597 < 0)
      v82 = v596;
    if (v82)
    {
      sub_2399465C8((uint64_t)&v588, (uint64_t)&v595);
      *(_QWORD *)((char *)&v633 + 4) = v588.__r_.__value_.__r.__words[0];
      HIDWORD(v633) = v588.__r_.__value_.__r.__words[1];
      if (*(_DWORD *)__dst == LODWORD(v588.__r_.__value_.__l.__data_)
        || *(_DWORD *)&__dst[12] == DWORD1(v633)
        || *(_DWORD *)&__dst[24] == DWORD1(v633))
      {
        goto LABEL_12;
      }
      *(_QWORD *)v634 = *(_QWORD *)__dst;
      *(_DWORD *)&v634[8] = *(_DWORD *)&__dst[8];
      *(_QWORD *)&v634[12] = *(_QWORD *)&__dst[24];
      *(_DWORD *)&v634[20] = v633;
      v594 = 6;
      MEMORY[0x23B83DBFC](&v595, "");
    }
    if (v594 >= 1)
    {
      for (j = 0; j < v594; ++j)
      {
        v85 = *(_DWORD *)&__dst[12 * j] - 1;
        v87 = *(int **)(a2 + 56);
        v86 = *(_QWORD *)(a2 + 64);
        if ((unint64_t)v87 < v86)
        {
          *v87 = v85;
          v88 = v87 + 1;
          goto LABEL_174;
        }
        v89 = (int *)*v579;
        v90 = (char *)v87 - (_BYTE *)*v579;
        v91 = v90 >> 2;
        v92 = (v90 >> 2) + 1;
        if (v92 >> 62)
          sub_2394189F8();
        v93 = v86 - (_QWORD)v89;
        if (v93 >> 1 > v92)
          v92 = v93 >> 1;
        if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFFCLL)
          v94 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v94 = v92;
        if (v94)
        {
          if (v94 >> 62)
            sub_239418A80();
          v95 = operator new(4 * v94);
          v96 = (int *)&v95[4 * v91];
          *v96 = v85;
          v88 = v96 + 1;
          if (v87 == v89)
          {
LABEL_215:
            *(_QWORD *)(a2 + 48) = v96;
            *(_QWORD *)(a2 + 56) = v88;
            *(_QWORD *)(a2 + 64) = &v95[4 * v94];
            if (v89)
              goto LABEL_173;
            goto LABEL_174;
          }
        }
        else
        {
          v95 = 0;
          v96 = (int *)(4 * v91);
          v149 = (int *)(4 * v91);
          *v149 = v85;
          v88 = v149 + 1;
          if (v87 == v89)
            goto LABEL_215;
        }
        v97 = (char *)(v87 - 1) - (char *)v89;
        if (v97 < 0x2C)
          goto LABEL_824;
        if ((unint64_t)((char *)v87 - &v95[v90]) < 0x20)
          goto LABEL_824;
        v98 = (v97 >> 2) + 1;
        v99 = 4 * (v98 & 0x7FFFFFFFFFFFFFF8);
        v100 = &v87[v99 / 0xFFFFFFFFFFFFFFFCLL];
        v96 = (int *)((char *)v96 - v99);
        v101 = &v95[v90 - 16];
        v102 = v87 - 4;
        v103 = v98 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v104 = *(_OWORD *)v102;
          *(v101 - 1) = *((_OWORD *)v102 - 1);
          *v101 = v104;
          v101 -= 2;
          v102 -= 8;
          v103 -= 8;
        }
        while (v103);
        v87 = v100;
        if (v98 != (v98 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_824:
          do
          {
            v105 = *--v87;
            *--v96 = v105;
          }
          while (v87 != v89);
        }
        *(_QWORD *)(a2 + 48) = v96;
        *(_QWORD *)(a2 + 56) = v88;
        *(_QWORD *)(a2 + 64) = &v95[4 * v94];
        if (v89)
LABEL_173:
          operator delete(v89);
LABEL_174:
        *(_QWORD *)(a2 + 56) = v88;
        v106 = *(_DWORD *)&__dst[12 * j + 4];
        if (v106 == -1)
          goto LABEL_195;
        v107 = v106 - 1;
        v109 = *(char **)(a2 + 80);
        v108 = *(_QWORD *)(a2 + 88);
        if ((unint64_t)v109 >= v108)
        {
          v111 = (char *)*v576;
          v112 = v109 - (_BYTE *)*v576;
          v113 = v112 >> 2;
          v114 = (v112 >> 2) + 1;
          if (v114 >> 62)
            sub_2394189F8();
          v115 = v108 - (_QWORD)v111;
          if (v115 >> 1 > v114)
            v114 = v115 >> 1;
          if ((unint64_t)v115 >= 0x7FFFFFFFFFFFFFFCLL)
            v116 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v116 = v114;
          if (v116)
          {
            if (v116 >> 62)
              sub_239418A80();
            v117 = operator new(4 * v116);
            v118 = &v117[4 * v113];
            *v118 = v107;
            v110 = v118 + 1;
            if (v109 != v111)
              goto LABEL_186;
LABEL_218:
            *(_QWORD *)(a2 + 72) = v118;
            *(_QWORD *)(a2 + 80) = v110;
            *(_QWORD *)(a2 + 88) = &v117[4 * v116];
            if (!v111)
              goto LABEL_194;
          }
          else
          {
            v117 = 0;
            v118 = (_DWORD *)(4 * v113);
            v150 = (_DWORD *)(4 * v113);
            *v150 = v107;
            v110 = v150 + 1;
            if (v109 == v111)
              goto LABEL_218;
LABEL_186:
            v119 = v109 - 4 - v111;
            if (v119 < 0x2C)
              goto LABEL_825;
            if ((unint64_t)(v109 - &v117[v112]) < 0x20)
              goto LABEL_825;
            v120 = (v119 >> 2) + 1;
            v121 = 4 * (v120 & 0x7FFFFFFFFFFFFFF8);
            v122 = &v109[-v121];
            v118 = (_DWORD *)((char *)v118 - v121);
            v123 = &v117[v112 - 16];
            v124 = v109 - 16;
            v125 = v120 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v126 = *(_OWORD *)v124;
              *(v123 - 1) = *((_OWORD *)v124 - 1);
              *v123 = v126;
              v123 -= 2;
              v124 -= 32;
              v125 -= 8;
            }
            while (v125);
            v109 = v122;
            if (v120 != (v120 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_825:
              do
              {
                v127 = *((_DWORD *)v109 - 1);
                v109 -= 4;
                *--v118 = v127;
              }
              while (v109 != v111);
            }
            *(_QWORD *)(a2 + 72) = v118;
            *(_QWORD *)(a2 + 80) = v110;
            *(_QWORD *)(a2 + 88) = &v117[4 * v116];
            if (!v111)
              goto LABEL_194;
          }
          operator delete(v111);
          goto LABEL_194;
        }
        *(_DWORD *)v109 = v107;
        v110 = v109 + 4;
LABEL_194:
        *(_QWORD *)(a2 + 80) = v110;
LABEL_195:
        v128 = *(_DWORD *)&__dst[12 * j + 8];
        if (v128 == -1)
          continue;
        v129 = v128 - 1;
        v131 = *(char **)(a2 + 104);
        v130 = *(_QWORD *)(a2 + 112);
        if ((unint64_t)v131 < v130)
        {
          *(_DWORD *)v131 = v129;
          v84 = v131 + 4;
        }
        else
        {
          v132 = (char *)*v575;
          v133 = v131 - (_BYTE *)*v575;
          v134 = v133 >> 2;
          v135 = (v133 >> 2) + 1;
          if (v135 >> 62)
            sub_2394189F8();
          v136 = v130 - (_QWORD)v132;
          if (v136 >> 1 > v135)
            v135 = v136 >> 1;
          if ((unint64_t)v136 >= 0x7FFFFFFFFFFFFFFCLL)
            v137 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v137 = v135;
          if (v137)
          {
            if (v137 >> 62)
              sub_239418A80();
            v138 = operator new(4 * v137);
            v139 = &v138[4 * v134];
            *v139 = v129;
            v84 = v139 + 1;
            if (v131 != v132)
            {
LABEL_206:
              v140 = v131 - 4 - v132;
              if (v140 < 0x2C)
                goto LABEL_826;
              if ((unint64_t)(v131 - &v138[v133]) < 0x20)
                goto LABEL_826;
              v141 = (v140 >> 2) + 1;
              v142 = 4 * (v141 & 0x7FFFFFFFFFFFFFF8);
              v143 = &v131[-v142];
              v139 = (_DWORD *)((char *)v139 - v142);
              v144 = &v138[v133 - 16];
              v145 = v131 - 16;
              v146 = v141 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                v147 = *(_OWORD *)v145;
                *(v144 - 1) = *((_OWORD *)v145 - 1);
                *v144 = v147;
                v144 -= 2;
                v145 -= 32;
                v146 -= 8;
              }
              while (v146);
              v131 = v143;
              if (v141 != (v141 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_826:
                do
                {
                  v148 = *((_DWORD *)v131 - 1);
                  v131 -= 4;
                  *--v139 = v148;
                }
                while (v131 != v132);
              }
              *(_QWORD *)(a2 + 96) = v139;
              *(_QWORD *)(a2 + 104) = v84;
              *(_QWORD *)(a2 + 112) = &v138[4 * v137];
              if (!v132)
                goto LABEL_153;
LABEL_222:
              operator delete(v132);
              goto LABEL_153;
            }
          }
          else
          {
            v138 = 0;
            v139 = (_DWORD *)(4 * v134);
            v151 = (_DWORD *)(4 * v134);
            *v151 = v129;
            v84 = v151 + 1;
            if (v131 != v132)
              goto LABEL_206;
          }
          *(_QWORD *)(a2 + 96) = v139;
          *(_QWORD *)(a2 + 104) = v84;
          *(_QWORD *)(a2 + 112) = &v138[4 * v137];
          if (v132)
            goto LABEL_222;
        }
LABEL_153:
        *(_QWORD *)(a2 + 104) = v84;
      }
    }
    if (*a3 && !v593 && *(_DWORD *)&__dst[8] != -1)
    {
      v588.__r_.__value_.__r.__words[0] = (std::string::size_type)__dst;
      if (!v619)
        sub_2394172E0();
      (*(void (**)(_BYTE *, std::string *))(*(_QWORD *)v619 + 48))(v619, &v588);
    }
    v306 = *(char **)(a2 + 128);
    v305 = *(_QWORD *)(a2 + 136);
    if ((unint64_t)v306 >= v305)
    {
      v343 = (char *)*v571;
      v344 = (uint64_t)&v306[-*v571];
      if (v344 <= -3)
        sub_2394189F8();
      v345 = v344 >> 1;
      v346 = v305 - (_QWORD)v343;
      if (v346 <= (v344 >> 1) + 1)
        v347 = v345 + 1;
      else
        v347 = v346;
      if (v346 >= 0x7FFFFFFFFFFFFFFELL)
        v348 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v348 = v347;
      if (v348)
      {
        if (v348 < 0)
          sub_239418A80();
        v349 = operator new(2 * v348);
        v350 = &v349[2 * v345];
        *v350 = __val;
        v307 = (uint64_t)(v350 + 1);
        if (v306 == v343)
          goto LABEL_677;
LABEL_671:
        v512 = v306 - 2 - v343;
        if (v512 < 0x1E)
          goto LABEL_827;
        if (v306 - v349 - (v344 & 0xFFFFFFFFFFFFFFFELL) < 0x20)
          goto LABEL_827;
        v513 = (v512 >> 1) + 1;
        v514 = 2 * (v513 & 0xFFFFFFFFFFFFFFF0);
        v515 = &v306[-v514];
        v350 = (_WORD *)((char *)v350 - v514);
        v516 = &v349[2 * v345 - 16];
        v517 = v306 - 16;
        v518 = v513 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v519 = *(_OWORD *)v517;
          *(v516 - 1) = *((_OWORD *)v517 - 1);
          *v516 = v519;
          v516 -= 2;
          v517 -= 32;
          v518 -= 16;
        }
        while (v518);
        v306 = v515;
        if (v513 != (v513 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_827:
          do
          {
            v520 = *((_WORD *)v306 - 1);
            v306 -= 2;
            *--v350 = v520;
          }
          while (v306 != v343);
        }
      }
      else
      {
        v349 = 0;
        v350 = (_WORD *)(2 * v345);
        *(_WORD *)(2 * v345) = __val;
        v307 = 2 * v345 + 2;
        if (v306 != v343)
          goto LABEL_671;
      }
LABEL_677:
      *(_QWORD *)(a2 + 120) = v350;
      *(_QWORD *)(a2 + 128) = v307;
      *(_QWORD *)(a2 + 136) = &v349[2 * v348];
      if (v343)
        operator delete(v343);
      goto LABEL_679;
    }
    *(_WORD *)v306 = __val;
    v307 = (uint64_t)(v306 + 2);
LABEL_679:
    *(_QWORD *)(a2 + 128) = v307;
    if (v594 == 6)
    {
      LOWORD(v588.__r_.__value_.__l.__data_) = __val;
      sub_23994A26C((uint64_t)v571, &v588);
    }
    v594 = 3;
LABEL_12:
    if (SHIBYTE(v617) < 0)
      operator delete((void *)v616);
LABEL_14:
    v589[0].__r_.__value_.__r.__words[0] = v586;
    *(std::string::size_type *)((char *)v589[0].__r_.__value_.__r.__words + *(_QWORD *)(v586 - 24)) = v585;
    v589[0].__r_.__value_.__r.__words[2] = v584;
    if (v591 < 0)
      operator delete(__p);
    std::streambuf::~streambuf();
    std::istream::~istream();
    MEMORY[0x23B83E250](&v592);
    v9 = v635[0];
  }
  if (!v582 && __val == -1)
  {
    std::to_string(v589, 0);
    v552 = std::string::insert(v589, 0, "group_");
    v553 = v552->__r_.__value_.__r.__words[0];
    *(_QWORD *)&v616 = v552->__r_.__value_.__l.__size_;
    *(_QWORD *)((char *)&v616 + 7) = *(std::string::size_type *)((char *)&v552->__r_.__value_.__r.__words[1] + 7);
    v554 = HIBYTE(v552->__r_.__value_.__r.__words[2]);
    v552->__r_.__value_.__l.__size_ = 0;
    v552->__r_.__value_.__r.__words[2] = 0;
    v552->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    __str.__r_.__value_.__r.__words[0] = v553;
    __str.__r_.__value_.__l.__size_ = v616;
    *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)&v616 + 7);
    *((_BYTE *)&__str.__r_.__value_.__s + 23) = v554;
    if (SHIBYTE(v589[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v589[0].__r_.__value_.__l.__data_);
      v555 = *(_QWORD *)(a2 + 224);
      if (v555 >= *(_QWORD *)(a2 + 232))
        goto LABEL_733;
LABEL_730:
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_23941A7F8((_BYTE *)v555, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
      }
      else
      {
        v556 = *(_OWORD *)&__str.__r_.__value_.__l.__data_;
        *(_QWORD *)(v555 + 16) = *((_QWORD *)&__str.__r_.__value_.__l + 2);
        *(_OWORD *)v555 = v556;
      }
      *(_QWORD *)(a2 + 224) = v555 + 24;
      *(_QWORD *)(a2 + 224) = v555 + 24;
      v557 = *(void **)(a2 + 120);
      v558 = *(_QWORD *)(a2 + 128) - (_QWORD)v557;
      v559 = v558 == 1;
      if (v558 >= 1)
      {
LABEL_734:
        v560 = (unint64_t)v558 >> 1;
        v561 = !v559;
        bzero(v557, 2 * (v560 - v561) + 2);
      }
    }
    else
    {
      v555 = *(_QWORD *)(a2 + 224);
      if (v555 < *(_QWORD *)(a2 + 232))
        goto LABEL_730;
LABEL_733:
      *(_QWORD *)(a2 + 224) = sub_23959AE70(v578, (uint64_t)&__str);
      v557 = *(void **)(a2 + 120);
      v558 = *(_QWORD *)(a2 + 128) - (_QWORD)v557;
      v559 = v558 == 1;
      if (v558 >= 1)
        goto LABEL_734;
    }
  }
  v562 = v619;
  if (v619 == v618)
  {
    v563 = 4;
    v562 = v618;
LABEL_742:
    (*(void (**)(void))(*v562 + 8 * v563))();
  }
  else if (v619)
  {
    v563 = 5;
    goto LABEL_742;
  }
  if (SHIBYTE(v631) < 0)
  {
    operator delete(v630[1]);
    if (SHIBYTE(v630[0]) < 0)
      goto LABEL_758;
LABEL_745:
    if ((SHIBYTE(v628) & 0x80000000) == 0)
      goto LABEL_746;
LABEL_759:
    operator delete(v627[1]);
    if (SHIBYTE(v627[0]) < 0)
      goto LABEL_760;
LABEL_747:
    if ((SHIBYTE(v625) & 0x80000000) == 0)
      goto LABEL_748;
LABEL_761:
    operator delete(*(void **)&v624[24]);
    if ((v624[23] & 0x80000000) != 0)
      goto LABEL_762;
LABEL_749:
    if ((SHIBYTE(v597) & 0x80000000) == 0)
      goto LABEL_750;
LABEL_763:
    operator delete(v595);
    if (SHIBYTE(v599) < 0)
      goto LABEL_764;
LABEL_751:
    if ((SHIBYTE(v601) & 0x80000000) == 0)
      goto LABEL_752;
LABEL_765:
    operator delete(v600[0]);
    if (SHIBYTE(v603) < 0)
      goto LABEL_766;
LABEL_753:
    if ((SHIBYTE(v611.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_754;
LABEL_767:
    operator delete(v611.__r_.__value_.__l.__data_);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_768;
LABEL_755:
    if (SHIBYTE(v614) < 0)
LABEL_769:
      operator delete(v613[0]);
  }
  else
  {
    if ((SHIBYTE(v630[0]) & 0x80000000) == 0)
      goto LABEL_745;
LABEL_758:
    operator delete(v629[0]);
    if (SHIBYTE(v628) < 0)
      goto LABEL_759;
LABEL_746:
    if ((SHIBYTE(v627[0]) & 0x80000000) == 0)
      goto LABEL_747;
LABEL_760:
    operator delete(v626[0]);
    if (SHIBYTE(v625) < 0)
      goto LABEL_761;
LABEL_748:
    if ((v624[23] & 0x80000000) == 0)
      goto LABEL_749;
LABEL_762:
    operator delete(*(void **)v624);
    if (SHIBYTE(v597) < 0)
      goto LABEL_763;
LABEL_750:
    if ((SHIBYTE(v599) & 0x80000000) == 0)
      goto LABEL_751;
LABEL_764:
    operator delete(v598[0]);
    if (SHIBYTE(v601) < 0)
      goto LABEL_765;
LABEL_752:
    if ((SHIBYTE(v603) & 0x80000000) == 0)
      goto LABEL_753;
LABEL_766:
    operator delete(v602[0]);
    if (SHIBYTE(v611.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_767;
LABEL_754:
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_755;
LABEL_768:
    operator delete(__str.__r_.__value_.__l.__data_);
    if (SHIBYTE(v614) < 0)
      goto LABEL_769;
  }
  v635[0] = *MEMORY[0x24BEDB7E0];
  *(_QWORD *)((char *)v635 + *(_QWORD *)(v635[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 24);
  MEMORY[0x23B83DC8C](v636);
  std::istream::~istream();
  MEMORY[0x23B83E250](v637);
  return 1;
}

void sub_239949EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49,uint64_t a50,std::locale a51)
{
  unint64_t *v52;
  uint64_t v53;

  if (SLOBYTE(STACK[0x37F]) < 0)
    operator delete((void *)STACK[0x368]);
  sub_23955CB0C((uint64_t)&a51);
  v52 = (unint64_t *)STACK[0x398];
  if ((unint64_t *)STACK[0x398] == &STACK[0x380])
  {
    v53 = 4;
    v52 = &STACK[0x380];
  }
  else
  {
    if (!v52)
    {
      if ((SLOBYTE(STACK[0x47F]) & 0x80000000) == 0)
        goto LABEL_23;
      goto LABEL_7;
    }
    v53 = 5;
  }
  (*(void (**)(void))(*v52 + 8 * v53))();
  if ((SLOBYTE(STACK[0x47F]) & 0x80000000) == 0)
  {
LABEL_23:
    if (SLOBYTE(STACK[0x467]) < 0)
    {
LABEL_24:
      operator delete((void *)STACK[0x450]);
      if ((SLOBYTE(STACK[0x44F]) & 0x80000000) == 0)
      {
LABEL_25:
        if (SLOBYTE(STACK[0x437]) < 0)
        {
LABEL_26:
          operator delete((void *)STACK[0x420]);
          if ((SLOBYTE(STACK[0x41F]) & 0x80000000) == 0)
          {
LABEL_27:
            if (SLOBYTE(STACK[0x407]) < 0)
            {
LABEL_28:
              operator delete((void *)STACK[0x3F0]);
              if ((SLOBYTE(STACK[0x287]) & 0x80000000) == 0)
              {
LABEL_29:
                if (SLOBYTE(STACK[0x29F]) < 0)
                {
LABEL_30:
                  operator delete((void *)STACK[0x288]);
                  if ((SLOBYTE(STACK[0x2B7]) & 0x80000000) == 0)
                  {
LABEL_31:
                    if (SLOBYTE(STACK[0x2CF]) < 0)
                    {
LABEL_32:
                      operator delete((void *)STACK[0x2B8]);
                      if ((SLOBYTE(STACK[0x31F]) & 0x80000000) == 0)
                      {
LABEL_33:
                        if (SLOBYTE(STACK[0x337]) < 0)
                        {
LABEL_34:
                          operator delete((void *)STACK[0x320]);
                          if ((SLOBYTE(STACK[0x34F]) & 0x80000000) == 0)
                          {
LABEL_20:
                            sub_23955CB90(&STACK[0x4C8]);
                            _Unwind_Resume(a1);
                          }
LABEL_19:
                          operator delete((void *)STACK[0x338]);
                          goto LABEL_20;
                        }
LABEL_18:
                        if ((SLOBYTE(STACK[0x34F]) & 0x80000000) == 0)
                          goto LABEL_20;
                        goto LABEL_19;
                      }
LABEL_17:
                      operator delete((void *)STACK[0x308]);
                      if (SLOBYTE(STACK[0x337]) < 0)
                        goto LABEL_34;
                      goto LABEL_18;
                    }
LABEL_16:
                    if ((SLOBYTE(STACK[0x31F]) & 0x80000000) == 0)
                      goto LABEL_33;
                    goto LABEL_17;
                  }
LABEL_15:
                  operator delete((void *)STACK[0x2A0]);
                  if (SLOBYTE(STACK[0x2CF]) < 0)
                    goto LABEL_32;
                  goto LABEL_16;
                }
LABEL_14:
                if ((SLOBYTE(STACK[0x2B7]) & 0x80000000) == 0)
                  goto LABEL_31;
                goto LABEL_15;
              }
LABEL_13:
              operator delete((void *)STACK[0x270]);
              if (SLOBYTE(STACK[0x29F]) < 0)
                goto LABEL_30;
              goto LABEL_14;
            }
LABEL_12:
            if ((SLOBYTE(STACK[0x287]) & 0x80000000) == 0)
              goto LABEL_29;
            goto LABEL_13;
          }
LABEL_11:
          operator delete((void *)STACK[0x408]);
          if (SLOBYTE(STACK[0x407]) < 0)
            goto LABEL_28;
          goto LABEL_12;
        }
LABEL_10:
        if ((SLOBYTE(STACK[0x41F]) & 0x80000000) == 0)
          goto LABEL_27;
        goto LABEL_11;
      }
LABEL_9:
      operator delete((void *)STACK[0x438]);
      if (SLOBYTE(STACK[0x437]) < 0)
        goto LABEL_26;
      goto LABEL_10;
    }
LABEL_8:
    if ((SLOBYTE(STACK[0x44F]) & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_9;
  }
LABEL_7:
  operator delete((void *)STACK[0x468]);
  if (SLOBYTE(STACK[0x467]) < 0)
    goto LABEL_24;
  goto LABEL_8;
}

void sub_23994A26C(uint64_t a1, _WORD *a2)
{
  unint64_t v4;
  char *v5;
  char *v6;
  _WORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _WORD *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  char *v20;
  unint64_t v21;
  __int128 v22;
  __int16 v23;

  v5 = *(char **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = v5;
  if ((unint64_t)v5 >= v4)
  {
    v8 = *(char **)a1;
    v9 = (uint64_t)&v5[-*(_QWORD *)a1];
    if (v9 <= -3)
      sub_2394189F8();
    v10 = v9 >> 1;
    v11 = v4 - (_QWORD)v8;
    if (v11 <= (v9 >> 1) + 1)
      v12 = v10 + 1;
    else
      v12 = v11;
    if (v11 >= 0x7FFFFFFFFFFFFFFELL)
      v13 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v13 = v12;
    if (v13)
    {
      if (v13 < 0)
        sub_239418A80();
      v14 = operator new(2 * v13);
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[2 * v10];
    *v15 = *a2;
    v7 = v15 + 1;
    if (v5 != v8)
    {
      v16 = v5 - v8 - 2;
      if (v16 < 0x1E)
        goto LABEL_28;
      if (v5 - v14 - (v9 & 0xFFFFFFFFFFFFFFFELL) < 0x20)
        goto LABEL_28;
      v17 = (v16 >> 1) + 1;
      v18 = 2 * (v17 & 0xFFFFFFFFFFFFFFF0);
      v6 = &v5[-v18];
      v15 = (_WORD *)((char *)v15 - v18);
      v19 = &v14[2 * v10 - 16];
      v20 = v5 - 16;
      v21 = v17 & 0xFFFFFFFFFFFFFFF0;
      do
      {
        v22 = *(_OWORD *)v20;
        *(v19 - 1) = *((_OWORD *)v20 - 1);
        *v19 = v22;
        v19 -= 2;
        v20 -= 32;
        v21 -= 16;
      }
      while (v21);
      if (v17 != (v17 & 0xFFFFFFFFFFFFFFF0))
      {
LABEL_28:
        do
        {
          v23 = *((_WORD *)v6 - 1);
          v6 -= 2;
          *--v15 = v23;
        }
        while (v6 != v8);
      }
    }
    *(_QWORD *)a1 = v15;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = &v14[2 * v13];
    if (v8)
      operator delete(v8);
  }
  else
  {
    *(_WORD *)v5 = *a2;
    v7 = v5 + 2;
  }
  *(_QWORD *)(a1 + 8) = v7;
}

uint64_t sub_23994A3C8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char a5)
{
  uint64_t v6;
  BOOL v8;
  char *v10;
  size_t v11;
  std::string::size_type v12;
  std::string *p_dst;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned int v17;
  uint64_t *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  char *v21;
  size_t v22;
  std::string::size_type v23;
  std::string *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  uint64_t *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  std::string *v36;
  std::__fs::filesystem::path::__string_view v37;
  void *v38;
  std::basic_string_view<_CharT, _Traits>::size_type v39;
  std::basic_string_view<_CharT, _Traits>::size_type v40;
  int v41;
  uint64_t v42;
  std::string *v43;
  uint64_t v44;
  std::string::size_type v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t *v55;
  uint64_t *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  std::string *v62;
  std::__fs::filesystem::path::__string_view v63;
  void *v64;
  _BOOL4 v65;
  std::basic_string_view<_CharT, _Traits>::size_type v66;
  std::basic_string_view<_CharT, _Traits>::size_type v67;
  uint64_t v68;
  std::string *v69;
  char *v70;
  size_t v71;
  std::string::size_type v72;
  std::string *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t **v76;
  unsigned int v77;
  char *v78;
  size_t v79;
  std::string::size_type v80;
  std::string *v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t *v85;
  uint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t **v91;
  uint64_t *v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t *v108;
  unint64_t v109;
  unsigned int v110;
  uint64_t **v111;
  unsigned int v112;
  uint64_t *v113;
  uint64_t **v114;
  uint64_t **v115;
  unsigned int v116;
  char *v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t *v120;
  uint64_t *v121;
  void *v122;
  unsigned int v124;
  void *v125[2];
  uint64_t v126;
  std::string pn;
  std::string __dst;
  void *__p[2];
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  std::__fs::filesystem::path v151;
  uint64_t v152;

  v6 = a2;
  v152 = *MEMORY[0x24BDAC8D0];
  if ((a5 & 1) != 0)
  {
    *(_OWORD *)__p = 0u;
    v130 = 0u;
    v131 = 0u;
    v132 = 0u;
    v133 = 0u;
    v134 = 0u;
    v135 = 0u;
    v136 = 0u;
    v137 = 0u;
    v138 = 0u;
    v139 = 0u;
    v140 = 0u;
    v141 = 0u;
    v142 = 0u;
    v143 = 0u;
    v144 = &v145;
    v145 = 0;
    v146 = 0;
    v147 = 0;
    v148 = 0;
    v149 = 0;
    v150 = 1;
    sub_239946C24(a1, (uint64_t)__p, (_BYTE *)a4, 1);
    v124 = sub_23994C324(v6, (uint64_t)__p, 1);
  }
  else
  {
    if (*(_BYTE *)a4)
      v8 = 0;
    else
      v8 = *(_BYTE *)(a4 + 1) == 0;
    if (v8 && *(_BYTE *)(a4 + 2) == 0)
    {
      v124 = sub_239946A1C(a1, a2);
      if (!*(_BYTE *)(a4 + 2))
        goto LABEL_117;
LABEL_14:
      v10 = off_256934450[0];
      v11 = strlen(off_256934450[0]);
      if (v11 > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      v12 = v11;
      if (v11 >= 0x17)
      {
        v14 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v11 | 7) != 0x17)
          v14 = v11 | 7;
        v15 = v14 + 1;
        p_dst = (std::string *)operator new(v14 + 1);
        __dst.__r_.__value_.__l.__size_ = v12;
        __dst.__r_.__value_.__r.__words[2] = v15 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      }
      else
      {
        *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v11;
        p_dst = &__dst;
        if (!v11)
        {
LABEL_22:
          p_dst->__r_.__value_.__s.__data_[v12] = 0;
          v16 = (_QWORD *)(v6 + 80);
          __p[0] = 0;
          __p[1] = 0;
          *(_QWORD *)&v130 = 0;
          v17 = sub_23958C0D8((uint64_t **)(v6 + 80), (uint64_t)__p, (unsigned __int8 *)&__dst);
          if (SBYTE7(v130) < 0)
          {
            operator delete(__p[0]);
            if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_24:
              if (v17 != -1)
                goto LABEL_25;
              goto LABEL_29;
            }
          }
          else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            goto LABEL_24;
          }
          operator delete(__dst.__r_.__value_.__l.__data_);
          if (v17 != -1)
          {
LABEL_25:
            v18 = (uint64_t *)(*v16 + 16 * v17);
            v19 = *v18;
            v20 = (std::__shared_weak_count *)v18[1];
            if (!v20)
              goto LABEL_85;
            goto LABEL_80;
          }
LABEL_29:
          v21 = off_256934450[0];
          v22 = strlen(off_256934450[0]);
          if (v22 > 0x7FFFFFFFFFFFFFF7)
            sub_23941A5AC();
          v23 = v22;
          if (v22 >= 0x17)
          {
            v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v22 | 7) != 0x17)
              v25 = v22 | 7;
            v26 = v25 + 1;
            v24 = (std::string *)operator new(v25 + 1);
            __dst.__r_.__value_.__l.__size_ = v23;
            __dst.__r_.__value_.__r.__words[2] = v26 | 0x8000000000000000;
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v24;
          }
          else
          {
            *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v22;
            v24 = &__dst;
            if (!v22)
            {
LABEL_37:
              v24->__r_.__value_.__s.__data_[v23] = 0;
              __p[0] = 0;
              __p[1] = 0;
              *(_QWORD *)&v130 = 0;
              v27 = sub_23958964C(v6 + 80, (uint64_t)__p, (uint64_t)&__dst);
              if (SBYTE7(v130) < 0)
              {
                operator delete(__p[0]);
                if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                {
LABEL_39:
                  v28 = (uint64_t *)(*v16 + 16 * v27);
                  v29 = *v28;
                  v30 = (std::__shared_weak_count *)v28[1];
                  if (!v30)
                    goto LABEL_48;
                  goto LABEL_43;
                }
              }
              else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
                goto LABEL_39;
              }
              operator delete(__dst.__r_.__value_.__l.__data_);
              v31 = (uint64_t *)(*v16 + 16 * v27);
              v29 = *v31;
              v30 = (std::__shared_weak_count *)v31[1];
              if (!v30)
                goto LABEL_48;
LABEL_43:
              p_shared_owners = (unint64_t *)&v30->__shared_owners_;
              do
                v33 = __ldxr(p_shared_owners);
              while (__stxr(v33 + 1, p_shared_owners));
              do
                v34 = __ldaxr(p_shared_owners);
              while (__stlxr(v34 - 1, p_shared_owners));
              if (!v34)
              {
                ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
                std::__shared_weak_count::__release_weak(v30);
              }
LABEL_48:
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v29 + 32))(v29, 1);
              memset(&__dst, 0, sizeof(__dst));
              v35 = *(unsigned __int8 *)(a1 + 23);
              if ((v35 & 0x80u) == 0)
                v36 = (std::string *)a1;
              else
                v36 = *(std::string **)a1;
              if ((v35 & 0x80u) != 0)
                v35 = *(_QWORD *)(a1 + 8);
              sub_23948900C(&__dst, v36, (std::string *)((char *)v36 + v35));
              v37 = std::__fs::filesystem::path::__stem((const std::__fs::filesystem::path *)&__dst);
              if (v37.__size_ > 0x7FFFFFFFFFFFFFF7)
                sub_23941A5AC();
              if (v37.__size_ >= 0x17)
              {
                v39 = (v37.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v37.__size_ | 7) != 0x17)
                  v39 = v37.__size_ | 7;
                v40 = v39 + 1;
                v38 = operator new(v39 + 1);
                __p[1] = (void *)v37.__size_;
                *(_QWORD *)&v130 = v40 | 0x8000000000000000;
                __p[0] = v38;
              }
              else
              {
                BYTE7(v130) = v37.__size_;
                v38 = __p;
                if (!v37.__size_)
                {
LABEL_61:
                  *((_BYTE *)v38 + v37.__size_) = 0;
                  LODWORD(v125[0]) = v130;
                  *(_DWORD *)((char *)v125 + 3) = *(_DWORD *)((char *)&v130 + 3);
                  v41 = SBYTE7(v130);
                  v122 = __p[0];
                  if (SBYTE7(v130) < 0)
                  {
                    sub_23941A7F8(&pn, __p[0], (unint64_t)__p[1]);
                  }
                  else
                  {
                    *(_OWORD *)&pn.__r_.__value_.__l.__data_ = *(_OWORD *)__p;
                    LODWORD(pn.__r_.__value_.__r.__words[2]) = v125[0];
                    *(_DWORD *)((char *)&pn.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v125 + 3);
                    *((_BYTE *)&pn.__r_.__value_.__s + 23) = BYTE7(v130);
                  }
                  v42 = v6;
                  v43 = std::string::append(&pn, ".mtl");
                  v44 = v27;
                  v45 = v43->__r_.__value_.__r.__words[0];
                  v151.__pn_.__r_.__value_.__r.__words[0] = v43->__r_.__value_.__l.__size_;
                  *(std::string::size_type *)((char *)v151.__pn_.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v43->__r_.__value_.__r.__words[1] + 7);
                  v46 = HIBYTE(v43->__r_.__value_.__r.__words[2]);
                  v43->__r_.__value_.__l.__size_ = 0;
                  v43->__r_.__value_.__r.__words[2] = 0;
                  v43->__r_.__value_.__r.__words[0] = 0;
                  v47 = (uint64_t *)(*v16 + 16 * v27);
                  v48 = *v47;
                  v49 = (std::__shared_weak_count *)v47[1];
                  if (v49)
                  {
                    v50 = (unint64_t *)&v49->__shared_owners_;
                    do
                      v51 = __ldxr(v50);
                    while (__stxr(v51 + 1, v50));
                    do
                      v52 = __ldaxr(v50);
                    while (__stlxr(v52 - 1, v50));
                    if (!v52)
                    {
                      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
                      std::__shared_weak_count::__release_weak(v49);
                    }
                  }
                  v53 = *(_QWORD *)(v48 + 40);
                  if (*(char *)(v53 + 23) < 0)
                    operator delete(*(void **)v53);
                  *(_QWORD *)v53 = v45;
                  *(_QWORD *)(v53 + 8) = v151.__pn_.__r_.__value_.__r.__words[0];
                  *(_QWORD *)(v53 + 15) = *(std::string::size_type *)((char *)v151.__pn_.__r_.__value_.__r.__words + 7);
                  *(_BYTE *)(v53 + 23) = v46;
                  if (SHIBYTE(pn.__r_.__value_.__r.__words[2]) < 0)
                  {
                    operator delete(pn.__r_.__value_.__l.__data_);
                    v6 = v42;
                    v54 = v122;
                    if ((v41 & 0x80000000) == 0)
                    {
LABEL_74:
                      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                        goto LABEL_75;
                      goto LABEL_79;
                    }
                  }
                  else
                  {
                    v6 = v42;
                    v54 = v122;
                    if ((v41 & 0x80000000) == 0)
                      goto LABEL_74;
                  }
                  operator delete(v54);
                  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                  {
LABEL_75:
                    v55 = (uint64_t *)(*v16 + 16 * v44);
                    v19 = *v55;
                    v20 = (std::__shared_weak_count *)v55[1];
                    if (!v20)
                      goto LABEL_85;
                    goto LABEL_80;
                  }
LABEL_79:
                  operator delete(__dst.__r_.__value_.__l.__data_);
                  v56 = (uint64_t *)(*v16 + 16 * v44);
                  v19 = *v56;
                  v20 = (std::__shared_weak_count *)v56[1];
                  if (!v20)
                    goto LABEL_85;
LABEL_80:
                  v57 = (unint64_t *)&v20->__shared_owners_;
                  do
                    v58 = __ldxr(v57);
                  while (__stxr(v58 + 1, v57));
                  do
                    v59 = __ldaxr(v57);
                  while (__stlxr(v59 - 1, v57));
                  if (!v59)
                  {
                    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
                    std::__shared_weak_count::__release_weak(v20);
                  }
LABEL_85:
                  v60 = *(_QWORD *)(v19 + 40);
                  memset(&__dst, 0, sizeof(__dst));
                  v61 = *(unsigned __int8 *)(a1 + 23);
                  if ((v61 & 0x80u) == 0)
                    v62 = (std::string *)a1;
                  else
                    v62 = *(std::string **)a1;
                  if ((v61 & 0x80u) != 0)
                    v61 = *(_QWORD *)(a1 + 8);
                  sub_23948900C(&__dst, v62, (std::string *)((char *)v62 + v61));
                  if (!v124)
                  {
                    v65 = 0;
                    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                      goto LABEL_115;
                    goto LABEL_96;
                  }
                  v63 = std::__fs::filesystem::path::__parent_path((const std::__fs::filesystem::path *)&__dst);
                  if (v63.__size_ > 0x7FFFFFFFFFFFFFF7)
                    sub_23941A5AC();
                  if (v63.__size_ >= 0x17)
                  {
                    v66 = (v63.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                    if ((v63.__size_ | 7) != 0x17)
                      v66 = v63.__size_ | 7;
                    v67 = v66 + 1;
                    v64 = operator new(v66 + 1);
                    __p[1] = (void *)v63.__size_;
                    *(_QWORD *)&v130 = v67 | 0x8000000000000000;
                    __p[0] = v64;
                  }
                  else
                  {
                    BYTE7(v130) = v63.__size_;
                    v64 = __p;
                    if (!v63.__size_)
                    {
LABEL_102:
                      *((_BYTE *)v64 + v63.__size_) = 0;
                      *(_OWORD *)v125 = *(_OWORD *)__p;
                      v126 = v130;
                      __p[1] = 0;
                      *(_QWORD *)&v130 = 0;
                      __p[0] = 0;
                      v68 = *(unsigned __int8 *)(v60 + 23);
                      if ((v68 & 0x80u) == 0)
                        v69 = (std::string *)v60;
                      else
                        v69 = *(std::string **)v60;
                      if ((v68 & 0x80u) != 0)
                        v68 = *(_QWORD *)(v60 + 8);
                      sub_23948900C((std::string *)__p, v69, (std::string *)((char *)v69 + v68));
                      sub_239498A04((std::__fs::filesystem::path *)__p, (uint64_t)v125, &v151);
                      if (SHIBYTE(v151.__pn_.__r_.__value_.__r.__words[2]) < 0)
                        sub_23941A7F8(&pn, v151.__pn_.__r_.__value_.__l.__data_, v151.__pn_.__r_.__value_.__l.__size_);
                      else
                        pn = v151.__pn_;
                      v65 = sub_23994B188((uint64_t)&pn, (uint64_t)a3, *(_DWORD *)(a4 + 4));
                      if (SHIBYTE(pn.__r_.__value_.__r.__words[2]) < 0)
                      {
                        operator delete(pn.__r_.__value_.__l.__data_);
                        if ((SHIBYTE(v151.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                        {
LABEL_112:
                          if ((SBYTE7(v130) & 0x80000000) == 0)
                            goto LABEL_113;
                          goto LABEL_152;
                        }
                      }
                      else if ((SHIBYTE(v151.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                      {
                        goto LABEL_112;
                      }
                      operator delete(v151.__pn_.__r_.__value_.__l.__data_);
                      if ((SBYTE7(v130) & 0x80000000) == 0)
                      {
LABEL_113:
                        if ((SHIBYTE(v126) & 0x80000000) == 0)
                          goto LABEL_114;
                        goto LABEL_153;
                      }
LABEL_152:
                      operator delete(__p[0]);
                      if ((SHIBYTE(v126) & 0x80000000) == 0)
                      {
LABEL_114:
                        if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                          goto LABEL_115;
                        goto LABEL_96;
                      }
LABEL_153:
                      operator delete(v125[0]);
                      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                      {
LABEL_115:
                        if (!v65)
                          return 0;
                        goto LABEL_116;
                      }
LABEL_96:
                      operator delete(__dst.__r_.__value_.__l.__data_);
                      if (!v65)
                        return 0;
LABEL_116:
                      v124 = 1;
                      goto LABEL_117;
                    }
                  }
                  memmove(v64, v63.__data_, v63.__size_);
                  goto LABEL_102;
                }
              }
              memmove(v38, v37.__data_, v37.__size_);
              goto LABEL_61;
            }
          }
          memmove(v24, v21, v23);
          goto LABEL_37;
        }
      }
      memmove(p_dst, v10, v12);
      goto LABEL_22;
    }
    *(_OWORD *)__p = 0u;
    v130 = 0u;
    v131 = 0u;
    v132 = 0u;
    v133 = 0u;
    v134 = 0u;
    v135 = 0u;
    v136 = 0u;
    v137 = 0u;
    v138 = 0u;
    v139 = 0u;
    v140 = 0u;
    v141 = 0u;
    v142 = 0u;
    v143 = 0u;
    v144 = &v145;
    v145 = 0;
    v146 = 0;
    v147 = 0;
    v148 = 0;
    v149 = 0;
    v150 = 1;
    sub_239946C24(a1, (uint64_t)__p, (_BYTE *)a4, 0);
    v124 = sub_23994C324(v6, (uint64_t)__p, 0);
  }
  sub_239955BE0((uint64_t)__p);
  if (*(_BYTE *)(a4 + 2))
    goto LABEL_14;
LABEL_117:
  v70 = off_256934448[0];
  v71 = strlen(off_256934448[0]);
  if (v71 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v72 = v71;
  if (v71 >= 0x17)
  {
    v74 = (v71 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v71 | 7) != 0x17)
      v74 = v71 | 7;
    v75 = v74 + 1;
    v73 = (std::string *)operator new(v74 + 1);
    __dst.__r_.__value_.__l.__size_ = v72;
    __dst.__r_.__value_.__r.__words[2] = v75 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v73;
    goto LABEL_124;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v71;
  v73 = &__dst;
  if (v71)
LABEL_124:
    memmove(v73, v70, v72);
  v73->__r_.__value_.__s.__data_[v72] = 0;
  v76 = (uint64_t **)(v6 + 80);
  __p[0] = 0;
  __p[1] = 0;
  *(_QWORD *)&v130 = 0;
  v77 = sub_23958C0D8(v76, (uint64_t)__p, (unsigned __int8 *)&__dst);
  if (SBYTE7(v130) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_127:
      if (v77 == -1)
        return 0;
      goto LABEL_131;
    }
  }
  else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_127;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
  if (v77 == -1)
    return 0;
LABEL_131:
  v78 = off_256934458;
  v79 = strlen(off_256934458);
  if (v79 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v80 = v79;
  if (v79 >= 0x17)
  {
    v82 = (v79 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v79 | 7) != 0x17)
      v82 = v79 | 7;
    v83 = v82 + 1;
    v81 = (std::string *)operator new(v82 + 1);
    __dst.__r_.__value_.__l.__size_ = v80;
    __dst.__r_.__value_.__r.__words[2] = v83 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v81;
    goto LABEL_138;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v79;
  v81 = &__dst;
  if (v79)
LABEL_138:
    memmove(v81, v78, v80);
  v81->__r_.__value_.__s.__data_[v80] = 0;
  __p[1] = 0;
  *(_QWORD *)&v130 = 0;
  __p[0] = &__p[1];
  v84 = sub_23958C234(v76, (uint64_t)__p, (unsigned __int8 *)&__dst);
  sub_23958B6B4((uint64_t)__p, (char *)__p[1]);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (v84 != -1)
      goto LABEL_141;
  }
  else if (v84 != -1)
  {
LABEL_141:
    v85 = &(*v76)[2 * v84];
    v86 = *v85;
    v87 = (std::__shared_weak_count *)v85[1];
    if (!v87)
      goto LABEL_146;
    v88 = (unint64_t *)&v87->__shared_owners_;
    do
      v89 = __ldxr(v88);
    while (__stxr(v89 + 1, v88));
    do
      v90 = __ldaxr(v88);
    while (__stlxr(v90 - 1, v88));
    if (!v90)
    {
      ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
      std::__shared_weak_count::__release_weak(v87);
      v91 = *(uint64_t ***)(v86 + 40);
      if (v91[2])
        return v124;
    }
    else
    {
LABEL_146:
      v91 = *(uint64_t ***)(v86 + 40);
      if (v91[2])
        return v124;
    }
    if (a3[1] != *a3)
    {
      v93 = &(*v76)[2 * v77];
      v94 = *v93;
      v95 = (std::__shared_weak_count *)v93[1];
      if (v95)
      {
        v96 = (unint64_t *)&v95->__shared_owners_;
        do
          v97 = __ldxr(v96);
        while (__stxr(v97 + 1, v96));
        do
          v98 = __ldaxr(v96);
        while (__stlxr(v98 - 1, v96));
        if (!v98)
        {
          ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
          std::__shared_weak_count::__release_weak(v95);
        }
      }
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v94 + 16))(v94))
      {
        v100 = *a3;
        v99 = a3[1];
        v101 = &(*v76)[2 * v77];
        v102 = *v101;
        v103 = (std::__shared_weak_count *)v101[1];
        if (v103)
        {
          v104 = (unint64_t *)&v103->__shared_owners_;
          do
            v105 = __ldxr(v104);
          while (__stxr(v105 + 1, v104));
          do
            v106 = __ldaxr(v104);
          while (__stlxr(v106 - 1, v104));
          if (!v106)
          {
            ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
            std::__shared_weak_count::__release_weak(v103);
          }
        }
        v107 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v102 + 16))(v102);
        v108 = (uint64_t *)a3[6];
        if (v108 != a3 + 7)
        {
          v109 = 0xAAAAAAAAAAAAAAABLL * ((v99 - v100) >> 4);
          if (v107 < v109)
            LOWORD(v109) = v107;
          v110 = (unsigned __int16)v109;
          v111 = v91 + 1;
          do
          {
            v112 = *((unsigned __int16 *)v108 + 28);
            if (v110 > v112)
            {
              v113 = *v111;
              v114 = v91 + 1;
              v115 = v91 + 1;
              if (*v111)
              {
                while (1)
                {
                  while (1)
                  {
                    v115 = (uint64_t **)v113;
                    v116 = *((unsigned __int16 *)v113 + 16);
                    if (v112 >= v116)
                      break;
                    v113 = *v115;
                    v114 = v115;
                    if (!*v115)
                      goto LABEL_183;
                  }
                  if (v116 >= v112)
                    break;
                  v113 = v115[1];
                  if (!v113)
                  {
                    v114 = v115 + 1;
                    goto LABEL_183;
                  }
                }
                v117 = (char *)v115;
              }
              else
              {
LABEL_183:
                v117 = (char *)operator new(0x40uLL);
                *((_WORD *)v117 + 16) = v112;
                *((_QWORD *)v117 + 6) = 0;
                *((_QWORD *)v117 + 7) = 0;
                *((_QWORD *)v117 + 5) = 0;
                *(_QWORD *)v117 = 0;
                *((_QWORD *)v117 + 1) = 0;
                *((_QWORD *)v117 + 2) = v115;
                *v114 = (uint64_t *)v117;
                v118 = (uint64_t *)**v91;
                v119 = (uint64_t *)v117;
                if (v118)
                {
                  *v91 = v118;
                  v119 = *v114;
                }
                sub_2394213B8(v91[1], v119);
                v91[2] = (uint64_t *)((char *)v91[2] + 1);
              }
              std::string::operator=((std::string *)(v117 + 40), (const std::string *)(v108 + 4));
            }
            v120 = (uint64_t *)v108[1];
            if (v120)
            {
              do
              {
                v121 = v120;
                v120 = (uint64_t *)*v120;
              }
              while (v120);
            }
            else
            {
              do
              {
                v121 = (uint64_t *)v108[2];
                v8 = *v121 == (_QWORD)v108;
                v108 = v121;
              }
              while (!v8);
            }
            v108 = v121;
          }
          while (v121 != a3 + 7);
        }
      }
    }
    return v124;
  }
  return 0;
}

void sub_23994B038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  operator delete(__p);
  if (a31 < 0)
  {
    operator delete(a26);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

BOOL sub_23994B188(uint64_t a1, uint64_t a2, int a3)
{
  int v5;
  uint64_t v6;
  std::string *v7;
  std::locale::__imp *v8;
  std::locale::__imp *v9;
  const std::locale::facet *v10;
  unsigned __int8 v11;
  _QWORD *v12;
  char *i;
  char *v14;
  uint64_t *v15;
  char *v16;
  __int128 v17;
  _WORD **v18;
  uint64_t v19;
  uint64_t v24;
  int v25;
  std::__fs::filesystem::path::__string_view v27;
  std::string *v28;
  std::__fs::filesystem::path::__string_view v33;
  std::string *v34;
  std::__fs::filesystem::path::__string_view v35;
  std::string *p_p;
  std::basic_string_view<_CharT, _Traits>::size_type v37;
  std::basic_string_view<_CharT, _Traits>::size_type v38;
  int v39;
  std::string *v40;
  uint64_t v41;
  const void **v42;
  __int128 v43;
  std::__fs::filesystem::path::__string_view v44;
  std::string *v45;
  std::__fs::filesystem::path::__string_view v46;
  std::string *v47;
  std::__fs::filesystem::path::__string_view v48;
  std::string *v49;
  unint64_t v50;
  __int128 v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  std::basic_string_view<_CharT, _Traits>::size_type v57;
  std::basic_string_view<_CharT, _Traits>::size_type v58;
  int v59;
  std::string *v60;
  uint64_t v61;
  std::basic_string_view<_CharT, _Traits>::size_type v62;
  std::basic_string_view<_CharT, _Traits>::size_type v63;
  int v64;
  std::string *v65;
  uint64_t v66;
  std::basic_string_view<_CharT, _Traits>::size_type v67;
  std::basic_string_view<_CharT, _Traits>::size_type v68;
  int v69;
  std::string *v70;
  uint64_t v71;
  std::basic_string_view<_CharT, _Traits>::size_type v72;
  std::basic_string_view<_CharT, _Traits>::size_type v73;
  int v74;
  std::string *v75;
  uint64_t v76;
  std::basic_string_view<_CharT, _Traits>::size_type v77;
  std::basic_string_view<_CharT, _Traits>::size_type v78;
  int v79;
  std::string *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  _BOOL8 v85;
  int v87;
  uint64_t v89;
  int v90;
  std::string v91;
  std::__fs::filesystem::path v92;
  std::__fs::filesystem::path __dst;
  std::string v94;
  std::string __p;
  _QWORD **v96;
  _QWORD *v97;
  uint64_t v98;
  _WORD *v99;
  uint64_t v100;
  uint64_t v101;
  std::locale v102;
  uint64_t v103;
  void *v104;
  char v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  char *v110;
  unint64_t v111;
  void *v112[2];
  uint64_t v113;
  std::__fs::filesystem::path v114;
  std::runtime_error v115;
  _QWORD v116[2];
  _BYTE v117[408];
  _QWORD v118[22];

  v118[19] = *MEMORY[0x24BDAC8D0];
  if (!a3)
  {
    MEMORY[0x23B83DB6C](&v115, "Invalid image loading mode: UNKNOWN");
    std::runtime_error::~runtime_error(&v115);
  }
  sub_2399464A4(v116);
  v5 = *(_DWORD *)&v117[*(_QWORD *)(v116[0] - 24) + 16] & 5;
  if (v5)
    goto LABEL_228;
  v87 = *(_DWORD *)&v117[*(_QWORD *)(v116[0] - 24) + 16] & 5;
  sub_23994E4DC((uint64_t *)a2);
  memset(&v114, 0, sizeof(v114));
  v6 = *(unsigned __int8 *)(a1 + 23);
  if ((v6 & 0x80u) == 0)
    v7 = (std::string *)a1;
  else
    v7 = *(std::string **)a1;
  if ((v6 & 0x80u) != 0)
    v6 = *(_QWORD *)(a1 + 8);
  sub_23948900C(&v114.__pn_, v7, (std::string *)((char *)v7 + v6));
  v112[1] = 0;
  v113 = 0;
  v109 = 0;
  v110 = 0;
  v111 = 0;
  v112[0] = 0;
  v107 = 0uLL;
  v108 = 0;
  v8 = (std::locale::__imp *)*MEMORY[0x24BEDB7F8];
  v89 = MEMORY[0x24BEDB848] + 16;
  v9 = *(std::locale::__imp **)(MEMORY[0x24BEDB7F8] + 24);
  while (1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v116 + *(_QWORD *)(v116[0] - 24)));
    v10 = std::locale::use_facet(&v102, MEMORY[0x24BEDB350]);
    v11 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 10);
    std::locale::~locale(&v102);
    v12 = sub_23955D1B4(v116, (uint64_t)v112, v11);
    if ((*((_BYTE *)v12 + *(_QWORD *)(*v12 - 24) + 32) & 5) != 0)
      break;
    sub_23955C9D0((uint64_t)&v102, (uint64_t)v112, 8);
    v99 = 0;
    v100 = 0;
    v101 = 0;
    sub_23955CC24((uint64_t *)&v102, (uint64_t)&v99);
    v14 = v109;
    for (i = v110; i != v14; i -= 24)
    {
      if (*(i - 1) < 0)
        operator delete(*((void **)i - 3));
    }
    while (1)
    {
      v110 = v14;
      v15 = sub_23955CC24((uint64_t *)&v102, (uint64_t)&v107);
      if ((*((_BYTE *)v15 + *(_QWORD *)(*v15 - 24) + 32) & 5) != 0)
        break;
      v16 = v110;
      if ((unint64_t)v110 >= v111)
      {
        v14 = sub_23959AE70(&v109, (uint64_t)&v107);
      }
      else
      {
        if (SHIBYTE(v108) < 0)
        {
          sub_23941A7F8(v110, (void *)v107, *((unint64_t *)&v107 + 1));
        }
        else
        {
          v17 = v107;
          *((_QWORD *)v110 + 2) = v108;
          *(_OWORD *)v16 = v17;
        }
        v14 = v16 + 24;
        v110 = v14;
      }
    }
    if ((SHIBYTE(v101) & 0x80000000) == 0)
    {
      v18 = &v99;
      switch(HIBYTE(v101))
      {
        case 4:
          if ((_DWORD)v99 == 1836216174 || (_DWORD)v99 == 1886221666)
            goto LABEL_97;
          if ((_DWORD)v99 == 1886611812)
            goto LABEL_116;
          goto LABEL_11;
        case 6:
          if ((_DWORD)v99 == 1836541294 && WORD2(v99) == 27764)
            goto LABEL_112;
          if ((_DWORD)v99 == 1601200493 && WORD2(v99) == 25675)
            goto LABEL_120;
          if ((_DWORD)v99 == 1601200493 && WORD2(v99) == 28513)
            goto LABEL_124;
          if ((_DWORD)v99 != 1601200493 || WORD2(v99) != 29264)
            goto LABEL_11;
          goto LABEL_92;
        case 8:
          if (v99 == (_WORD *)0x706D75625F70616DLL)
            goto LABEL_97;
          goto LABEL_11;
        case 0xC:
          goto LABEL_66;
        default:
          goto LABEL_13;
      }
    }
    v19 = v100;
    if (v100 == 4)
    {
      if (*(_DWORD *)v99 == 1836216174 || (v19 = v100, *(_DWORD *)v99 == 1886221666))
      {
LABEL_97:
        v35 = std::__fs::filesystem::path::__parent_path(&v114);
        if (v35.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v35.__size_ >= 0x17)
        {
          v37 = (v35.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v35.__size_ | 7) != 0x17)
            v37 = v35.__size_ | 7;
          v38 = v37 + 1;
          p_p = (std::string *)operator new(v37 + 1);
          __p.__r_.__value_.__r.__words[2] = v38 | 0x8000000000000000;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
          __p.__r_.__value_.__l.__size_ = v35.__size_;
        }
        else
        {
          *((_BYTE *)&__p.__r_.__value_.__s + 23) = v35.__size_;
          p_p = &__p;
          if (!v35.__size_)
            goto LABEL_105;
        }
        memmove(p_p, v35.__data_, v35.__size_);
LABEL_105:
        p_p->__r_.__value_.__s.__data_[v35.__size_] = 0;
        v91 = __p;
        memset(&__p, 0, sizeof(__p));
        v39 = *(v110 - 1);
        if (v39 >= 0)
          v40 = (std::string *)(v110 - 24);
        else
          v40 = (std::string *)*((_QWORD *)v110 - 3);
        v41 = *((_QWORD *)v110 - 2);
        if (v39 >= 0)
          v41 = *(v110 - 1);
        sub_23948900C(&__p, v40, (std::string *)((char *)v40 + v41));
        sub_239498A04((std::__fs::filesystem::path *)&__p, (uint64_t)&v91, &v92);
        if (SHIBYTE(v92.__pn_.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(&__dst, v92.__pn_.__r_.__value_.__l.__data_, v92.__pn_.__r_.__value_.__l.__size_);
        else
          __dst = v92;
        v90 = 2;
        sub_23994E5CC(a2, (uint64_t)&__dst, &v90, a3);
        goto LABEL_207;
      }
    }
    else if (v100 == 6)
    {
      if (*(_DWORD *)v99 == 1836541294 && v99[2] == 27764)
      {
LABEL_112:
        v42 = (const void **)v109;
        if (v109[23] < 0)
        {
          sub_23941A7F8(&v94, *(void **)v109, *((_QWORD *)v109 + 1));
        }
        else
        {
          v43 = *(_OWORD *)v109;
          v94.__r_.__value_.__r.__words[2] = *((_QWORD *)v109 + 2);
          *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v43;
        }
        if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(&__p, v94.__r_.__value_.__l.__data_, v94.__r_.__value_.__l.__size_);
        else
          __p = v94;
        v97 = 0;
        v98 = 0;
        v96 = &v97;
        v50 = *(_QWORD *)(a2 + 8);
        if (v50 >= *(_QWORD *)(a2 + 16))
        {
          *(_QWORD *)(a2 + 8) = sub_239955E98((void **)a2, (uint64_t)&__p);
          sub_239421038((uint64_t)&v96, v97);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_190;
        }
        else
        {
          v51 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(_QWORD *)(v50 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)v50 = v51;
          memset(&__p, 0, sizeof(__p));
          *(_QWORD *)(v50 + 24) = v96;
          v52 = v97;
          *(_QWORD *)(v50 + 32) = v97;
          v53 = v50 + 32;
          v54 = v98;
          *(_QWORD *)(v50 + 40) = v98;
          if (v54)
          {
            v52[2] = v53;
            v96 = &v97;
            v97 = 0;
            v98 = 0;
          }
          else
          {
            *(_QWORD *)(v50 + 24) = v53;
          }
          *(_QWORD *)(a2 + 8) = v50 + 48;
          sub_239421038((uint64_t)&v96, v97);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          {
LABEL_190:
            operator delete(__p.__r_.__value_.__l.__data_);
            if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
LABEL_191:
              operator delete(v94.__r_.__value_.__l.__data_);
LABEL_137:
            v56 = *(_QWORD *)a2;
            v55 = *(_QWORD *)(a2 + 8);
            __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v42;
            *((_WORD *)sub_23958C73C((uint64_t **)(a2 + 48), v42, (uint64_t)&unk_239EC6E98, (__int128 **)&__p) + 28) = -1 - 21845 * ((v55 - v56) >> 4);
            goto LABEL_11;
          }
        }
        if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_191;
        goto LABEL_137;
      }
      if (*(_DWORD *)v99 == 1601200493 && v99[2] == 25675)
      {
LABEL_120:
        v46 = std::__fs::filesystem::path::__parent_path(&v114);
        if (v46.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v46.__size_ >= 0x17)
        {
          v67 = (v46.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v46.__size_ | 7) != 0x17)
            v67 = v46.__size_ | 7;
          v68 = v67 + 1;
          v47 = (std::string *)operator new(v67 + 1);
          __p.__r_.__value_.__r.__words[2] = v68 | 0x8000000000000000;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v47;
          __p.__r_.__value_.__l.__size_ = v46.__size_;
        }
        else
        {
          *((_BYTE *)&__p.__r_.__value_.__s + 23) = v46.__size_;
          v47 = &__p;
          if (!v46.__size_)
            goto LABEL_164;
        }
        memmove(v47, v46.__data_, v46.__size_);
LABEL_164:
        v47->__r_.__value_.__s.__data_[v46.__size_] = 0;
        v91 = __p;
        memset(&__p, 0, sizeof(__p));
        v69 = *(v110 - 1);
        if (v69 >= 0)
          v70 = (std::string *)(v110 - 24);
        else
          v70 = (std::string *)*((_QWORD *)v110 - 3);
        v71 = *((_QWORD *)v110 - 2);
        if (v69 >= 0)
          v71 = *(v110 - 1);
        sub_23948900C(&__p, v70, (std::string *)((char *)v70 + v71));
        sub_239498A04((std::__fs::filesystem::path *)&__p, (uint64_t)&v91, &v92);
        if (SHIBYTE(v92.__pn_.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(&__dst, v92.__pn_.__r_.__value_.__l.__data_, v92.__pn_.__r_.__value_.__l.__size_);
        else
          __dst = v92;
        v90 = 1;
        sub_23994E5CC(a2, (uint64_t)&__dst, &v90, a3);
        goto LABEL_207;
      }
    }
    if (v19 == 8)
    {
      if (*(_QWORD *)v99 == 0x706D75625F70616DLL)
        goto LABEL_97;
      v19 = v100;
    }
    if (v19 == 4)
    {
      if (*(_DWORD *)v99 == 1886611812)
      {
LABEL_116:
        v44 = std::__fs::filesystem::path::__parent_path(&v114);
        if (v44.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v44.__size_ >= 0x17)
        {
          v62 = (v44.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v44.__size_ | 7) != 0x17)
            v62 = v44.__size_ | 7;
          v63 = v62 + 1;
          v45 = (std::string *)operator new(v62 + 1);
          __p.__r_.__value_.__r.__words[2] = v63 | 0x8000000000000000;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v45;
          __p.__r_.__value_.__l.__size_ = v44.__size_;
        }
        else
        {
          *((_BYTE *)&__p.__r_.__value_.__s + 23) = v44.__size_;
          v45 = &__p;
          if (!v44.__size_)
            goto LABEL_153;
        }
        memmove(v45, v44.__data_, v44.__size_);
LABEL_153:
        v45->__r_.__value_.__s.__data_[v44.__size_] = 0;
        v91 = __p;
        memset(&__p, 0, sizeof(__p));
        v64 = *(v110 - 1);
        if (v64 >= 0)
          v65 = (std::string *)(v110 - 24);
        else
          v65 = (std::string *)*((_QWORD *)v110 - 3);
        v66 = *((_QWORD *)v110 - 2);
        if (v64 >= 0)
          v66 = *(v110 - 1);
        sub_23948900C(&__p, v65, (std::string *)((char *)v65 + v66));
        sub_239498A04((std::__fs::filesystem::path *)&__p, (uint64_t)&v91, &v92);
        if (SHIBYTE(v92.__pn_.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(&__dst, v92.__pn_.__r_.__value_.__l.__data_, v92.__pn_.__r_.__value_.__l.__size_);
        else
          __dst = v92;
        v90 = 3;
        sub_23994E5CC(a2, (uint64_t)&__dst, &v90, a3);
        goto LABEL_207;
      }
      v19 = v100;
    }
    if (v19 == 6)
    {
      if (*(_DWORD *)v99 == 1601200493 && v99[2] == 28513)
      {
LABEL_124:
        v48 = std::__fs::filesystem::path::__parent_path(&v114);
        if (v48.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v48.__size_ >= 0x17)
        {
          v72 = (v48.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v48.__size_ | 7) != 0x17)
            v72 = v48.__size_ | 7;
          v73 = v72 + 1;
          v49 = (std::string *)operator new(v72 + 1);
          __p.__r_.__value_.__r.__words[2] = v73 | 0x8000000000000000;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v49;
          __p.__r_.__value_.__l.__size_ = v48.__size_;
        }
        else
        {
          *((_BYTE *)&__p.__r_.__value_.__s + 23) = v48.__size_;
          v49 = &__p;
          if (!v48.__size_)
            goto LABEL_179;
        }
        memmove(v49, v48.__data_, v48.__size_);
LABEL_179:
        v49->__r_.__value_.__s.__data_[v48.__size_] = 0;
        v91 = __p;
        memset(&__p, 0, sizeof(__p));
        v74 = *(v110 - 1);
        if (v74 >= 0)
          v75 = (std::string *)(v110 - 24);
        else
          v75 = (std::string *)*((_QWORD *)v110 - 3);
        v76 = *((_QWORD *)v110 - 2);
        if (v74 >= 0)
          v76 = *(v110 - 1);
        sub_23948900C(&__p, v75, (std::string *)((char *)v75 + v76));
        sub_239498A04((std::__fs::filesystem::path *)&__p, (uint64_t)&v91, &v92);
        if (SHIBYTE(v92.__pn_.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(&__dst, v92.__pn_.__r_.__value_.__l.__data_, v92.__pn_.__r_.__value_.__l.__size_);
        else
          __dst = v92;
        v90 = 4;
        sub_23994E5CC(a2, (uint64_t)&__dst, &v90, a3);
        goto LABEL_207;
      }
      v19 = v100;
      if (v100 == 6 && *(_DWORD *)v99 == 1601200493 && v99[2] == 29264)
      {
LABEL_92:
        v33 = std::__fs::filesystem::path::__parent_path(&v114);
        if (v33.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v33.__size_ >= 0x17)
        {
          v77 = (v33.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v33.__size_ | 7) != 0x17)
            v77 = v33.__size_ | 7;
          v78 = v77 + 1;
          v34 = (std::string *)operator new(v77 + 1);
          __p.__r_.__value_.__r.__words[2] = v78 | 0x8000000000000000;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v34;
          __p.__r_.__value_.__l.__size_ = v33.__size_;
        }
        else
        {
          *((_BYTE *)&__p.__r_.__value_.__s + 23) = v33.__size_;
          v34 = &__p;
          if (!v33.__size_)
            goto LABEL_198;
        }
        memmove(v34, v33.__data_, v33.__size_);
LABEL_198:
        v34->__r_.__value_.__s.__data_[v33.__size_] = 0;
        v91 = __p;
        memset(&__p, 0, sizeof(__p));
        v79 = *(v110 - 1);
        if (v79 >= 0)
          v80 = (std::string *)(v110 - 24);
        else
          v80 = (std::string *)*((_QWORD *)v110 - 3);
        v81 = *((_QWORD *)v110 - 2);
        if (v79 >= 0)
          v81 = *(v110 - 1);
        sub_23948900C(&__p, v80, (std::string *)((char *)v80 + v81));
        sub_239498A04((std::__fs::filesystem::path *)&__p, (uint64_t)&v91, &v92);
        if (SHIBYTE(v92.__pn_.__r_.__value_.__r.__words[2]) < 0)
          sub_23941A7F8(&__dst, v92.__pn_.__r_.__value_.__l.__data_, v92.__pn_.__r_.__value_.__l.__size_);
        else
          __dst = v92;
        v90 = 5;
        sub_23994E5CC(a2, (uint64_t)&__dst, &v90, a3);
        goto LABEL_207;
      }
    }
    if (v19 != 12)
      goto LABEL_11;
    v18 = (_WORD **)v99;
LABEL_66:
    v24 = (uint64_t)*v18;
    v25 = *((_DWORD *)v18 + 2);
    if (v24 != 0x6174656D5F70616DLL || v25 != 1667853420)
      goto LABEL_11;
    v27 = std::__fs::filesystem::path::__parent_path(&v114);
    if (v27.__size_ > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    if (v27.__size_ >= 0x17)
    {
      v57 = (v27.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v27.__size_ | 7) != 0x17)
        v57 = v27.__size_ | 7;
      v58 = v57 + 1;
      v28 = (std::string *)operator new(v57 + 1);
      __p.__r_.__value_.__r.__words[2] = v58 | 0x8000000000000000;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v28;
      __p.__r_.__value_.__l.__size_ = v27.__size_;
    }
    else
    {
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = v27.__size_;
      v28 = &__p;
      if (!v27.__size_)
        goto LABEL_142;
    }
    memmove(v28, v27.__data_, v27.__size_);
LABEL_142:
    v28->__r_.__value_.__s.__data_[v27.__size_] = 0;
    v91 = __p;
    memset(&__p, 0, sizeof(__p));
    v59 = *(v110 - 1);
    if (v59 >= 0)
      v60 = (std::string *)(v110 - 24);
    else
      v60 = (std::string *)*((_QWORD *)v110 - 3);
    v61 = *((_QWORD *)v110 - 2);
    if (v59 >= 0)
      v61 = *(v110 - 1);
    sub_23948900C(&__p, v60, (std::string *)((char *)v60 + v61));
    sub_239498A04((std::__fs::filesystem::path *)&__p, (uint64_t)&v91, &v92);
    if (SHIBYTE(v92.__pn_.__r_.__value_.__r.__words[2]) < 0)
      sub_23941A7F8(&__dst, v92.__pn_.__r_.__value_.__l.__data_, v92.__pn_.__r_.__value_.__l.__size_);
    else
      __dst = v92;
    v90 = 6;
    sub_23994E5CC(a2, (uint64_t)&__dst, &v90, a3);
LABEL_207:
    if (SHIBYTE(__dst.__pn_.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__dst.__pn_.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v92.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_209:
        if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_213;
        goto LABEL_10;
      }
    }
    else if ((SHIBYTE(v92.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_209;
    }
    operator delete(v92.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_213:
      if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_11;
      goto LABEL_214;
    }
LABEL_10:
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v91.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_11;
LABEL_214:
    operator delete(v91.__r_.__value_.__l.__data_);
LABEL_11:
    if (SHIBYTE(v101) < 0)
      operator delete(v99);
LABEL_13:
    v102.__locale_ = v8;
    *(std::locale::__imp **)((char *)&v102.__locale_ + *((_QWORD *)v8 - 3)) = v9;
    v103 = v89;
    if (v105 < 0)
      operator delete(v104);
    std::streambuf::~streambuf();
    std::istream::~istream();
    MEMORY[0x23B83E250](&v106);
  }
  if (SHIBYTE(v108) < 0)
    operator delete((void *)v107);
  v82 = v109;
  if (v109)
  {
    v83 = v110;
    v84 = v109;
    if (v110 != v109)
    {
      do
      {
        if (*(v83 - 1) < 0)
          operator delete(*((void **)v83 - 3));
        v83 -= 24;
      }
      while (v83 != v82);
      v84 = v109;
    }
    v110 = v82;
    operator delete(v84);
  }
  if (SHIBYTE(v113) < 0)
  {
    operator delete(v112[0]);
    if (SHIBYTE(v114.__pn_.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_230;
  }
  else
  {
    if ((SHIBYTE(v114.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_227;
LABEL_230:
    operator delete(v114.__pn_.__r_.__value_.__l.__data_);
  }
LABEL_227:
  v5 = v87;
LABEL_228:
  v85 = v5 == 0;
  v116[0] = *MEMORY[0x24BEDB7E0];
  *(_QWORD *)((char *)v116 + *(_QWORD *)(v116[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7E0] + 24);
  MEMORY[0x23B83DC8C](v117);
  std::istream::~istream();
  MEMORY[0x23B83E250](v118);
  return v85;
}

void sub_23994C04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,std::locale a54)
{
  void **v54;
  uint64_t v55;

  if (a30 < 0)
  {
    operator delete(a25);
    if (a44 < 0)
    {
LABEL_3:
      operator delete(__p);
      if ((a24 & 0x80000000) == 0)
        goto LABEL_8;
LABEL_7:
      operator delete(a19);
LABEL_8:
      if (a53 < 0)
        operator delete(*(void **)(v55 + 48));
      sub_23955CB0C((uint64_t)&a54);
      if (SLOBYTE(STACK[0x22F]) < 0)
      {
        operator delete(*v54);
        sub_23941B08C((void **)&STACK[0x230]);
        if ((SLOBYTE(STACK[0x25F]) & 0x80000000) == 0)
          goto LABEL_12;
      }
      else
      {
        sub_23941B08C((void **)&STACK[0x230]);
        if ((SLOBYTE(STACK[0x25F]) & 0x80000000) == 0)
        {
LABEL_12:
          if (SLOBYTE(STACK[0x277]) < 0)
            goto LABEL_13;
          goto LABEL_16;
        }
      }
      operator delete(v54[6]);
      if (SLOBYTE(STACK[0x277]) < 0)
      {
LABEL_13:
        operator delete(v54[9]);
        sub_23955CB90(&STACK[0x288]);
        _Unwind_Resume(a1);
      }
LABEL_16:
      sub_23955CB90(&STACK[0x288]);
      _Unwind_Resume(a1);
    }
  }
  else if (a44 < 0)
  {
    goto LABEL_3;
  }
  if ((a24 & 0x80000000) == 0)
    goto LABEL_8;
  goto LABEL_7;
}

uint64_t sub_23994C314(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_23994A3C8(a1, a2, a3, a4, 0);
}

uint64_t sub_23994C31C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_23994A3C8(a1, a2, a3, a4, 1);
}

uint64_t sub_23994C324(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v6;
  char *v7;
  size_t v8;
  char *v9;
  void **p_dst;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  char *v15;
  size_t v16;
  char *v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char *v36;
  size_t v37;
  char *v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  char *v44;
  size_t v45;
  char *v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  char *v61;
  size_t v62;
  char *v63;
  void **v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  __int128 v68;
  unsigned int v69;
  char *v70;
  size_t v71;
  char *v72;
  void **v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  std::__shared_weak_count *v77;
  uint64_t v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  char *v87;
  size_t v88;
  char *v89;
  void **v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v94;
  char *v95;
  size_t v96;
  char *v97;
  void **v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  unsigned int v110;
  uint64_t v111;
  char *v112;
  size_t v113;
  char *v114;
  void **v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int v118;
  unsigned int v119;
  char *v120;
  size_t v121;
  char *v122;
  void **v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  _QWORD *v128;
  unint64_t *v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  BOOL v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  _OWORD *v140;
  unint64_t v141;
  _OWORD *v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  unint64_t v147;
  _QWORD *v148;
  char *v149;
  size_t v150;
  size_t v151;
  void *p_p;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  unsigned int v156;
  char *v157;
  size_t v158;
  size_t v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  std::__shared_weak_count *v165;
  unint64_t *v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  size_t v174;
  size_t v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  unsigned int v180;
  char *v181;
  size_t v182;
  size_t v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  const std::string *v187;
  uint64_t v188;
  std::string **v189;
  std::__shared_weak_count *v190;
  unint64_t *v191;
  unint64_t v192;
  unint64_t v193;
  char *v194;
  size_t v195;
  size_t v196;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  unsigned int v200;
  char *v201;
  size_t v202;
  size_t v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  std::__shared_weak_count *v209;
  unint64_t *v210;
  unint64_t v211;
  unint64_t v212;
  _QWORD *v213;
  char *v214;
  size_t v215;
  size_t v216;
  void *v217;
  char *v218;
  size_t v219;
  char *v220;
  void **v221;
  uint64_t v222;
  uint64_t v223;
  unsigned int v224;
  uint64_t v225;
  uint64_t v226;
  unsigned int v227;
  unsigned int v228;
  char *v229;
  size_t v230;
  char *v231;
  void **v232;
  char *v233;
  size_t v234;
  char *v235;
  void **v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t *v241;
  std::__shared_weak_count *v242;
  uint64_t v243;
  unint64_t *v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  unsigned int v248;
  unsigned int v249;
  unint64_t v250;
  _QWORD *v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unsigned int v256;
  _DWORD *v257;
  uint64_t v258;
  _OWORD *v259;
  unsigned int v260;
  uint64_t v261;
  _OWORD *v262;
  __int128 v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t *v266;
  uint64_t v267;
  std::__shared_weak_count *v268;
  unint64_t *v269;
  unint64_t v270;
  unint64_t v271;
  unint64_t v272;
  unint64_t v273;
  unint64_t v274;
  unint64_t v275;
  unint64_t v276;
  unint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  _OWORD *v284;
  __int128 *v285;
  __int128 v286;
  __int128 v287;
  unint64_t v288;
  unsigned int v289;
  _DWORD *v290;
  int v291;
  int v292;
  char *v294;
  size_t v295;
  size_t v296;
  void *v297;
  char *v298;
  size_t v299;
  char *v300;
  void **v301;
  uint64_t v302;
  uint64_t v303;
  unsigned int v304;
  uint64_t v305;
  uint64_t v306;
  unsigned int v307;
  unsigned int v308;
  char *v309;
  size_t v310;
  char *v311;
  void **v312;
  char *v313;
  size_t v314;
  char *v315;
  void **v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t *v319;
  std::__shared_weak_count *v320;
  uint64_t v321;
  unint64_t *v322;
  unint64_t v323;
  unint64_t v324;
  uint64_t v325;
  unsigned int v326;
  unsigned int v327;
  unint64_t v328;
  _QWORD *v329;
  unint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  unsigned int v334;
  _DWORD *v335;
  uint64_t v336;
  _OWORD *v337;
  unsigned int v338;
  uint64_t v339;
  _OWORD *v340;
  __int128 v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t *v344;
  uint64_t v345;
  std::__shared_weak_count *v346;
  unint64_t *v347;
  unint64_t v348;
  unint64_t v349;
  unint64_t v350;
  unint64_t v351;
  unint64_t v352;
  unint64_t v353;
  unint64_t v354;
  unint64_t v355;
  unint64_t v356;
  uint64_t v357;
  uint64_t v359;
  uint64_t v360;
  unint64_t v361;
  _OWORD *v362;
  __int128 *v363;
  __int128 v364;
  __int128 v365;
  unint64_t v366;
  unsigned int v367;
  _DWORD *v368;
  int v369;
  int v370;
  char *v371;
  size_t v372;
  char *v373;
  void **v374;
  uint64_t v375;
  uint64_t v376;
  _QWORD *v377;
  unsigned int v378;
  unsigned int v379;
  uint64_t *v380;
  uint64_t v381;
  std::__shared_weak_count *v382;
  char *v383;
  size_t v384;
  char *v385;
  void **v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t *v389;
  unint64_t *v390;
  unint64_t v391;
  unint64_t v392;
  uint64_t v393;
  unint64_t v394;
  unint64_t v395;
  uint64_t v396;
  unint64_t v397;
  uint64_t v398;
  __int128 *v399;
  _OWORD *v400;
  unint64_t v401;
  __int128 v402;
  __int16 *v403;
  _WORD *v404;
  unint64_t v405;
  __int16 v406;
  unsigned int v408;
  void *__p;
  size_t v410;
  unint64_t v411;
  unsigned int v412;
  char **__dst;
  char *v414;
  unint64_t v415;

  v6 = (uint64_t *)(a2 + 48);
  if ((a3 & 1) != 0)
  {
    v408 = sub_239961AC4(a1, (_QWORD *)a2, v6, (_QWORD *)(a2 + 144));
    if (*(_QWORD *)(a2 + 24) == *(_QWORD *)(a2 + 32))
      goto LABEL_36;
  }
  else
  {
    v408 = sub_239962D44(a1, (_QWORD *)a2, v6);
    if (*(_QWORD *)(a2 + 24) == *(_QWORD *)(a2 + 32))
      goto LABEL_36;
  }
  v412 = -1;
  v7 = off_256934400[0];
  v8 = strlen(off_256934400[0]);
  if (v8 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_525;
  v9 = (char *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    p_dst = (void **)operator new(v11 + 1);
    v414 = v9;
    v415 = v12 | 0x8000000000000000;
    __dst = (char **)p_dst;
    goto LABEL_12;
  }
  HIBYTE(v415) = v8;
  p_dst = (void **)&__dst;
  if (v8)
LABEL_12:
    memmove(p_dst, v7, (size_t)v9);
  v9[(_QWORD)p_dst] = 0;
  __p = 0;
  v410 = 0;
  v13 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v14 = v13;
  v412 = v13;
  if (SHIBYTE(v415) < 0)
  {
    operator delete(__dst);
    if (v14 == -1)
      goto LABEL_17;
  }
  else if (v13 == -1)
  {
LABEL_17:
    v15 = off_256934400[0];
    v16 = strlen(off_256934400[0]);
    if (v16 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_525;
    v17 = (char *)v16;
    if (v16 >= 0x17)
    {
      v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v16 | 7) != 0x17)
        v19 = v16 | 7;
      v20 = v19 + 1;
      v18 = (void **)operator new(v19 + 1);
      v414 = v17;
      v415 = v20 | 0x8000000000000000;
      __dst = (char **)v18;
    }
    else
    {
      HIBYTE(v415) = v16;
      v18 = (void **)&__dst;
      if (!v16)
      {
LABEL_25:
        v17[(_QWORD)v18] = 0;
        sub_239930D50((_QWORD *)a1, &v412, (uint64_t)&__dst);
        if (SHIBYTE(v415) < 0)
          operator delete(__dst);
        goto LABEL_27;
      }
    }
    memmove(v18, v15, (size_t)v17);
    goto LABEL_25;
  }
LABEL_27:
  v21 = *(_QWORD *)(a1 + 8) + 16 * v412;
  v22 = *(_QWORD **)v21;
  v23 = *(std::__shared_weak_count **)(v21 + 8);
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(p_shared_owners);
    while (__stxr(v25 + 1, p_shared_owners));
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  v27 = (((uint64_t)(*(_QWORD *)(a2 + 32) - *(_QWORD *)(a2 + 24)) >> 2) / 3uLL);
  (*(void (**)(_QWORD *, uint64_t))(*v22 + 32))(v22, v27);
  if (v27)
  {
    v29 = 0;
    v30 = 2;
    do
    {
      v31 = *(_QWORD *)(a2 + 24);
      LODWORD(v28) = *(_DWORD *)(v31 + 4 * (v30 - 2));
      DWORD1(v28) = *(_DWORD *)(v31 + 4 * (v30 - 1));
      DWORD2(v28) = *(_DWORD *)(v31 + 4 * v30);
      *(_OWORD *)(v22[5] + v29) = v28;
      v29 += 16;
      v30 += 3;
    }
    while (16 * v27 != v29);
  }
LABEL_36:
  v32 = *(_QWORD *)(a2 + 168);
  v33 = *(_QWORD *)(a2 + 176);
  v34 = *(_DWORD *)(a2 + 288);
  if (v32 == v33 || v34 != 1)
    goto LABEL_73;
  v412 = -1;
  v36 = off_256934408[0];
  v37 = strlen(off_256934408[0]);
  if (v37 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_525;
  v38 = (char *)v37;
  if (v37 >= 0x17)
  {
    v40 = (v37 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v37 | 7) != 0x17)
      v40 = v37 | 7;
    v41 = v40 + 1;
    v39 = (void **)operator new(v40 + 1);
    v414 = v38;
    v415 = v41 | 0x8000000000000000;
    __dst = (char **)v39;
    goto LABEL_48;
  }
  HIBYTE(v415) = v37;
  v39 = (void **)&__dst;
  if (v37)
LABEL_48:
    memmove(v39, v36, (size_t)v38);
  v38[(_QWORD)v39] = 0;
  __p = 0;
  v410 = 0;
  v42 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v43 = v42;
  v412 = v42;
  if (SHIBYTE(v415) < 0)
  {
    operator delete(__dst);
    if (v43 == -1)
      goto LABEL_53;
  }
  else if (v42 == -1)
  {
LABEL_53:
    v44 = off_256934408[0];
    v45 = strlen(off_256934408[0]);
    if (v45 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_525;
    v46 = (char *)v45;
    if (v45 >= 0x17)
    {
      v48 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v45 | 7) != 0x17)
        v48 = v45 | 7;
      v49 = v48 + 1;
      v47 = (void **)operator new(v48 + 1);
      v414 = v46;
      v415 = v49 | 0x8000000000000000;
      __dst = (char **)v47;
    }
    else
    {
      HIBYTE(v415) = v45;
      v47 = (void **)&__dst;
      if (!v45)
      {
LABEL_61:
        v46[(_QWORD)v47] = 0;
        sub_239930D50((_QWORD *)a1, &v412, (uint64_t)&__dst);
        if (SHIBYTE(v415) < 0)
          operator delete(__dst);
        goto LABEL_63;
      }
    }
    memmove(v47, v44, (size_t)v46);
    goto LABEL_61;
  }
LABEL_63:
  v50 = *(_QWORD *)(a1 + 8) + 16 * v412;
  v51 = *(_QWORD **)v50;
  v52 = *(std::__shared_weak_count **)(v50 + 8);
  if (v52)
  {
    v53 = (unint64_t *)&v52->__shared_owners_;
    do
      v54 = __ldxr(v53);
    while (__stxr(v54 + 1, v53));
    do
      v55 = __ldaxr(v53);
    while (__stlxr(v55 - 1, v53));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
  v56 = (((uint64_t)(*(_QWORD *)(a2 + 176) - *(_QWORD *)(a2 + 168)) >> 2) / 3uLL);
  (*(void (**)(_QWORD *, uint64_t))(*v51 + 32))(v51, v56);
  if (v56)
  {
    v58 = 0;
    v59 = 2;
    do
    {
      v60 = *(_QWORD *)(a2 + 168);
      LODWORD(v57) = *(_DWORD *)(v60 + 4 * (v59 - 2));
      DWORD1(v57) = *(_DWORD *)(v60 + 4 * (v59 - 1));
      DWORD2(v57) = *(_DWORD *)(v60 + 4 * v59);
      *(_OWORD *)(v51[5] + v58) = v57;
      v58 += 16;
      v59 += 3;
    }
    while (16 * v56 != v58);
  }
  v32 = *(_QWORD *)(a2 + 168);
  v33 = *(_QWORD *)(a2 + 176);
  v34 = *(_DWORD *)(a2 + 288);
LABEL_73:
  if (v32 == v33 || v34 != 2)
    goto LABEL_108;
  v412 = -1;
  v61 = off_256934430[0];
  v62 = strlen(off_256934430[0]);
  if (v62 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_525;
  v63 = (char *)v62;
  if (v62 >= 0x17)
  {
    v65 = (v62 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v62 | 7) != 0x17)
      v65 = v62 | 7;
    v66 = v65 + 1;
    v64 = (void **)operator new(v65 + 1);
    v414 = v63;
    v415 = v66 | 0x8000000000000000;
    __dst = (char **)v64;
    goto LABEL_82;
  }
  HIBYTE(v415) = v62;
  v64 = (void **)&__dst;
  if (v62)
LABEL_82:
    memmove(v64, v61, (size_t)v63);
  v63[(_QWORD)v64] = 0;
  __p = 0;
  v410 = 0;
  v67 = sub_2394E5F40((uint64_t **)(a1 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v69 = v67;
  v412 = v67;
  if (SHIBYTE(v415) < 0)
  {
    operator delete(__dst);
    if (v69 == -1)
      goto LABEL_87;
  }
  else if (v67 == -1)
  {
LABEL_87:
    v70 = off_256934430[0];
    v71 = strlen(off_256934430[0]);
    if (v71 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_525;
    v72 = (char *)v71;
    if (v71 >= 0x17)
    {
      v74 = (v71 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v71 | 7) != 0x17)
        v74 = v71 | 7;
      v75 = v74 + 1;
      v73 = (void **)operator new(v74 + 1);
      v414 = v72;
      v415 = v75 | 0x8000000000000000;
      __dst = (char **)v73;
    }
    else
    {
      HIBYTE(v415) = v71;
      v73 = (void **)&__dst;
      if (!v71)
      {
LABEL_95:
        v72[(_QWORD)v73] = 0;
        sub_23994E3E8((_QWORD *)a1, &v412, (uint64_t)&__dst);
        if (SHIBYTE(v415) < 0)
          operator delete(__dst);
        goto LABEL_97;
      }
    }
    memmove(v73, v70, (size_t)v72);
    goto LABEL_95;
  }
LABEL_97:
  v76 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v412);
  v78 = *v76;
  v77 = (std::__shared_weak_count *)v76[1];
  if (v77)
  {
    v79 = (unint64_t *)&v77->__shared_owners_;
    do
      v80 = __ldxr(v79);
    while (__stxr(v80 + 1, v79));
    do
      v81 = __ldaxr(v79);
    while (__stlxr(v81 - 1, v79));
    if (!v81)
    {
      ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
      std::__shared_weak_count::__release_weak(v77);
    }
  }
  v32 = *(_QWORD *)(a2 + 168);
  v33 = *(_QWORD *)(a2 + 176);
  v82 = (((v33 - v32) >> 2) / 3uLL);
  if ((((v33 - v32) >> 2) / 3uLL))
  {
    v83 = 0;
    v84 = 16 * v82;
    v85 = 2;
    do
    {
      v86 = *(_QWORD *)(a2 + 168);
      LODWORD(v68) = *(_DWORD *)(v86 + 4 * (v85 - 2));
      DWORD1(v68) = *(_DWORD *)(v86 + 4 * (v85 - 1));
      DWORD2(v68) = *(_DWORD *)(v86 + 4 * v85);
      *(_OWORD *)(*(_QWORD *)(v78 + 40) + v83) = v68;
      v83 += 16;
      v85 += 3;
    }
    while (v84 != v83);
    v32 = *(_QWORD *)(a2 + 168);
    v33 = *(_QWORD *)(a2 + 176);
  }
  v34 = *(_DWORD *)(a2 + 288);
LABEL_108:
  if (v32 == v33 || v34 != 3)
    goto LABEL_141;
  v87 = off_256934440[0];
  v88 = strlen(off_256934440[0]);
  if (v88 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_525;
  v89 = (char *)v88;
  if (v88 >= 0x17)
  {
    v91 = (v88 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v88 | 7) != 0x17)
      v91 = v88 | 7;
    v92 = v91 + 1;
    v90 = (void **)operator new(v91 + 1);
    v414 = v89;
    v415 = v92 | 0x8000000000000000;
    __dst = (char **)v90;
    goto LABEL_117;
  }
  HIBYTE(v415) = v88;
  v90 = (void **)&__dst;
  if (v88)
LABEL_117:
    memmove(v90, v87, (size_t)v89);
  v89[(_QWORD)v90] = 0;
  __p = 0;
  v410 = 0;
  v93 = sub_2394E5F40((uint64_t **)(a1 + 80), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v94 = v93;
  if (SHIBYTE(v415) < 0)
  {
    operator delete(__dst);
    if (v94 == -1)
      goto LABEL_122;
  }
  else if (v93 == -1)
  {
LABEL_122:
    v95 = off_256934440[0];
    v96 = strlen(off_256934440[0]);
    if (v96 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_525;
    v97 = (char *)v96;
    if (v96 >= 0x17)
    {
      v99 = (v96 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v96 | 7) != 0x17)
        v99 = v96 | 7;
      v100 = v99 + 1;
      v98 = (void **)operator new(v99 + 1);
      v414 = v97;
      v415 = v100 | 0x8000000000000000;
      __dst = (char **)v98;
    }
    else
    {
      HIBYTE(v415) = v96;
      v98 = (void **)&__dst;
      if (!v96)
      {
LABEL_130:
        v97[(_QWORD)v98] = 0;
        __p = 0;
        v410 = 0;
        v94 = sub_239932184(a1 + 80, (uint64_t)&__p, (uint64_t)&__dst);
        if (SHIBYTE(v415) < 0)
          operator delete(__dst);
        goto LABEL_132;
      }
    }
    memmove(v98, v95, (size_t)v97);
    goto LABEL_130;
  }
LABEL_132:
  v101 = *(_QWORD *)(a1 + 80) + 16 * v94;
  v102 = *(_QWORD **)v101;
  v103 = *(std::__shared_weak_count **)(v101 + 8);
  if (v103)
  {
    v104 = (unint64_t *)&v103->__shared_owners_;
    do
      v105 = __ldxr(v104);
    while (__stxr(v105 + 1, v104));
    do
      v106 = __ldaxr(v104);
    while (__stlxr(v106 - 1, v104));
    if (!v106)
    {
      ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
      std::__shared_weak_count::__release_weak(v103);
    }
  }
  v107 = (((uint64_t)(*(_QWORD *)(a2 + 176) - *(_QWORD *)(a2 + 168)) >> 2) / 3uLL);
  (*(void (**)(_QWORD *, uint64_t))(*v102 + 32))(v102, v107);
  if (v107)
  {
    v109 = 0;
    v110 = 2;
    do
    {
      v111 = *(_QWORD *)(a2 + 168);
      LODWORD(v108) = *(_DWORD *)(v111 + 4 * (v110 - 2));
      DWORD1(v108) = *(_DWORD *)(v111 + 4 * (v110 - 1));
      DWORD2(v108) = *(_DWORD *)(v111 + 4 * v110);
      *(_OWORD *)(v102[5] + v109) = v108;
      v109 += 16;
      v110 += 3;
    }
    while (16 * v107 != v109);
  }
LABEL_141:
  if (*(_QWORD *)(a2 + 192) == *(_QWORD *)(a2 + 200))
    goto LABEL_185;
  v112 = off_256934438[0];
  v113 = strlen(off_256934438[0]);
  if (v113 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_525;
  v114 = (char *)v113;
  if (v113 >= 0x17)
  {
    v116 = (v113 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v113 | 7) != 0x17)
      v116 = v113 | 7;
    v117 = v116 + 1;
    v115 = (void **)operator new(v116 + 1);
    v414 = v114;
    v415 = v117 | 0x8000000000000000;
    __dst = (char **)v115;
    goto LABEL_149;
  }
  HIBYTE(v415) = v113;
  v115 = (void **)&__dst;
  if (v113)
LABEL_149:
    memmove(v115, v112, (size_t)v114);
  v114[(_QWORD)v115] = 0;
  __p = 0;
  v118 = sub_2394E5C88((uint64_t **)(a1 + 80), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v119 = v118;
  if (SHIBYTE(v415) < 0)
  {
    operator delete(__dst);
    if (v119 != -1)
      goto LABEL_164;
  }
  else if (v118 != -1)
  {
    goto LABEL_164;
  }
  v120 = off_256934438[0];
  v121 = strlen(off_256934438[0]);
  if (v121 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_525;
  v122 = (char *)v121;
  if (v121 >= 0x17)
  {
    v124 = (v121 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v121 | 7) != 0x17)
      v124 = v121 | 7;
    v125 = v124 + 1;
    v123 = (void **)operator new(v124 + 1);
    v414 = v122;
    v415 = v125 | 0x8000000000000000;
    __dst = (char **)v123;
    goto LABEL_161;
  }
  HIBYTE(v415) = v121;
  v123 = (void **)&__dst;
  if (v121)
LABEL_161:
    memmove(v123, v120, (size_t)v122);
  v122[(_QWORD)v123] = 0;
  __p = 0;
  v119 = sub_2394E4504(a1 + 80, (uint64_t)&__p, (uint64_t)&__dst);
  if (SHIBYTE(v415) < 0)
    operator delete(__dst);
LABEL_164:
  v126 = *(_QWORD *)(a1 + 80) + 16 * v119;
  v128 = *(_QWORD **)v126;
  v127 = *(std::__shared_weak_count **)(v126 + 8);
  if (v127)
  {
    v129 = (unint64_t *)&v127->__shared_owners_;
    do
      v130 = __ldxr(v129);
    while (__stxr(v130 + 1, v129));
    do
      v131 = __ldaxr(v129);
    while (__stlxr(v131 - 1, v129));
    if (!v131)
    {
      ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
      std::__shared_weak_count::__release_weak(v127);
    }
  }
  v132 = *(_QWORD *)(a2 + 200) - *(_QWORD *)(a2 + 192);
  v133 = (v132 >> 3);
  (*(void (**)(_QWORD *, unint64_t))(*v128 + 32))(v128, v133);
  if ((v132 & 0x7FFFFFFF8) != 0)
  {
    v134 = *(_QWORD *)(a2 + 192);
    v135 = v128[5];
    if (v133 < 8 || (v135 < v134 + 8 * v133 ? (v136 = v134 >= v135 + 8 * v133) : (v136 = 1), !v136))
    {
      v139 = 0;
LABEL_182:
      v146 = 2 * v139;
      v147 = v139 - v133;
      v148 = (_QWORD *)(v135 + 8 * v139);
      do
      {
        *v148++ = *(_QWORD *)(v134 + 4 * (v146 & 0xFFFFFFFE));
        v146 += 2;
        v136 = __CFADD__(v147++, 1);
      }
      while (!v136);
      goto LABEL_185;
    }
    v137 = 0;
    v138 = (v132 >> 3) & 7;
    v139 = v133 - v138;
    v140 = (_OWORD *)(v135 + 32);
    v141 = v133 - v138;
    do
    {
      v142 = (_OWORD *)(v134 + 4 * (v137 & 0xFFFFFFF0));
      v143 = v142[1];
      v145 = v142[2];
      v144 = v142[3];
      *(v140 - 2) = *v142;
      *(v140 - 1) = v143;
      *v140 = v145;
      v140[1] = v144;
      v140 += 4;
      v137 += 16;
      v141 -= 8;
    }
    while (v141);
    if (v138)
      goto LABEL_182;
  }
LABEL_185:
  if (*(_QWORD *)(a2 + 216) == *(_QWORD *)(a2 + 224))
    goto LABEL_219;
  v149 = off_256934448[0];
  v150 = strlen(off_256934448[0]);
  if (v150 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_526;
  v151 = v150;
  if (v150 >= 0x17)
  {
    v153 = (v150 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v150 | 7) != 0x17)
      v153 = v150 | 7;
    v154 = v153 + 1;
    p_p = operator new(v153 + 1);
    v410 = v151;
    v411 = v154 | 0x8000000000000000;
    __p = p_p;
    goto LABEL_193;
  }
  HIBYTE(v411) = v150;
  p_p = &__p;
  if (v150)
LABEL_193:
    memmove(p_p, v149, v151);
  *((_BYTE *)p_p + v151) = 0;
  v155 = (_QWORD *)(a1 + 80);
  __dst = 0;
  v414 = 0;
  v415 = 0;
  v156 = sub_23958C0D8((uint64_t **)(a1 + 80), (uint64_t)&__dst, (unsigned __int8 *)&__p);
  if (SHIBYTE(v415) < 0)
  {
    operator delete(__dst);
    if ((SHIBYTE(v411) & 0x80000000) == 0)
    {
LABEL_196:
      if (v156 != -1)
        goto LABEL_210;
      goto LABEL_200;
    }
  }
  else if ((SHIBYTE(v411) & 0x80000000) == 0)
  {
    goto LABEL_196;
  }
  operator delete(__p);
  if (v156 != -1)
    goto LABEL_210;
LABEL_200:
  v157 = off_256934448[0];
  v158 = strlen(off_256934448[0]);
  if (v158 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_526;
  v159 = v158;
  if (v158 >= 0x17)
  {
    v161 = (v158 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v158 | 7) != 0x17)
      v161 = v158 | 7;
    v162 = v161 + 1;
    v160 = operator new(v161 + 1);
    v410 = v159;
    v411 = v162 | 0x8000000000000000;
    __p = v160;
    goto LABEL_207;
  }
  HIBYTE(v411) = v158;
  v160 = &__p;
  if (v158)
LABEL_207:
    memmove(v160, v157, v159);
  *((_BYTE *)v160 + v159) = 0;
  __dst = 0;
  v414 = 0;
  v415 = 0;
  v156 = sub_23958964C(a1 + 80, (uint64_t)&__dst, (uint64_t)&__p);
  if ((SHIBYTE(v415) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v411) & 0x80000000) == 0)
      goto LABEL_210;
LABEL_320:
    operator delete(__p);
    v237 = *v155 + 16 * v156;
    v164 = *(_QWORD **)v237;
    v165 = *(std::__shared_weak_count **)(v237 + 8);
    if (v165)
      goto LABEL_211;
    goto LABEL_216;
  }
  operator delete(__dst);
  if (SHIBYTE(v411) < 0)
    goto LABEL_320;
LABEL_210:
  v163 = *v155 + 16 * v156;
  v164 = *(_QWORD **)v163;
  v165 = *(std::__shared_weak_count **)(v163 + 8);
  if (v165)
  {
LABEL_211:
    v166 = (unint64_t *)&v165->__shared_owners_;
    do
      v167 = __ldxr(v166);
    while (__stxr(v167 + 1, v166));
    do
      v168 = __ldaxr(v166);
    while (__stlxr(v168 - 1, v166));
    if (!v168)
    {
      ((void (*)(std::__shared_weak_count *))v165->__on_zero_shared)(v165);
      std::__shared_weak_count::__release_weak(v165);
    }
  }
LABEL_216:
  v169 = -1431655765 * ((*(_QWORD *)(a2 + 224) - *(_QWORD *)(a2 + 216)) >> 3);
  (*(void (**)(_QWORD *, uint64_t))(*v164 + 32))(v164, v169);
  if ((_DWORD)v169)
  {
    v170 = 0;
    v171 = 24 * v169;
    do
    {
      std::string::operator=((std::string *)(v164[5] + v170), (const std::string *)(*(_QWORD *)(a2 + 216) + v170));
      v170 += 24;
    }
    while (v171 != v170);
  }
LABEL_219:
  v172 = *(unsigned __int8 *)(a2 + 287);
  if ((v172 & 0x80u) != 0)
    v172 = *(_QWORD *)(a2 + 272);
  if (v172)
  {
    v173 = off_256934450[0];
    v174 = strlen(off_256934450[0]);
    if (v174 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_526;
    v175 = v174;
    if (v174 >= 0x17)
    {
      v177 = (v174 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v174 | 7) != 0x17)
        v177 = v174 | 7;
      v178 = v177 + 1;
      v176 = operator new(v177 + 1);
      v410 = v175;
      v411 = v178 | 0x8000000000000000;
      __p = v176;
    }
    else
    {
      HIBYTE(v411) = v174;
      v176 = &__p;
      if (!v174)
      {
LABEL_230:
        *((_BYTE *)v176 + v175) = 0;
        v179 = (_QWORD *)(a1 + 80);
        __dst = 0;
        v414 = 0;
        v415 = 0;
        v180 = sub_23958C0D8((uint64_t **)(a1 + 80), (uint64_t)&__dst, (unsigned __int8 *)&__p);
        if (SHIBYTE(v415) < 0)
        {
          operator delete(__dst);
          if ((SHIBYTE(v411) & 0x80000000) == 0)
          {
LABEL_232:
            if (v180 != -1)
              goto LABEL_246;
            goto LABEL_236;
          }
        }
        else if ((SHIBYTE(v411) & 0x80000000) == 0)
        {
          goto LABEL_232;
        }
        operator delete(__p);
        if (v180 != -1)
          goto LABEL_246;
LABEL_236:
        v181 = off_256934450[0];
        v182 = strlen(off_256934450[0]);
        if (v182 > 0x7FFFFFFFFFFFFFF7)
          goto LABEL_526;
        v183 = v182;
        if (v182 >= 0x17)
        {
          v185 = (v182 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v182 | 7) != 0x17)
            v185 = v182 | 7;
          v186 = v185 + 1;
          v184 = operator new(v185 + 1);
          v410 = v183;
          v411 = v186 | 0x8000000000000000;
          __p = v184;
        }
        else
        {
          HIBYTE(v411) = v182;
          v184 = &__p;
          if (!v182)
          {
LABEL_244:
            *((_BYTE *)v184 + v183) = 0;
            __dst = 0;
            v414 = 0;
            v415 = 0;
            v180 = sub_23958964C(a1 + 80, (uint64_t)&__dst, (uint64_t)&__p);
            if (SHIBYTE(v415) < 0)
            {
              operator delete(__dst);
              if ((SHIBYTE(v411) & 0x80000000) == 0)
              {
LABEL_246:
                v187 = (const std::string *)(a2 + 264);
                v188 = *v179 + 16 * v180;
                v189 = *(std::string ***)v188;
                v190 = *(std::__shared_weak_count **)(v188 + 8);
                if (v190)
                {
LABEL_247:
                  v191 = (unint64_t *)&v190->__shared_owners_;
                  do
                    v192 = __ldxr(v191);
                  while (__stxr(v192 + 1, v191));
                  do
                    v193 = __ldaxr(v191);
                  while (__stlxr(v193 - 1, v191));
                  if (!v193)
                  {
                    ((void (*)(std::__shared_weak_count *))v190->__on_zero_shared)(v190);
                    std::__shared_weak_count::__release_weak(v190);
                  }
                }
LABEL_252:
                ((void (*)(std::string **, uint64_t))(*v189)[1].__r_.__value_.__l.__size_)(v189, 1);
                std::string::operator=(v189[5], v187);
                goto LABEL_253;
              }
            }
            else if ((SHIBYTE(v411) & 0x80000000) == 0)
            {
              goto LABEL_246;
            }
            operator delete(__p);
            v187 = (const std::string *)(a2 + 264);
            v238 = *v179 + 16 * v180;
            v189 = *(std::string ***)v238;
            v190 = *(std::__shared_weak_count **)(v238 + 8);
            if (v190)
              goto LABEL_247;
            goto LABEL_252;
          }
        }
        memmove(v184, v181, v183);
        goto LABEL_244;
      }
    }
    memmove(v176, v173, v175);
    goto LABEL_230;
  }
LABEL_253:
  v194 = off_256934458;
  v195 = strlen(off_256934458);
  if (v195 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_526;
  v196 = v195;
  if (v195 >= 0x17)
  {
    v198 = (v195 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v195 | 7) != 0x17)
      v198 = v195 | 7;
    v199 = v198 + 1;
    v197 = operator new(v198 + 1);
    v410 = v196;
    v411 = v199 | 0x8000000000000000;
    __p = v197;
    goto LABEL_260;
  }
  HIBYTE(v411) = v195;
  v197 = &__p;
  if (v195)
LABEL_260:
    memmove(v197, v194, v196);
  *((_BYTE *)v197 + v196) = 0;
  v414 = 0;
  v415 = 0;
  __dst = &v414;
  v200 = sub_23958C234((uint64_t **)(a1 + 80), (uint64_t)&__dst, (unsigned __int8 *)&__p);
  sub_23958B6B4((uint64_t)&__dst, v414);
  if (SHIBYTE(v411) < 0)
  {
    operator delete(__p);
    if (v200 != -1)
      goto LABEL_275;
  }
  else if (v200 != -1)
  {
    goto LABEL_275;
  }
  v201 = off_256934458;
  v202 = strlen(off_256934458);
  if (v202 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_526;
  v203 = v202;
  if (v202 >= 0x17)
  {
    v205 = (v202 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v202 | 7) != 0x17)
      v205 = v202 | 7;
    v206 = v205 + 1;
    v204 = operator new(v205 + 1);
    v410 = v203;
    v411 = v206 | 0x8000000000000000;
    __p = v204;
    goto LABEL_272;
  }
  HIBYTE(v411) = v202;
  v204 = &__p;
  if (v202)
LABEL_272:
    memmove(v204, v201, v203);
  *((_BYTE *)v204 + v203) = 0;
  v414 = 0;
  v415 = 0;
  __dst = &v414;
  v200 = sub_23958A738(a1 + 80, (uint64_t)&__dst, (uint64_t)&__p);
  sub_23958B6B4((uint64_t)&__dst, v414);
  if (SHIBYTE(v411) < 0)
    operator delete(__p);
LABEL_275:
  v207 = *(_QWORD *)(a1 + 80) + 16 * v200;
  v208 = *(_QWORD **)v207;
  v209 = *(std::__shared_weak_count **)(v207 + 8);
  if (v209)
  {
    v210 = (unint64_t *)&v209->__shared_owners_;
    do
      v211 = __ldxr(v210);
    while (__stxr(v211 + 1, v210));
    do
      v212 = __ldaxr(v210);
    while (__stlxr(v212 - 1, v210));
    if (!v212)
    {
      ((void (*)(std::__shared_weak_count *))v209->__on_zero_shared)(v209);
      std::__shared_weak_count::__release_weak(v209);
    }
  }
  (*(void (**)(_QWORD *, uint64_t))(*v208 + 32))(v208, 1);
  v213 = (_QWORD *)v208[5];
  if (v213 != (_QWORD *)(a2 + 240))
    sub_23958B714(v213, *(_QWORD **)(a2 + 240), (_QWORD *)(a2 + 248));
  if (*(_QWORD *)(a2 + 72) == *(_QWORD *)(a2 + 80))
    goto LABEL_385;
  if ((a3 & 1) == 0)
  {
    v412 = -1;
    v218 = off_256934418[0];
    v219 = strlen(off_256934418[0]);
    if (v219 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_525;
    v220 = (char *)v219;
    if (v219 >= 0x17)
    {
      v225 = (v219 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v219 | 7) != 0x17)
        v225 = v219 | 7;
      v226 = v225 + 1;
      v221 = (void **)operator new(v225 + 1);
      v414 = v220;
      v415 = v226 | 0x8000000000000000;
      __dst = (char **)v221;
    }
    else
    {
      HIBYTE(v415) = v219;
      v221 = (void **)&__dst;
      if (!v219)
      {
LABEL_306:
        v220[(_QWORD)v221] = 0;
        LODWORD(v410) = 0;
        __p = 0;
        v227 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
        v228 = v227;
        v412 = v227;
        if (SHIBYTE(v415) < 0)
        {
          operator delete(__dst);
          if (v228 != -1)
            goto LABEL_363;
        }
        else if (v227 != -1)
        {
          goto LABEL_363;
        }
        v233 = off_256934418[0];
        v234 = strlen(off_256934418[0]);
        if (v234 > 0x7FFFFFFFFFFFFFF7)
          goto LABEL_525;
        v235 = (char *)v234;
        if (v234 >= 0x17)
        {
          v264 = (v234 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v234 | 7) != 0x17)
            v264 = v234 | 7;
          v265 = v264 + 1;
          v236 = (void **)operator new(v264 + 1);
          v414 = v235;
          v415 = v265 | 0x8000000000000000;
          __dst = (char **)v236;
        }
        else
        {
          HIBYTE(v415) = v234;
          v236 = (void **)&__dst;
          if (!v234)
          {
LABEL_361:
            v235[(_QWORD)v236] = 0;
            sub_2394E42E4((_QWORD *)a1, &v412, (uint64_t)&__dst);
            if (SHIBYTE(v415) < 0)
              operator delete(__dst);
LABEL_363:
            v266 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v412);
            v267 = *v266;
            v268 = (std::__shared_weak_count *)v266[1];
            if (v268)
            {
              v269 = (unint64_t *)&v268->__shared_owners_;
              do
                v270 = __ldxr(v269);
              while (__stxr(v270 + 1, v269));
              do
                v271 = __ldaxr(v269);
              while (__stlxr(v271 - 1, v269));
              if (!v271)
              {
                ((void (*)(std::__shared_weak_count *))v268->__on_zero_shared)(v268);
                std::__shared_weak_count::__release_weak(v268);
              }
            }
            v272 = *(_QWORD *)(a2 + 72);
            v273 = (uint64_t)(*(_QWORD *)(a2 + 80) - v272) >> 2;
            v274 = (v273 * (unsigned __int128)0xAAAAAAAAAAAAAAABLL) >> 64;
            v275 = (v273 / 3);
            if (!(v273 / 3))
              goto LABEL_385;
            v276 = *(_QWORD *)(v267 + 40);
            if (v275 >= 0x10)
            {
              v277 = 0;
              v278 = v274 >> 1;
              v279 = 3 * (v278 - 1);
              if (v279 > 0xFFFFFFFD || (v279 & 0xFFFFFFFF00000000) != 0)
                goto LABEL_383;
              if (v276 >= v272 + 12 * v275 || v272 >= v276 + 12 * v275)
              {
                v281 = 0;
                v282 = v278 & 3;
                v277 = v275 - v282;
                v283 = v275 - v282;
                v284 = *(_OWORD **)(v267 + 40);
                do
                {
                  v285 = (__int128 *)(v272 + 4 * (v281 & 0xFFFFFFFC));
                  v286 = *v285;
                  v287 = v285[2];
                  v284[1] = v285[1];
                  v284[2] = v287;
                  *v284 = v286;
                  v284 += 3;
                  v281 += 12;
                  v283 -= 4;
                }
                while (v283);
                if (!v282)
                  goto LABEL_385;
                goto LABEL_383;
              }
            }
            v277 = 0;
LABEL_383:
            v288 = v275 - v277;
            v289 = 3 * v277;
            v290 = (_DWORD *)(v276 + 12 * v277 + 4);
            do
            {
              v291 = *(_DWORD *)(v272 + 4 * (v289 + 1));
              v292 = *(_DWORD *)(v272 + 4 * (v289 + 2));
              *(v290 - 1) = *(_DWORD *)(v272 + 4 * v289);
              *v290 = v291;
              v290[1] = v292;
              v289 += 3;
              v290 += 3;
              --v288;
            }
            while (v288);
            goto LABEL_385;
          }
        }
        memmove(v236, v233, (size_t)v235);
        goto LABEL_361;
      }
    }
    memmove(v221, v218, (size_t)v220);
    goto LABEL_306;
  }
  v412 = -1;
  v214 = off_256934418[0];
  v215 = strlen(off_256934418[0]);
  if (v215 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_526;
  v216 = v215;
  if (v215 >= 0x17)
  {
    v222 = (v215 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v215 | 7) != 0x17)
      v222 = v215 | 7;
    v223 = v222 + 1;
    v217 = operator new(v222 + 1);
    v410 = v216;
    v411 = v223 | 0x8000000000000000;
    __p = v217;
    goto LABEL_296;
  }
  HIBYTE(v411) = v215;
  v217 = &__p;
  if (v215)
LABEL_296:
    memmove(v217, v214, v216);
  *((_BYTE *)v217 + v216) = 0;
  __dst = 0;
  v414 = 0;
  v415 = 0;
  v224 = sub_23993A364((uint64_t **)(a1 + 56), (uint64_t)&__dst, (unsigned __int8 *)&__p);
  v412 = v224;
  if (__dst)
  {
    v414 = (char *)__dst;
    operator delete(__dst);
  }
  if (SHIBYTE(v411) < 0)
  {
    operator delete(__p);
    if (v224 != -1)
      goto LABEL_331;
  }
  else if (v224 != -1)
  {
    goto LABEL_331;
  }
  v229 = off_256934418[0];
  v230 = strlen(off_256934418[0]);
  if (v230 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_525;
  v231 = (char *)v230;
  if (v230 >= 0x17)
  {
    v239 = (v230 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v230 | 7) != 0x17)
      v239 = v230 | 7;
    v240 = v239 + 1;
    v232 = (void **)operator new(v239 + 1);
    v414 = v231;
    v415 = v240 | 0x8000000000000000;
    __dst = (char **)v232;
    goto LABEL_328;
  }
  HIBYTE(v415) = v230;
  v232 = (void **)&__dst;
  if (v230)
LABEL_328:
    memmove(v232, v229, (size_t)v231);
  v231[(_QWORD)v232] = 0;
  sub_239937414((_QWORD *)a1, &v412, (uint64_t)&__dst);
  if (SHIBYTE(v415) < 0)
    operator delete(__dst);
LABEL_331:
  v241 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v412);
  v243 = *v241;
  v242 = (std::__shared_weak_count *)v241[1];
  if (v242)
  {
    v244 = (unint64_t *)&v242->__shared_owners_;
    do
      v245 = __ldxr(v244);
    while (__stxr(v245 + 1, v244));
    do
      v246 = __ldaxr(v244);
    while (__stlxr(v246 - 1, v244));
    if (!v246)
    {
      ((void (*)(std::__shared_weak_count *))v242->__on_zero_shared)(v242);
      std::__shared_weak_count::__release_weak(v242);
    }
  }
  if (*(_QWORD *)(a1 + 160) != *(_QWORD *)(a1 + 152))
  {
    v247 = 0;
    v248 = 0;
    v249 = 0;
    do
    {
      v250 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 144) + v247);
      v251 = (_QWORD *)(*(_QWORD *)(v243 + 40) + 24 * v247);
      v252 = (uint64_t)(v251[1] - *v251) >> 2;
      if (v250 <= v252)
      {
        if (v250 < v252)
          v251[1] = *v251 + 4 * v250;
      }
      else
      {
        sub_23942CB44((uint64_t)v251, v250 - v252);
      }
      if (!(_DWORD)v250)
        goto LABEL_339;
      v253 = *(_QWORD *)(a2 + 72);
      v254 = *(_QWORD *)(*(_QWORD *)(v243 + 40) + 24 * v247);
      if (v250 >= 0x10)
      {
        v255 = 0;
        if (__CFADD__(v249, v250 - 1) || (v250 - 1) >> 32)
          goto LABEL_350;
        if (v254 - (v253 + 4 * (unint64_t)v249) >= 0x20)
        {
          v255 = v250 & 0xF8;
          v259 = (_OWORD *)(v254 + 16);
          v260 = v249;
          v261 = v255;
          do
          {
            v262 = (_OWORD *)(v253 + 4 * v260);
            v263 = v262[1];
            *(v259 - 1) = *v262;
            *v259 = v263;
            v259 += 2;
            v260 += 8;
            v261 -= 8;
          }
          while (v261);
          if (v255 == v250)
            goto LABEL_339;
          goto LABEL_350;
        }
      }
      v255 = 0;
LABEL_350:
      v256 = v249 + v255;
      v257 = (_DWORD *)(v254 + 4 * v255);
      v258 = v250 - v255;
      do
      {
        *v257++ = *(_DWORD *)(v253 + 4 * v256++);
        --v258;
      }
      while (v258);
LABEL_339:
      v249 += v250;
      v247 = ++v248;
    }
    while (v248 < (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2));
  }
LABEL_385:
  if (*(_QWORD *)(a2 + 96) == *(_QWORD *)(a2 + 104) || *(_DWORD *)(a2 + 288) != 3)
    goto LABEL_485;
  if ((a3 & 1) == 0)
  {
    v412 = -1;
    v298 = off_256934420[0];
    v299 = strlen(off_256934420[0]);
    if (v299 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_525;
    v300 = (char *)v299;
    if (v299 >= 0x17)
    {
      v305 = (v299 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v299 | 7) != 0x17)
        v305 = v299 | 7;
      v306 = v305 + 1;
      v301 = (void **)operator new(v305 + 1);
      v414 = v300;
      v415 = v306 | 0x8000000000000000;
      __dst = (char **)v301;
    }
    else
    {
      HIBYTE(v415) = v299;
      v301 = (void **)&__dst;
      if (!v299)
      {
LABEL_412:
        v300[(_QWORD)v301] = 0;
        LODWORD(v410) = 0;
        __p = 0;
        v307 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
        v308 = v307;
        v412 = v307;
        if (SHIBYTE(v415) < 0)
        {
          operator delete(__dst);
          if (v308 == -1)
            goto LABEL_421;
        }
        else if (v307 == -1)
        {
LABEL_421:
          v313 = off_256934420[0];
          v314 = strlen(off_256934420[0]);
          if (v314 > 0x7FFFFFFFFFFFFFF7)
            goto LABEL_525;
          v315 = (char *)v314;
          if (v314 >= 0x17)
          {
            v342 = (v314 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v314 | 7) != 0x17)
              v342 = v314 | 7;
            v343 = v342 + 1;
            v316 = (void **)operator new(v342 + 1);
            v414 = v315;
            v415 = v343 | 0x8000000000000000;
            __dst = (char **)v316;
          }
          else
          {
            HIBYTE(v415) = v314;
            v316 = (void **)&__dst;
            if (!v314)
            {
LABEL_461:
              v315[(_QWORD)v316] = 0;
              sub_2394E42E4((_QWORD *)a1, &v412, (uint64_t)&__dst);
              if (SHIBYTE(v415) < 0)
                operator delete(__dst);
              goto LABEL_463;
            }
          }
          memmove(v316, v313, (size_t)v315);
          goto LABEL_461;
        }
LABEL_463:
        v344 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v412);
        v345 = *v344;
        v346 = (std::__shared_weak_count *)v344[1];
        if (v346)
        {
          v347 = (unint64_t *)&v346->__shared_owners_;
          do
            v348 = __ldxr(v347);
          while (__stxr(v348 + 1, v347));
          do
            v349 = __ldaxr(v347);
          while (__stlxr(v349 - 1, v347));
          if (!v349)
          {
            ((void (*)(std::__shared_weak_count *))v346->__on_zero_shared)(v346);
            std::__shared_weak_count::__release_weak(v346);
          }
        }
        v350 = *(_QWORD *)(a2 + 96);
        v351 = (uint64_t)(*(_QWORD *)(a2 + 104) - v350) >> 2;
        v352 = (v351 * (unsigned __int128)0xAAAAAAAAAAAAAAABLL) >> 64;
        v353 = (v351 / 3);
        if (!(v351 / 3))
          goto LABEL_485;
        v354 = *(_QWORD *)(v345 + 40);
        if (v353 < 0x10)
          goto LABEL_482;
        v355 = 0;
        v356 = v352 >> 1;
        v357 = 3 * (v356 - 1);
        if (v357 > 0xFFFFFFFD || (v357 & 0xFFFFFFFF00000000) != 0)
          goto LABEL_483;
        if (v354 >= v350 + 12 * v353 || v350 >= v354 + 12 * v353)
        {
          v359 = 0;
          v360 = v356 & 3;
          v355 = v353 - v360;
          v361 = v353 - v360;
          v362 = *(_OWORD **)(v345 + 40);
          do
          {
            v363 = (__int128 *)(v350 + 4 * (v359 & 0xFFFFFFFC));
            v364 = *v363;
            v365 = v363[2];
            v362[1] = v363[1];
            v362[2] = v365;
            *v362 = v364;
            v362 += 3;
            v359 += 12;
            v361 -= 4;
          }
          while (v361);
          if (!v360)
            goto LABEL_485;
        }
        else
        {
LABEL_482:
          v355 = 0;
        }
LABEL_483:
        v366 = v353 - v355;
        v367 = 3 * v355;
        v368 = (_DWORD *)(v354 + 12 * v355 + 4);
        do
        {
          v369 = *(_DWORD *)(v350 + 4 * (v367 + 1));
          v370 = *(_DWORD *)(v350 + 4 * (v367 + 2));
          *(v368 - 1) = *(_DWORD *)(v350 + 4 * v367);
          *v368 = v369;
          v368[1] = v370;
          v367 += 3;
          v368 += 3;
          --v366;
        }
        while (v366);
        goto LABEL_485;
      }
    }
    memmove(v301, v298, (size_t)v300);
    goto LABEL_412;
  }
  v412 = -1;
  v294 = off_256934420[0];
  v295 = strlen(off_256934420[0]);
  if (v295 > 0x7FFFFFFFFFFFFFF7)
LABEL_526:
    sub_23941A5AC();
  v296 = v295;
  if (v295 >= 0x17)
  {
    v302 = (v295 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v295 | 7) != 0x17)
      v302 = v295 | 7;
    v303 = v302 + 1;
    v297 = operator new(v302 + 1);
    v410 = v296;
    v411 = v303 | 0x8000000000000000;
    __p = v297;
    goto LABEL_402;
  }
  HIBYTE(v411) = v295;
  v297 = &__p;
  if (v295)
LABEL_402:
    memmove(v297, v294, v296);
  *((_BYTE *)v297 + v296) = 0;
  __dst = 0;
  v414 = 0;
  v415 = 0;
  v304 = sub_23993A364((uint64_t **)(a1 + 56), (uint64_t)&__dst, (unsigned __int8 *)&__p);
  v412 = v304;
  if (__dst)
  {
    v414 = (char *)__dst;
    operator delete(__dst);
  }
  if (SHIBYTE(v411) < 0)
  {
    operator delete(__p);
    if (v304 != -1)
      goto LABEL_431;
  }
  else if (v304 != -1)
  {
    goto LABEL_431;
  }
  v309 = off_256934420[0];
  v310 = strlen(off_256934420[0]);
  if (v310 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_525;
  v311 = (char *)v310;
  if (v310 >= 0x17)
  {
    v317 = (v310 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v310 | 7) != 0x17)
      v317 = v310 | 7;
    v318 = v317 + 1;
    v312 = (void **)operator new(v317 + 1);
    v414 = v311;
    v415 = v318 | 0x8000000000000000;
    __dst = (char **)v312;
    goto LABEL_428;
  }
  HIBYTE(v415) = v310;
  v312 = (void **)&__dst;
  if (v310)
LABEL_428:
    memmove(v312, v309, (size_t)v311);
  v311[(_QWORD)v312] = 0;
  sub_239937414((_QWORD *)a1, &v412, (uint64_t)&__dst);
  if (SHIBYTE(v415) < 0)
    operator delete(__dst);
LABEL_431:
  v319 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v412);
  v321 = *v319;
  v320 = (std::__shared_weak_count *)v319[1];
  if (v320)
  {
    v322 = (unint64_t *)&v320->__shared_owners_;
    do
      v323 = __ldxr(v322);
    while (__stxr(v323 + 1, v322));
    do
      v324 = __ldaxr(v322);
    while (__stlxr(v324 - 1, v322));
    if (!v324)
    {
      ((void (*)(std::__shared_weak_count *))v320->__on_zero_shared)(v320);
      std::__shared_weak_count::__release_weak(v320);
    }
  }
  if (*(_QWORD *)(a1 + 160) != *(_QWORD *)(a1 + 152))
  {
    v325 = 0;
    v326 = 0;
    v327 = 0;
    do
    {
      v328 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 144) + v325);
      v329 = (_QWORD *)(*(_QWORD *)(v321 + 40) + 24 * v325);
      v330 = (uint64_t)(v329[1] - *v329) >> 2;
      if (v328 <= v330)
      {
        if (v328 < v330)
          v329[1] = *v329 + 4 * v328;
      }
      else
      {
        sub_23942CB44((uint64_t)v329, v328 - v330);
      }
      if (!(_DWORD)v328)
        goto LABEL_439;
      v331 = *(_QWORD *)(a2 + 96);
      v332 = *(_QWORD *)(*(_QWORD *)(v321 + 40) + 24 * v325);
      if (v328 >= 0x10)
      {
        v333 = 0;
        if (__CFADD__(v327, v328 - 1) || (v328 - 1) >> 32)
          goto LABEL_447;
        if (v332 - (v331 + 4 * (unint64_t)v327) >= 0x20)
        {
          v333 = v328 & 0xF8;
          v337 = (_OWORD *)(v332 + 16);
          v338 = v327;
          v339 = v333;
          do
          {
            v340 = (_OWORD *)(v331 + 4 * v338);
            v341 = v340[1];
            *(v337 - 1) = *v340;
            *v337 = v341;
            v337 += 2;
            v338 += 8;
            v339 -= 8;
          }
          while (v339);
          if (v333 == v328)
            goto LABEL_439;
          goto LABEL_447;
        }
      }
      v333 = 0;
LABEL_447:
      v334 = v327 + v333;
      v335 = (_DWORD *)(v332 + 4 * v333);
      v336 = v328 - v333;
      do
      {
        *v335++ = *(_DWORD *)(v331 + 4 * v334++);
        --v336;
      }
      while (v336);
LABEL_439:
      v327 += v328;
      v325 = ++v326;
    }
    while (v326 < (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2));
  }
LABEL_485:
  if (*(_QWORD *)(a2 + 120) == *(_QWORD *)(a2 + 128))
    return v408;
  v371 = off_256934428[0];
  v372 = strlen(off_256934428[0]);
  if (v372 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_525;
  v373 = (char *)v372;
  if (v372 >= 0x17)
  {
    v375 = (v372 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v372 | 7) != 0x17)
      v375 = v372 | 7;
    v376 = v375 + 1;
    v374 = (void **)operator new(v375 + 1);
    v414 = v373;
    v415 = v376 | 0x8000000000000000;
    __dst = (char **)v374;
    goto LABEL_493;
  }
  HIBYTE(v415) = v372;
  v374 = (void **)&__dst;
  if (v372)
LABEL_493:
    memmove(v374, v371, (size_t)v373);
  v373[(_QWORD)v374] = 0;
  v377 = (_QWORD *)(a1 + 56);
  LOWORD(v412) = 0;
  v378 = sub_23958CE84((uint64_t **)(a1 + 56), (uint64_t)&v412, (unsigned __int8 *)&__dst);
  v379 = v378;
  LODWORD(__p) = v378;
  if ((SHIBYTE(v415) & 0x80000000) == 0)
  {
    if (v378 != -1)
      goto LABEL_496;
LABEL_499:
    v383 = off_256934428[0];
    v384 = strlen(off_256934428[0]);
    if (v384 <= 0x7FFFFFFFFFFFFFF7)
    {
      v385 = (char *)v384;
      if (v384 >= 0x17)
      {
        v387 = (v384 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v384 | 7) != 0x17)
          v387 = v384 | 7;
        v388 = v387 + 1;
        v386 = (void **)operator new(v387 + 1);
        v414 = v385;
        v415 = v388 | 0x8000000000000000;
        __dst = (char **)v386;
      }
      else
      {
        HIBYTE(v415) = v384;
        v386 = (void **)&__dst;
        if (!v384)
        {
LABEL_507:
          v385[(_QWORD)v386] = 0;
          sub_239589414((_QWORD *)a1, &__p, (uint64_t)&__dst);
          if (SHIBYTE(v415) < 0)
            operator delete(__dst);
          v389 = (uint64_t *)(*v377 + 16 * __p);
          v381 = *v389;
          v382 = (std::__shared_weak_count *)v389[1];
          if (!v382)
            goto LABEL_515;
          goto LABEL_510;
        }
      }
      memmove(v386, v383, (size_t)v385);
      goto LABEL_507;
    }
LABEL_525:
    sub_23941A5AC();
  }
  operator delete(__dst);
  if (v379 == -1)
    goto LABEL_499;
LABEL_496:
  v380 = (uint64_t *)(*v377 + 16 * v379);
  v381 = *v380;
  v382 = (std::__shared_weak_count *)v380[1];
  if (v382)
  {
LABEL_510:
    v390 = (unint64_t *)&v382->__shared_owners_;
    do
      v391 = __ldxr(v390);
    while (__stxr(v391 + 1, v390));
    do
      v392 = __ldaxr(v390);
    while (__stlxr(v392 - 1, v390));
    if (!v392)
    {
      ((void (*)(std::__shared_weak_count *))v382->__on_zero_shared)(v382);
      std::__shared_weak_count::__release_weak(v382);
    }
  }
LABEL_515:
  v393 = *(_QWORD *)(a2 + 120);
  v394 = *(_QWORD *)(a2 + 128) - v393;
  if ((v394 & 0x1FFFFFFFELL) != 0)
  {
    v395 = 0;
    v396 = *(_QWORD *)(v381 + 40);
    v397 = (v394 >> 1);
    if (v397 < 0x10)
      goto LABEL_521;
    if ((unint64_t)(v396 - v393) < 0x20)
      goto LABEL_521;
    v398 = (v394 >> 1) & 0xF;
    v395 = v397 - v398;
    v399 = (__int128 *)(v393 + 16);
    v400 = (_OWORD *)(v396 + 16);
    v401 = v397 - v398;
    do
    {
      v402 = *v399;
      *(v400 - 1) = *(v399 - 1);
      *v400 = v402;
      v399 += 2;
      v400 += 2;
      v401 -= 16;
    }
    while (v401);
    if (v398)
    {
LABEL_521:
      v403 = (__int16 *)(v393 + 2 * v395);
      v404 = (_WORD *)(v396 + 2 * v395);
      v405 = v395 - v397;
      do
      {
        v406 = *v403++;
        *v404++ = v406;
        v136 = __CFADD__(v405++, 1);
      }
      while (!v136);
    }
  }
  return v408;
}

void sub_23994E328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23994E3E8(_QWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD v14[2];

  v14[0] = 0;
  v14[1] = 0;
  *a2 = sub_239932184((uint64_t)(a1 + 7), (uint64_t)v14, a3);
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 32))(a1);
  v5 = (uint64_t *)a1[7];
  v6 = (uint64_t *)a1[8];
  if (v5 != v6)
  {
    v7 = v4;
    do
    {
      v8 = *v5;
      v9 = (std::__shared_weak_count *)v5[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(p_shared_owners);
        while (__stxr(v11 + 1, p_shared_owners));
      }
      if (v8)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v7);
      if (v9)
      {
        v12 = (unint64_t *)&v9->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
}

void sub_23994E4C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBED3C();
  _Unwind_Resume(exception_object);
}

void sub_23994E4DC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _QWORD *v10;
  char *v11;

  v3 = *a1;
  v2 = a1[1];
  if (v2 != *a1)
  {
    v4 = v2 - 24;
    do
    {
      sub_239421038(v4, *(_QWORD **)(v4 + 8));
      if (*(char *)(v4 - 1) < 0)
        operator delete(*(void **)(v4 - 24));
      v4 -= 48;
    }
    while (v4 + 24 != v3);
  }
  a1[1] = v3;
  v5 = a1[3];
  for (i = a1[4]; i != v5; i -= 48)
  {
    if (*(char *)(i - 1) < 0)
    {
      operator delete(*(void **)(i - 24));
      v7 = *(std::__shared_weak_count **)(i - 32);
      if (!v7)
        continue;
    }
    else
    {
      v7 = *(std::__shared_weak_count **)(i - 32);
      if (!v7)
        continue;
    }
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v11 = (char *)a1[7];
  v10 = a1 + 7;
  *(v10 - 3) = v5;
  sub_239587BCC((uint64_t)(v10 - 1), v11);
  *(v10 - 1) = v10;
  *v10 = 0;
  v10[1] = 0;
}

void sub_23994E5CC(uint64_t a1, uint64_t a2, _DWORD *a3, int a4)
{
  unint64_t v7;
  int v8;
  std::string::size_type v9;
  unint64_t *v10;
  unint64_t v11;
  _BYTE *v12;
  __int128 v13;
  unint64_t v14;
  int v15;
  std::string::size_type v16;
  unint64_t *v17;
  unint64_t v18;
  _BYTE *v19;
  __int128 v20;
  std::__shared_weak_count *v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  std::string::size_type size;
  unint64_t v25;
  int data;
  std::string::size_type v27;
  unint64_t *v28;
  unint64_t v29;
  _BYTE *v30;
  __int128 v31;
  unint64_t v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::string::value_type v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  std::string::size_type v41;
  unint64_t *v42;
  unint64_t v43;
  _BYTE *v44;
  __int128 v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t *p_shared_owners;
  unint64_t *v51;
  unint64_t v52;
  unint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t **v58;
  int v59;
  char *v60;
  int v61;
  char *v62;
  uint64_t v63;
  uint64_t *v64;
  std::string v65;
  void *__dst[2];
  uint64_t v67;
  std::__shared_weak_count *v68;
  std::__shared_weak_count *v69;
  std::string __p;
  std::string v71;
  __int128 v72;
  uint64_t v73;

  if (a4 == 1)
  {
    WORD2(v71.__r_.__value_.__r.__words[0]) = 0;
    *(_OWORD *)&v71.__r_.__value_.__r.__words[1] = 0u;
    v72 = 0u;
    v73 = 0;
    if (*(char *)(a2 + 23) < 0)
      sub_23941A7F8(&v65, *(void **)a2, *(_QWORD *)(a2 + 8));
    else
      v65 = *(std::string *)a2;
    sub_2399272D8(&v71, &v65);
    if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v65.__r_.__value_.__l.__data_);
      LODWORD(v71.__r_.__value_.__l.__data_) = *a3;
      v25 = *(_QWORD *)(a1 + 32);
      if (v25 < *(_QWORD *)(a1 + 40))
      {
LABEL_34:
        data = (int)v71.__r_.__value_.__l.__data_;
        *(_WORD *)(v25 + 4) = WORD2(v71.__r_.__value_.__r.__words[0]);
        *(_DWORD *)v25 = data;
        *(_QWORD *)(v25 + 8) = v71.__r_.__value_.__l.__size_;
        v27 = v71.__r_.__value_.__r.__words[2];
        *(_QWORD *)(v25 + 16) = *((_QWORD *)&v71.__r_.__value_.__l + 2);
        if (v27)
        {
          v28 = (unint64_t *)(v27 + 8);
          do
            v29 = __ldxr(v28);
          while (__stxr(v29 + 1, v28));
        }
        v30 = (_BYTE *)(v25 + 24);
        if (SHIBYTE(v73) < 0)
        {
          sub_23941A7F8(v30, (void *)v72, *((unint64_t *)&v72 + 1));
        }
        else
        {
          v31 = v72;
          *(_QWORD *)(v25 + 40) = v73;
          *(_OWORD *)v30 = v31;
        }
        *(_QWORD *)(a1 + 32) = v25 + 48;
        *(_QWORD *)(a1 + 32) = v25 + 48;
        if (SHIBYTE(v73) < 0)
        {
LABEL_84:
          operator delete((void *)v72);
          v21 = (std::__shared_weak_count *)v71.__r_.__value_.__r.__words[2];
          if (!v71.__r_.__value_.__r.__words[2])
            goto LABEL_101;
LABEL_85:
          p_shared_owners = (unint64_t *)&v21->__shared_owners_;
          do
            v48 = __ldaxr(p_shared_owners);
          while (__stlxr(v48 - 1, p_shared_owners));
          goto LABEL_100;
        }
LABEL_41:
        v21 = (std::__shared_weak_count *)v71.__r_.__value_.__r.__words[2];
        if (!v71.__r_.__value_.__r.__words[2])
          goto LABEL_101;
        goto LABEL_85;
      }
    }
    else
    {
      LODWORD(v71.__r_.__value_.__l.__data_) = *a3;
      v25 = *(_QWORD *)(a1 + 32);
      if (v25 < *(_QWORD *)(a1 + 40))
        goto LABEL_34;
    }
    *(_QWORD *)(a1 + 32) = sub_23958C410((char **)(a1 + 24), (uint64_t)&v71);
    if (SHIBYTE(v73) < 0)
      goto LABEL_84;
    goto LABEL_41;
  }
  if (a4 != 2)
  {
    if (a4 == 3)
    {
      sub_23995EA34((uint64_t)&v71, a2, a3);
      v7 = *(_QWORD *)(a1 + 32);
      if (v7 >= *(_QWORD *)(a1 + 40))
      {
        *(_QWORD *)(a1 + 32) = sub_23958C410((char **)(a1 + 24), (uint64_t)&v71);
        if (SHIBYTE(v73) < 0)
          goto LABEL_72;
      }
      else
      {
        v8 = (int)v71.__r_.__value_.__l.__data_;
        *(_WORD *)(v7 + 4) = WORD2(v71.__r_.__value_.__r.__words[0]);
        *(_DWORD *)v7 = v8;
        *(_QWORD *)(v7 + 8) = v71.__r_.__value_.__l.__size_;
        v9 = v71.__r_.__value_.__r.__words[2];
        *(_QWORD *)(v7 + 16) = *((_QWORD *)&v71.__r_.__value_.__l + 2);
        if (v9)
        {
          v10 = (unint64_t *)(v9 + 8);
          do
            v11 = __ldxr(v10);
          while (__stxr(v11 + 1, v10));
        }
        v12 = (_BYTE *)(v7 + 24);
        if (SHIBYTE(v73) < 0)
        {
          sub_23941A7F8(v12, (void *)v72, *((unint64_t *)&v72 + 1));
        }
        else
        {
          v13 = v72;
          *(_QWORD *)(v7 + 40) = v73;
          *(_OWORD *)v12 = v13;
        }
        *(_QWORD *)(a1 + 32) = v7 + 48;
        *(_QWORD *)(a1 + 32) = v7 + 48;
        if (SHIBYTE(v73) < 0)
        {
LABEL_72:
          operator delete((void *)v72);
          v21 = (std::__shared_weak_count *)v71.__r_.__value_.__r.__words[2];
          if (!v71.__r_.__value_.__r.__words[2])
            goto LABEL_101;
          goto LABEL_73;
        }
      }
      v21 = (std::__shared_weak_count *)v71.__r_.__value_.__r.__words[2];
      if (v71.__r_.__value_.__r.__words[2])
      {
LABEL_73:
        v47 = (unint64_t *)&v21->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        goto LABEL_100;
      }
LABEL_101:
      v54 = *(_QWORD *)(a1 + 8);
      v56 = *(_QWORD *)(a1 + 24);
      v55 = *(_QWORD *)(a1 + 32);
      v58 = (uint64_t **)(v54 - 16);
      v57 = *(char **)(v54 - 16);
      v59 = *a3;
      if (v57)
        goto LABEL_106;
LABEL_102:
      v60 = (char *)v58;
LABEL_110:
      v62 = v60;
      v60 = (char *)operator new(0x28uLL);
      *((_DWORD *)v60 + 7) = v59;
      *((_WORD *)v60 + 16) = 0;
      *(_QWORD *)v60 = 0;
      *((_QWORD *)v60 + 1) = 0;
      *((_QWORD *)v60 + 2) = v62;
      *v58 = (uint64_t *)v60;
      v63 = **(_QWORD **)(v54 - 24);
      v64 = (uint64_t *)v60;
      if (v63)
      {
        *(_QWORD *)(v54 - 24) = v63;
        v64 = *v58;
      }
      sub_2394213B8(*(uint64_t **)(v54 - 16), v64);
      ++*(_QWORD *)(v54 - 8);
      goto LABEL_113;
    }
    WORD2(v71.__r_.__value_.__r.__words[0]) = 0;
    *(_OWORD *)&v71.__r_.__value_.__r.__words[1] = 0u;
    v72 = 0u;
    v73 = 0;
    LODWORD(v71.__r_.__value_.__l.__data_) = *a3;
    v14 = *(_QWORD *)(a1 + 32);
    if (v14 >= *(_QWORD *)(a1 + 40))
    {
      *(_QWORD *)(a1 + 32) = sub_23958C410((char **)(a1 + 24), (uint64_t)&v71);
      if (SHIBYTE(v73) < 0)
        goto LABEL_78;
    }
    else
    {
      v15 = (int)v71.__r_.__value_.__l.__data_;
      *(_WORD *)(v14 + 4) = WORD2(v71.__r_.__value_.__r.__words[0]);
      *(_DWORD *)v14 = v15;
      *(_QWORD *)(v14 + 8) = v71.__r_.__value_.__l.__size_;
      v16 = v71.__r_.__value_.__r.__words[2];
      *(_QWORD *)(v14 + 16) = *((_QWORD *)&v71.__r_.__value_.__l + 2);
      if (v16)
      {
        v17 = (unint64_t *)(v16 + 8);
        do
          v18 = __ldxr(v17);
        while (__stxr(v18 + 1, v17));
      }
      v19 = (_BYTE *)(v14 + 24);
      if (SHIBYTE(v73) < 0)
      {
        sub_23941A7F8(v19, (void *)v72, *((unint64_t *)&v72 + 1));
      }
      else
      {
        v20 = v72;
        *(_QWORD *)(v14 + 40) = v73;
        *(_OWORD *)v19 = v20;
      }
      *(_QWORD *)(a1 + 32) = v14 + 48;
      *(_QWORD *)(a1 + 32) = v14 + 48;
      if (SHIBYTE(v73) < 0)
      {
LABEL_78:
        operator delete((void *)v72);
        v21 = (std::__shared_weak_count *)v71.__r_.__value_.__r.__words[2];
        if (!v71.__r_.__value_.__r.__words[2])
          goto LABEL_101;
LABEL_79:
        v49 = (unint64_t *)&v21->__shared_owners_;
        do
          v48 = __ldaxr(v49);
        while (__stlxr(v48 - 1, v49));
        goto LABEL_100;
      }
    }
    v21 = (std::__shared_weak_count *)v71.__r_.__value_.__r.__words[2];
    if (!v71.__r_.__value_.__r.__words[2])
      goto LABEL_101;
    goto LABEL_79;
  }
  WORD2(v71.__r_.__value_.__r.__words[0]) = 0;
  *(_OWORD *)&v71.__r_.__value_.__r.__words[1] = 0u;
  v72 = 0u;
  v73 = 0;
  if (*(char *)(a2 + 23) < 0)
    sub_23941A7F8(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_2399272D8(&v71, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v22 = (std::__shared_weak_count *)operator new(0x30uLL);
  v22->__shared_owners_ = 0;
  v23 = (unint64_t *)&v22->__shared_owners_;
  v22->__shared_weak_owners_ = 0;
  v22[1].__vftable = 0;
  size = (std::string::size_type)&v22[1];
  v22->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADF208;
  v22[1].__shared_owners_ = 0;
  v22[1].__shared_weak_owners_ = 0;
  v68 = v22 + 1;
  v69 = v22;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_23941A7F8(__dst, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a2;
    v67 = *(_QWORD *)(a2 + 16);
  }
  sub_239944840((uint64_t)__dst, (_OWORD *)size);
  if (SHIBYTE(v67) < 0)
    operator delete(__dst[0]);
  do
    v32 = __ldxr(v23);
  while (__stxr(v32 + 1, v23));
  do
    v33 = __ldxr(v23);
  while (__stxr(v33 + 1, v23));
  v34 = (std::__shared_weak_count *)v71.__r_.__value_.__r.__words[2];
  v71.__r_.__value_.__l.__size_ = (std::string::size_type)&v22[1];
  v71.__r_.__value_.__r.__words[2] = (std::string::size_type)v22;
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (v36)
    {
      size = v71.__r_.__value_.__l.__size_;
      if (!v71.__r_.__value_.__l.__size_)
        goto LABEL_57;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      size = v71.__r_.__value_.__l.__size_;
      if (!v71.__r_.__value_.__l.__size_)
      {
LABEL_57:
        v37 = 0;
        goto LABEL_58;
      }
    }
  }
  if (!*(_QWORD *)(size + 16))
    goto LABEL_57;
  v37 = 1;
LABEL_58:
  v71.__r_.__value_.__s.__data_[4] = v37;
  do
    v38 = __ldaxr(v23);
  while (__stlxr(v38 - 1, v23));
  if (v38)
  {
    LODWORD(v71.__r_.__value_.__l.__data_) = *a3;
    v39 = *(_QWORD *)(a1 + 32);
    if (v39 < *(_QWORD *)(a1 + 40))
      goto LABEL_62;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
    LODWORD(v71.__r_.__value_.__l.__data_) = *a3;
    v39 = *(_QWORD *)(a1 + 32);
    if (v39 < *(_QWORD *)(a1 + 40))
    {
LABEL_62:
      v40 = (int)v71.__r_.__value_.__l.__data_;
      *(_WORD *)(v39 + 4) = WORD2(v71.__r_.__value_.__r.__words[0]);
      *(_DWORD *)v39 = v40;
      *(_QWORD *)(v39 + 8) = v71.__r_.__value_.__l.__size_;
      v41 = v71.__r_.__value_.__r.__words[2];
      *(_QWORD *)(v39 + 16) = *((_QWORD *)&v71.__r_.__value_.__l + 2);
      if (v41)
      {
        v42 = (unint64_t *)(v41 + 8);
        do
          v43 = __ldxr(v42);
        while (__stxr(v43 + 1, v42));
      }
      v44 = (_BYTE *)(v39 + 24);
      if (SHIBYTE(v73) < 0)
      {
        sub_23941A7F8(v44, (void *)v72, *((unint64_t *)&v72 + 1));
      }
      else
      {
        v45 = v72;
        *(_QWORD *)(v39 + 40) = v73;
        *(_OWORD *)v44 = v45;
      }
      *(_QWORD *)(a1 + 32) = v39 + 48;
      *(_QWORD *)(a1 + 32) = v39 + 48;
      v46 = v69;
      if (!v69)
        goto LABEL_94;
      goto LABEL_90;
    }
  }
  *(_QWORD *)(a1 + 32) = sub_23958C410((char **)(a1 + 24), (uint64_t)&v71);
  v46 = v69;
  if (v69)
  {
LABEL_90:
    v51 = (unint64_t *)&v46->__shared_owners_;
    do
      v52 = __ldaxr(v51);
    while (__stlxr(v52 - 1, v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
LABEL_94:
  if (SHIBYTE(v73) < 0)
  {
    operator delete((void *)v72);
    v21 = (std::__shared_weak_count *)v71.__r_.__value_.__r.__words[2];
    if (!v71.__r_.__value_.__r.__words[2])
      goto LABEL_101;
  }
  else
  {
    v21 = (std::__shared_weak_count *)v71.__r_.__value_.__r.__words[2];
    if (!v71.__r_.__value_.__r.__words[2])
      goto LABEL_101;
  }
  v53 = (unint64_t *)&v21->__shared_owners_;
  do
    v48 = __ldaxr(v53);
  while (__stlxr(v48 - 1, v53));
LABEL_100:
  if (v48)
    goto LABEL_101;
  ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
  std::__shared_weak_count::__release_weak(v21);
  v54 = *(_QWORD *)(a1 + 8);
  v56 = *(_QWORD *)(a1 + 24);
  v55 = *(_QWORD *)(a1 + 32);
  v58 = (uint64_t **)(v54 - 16);
  v57 = *(char **)(v54 - 16);
  v59 = *a3;
  if (!v57)
    goto LABEL_102;
  while (1)
  {
LABEL_106:
    while (1)
    {
      v60 = v57;
      v61 = *((_DWORD *)v57 + 7);
      if (v59 >= v61)
        break;
      v57 = *(char **)v60;
      v58 = (uint64_t **)v60;
      if (!*(_QWORD *)v60)
        goto LABEL_110;
    }
    if (v61 >= v59)
      break;
    v57 = (char *)*((_QWORD *)v60 + 1);
    if (!v57)
    {
      v58 = (uint64_t **)(v60 + 8);
      goto LABEL_110;
    }
  }
LABEL_113:
  *((_WORD *)v60 + 16) = -21845 * ((v55 - v56) >> 4) - 1;
}

void sub_23994ECD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  if (*(_QWORD *)(v10 + 16))
    sub_239EBED3C();
  *(_QWORD *)(v9 + 32) = v10;
  sub_239416DA0((uint64_t)va);
  sub_239589508((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_23994ED00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  uint64_t v16;
  va_list va;

  va_start(va, a15);
  if (*(_QWORD *)(v16 + 16))
  {
    sub_239EBED3C();
    *(_QWORD *)(v15 + 32) = v16;
    sub_239589508((uint64_t)va);
    _Unwind_Resume(a1);
  }
  *(_QWORD *)(v15 + 32) = v16;
  sub_239589508((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_23994ED6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  sub_239589508((uint64_t)&a29);
  _Unwind_Resume(a1);
}

void sub_23994EDFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,char a26)
{
  if (a24 < 0)
  {
    operator delete(__p);
    sub_239589508((uint64_t)&a26);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x23994EDECLL);
}

uint64_t sub_23994EE20(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  std::locale::id *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  const std::locale::facet *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  std::locale::id *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  const std::locale::facet *v23;
  std::runtime_error *exception;
  std::string *v26;
  __int128 v27;
  std::string *v28;
  __int128 v29;
  std::string __dst;
  std::string v31;
  std::string v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[21];

  v35[19] = *MEMORY[0x24BDAC8D0];
  sub_23955CF88(&v33);
  v4 = (char *)&v33 + *(_QWORD *)(v33 - 24);
  if ((v4[32] & 5) != 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    if (*(char *)(a1 + 23) < 0)
      sub_23941A7F8(&__dst, *(void **)a1, *(_QWORD *)(a1 + 8));
    else
      __dst = *(std::string *)a1;
    v26 = std::string::insert(&__dst, 0, "Unable to open OBJ file \"");
    v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v27;
    v26->__r_.__value_.__l.__size_ = 0;
    v26->__r_.__value_.__r.__words[2] = 0;
    v26->__r_.__value_.__r.__words[0] = 0;
    v28 = std::string::append(&v31, "\"!");
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, &v32);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *((_QWORD *)v4 + 2) = 10;
  sub_239458500(&v33, (uint64_t)"#  \n", 4);
  sub_239458500(&v33, (uint64_t)"#  Wavefront OBJ\n", 17);
  sub_239458500(&v33, (uint64_t)"#  \n", 4);
  v5 = *(_QWORD *)(a2 + 104);
  v6 = *(_QWORD *)(a2 + 112);
  if (v5 != v6)
  {
    v7 = (std::locale::id *)MEMORY[0x24BEDB350];
    do
    {
      sub_239458500(&v33, (uint64_t)"v ", 2);
      v8 = *(std::__shared_weak_count **)(*(_QWORD *)(a2 + 8) + 16 * *(unsigned int *)(a2 + 176) + 8);
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldxr(p_shared_owners);
        while (__stxr(v10 + 1, p_shared_owners));
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v12 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v12, (uint64_t)" ", 1);
      v13 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v13, (uint64_t)" ", 1);
      std::ostream::operator<<();
      std::ios_base::getloc((const std::ios_base *)((char *)&v33 + *(_QWORD *)(v33 - 24)));
      v14 = std::locale::use_facet((const std::locale *)&v32, v7);
      ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
      std::locale::~locale((std::locale *)&v32);
      std::ostream::put();
      std::ostream::flush();
      v5 += 4;
    }
    while (v5 != v6);
  }
  memset(&v32, 0, sizeof(v32));
  v16 = *(_QWORD *)(a2 + 152);
  v15 = *(_QWORD *)(a2 + 160);
  sub_2394EE834((void **)&v32.__r_.__value_.__l.__data_, 3uLL);
  v17 = (unint64_t)(v15 - v16) >> 2;
  if ((_DWORD)v17)
  {
    v18 = 0;
    v19 = (std::locale::id *)MEMORY[0x24BEDB350];
    do
    {
      sub_239458500(&v33, (uint64_t)"f ", 2);
      LODWORD(v31.__r_.__value_.__l.__data_) = v18;
      sub_23996362C(a2, (unsigned int *)&v31, (uint64_t)&v32);
      v20 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v20, (uint64_t)" ", 1);
      v21 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v21, (uint64_t)" ", 1);
      v22 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v22, (uint64_t)" ", 1);
      std::ios_base::getloc((const std::ios_base *)((char *)&v33 + *(_QWORD *)(v33 - 24)));
      v23 = std::locale::use_facet((const std::locale *)&v31, v19);
      ((void (*)(const std::locale::facet *, uint64_t))v23->__vftable[2].~facet_0)(v23, 10);
      std::locale::~locale((std::locale *)&v31);
      std::ostream::put();
      std::ostream::flush();
      ++v18;
    }
    while ((_DWORD)v17 != v18);
  }
  if (v32.__r_.__value_.__r.__words[0])
  {
    v32.__r_.__value_.__l.__size_ = v32.__r_.__value_.__r.__words[0];
    operator delete(v32.__r_.__value_.__l.__data_);
  }
  v33 = *MEMORY[0x24BEDB7E8];
  *(uint64_t *)((char *)&v33 + *(_QWORD *)(v33 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 24);
  MEMORY[0x23B83DC8C](&v34);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v35);
  return 1;
}

void sub_23994F278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, std::locale a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,std::locale a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31)
{
  void *v31;
  int v32;

  if (a30 < 0)
  {
    operator delete(a25.__locale_);
    if ((a23 & 0x80000000) == 0)
    {
LABEL_3:
      if (a16 < 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((a23 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a18.__locale_);
  if (a16 < 0)
  {
LABEL_4:
    operator delete(__p);
    if ((v32 & 1) == 0)
    {
LABEL_10:
      sub_23955C978(&a31);
      _Unwind_Resume(a1);
    }
LABEL_9:
    __cxa_free_exception(v31);
    sub_23955C978(&a31);
    _Unwind_Resume(a1);
  }
LABEL_8:
  if (!v32)
    goto LABEL_10;
  goto LABEL_9;
}

uint64_t sub_23994F3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5;
  char *v7;
  uint64_t v8;
  std::string *v9;
  std::__fs::filesystem::path::__string_view v10;
  std::string *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v12;
  std::basic_string_view<_CharT, _Traits>::size_type v13;
  std::__fs::filesystem::path *v14;
  __int128 v15;
  _QWORD *v16;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v19;
  char *v20;
  size_t v21;
  std::string::size_type v22;
  std::string *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  _BOOL4 v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  std::locale::id *v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  const std::locale::facet *v44;
  const std::locale::facet *v45;
  int v46;
  char *v47;
  size_t v48;
  std::string::size_type v49;
  std::string *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  unsigned int v61;
  std::locale::id *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  const std::locale::facet *v66;
  const std::locale::facet *v67;
  char *v68;
  size_t v69;
  std::string::size_type v70;
  std::string *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  unsigned int v81;
  std::locale::id *v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  const std::locale::facet *v86;
  char *v87;
  size_t v88;
  std::string::size_type v89;
  std::string *v90;
  char *v91;
  size_t v92;
  std::string::size_type v93;
  std::string *v94;
  _BOOL4 v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  unsigned int v100;
  unsigned int v101;
  uint64_t *v102;
  uint64_t v103;
  std::__shared_weak_count *v104;
  unint64_t *v105;
  unint64_t v106;
  unint64_t v107;
  unsigned int v108;
  _QWORD *v109;
  uint64_t v110;
  std::locale::id *v111;
  _QWORD *v112;
  _QWORD *v113;
  const std::locale::facet *v114;
  const std::locale::facet *v115;
  char *v116;
  size_t v117;
  std::string::size_type v118;
  void *v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int v124;
  char *v125;
  size_t v126;
  std::string::size_type v127;
  std::string *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  std::__shared_weak_count *v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  _QWORD *v137;
  char *v138;
  size_t v139;
  std::string::size_type v140;
  _BYTE *v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  size_t v146;
  std::string::size_type v147;
  std::string *v148;
  unsigned int v149;
  uint64_t v150;
  uint64_t v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  _QWORD *v156;
  _DWORD *v157;
  uint64_t v158;
  unsigned __int16 v159;
  _BOOL4 v160;
  uint64_t *v161;
  uint64_t v162;
  std::__shared_weak_count *v163;
  unint64_t *v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  std::__shared_weak_count *v169;
  unint64_t *v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  const std::locale::facet *v180;
  uint64_t *v181;
  uint64_t v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unsigned int v192;
  BOOL v193;
  uint64_t *v194;
  uint64_t *v195;
  uint64_t v196;
  std::__shared_weak_count *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  unint64_t *v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  std::__shared_weak_count *v206;
  unint64_t *v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t **v210;
  unsigned int v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  const std::locale::facet *v220;
  std::__shared_weak_count *v221;
  unint64_t *v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  int v226;
  std::__shared_weak_count *v227;
  unint64_t *v228;
  unint64_t v229;
  unint64_t v230;
  int v231;
  std::__shared_weak_count *v232;
  unint64_t *v233;
  unint64_t v234;
  unint64_t v235;
  int v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  unint64_t v240;
  const std::locale::facet *v241;
  uint64_t v243;
  uint64_t v244;
  unsigned int v245;
  _BOOL4 v246;
  uint64_t *v247;
  uint64_t v248;
  std::__shared_weak_count *v249;
  unint64_t *v250;
  unint64_t v251;
  unint64_t v252;
  unsigned int v253;
  std::locale::id *v254;
  _QWORD *v255;
  _QWORD *v256;
  _QWORD *v257;
  const std::locale::facet *v258;
  std::runtime_error *exception;
  std::string *v260;
  __int128 v261;
  std::string *v262;
  __int128 v263;
  uint64_t v264;
  unsigned int v265;
  uint64_t v266;
  unsigned int v267;
  uint64_t v268;
  uint64_t v269;
  _BOOL4 v270;
  std::__fs::filesystem::path v272;
  std::string __p;
  std::__fs::filesystem::path v274;
  std::string __dst;
  uint64_t v276;
  uint64_t v277;
  _QWORD v278[21];

  v278[19] = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)a3)
    v5 = 0;
  else
    v5 = *(_BYTE *)(a3 + 8) == 0;
  if (v5 && *(_BYTE *)(a3 + 9) == 0)
  {
    sub_23994EE20(a1, a2);
    return 1;
  }
  sub_23955CF88(&v276);
  v7 = (char *)&v276 + *(_QWORD *)(v276 - 24);
  if ((v7[32] & 5) != 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    if (*(char *)(a1 + 23) < 0)
      sub_23941A7F8(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
    else
      __p = *(std::string *)a1;
    v260 = std::string::insert(&__p, 0, "Unable to open OBJ file \"");
    v261 = *(_OWORD *)&v260->__r_.__value_.__l.__data_;
    v274.__pn_.__r_.__value_.__r.__words[2] = v260->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v274.__pn_.__r_.__value_.__l.__data_ = v261;
    v260->__r_.__value_.__l.__size_ = 0;
    v260->__r_.__value_.__r.__words[2] = 0;
    v260->__r_.__value_.__r.__words[0] = 0;
    v262 = std::string::append(&v274.__pn_, "\"!");
    v263 = *(_OWORD *)&v262->__r_.__value_.__l.__data_;
    __dst.__r_.__value_.__r.__words[2] = v262->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v263;
    v262->__r_.__value_.__l.__size_ = 0;
    v262->__r_.__value_.__r.__words[2] = 0;
    v262->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, &__dst);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *((_QWORD *)v7 + 2) = 10;
  sub_239458500(&v276, (uint64_t)"#  \n", 4);
  sub_239458500(&v276, (uint64_t)"#  Wavefront OBJ\n", 17);
  sub_239458500(&v276, (uint64_t)"#  \n", 4);
  if (!*(_BYTE *)(a3 + 9))
    goto LABEL_37;
  memset(&v274, 0, sizeof(v274));
  v8 = *(unsigned __int8 *)(a1 + 23);
  if ((v8 & 0x80u) == 0)
    v9 = (std::string *)a1;
  else
    v9 = *(std::string **)a1;
  if ((v8 & 0x80u) != 0)
    v8 = *(_QWORD *)(a1 + 8);
  sub_23948900C(&v274.__pn_, v9, (std::string *)((char *)v9 + v8));
  v10 = std::__fs::filesystem::path::__filename(&v274);
  if (v10.__size_ > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v10.__size_ >= 0x17)
  {
    v12 = (v10.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10.__size_ | 7) != 0x17)
      v12 = v10.__size_ | 7;
    v13 = v12 + 1;
    p_dst = (std::string *)operator new(v12 + 1);
    __dst.__r_.__value_.__l.__size_ = v10.__size_;
    __dst.__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_23;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v10.__size_;
  p_dst = &__dst;
  if (v10.__size_)
LABEL_23:
    memmove(p_dst, v10.__data_, v10.__size_);
  p_dst->__r_.__value_.__s.__data_[v10.__size_] = 0;
  v272.__pn_ = __dst;
  memset(&__dst, 0, sizeof(__dst));
  sub_23948900C(&__dst, (std::string *)".mtl", (std::string *)"");
  v14 = std::__fs::filesystem::path::replace_extension(&v272, (const std::__fs::filesystem::path *)&__dst);
  if (SHIBYTE(v14->__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&__p, v14->__pn_.__r_.__value_.__l.__data_, v14->__pn_.__r_.__value_.__l.__size_);
  }
  else
  {
    v15 = *(_OWORD *)&v14->__pn_.__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v14->__pn_.__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v15;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v272.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_29;
  }
  else if ((SHIBYTE(v272.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete(v272.__pn_.__r_.__value_.__l.__data_);
LABEL_29:
  v16 = sub_239458500(&v276, (uint64_t)"mtllib ", 7);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v19 = sub_239458500(v16, (uint64_t)p_p, size);
  sub_239458500(v19, (uint64_t)"\n\n", 2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v274.__pn_.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_51;
LABEL_37:
    if (*(_BYTE *)(a3 + 8))
      goto LABEL_38;
LABEL_52:
    v27 = 0;
    v26 = -1;
    goto LABEL_53;
  }
  if ((SHIBYTE(v274.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_37;
LABEL_51:
  operator delete(v274.__pn_.__r_.__value_.__l.__data_);
  if (!*(_BYTE *)(a3 + 8))
    goto LABEL_52;
LABEL_38:
  v20 = off_256934400[0];
  v21 = strlen(off_256934400[0]);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    v23 = (std::string *)operator new(v24 + 1);
    __dst.__r_.__value_.__l.__size_ = v22;
    __dst.__r_.__value_.__r.__words[2] = v25 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v23;
    goto LABEL_45;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v21;
  v23 = &__dst;
  if (v21)
LABEL_45:
    memmove(v23, v20, v22);
  v23->__r_.__value_.__s.__data_[v22] = 0;
  *(_OWORD *)&v274.__pn_.__r_.__value_.__l.__data_ = 0uLL;
  v26 = sub_2394E5F40((uint64_t **)(a2 + 8), (uint64_t)&v274, (unsigned __int8 *)&__dst);
  v27 = v26 != -1;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_53:
  sub_239458500(&v276, (uint64_t)"# ", 2);
  v28 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v28, (uint64_t)" vertices\n", 10);
  v29 = *(_QWORD *)(a2 + 104);
  v30 = *(_QWORD *)(a2 + 112);
  if (v29 != v30)
  {
    v269 = v26;
    v31 = (std::locale::id *)MEMORY[0x24BEDB350];
    do
    {
      sub_239458500(&v276, (uint64_t)"v ", 2);
      v32 = *(std::__shared_weak_count **)(*(_QWORD *)(a2 + 8) + 16 * *(unsigned int *)(a2 + 176) + 8);
      if (v32)
      {
        p_shared_owners = (unint64_t *)&v32->__shared_owners_;
        do
          v34 = __ldxr(p_shared_owners);
        while (__stxr(v34 + 1, p_shared_owners));
        do
          v35 = __ldaxr(p_shared_owners);
        while (__stlxr(v35 - 1, p_shared_owners));
        if (!v35)
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
        }
      }
      v36 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v36, (uint64_t)" ", 1);
      v37 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v37, (uint64_t)" ", 1);
      std::ostream::operator<<();
      if (v27)
      {
        sub_239458500(&v276, (uint64_t)" ", 1);
        v38 = *(std::__shared_weak_count **)(*(_QWORD *)(a2 + 8) + 16 * v269 + 8);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        v42 = (_QWORD *)std::ostream::operator<<();
        sub_239458500(v42, (uint64_t)" ", 1);
        v43 = (_QWORD *)std::ostream::operator<<();
        sub_239458500(v43, (uint64_t)" ", 1);
        std::ostream::operator<<();
      }
      std::ios_base::getloc((const std::ios_base *)((char *)&v276 + *(_QWORD *)(v276 - 24)));
      v44 = std::locale::use_facet((const std::locale *)&__dst, v31);
      ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
      std::locale::~locale((std::locale *)&__dst);
      std::ostream::put();
      std::ostream::flush();
      v29 += 4;
    }
    while (v29 != v30);
  }
  std::ios_base::getloc((const std::ios_base *)((char *)&v276 + *(_QWORD *)(v276 - 24)));
  v45 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v45->__vftable[2].~facet_0)(v45, 10);
  std::locale::~locale((std::locale *)&__dst);
  std::ostream::put();
  std::ostream::flush();
  if (!*(_BYTE *)a3)
    goto LABEL_122;
  v46 = *(_DWORD *)(a3 + 4);
  if (v46 != 1)
    goto LABEL_94;
  v47 = off_256934408[0];
  v48 = strlen(off_256934408[0]);
  if (v48 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v49 = v48;
  if (v48 >= 0x17)
  {
    v51 = (v48 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v48 | 7) != 0x17)
      v51 = v48 | 7;
    v52 = v51 + 1;
    v50 = (std::string *)operator new(v51 + 1);
    __dst.__r_.__value_.__l.__size_ = v49;
    __dst.__r_.__value_.__r.__words[2] = v52 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v50;
  }
  else
  {
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v48;
    v50 = &__dst;
    if (!v48)
      goto LABEL_80;
  }
  memmove(v50, v47, v49);
LABEL_80:
  v50->__r_.__value_.__s.__data_[v49] = 0;
  *(_OWORD *)&v274.__pn_.__r_.__value_.__l.__data_ = 0uLL;
  v53 = sub_2394E5F40((uint64_t **)(a2 + 8), (uint64_t)&v274, (unsigned __int8 *)&__dst);
  v54 = v53;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (v54 != -1)
    {
LABEL_82:
      v55 = (uint64_t *)(*(_QWORD *)(a2 + 8) + 16 * v54);
      v56 = *v55;
      v57 = (std::__shared_weak_count *)v55[1];
      if (v57)
      {
        v58 = (unint64_t *)&v57->__shared_owners_;
        do
          v59 = __ldxr(v58);
        while (__stxr(v59 + 1, v58));
        do
          v60 = __ldaxr(v58);
        while (__stlxr(v60 - 1, v58));
        if (!v60)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
      v61 = 0;
      v62 = (std::locale::id *)MEMORY[0x24BEDB350];
      while ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 16))(v56) > (unint64_t)v61)
      {
        sub_239458500(&v276, (uint64_t)"vn ", 3);
        v63 = (_QWORD *)std::ostream::operator<<();
        sub_239458500(v63, (uint64_t)" ", 1);
        v64 = (_QWORD *)std::ostream::operator<<();
        sub_239458500(v64, (uint64_t)" ", 1);
        v65 = (_QWORD *)std::ostream::operator<<();
        std::ios_base::getloc((const std::ios_base *)((char *)v65 + *(_QWORD *)(*v65 - 24)));
        v66 = std::locale::use_facet((const std::locale *)&__dst, v62);
        ((void (*)(const std::locale::facet *, uint64_t))v66->__vftable[2].~facet_0)(v66, 10);
        std::locale::~locale((std::locale *)&__dst);
        std::ostream::put();
        std::ostream::flush();
        ++v61;
      }
LABEL_91:
      std::ios_base::getloc((const std::ios_base *)((char *)&v276 + *(_QWORD *)(v276 - 24)));
      v67 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v67->__vftable[2].~facet_0)(v67, 10);
      std::locale::~locale((std::locale *)&__dst);
      std::ostream::put();
      std::ostream::flush();
LABEL_122:
      v267 = -1;
      goto LABEL_123;
    }
  }
  else if (v53 != -1)
  {
    goto LABEL_82;
  }
  v46 = *(_DWORD *)(a3 + 4);
LABEL_94:
  if (v46 != 2)
    goto LABEL_117;
  v68 = off_256934430[0];
  v69 = strlen(off_256934430[0]);
  if (v69 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v70 = v69;
  if (v69 >= 0x17)
  {
    v72 = (v69 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v69 | 7) != 0x17)
      v72 = v69 | 7;
    v73 = v72 + 1;
    v71 = (std::string *)operator new(v72 + 1);
    __dst.__r_.__value_.__l.__size_ = v70;
    __dst.__r_.__value_.__r.__words[2] = v73 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v71;
  }
  else
  {
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v69;
    v71 = &__dst;
    if (!v69)
      goto LABEL_103;
  }
  memmove(v71, v68, v70);
LABEL_103:
  v71->__r_.__value_.__s.__data_[v70] = 0;
  *(_OWORD *)&v274.__pn_.__r_.__value_.__l.__data_ = 0uLL;
  v74 = sub_2394E5F40((uint64_t **)(a2 + 56), (uint64_t)&v274, (unsigned __int8 *)&__dst);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (v74 != -1)
  {
    v75 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v74);
    v76 = *v75;
    v77 = (std::__shared_weak_count *)v75[1];
    if (v77)
    {
      v78 = (unint64_t *)&v77->__shared_owners_;
      do
        v79 = __ldxr(v78);
      while (__stxr(v79 + 1, v78));
      do
        v80 = __ldaxr(v78);
      while (__stlxr(v80 - 1, v78));
      if (!v80)
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
    }
    v81 = 0;
    v82 = (std::locale::id *)MEMORY[0x24BEDB350];
    while ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v76 + 16))(v76) > (unint64_t)v81)
    {
      sub_239458500(&v276, (uint64_t)"vn ", 3);
      v83 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v83, (uint64_t)" ", 1);
      v84 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v84, (uint64_t)" ", 1);
      v85 = (_QWORD *)std::ostream::operator<<();
      std::ios_base::getloc((const std::ios_base *)((char *)v85 + *(_QWORD *)(*v85 - 24)));
      v86 = std::locale::use_facet((const std::locale *)&__dst, v82);
      ((void (*)(const std::locale::facet *, uint64_t))v86->__vftable[2].~facet_0)(v86, 10);
      std::locale::~locale((std::locale *)&__dst);
      std::ostream::put();
      std::ostream::flush();
      ++v81;
    }
    goto LABEL_91;
  }
  v46 = *(_DWORD *)(a3 + 4);
LABEL_117:
  if (v46 != 3)
    goto LABEL_122;
  v87 = off_256934440[0];
  v88 = strlen(off_256934440[0]);
  if (v88 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v89 = v88;
  if (v88 >= 0x17)
  {
    v243 = (v88 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v88 | 7) != 0x17)
      v243 = v88 | 7;
    v244 = v243 + 1;
    v90 = (std::string *)operator new(v243 + 1);
    __dst.__r_.__value_.__l.__size_ = v89;
    __dst.__r_.__value_.__r.__words[2] = v244 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v90;
    goto LABEL_350;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v88;
  v90 = &__dst;
  if (v88)
LABEL_350:
    memmove(v90, v87, v89);
  v90->__r_.__value_.__s.__data_[v89] = 0;
  *(_OWORD *)&v274.__pn_.__r_.__value_.__l.__data_ = 0uLL;
  v245 = sub_2394E5F40((uint64_t **)(a2 + 80), (uint64_t)&v274, (unsigned __int8 *)&__dst);
  if (v245 == -1)
  {
    v246 = 0;
    v267 = -1;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_359;
  }
  else
  {
    sub_23941A4FC(&v274, off_256934420[0]);
    LODWORD(__p.__r_.__value_.__r.__words[1]) = 0;
    __p.__r_.__value_.__r.__words[0] = 0;
    v267 = sub_2394E5DE4((uint64_t **)(a2 + 56), (uint64_t)&__p, (unsigned __int8 *)&v274);
    v246 = v267 != -1;
    if ((SHIBYTE(v274.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_354;
LABEL_359:
      operator delete(__dst.__r_.__value_.__l.__data_);
      if (!v246)
        goto LABEL_123;
      goto LABEL_360;
    }
    operator delete(v274.__pn_.__r_.__value_.__l.__data_);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_359;
  }
LABEL_354:
  if (!v246)
    goto LABEL_123;
LABEL_360:
  v247 = (uint64_t *)(*(_QWORD *)(a2 + 80) + 16 * v245);
  v248 = *v247;
  v249 = (std::__shared_weak_count *)v247[1];
  if (v249)
  {
    v250 = (unint64_t *)&v249->__shared_owners_;
    do
      v251 = __ldxr(v250);
    while (__stxr(v251 + 1, v250));
    do
      v252 = __ldaxr(v250);
    while (__stlxr(v252 - 1, v250));
    if (!v252)
    {
      ((void (*)(std::__shared_weak_count *))v249->__on_zero_shared)(v249);
      std::__shared_weak_count::__release_weak(v249);
    }
  }
  v253 = 0;
  v254 = (std::locale::id *)MEMORY[0x24BEDB350];
  while ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v248 + 16))(v248) > (unint64_t)v253)
  {
    sub_239458500(&v276, (uint64_t)"vn ", 3);
    v255 = (_QWORD *)std::ostream::operator<<();
    sub_239458500(v255, (uint64_t)" ", 1);
    v256 = (_QWORD *)std::ostream::operator<<();
    sub_239458500(v256, (uint64_t)" ", 1);
    v257 = (_QWORD *)std::ostream::operator<<();
    std::ios_base::getloc((const std::ios_base *)((char *)v257 + *(_QWORD *)(*v257 - 24)));
    v258 = std::locale::use_facet((const std::locale *)&__dst, v254);
    ((void (*)(const std::locale::facet *, uint64_t))v258->__vftable[2].~facet_0)(v258, 10);
    std::locale::~locale((std::locale *)&__dst);
    std::ostream::put();
    std::ostream::flush();
    ++v253;
  }
LABEL_123:
  if (!*(_BYTE *)(a3 + 9))
  {
    v270 = 0;
    v95 = 0;
    v265 = -1;
    v96 = -1;
LABEL_153:
    v120 = -1;
    v121 = 0xFFFFFFFFLL;
    goto LABEL_206;
  }
  v91 = off_256934438[0];
  v92 = strlen(off_256934438[0]);
  if (v92 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v93 = v92;
  if (v92 >= 0x17)
  {
    v97 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v92 | 7) != 0x17)
      v97 = v92 | 7;
    v98 = v97 + 1;
    v94 = (std::string *)operator new(v97 + 1);
    __dst.__r_.__value_.__l.__size_ = v93;
    __dst.__r_.__value_.__r.__words[2] = v98 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v94;
    goto LABEL_132;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v92;
  v94 = &__dst;
  if (v92)
LABEL_132:
    memmove(v94, v91, v93);
  v94->__r_.__value_.__s.__data_[v93] = 0;
  v99 = (_QWORD *)(a2 + 80);
  v274.__pn_.__r_.__value_.__r.__words[0] = 0;
  v100 = sub_2394E5C88((uint64_t **)(a2 + 80), (uint64_t)&v274, (unsigned __int8 *)&__dst);
  v101 = v100;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (v101 == -1)
      goto LABEL_147;
  }
  else if (v100 == -1)
  {
    goto LABEL_147;
  }
  v102 = (uint64_t *)(*v99 + 16 * v101);
  v103 = *v102;
  v104 = (std::__shared_weak_count *)v102[1];
  if (v104)
  {
    v105 = (unint64_t *)&v104->__shared_owners_;
    do
      v106 = __ldxr(v105);
    while (__stxr(v106 + 1, v105));
    do
      v107 = __ldaxr(v105);
    while (__stlxr(v107 - 1, v105));
    if (!v107)
    {
      ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
      std::__shared_weak_count::__release_weak(v104);
    }
  }
  v108 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v103 + 16))(v103);
  sub_239458500(&v276, (uint64_t)"# ", 2);
  v109 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v109, (uint64_t)" texcoords\n", 11);
  if (v108)
  {
    v110 = 0;
    v111 = (std::locale::id *)MEMORY[0x24BEDB350];
    do
    {
      sub_239458500(&v276, (uint64_t)"vt ", 3);
      v112 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v112, (uint64_t)" ", 1);
      v113 = (_QWORD *)std::ostream::operator<<();
      std::ios_base::getloc((const std::ios_base *)((char *)v113 + *(_QWORD *)(*v113 - 24)));
      v114 = std::locale::use_facet((const std::locale *)&__dst, v111);
      ((void (*)(const std::locale::facet *, uint64_t))v114->__vftable[2].~facet_0)(v114, 10);
      std::locale::~locale((std::locale *)&__dst);
      std::ostream::put();
      std::ostream::flush();
      v110 += 8;
    }
    while (8 * v108 != v110);
  }
  std::ios_base::getloc((const std::ios_base *)((char *)&v276 + *(_QWORD *)(v276 - 24)));
  v115 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v115->__vftable[2].~facet_0)(v115, 10);
  std::locale::~locale((std::locale *)&__dst);
  std::ostream::put();
  std::ostream::flush();
LABEL_147:
  if (!*(_BYTE *)(a3 + 9))
  {
    v270 = 0;
    v95 = 0;
    v96 = -1;
    v265 = -1;
    goto LABEL_153;
  }
  v116 = off_256934448[0];
  v117 = strlen(off_256934448[0]);
  if (v117 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v118 = v117;
  if (v117 >= 0x17)
  {
    v122 = (v117 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v117 | 7) != 0x17)
      v122 = v117 | 7;
    v123 = v122 + 1;
    v119 = operator new(v122 + 1);
    v274.__pn_.__r_.__value_.__l.__size_ = v118;
    v274.__pn_.__r_.__value_.__r.__words[2] = v123 | 0x8000000000000000;
    v274.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v119;
    goto LABEL_157;
  }
  *((_BYTE *)&v274.__pn_.__r_.__value_.__s + 23) = v117;
  v119 = &v274;
  if (v117)
LABEL_157:
    memmove(v119, v116, v118);
  *((_BYTE *)v119 + v118) = 0;
  memset(&__dst, 0, sizeof(__dst));
  v124 = sub_23958C0D8((uint64_t **)(a2 + 80), (uint64_t)&__dst, (unsigned __int8 *)&v274);
  v120 = v124;
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (v124 != -1)
      goto LABEL_160;
LABEL_165:
    v270 = 0;
    v96 = -1;
    if ((SHIBYTE(v274.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_173;
    goto LABEL_191;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
  if (v120 == -1)
    goto LABEL_165;
LABEL_160:
  v125 = off_256934428[0];
  v126 = strlen(off_256934428[0]);
  if (v126 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v127 = v126;
  if (v126 >= 0x17)
  {
    v129 = (v126 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v126 | 7) != 0x17)
      v129 = v126 | 7;
    v130 = v129 + 1;
    v128 = (std::string *)operator new(v129 + 1);
    __dst.__r_.__value_.__l.__size_ = v127;
    __dst.__r_.__value_.__r.__words[2] = v130 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v128;
    goto LABEL_170;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v126;
  v128 = &__dst;
  if (v126)
LABEL_170:
    memmove(v128, v125, v127);
  v128->__r_.__value_.__s.__data_[v127] = 0;
  LOWORD(__p.__r_.__value_.__l.__data_) = 0;
  v96 = sub_23958CE84((uint64_t **)(a2 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v270 = v96 != -1;
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v274.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_173;
LABEL_191:
    operator delete(v274.__pn_.__r_.__value_.__l.__data_);
    if (v270)
      goto LABEL_174;
    goto LABEL_192;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
  if (SHIBYTE(v274.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_191;
LABEL_173:
  if (v270)
  {
LABEL_174:
    v131 = (uint64_t *)(*v99 + 16 * v120);
    v132 = *v131;
    v133 = (std::__shared_weak_count *)v131[1];
    if (v133)
    {
      v134 = (unint64_t *)&v133->__shared_owners_;
      do
        v135 = __ldxr(v134);
      while (__stxr(v135 + 1, v134));
      do
        v136 = __ldaxr(v134);
      while (__stlxr(v136 - 1, v134));
      if (!v136)
      {
        ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
        std::__shared_weak_count::__release_weak(v133);
      }
    }
    (*(void (**)(uint64_t))(*(_QWORD *)v132 + 16))(v132);
    sub_239458500(&v276, (uint64_t)"# ", 2);
    v137 = (_QWORD *)std::ostream::operator<<();
    sub_239458500(v137, (uint64_t)" groups\n", 8);
    v138 = off_256934458;
    v139 = strlen(off_256934458);
    if (v139 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v140 = v139;
    if (v139 >= 0x17)
    {
      v142 = v120;
      v143 = (v139 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v139 | 7) != 0x17)
        v143 = v139 | 7;
      v144 = v143 + 1;
      v141 = operator new(v143 + 1);
      v274.__pn_.__r_.__value_.__l.__size_ = v140;
      v274.__pn_.__r_.__value_.__r.__words[2] = v144 | 0x8000000000000000;
      v274.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v141;
      v120 = v142;
    }
    else
    {
      *((_BYTE *)&v274.__pn_.__r_.__value_.__s + 23) = v139;
      v141 = &v274;
      if (!v139)
      {
LABEL_188:
        v141[v140] = 0;
        *(_OWORD *)&__dst.__r_.__value_.__r.__words[1] = 0uLL;
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst.__r_.__value_.__l.__size_;
        v265 = sub_23958C234((uint64_t **)(a2 + 80), (uint64_t)&__dst, (unsigned __int8 *)&v274);
        sub_23958B6B4((uint64_t)&__dst, (char *)__dst.__r_.__value_.__l.__size_);
        if (SHIBYTE(v274.__pn_.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v274.__pn_.__r_.__value_.__l.__data_);
        goto LABEL_193;
      }
    }
    memmove(v141, v138, v140);
    goto LABEL_188;
  }
LABEL_192:
  v265 = -1;
LABEL_193:
  if (*(_BYTE *)(a3 + 9))
  {
    v145 = off_256934418[0];
    v146 = strlen(off_256934418[0]);
    if (v146 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v147 = v146;
    if (v146 >= 0x17)
    {
      v149 = v120;
      v150 = (v146 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v146 | 7) != 0x17)
        v150 = v146 | 7;
      v151 = v150 + 1;
      v148 = (std::string *)operator new(v150 + 1);
      __dst.__r_.__value_.__l.__size_ = v147;
      __dst.__r_.__value_.__r.__words[2] = v151 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v148;
      v120 = v149;
    }
    else
    {
      *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v146;
      v148 = &__dst;
      if (!v146)
        goto LABEL_203;
    }
    memmove(v148, v145, v147);
LABEL_203:
    v148->__r_.__value_.__s.__data_[v147] = 0;
    LODWORD(v274.__pn_.__r_.__value_.__r.__words[1]) = 0;
    v274.__pn_.__r_.__value_.__r.__words[0] = 0;
    v152 = sub_2394E5DE4((uint64_t **)(a2 + 56), (uint64_t)&v274, (unsigned __int8 *)&__dst);
    v95 = v152 != -1;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
    v121 = v152;
    goto LABEL_206;
  }
  v95 = 0;
  v121 = 0xFFFFFFFFLL;
LABEL_206:
  v266 = v121;
  v154 = *(_QWORD *)(a2 + 152);
  v153 = *(_QWORD *)(a2 + 160);
  sub_239458500(&v276, (uint64_t)"# ", 2);
  v155 = v153 - v154;
  v156 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v156, (uint64_t)" faces (triangles)\n", 19);
  v157 = operator new(0xCuLL);
  __dst.__r_.__value_.__l.__size_ = (std::string::size_type)(v157 + 3);
  __dst.__r_.__value_.__r.__words[2] = (std::string::size_type)(v157 + 3);
  *(_QWORD *)v157 = -1;
  v157[2] = -1;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v157;
  if (!(v155 >> 2))
    goto LABEL_344;
  v158 = 0;
  v159 = 0;
  v268 = (v155 >> 2);
  v264 = v120;
  do
  {
    v160 = v270;
    if (!*(_BYTE *)(a3 + 9))
      v160 = 0;
    if (!v160)
      goto LABEL_281;
    v161 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v96);
    v162 = *v161;
    v163 = (std::__shared_weak_count *)v161[1];
    if (v163)
    {
      v164 = (unint64_t *)&v163->__shared_owners_;
      do
        v165 = __ldxr(v164);
      while (__stxr(v165 + 1, v164));
      do
        v166 = __ldaxr(v164);
      while (__stlxr(v166 - 1, v164));
      if (!v166)
      {
        ((void (*)(std::__shared_weak_count *))v163->__on_zero_shared)(v163);
        std::__shared_weak_count::__release_weak(v163);
        if (*(unsigned __int16 *)(*(_QWORD *)(v162 + 40) + 2 * v158) != v159)
          goto LABEL_281;
LABEL_217:
        v167 = (uint64_t *)(*(_QWORD *)(a2 + 80) + 16 * v264);
        v168 = *v167;
        v169 = (std::__shared_weak_count *)v167[1];
        if (v169)
        {
          v170 = (unint64_t *)&v169->__shared_owners_;
          do
            v171 = __ldxr(v170);
          while (__stxr(v171 + 1, v170));
          do
            v172 = __ldaxr(v170);
          while (__stlxr(v172 - 1, v170));
          if (!v172)
          {
            ((void (*)(std::__shared_weak_count *))v169->__on_zero_shared)(v169);
            std::__shared_weak_count::__release_weak(v169);
          }
        }
        v173 = *(_QWORD *)(v168 + 40);
        v174 = sub_239458500(&v276, (uint64_t)"\ng ", 3);
        v175 = v173 + 24 * v159;
        v176 = *(char *)(v175 + 23);
        if (v176 >= 0)
          v177 = v173 + 24 * v159;
        else
          v177 = *(_QWORD *)v175;
        if (v176 >= 0)
          v178 = *(unsigned __int8 *)(v175 + 23);
        else
          v178 = *(_QWORD *)(v175 + 8);
        v179 = sub_239458500(v174, v177, v178);
        std::ios_base::getloc((const std::ios_base *)((char *)v179 + *(_QWORD *)(*v179 - 24)));
        v180 = std::locale::use_facet((const std::locale *)&v274, MEMORY[0x24BEDB350]);
        ((void (*)(const std::locale::facet *, uint64_t))v180->__vftable[2].~facet_0)(v180, 10);
        std::locale::~locale((std::locale *)&v274);
        std::ostream::put();
        std::ostream::flush();
        if (v265 == -1)
          goto LABEL_280;
        v181 = (uint64_t *)(*(_QWORD *)(a2 + 80) + 16 * v265);
        v182 = *v181;
        v183 = (std::__shared_weak_count *)v181[1];
        if (!v183)
          goto LABEL_235;
        v184 = (unint64_t *)&v183->__shared_owners_;
        do
          v185 = __ldxr(v184);
        while (__stxr(v185 + 1, v184));
        do
          v186 = __ldaxr(v184);
        while (__stlxr(v186 - 1, v184));
        if (!v186)
        {
          ((void (*)(std::__shared_weak_count *))v183->__on_zero_shared)(v183);
          std::__shared_weak_count::__release_weak(v183);
          v198 = *(_QWORD *)(v182 + 40);
          v199 = *(_QWORD *)(v198 + 8);
          v188 = v198 + 8;
          v189 = v199;
          if (!v199)
            goto LABEL_251;
        }
        else
        {
LABEL_235:
          v187 = *(_QWORD *)(v182 + 40);
          v190 = *(_QWORD *)(v187 + 8);
          v188 = v187 + 8;
          v189 = v190;
          if (!v190)
            goto LABEL_251;
        }
        v191 = v188;
        do
        {
          v192 = *(unsigned __int16 *)(v189 + 32);
          v193 = v192 >= v159;
          if (v192 >= v159)
            v194 = (uint64_t *)v189;
          else
            v194 = (uint64_t *)(v189 + 8);
          if (v193)
            v191 = v189;
          v189 = *v194;
        }
        while (*v194);
        if (v191 != v188 && *(unsigned __int16 *)(v191 + 32) <= v159)
        {
          v195 = (uint64_t *)(*(_QWORD *)(a2 + 80) + 16 * v265);
          v196 = *v195;
          v197 = (std::__shared_weak_count *)v195[1];
          if (!v197)
            goto LABEL_256;
          goto LABEL_252;
        }
LABEL_251:
        v191 = v188;
        v200 = (uint64_t *)(*(_QWORD *)(a2 + 80) + 16 * v265);
        v196 = *v200;
        v197 = (std::__shared_weak_count *)v200[1];
        if (!v197)
          goto LABEL_256;
LABEL_252:
        v201 = (unint64_t *)&v197->__shared_owners_;
        do
          v202 = __ldxr(v201);
        while (__stxr(v202 + 1, v201));
        do
          v203 = __ldaxr(v201);
        while (__stlxr(v203 - 1, v201));
        if (!v203)
        {
          ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
          std::__shared_weak_count::__release_weak(v197);
          if (v191 != *(_QWORD *)(v196 + 40) + 8)
          {
LABEL_257:
            v204 = (uint64_t *)(*(_QWORD *)(a2 + 80) + 16 * v265);
            v205 = *v204;
            v206 = (std::__shared_weak_count *)v204[1];
            if (!v206)
              goto LABEL_262;
            v207 = (unint64_t *)&v206->__shared_owners_;
            do
              v208 = __ldxr(v207);
            while (__stxr(v208 + 1, v207));
            do
              v209 = __ldaxr(v207);
            while (__stlxr(v209 - 1, v207));
            if (v209)
            {
LABEL_262:
              v210 = *(uint64_t ***)(*(_QWORD *)(v205 + 40) + 8);
              if (v210)
                goto LABEL_269;
LABEL_369:
              sub_23941D898("map::at:  key not found");
            }
            ((void (*)(std::__shared_weak_count *))v206->__on_zero_shared)(v206);
            std::__shared_weak_count::__release_weak(v206);
            v210 = *(uint64_t ***)(*(_QWORD *)(v205 + 40) + 8);
            if (!v210)
              goto LABEL_369;
            while (1)
            {
LABEL_269:
              while (1)
              {
                v211 = *((unsigned __int16 *)v210 + 16);
                if (v211 <= v159)
                  break;
                v210 = (uint64_t **)*v210;
                if (!v210)
                  goto LABEL_369;
              }
              if (v211 >= v159)
                break;
              v210 = (uint64_t **)v210[1];
              if (!v210)
                goto LABEL_369;
            }
            v212 = sub_239458500(&v276, (uint64_t)"usemtl ", 7);
            v215 = (uint64_t)v210[5];
            v214 = (uint64_t)(v210 + 5);
            v213 = v215;
            v216 = *(char *)(v214 + 23);
            if (v216 >= 0)
              v217 = v214;
            else
              v217 = v213;
            if (v216 >= 0)
              v218 = *(unsigned __int8 *)(v214 + 23);
            else
              v218 = *(_QWORD *)(v214 + 8);
            v219 = sub_239458500(v212, v217, v218);
            std::ios_base::getloc((const std::ios_base *)((char *)v219 + *(_QWORD *)(*v219 - 24)));
            v220 = std::locale::use_facet((const std::locale *)&v274, MEMORY[0x24BEDB350]);
            ((void (*)(const std::locale::facet *, uint64_t))v220->__vftable[2].~facet_0)(v220, 10);
            std::locale::~locale((std::locale *)&v274);
            std::ostream::put();
            std::ostream::flush();
          }
LABEL_280:
          ++v159;
          goto LABEL_281;
        }
LABEL_256:
        if (v191 != *(_QWORD *)(v196 + 40) + 8)
          goto LABEL_257;
        goto LABEL_280;
      }
    }
    if (*(unsigned __int16 *)(*(_QWORD *)(v162 + 40) + 2 * v158) == v159)
      goto LABEL_217;
LABEL_281:
    sub_239458500(&v276, (uint64_t)"f ", 2);
    LODWORD(v274.__pn_.__r_.__value_.__l.__data_) = v158;
    sub_23996362C(a2, (unsigned int *)&v274, (uint64_t)&__dst);
    if (v95)
    {
      v221 = *(std::__shared_weak_count **)(*(_QWORD *)(a2 + 56) + 16 * v266 + 8);
      if (v221)
      {
        v222 = (unint64_t *)&v221->__shared_owners_;
        do
          v223 = __ldxr(v222);
        while (__stxr(v223 + 1, v222));
        do
          v224 = __ldaxr(v222);
        while (__stlxr(v224 - 1, v222));
        if (!v224)
        {
          ((void (*)(std::__shared_weak_count *))v221->__on_zero_shared)(v221);
          std::__shared_weak_count::__release_weak(v221);
        }
      }
    }
    std::ostream::operator<<();
    v225 = v158 + 1;
    if (v95)
    {
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
      std::ostream::operator<<();
      if (!*(_BYTE *)a3)
        goto LABEL_306;
    }
    else
    {
      if (!*(_BYTE *)a3)
        goto LABEL_306;
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
    }
    v226 = *(_DWORD *)(a3 + 4);
    if (v226 == 3)
    {
      if (v267 == -1)
        goto LABEL_306;
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
      v227 = *(std::__shared_weak_count **)(*(_QWORD *)(a2 + 56) + 16 * v267 + 8);
      if (v227)
      {
        v228 = (unint64_t *)&v227->__shared_owners_;
        do
          v229 = __ldxr(v228);
        while (__stxr(v229 + 1, v228));
        do
          v230 = __ldaxr(v228);
        while (__stlxr(v230 - 1, v228));
        if (!v230)
        {
          ((void (*)(std::__shared_weak_count *))v227->__on_zero_shared)(v227);
          std::__shared_weak_count::__release_weak(v227);
        }
      }
      goto LABEL_305;
    }
    if (v226 == 2 || v226 == 1)
    {
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
LABEL_305:
      std::ostream::operator<<();
    }
LABEL_306:
    sub_239458500(&v276, (uint64_t)" ", 1);
    std::ostream::operator<<();
    if (v95)
    {
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
      std::ostream::operator<<();
      if (!*(_BYTE *)a3)
        goto LABEL_324;
    }
    else
    {
      if (!*(_BYTE *)a3)
        goto LABEL_324;
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
    }
    v231 = *(_DWORD *)(a3 + 4);
    if (v231 == 1 || v231 == 2)
    {
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
LABEL_323:
      std::ostream::operator<<();
      goto LABEL_324;
    }
    if (v231 == 3 && v267 != -1)
    {
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
      v232 = *(std::__shared_weak_count **)(*(_QWORD *)(a2 + 56) + 16 * v267 + 8);
      if (v232)
      {
        v233 = (unint64_t *)&v232->__shared_owners_;
        do
          v234 = __ldxr(v233);
        while (__stxr(v234 + 1, v233));
        do
          v235 = __ldaxr(v233);
        while (__stlxr(v235 - 1, v233));
        if (!v235)
        {
          ((void (*)(std::__shared_weak_count *))v232->__on_zero_shared)(v232);
          std::__shared_weak_count::__release_weak(v232);
        }
      }
      goto LABEL_323;
    }
LABEL_324:
    sub_239458500(&v276, (uint64_t)" ", 1);
    std::ostream::operator<<();
    if (v95)
    {
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
      std::ostream::operator<<();
      if (!*(_BYTE *)a3)
        goto LABEL_342;
    }
    else
    {
      if (!*(_BYTE *)a3)
        goto LABEL_342;
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
    }
    v236 = *(_DWORD *)(a3 + 4);
    if (v236 == 1 || v236 == 2)
    {
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
LABEL_341:
      std::ostream::operator<<();
      goto LABEL_342;
    }
    if (v236 == 3 && v267 != -1)
    {
      v274.__pn_.__r_.__value_.__s.__data_[0] = 47;
      sub_239458500(&v276, (uint64_t)&v274, 1);
      v237 = *(std::__shared_weak_count **)(*(_QWORD *)(a2 + 56) + 16 * v267 + 8);
      if (v237)
      {
        v238 = (unint64_t *)&v237->__shared_owners_;
        do
          v239 = __ldxr(v238);
        while (__stxr(v239 + 1, v238));
        do
          v240 = __ldaxr(v238);
        while (__stlxr(v240 - 1, v238));
        if (!v240)
        {
          ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
          std::__shared_weak_count::__release_weak(v237);
        }
      }
      goto LABEL_341;
    }
LABEL_342:
    std::ios_base::getloc((const std::ios_base *)((char *)&v276 + *(_QWORD *)(v276 - 24)));
    v241 = std::locale::use_facet((const std::locale *)&v274, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v241->__vftable[2].~facet_0)(v241, 10);
    std::locale::~locale((std::locale *)&v274);
    std::ostream::put();
    std::ostream::flush();
    ++v158;
  }
  while (v225 != v268);
  v157 = (_DWORD *)__dst.__r_.__value_.__r.__words[0];
  if (__dst.__r_.__value_.__r.__words[0])
  {
LABEL_344:
    __dst.__r_.__value_.__l.__size_ = (std::string::size_type)v157;
    operator delete(v157);
  }
  v276 = *MEMORY[0x24BEDB7E8];
  *(uint64_t *)((char *)&v276 + *(_QWORD *)(v276 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 24);
  MEMORY[0x23B83DC8C](&v277);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v278);
  return 1;
}

void sub_2399512F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,std::locale a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,uint64_t a50)
{
  if (a42 < 0)
    operator delete(__p);
  if (a49 < 0)
    operator delete(a44.__locale_);
  sub_23955C978(&a50);
  _Unwind_Resume(a1);
}

uint64_t sub_2399516C0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  std::string *v8;
  std::__fs::filesystem::path *v9;
  __int128 v10;
  std::__fs::filesystem::path __replacement;
  void *__p[2];
  std::string::size_type v14;
  std::__fs::filesystem::path v15;

  sub_23994F3B0(a1, a2, a4);
  if (!*(_BYTE *)(a4 + 9))
    return 1;
  memset(&v15, 0, sizeof(v15));
  v7 = *(unsigned __int8 *)(a1 + 23);
  if ((v7 & 0x80u) == 0)
    v8 = (std::string *)a1;
  else
    v8 = *(std::string **)a1;
  if ((v7 & 0x80u) != 0)
    v7 = *(_QWORD *)(a1 + 8);
  sub_23948900C(&v15.__pn_, v8, (std::string *)((char *)v8 + v7));
  memset(&__replacement, 0, sizeof(__replacement));
  sub_23948900C(&__replacement.__pn_, (std::string *)".mtl", (std::string *)"");
  v9 = std::__fs::filesystem::path::replace_extension(&v15, &__replacement);
  if (SHIBYTE(v9->__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(__p, v9->__pn_.__r_.__value_.__l.__data_, v9->__pn_.__r_.__value_.__l.__size_);
  }
  else
  {
    v10 = *(_OWORD *)&v9->__pn_.__r_.__value_.__l.__data_;
    v14 = v9->__pn_.__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v10;
  }
  sub_23995186C((uint64_t)__p, a3, a4 + 16);
  if ((SHIBYTE(v14) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_12;
LABEL_15:
    operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v15.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return 1;
    goto LABEL_16;
  }
  operator delete(__p[0]);
  if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_15;
LABEL_12:
  if ((SHIBYTE(v15.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    return 1;
LABEL_16:
  operator delete(v15.__pn_.__r_.__value_.__l.__data_);
  return 1;
}

void sub_2399517EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0)
  {
    operator delete(a16);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a27 & 0x80000000) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a27 & 0x80000000) == 0)
LABEL_5:
    _Unwind_Resume(exception_object);
LABEL_4:
  operator delete(__p);
  goto LABEL_5;
}

uint64_t sub_23995186C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  std::string *v5;
  std::__fs::filesystem::path::__string_view v6;
  std::string *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v8;
  std::basic_string_view<_CharT, _Traits>::size_type v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  const std::locale::facet *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  const std::locale::facet *v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  uint64_t *v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  std::string::size_type size;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  std::string *v37;
  std::string *v38;
  std::string::size_type v39;
  std::string *v40;
  __int128 v41;
  std::string *v42;
  std::string::size_type v43;
  std::string *v44;
  __int128 v45;
  int v46;
  const std::string::value_type *v47;
  std::string::size_type v48;
  std::string *v49;
  __int128 v50;
  void **v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  std::string *v55;
  std::string::size_type v56;
  _QWORD *v57;
  const std::locale::facet *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  int v63;
  std::__fs::filesystem::path::__string_view v64;
  std::string *v65;
  void **v66;
  __int128 v67;
  std::basic_string_view<_CharT, _Traits>::size_type v68;
  std::basic_string_view<_CharT, _Traits>::size_type v69;
  __int128 v70;
  int v71;
  std::string::size_type v72;
  std::string *v73;
  std::string *v74;
  std::string::size_type v75;
  uint64_t v76;
  std::string::size_type v77;
  unint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  _QWORD *v84;
  std::__fs::filesystem::path::__string_view v85;
  std::string *v86;
  std::basic_string_view<_CharT, _Traits>::size_type v87;
  std::basic_string_view<_CharT, _Traits>::size_type v88;
  __int128 v89;
  int v90;
  std::string::size_type v91;
  std::string *v92;
  std::string *v93;
  std::string::size_type v94;
  std::__fs::filesystem::path::__string_view v95;
  _QWORD *v96;
  uint64_t v97;
  int v98;
  int v99;
  uint64_t *v100;
  int v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *p_shared_owners;
  unint64_t v105;
  _QWORD *v106;
  unint64_t i;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  int *v111;
  int v112;
  BOOL v113;
  uint64_t *v114;
  int v115;
  uint64_t v116;
  int *v117;
  int v118;
  BOOL v119;
  uint64_t *v120;
  std::__shared_weak_count *v121;
  uint64_t v122;
  int v123;
  uint32x2_t v124;
  uint64_t v125;
  int *v126;
  int v127;
  BOOL v128;
  uint64_t *v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  std::string::size_type v134;
  uint64_t v135;
  unint64_t *v136;
  unint64_t v137;
  uint64_t v138;
  int *v139;
  int v140;
  BOOL v141;
  uint64_t *v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  std::string::size_type v147;
  unint64_t *v148;
  unint64_t v149;
  uint64_t v150;
  __int32 v151;
  __int32 v152;
  uint64_t v153;
  _QWORD *v154;
  BOOL v155;
  char v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  uint64_t v160;
  int v161;
  int v162;
  uint64_t v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  uint64_t v169;
  int v170;
  int v171;
  uint64_t v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  unsigned int v181;
  uint64_t v182;
  unsigned int v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  int v188;
  uint64_t v189;
  int v190;
  uint64_t v191;
  unsigned int v192;
  uint64_t v193;
  BOOL v194;
  unsigned int v195;
  uint64_t v196;
  int v197;
  std::string::size_type v198;
  unint64_t v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  std::string *v203;
  std::string *v204;
  std::string::size_type v205;
  std::string *v206;
  __int128 v207;
  std::string *v208;
  __int128 v209;
  std::__fs::filesystem::path::__string_view v210;
  std::string *v211;
  std::basic_string_view<_CharT, _Traits>::size_type v212;
  std::basic_string_view<_CharT, _Traits>::size_type v213;
  char *v214;
  std::string *v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  unint64_t *v219;
  unint64_t v220;
  std::__shared_weak_count *v221;
  unint64_t *v222;
  unint64_t v223;
  int v224;
  int v225;
  uint64_t v226;
  int v227;
  uint64_t v228;
  unsigned int v229;
  uint64_t v230;
  unsigned int v232;
  uint64_t v233;
  _QWORD *v234;
  void **v235;
  __int128 v236;
  void **v237;
  __int128 v238;
  std::runtime_error *exception;
  std::string *v241;
  __int128 v242;
  std::string *v243;
  __int128 v244;
  _QWORD *v245;
  unint64_t __val;
  uint32x2_t __vala;
  uint64_t v249;
  std::string v251;
  std::string v252;
  std::string __p;
  std::string v254;
  std::string v255;
  std::string v256;
  std::string v257;
  std::string v258;
  void *v259[2];
  int64_t v260;
  std::string v261;
  std::__fs::filesystem::path v262;
  std::string __dst;
  uint64_t v264;
  _BYTE v265[408];
  _QWORD v266[22];

  v266[19] = *MEMORY[0x24BDAC8D0];
  sub_239953EA8(&v264);
  if ((v265[*(_QWORD *)(v264 - 24) + 24] & 5) != 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    if (*(char *)(a1 + 23) < 0)
      sub_23941A7F8(&v261, *(void **)a1, *(_QWORD *)(a1 + 8));
    else
      v261 = *(std::string *)a1;
    v241 = std::string::insert(&v261, 0, "Unable to save MTL file \"");
    v242 = *(_OWORD *)&v241->__r_.__value_.__l.__data_;
    v262.__pn_.__r_.__value_.__r.__words[2] = v241->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v262.__pn_.__r_.__value_.__l.__data_ = v242;
    v241->__r_.__value_.__l.__size_ = 0;
    v241->__r_.__value_.__r.__words[2] = 0;
    v241->__r_.__value_.__r.__words[0] = 0;
    v243 = std::string::append(&v262.__pn_, "\"!");
    v244 = *(_OWORD *)&v243->__r_.__value_.__l.__data_;
    __dst.__r_.__value_.__r.__words[2] = v243->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v244;
    v243->__r_.__value_.__l.__size_ = 0;
    v243->__r_.__value_.__r.__words[2] = 0;
    v243->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, &__dst);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  memset(&v262, 0, sizeof(v262));
  v4 = *(unsigned __int8 *)(a1 + 23);
  if ((v4 & 0x80u) == 0)
    v5 = (std::string *)a1;
  else
    v5 = *(std::string **)a1;
  if ((v4 & 0x80u) != 0)
    v4 = *(_QWORD *)(a1 + 8);
  sub_23948900C(&v262.__pn_, v5, (std::string *)((char *)v5 + v4));
  v6 = std::__fs::filesystem::path::__stem(&v262);
  if (v6.__size_ > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v6.__size_ >= 0x17)
  {
    v8 = (v6.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6.__size_ | 7) != 0x17)
      v8 = v6.__size_ | 7;
    v9 = v8 + 1;
    p_dst = (std::string *)operator new(v8 + 1);
    __dst.__r_.__value_.__l.__size_ = v6.__size_;
    __dst.__r_.__value_.__r.__words[2] = v9 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_14;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v6.__size_;
  p_dst = &__dst;
  if (v6.__size_)
LABEL_14:
    memmove(p_dst, v6.__data_, v6.__size_);
  p_dst->__r_.__value_.__s.__data_[v6.__size_] = 0;
  v10 = (void *)__dst.__r_.__value_.__r.__words[0];
  LODWORD(v259[0]) = __dst.__r_.__value_.__r.__words[2];
  *(_DWORD *)((char *)v259 + 3) = *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[2] + 3);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&v261, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    operator delete(v10);
  }
  else
  {
    *(_OWORD *)&v261.__r_.__value_.__l.__data_ = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
    LODWORD(v261.__r_.__value_.__r.__words[2]) = v259[0];
    *(_DWORD *)((char *)&v261.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v259 + 3);
    *((_BYTE *)&v261.__r_.__value_.__s + 23) = *((_BYTE *)&__dst.__r_.__value_.__s + 23);
  }
  v11 = sub_239458500(&v264, (uint64_t)"#  \n", 4);
  sub_239458500(v11, (uint64_t)"#  Wavefront MTL\n", 17);
  sub_239458500(&v264, (uint64_t)"#  \n", 4);
  sub_239458500(&v264, (uint64_t)"#  \n\n", 5);
  v12 = a2[1];
  if (v12 != *a2)
  {
    __val = 0;
    v12 = *a2;
    while (1)
    {
      v13 = sub_239458500(&v264, (uint64_t)"newmtl ", 7);
      v14 = v12 + 48 * __val;
      v15 = *(char *)(v14 + 23);
      v16 = v15 >= 0 ? v12 + 48 * __val : *(_QWORD *)v14;
      v17 = v15 >= 0 ? *(unsigned __int8 *)(v14 + 23) : *(_QWORD *)(v14 + 8);
      v18 = sub_239458500(v13, v16, v17);
      std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(_QWORD *)(*v18 - 24)));
      v19 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v19->__vftable[2].~facet_0)(v19, 10);
      std::locale::~locale((std::locale *)&__dst);
      std::ostream::put();
      std::ostream::flush();
      v20 = v12 + 48 * __val;
      if (*(_QWORD *)(v20 + 40))
      {
        v21 = (_QWORD *)(v20 + 24);
        v22 = (_QWORD *)*v21;
        v245 = v21 + 1;
        if ((_QWORD *)*v21 != v21 + 1)
          break;
      }
LABEL_28:
      sub_239458500(&v264, (uint64_t)"#  ", 3);
      std::ios_base::getloc((const std::ios_base *)&v265[*(_QWORD *)(v264 - 24) - 8]);
      v23 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v23->__vftable[2].~facet_0)(v23, 10);
      std::locale::~locale((std::locale *)&__dst);
      std::ostream::put();
      std::ostream::flush();
      v12 = *a2;
      v24 = a2[1];
      if (++__val >= 0xAAAAAAAAAAAAAAABLL * ((v24 - *a2) >> 4))
        goto LABEL_236;
    }
    while (1)
    {
      v25 = *((_DWORD *)v22 + 7);
      v26 = *((unsigned __int16 *)v22 + 16);
      v259[0] = 0;
      v259[1] = 0;
      v260 = 0;
      if ((v25 - 1) < 0xD)
        MEMORY[0x23B83DBFC](v259, off_250AF09B0[v25 - 1]);
      v27 = *(uint64_t **)(a3 + 8);
      if (!v27)
LABEL_465:
        sub_23941D898("map::at:  key not found");
      while (1)
      {
        while (1)
        {
          v28 = *((_DWORD *)v27 + 8);
          if (v25 >= v28)
            break;
          v27 = (uint64_t *)*v27;
          if (!v27)
            goto LABEL_465;
        }
        if (v28 >= v25)
          break;
        v27 = (uint64_t *)v27[1];
        if (!v27)
          goto LABEL_465;
      }
      v29 = a2[3];
      memset(&v258, 0, sizeof(v258));
      v30 = *(_DWORD *)(v29 + 48 * v26) - 1;
      if (v30 < 0xD)
        MEMORY[0x23B83DBFC](&v258, off_250AF0A18[v30]);
      v31 = SHIBYTE(v261.__r_.__value_.__r.__words[2]);
      if ((v261.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v261.__r_.__value_.__r.__words[2]);
      else
        size = v261.__r_.__value_.__l.__size_;
      v33 = size + 1;
      if (size + 1 > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      if (v33 >= 0x17)
      {
        v35 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v33 | 7) != 0x17)
          v35 = v33 | 7;
        v36 = v35 + 1;
        v34 = (char *)operator new(v35 + 1);
        v255.__r_.__value_.__l.__size_ = size + 1;
        v255.__r_.__value_.__r.__words[2] = v36 | 0x8000000000000000;
        v255.__r_.__value_.__r.__words[0] = (std::string::size_type)v34;
      }
      else
      {
        memset(&v255, 0, sizeof(v255));
        v34 = (char *)&v255;
        *((_BYTE *)&v255.__r_.__value_.__s + 23) = size + 1;
        if (!size)
          goto LABEL_56;
      }
      if (v31 >= 0)
        v37 = &v261;
      else
        v37 = (std::string *)v261.__r_.__value_.__r.__words[0];
      memmove(v34, v37, size);
LABEL_56:
      *(_WORD *)&v34[size] = 95;
      if ((v258.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v38 = &v258;
      else
        v38 = (std::string *)v258.__r_.__value_.__r.__words[0];
      if ((v258.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v39 = HIBYTE(v258.__r_.__value_.__r.__words[2]);
      else
        v39 = v258.__r_.__value_.__l.__size_;
      v40 = std::string::append(&v255, (const std::string::value_type *)v38, v39);
      v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
      v256.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v256.__r_.__value_.__l.__data_ = v41;
      v40->__r_.__value_.__l.__size_ = 0;
      v40->__r_.__value_.__r.__words[2] = 0;
      v40->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v254, __val);
      if ((v254.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v42 = &v254;
      else
        v42 = (std::string *)v254.__r_.__value_.__r.__words[0];
      if ((v254.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v43 = HIBYTE(v254.__r_.__value_.__r.__words[2]);
      else
        v43 = v254.__r_.__value_.__l.__size_;
      v44 = std::string::append(&v256, (const std::string::value_type *)v42, v43);
      v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
      __dst.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v45;
      v44->__r_.__value_.__l.__size_ = 0;
      v44->__r_.__value_.__r.__words[2] = 0;
      v44->__r_.__value_.__r.__words[0] = 0;
      v46 = *((char *)v27 + 95);
      if (v46 >= 0)
        v47 = (const std::string::value_type *)(v27 + 9);
      else
        v47 = (const std::string::value_type *)v27[9];
      if (v46 >= 0)
        v48 = *((unsigned __int8 *)v27 + 95);
      else
        v48 = v27[10];
      v49 = std::string::append(&__dst, v47, v48);
      v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
      v257.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v257.__r_.__value_.__l.__data_ = v50;
      v49->__r_.__value_.__l.__size_ = 0;
      v49->__r_.__value_.__r.__words[2] = 0;
      v49->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__dst.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v254.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_76:
          if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
            goto LABEL_104;
          goto LABEL_77;
        }
      }
      else if ((SHIBYTE(v254.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_76;
      }
      operator delete(v254.__r_.__value_.__l.__data_);
      if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_104:
        operator delete(v256.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v255.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_78;
        goto LABEL_105;
      }
LABEL_77:
      if ((SHIBYTE(v255.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_78;
LABEL_105:
      operator delete(v255.__r_.__value_.__l.__data_);
LABEL_78:
      if (v260 >= 0)
        v51 = v259;
      else
        v51 = (void **)v259[0];
      if (v260 >= 0)
        v52 = HIBYTE(v260);
      else
        v52 = (uint64_t)v259[1];
      v53 = sub_239458500(&v264, (uint64_t)v51, v52);
      v54 = sub_239458500(v53, (uint64_t)" ", 1);
      if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v55 = &v257;
      else
        v55 = (std::string *)v257.__r_.__value_.__r.__words[0];
      if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v56 = HIBYTE(v257.__r_.__value_.__r.__words[2]);
      else
        v56 = v257.__r_.__value_.__l.__size_;
      v57 = sub_239458500(v54, (uint64_t)v55, v56);
      std::ios_base::getloc((const std::ios_base *)((char *)v57 + *(_QWORD *)(*v57 - 24)));
      v58 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v58->__vftable[2].~facet_0)(v58, 10);
      std::locale::~locale((std::locale *)&__dst);
      std::ostream::put();
      std::ostream::flush();
      v59 = v27 + 5;
      v60 = a2[3];
      v61 = v60 + 48 * v26;
      if (*(_BYTE *)(v61 + 4))
      {
        v62 = *(uint64_t **)(a3 + 32);
        if (!v62)
LABEL_466:
          sub_23941D898("map::at:  key not found");
        while (1)
        {
          while (1)
          {
            v63 = *((_DWORD *)v62 + 8);
            if (v25 >= v63)
              break;
            v62 = (uint64_t *)*v62;
            if (!v62)
              goto LABEL_466;
          }
          if (v63 >= v25)
            break;
          v62 = (uint64_t *)v62[1];
          if (!v62)
            goto LABEL_466;
        }
        v64 = std::__fs::filesystem::path::__parent_path(&v262);
        if (v64.__size_ > 0x7FFFFFFFFFFFFFF7)
          sub_23941A5AC();
        if (v64.__size_ >= 0x17)
        {
          v68 = (v64.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v64.__size_ | 7) != 0x17)
            v68 = v64.__size_ | 7;
          v69 = v68 + 1;
          v65 = (std::string *)operator new(v68 + 1);
          __dst.__r_.__value_.__l.__size_ = v64.__size_;
          __dst.__r_.__value_.__r.__words[2] = v69 | 0x8000000000000000;
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v65;
        }
        else
        {
          *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v64.__size_;
          v65 = &__dst;
          if (!v64.__size_)
          {
LABEL_113:
            v65->__r_.__value_.__s.__data_[v64.__size_] = 0;
            v70 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
            LODWORD(v254.__r_.__value_.__l.__data_) = __dst.__r_.__value_.__r.__words[2];
            *(_DWORD *)((char *)v254.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[2]
                                                                                + 3);
            v71 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
            memset(&__dst, 0, sizeof(__dst));
            v72 = HIBYTE(v257.__r_.__value_.__r.__words[2]);
            if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v73 = &v257;
            else
              v73 = (std::string *)v257.__r_.__value_.__r.__words[0];
            if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v72 = v257.__r_.__value_.__l.__size_;
            sub_23948900C(&__dst, v73, (std::string *)((char *)v73 + v72));
            if (v71 < 0)
            {
              sub_23941A7F8(&v256, (void *)v70, *((unint64_t *)&v70 + 1));
            }
            else
            {
              *(_OWORD *)&v256.__r_.__value_.__l.__data_ = v70;
              LODWORD(v256.__r_.__value_.__r.__words[2]) = v254.__r_.__value_.__l.__data_;
              *(_DWORD *)((char *)&v256.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v254.__r_.__value_.__r.__words
                                                                                      + 3);
              *((_BYTE *)&v256.__r_.__value_.__s + 23) = v71;
            }
            if (std::__fs::filesystem::path::__root_directory((const std::__fs::filesystem::path *)&__dst).__size_)
            {
              std::string::operator=(&v256, &__dst);
            }
            else
            {
              if (std::__fs::filesystem::path::__filename((const std::__fs::filesystem::path *)&v256).__size_)
                std::string::push_back(&v256, 47);
              if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v74 = &__dst;
              else
                v74 = (std::string *)__dst.__r_.__value_.__r.__words[0];
              if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v75 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
              else
                v75 = __dst.__r_.__value_.__l.__size_;
              std::string::append(&v256, (const std::string::value_type *)v74, v75);
            }
            if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
              sub_23941A7F8(&__p, v256.__r_.__value_.__l.__data_, v256.__r_.__value_.__l.__size_);
            else
              __p = v256;
            v76 = a2[3] + 48 * v26;
            v255.__r_.__value_.__r.__words[0] = *(_QWORD *)(v76 + 8);
            v77 = *(_QWORD *)(v76 + 16);
            v255.__r_.__value_.__l.__size_ = v77;
            if (v77)
            {
              v78 = (unint64_t *)(v77 + 8);
              do
                v79 = __ldxr(v78);
              while (__stxr(v79 + 1, v78));
            }
            v80 = v62[8];
            if (!v80)
              sub_2394172E0();
            (*(void (**)(uint64_t, std::string *))(*(_QWORD *)v80 + 48))(v80, &__p);
            v81 = (std::__shared_weak_count *)v255.__r_.__value_.__l.__size_;
            if (!v255.__r_.__value_.__l.__size_)
              goto LABEL_143;
            v82 = (unint64_t *)(v255.__r_.__value_.__l.__size_ + 8);
            do
              v83 = __ldaxr(v82);
            while (__stlxr(v83 - 1, v82));
            if (!v83)
            {
              ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
              std::__shared_weak_count::__release_weak(v81);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                goto LABEL_149;
LABEL_144:
              if ((SHIBYTE(v256.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                goto LABEL_145;
LABEL_150:
              operator delete(v256.__r_.__value_.__l.__data_);
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                goto LABEL_151;
LABEL_146:
              if (v71 < 0)
                goto LABEL_152;
            }
            else
            {
LABEL_143:
              if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                goto LABEL_144;
LABEL_149:
              operator delete(__p.__r_.__value_.__l.__data_);
              if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
                goto LABEL_150;
LABEL_145:
              if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                goto LABEL_146;
LABEL_151:
              operator delete(__dst.__r_.__value_.__l.__data_);
              if (v71 < 0)
              {
LABEL_152:
                operator delete((void *)v70);
                if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
                  goto LABEL_153;
                goto LABEL_224;
              }
            }
LABEL_223:
            if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_153;
            goto LABEL_224;
          }
        }
        memmove(v65, v64.__data_, v64.__size_);
        goto LABEL_113;
      }
      if (!*(_BYTE *)(v60 + 48 * v26 + 5))
        goto LABEL_223;
      v66 = (void **)(v60 + 48 * v26 + 24);
      if (*(char *)(v61 + 47) < 0)
      {
        sub_23941A7F8(&__dst, *v66, *(_QWORD *)(v60 + 48 * v26 + 32));
      }
      else
      {
        v67 = *(_OWORD *)v66;
        __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v60 + 48 * v26 + 40);
        *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v67;
      }
      v256 = __dst;
      v85 = std::__fs::filesystem::path::__parent_path(&v262);
      if (v85.__size_ > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      if (v85.__size_ >= 0x17)
      {
        v87 = (v85.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v85.__size_ | 7) != 0x17)
          v87 = v85.__size_ | 7;
        v88 = v87 + 1;
        v86 = (std::string *)operator new(v87 + 1);
        __dst.__r_.__value_.__l.__size_ = v85.__size_;
        __dst.__r_.__value_.__r.__words[2] = v88 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v86;
LABEL_165:
        memmove(v86, v85.__data_, v85.__size_);
        goto LABEL_166;
      }
      *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v85.__size_;
      v86 = &__dst;
      if (v85.__size_)
        goto LABEL_165;
LABEL_166:
      v86->__r_.__value_.__s.__data_[v85.__size_] = 0;
      v89 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      LODWORD(v254.__r_.__value_.__l.__data_) = __dst.__r_.__value_.__r.__words[2];
      *(_DWORD *)((char *)v254.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[2]
                                                                          + 3);
      v90 = SHIBYTE(__dst.__r_.__value_.__r.__words[2]);
      memset(&__dst, 0, sizeof(__dst));
      v91 = HIBYTE(v257.__r_.__value_.__r.__words[2]);
      if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v92 = &v257;
      else
        v92 = (std::string *)v257.__r_.__value_.__r.__words[0];
      if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v91 = v257.__r_.__value_.__l.__size_;
      sub_23948900C(&__dst, v92, (std::string *)((char *)v92 + v91));
      if (v90 < 0)
      {
        sub_23941A7F8(&v255, (void *)v89, *((unint64_t *)&v89 + 1));
      }
      else
      {
        *(_OWORD *)&v255.__r_.__value_.__l.__data_ = v89;
        LODWORD(v255.__r_.__value_.__r.__words[2]) = v254.__r_.__value_.__l.__data_;
        *(_DWORD *)((char *)&v255.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v254.__r_.__value_.__r.__words
                                                                                + 3);
        *((_BYTE *)&v255.__r_.__value_.__s + 23) = v90;
      }
      if (std::__fs::filesystem::path::__root_directory((const std::__fs::filesystem::path *)&__dst).__size_)
      {
        std::string::operator=(&v255, &__dst);
      }
      else
      {
        if (std::__fs::filesystem::path::__filename((const std::__fs::filesystem::path *)&v255).__size_)
          std::string::push_back(&v255, 47);
        if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v93 = &__dst;
        else
          v93 = (std::string *)__dst.__r_.__value_.__r.__words[0];
        if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v94 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
        else
          v94 = __dst.__r_.__value_.__l.__size_;
        std::string::append(&v255, (const std::string::value_type *)v93, v94);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__dst.__r_.__value_.__l.__data_);
        if ((v90 & 0x80000000) == 0)
          goto LABEL_187;
      }
      else if ((v90 & 0x80000000) == 0)
      {
        goto LABEL_187;
      }
      operator delete((void *)v89);
LABEL_187:
      if ((v255.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v95.__data_ = (const std::string_view::value_type *)&v255;
      else
        v95.__data_ = (const std::string_view::value_type *)v255.__r_.__value_.__r.__words[0];
      if ((v255.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v95.__size_ = HIBYTE(v255.__r_.__value_.__r.__words[2]);
      else
        v95.__size_ = v255.__r_.__value_.__l.__size_;
      if (!std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)&v256, v95))
        goto LABEL_221;
      v96 = operator new(0x30uLL);
      v96[1] = 0;
      v96[2] = 0;
      v96[3] = 0;
      v97 = (uint64_t)(v96 + 3);
      *v96 = &off_250ADF208;
      v96[4] = 0;
      v96[5] = 0;
      v254.__r_.__value_.__r.__words[0] = (std::string::size_type)(v96 + 3);
      v254.__r_.__value_.__l.__size_ = (std::string::size_type)v96;
      if (SHIBYTE(v256.__r_.__value_.__r.__words[2]) < 0)
        sub_23941A7F8(&__dst, v256.__r_.__value_.__l.__data_, v256.__r_.__value_.__l.__size_);
      else
        __dst = v256;
      v98 = sub_239953B7C(&__dst, v97);
      v99 = v98;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__dst.__r_.__value_.__l.__data_);
        if (!v99)
          goto LABEL_215;
      }
      else if (!v98)
      {
        goto LABEL_215;
      }
      v100 = *(uint64_t **)(a3 + 32);
      if (!v100)
LABEL_467:
        sub_23941D898("map::at:  key not found");
      while (1)
      {
        while (1)
        {
          v101 = *((_DWORD *)v100 + 8);
          if (v25 >= v101)
            break;
          v100 = (uint64_t *)*v100;
          if (!v100)
            goto LABEL_467;
        }
        if (v101 >= v25)
          break;
        v100 = (uint64_t *)v100[1];
        if (!v100)
          goto LABEL_467;
      }
      if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
        sub_23941A7F8(&v252, v255.__r_.__value_.__l.__data_, v255.__r_.__value_.__l.__size_);
      else
        v252 = v255;
      v102 = v100[8];
      if (!v102)
        sub_2394172E0();
      (*(void (**)(uint64_t, std::string *, uint64_t, uint64_t *))(*(_QWORD *)v102 + 48))(v102, &v252, v97, v59);
      if (SHIBYTE(v252.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v252.__r_.__value_.__l.__data_);
        v103 = (std::__shared_weak_count *)v254.__r_.__value_.__l.__size_;
        if (!v254.__r_.__value_.__l.__size_)
          goto LABEL_221;
        goto LABEL_216;
      }
LABEL_215:
      v103 = (std::__shared_weak_count *)v254.__r_.__value_.__l.__size_;
      if (!v254.__r_.__value_.__l.__size_)
        goto LABEL_221;
LABEL_216:
      p_shared_owners = (unint64_t *)&v103->__shared_owners_;
      do
        v105 = __ldaxr(p_shared_owners);
      while (__stlxr(v105 - 1, p_shared_owners));
      if (!v105)
      {
        ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
        std::__shared_weak_count::__release_weak(v103);
      }
LABEL_221:
      if (SHIBYTE(v255.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v255.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v256.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_223;
      }
      else if ((SHIBYTE(v256.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_223;
      }
      operator delete(v256.__r_.__value_.__l.__data_);
      if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_153:
        operator delete(v257.__r_.__value_.__l.__data_);
        if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_154;
        goto LABEL_225;
      }
LABEL_224:
      if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_154:
        operator delete(v258.__r_.__value_.__l.__data_);
        if (SHIBYTE(v260) < 0)
          goto LABEL_155;
        goto LABEL_226;
      }
LABEL_225:
      if (SHIBYTE(v260) < 0)
      {
LABEL_155:
        operator delete(v259[0]);
        v84 = (_QWORD *)v22[1];
        if (v84)
          goto LABEL_227;
        goto LABEL_229;
      }
LABEL_226:
      v84 = (_QWORD *)v22[1];
      if (v84)
      {
        do
        {
LABEL_227:
          v106 = v84;
          v84 = (_QWORD *)*v84;
        }
        while (v84);
        goto LABEL_30;
      }
      do
      {
LABEL_229:
        v106 = (_QWORD *)v22[2];
        v155 = *v106 == (_QWORD)v22;
        v22 = v106;
      }
      while (!v155);
LABEL_30:
      v22 = v106;
      if (v106 == v245)
        goto LABEL_28;
    }
  }
  v24 = a2[1];
LABEL_236:
  if (*(_BYTE *)(a3 + 48) && v24 != v12)
  {
    for (i = 0; i < 0xAAAAAAAAAAAAAAABLL * ((v24 - v12) >> 4); ++i)
    {
      v108 = v12 + 48 * i;
      if (!*(_QWORD *)(v108 + 40))
        continue;
      v110 = (int *)(v108 + 32);
      v109 = *(_QWORD *)(v108 + 32);
      if (!v109)
        goto LABEL_252;
      v111 = v110;
      do
      {
        v112 = *(_DWORD *)(v109 + 28);
        v113 = v112 < 4;
        if (v112 >= 4)
          v114 = (uint64_t *)v109;
        else
          v114 = (uint64_t *)(v109 + 8);
        if (!v113)
          v111 = (int *)v109;
        v109 = *v114;
      }
      while (*v114);
      if (v111 != v110 && v111[7] < 5)
      {
        *(_OWORD *)&v256.__r_.__value_.__l.__data_ = 0uLL;
        v125 = *(_QWORD *)v110;
        if (!*(_QWORD *)v110)
          goto LABEL_278;
        v126 = v110;
        do
        {
          v127 = *(_DWORD *)(v125 + 28);
          v128 = v127 < 4;
          if (v127 >= 4)
            v129 = (uint64_t *)v125;
          else
            v129 = (uint64_t *)(v125 + 8);
          if (!v128)
            v126 = (int *)v125;
          v125 = *v129;
        }
        while (*v129);
        if (v126 == v110 || v126[7] >= 5)
LABEL_278:
          v126 = v110;
        v130 = *((unsigned __int16 *)v126 + 16);
        v131 = a2[3];
        v132 = v131 + 48 * *((unsigned __int16 *)v126 + 16);
        if (*(_BYTE *)(v132 + 4))
        {
          v133 = v131 + 48 * *((unsigned __int16 *)v126 + 16);
          v135 = *(_QWORD *)(v133 + 8);
          v134 = *(_QWORD *)(v133 + 16);
          v249 = v135;
          if (v134)
          {
            v136 = (unint64_t *)(v134 + 8);
            do
              v137 = __ldxr(v136);
            while (__stxr(v137 + 1, v136));
          }
          v256.__r_.__value_.__r.__words[0] = v249;
          v256.__r_.__value_.__l.__size_ = v134;
          v115 = 1;
        }
        else if (*(_BYTE *)(v131 + 48 * *((unsigned __int16 *)v126 + 16) + 5))
        {
          v234 = operator new(0x30uLL);
          v234[1] = 0;
          v234[2] = 0;
          *v234 = &off_250ADF208;
          v234[3] = 0;
          v234[4] = 0;
          v234[5] = 0;
          v249 = (uint64_t)(v234 + 3);
          v256.__r_.__value_.__r.__words[0] = (std::string::size_type)(v234 + 3);
          v256.__r_.__value_.__l.__size_ = (std::string::size_type)v234;
          v235 = (void **)(v131 + 48 * v130 + 24);
          if (*(char *)(v132 + 47) < 0)
          {
            sub_23941A7F8(&__dst, *v235, *(_QWORD *)(v131 + 48 * v130 + 32));
          }
          else
          {
            v236 = *(_OWORD *)v235;
            __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v131 + 48 * v130 + 40);
            *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v236;
          }
          v115 = sub_239953B7C(&__dst, v249);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__dst.__r_.__value_.__l.__data_);
        }
        else
        {
          v249 = 0;
          v115 = 0;
        }
      }
      else
      {
LABEL_252:
        v249 = 0;
        v115 = 0;
        *(_OWORD *)&v256.__r_.__value_.__l.__data_ = 0uLL;
      }
      v116 = *(_QWORD *)v110;
      if (!*(_QWORD *)v110)
        goto LABEL_263;
      v117 = v110;
      do
      {
        v118 = *(_DWORD *)(v116 + 28);
        v119 = v118 < 5;
        if (v118 >= 5)
          v120 = (uint64_t *)v116;
        else
          v120 = (uint64_t *)(v116 + 8);
        if (!v119)
          v117 = (int *)v116;
        v116 = *v120;
      }
      while (*v120);
      if (v117 != v110 && v117[7] < 6)
      {
        *(_OWORD *)&v255.__r_.__value_.__l.__data_ = 0uLL;
        v138 = *(_QWORD *)v110;
        if (!*(_QWORD *)v110)
          goto LABEL_294;
        v139 = v110;
        do
        {
          v140 = *(_DWORD *)(v138 + 28);
          v141 = v140 < 5;
          if (v140 >= 5)
            v142 = (uint64_t *)v138;
          else
            v142 = (uint64_t *)(v138 + 8);
          if (!v141)
            v139 = (int *)v138;
          v138 = *v142;
        }
        while (*v142);
        if (v139 == v110 || v139[7] >= 6)
LABEL_294:
          v139 = v110;
        v143 = *((unsigned __int16 *)v139 + 16);
        v144 = a2[3];
        v145 = v144 + 48 * *((unsigned __int16 *)v139 + 16);
        if (*(_BYTE *)(v145 + 4))
        {
          v146 = v144 + 48 * *((unsigned __int16 *)v139 + 16);
          v122 = *(_QWORD *)(v146 + 8);
          v147 = *(_QWORD *)(v146 + 16);
          if (v147)
          {
            v148 = (unint64_t *)(v147 + 8);
            do
              v149 = __ldxr(v148);
            while (__stxr(v149 + 1, v148));
          }
          v255.__r_.__value_.__r.__words[0] = v122;
          v255.__r_.__value_.__l.__size_ = v147;
          v123 = 1;
          if (!v115)
          {
LABEL_300:
            v124 = 0;
            if (v123)
LABEL_301:
              v124 = vmin_u32(*(uint32x2_t *)(v122 + 4), v124);
LABEL_302:
            v150 = v124.u32[0];
            v151 = 3 * v124.i32[0];
            __vala = v124;
            v152 = v124.i32[1];
            v153 = operator new[]();
            v154 = operator new(0x30uLL);
            v154[1] = 0;
            v154[2] = 0;
            *v154 = &off_250ADF208;
            *((_DWORD *)v154 + 6) = 0;
            *(uint32x2_t *)((char *)v154 + 28) = __vala;
            *((_DWORD *)v154 + 9) = 3;
            v154[5] = v153;
            if (v152)
              v155 = (_DWORD)v150 == 0;
            else
              v155 = 1;
            v156 = v155;
            v254.__r_.__value_.__r.__words[0] = (std::string::size_type)(v154 + 3);
            v254.__r_.__value_.__l.__size_ = (std::string::size_type)v154;
            if ((v115 & 1) != 0)
            {
              if ((v156 & 1) == 0)
              {
                v157 = 0;
                v158 = 0;
                v159 = 0;
                v160 = *(_QWORD *)(v249 + 16);
                v161 = *(_DWORD *)(v249 + 12);
                v162 = *(_DWORD *)(v249 + 4) * v161;
                do
                {
                  v163 = v150;
                  v164 = v157;
                  v165 = v158;
                  do
                  {
                    *(_DWORD *)(v153 + 4 * v165) = *(_DWORD *)(v160 + 4 * v164);
                    v165 += 3;
                    v164 += v161;
                    --v163;
                  }
                  while (v163);
                  ++v159;
                  v158 += 3 * v150;
                  v157 += v162;
                }
                while (v159 != v152);
              }
LABEL_316:
              if ((v123 & 1) != 0)
              {
                if (v152)
                {
                  if ((_DWORD)v150)
                  {
                    v166 = 0;
                    v167 = 0;
                    v168 = 0;
                    v169 = *(_QWORD *)(v122 + 16);
                    v170 = *(_DWORD *)(v122 + 12);
                    v171 = *(_DWORD *)(v122 + 4) * v170;
                    do
                    {
                      v172 = v150;
                      v173 = v166;
                      v174 = v167;
                      do
                      {
                        *(_DWORD *)(v153 + 4 + 4 * v174) = *(_DWORD *)(v169 + 4 * v173);
                        v174 += 3;
                        v173 += v170;
                        --v172;
                      }
                      while (v172);
                      ++v168;
                      v167 += 3 * v150;
                      v166 += v171;
                    }
                    while (v168 != v152);
                  }
LABEL_342:
                  v186 = 3 * (v150 - 1);
                  if ((_DWORD)v150)
                  {
                    v187 = 0;
                    v188 = 0;
                    v189 = v153 + 8;
                    v190 = 3;
                    while (1)
                    {
                      if ((_DWORD)v150 == 1)
                      {
                        v191 = 0;
                      }
                      else
                      {
                        v191 = 0;
                        v194 = __CFADD__(v151 * v188, (_DWORD)v186) || (v186 & 0xFFFFFFFF00000000) != 0;
                        if (!v194 && !((unint64_t)(v150 - 1) >> 32))
                        {
                          v195 = v190;
                          v196 = v150 & 0xFFFFFFFE;
                          do
                          {
                            *(_DWORD *)(v189 + 4 * (v195 - 3)) = 0;
                            *(_DWORD *)(v189 + 4 * v195) = 0;
                            v195 += 6;
                            v196 -= 2;
                          }
                          while (v196);
                          v191 = v150 & 0xFFFFFFFE;
                          if (v191 == v150)
                            goto LABEL_344;
                        }
                      }
                      v192 = 3 * (v187 + v191);
                      v193 = v150 - v191;
                      do
                      {
                        *(_DWORD *)(v189 + 4 * v192) = 0;
                        v192 += 3;
                        --v193;
                      }
                      while (v193);
LABEL_344:
                      ++v188;
                      v190 += 3 * v150;
                      v187 += v150;
                      if (v188 == v152)
                        goto LABEL_360;
                    }
                  }
                  do
                    --v152;
                  while (v152);
                }
LABEL_360:
                v197 = SHIBYTE(v261.__r_.__value_.__r.__words[2]);
                if ((v261.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v198 = HIBYTE(v261.__r_.__value_.__r.__words[2]);
                else
                  v198 = v261.__r_.__value_.__l.__size_;
                v199 = v198 + 4;
                if (v198 + 4 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                if (v199 >= 0x17)
                {
                  v201 = (v199 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v199 | 7) != 0x17)
                    v201 = v199 | 7;
                  v202 = v201 + 1;
                  v200 = operator new(v201 + 1);
                  v258.__r_.__value_.__l.__size_ = v198 + 4;
                  v258.__r_.__value_.__r.__words[2] = v202 | 0x8000000000000000;
                  v258.__r_.__value_.__r.__words[0] = (std::string::size_type)v200;
                }
                else
                {
                  memset(&v258, 0, sizeof(v258));
                  v200 = &v258;
                  *((_BYTE *)&v258.__r_.__value_.__s + 23) = v198 + 4;
                  if (!v198)
                    goto LABEL_374;
                }
                if (v197 >= 0)
                  v203 = &v261;
                else
                  v203 = (std::string *)v261.__r_.__value_.__r.__words[0];
                memmove(v200, v203, v198);
LABEL_374:
                strcpy((char *)v200 + v198, "_orm");
                std::to_string(&v257, i);
                if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v204 = &v257;
                else
                  v204 = (std::string *)v257.__r_.__value_.__r.__words[0];
                if ((v257.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                  v205 = HIBYTE(v257.__r_.__value_.__r.__words[2]);
                else
                  v205 = v257.__r_.__value_.__l.__size_;
                v206 = std::string::append(&v258, (const std::string::value_type *)v204, v205);
                v207 = *(_OWORD *)&v206->__r_.__value_.__l.__data_;
                __dst.__r_.__value_.__r.__words[2] = v206->__r_.__value_.__r.__words[2];
                *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v207;
                v206->__r_.__value_.__l.__size_ = 0;
                v206->__r_.__value_.__r.__words[2] = 0;
                v206->__r_.__value_.__r.__words[0] = 0;
                v208 = std::string::append(&__dst, ".png");
                v209 = *(_OWORD *)&v208->__r_.__value_.__l.__data_;
                v260 = v208->__r_.__value_.__r.__words[2];
                *(_OWORD *)v259 = v209;
                v208->__r_.__value_.__l.__size_ = 0;
                v208->__r_.__value_.__r.__words[2] = 0;
                v208->__r_.__value_.__r.__words[0] = 0;
                if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                {
                  operator delete(__dst.__r_.__value_.__l.__data_);
                  if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
                    goto LABEL_399;
LABEL_382:
                  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
LABEL_400:
                    operator delete(v258.__r_.__value_.__l.__data_);
                }
                else
                {
                  if ((SHIBYTE(v257.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    goto LABEL_382;
LABEL_399:
                  operator delete(v257.__r_.__value_.__l.__data_);
                  if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
                    goto LABEL_400;
                }
                v210 = std::__fs::filesystem::path::__parent_path(&v262);
                if (v210.__size_ > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                if (v210.__size_ >= 0x17)
                {
                  v212 = (v210.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v210.__size_ | 7) != 0x17)
                    v212 = v210.__size_ | 7;
                  v213 = v212 + 1;
                  v211 = (std::string *)operator new(v212 + 1);
                  __dst.__r_.__value_.__l.__size_ = v210.__size_;
                  __dst.__r_.__value_.__r.__words[2] = v213 | 0x8000000000000000;
                  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v211;
                }
                else
                {
                  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v210.__size_;
                  v211 = &__dst;
                  if (!v210.__size_)
                  {
LABEL_391:
                    v211->__r_.__value_.__s.__data_[v210.__size_] = 0;
                    v257 = __dst;
                    memset(&__dst, 0, sizeof(__dst));
                    v214 = (char *)HIBYTE(v260);
                    if (v260 >= 0)
                      v215 = (std::string *)v259;
                    else
                      v215 = (std::string *)v259[0];
                    if (v260 < 0)
                      v214 = (char *)v259[1];
                    sub_23948900C(&__dst, v215, (std::string *)&v214[(_QWORD)v215]);
                    sub_239498A04((std::__fs::filesystem::path *)&__dst, (uint64_t)&v257, (std::__fs::filesystem::path *)&v258);
                    if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
                      sub_23941A7F8(&v251, v258.__r_.__value_.__l.__data_, v258.__r_.__value_.__l.__size_);
                    else
                      v251 = v258;
                    sub_239944A78((uint64_t)&v251, (uint64_t)v254.__r_.__value_.__l.__data_);
                    if (SHIBYTE(v251.__r_.__value_.__r.__words[2]) < 0)
                    {
                      operator delete(v251.__r_.__value_.__l.__data_);
                      if (SHIBYTE(v258.__r_.__value_.__r.__words[2]) < 0)
                        goto LABEL_410;
LABEL_404:
                      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                        goto LABEL_405;
LABEL_411:
                      operator delete(__dst.__r_.__value_.__l.__data_);
                      if (SHIBYTE(v257.__r_.__value_.__r.__words[2]) < 0)
                        goto LABEL_412;
LABEL_406:
                      if ((SHIBYTE(v260) & 0x80000000) == 0)
                        goto LABEL_407;
LABEL_413:
                      operator delete(v259[0]);
                      v216 = (std::__shared_weak_count *)v254.__r_.__value_.__l.__size_;
                      if (!v254.__r_.__value_.__l.__size_)
                      {
LABEL_418:
                        v121 = (std::__shared_weak_count *)v255.__r_.__value_.__l.__size_;
                        goto LABEL_419;
                      }
                    }
                    else
                    {
                      if ((SHIBYTE(v258.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                        goto LABEL_404;
LABEL_410:
                      operator delete(v258.__r_.__value_.__l.__data_);
                      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                        goto LABEL_411;
LABEL_405:
                      if ((SHIBYTE(v257.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                        goto LABEL_406;
LABEL_412:
                      operator delete(v257.__r_.__value_.__l.__data_);
                      if (SHIBYTE(v260) < 0)
                        goto LABEL_413;
LABEL_407:
                      v216 = (std::__shared_weak_count *)v254.__r_.__value_.__l.__size_;
                      if (!v254.__r_.__value_.__l.__size_)
                        goto LABEL_418;
                    }
                    v217 = (unint64_t *)&v216->__shared_owners_;
                    do
                      v218 = __ldaxr(v217);
                    while (__stlxr(v218 - 1, v217));
                    if (!v218)
                    {
                      ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
                      std::__shared_weak_count::__release_weak(v216);
                    }
                    goto LABEL_418;
                  }
                }
                memmove(v211, v210.__data_, v210.__size_);
                goto LABEL_391;
              }
              if (!v152)
                goto LABEL_360;
              if (!(_DWORD)v150)
                goto LABEL_342;
              v175 = 0;
              v176 = 0;
              v177 = v153 + 4;
              v178 = 3 * (v150 - 1);
              v179 = 3;
              while (2)
              {
                if ((_DWORD)v150 == 1)
                {
                  v180 = 0;
                  goto LABEL_330;
                }
                v180 = 0;
                if (__CFADD__(v151 * v176, (_DWORD)v178) || (v178 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_330;
                if ((unint64_t)(v150 - 1) >> 32)
                  goto LABEL_330;
                v184 = v179;
                v185 = v150 & 0xFFFFFFFE;
                do
                {
                  *(_DWORD *)(v177 + 4 * (v184 - 3)) = 1053609165;
                  *(_DWORD *)(v177 + 4 * v184) = 1053609165;
                  v184 += 6;
                  v185 -= 2;
                }
                while (v185);
                v180 = v150 & 0xFFFFFFFE;
                if (v180 != v150)
                {
LABEL_330:
                  v181 = 3 * (v175 + v180);
                  v182 = v150 - v180;
                  do
                  {
                    *(_DWORD *)(v177 + 4 * v181) = 1053609165;
                    v181 += 3;
                    --v182;
                  }
                  while (v182);
                }
                ++v176;
                v179 += 3 * v150;
                v175 += v150;
                if (v176 == v152)
                  goto LABEL_342;
                continue;
              }
            }
            if ((v156 & 1) != 0)
              goto LABEL_316;
            v224 = 0;
            v225 = 0;
            v226 = 3 * (v150 - 1);
            v227 = 3;
            while (2)
            {
              if (v150 < 2)
              {
                v228 = 0;
                goto LABEL_434;
              }
              v228 = 0;
              if (__CFADD__(v151 * v225, (_DWORD)v226) || (v226 & 0xFFFFFFFF00000000) != 0)
                goto LABEL_434;
              if ((unint64_t)(v150 - 1) >> 32)
                goto LABEL_434;
              v232 = v227;
              v233 = v150 & 0xFFFFFFFE;
              do
              {
                *(_DWORD *)(v153 + 4 * (v232 - 3)) = 1065353216;
                *(_DWORD *)(v153 + 4 * v232) = 1065353216;
                v232 += 6;
                v233 -= 2;
              }
              while (v233);
              v228 = v150 & 0xFFFFFFFE;
              if (v228 != v150)
              {
LABEL_434:
                v229 = 3 * (v224 + v228);
                v230 = v150 - v228;
                do
                {
                  *(_DWORD *)(v153 + 4 * v229) = 1065353216;
                  v229 += 3;
                  --v230;
                }
                while (v230);
              }
              ++v225;
              v227 += 3 * v150;
              v224 += v150;
              if (v225 == v152)
                goto LABEL_316;
              continue;
            }
          }
LABEL_266:
          v124 = *(uint32x2_t *)(v249 + 4);
          if (v123)
            goto LABEL_301;
          goto LABEL_302;
        }
        if (*(_BYTE *)(v144 + 48 * *((unsigned __int16 *)v139 + 16) + 5))
        {
          v121 = (std::__shared_weak_count *)operator new(0x30uLL);
          v121->__shared_owners_ = 0;
          v121->__shared_weak_owners_ = 0;
          v121->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADF208;
          v121[1].__vftable = 0;
          v122 = (uint64_t)&v121[1];
          v121[1].__shared_owners_ = 0;
          v121[1].__shared_weak_owners_ = 0;
          v255.__r_.__value_.__r.__words[0] = (std::string::size_type)&v121[1];
          v255.__r_.__value_.__l.__size_ = (std::string::size_type)v121;
          v237 = (void **)(v144 + 48 * v143 + 24);
          if (*(char *)(v145 + 47) < 0)
          {
            sub_23941A7F8(&__dst, *v237, *(_QWORD *)(v144 + 48 * v143 + 32));
          }
          else
          {
            v238 = *(_OWORD *)v237;
            __dst.__r_.__value_.__r.__words[2] = *(_QWORD *)(v144 + 48 * v143 + 40);
            *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v238;
          }
          v123 = sub_239953B7C(&__dst, v122);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__dst.__r_.__value_.__l.__data_);
        }
        else
        {
          v121 = 0;
          v122 = 0;
          v123 = 0;
        }
      }
      else
      {
LABEL_263:
        v121 = 0;
        v122 = 0;
        v123 = 0;
        *(_OWORD *)&v255.__r_.__value_.__l.__data_ = 0uLL;
      }
      if ((v115 | v123) == 1)
      {
        if (!v115)
          goto LABEL_300;
        goto LABEL_266;
      }
      if (!v121)
        goto LABEL_423;
LABEL_419:
      v219 = (unint64_t *)&v121->__shared_owners_;
      do
        v220 = __ldaxr(v219);
      while (__stlxr(v220 - 1, v219));
      if (!v220)
      {
        ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
        std::__shared_weak_count::__release_weak(v121);
        v221 = (std::__shared_weak_count *)v256.__r_.__value_.__l.__size_;
        if (v256.__r_.__value_.__l.__size_)
        {
LABEL_424:
          v222 = (unint64_t *)&v221->__shared_owners_;
          do
            v223 = __ldaxr(v222);
          while (__stlxr(v223 - 1, v222));
          if (!v223)
          {
            ((void (*)(std::__shared_weak_count *))v221->__on_zero_shared)(v221);
            std::__shared_weak_count::__release_weak(v221);
          }
        }
      }
      else
      {
LABEL_423:
        v221 = (std::__shared_weak_count *)v256.__r_.__value_.__l.__size_;
        if (v256.__r_.__value_.__l.__size_)
          goto LABEL_424;
      }
      v12 = *a2;
      v24 = a2[1];
    }
  }
  if (SHIBYTE(v261.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v261.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v262.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_462;
LABEL_464:
    operator delete(v262.__pn_.__r_.__value_.__l.__data_);
    goto LABEL_462;
  }
  if (SHIBYTE(v262.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_464;
LABEL_462:
  v264 = *MEMORY[0x24BEDB7E8];
  *(_QWORD *)&v265[*(_QWORD *)(v264 - 24) - 8] = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 24);
  MEMORY[0x23B83DC8C](v265);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v266);
  return 1;
}

void sub_239953208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,std::locale a63)
{
  uint64_t a67;

  sub_239416DA0((uint64_t)&a32);
  sub_239416DA0((uint64_t)&a35);
  if (a54 < 0)
  {
    operator delete(a49);
    if ((a61 & 0x80000000) == 0)
    {
LABEL_5:
      sub_23955C978(&a67);
      _Unwind_Resume(a1);
    }
  }
  else if ((a61 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(__p);
  goto LABEL_5;
}

uint64_t **sub_2399537CC(uint64_t **a1)
{
  uint64_t **v2;
  uint64_t **v3;
  _DWORD *v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t **v8;
  _QWORD *v9;
  uint64_t *v10;
  int v11;
  int v12;
  char *v13;
  uint64_t *v14;
  uint64_t *v15;
  char *v16;
  void **v17;
  uint64_t *v18;
  int v19;
  uint64_t **v20;
  uint64_t **v21;
  int v22;
  _DWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  _QWORD **v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  a1[1] = 0;
  v2 = a1 + 1;
  a1[2] = 0;
  a1[4] = 0;
  v3 = a1 + 4;
  *a1 = (uint64_t *)(a1 + 1);
  a1[3] = (uint64_t *)(a1 + 4);
  v27 = a1 + 3;
  a1[5] = 0;
  *((_BYTE *)a1 + 48) = 0;
  v4 = operator new(0x34uLL);
  v5 = 0;
  v4[12] = 13;
  *(_OWORD *)v4 = xmmword_239F02948;
  *((_OWORD *)v4 + 1) = unk_239F02958;
  *((_OWORD *)v4 + 2) = xmmword_239F02968;
  do
  {
    v28 = 0u;
    v29 = 0u;
    v31 = 0x400000000000000;
    v30 = 0u;
    BYTE7(v29) = 5;
    qmemcpy(&v28, "uchar", 5);
    WORD4(v29) = 100;
    LODWORD(v30) = 1735420462;
    v8 = v2;
    v9 = v2;
    v10 = *v2;
    v11 = v4[v5];
    if (*v2)
    {
      while (1)
      {
        while (1)
        {
          v9 = v10;
          v12 = *((_DWORD *)v10 + 8);
          if (v11 >= v12)
            break;
          v10 = (uint64_t *)*v9;
          v8 = (uint64_t **)v9;
          if (!*v9)
            goto LABEL_12;
        }
        if (v12 >= v11)
          break;
        v10 = (uint64_t *)v9[1];
        if (!v10)
        {
          v8 = (uint64_t **)(v9 + 1);
          goto LABEL_12;
        }
      }
      v13 = (char *)v9;
      v16 = (char *)(v9 + 5);
      if (*((char *)v9 + 63) < 0)
LABEL_15:
        operator delete(*(void **)v16);
    }
    else
    {
LABEL_12:
      v13 = (char *)operator new(0x60uLL);
      *((_DWORD *)v13 + 8) = v11;
      *(_OWORD *)(v13 + 56) = 0u;
      *(_OWORD *)(v13 + 40) = 0u;
      *((_QWORD *)v13 + 11) = 0;
      *(_OWORD *)(v13 + 72) = 0u;
      v13[63] = 5;
      v13[44] = 114;
      *((_DWORD *)v13 + 10) = 1634231157;
      *((_WORD *)v13 + 32) = 100;
      v13[95] = 4;
      *((_DWORD *)v13 + 18) = 1735420462;
      *(_QWORD *)v13 = 0;
      *((_QWORD *)v13 + 1) = 0;
      *((_QWORD *)v13 + 2) = v9;
      *v8 = (uint64_t *)v13;
      v14 = (uint64_t *)v13;
      v15 = (uint64_t *)**a1;
      if (v15)
      {
        *a1 = v15;
        v14 = *v8;
      }
      sub_2394213B8(a1[1], v14);
      a1[2] = (uint64_t *)((char *)a1[2] + 1);
      v16 = v13 + 40;
      if (v13[63] < 0)
        goto LABEL_15;
    }
    *(_OWORD *)v16 = v28;
    *((_QWORD *)v16 + 2) = v29;
    *((_WORD *)v13 + 32) = 100;
    v17 = (void **)(v13 + 72);
    if (v13[95] < 0)
      operator delete(*v17);
    *(_OWORD *)v17 = v30;
    *((_QWORD *)v13 + 11) = v31;
    v18 = *v3;
    v19 = v4[v5];
    v20 = v3;
    v21 = v3;
    if (*v3)
    {
      while (1)
      {
        while (1)
        {
          v21 = (uint64_t **)v18;
          v22 = *((_DWORD *)v18 + 8);
          if (v19 >= v22)
            break;
          v18 = *v21;
          v20 = v21;
          if (!*v21)
            goto LABEL_25;
        }
        if (v22 >= v19)
          break;
        v18 = v21[1];
        if (!v18)
        {
          v20 = v21 + 1;
          goto LABEL_25;
        }
      }
      v23 = v21;
    }
    else
    {
LABEL_25:
      v23 = operator new(0x48uLL);
      v23[8] = v19;
      *((_QWORD *)v23 + 8) = 0;
      *(_QWORD *)v23 = 0;
      *((_QWORD *)v23 + 1) = 0;
      *((_QWORD *)v23 + 2) = v21;
      *v20 = (uint64_t *)v23;
      v24 = (_QWORD *)**v27;
      v25 = (uint64_t *)v23;
      if (v24)
      {
        *v27 = v24;
        v25 = *v20;
      }
      sub_2394213B8(a1[4], v25);
      a1[5] = (uint64_t *)((char *)a1[5] + 1);
    }
    *(_QWORD *)&v28 = &off_250AF0978;
    *((_QWORD *)&v29 + 1) = &v28;
    sub_23958886C(&v28, (_QWORD *)v23 + 5);
    v6 = (__int128 *)*((_QWORD *)&v29 + 1);
    if (*((__int128 **)&v29 + 1) == &v28)
    {
      v6 = &v28;
      v7 = 4;
LABEL_3:
      (*(void (**)(void))(*(_QWORD *)v6 + 8 * v7))();
      goto LABEL_4;
    }
    if (*((_QWORD *)&v29 + 1))
    {
      v7 = 5;
      goto LABEL_3;
    }
LABEL_4:
    ++v5;
  }
  while (v5 != 13);
  operator delete(v4);
  return a1;
}

void sub_239953B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  sub_2395879A4(a10, 0);
  sub_23958781C(v10, *(_QWORD *)(v10 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_239953B7C(std::string *a1, uint64_t a2)
{
  std::string::size_type size;
  std::string *v5;
  std::__fs::filesystem::path::__string_view v6;
  void **p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v8;
  std::basic_string_view<_CharT, _Traits>::size_type v9;
  void **v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  void **v14;
  __int128 v16;
  std::string::size_type v17;
  __int128 v18;
  std::string::size_type v19;
  __int128 v20;
  std::string::size_type v21;
  std::__fs::filesystem::path v22;
  _DWORD v23[2];
  void **v24;
  std::basic_string_view<_CharT, _Traits>::size_type v25;
  _BYTE v26[7];
  char v27;
  void **__dst;
  std::basic_string_view<_CharT, _Traits>::size_type v29;
  unint64_t v30;

  memset(&v22, 0, sizeof(v22));
  size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0)
    v5 = a1;
  else
    v5 = (std::string *)a1->__r_.__value_.__r.__words[0];
  if ((size & 0x80u) != 0)
    size = a1->__r_.__value_.__l.__size_;
  sub_23948900C(&v22.__pn_, v5, (std::string *)((char *)v5 + size));
  v6 = std::__fs::filesystem::path::__extension(&v22);
  if (v6.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  if (v6.__size_ >= 0x17)
  {
    v8 = (v6.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6.__size_ | 7) != 0x17)
      v8 = v6.__size_ | 7;
    v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    v29 = v6.__size_;
    v30 = v9 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_13;
  }
  HIBYTE(v30) = v6.__size_;
  p_dst = (void **)&__dst;
  if (v6.__size_)
LABEL_13:
    memmove(p_dst, v6.__data_, v6.__size_);
  *((_BYTE *)p_dst + v6.__size_) = 0;
  v10 = __dst;
  v23[0] = v30;
  *(_DWORD *)((char *)v23 + 3) = *(_DWORD *)((char *)&v30 + 3);
  if (SHIBYTE(v30) < 0)
  {
    sub_23941A7F8(&v24, __dst, v29);
    operator delete(v10);
    if ((SHIBYTE(v22.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_16:
      v11 = v27;
      if ((v27 & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_22;
    }
  }
  else
  {
    v24 = __dst;
    v25 = v29;
    *(_DWORD *)v26 = v23[0];
    *(_DWORD *)&v26[3] = *(_DWORD *)((char *)v23 + 3);
    v27 = HIBYTE(v30);
    if ((SHIBYTE(v22.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_16;
  }
  operator delete(v22.__pn_.__r_.__value_.__l.__data_);
  v11 = v27;
  if ((v27 & 0x80000000) == 0)
  {
LABEL_17:
    if (v11 == 4)
    {
      if ((_DWORD)v24 != 1920492846)
      {
        v12 = &v24;
        goto LABEL_24;
      }
      goto LABEL_30;
    }
    goto LABEL_25;
  }
LABEL_22:
  if (v25 == 4)
  {
    v12 = v24;
    if (*(_DWORD *)v24 != 1920492846)
    {
LABEL_24:
      if (*v12 == 1735290926)
      {
        if (SHIBYTE(a1->__r_.__value_.__r.__words[2]) < 0)
        {
          sub_23941A7F8(&v18, a1->__r_.__value_.__l.__data_, a1->__r_.__value_.__l.__size_);
        }
        else
        {
          v18 = *(_OWORD *)&a1->__r_.__value_.__l.__data_;
          v19 = a1->__r_.__value_.__r.__words[2];
        }
        v13 = sub_239944934(&v18, a2);
        if ((SHIBYTE(v19) & 0x80000000) == 0)
          goto LABEL_41;
        v14 = (void **)&v18;
        goto LABEL_40;
      }
      goto LABEL_25;
    }
LABEL_30:
    if (SHIBYTE(a1->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_23941A7F8(&v20, a1->__r_.__value_.__l.__data_, a1->__r_.__value_.__l.__size_);
    }
    else
    {
      v20 = *(_OWORD *)&a1->__r_.__value_.__l.__data_;
      v21 = a1->__r_.__value_.__r.__words[2];
    }
    v13 = sub_239944BB4(&v20, a2);
    if ((SHIBYTE(v21) & 0x80000000) == 0)
      goto LABEL_41;
    v14 = (void **)&v20;
    goto LABEL_40;
  }
LABEL_25:
  if (SHIBYTE(a1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&v16, a1->__r_.__value_.__l.__data_, a1->__r_.__value_.__l.__size_);
  }
  else
  {
    v16 = *(_OWORD *)&a1->__r_.__value_.__l.__data_;
    v17 = a1->__r_.__value_.__r.__words[2];
  }
  v13 = sub_239944934(&v16, a2);
  if ((SHIBYTE(v17) & 0x80000000) == 0)
    goto LABEL_41;
  v14 = (void **)&v16;
LABEL_40:
  operator delete(*v14);
LABEL_41:
  if (v27 < 0)
    operator delete(v24);
  return v13;
}

void sub_239953E24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  uint64_t v35;

  if (a21 < 0)
    operator delete(__p);
  if (*(char *)(v35 - 73) < 0)
    operator delete(*(void **)(v35 - 96));
  _Unwind_Resume(exception_object);
}

_QWORD *sub_239953EA8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;

  v2 = MEMORY[0x24BEDB840];
  v3 = MEMORY[0x24BEDB840] + 64;
  a1[52] = MEMORY[0x24BEDB840] + 64;
  v4 = a1 + 1;
  v5 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 8);
  v6 = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 16);
  *a1 = v5;
  *(_QWORD *)((char *)a1 + *(_QWORD *)(v5 - 24)) = v6;
  v7 = (std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::ios_base::init(v7, a1 + 1);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *a1 = v2 + 24;
  a1[52] = v3;
  MEMORY[0x23B83DC80](v4);
  if (!std::filebuf::open())
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 4);
  return a1;
}

void sub_239953F84(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x23B83E250](v1 + 416);
  _Unwind_Resume(a1);
}

uint64_t sub_239953FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  uint64_t v7;
  std::string *v8;
  std::__fs::filesystem::path::__string_view v9;
  std::string *p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v11;
  std::basic_string_view<_CharT, _Traits>::size_type v12;
  std::__fs::filesystem::path *v13;
  __int128 v14;
  _QWORD *v15;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v18;
  char *v19;
  size_t v20;
  std::string::size_type v21;
  std::string *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  _BOOL4 v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t i;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  const std::locale::facet *v42;
  const std::locale::facet *v43;
  char *v44;
  size_t v45;
  std::string::size_type v46;
  std::string *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  unsigned int v58;
  std::locale::id *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  const std::locale::facet *v63;
  const std::locale::facet *v64;
  char *v65;
  size_t v66;
  std::string::size_type v67;
  std::string *v68;
  _BOOL4 v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  uint64_t *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  unsigned int v81;
  _QWORD *v82;
  uint64_t v83;
  std::locale::id *v84;
  _QWORD *v85;
  _QWORD *v86;
  const std::locale::facet *v87;
  const std::locale::facet *v88;
  char *v89;
  size_t v90;
  std::string::size_type v91;
  _BYTE *v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  char *v98;
  size_t v99;
  std::string::size_type v100;
  std::string *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  char *v111;
  size_t v112;
  std::string::size_type v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  size_t v118;
  std::string::size_type v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  unsigned __int16 v129;
  uint64_t v130;
  _BOOL4 v131;
  uint64_t *v132;
  std::__shared_weak_count *v133;
  uint64_t v134;
  unint64_t *v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t *v138;
  std::__shared_weak_count *v139;
  uint64_t v140;
  unint64_t *v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  const std::locale::facet *v151;
  uint64_t *v152;
  std::__shared_weak_count *v153;
  uint64_t v154;
  unint64_t *v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t **v158;
  unsigned int v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  const std::locale::facet *v168;
  uint64_t *v169;
  std::__shared_weak_count *v170;
  uint64_t v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  std::__fs::filesystem::path *v176;
  unint64_t v177;
  unsigned int v178;
  unint64_t v179;
  const std::locale::facet *v180;
  std::runtime_error *exception;
  std::string *v183;
  __int128 v184;
  std::string *v185;
  __int128 v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t **v189;
  uint64_t v190;
  _BOOL4 v191;
  std::__fs::filesystem::path v192;
  std::string __p;
  std::__fs::filesystem::path v194;
  std::string __dst;
  uint64_t v196;
  uint64_t v197;
  _QWORD v198[21];

  v198[19] = *MEMORY[0x24BDAC8D0];
  sub_23955CF88(&v196);
  v6 = (char *)&v196 + *(_QWORD *)(v196 - 24);
  if ((v6[32] & 5) != 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    if (*(char *)(a1 + 23) < 0)
      sub_23941A7F8(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
    else
      __p = *(std::string *)a1;
    v183 = std::string::insert(&__p, 0, "Unable to open OBJ file \"");
    v184 = *(_OWORD *)&v183->__r_.__value_.__l.__data_;
    v194.__pn_.__r_.__value_.__r.__words[2] = v183->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v194.__pn_.__r_.__value_.__l.__data_ = v184;
    v183->__r_.__value_.__l.__size_ = 0;
    v183->__r_.__value_.__r.__words[2] = 0;
    v183->__r_.__value_.__r.__words[0] = 0;
    v185 = std::string::append(&v194.__pn_, "\"!");
    v186 = *(_OWORD *)&v185->__r_.__value_.__l.__data_;
    __dst.__r_.__value_.__r.__words[2] = v185->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v186;
    v185->__r_.__value_.__l.__size_ = 0;
    v185->__r_.__value_.__r.__words[2] = 0;
    v185->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, &__dst);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *((_QWORD *)v6 + 2) = 10;
  sub_239458500(&v196, (uint64_t)"#  \n", 4);
  sub_239458500(&v196, (uint64_t)"#  Wavefront OBJ\n", 17);
  sub_239458500(&v196, (uint64_t)"#  \n", 4);
  if (!*(_BYTE *)(a3 + 9))
    goto LABEL_29;
  memset(&v194, 0, sizeof(v194));
  v7 = *(unsigned __int8 *)(a1 + 23);
  if ((v7 & 0x80u) == 0)
    v8 = (std::string *)a1;
  else
    v8 = *(std::string **)a1;
  if ((v7 & 0x80u) != 0)
    v7 = *(_QWORD *)(a1 + 8);
  sub_23948900C(&v194.__pn_, v8, (std::string *)((char *)v8 + v7));
  v9 = std::__fs::filesystem::path::__filename(&v194);
  if (v9.__size_ > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v9.__size_ >= 0x17)
  {
    v11 = (v9.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9.__size_ | 7) != 0x17)
      v11 = v9.__size_ | 7;
    v12 = v11 + 1;
    p_dst = (std::string *)operator new(v11 + 1);
    __dst.__r_.__value_.__l.__size_ = v9.__size_;
    __dst.__r_.__value_.__r.__words[2] = v12 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_15;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v9.__size_;
  p_dst = &__dst;
  if (v9.__size_)
LABEL_15:
    memmove(p_dst, v9.__data_, v9.__size_);
  p_dst->__r_.__value_.__s.__data_[v9.__size_] = 0;
  v192.__pn_ = __dst;
  memset(&__dst, 0, sizeof(__dst));
  sub_23948900C(&__dst, (std::string *)".mtl", (std::string *)"");
  v13 = std::__fs::filesystem::path::replace_extension(&v192, (const std::__fs::filesystem::path *)&__dst);
  if (SHIBYTE(v13->__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&__p, v13->__pn_.__r_.__value_.__l.__data_, v13->__pn_.__r_.__value_.__l.__size_);
  }
  else
  {
    v14 = *(_OWORD *)&v13->__pn_.__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v13->__pn_.__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v14;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v192.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_21;
  }
  else if ((SHIBYTE(v192.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_21;
  }
  operator delete(v192.__pn_.__r_.__value_.__l.__data_);
LABEL_21:
  v15 = sub_239458500(&v196, (uint64_t)"mtllib ", 7);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v18 = sub_239458500(v15, (uint64_t)p_p, size);
  sub_239458500(v18, (uint64_t)"\n\n", 2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v194.__pn_.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_43;
LABEL_29:
    if (*(_BYTE *)(a3 + 8))
      goto LABEL_30;
LABEL_44:
    v26 = 0;
    v25 = -1;
    goto LABEL_45;
  }
  if ((SHIBYTE(v194.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    goto LABEL_29;
LABEL_43:
  operator delete(v194.__pn_.__r_.__value_.__l.__data_);
  if (!*(_BYTE *)(a3 + 8))
    goto LABEL_44;
LABEL_30:
  v19 = off_256934400[0];
  v20 = strlen(off_256934400[0]);
  if (v20 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v21 = v20;
  if (v20 >= 0x17)
  {
    v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17)
      v23 = v20 | 7;
    v24 = v23 + 1;
    v22 = (std::string *)operator new(v23 + 1);
    __dst.__r_.__value_.__l.__size_ = v21;
    __dst.__r_.__value_.__r.__words[2] = v24 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v22;
    goto LABEL_37;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v20;
  v22 = &__dst;
  if (v20)
LABEL_37:
    memmove(v22, v19, v21);
  v22->__r_.__value_.__s.__data_[v21] = 0;
  *(_OWORD *)&v194.__pn_.__r_.__value_.__l.__data_ = 0uLL;
  v25 = sub_2394E5F40((uint64_t **)(a2 + 8), (uint64_t)&v194, (unsigned __int8 *)&__dst);
  v26 = v25 != -1;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_45:
  sub_239458500(&v196, (uint64_t)"# ", 2);
  v27 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v27, (uint64_t)" vertices\n", 10);
  v28 = *(_QWORD *)(a2 + 104);
  for (i = *(_QWORD *)(a2 + 112); v28 != i; v28 += 4)
  {
    sub_239458500(&v196, (uint64_t)"v ", 2);
    v30 = *(std::__shared_weak_count **)(*(_QWORD *)(a2 + 8) + 16 * *(unsigned int *)(a2 + 176) + 8);
    if (v30)
    {
      p_shared_owners = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(p_shared_owners);
      while (__stxr(v32 + 1, p_shared_owners));
      do
        v33 = __ldaxr(p_shared_owners);
      while (__stlxr(v33 - 1, p_shared_owners));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    v34 = (_QWORD *)std::ostream::operator<<();
    sub_239458500(v34, (uint64_t)" ", 1);
    v35 = (_QWORD *)std::ostream::operator<<();
    sub_239458500(v35, (uint64_t)" ", 1);
    std::ostream::operator<<();
    if (v26)
    {
      sub_239458500(&v196, (uint64_t)" ", 1);
      v36 = *(std::__shared_weak_count **)(*(_QWORD *)(a2 + 8) + 16 * v25 + 8);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      v40 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v40, (uint64_t)" ", 1);
      v41 = (_QWORD *)std::ostream::operator<<();
      sub_239458500(v41, (uint64_t)" ", 1);
      std::ostream::operator<<();
    }
    std::ios_base::getloc((const std::ios_base *)((char *)&v196 + *(_QWORD *)(v196 - 24)));
    v42 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v42->__vftable[2].~facet_0)(v42, 10);
    std::locale::~locale((std::locale *)&__dst);
    std::ostream::put();
    std::ostream::flush();
  }
  std::ios_base::getloc((const std::ios_base *)((char *)&v196 + *(_QWORD *)(v196 - 24)));
  v43 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v43->__vftable[2].~facet_0)(v43, 10);
  std::locale::~locale((std::locale *)&__dst);
  std::ostream::put();
  std::ostream::flush();
  if (!*(_BYTE *)a3 || *(_DWORD *)(a3 + 4) != 1)
    goto LABEL_85;
  v44 = off_256934408[0];
  v45 = strlen(off_256934408[0]);
  if (v45 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v46 = v45;
  if (v45 >= 0x17)
  {
    v48 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v45 | 7) != 0x17)
      v48 = v45 | 7;
    v49 = v48 + 1;
    v47 = (std::string *)operator new(v48 + 1);
    __dst.__r_.__value_.__l.__size_ = v46;
    __dst.__r_.__value_.__r.__words[2] = v49 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v47;
  }
  else
  {
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v45;
    v47 = &__dst;
    if (!v45)
      goto LABEL_71;
  }
  memmove(v47, v44, v46);
LABEL_71:
  v47->__r_.__value_.__s.__data_[v46] = 0;
  *(_OWORD *)&v194.__pn_.__r_.__value_.__l.__data_ = 0uLL;
  v50 = sub_2394E5F40((uint64_t **)(a2 + 8), (uint64_t)&v194, (unsigned __int8 *)&__dst);
  v51 = v50;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if (v51 == -1)
      goto LABEL_85;
  }
  else if (v50 == -1)
  {
    goto LABEL_85;
  }
  v52 = (uint64_t *)(*(_QWORD *)(a2 + 8) + 16 * v51);
  v53 = *v52;
  v54 = (std::__shared_weak_count *)v52[1];
  if (v54)
  {
    v55 = (unint64_t *)&v54->__shared_owners_;
    do
      v56 = __ldxr(v55);
    while (__stxr(v56 + 1, v55));
    do
      v57 = __ldaxr(v55);
    while (__stlxr(v57 - 1, v55));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
      std::__shared_weak_count::__release_weak(v54);
    }
  }
  v58 = 0;
  v59 = (std::locale::id *)MEMORY[0x24BEDB350];
  while ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v53 + 16))(v53) > (unint64_t)v58)
  {
    sub_239458500(&v196, (uint64_t)"vn ", 3);
    v60 = (_QWORD *)std::ostream::operator<<();
    sub_239458500(v60, (uint64_t)" ", 1);
    v61 = (_QWORD *)std::ostream::operator<<();
    sub_239458500(v61, (uint64_t)" ", 1);
    v62 = (_QWORD *)std::ostream::operator<<();
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(_QWORD *)(*v62 - 24)));
    v63 = std::locale::use_facet((const std::locale *)&__dst, v59);
    ((void (*)(const std::locale::facet *, uint64_t))v63->__vftable[2].~facet_0)(v63, 10);
    std::locale::~locale((std::locale *)&__dst);
    std::ostream::put();
    std::ostream::flush();
    ++v58;
  }
  std::ios_base::getloc((const std::ios_base *)((char *)&v196 + *(_QWORD *)(v196 - 24)));
  v64 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v64->__vftable[2].~facet_0)(v64, 10);
  std::locale::~locale((std::locale *)&__dst);
  std::ostream::put();
  std::ostream::flush();
LABEL_85:
  if (!*(_BYTE *)(a3 + 9))
  {
    v191 = 0;
    v69 = 0;
    v187 = -1;
    v70 = -1;
    goto LABEL_115;
  }
  v65 = off_256934438[0];
  v66 = strlen(off_256934438[0]);
  if (v66 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v67 = v66;
  if (v66 >= 0x17)
  {
    v71 = (v66 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v66 | 7) != 0x17)
      v71 = v66 | 7;
    v72 = v71 + 1;
    v68 = (std::string *)operator new(v71 + 1);
    __dst.__r_.__value_.__l.__size_ = v67;
    __dst.__r_.__value_.__r.__words[2] = v72 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v68;
    goto LABEL_94;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v66;
  v68 = &__dst;
  if (v66)
LABEL_94:
    memmove(v68, v65, v67);
  v68->__r_.__value_.__s.__data_[v67] = 0;
  v194.__pn_.__r_.__value_.__r.__words[0] = 0;
  v189 = (uint64_t **)(a2 + 80);
  v73 = sub_2394E5C88((uint64_t **)(a2 + 80), (uint64_t)&v194, (unsigned __int8 *)&__dst);
  v74 = v73;
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (v73 == -1)
      goto LABEL_109;
LABEL_99:
    v75 = &(*v189)[2 * v74];
    v76 = *v75;
    v77 = (std::__shared_weak_count *)v75[1];
    if (v77)
    {
      v78 = (unint64_t *)&v77->__shared_owners_;
      do
        v79 = __ldxr(v78);
      while (__stxr(v79 + 1, v78));
      do
        v80 = __ldaxr(v78);
      while (__stlxr(v80 - 1, v78));
      if (!v80)
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
    }
    v81 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v76 + 16))(v76);
    sub_239458500(&v196, (uint64_t)"# ", 2);
    v82 = (_QWORD *)std::ostream::operator<<();
    sub_239458500(v82, (uint64_t)" texcoords\n", 11);
    if (v81)
    {
      v83 = 0;
      v84 = (std::locale::id *)MEMORY[0x24BEDB350];
      do
      {
        sub_239458500(&v196, (uint64_t)"vt ", 3);
        v85 = (_QWORD *)std::ostream::operator<<();
        sub_239458500(v85, (uint64_t)" ", 1);
        v86 = (_QWORD *)std::ostream::operator<<();
        std::ios_base::getloc((const std::ios_base *)((char *)v86 + *(_QWORD *)(*v86 - 24)));
        v87 = std::locale::use_facet((const std::locale *)&__dst, v84);
        ((void (*)(const std::locale::facet *, uint64_t))v87->__vftable[2].~facet_0)(v87, 10);
        std::locale::~locale((std::locale *)&__dst);
        std::ostream::put();
        std::ostream::flush();
        v83 += 8;
      }
      while (8 * v81 != v83);
    }
    std::ios_base::getloc((const std::ios_base *)((char *)&v196 + *(_QWORD *)(v196 - 24)));
    v88 = std::locale::use_facet((const std::locale *)&__dst, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v88->__vftable[2].~facet_0)(v88, 10);
    std::locale::~locale((std::locale *)&__dst);
    std::ostream::put();
    std::ostream::flush();
    goto LABEL_109;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
  if (v74 != -1)
    goto LABEL_99;
LABEL_109:
  if (*(_BYTE *)(a3 + 9))
  {
    v89 = off_256934448[0];
    v90 = strlen(off_256934448[0]);
    if (v90 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v91 = v90;
    if (v90 >= 0x17)
    {
      v95 = (v90 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v90 | 7) != 0x17)
        v95 = v90 | 7;
      v96 = v95 + 1;
      v92 = operator new(v95 + 1);
      v194.__pn_.__r_.__value_.__l.__size_ = v91;
      v194.__pn_.__r_.__value_.__r.__words[2] = v96 | 0x8000000000000000;
      v194.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v92;
    }
    else
    {
      *((_BYTE *)&v194.__pn_.__r_.__value_.__s + 23) = v90;
      v92 = &v194;
      if (!v90)
      {
LABEL_121:
        v92[v91] = 0;
        memset(&__dst, 0, sizeof(__dst));
        v97 = sub_23958C0D8(v189, (uint64_t)&__dst, (unsigned __int8 *)&v194);
        v70 = v97;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(__dst.__r_.__value_.__l.__data_);
          if (v70 != -1)
          {
LABEL_123:
            v98 = off_256934428[0];
            v99 = strlen(off_256934428[0]);
            if (v99 > 0x7FFFFFFFFFFFFFF7)
              sub_23941A5AC();
            v100 = v99;
            if (v99 >= 0x17)
            {
              v102 = (v99 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v99 | 7) != 0x17)
                v102 = v99 | 7;
              v103 = v102 + 1;
              v101 = (std::string *)operator new(v102 + 1);
              __dst.__r_.__value_.__l.__size_ = v100;
              __dst.__r_.__value_.__r.__words[2] = v103 | 0x8000000000000000;
              __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v101;
            }
            else
            {
              *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v99;
              v101 = &__dst;
              if (!v99)
              {
LABEL_136:
                v101->__r_.__value_.__s.__data_[v100] = 0;
                LOWORD(__p.__r_.__value_.__l.__data_) = 0;
                v93 = sub_23958CE84((uint64_t **)(a2 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
                v191 = v93 != -1;
                if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                {
                  operator delete(__dst.__r_.__value_.__l.__data_);
                  if ((SHIBYTE(v194.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                  {
LABEL_138:
                    if (v191)
                      goto LABEL_139;
                    goto LABEL_130;
                  }
                }
                else if ((SHIBYTE(v194.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                {
                  goto LABEL_138;
                }
LABEL_129:
                operator delete(v194.__pn_.__r_.__value_.__l.__data_);
                if (v191)
                {
LABEL_139:
                  v104 = &(*v189)[2 * v70];
                  v105 = *v104;
                  v106 = (std::__shared_weak_count *)v104[1];
                  if (v106)
                  {
                    v107 = (unint64_t *)&v106->__shared_owners_;
                    do
                      v108 = __ldxr(v107);
                    while (__stxr(v108 + 1, v107));
                    do
                      v109 = __ldaxr(v107);
                    while (__stlxr(v109 - 1, v107));
                    if (!v109)
                    {
                      ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
                      std::__shared_weak_count::__release_weak(v106);
                    }
                  }
                  (*(void (**)(uint64_t))(*(_QWORD *)v105 + 16))(v105);
                  sub_239458500(&v196, (uint64_t)"# ", 2);
                  v110 = (_QWORD *)std::ostream::operator<<();
                  sub_239458500(v110, (uint64_t)" groups\n", 8);
                  v111 = off_256934458;
                  v112 = strlen(off_256934458);
                  if (v112 > 0x7FFFFFFFFFFFFFF7)
                    sub_23941A5AC();
                  v113 = v112;
                  if (v112 >= 0x17)
                  {
                    v115 = (v112 & 0xFFFFFFFFFFFFFFF8) + 8;
                    if ((v112 | 7) != 0x17)
                      v115 = v112 | 7;
                    v116 = v115 + 1;
                    v114 = operator new(v115 + 1);
                    v194.__pn_.__r_.__value_.__l.__size_ = v113;
                    v194.__pn_.__r_.__value_.__r.__words[2] = v116 | 0x8000000000000000;
                    v194.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v114;
                  }
                  else
                  {
                    *((_BYTE *)&v194.__pn_.__r_.__value_.__s + 23) = v112;
                    v114 = &v194;
                    if (!v112)
                    {
LABEL_153:
                      v114[v113] = 0;
                      *(_OWORD *)&__dst.__r_.__value_.__r.__words[1] = 0uLL;
                      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst.__r_.__value_.__l.__size_;
                      v187 = sub_23958C234(v189, (uint64_t)&__dst, (unsigned __int8 *)&v194);
                      sub_23958B6B4((uint64_t)&__dst, (char *)__dst.__r_.__value_.__l.__size_);
                      if (SHIBYTE(v194.__pn_.__r_.__value_.__r.__words[2]) < 0)
                        operator delete(v194.__pn_.__r_.__value_.__l.__data_);
                      if (*(_BYTE *)(a3 + 9))
                      {
LABEL_156:
                        v117 = off_256934418[0];
                        v118 = strlen(off_256934418[0]);
                        if (v118 > 0x7FFFFFFFFFFFFFF7)
                          sub_23941A5AC();
                        v119 = v118;
                        if (v118 >= 0x17)
                        {
                          v121 = (v118 & 0xFFFFFFFFFFFFFFF8) + 8;
                          if ((v118 | 7) != 0x17)
                            v121 = v118 | 7;
                          v122 = v121 + 1;
                          v120 = operator new(v121 + 1);
                          v194.__pn_.__r_.__value_.__l.__size_ = v119;
                          v194.__pn_.__r_.__value_.__r.__words[2] = v122 | 0x8000000000000000;
                          v194.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v120;
                        }
                        else
                        {
                          *((_BYTE *)&v194.__pn_.__r_.__value_.__s + 23) = v118;
                          v120 = &v194;
                          if (!v118)
                            goto LABEL_164;
                        }
                        memmove(v120, v117, v119);
LABEL_164:
                        *((_BYTE *)v120 + v119) = 0;
                        memset(&__dst, 0, sizeof(__dst));
                        v123 = sub_23993A364((uint64_t **)(a2 + 56), (uint64_t)&__dst, (unsigned __int8 *)&v194);
                        if (__dst.__r_.__value_.__r.__words[0])
                        {
                          __dst.__r_.__value_.__l.__size_ = __dst.__r_.__value_.__r.__words[0];
                          operator delete(__dst.__r_.__value_.__l.__data_);
                        }
                        v69 = v123 != -1;
                        if (SHIBYTE(v194.__pn_.__r_.__value_.__r.__words[2]) < 0)
                          operator delete(v194.__pn_.__r_.__value_.__l.__data_);
                        v94 = v123;
                        goto LABEL_169;
                      }
                      goto LABEL_131;
                    }
                  }
                  memmove(v114, v111, v113);
                  goto LABEL_153;
                }
LABEL_130:
                v187 = -1;
                if (*(_BYTE *)(a3 + 9))
                  goto LABEL_156;
LABEL_131:
                v69 = 0;
                goto LABEL_116;
              }
            }
            memmove(v101, v98, v100);
            goto LABEL_136;
          }
        }
        else if (v97 != -1)
        {
          goto LABEL_123;
        }
        v191 = 0;
        v93 = -1;
        if ((SHIBYTE(v194.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_138;
        goto LABEL_129;
      }
    }
    memmove(v92, v89, v91);
    goto LABEL_121;
  }
  v191 = 0;
  v69 = 0;
  v70 = -1;
  v187 = -1;
LABEL_115:
  v93 = -1;
LABEL_116:
  v94 = 0xFFFFFFFFLL;
LABEL_169:
  v190 = v94;
  v125 = *(_QWORD *)(a2 + 152);
  v124 = *(_QWORD *)(a2 + 160);
  sub_239458500(&v196, (uint64_t)"# ", 2);
  v126 = v124 - v125;
  v127 = (_QWORD *)std::ostream::operator<<();
  sub_239458500(v127, (uint64_t)" faces (triangles)\n", 19);
  memset(&__dst, 0, sizeof(__dst));
  memset(&v194, 0, sizeof(v194));
  if (!(v126 >> 2))
    goto LABEL_245;
  v128 = 0;
  v129 = 0;
  v130 = (v126 >> 2);
  v188 = v93;
  do
  {
    v131 = v191;
    if (!*(_BYTE *)(a3 + 9))
      v131 = 0;
    if (v131)
    {
      v132 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v188);
      v134 = *v132;
      v133 = (std::__shared_weak_count *)v132[1];
      if (!v133)
        goto LABEL_179;
      v135 = (unint64_t *)&v133->__shared_owners_;
      do
        v136 = __ldxr(v135);
      while (__stxr(v136 + 1, v135));
      do
        v137 = __ldaxr(v135);
      while (__stlxr(v137 - 1, v135));
      if (!v137)
      {
        ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
        std::__shared_weak_count::__release_weak(v133);
        if (*(unsigned __int16 *)(*(_QWORD *)(v134 + 40) + 2 * v128) != v129)
          goto LABEL_217;
      }
      else
      {
LABEL_179:
        if (*(unsigned __int16 *)(*(_QWORD *)(v134 + 40) + 2 * v128) != v129)
          goto LABEL_217;
      }
      v138 = (uint64_t *)(*(_QWORD *)(a2 + 80) + 16 * v70);
      v140 = *v138;
      v139 = (std::__shared_weak_count *)v138[1];
      if (v139)
      {
        v141 = (unint64_t *)&v139->__shared_owners_;
        do
          v142 = __ldxr(v141);
        while (__stxr(v142 + 1, v141));
        do
          v143 = __ldaxr(v141);
        while (__stlxr(v143 - 1, v141));
        if (!v143)
        {
          ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
          std::__shared_weak_count::__release_weak(v139);
        }
      }
      v144 = *(_QWORD *)(v140 + 40);
      v145 = sub_239458500(&v196, (uint64_t)"\ng ", 3);
      v146 = v144 + 24 * v129;
      v147 = *(char *)(v146 + 23);
      if (v147 >= 0)
        v148 = v144 + 24 * v129;
      else
        v148 = *(_QWORD *)v146;
      if (v147 >= 0)
        v149 = *(unsigned __int8 *)(v146 + 23);
      else
        v149 = *(_QWORD *)(v146 + 8);
      v150 = sub_239458500(v145, v148, v149);
      std::ios_base::getloc((const std::ios_base *)((char *)v150 + *(_QWORD *)(*v150 - 24)));
      v151 = std::locale::use_facet((const std::locale *)&__p, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v151->__vftable[2].~facet_0)(v151, 10);
      std::locale::~locale((std::locale *)&__p);
      std::ostream::put();
      std::ostream::flush();
      if (v187 != -1)
      {
        v152 = (uint64_t *)(*(_QWORD *)(a2 + 80) + 16 * v187);
        v154 = *v152;
        v153 = (std::__shared_weak_count *)v152[1];
        if (!v153)
          goto LABEL_198;
        v155 = (unint64_t *)&v153->__shared_owners_;
        do
          v156 = __ldxr(v155);
        while (__stxr(v156 + 1, v155));
        do
          v157 = __ldaxr(v155);
        while (__stlxr(v157 - 1, v155));
        if (v157)
        {
LABEL_198:
          v158 = *(uint64_t ***)(*(_QWORD *)(v154 + 40) + 8);
          if (v158)
            goto LABEL_205;
LABEL_249:
          sub_23941D898("map::at:  key not found");
        }
        ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
        std::__shared_weak_count::__release_weak(v153);
        v158 = *(uint64_t ***)(*(_QWORD *)(v154 + 40) + 8);
        if (!v158)
          goto LABEL_249;
        while (1)
        {
LABEL_205:
          while (1)
          {
            v159 = *((unsigned __int16 *)v158 + 16);
            if (v159 <= v129)
              break;
            v158 = (uint64_t **)*v158;
            if (!v158)
              goto LABEL_249;
          }
          if (v159 >= v129)
            break;
          v158 = (uint64_t **)v158[1];
          if (!v158)
            goto LABEL_249;
        }
        v160 = sub_239458500(&v196, (uint64_t)"usemtl ", 7);
        v163 = (uint64_t)v158[5];
        v162 = (uint64_t)(v158 + 5);
        v161 = v163;
        v164 = *(char *)(v162 + 23);
        if (v164 >= 0)
          v165 = v162;
        else
          v165 = v161;
        if (v164 >= 0)
          v166 = *(unsigned __int8 *)(v162 + 23);
        else
          v166 = *(_QWORD *)(v162 + 8);
        v167 = sub_239458500(v160, v165, v166);
        std::ios_base::getloc((const std::ios_base *)((char *)v167 + *(_QWORD *)(*v167 - 24)));
        v168 = std::locale::use_facet((const std::locale *)&__p, MEMORY[0x24BEDB350]);
        ((void (*)(const std::locale::facet *, uint64_t))v168->__vftable[2].~facet_0)(v168, 10);
        std::locale::~locale((std::locale *)&__p);
        std::ostream::put();
        std::ostream::flush();
      }
      ++v129;
    }
LABEL_217:
    sub_239458500(&v196, (uint64_t)"f ", 2);
    __dst.__r_.__value_.__l.__size_ = __dst.__r_.__value_.__r.__words[0];
    LODWORD(__p.__r_.__value_.__l.__data_) = v128;
    sub_239961D90(a2, (unsigned int *)&__p, &__dst.__r_.__value_.__l.__data_);
    if (!v69)
      goto LABEL_225;
    v169 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v190);
    v171 = *v169;
    v170 = (std::__shared_weak_count *)v169[1];
    if (!v170)
      goto LABEL_223;
    v172 = (unint64_t *)&v170->__shared_owners_;
    do
      v173 = __ldxr(v172);
    while (__stxr(v173 + 1, v172));
    do
      v174 = __ldaxr(v172);
    while (__stlxr(v174 - 1, v172));
    if (v174)
    {
LABEL_223:
      v175 = *(_QWORD *)(v171 + 40);
      v176 = (std::__fs::filesystem::path *)(v175 + 24 * v128);
      if (&v194 == v176)
        goto LABEL_225;
LABEL_224:
      sub_23942156C(&v194, v176->__pn_.__r_.__value_.__l.__data_, *(char **)(v175 + 24 * v128 + 8), (uint64_t)(*(_QWORD *)(v175 + 24 * v128 + 8) - v176->__pn_.__r_.__value_.__r.__words[0]) >> 2);
      goto LABEL_225;
    }
    ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
    std::__shared_weak_count::__release_weak(v170);
    v175 = *(_QWORD *)(v171 + 40);
    v176 = (std::__fs::filesystem::path *)(v175 + 24 * v128);
    if (&v194 != v176)
      goto LABEL_224;
LABEL_225:
    if (__dst.__r_.__value_.__l.__size_ != __dst.__r_.__value_.__r.__words[0])
    {
      v177 = 0;
      v178 = 1;
      do
      {
        std::ostream::operator<<();
        if (v69)
        {
          __p.__r_.__value_.__s.__data_[0] = 47;
          sub_239458500(&v196, (uint64_t)&__p, 1);
          std::ostream::operator<<();
          if (*(_BYTE *)a3)
            goto LABEL_233;
        }
        else if (*(_BYTE *)a3)
        {
          __p.__r_.__value_.__s.__data_[0] = 47;
          sub_239458500(&v196, (uint64_t)&__p, 1);
LABEL_233:
          if (*(_DWORD *)(a3 + 4) == 1)
          {
            __p.__r_.__value_.__s.__data_[0] = 47;
            sub_239458500(&v196, (uint64_t)&__p, 1);
            std::ostream::operator<<();
          }
        }
        v179 = (uint64_t)(__dst.__r_.__value_.__l.__size_ - __dst.__r_.__value_.__r.__words[0]) >> 2;
        if (v179 - 1 != v177)
        {
          sub_239458500(&v196, (uint64_t)" ", 1);
          v179 = (uint64_t)(__dst.__r_.__value_.__l.__size_ - __dst.__r_.__value_.__r.__words[0]) >> 2;
        }
        v177 = v178++;
      }
      while (v179 > v177);
    }
    std::ios_base::getloc((const std::ios_base *)((char *)&v196 + *(_QWORD *)(v196 - 24)));
    v180 = std::locale::use_facet((const std::locale *)&__p, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v180->__vftable[2].~facet_0)(v180, 10);
    std::locale::~locale((std::locale *)&__p);
    std::ostream::put();
    std::ostream::flush();
    ++v128;
  }
  while (v128 != v130);
  if (v194.__pn_.__r_.__value_.__r.__words[0])
  {
    v194.__pn_.__r_.__value_.__l.__size_ = v194.__pn_.__r_.__value_.__r.__words[0];
    operator delete(v194.__pn_.__r_.__value_.__l.__data_);
  }
  if (__dst.__r_.__value_.__r.__words[0])
  {
    __dst.__r_.__value_.__l.__size_ = __dst.__r_.__value_.__r.__words[0];
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
LABEL_245:
  v196 = *MEMORY[0x24BEDB7E8];
  *(uint64_t *)((char *)&v196 + *(_QWORD *)(v196 - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 24);
  MEMORY[0x23B83DC8C](&v197);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v198);
  return 1;
}

void sub_2399555AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,std::locale a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43,uint64_t a44)
{
  void *v44;
  int v45;

  if (a43 < 0)
  {
    operator delete(__p);
    if (a36 < 0)
    {
LABEL_5:
      operator delete(a31);
      if ((a29 & 0x80000000) == 0)
        goto LABEL_6;
      goto LABEL_9;
    }
  }
  else if (a36 < 0)
  {
    goto LABEL_5;
  }
  if ((a29 & 0x80000000) == 0)
  {
LABEL_6:
    if (!v45)
    {
LABEL_11:
      sub_23955C978(&a44);
      _Unwind_Resume(a1);
    }
LABEL_10:
    __cxa_free_exception(v44);
    sub_23955C978(&a44);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(a24.__locale_);
  if ((v45 & 1) == 0)
    goto LABEL_11;
  goto LABEL_10;
}

uint64_t sub_239955904(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  std::string *v8;
  std::__fs::filesystem::path *v9;
  __int128 v10;
  std::__fs::filesystem::path __replacement;
  void *__p[2];
  std::string::size_type v14;
  std::__fs::filesystem::path v15;

  sub_239953FC8(a1, a2, a4);
  if (!*(_BYTE *)(a4 + 9))
    return 1;
  memset(&v15, 0, sizeof(v15));
  v7 = *(unsigned __int8 *)(a1 + 23);
  if ((v7 & 0x80u) == 0)
    v8 = (std::string *)a1;
  else
    v8 = *(std::string **)a1;
  if ((v7 & 0x80u) != 0)
    v7 = *(_QWORD *)(a1 + 8);
  sub_23948900C(&v15.__pn_, v8, (std::string *)((char *)v8 + v7));
  memset(&__replacement, 0, sizeof(__replacement));
  sub_23948900C(&__replacement.__pn_, (std::string *)".mtl", (std::string *)"");
  v9 = std::__fs::filesystem::path::replace_extension(&v15, &__replacement);
  if (SHIBYTE(v9->__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(__p, v9->__pn_.__r_.__value_.__l.__data_, v9->__pn_.__r_.__value_.__l.__size_);
  }
  else
  {
    v10 = *(_OWORD *)&v9->__pn_.__r_.__value_.__l.__data_;
    v14 = v9->__pn_.__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v10;
  }
  sub_23995186C((uint64_t)__p, a3, a4 + 16);
  if ((SHIBYTE(v14) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_12;
LABEL_15:
    operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v15.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return 1;
    goto LABEL_16;
  }
  operator delete(__p[0]);
  if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_15;
LABEL_12:
  if ((SHIBYTE(v15.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    return 1;
LABEL_16:
  operator delete(v15.__pn_.__r_.__value_.__l.__data_);
  return 1;
}

void sub_239955A30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0)
  {
    operator delete(a16);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a27 & 0x80000000) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a27 & 0x80000000) == 0)
LABEL_5:
    _Unwind_Resume(exception_object);
LABEL_4:
  operator delete(__p);
  goto LABEL_5;
}

unint64_t sub_239955AB0(const char *a1)
{
  unint64_t result;
  std::runtime_error *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  std::string v6;
  char *__endptr;

  __endptr = 0;
  if (a1[23] < 0)
    a1 = *(const char **)a1;
  result = strtoul(a1, &__endptr, 10);
  if (*__endptr)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    v3 = std::string::append(&v5, "\"");
    v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    v6.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v6.__r_.__value_.__l.__data_ = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, &v6);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  return result;
}

void sub_239955B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

uint64_t sub_239955BE0(uint64_t a1)
{
  void **v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void **v13;
  void *v14;

  if (*(char *)(a1 + 287) < 0)
  {
    operator delete(*(void **)(a1 + 264));
    sub_23958B6B4(a1 + 240, *(char **)(a1 + 248));
    v2 = *(void ***)(a1 + 216);
    if (!v2)
    {
LABEL_3:
      v3 = *(void **)(a1 + 192);
      if (!v3)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else
  {
    sub_23958B6B4(a1 + 240, *(char **)(a1 + 248));
    v2 = *(void ***)(a1 + 216);
    if (!v2)
      goto LABEL_3;
  }
  v13 = *(void ***)(a1 + 224);
  if (v13 == v2)
  {
    *(_QWORD *)(a1 + 224) = v2;
    operator delete(v2);
    v3 = *(void **)(a1 + 192);
    if (!v3)
      goto LABEL_5;
LABEL_4:
    *(_QWORD *)(a1 + 200) = v3;
    operator delete(v3);
    goto LABEL_5;
  }
  do
  {
    if (*((char *)v13 - 1) < 0)
      operator delete(*(v13 - 3));
    v13 -= 3;
  }
  while (v13 != v2);
  v14 = *(void **)(a1 + 216);
  *(_QWORD *)(a1 + 224) = v2;
  operator delete(v14);
  v3 = *(void **)(a1 + 192);
  if (v3)
    goto LABEL_4;
LABEL_5:
  v4 = *(void **)(a1 + 168);
  if (v4)
  {
    *(_QWORD *)(a1 + 176) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 144);
  if (v5)
  {
    *(_QWORD *)(a1 + 152) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 120);
  if (v6)
  {
    *(_QWORD *)(a1 + 128) = v6;
    operator delete(v6);
  }
  v7 = *(void **)(a1 + 96);
  if (v7)
  {
    *(_QWORD *)(a1 + 104) = v7;
    operator delete(v7);
  }
  v8 = *(void **)(a1 + 72);
  if (v8)
  {
    *(_QWORD *)(a1 + 80) = v8;
    operator delete(v8);
  }
  v9 = *(void **)(a1 + 48);
  if (v9)
  {
    *(_QWORD *)(a1 + 56) = v9;
    operator delete(v9);
  }
  v10 = *(void **)(a1 + 24);
  if (v10)
  {
    *(_QWORD *)(a1 + 32) = v10;
    operator delete(v10);
  }
  v11 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v11;
    operator delete(v11);
  }
  return a1;
}

void sub_239955D30()
{
  JUMPOUT(0x23B83E31CLL);
}

__n128 sub_239955D44(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_250AF0930;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_239955D84(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_250AF0930;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_239955DAC(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  int *v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  _BYTE *v13;

  v2 = **(unsigned int **)(result + 24);
  if ((int)v2 < 1)
  {
LABEL_7:
    *(_DWORD *)(*(_QWORD *)(result + 8) + 288) = 1;
  }
  else
  {
    v3 = 0;
    v4 = *a2;
    v5 = 1;
    do
    {
      while (!v5)
      {
        v5 = 0;
        if (++v3 == v2)
          goto LABEL_8;
      }
      v6 = (int *)(v4 + 12 * v3);
      v7 = *v6;
      v8 = v6[2];
      v5 = *v6 == v8;
      ++v3;
    }
    while (v3 != v2);
    if (v7 == v8)
      goto LABEL_7;
LABEL_8:
    if ((int)v2 < 2)
    {
LABEL_14:
      *(_DWORD *)(*(_QWORD *)(result + 8) + 288) = 2;
    }
    else
    {
      v9 = *(_DWORD *)(v4 + 8);
      v10 = 1;
      v11 = 1;
      do
      {
        while (!v11)
        {
          v11 = 0;
          if (++v10 == v2)
            goto LABEL_15;
        }
        v12 = *(_DWORD *)(v4 + 12 * v10 + 8);
        v11 = v9 == v12;
        ++v10;
      }
      while (v10 != v2);
      if (v9 == v12)
        goto LABEL_14;
LABEL_15:
      v13 = *(_BYTE **)(result + 16);
      *(_DWORD *)(*(_QWORD *)(result + 8) + 288) = 3;
      *v13 = 1;
    }
  }
  return result;
}

char *sub_239955E98(void **a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 4);
  v4 = v3 + 1;
  if (v3 + 1 > 0x555555555555555)
    sub_2394189F8();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 4) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 4);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 4) >= 0x2AAAAAAAAAAAAAALL)
    v5 = 0x555555555555555;
  else
    v5 = v4;
  if (v5 > 0x555555555555555)
    sub_239418A80();
  v7 = 48 * v5;
  v8 = (char *)operator new(48 * v5);
  v9 = &v8[48 * v3];
  *(_OWORD *)v9 = *(_OWORD *)a2;
  v10 = *(_QWORD *)(a2 + 24);
  *((_QWORD *)v9 + 2) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *((_QWORD *)v9 + 3) = v10;
  v11 = (_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 16) = 0;
  *((_QWORD *)v9 + 4) = v12;
  v13 = v9 + 32;
  v14 = *(_QWORD *)(a2 + 40);
  *((_QWORD *)v9 + 5) = v14;
  if (v14)
  {
    *(_QWORD *)(v12 + 16) = v13;
    *(_QWORD *)(a2 + 24) = v11;
    *v11 = 0;
    *(_QWORD *)(a2 + 40) = 0;
    v15 = &v8[v7];
    v16 = v9 + 48;
    v17 = (char *)*a1;
    v18 = (char *)a1[1];
    if (v18 != *a1)
      goto LABEL_10;
LABEL_20:
    *a1 = v9;
    a1[1] = v16;
    a1[2] = v15;
    goto LABEL_21;
  }
  *((_QWORD *)v9 + 3) = v13;
  v15 = &v8[v7];
  v16 = v9 + 48;
  v17 = (char *)*a1;
  v18 = (char *)a1[1];
  if (v18 == *a1)
    goto LABEL_20;
LABEL_10:
  v19 = 0;
  do
  {
    while (1)
    {
      v20 = &v9[v19];
      v21 = &v18[v19];
      v22 = *(_OWORD *)&v18[v19 - 48];
      *((_QWORD *)v20 - 4) = *(_QWORD *)&v18[v19 - 32];
      *((_OWORD *)v20 - 3) = v22;
      *((_QWORD *)v21 - 5) = 0;
      *((_QWORD *)v21 - 4) = 0;
      *((_QWORD *)v21 - 6) = 0;
      *((_QWORD *)v20 - 3) = *(_QWORD *)&v18[v19 - 24];
      v23 = &v18[v19 - 16];
      v24 = *(_QWORD *)v23;
      *(_QWORD *)&v9[v19 - 16] = *(_QWORD *)v23;
      v25 = (uint64_t)&v9[v19 - 16];
      v26 = *(_QWORD *)&v18[v19 - 8];
      *((_QWORD *)v20 - 1) = v26;
      if (!v26)
        break;
      *(_QWORD *)(v24 + 16) = v25;
      *((_QWORD *)v21 - 3) = v23;
      *(_QWORD *)v23 = 0;
      *(_QWORD *)&v18[v19 - 8] = 0;
      v19 -= 48;
      if (&v18[v19] == v17)
        goto LABEL_14;
    }
    *((_QWORD *)v20 - 3) = v25;
    v19 -= 48;
  }
  while (&v18[v19] != v17);
LABEL_14:
  v18 = (char *)*a1;
  v27 = (char *)a1[1];
  *a1 = &v9[v19];
  a1[1] = v16;
  a1[2] = v15;
  if (v27 == v18)
  {
    v18 = v27;
    if (!v27)
      return v16;
    goto LABEL_22;
  }
  v28 = (uint64_t)(v27 - 24);
  do
  {
    sub_239421038(v28, *(_QWORD **)(v28 + 8));
    if (*(char *)(v28 - 1) < 0)
      operator delete(*(void **)(v28 - 24));
    v28 -= 48;
  }
  while ((char *)(v28 + 24) != v18);
LABEL_21:
  if (v18)
LABEL_22:
    operator delete(v18);
  return v16;
}

void sub_2399560AC()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2399560C0()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF0978;
  return result;
}

void sub_2399560E4(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF0978;
}

BOOL sub_2399560FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  void *v7;
  int v8;
  _DWORD *v9;
  int v10;
  _BOOL8 v11;
  _BOOL8 v12;
  _BYTE v14[7];
  void *__dst;
  unint64_t v16;
  _BYTE v17[7];
  char v18;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_DWORD *)v14 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)&v14[3] = *(_DWORD *)(a2 + 19);
  v8 = *(char *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v9 = (_DWORD *)(a4 + 32);
  v10 = *(char *)(a4 + 55);
  if ((v10 & 0x80000000) == 0)
  {
    if (v10 == 4)
    {
      if (*v9 != 1920492846)
        goto LABEL_4;
      goto LABEL_9;
    }
LABEL_11:
    if (v8 < 0)
    {
      sub_23941A7F8(&__dst, v7, v6);
    }
    else
    {
      __dst = v7;
      v16 = v6;
      *(_DWORD *)v17 = *(_DWORD *)v14;
      *(_DWORD *)&v17[3] = *(_DWORD *)&v14[3];
      v18 = v8;
    }
    v11 = sub_239944938((uint64_t)&__dst, a3, *(unsigned __int16 *)(a4 + 24));
    goto LABEL_19;
  }
  if (*(_QWORD *)(a4 + 40) != 4)
    goto LABEL_11;
  v9 = *(_DWORD **)v9;
  if (*v9 != 1920492846)
  {
LABEL_4:
    if (*v9 == 1735290926)
    {
      if (v8 < 0)
      {
        sub_23941A7F8(&__dst, v7, v6);
      }
      else
      {
        __dst = v7;
        v16 = v6;
        *(_DWORD *)v17 = *(_DWORD *)v14;
        *(_DWORD *)&v17[3] = *(_DWORD *)&v14[3];
        v18 = v8;
      }
      v11 = sub_239944A78((uint64_t)&__dst, a3);
      goto LABEL_19;
    }
    goto LABEL_11;
  }
LABEL_9:
  if (v8 < 0)
  {
    sub_23941A7F8(&__dst, v7, v6);
  }
  else
  {
    __dst = v7;
    v16 = v6;
    *(_DWORD *)v17 = *(_DWORD *)v14;
    *(_DWORD *)&v17[3] = *(_DWORD *)&v14[3];
    v18 = v8;
  }
  v11 = sub_239944BB8((char *)&__dst, a3, 1);
LABEL_19:
  v12 = v11;
  if (v18 < 0)
  {
    operator delete(__dst);
    if ((v8 & 0x80000000) == 0)
      return v12;
  }
  else if ((v8 & 0x80000000) == 0)
  {
    return v12;
  }
  operator delete(v7);
  return v12;
}

void sub_2399562A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(a10);
    if ((v16 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399562FC()
{
  uint64_t v0;
  uint64_t *v1;
  const std::locale::facet *v2;
  _BYTE v4[8];
  uint64_t v5;
  std::locale v6;
  uint64_t v7;
  _BYTE v8[408];
  _QWORD v9[20];

  v9[19] = *MEMORY[0x24BDAC8D0];
  v4[0] = 0;
  v5 = 0;
  v0 = sub_2399D6674();
  sub_23955CF88(&v7);
  *(_QWORD *)&v8[*(_QWORD *)(v7 - 24) + 16] = 2;
  v1 = sub_2399564BC(&v7, (uint64_t)v4);
  std::ios_base::getloc((const std::ios_base *)((char *)v1 + *(_QWORD *)(*v1 - 24)));
  v2 = std::locale::use_facet(&v6, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v2->__vftable[2].~facet_0)(v2, 10);
  std::locale::~locale(&v6);
  std::ostream::put();
  std::ostream::flush();
  v7 = *MEMORY[0x24BEDB7E8];
  *(_QWORD *)&v8[*(_QWORD *)(v7 - 24) - 8] = *(_QWORD *)(MEMORY[0x24BEDB7E8] + 24);
  MEMORY[0x23B83DC8C](v8);
  std::ostream::~ostream();
  MEMORY[0x23B83E250](v9);
  sub_239956828(&v5, v4[0]);
  return v0;
}

void sub_23995645C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_239956828(v10, a10);
  _Unwind_Resume(a1);
}

void sub_239956474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_239956828(v10, a10);
  _Unwind_Resume(a1);
}

void sub_23995648C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, std::locale a12, uint64_t a13)
{
  uint64_t *v13;

  std::locale::~locale(&a12);
  sub_23955C978(&a13);
  sub_239956828(v13, a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_2399564BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  const std::ios_base *v10;
  unsigned int fmtflags;
  const std::locale::facet *v12;
  lconv *v13;
  char *thousands_sep;
  char *decimal_point;
  _OWORD *v16;
  int8x16_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::locale v23;
  void (***v24)(void);
  std::__shared_weak_count *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  lconv *v30;
  char v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  char v65;
  void *__p;
  uint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;

  v70 = *MEMORY[0x24BDAC8D0];
  v4 = *a1;
  v5 = (char *)a1 + *(_QWORD *)(*a1 - 24);
  v6 = *((_QWORD *)v5 + 3);
  *((_QWORD *)v5 + 3) = 0;
  v7 = (std::__shared_weak_count *)operator new(0x28uLL);
  v7->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)off_250AF0B08;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF0AD0;
  v7[1].__shared_owners_ = (uint64_t)a1;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  v10 = (const std::ios_base *)((char *)a1 + *(_QWORD *)(v4 - 24));
  fmtflags = v10[1].__fmtflags_;
  if (fmtflags == -1)
  {
    std::ios_base::getloc(v10);
    v12 = std::locale::use_facet(&v23, MEMORY[0x24BEDB350]);
    fmtflags = ((uint64_t (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 32);
    std::locale::~locale(&v23);
    v10[1].__fmtflags_ = fmtflags;
  }
  v24 = (void (***)(void))&v7[1];
  v25 = v7;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v13 = localeconv();
  v30 = v13;
  thousands_sep = v13->thousands_sep;
  if (thousands_sep)
    LOBYTE(thousands_sep) = *thousands_sep;
  v31 = (char)thousands_sep;
  decimal_point = v13->decimal_point;
  if (v13->decimal_point)
    LOBYTE(decimal_point) = *decimal_point;
  v32 = (char)decimal_point;
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  v49 = 0u;
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v57 = 0u;
  v58 = 0u;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 0u;
  v63 = 0u;
  v64 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v65 = fmtflags;
  v16 = operator new(0x208uLL);
  __p = v16;
  v68 = 0x8000000000000208;
  v67 = 512;
  v17 = vdupq_n_s8(fmtflags);
  *v16 = v17;
  v16[1] = v17;
  v16[2] = v17;
  v16[3] = v17;
  v16[4] = v17;
  v16[5] = v17;
  v16[6] = v17;
  v16[7] = v17;
  v16[8] = v17;
  v16[9] = v17;
  v16[10] = v17;
  v16[11] = v17;
  v16[12] = v17;
  v16[13] = v17;
  v16[14] = v17;
  v16[15] = v17;
  v16[16] = v17;
  v16[17] = v17;
  v16[18] = v17;
  v16[19] = v17;
  v16[20] = v17;
  v16[21] = v17;
  v16[22] = v17;
  v16[23] = v17;
  v16[24] = v17;
  v16[25] = v17;
  v16[26] = v17;
  v16[27] = v17;
  v16[28] = v17;
  v16[29] = v17;
  v16[30] = v17;
  v16[31] = v17;
  *((_BYTE *)v16 + 512) = 0;
  v69 = 0;
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  sub_239957314(&v24, a2, v6 > 0, 0, v6 & ~(v6 >> 63), 0);
  if (SHIBYTE(v68) < 0)
    operator delete(__p);
  v19 = v25;
  if (v25)
  {
    v20 = (unint64_t *)&v25->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  return a1;
}

void sub_239956798(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2399567B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, std::locale a14)
{
  std::locale::~locale(&a14);
  sub_239416DA0((uint64_t)&a12);
  sub_239416DA0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_2399567D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_2399581F4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2399567EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  std::__shared_weak_count *v2;
  unint64_t *v3;
  unint64_t v5;
  uint64_t v6;
  va_list va;
  uint64_t v8;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  do
    v5 = __ldaxr(v3);
  while (__stlxr(v5 - 1, v3));
  if (!v5)
    sub_239EC31D4(v2);
  sub_239416DA0((uint64_t)va1);
  sub_239416DA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_239956828(uint64_t *a1, int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  BOOL v12;
  char *v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char v45;
  char *v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void **v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  void *v59;
  char *v60;
  char *v61;
  int v62;
  unsigned __int8 v63;
  _QWORD *v64;
  void *__p;
  char *v66;
  char *v67;

  __p = 0;
  v66 = 0;
  v67 = 0;
  v3 = a2 - 1;
  if (a2 == 1)
  {
    sub_239956E3C((uint64_t)&__p, *(_QWORD *)(*a1 + 16));
    v7 = *a1 + 8;
    v8 = *(char **)*a1;
    if (v8 != (char *)v7)
    {
      v9 = v66;
      do
      {
        if (v9 >= v67)
        {
          v9 = sub_239956F20(&__p, v8 + 56);
        }
        else
        {
          *v9 = v8[56];
          *((_QWORD *)v9 + 1) = *((_QWORD *)v8 + 8);
          v8[56] = 0;
          *((_QWORD *)v8 + 8) = 0;
          v9 += 16;
        }
        v66 = v9;
        v10 = (char *)*((_QWORD *)v8 + 1);
        if (v10)
        {
          do
          {
            v11 = v10;
            v10 = *(char **)v10;
          }
          while (v10);
        }
        else
        {
          do
          {
            v11 = (char *)*((_QWORD *)v8 + 2);
            v12 = *(_QWORD *)v11 == (_QWORD)v8;
            v8 = v11;
          }
          while (!v12);
        }
        v8 = v11;
      }
      while (v11 != (char *)v7);
    }
  }
  else if (a2 == 2)
  {
    sub_239956E3C((uint64_t)&__p, (uint64_t)(*(_QWORD *)(*a1 + 8) - *(_QWORD *)*a1) >> 4);
    v4 = *(_QWORD *)*a1;
    v5 = *(_QWORD *)(*a1 + 8);
    if (v4 != v5)
    {
      v6 = v66;
      do
      {
        if (v6 < v67)
        {
          *v6 = *(_BYTE *)v4;
          *((_QWORD *)v6 + 1) = *(_QWORD *)(v4 + 8);
          *(_BYTE *)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
          v6 += 16;
        }
        else
        {
          v6 = sub_239956F20(&__p, (char *)v4);
        }
        v66 = v6;
        v4 += 16;
      }
      while (v4 != v5);
    }
  }
  v14 = (char *)__p;
  v13 = v66;
  if (__p != v66)
  {
    v62 = v3;
    while (1)
    {
      v63 = *(v13 - 16);
      v64 = (_QWORD *)*((_QWORD *)v13 - 1);
      *(v13 - 16) = 0;
      *((_QWORD *)v13 - 1) = 0;
      v15 = v66 - 16;
      sub_239956828(v66 - 8, *(v66 - 16));
      v66 = v15;
      if (v63 != 1)
      {
        if (v63 == 2)
        {
          v16 = (_QWORD *)*v64;
          v17 = v64 + 1;
          v18 = (_QWORD *)v64[1];
          if ((_QWORD *)*v64 != v18)
          {
            do
            {
              if (v15 < v67)
              {
                *v15 = *(_BYTE *)v16;
                *((_QWORD *)v15 + 1) = v16[1];
                *(_BYTE *)v16 = 0;
                v16[1] = 0;
                v15 += 16;
              }
              else
              {
                v19 = (char *)__p;
                v20 = (v15 - (_BYTE *)__p) >> 4;
                v21 = v20 + 1;
                if ((unint64_t)(v20 + 1) >> 60)
                  goto LABEL_104;
                v22 = v67 - (_BYTE *)__p;
                if ((v67 - (_BYTE *)__p) >> 3 > v21)
                  v21 = v22 >> 3;
                if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF0)
                  v23 = 0xFFFFFFFFFFFFFFFLL;
                else
                  v23 = v21;
                if (v23 >> 60)
                  goto LABEL_105;
                v24 = (char *)operator new(16 * v23);
                v25 = &v24[16 * v20];
                *v25 = *(_BYTE *)v16;
                *((_QWORD *)v25 + 1) = v16[1];
                *(_BYTE *)v16 = 0;
                v16[1] = 0;
                v26 = v66;
                v27 = v25;
                if (v66 != v19)
                {
                  do
                  {
                    v28 = *(v26 - 16);
                    v26 -= 16;
                    *(v27 - 16) = v28;
                    v27 -= 16;
                    *((_QWORD *)v27 + 1) = *((_QWORD *)v26 + 1);
                    *v26 = 0;
                    *((_QWORD *)v26 + 1) = 0;
                  }
                  while (v26 != v19);
                  v19 = v66;
                }
                v29 = &v24[16 * v23];
                v30 = (char *)__p;
                v15 = v25 + 16;
                __p = v27;
                v66 = v25 + 16;
                v67 = v29;
                if (v19 != v30)
                {
                  v31 = v19 - 8;
                  do
                  {
                    v32 = v31 - 8;
                    sub_239956828(v31, *(v31 - 8));
                    v31 -= 16;
                  }
                  while (v32 != v30);
                }
                if (v30)
                  operator delete(v30);
              }
              v66 = v15;
              v16 += 2;
            }
            while (v16 != v18);
            v16 = (_QWORD *)*v64;
            v17 = v64 + 1;
            v50 = v64[1];
            if (v50 != *v64)
            {
              v51 = v50 - 8;
              do
              {
                v52 = (_QWORD *)(v51 - 8);
                sub_239956828(v51, *(unsigned __int8 *)(v51 - 8));
                v51 -= 16;
              }
              while (v52 != v16);
            }
          }
          *v17 = v16;
        }
        goto LABEL_24;
      }
      v33 = (uint64_t)v64;
      v34 = v64 + 1;
      v35 = (_QWORD *)*v64;
      if ((_QWORD *)*v64 != v64 + 1)
        break;
LABEL_80:
      sub_239957048(v33, *(char **)(v33 + 8));
      *(_QWORD *)v33 = v33 + 8;
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 8) = 0;
LABEL_24:
      sub_239956828(&v64, v63);
      v14 = (char *)__p;
      v13 = v66;
      if (__p == v66)
      {
        v3 = v62;
        goto LABEL_82;
      }
    }
    while (1)
    {
      if (v15 < v67)
      {
        *v15 = *((_BYTE *)v35 + 56);
        *((_QWORD *)v15 + 1) = v35[8];
        *((_BYTE *)v35 + 56) = 0;
        v35[8] = 0;
        v15 += 16;
        v66 = v15;
        v36 = (_QWORD *)v35[1];
        if (v36)
          goto LABEL_70;
        goto LABEL_72;
      }
      v37 = (char *)__p;
      v38 = (v15 - (_BYTE *)__p) >> 4;
      v39 = v38 + 1;
      if ((unint64_t)(v38 + 1) >> 60)
LABEL_104:
        sub_2394189F8();
      v40 = v67 - (_BYTE *)__p;
      if ((v67 - (_BYTE *)__p) >> 3 > v39)
        v39 = v40 >> 3;
      if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFF0)
        v41 = 0xFFFFFFFFFFFFFFFLL;
      else
        v41 = v39;
      if (v41 >> 60)
LABEL_105:
        sub_239418A80();
      v42 = (char *)operator new(16 * v41);
      v43 = &v42[16 * v38];
      *v43 = *((_BYTE *)v35 + 56);
      *((_QWORD *)v43 + 1) = v35[8];
      *((_BYTE *)v35 + 56) = 0;
      v35[8] = 0;
      v44 = v43 + 16;
      if (v15 == v37)
      {
        __p = v43;
        v66 = v43 + 16;
        v67 = &v42[16 * v41];
      }
      else
      {
        do
        {
          v45 = *(v15 - 16);
          v15 -= 16;
          *(v43 - 16) = v45;
          v43 -= 16;
          *((_QWORD *)v43 + 1) = *((_QWORD *)v15 + 1);
          *v15 = 0;
          *((_QWORD *)v15 + 1) = 0;
        }
        while (v15 != v37);
        v15 = (char *)__p;
        v46 = v66;
        __p = v43;
        v66 = v44;
        v67 = &v42[16 * v41];
        if (v46 != v15)
        {
          v47 = v46 - 8;
          do
          {
            v48 = v47 - 8;
            sub_239956828(v47, *(v47 - 8));
            v47 -= 16;
          }
          while (v48 != v15);
        }
        if (!v15)
        {
          v15 = v44;
          v66 = v44;
          v36 = (_QWORD *)v35[1];
          if (v36)
            goto LABEL_70;
          goto LABEL_72;
        }
      }
      operator delete(v15);
      v15 = v44;
      v66 = v44;
      v36 = (_QWORD *)v35[1];
      if (v36)
      {
        do
        {
LABEL_70:
          v49 = v36;
          v36 = (_QWORD *)*v36;
        }
        while (v36);
        goto LABEL_49;
      }
      do
      {
LABEL_72:
        v49 = (_QWORD *)v35[2];
        v12 = *v49 == (_QWORD)v35;
        v35 = v49;
      }
      while (!v12);
LABEL_49:
      v35 = v49;
      if (v49 == v34)
      {
        v33 = (uint64_t)v64;
        goto LABEL_80;
      }
    }
  }
LABEL_82:
  switch(v3)
  {
    case 0:
      sub_239957048(*a1, *(char **)(*a1 + 8));
      goto LABEL_95;
    case 1:
      v53 = (void **)*a1;
      v55 = *(void **)*a1;
      if (!v55)
        goto LABEL_96;
      v56 = v53[1];
      v54 = *(void **)*a1;
      if (v56 != v55)
      {
        v57 = (uint64_t)v56 - 8;
        do
        {
          v58 = (void *)(v57 - 8);
          sub_239956828(v57, *(unsigned __int8 *)(v57 - 8));
          v57 -= 16;
        }
        while (v58 != v55);
        v54 = *v53;
      }
      v53[1] = v55;
      break;
    case 2:
      v53 = (void **)*a1;
      if ((*(char *)(*a1 + 23) & 0x80000000) == 0)
        goto LABEL_96;
      v54 = *v53;
      break;
    case 7:
      v53 = (void **)*a1;
      v54 = *(void **)*a1;
      if (!v54)
        goto LABEL_96;
      v53[1] = v54;
      break;
    default:
      goto LABEL_97;
  }
  operator delete(v54);
LABEL_95:
  v53 = (void **)*a1;
LABEL_96:
  operator delete(v53);
  v14 = (char *)__p;
LABEL_97:
  if (v14)
  {
    v59 = v14;
    if (v66 != v14)
    {
      v60 = v66 - 8;
      do
      {
        v61 = v60 - 8;
        sub_239956828(v60, *(v60 - 8));
        v60 -= 16;
      }
      while (v61 != v14);
      v59 = __p;
    }
    v66 = v14;
    operator delete(v59);
  }
}

void sub_239956E3C(uint64_t a1, unint64_t a2)
{
  char *v2;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char v10;
  char *v11;
  char *v12;
  char *v13;

  v2 = *(char **)a1;
  if (a2 > (uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 4)
  {
    if (a2 >> 60)
      sub_2394189F8();
    v4 = *(_BYTE **)(a1 + 8);
    v5 = 16 * a2;
    v6 = (char *)operator new(16 * a2);
    v7 = &v6[v5];
    v8 = &v6[v4 - v2];
    if (v4 == v2)
    {
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v2)
LABEL_10:
        operator delete(v2);
    }
    else
    {
      v9 = &v6[v4 - v2];
      do
      {
        v10 = *(v4 - 16);
        v4 -= 16;
        *(v9 - 16) = v10;
        v9 -= 16;
        *((_QWORD *)v9 + 1) = *((_QWORD *)v4 + 1);
        *v4 = 0;
        *((_QWORD *)v4 + 1) = 0;
      }
      while (v4 != v2);
      v2 = *(char **)a1;
      v11 = *(char **)(a1 + 8);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v11 != v2)
      {
        v12 = v11 - 8;
        do
        {
          v13 = v12 - 8;
          sub_239956828(v12, *(v12 - 8));
          v12 -= 16;
        }
        while (v13 != v2);
      }
      if (v2)
        goto LABEL_10;
    }
  }
}

char *sub_239956F20(void **a1, char *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char v16;
  char *v17;
  char *v18;
  char *v19;

  v3 = ((_BYTE *)a1[1] - (_BYTE *)*a1) >> 4;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60)
    sub_2394189F8();
  v5 = (_BYTE *)a1[2] - (_BYTE *)*a1;
  if (v5 >> 3 > v4)
    v4 = v5 >> 3;
  v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFF0;
  v7 = 0xFFFFFFFFFFFFFFFLL;
  if (!v6)
    v7 = v4;
  if (v7 >> 60)
    sub_239418A80();
  v9 = 16 * v7;
  v10 = (char *)operator new(16 * v7);
  v11 = &v10[16 * v3];
  v12 = &v10[v9];
  *v11 = *a2;
  *((_QWORD *)v11 + 1) = *((_QWORD *)a2 + 1);
  *a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v13 = v11 + 16;
  v14 = (char *)*a1;
  v15 = (char *)a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
    if (!v15)
      return v13;
    goto LABEL_13;
  }
  do
  {
    v16 = *(v15 - 16);
    v15 -= 16;
    *(v11 - 16) = v16;
    v11 -= 16;
    *((_QWORD *)v11 + 1) = *((_QWORD *)v15 + 1);
    *v15 = 0;
    *((_QWORD *)v15 + 1) = 0;
  }
  while (v15 != v14);
  v15 = (char *)*a1;
  v17 = (char *)a1[1];
  *a1 = v11;
  a1[1] = v13;
  a1[2] = v12;
  if (v17 != v15)
  {
    v18 = v17 - 8;
    do
    {
      v19 = v18 - 8;
      sub_239956828(v18, *(v18 - 8));
      v18 -= 16;
    }
    while (v19 != v15);
  }
  if (v15)
LABEL_13:
    operator delete(v15);
  return v13;
}

void sub_239957048(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_239957048(a1, *(_QWORD *)a2);
    sub_239957048(a1, *((_QWORD *)a2 + 1));
    sub_239956828(a2 + 64, a2[56]);
    if (a2[55] < 0)
      operator delete(*((void **)a2 + 4));
    operator delete(a2);
  }
}

void sub_2399570B4(int a1@<W1>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  std::string *p_p;
  std::string::size_type size;
  std::string *v8;
  __int128 v9;
  std::string *v10;
  std::string __p;
  std::string v12;
  std::string v13;
  std::string v14;

  std::operator+<char>();
  v4 = std::string::append(&v12, ".");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, a1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v8 = std::string::append(&v13, (const std::string::value_type *)p_p, size);
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  v10 = std::string::append(&v14, "] ");
  *a2 = *v10;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v14.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_10;
      goto LABEL_14;
    }
  }
  else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_9;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_10:
    if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v12.__r_.__value_.__l.__data_);
    return;
  }
LABEL_14:
  operator delete(v13.__r_.__value_.__l.__data_);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_15;
}

void sub_2399571FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;

  if (*(char *)(v26 - 41) < 0)
  {
    operator delete(*(void **)(v26 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a26 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a20 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
LABEL_5:
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

const char *sub_239957298(const std::runtime_error *a1)
{
  return std::runtime_error::what(a1 + 1);
}

void sub_2399572A0(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_250AF0AA8;
  std::runtime_error::~runtime_error(a1 + 1);
  std::exception::~exception(a1);
}

void sub_2399572D0(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_250AF0AA8;
  std::runtime_error::~runtime_error(a1 + 1);
  std::exception::~exception(a1);
  JUMPOUT(0x23B83E31CLL);
}

void (****sub_239957314(void (****result)(void), uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6))(void)
{
  void (****v10)(void);
  void (**v11)(void);
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  void (*v19)(void);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void (**v23)(void);
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t (*v30)(void);
  unint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t (***v37)(void);
  _QWORD *v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  void (****v51)(void);
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  BOOL v68;
  _QWORD *v69;
  unint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t *v73;
  _QWORD *v74;
  char *v75;
  char v76;
  char *v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(void);
  char *v89;
  char v90;

  v10 = result;
  switch(*(_BYTE *)a2)
  {
    case 0:
      goto LABEL_26;
    case 1:
      v11 = **result;
      if (!*(_QWORD *)(*(_QWORD *)(a2 + 8) + 16))
      {
        v30 = (uint64_t (*)(void))v11[1];
        return (void (****)(void))v30();
      }
      if (a3)
      {
        v11[1]();
        v12 = (a6 + a5);
        v13 = v10 + 76;
        if (*((char *)v10 + 631) < 0)
        {
          v14 = (unint64_t)v10[77];
          if (v14 >= v12)
          {
LABEL_6:
            v15 = *(_QWORD **)(a2 + 8);
            v16 = (_QWORD *)*v15;
            if (v15[2] == 1)
            {
LABEL_7:
              v17 = v16;
LABEL_8:
              v18 = v10 + 76;
              if (*((char *)v10 + 631) < 0)
                v18 = (_QWORD *)*v13;
              ((void (*)(void (***)(void), _QWORD *, _QWORD))(**v10)[1])(*v10, v18, (a6 + a5));
              ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 34);
              sub_2399582EC((uint64_t)v10, v17 + 4, a4);
              ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, "\": ", 3);
              sub_239957314(v10, v17 + 7, 1, a4, a5, (a6 + a5));
              ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 10);
              v19 = (**v10)[1];
              goto LABEL_160;
            }
LABEL_92:
            v70 = 0;
            do
            {
              v71 = v10 + 76;
              if (*((char *)v10 + 631) < 0)
                v71 = (_QWORD *)*v13;
              ((void (*)(void (***)(void), _QWORD *, _QWORD))(**v10)[1])(*v10, v71, (a6 + a5));
              ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 34);
              sub_2399582EC((uint64_t)v10, v16 + 4, a4);
              ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, "\": ", 3);
              sub_239957314(v10, v16 + 7, 1, a4, a5, (a6 + a5));
              ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, ",\n", 2);
              v72 = (_QWORD *)v16[1];
              if (v72)
              {
                do
                {
                  v17 = v72;
                  v72 = (_QWORD *)*v72;
                }
                while (v72);
              }
              else
              {
                do
                {
                  v17 = (_QWORD *)v16[2];
                  v68 = *v17 == (_QWORD)v16;
                  v16 = v17;
                }
                while (!v68);
              }
              ++v70;
              v16 = v17;
            }
            while (v70 < *(_QWORD *)(*(_QWORD *)(a2 + 8) + 16) - 1);
            goto LABEL_8;
          }
        }
        else
        {
          v14 = *((unsigned __int8 *)v10 + 631);
          if (v12 <= v14)
            goto LABEL_6;
        }
        std::string::resize((std::string *)(v10 + 76), 2 * v14, 32);
        v69 = *(_QWORD **)(a2 + 8);
        v16 = (_QWORD *)*v69;
        if (v69[2] == 1)
          goto LABEL_7;
        goto LABEL_92;
      }
      (*v11)();
      v46 = *(_QWORD **)(a2 + 8);
      v47 = (_QWORD *)*v46;
      if (v46[2] == 1)
      {
        v48 = (_QWORD *)*v46;
      }
      else
      {
        v66 = 0;
        do
        {
          ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 34);
          sub_2399582EC((uint64_t)v10, v47 + 4, a4);
          ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, "\":", 2);
          sub_239957314(v10, v47 + 7, 0, a4, a5, a6);
          ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 44);
          v67 = (_QWORD *)v47[1];
          if (v67)
          {
            do
            {
              v48 = v67;
              v67 = (_QWORD *)*v67;
            }
            while (v67);
          }
          else
          {
            do
            {
              v48 = (_QWORD *)v47[2];
              v68 = *v48 == (_QWORD)v47;
              v47 = v48;
            }
            while (!v68);
          }
          ++v66;
          v47 = v48;
        }
        while (v66 < *(_QWORD *)(*(_QWORD *)(a2 + 8) + 16) - 1);
      }
      ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 34);
      sub_2399582EC((uint64_t)v10, v48 + 4, a4);
      ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, "\":", 2);
      sub_239957314(v10, v48 + 7, 0, a4, a5, a6);
      goto LABEL_161;
    case 2:
      v20 = *(uint64_t **)(a2 + 8);
      v21 = *v20;
      v22 = v20[1];
      v23 = **result;
      if (v21 == v22)
      {
        v30 = (uint64_t (*)(void))v23[1];
        return (void (****)(void))v30();
      }
      if (a3)
      {
        v23[1]();
        v24 = (a6 + a5);
        v25 = v10 + 76;
        if (*((char *)v10 + 631) < 0)
        {
          v26 = (unint64_t)v10[77];
          if (v26 >= v24)
          {
LABEL_15:
            v27 = *(uint64_t **)(a2 + 8);
            v28 = *v27;
            if (*v27 != v27[1] - 16)
              goto LABEL_16;
            goto LABEL_104;
          }
        }
        else
        {
          v26 = *((unsigned __int8 *)v10 + 631);
          if (v24 <= v26)
            goto LABEL_15;
        }
        std::string::resize((std::string *)(v10 + 76), 2 * v26, 32);
        v73 = *(uint64_t **)(a2 + 8);
        v28 = *v73;
        if (*v73 != v73[1] - 16)
        {
          do
          {
LABEL_16:
            ((void (*)(void (***)(void)))(**v10)[1])(*v10);
            sub_239957314(v10, v28, 1, a4, a5, (a6 + a5));
            ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, ",\n", 2);
            v28 += 16;
          }
          while (v28 != *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8) - 16);
        }
LABEL_104:
        v74 = v10 + 76;
        if (*((char *)v10 + 631) < 0)
          v74 = (_QWORD *)*v25;
        ((void (*)(void (***)(void), _QWORD *, _QWORD))(**v10)[1])(*v10, v74, (a6 + a5));
        sub_239957314(v10, *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8) - 16, 1, a4, a5, (a6 + a5));
        ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 10);
        if (*((char *)v10 + 631) < 0)
          v25 = (_QWORD *)*v25;
        ((void (*)(void (***)(void), _QWORD *, _QWORD))(**v10)[1])(*v10, v25, a6);
        goto LABEL_109;
      }
      (*v23)();
      v49 = *(uint64_t **)(a2 + 8);
      v50 = *v49;
      v51 = v10;
      if (*v49 != v49[1] - 16)
      {
        do
        {
          sub_239957314(v51, v50, 0, a4, a5, a6);
          ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 44);
          v50 += 16;
          v51 = v10;
        }
        while (v50 != *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8) - 16);
      }
      sub_239957314(v51, v50, 0, a4, a5, a6);
LABEL_109:
      v29 = (uint64_t (*)(void))***v10;
      return (void (****)(void))v29();
    case 3:
      (***result)();
      sub_2399582EC((uint64_t)v10, *(uint64_t **)(a2 + 8), a4);
      v29 = (uint64_t (*)(void))***v10;
      return (void (****)(void))v29();
    case 4:
      v30 = (uint64_t (*)(void))(**result)[1];
      return (void (****)(void))v30();
    case 5:
      return (void (****)(void))sub_2399588D8(result, *(_QWORD *)(a2 + 8));
    case 6:
      v31 = *(_QWORD *)(a2 + 8);
      if (!v31)
      {
        v29 = (uint64_t (*)(void))***result;
        return (void (****)(void))v29();
      }
      if (v31 < 0xA)
      {
        v32 = (uint64_t)result + 17;
        goto LABEL_125;
      }
      v52 = 4;
      v53 = *(_QWORD *)(a2 + 8);
      while (2)
      {
        if (v53 <= 0x63)
        {
          v52 -= 2;
        }
        else
        {
          if (v53 > 0x3E7)
          {
            if (v53 >> 4 < 0x271)
              break;
            v54 = v53 >> 5;
            v53 /= 0x2710uLL;
            v52 += 4;
            if (v54 <= 0xC34)
            {
              v52 -= 3;
              break;
            }
            continue;
          }
          --v52;
        }
        break;
      }
      v32 = (uint64_t)result + v52 + 16;
      if (v31 < 0x64)
      {
        v79 = *(_QWORD *)(a2 + 8);
      }
      else
      {
        do
        {
          v79 = v31 / 0x64;
          *(_WORD *)(v32 - 2) = *(_WORD *)&a00010203040506[2 * (v31 % 0x64) + 400];
          v32 -= 2;
          v80 = v31 >> 4;
          v31 /= 0x64uLL;
        }
        while (v80 > 0x270);
      }
      if (v79 >= 0xA)
      {
        *(_WORD *)(v32 - 2) = *(_WORD *)&a00010203040506[2 * v79 + 400];
        goto LABEL_126;
      }
      LOBYTE(v31) = v79;
LABEL_125:
      *(_BYTE *)(v32 - 1) = v31 + 48;
LABEL_126:
      v30 = (uint64_t (*)(void))(**result)[1];
      return (void (****)(void))v30();
    case 7:
      if ((*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
      {
LABEL_26:
        v30 = (uint64_t (*)(void))(**result)[1];
      }
      else
      {
        sub_239958D10((_BYTE *)result + 16, *(double *)(a2 + 8));
        v30 = (uint64_t (*)(void))(**v10)[1];
      }
      return (void (****)(void))v30();
    case 8:
      v33 = (**result)[1];
      if (!a3)
      {
        v33();
        v39 = *(_QWORD *)(a2 + 8);
        v41 = *(_BYTE **)v39;
        v40 = *(_BYTE **)(v39 + 8);
        if (v41 == v40)
          goto LABEL_130;
        if (v41 != v40 - 1)
        {
          while (1)
          {
            v42 = *v41;
            if (*v41)
              break;
            ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 48);
LABEL_36:
            ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 44);
            if (++v41 == (_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) + 8) - 1))
              goto LABEL_60;
          }
          if (v42 >= 0xA)
          {
            if (v42 < 0x64)
            {
              v44 = &a00010203040506[2 * v42];
              *((_BYTE *)v10 + 17) = v44[1];
              v45 = *v44;
              v43 = 2;
LABEL_44:
              *((_BYTE *)v10 + 16) = v45;
              ((void (*)(void (***)(void), void (****)(void), uint64_t))(**v10)[1])(*v10, v10 + 2, v43);
              goto LABEL_36;
            }
            *(_WORD *)((char *)v10 + 17) = *(_WORD *)&a00010203040506[2 * (*v41 % 0x64u)];
            LODWORD(v42) = (41 * v42) >> 12;
            v43 = 3;
          }
          else
          {
            v43 = 1;
          }
          v45 = v42 | 0x30;
          goto LABEL_44;
        }
LABEL_60:
        v55 = *v41;
        if (!*v41)
        {
          ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 48);
          goto LABEL_130;
        }
        if (v55 >= 0xA)
        {
          if (v55 < 0x64)
          {
            v75 = &a00010203040506[2 * v55];
            *((_BYTE *)v10 + 17) = v75[1];
            v76 = *v75;
            v56 = 2;
LABEL_129:
            *((_BYTE *)v10 + 16) = v76;
            ((void (*)(void (***)(void), void (****)(void), uint64_t))(**v10)[1])(*v10, v10 + 2, v56);
LABEL_130:
            ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, "],\"subtype\":", 12);
            v81 = *(_QWORD *)(a2 + 8);
            if (!*(_BYTE *)(v81 + 25))
            {
              v30 = (uint64_t (*)(void))(**v10)[1];
              return (void (****)(void))v30();
            }
            v82 = *(unsigned __int8 *)(v81 + 24);
            if (!v82)
            {
              ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 48);
              goto LABEL_161;
            }
            if (v82 >= 0xA)
            {
              if (v82 < 0x64)
              {
                v83 = &a00010203040506[2 * v82];
                *((_BYTE *)v10 + 17) = v83[1];
                v84 = *v83;
LABEL_154:
                *((_BYTE *)v10 + 16) = v84;
                v19 = (**v10)[1];
                goto LABEL_160;
              }
              *(_WORD *)((char *)v10 + 17) = *(_WORD *)&a00010203040506[2
                                                                      * (v82
                                                                                        - 100
                                                                                        * ((41 * v82) >> 12))];
              LODWORD(v82) = (41 * v82) >> 12;
            }
            v84 = v82 | 0x30;
            goto LABEL_154;
          }
          *(_WORD *)((char *)v10 + 17) = *(_WORD *)&a00010203040506[2 * (*v41 % 0x64u)];
          v56 = 3;
          LODWORD(v55) = (41 * v55) >> 12;
        }
        else
        {
          v56 = 1;
        }
        v76 = v55 | 0x30;
        goto LABEL_129;
      }
      v33();
      v34 = (a6 + a5);
      v35 = v10 + 76;
      if (*((char *)v10 + 631) < 0)
      {
        v36 = (unint64_t)v10[77];
        if (v36 >= v34)
        {
          v37 = (uint64_t (***)(void))*v10;
LABEL_65:
          v38 = (_QWORD *)*v35;
          goto LABEL_66;
        }
      }
      else
      {
        v36 = *((unsigned __int8 *)v10 + 631);
        if (v34 <= v36)
        {
          v37 = (uint64_t (***)(void))*v10;
          v38 = v10 + 76;
          goto LABEL_66;
        }
      }
      std::string::resize((std::string *)(v10 + 76), 2 * v36, 32);
      v37 = (uint64_t (***)(void))*v10;
      v38 = v10 + 76;
      if (*((char *)v10 + 631) < 0)
        goto LABEL_65;
LABEL_66:
      ((void (*)(uint64_t (***)(void), _QWORD *, unint64_t))(*v37)[1])(v37, v38, v34);
      ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, "\"bytes\": [", 10);
      v57 = *(_QWORD *)(a2 + 8);
      v59 = *(_BYTE **)v57;
      v58 = *(_BYTE **)(v57 + 8);
      if (v59 == v58)
        goto LABEL_142;
      if (v59 != v58 - 1)
      {
        while (1)
        {
          v60 = *v59;
          if (*v59)
            break;
          ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 48);
LABEL_70:
          ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, ", ", 2);
          if (++v59 == (_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) + 8) - 1))
            goto LABEL_79;
        }
        if (v60 >= 0xA)
        {
          if (v60 < 0x64)
          {
            v62 = &a00010203040506[2 * v60];
            *((_BYTE *)v10 + 17) = v62[1];
            v63 = *v62;
            v61 = 2;
LABEL_78:
            *((_BYTE *)v10 + 16) = v63;
            ((void (*)(void (***)(void), void (****)(void), uint64_t))(**v10)[1])(*v10, v10 + 2, v61);
            goto LABEL_70;
          }
          *(_WORD *)((char *)v10 + 17) = *(_WORD *)&a00010203040506[2 * (*v59 % 0x64u)];
          LODWORD(v60) = (41 * v60) >> 12;
          v61 = 3;
        }
        else
        {
          v61 = 1;
        }
        v63 = v60 | 0x30;
        goto LABEL_78;
      }
LABEL_79:
      v64 = *v59;
      if (!*v59)
      {
        ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 48);
        goto LABEL_142;
      }
      if (v64 < 0xA)
      {
        v65 = 1;
LABEL_140:
        v78 = v64 | 0x30;
        goto LABEL_141;
      }
      if (v64 >= 0x64)
      {
        *(_WORD *)((char *)v10 + 17) = *(_WORD *)&a00010203040506[2 * (*v59 % 0x64u)];
        v65 = 3;
        LODWORD(v64) = (41 * v64) >> 12;
        goto LABEL_140;
      }
      v77 = &a00010203040506[2 * v64];
      *((_BYTE *)v10 + 17) = v77[1];
      v78 = *v77;
      v65 = 2;
LABEL_141:
      *((_BYTE *)v10 + 16) = v78;
      ((void (*)(void (***)(void), void (****)(void), uint64_t))(**v10)[1])(*v10, v10 + 2, v65);
LABEL_142:
      ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, "],\n", 3);
      v85 = v10 + 76;
      if (*((char *)v10 + 631) < 0)
        v85 = (_QWORD *)*v35;
      ((void (*)(void (***)(void), _QWORD *, unint64_t))(**v10)[1])(*v10, v85, v34);
      ((void (*)(void (***)(void), const char *, uint64_t))(**v10)[1])(*v10, "\"subtype\": ", 11);
      v86 = *(_QWORD *)(a2 + 8);
      if (!*(_BYTE *)(v86 + 25))
      {
        v88 = (**v10)[1];
LABEL_158:
        v88();
        goto LABEL_159;
      }
      v87 = *(unsigned __int8 *)(v86 + 24);
      if (v87)
      {
        if (v87 >= 0xA)
        {
          if (v87 < 0x64)
          {
            v89 = &a00010203040506[2 * v87];
            *((_BYTE *)v10 + 17) = v89[1];
            v90 = *v89;
LABEL_157:
            *((_BYTE *)v10 + 16) = v90;
            v88 = (**v10)[1];
            goto LABEL_158;
          }
          *(_WORD *)((char *)v10 + 17) = *(_WORD *)&a00010203040506[2
                                                                  * (v87
                                                                                    - 100
                                                                                    * ((41 * v87) >> 12))];
          LODWORD(v87) = (41 * v87) >> 12;
        }
        v90 = v87 | 0x30;
        goto LABEL_157;
      }
      ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 48);
LABEL_159:
      ((void (*)(void (***)(void), uint64_t))***v10)(*v10, 10);
      v19 = (**v10)[1];
LABEL_160:
      v19();
LABEL_161:
      v29 = (uint64_t (*)(void))***v10;
      return (void (****)(void))v29();
    case 9:
      v30 = (uint64_t (*)(void))(**result)[1];
      return (void (****)(void))v30();
    default:
      return result;
  }
}

uint64_t sub_2399581F4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v5;

  if (*(char *)(a1 + 631) < 0)
  {
    operator delete(*(void **)(a1 + 608));
    v2 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v2)
      return a1;
  }
  else
  {
    v2 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v2)
      return a1;
  }
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_239958274(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF0AD0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_239958284(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_250AF0AD0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2399582B4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 16))(a1 + 24);
}

uint64_t sub_2399582C4()
{
  return std::ostream::put();
}

uint64_t sub_2399582CC()
{
  return std::ostream::write();
}

void sub_2399582D8()
{
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2399582EC(uint64_t result, uint64_t *a2, int a3)
{
  unsigned int v3;
  uint64_t v4;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  __int16 v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char *v25;
  uint64_t (*v26)(void);
  int v27;
  void *exception;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  __int128 v32;
  char *v33;
  std::string::size_type v34;
  std::string *v35;
  __int128 v36;
  uint64_t *v37;
  void *v38;
  std::string v39;
  std::string v40;
  std::string v41;
  __int128 v42;
  std::string::size_type v43;
  char __str[8];
  std::string::size_type v45;
  char v46;

  LOBYTE(v3) = *((char *)a2 + 23) < 0;
  v4 = *((unsigned __int8 *)a2 + 23);
  if ((v4 & 0x80u) != 0)
    v4 = a2[1];
  if (!v4)
    return result;
  v7 = (_QWORD *)result;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = result + 90;
  do
  {
    if ((v3 & 1) != 0)
      v17 = (uint64_t *)*a2;
    else
      v17 = a2;
    v18 = *((unsigned __int8 *)v17 + v8);
    if (v12)
      v13 = *((_BYTE *)v17 + v8) & 0x3F | (v13 << 6);
    else
      v13 = (0xFFu >> byte_239F02A07[v18]) & v18;
    v12 = byte_239F02A07[16 * v12 + 256 + byte_239F02A07[v18]];
    if (v12 == 1)
    {
      v20 = *((_DWORD *)v7 + 158);
      if ((v20 - 1) < 2)
      {
        v8 -= v9 != 0;
        if (v20 != 1)
        {
          v12 = 0;
          v9 = 0;
          v11 = v10;
          goto LABEL_6;
        }
        if (a3)
        {
          v21 = v14 + v10;
          *(_DWORD *)v21 = 1717990748;
          *(_WORD *)(v21 + 4) = 25702;
          v11 = v10 + 6;
        }
        else
        {
          v11 = v10 + 3;
          v22 = v14 + v10;
          *(_WORD *)v22 = -16401;
          *(_BYTE *)(v22 + 2) = -67;
        }
        goto LABEL_47;
      }
      if (!v20)
      {
        v46 = 3;
        *(_DWORD *)__str = 0;
        snprintf(__str, 3uLL, "%.2X", v18);
        exception = __cxa_allocate_exception(0x20uLL);
        std::to_string(&v39, v8);
        v29 = std::string::insert(&v39, 0, "invalid UTF-8 byte at index ");
        v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
        v40.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v30;
        v29->__r_.__value_.__l.__size_ = 0;
        v29->__r_.__value_.__r.__words[2] = 0;
        v29->__r_.__value_.__r.__words[0] = 0;
        v31 = std::string::append(&v40, ": 0x");
        v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v41.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        if (v46 >= 0)
          v33 = __str;
        else
          v33 = *(char **)__str;
        if (v46 >= 0)
          v34 = v46;
        else
          v34 = v45;
        v35 = std::string::append(&v41, v33, v34);
        v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
        v43 = v35->__r_.__value_.__r.__words[2];
        v42 = v36;
        v35->__r_.__value_.__l.__size_ = 0;
        v35->__r_.__value_.__r.__words[2] = 0;
        v35->__r_.__value_.__r.__words[0] = 0;
        sub_239958B24(316, (uint64_t)&v42, (uint64_t)exception);
        __cxa_throw(exception, (struct type_info *)&unk_250AF0B28, (void (*)(void *))sub_239958C9C);
      }
      v12 = 1;
    }
    else
    {
      if (!v12)
      {
        switch(v13)
        {
          case 8u:
            v19 = 25180;
            goto LABEL_46;
          case 9u:
            v19 = 29788;
            goto LABEL_46;
          case 0xAu:
            v19 = 28252;
            goto LABEL_46;
          case 0xBu:
          case 0xEu:
          case 0xFu:
          case 0x10u:
          case 0x11u:
          case 0x12u:
          case 0x13u:
          case 0x14u:
          case 0x15u:
          case 0x16u:
          case 0x17u:
          case 0x18u:
          case 0x19u:
          case 0x1Au:
          case 0x1Bu:
          case 0x1Cu:
          case 0x1Du:
          case 0x1Eu:
          case 0x1Fu:
          case 0x20u:
          case 0x21u:
            goto LABEL_32;
          case 0xCu:
            v19 = 26204;
            goto LABEL_46;
          case 0xDu:
            v19 = 29276;
            goto LABEL_46;
          case 0x22u:
            v19 = 8796;
            goto LABEL_46;
          default:
            if (v13 == 92)
            {
              v19 = 23644;
LABEL_46:
              *(_WORD *)(v14 + v11) = v19;
              v11 += 2;
            }
            else
            {
LABEL_32:
              if (v13 > 0x7E)
                v23 = a3;
              else
                v23 = 0;
              if (v13 >= 0x20 && v23 == 0)
              {
                *(_BYTE *)(v14 + v11++) = *((_BYTE *)v17 + v8);
              }
              else
              {
                v25 = (char *)(v14 + v11);
                if (HIWORD(v13))
                {
                  result = snprintf(v25, 0xDuLL, "\\u%04x\\u%04x", (unsigned __int16)((v13 >> 10) - 10304), v13 & 0x3FF | 0xDC00);
                  v11 += 12;
                }
                else
                {
                  result = snprintf(v25, 7uLL, "\\u%04x", v13);
                  v11 += 6;
                }
              }
            }
            break;
        }
LABEL_47:
        if ((unint64_t)(v11 - 500) <= 0xC)
        {
          result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*v7 + 8))(*v7, v14, v11);
          v12 = 0;
          v11 = 0;
          v10 = 0;
          v9 = 0;
        }
        else
        {
          v12 = 0;
          v9 = 0;
          v10 = v11;
        }
        goto LABEL_6;
      }
      if ((a3 & 1) == 0)
        *(_BYTE *)(v14 + v11++) = *((_BYTE *)v17 + v8);
      ++v9;
    }
LABEL_6:
    ++v8;
    v15 = *((char *)a2 + 23);
    v3 = v15 >> 31;
    v16 = a2[1];
    if (v15 >= 0)
      v16 = *((unsigned __int8 *)a2 + 23);
  }
  while (v8 < v16);
  if (v12)
  {
    v27 = *((_DWORD *)v7 + 158);
    switch(v27)
    {
      case 1:
        (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*v7 + 8))(*v7, v14, v10);
        v26 = *(uint64_t (**)(void))(*(_QWORD *)*v7 + 8);
        break;
      case 2:
        v26 = *(uint64_t (**)(void))(*(_QWORD *)*v7 + 8);
        break;
      case 0:
        v46 = 3;
        *(_DWORD *)__str = 0;
        v37 = (uint64_t *)*a2;
        if (v15 >= 0)
          v37 = a2;
        snprintf(__str, 3uLL, "%.2X", *((unsigned __int8 *)v37 + v16 - 1));
        v38 = __cxa_allocate_exception(0x20uLL);
        std::operator+<char>();
        sub_239958B24(316, (uint64_t)&v42, (uint64_t)v38);
        __cxa_throw(v38, (struct type_info *)&unk_250AF0B28, (void (*)(void *))sub_239958C9C);
      default:
        return result;
    }
    return v26();
  }
  if (v11)
  {
    v26 = *(uint64_t (**)(void))(*(_QWORD *)*v7 + 8);
    return v26();
  }
  return result;
}

void sub_2399587F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  void *v39;
  int v40;
  uint64_t v41;

  if (a39 < 0)
  {
    operator delete(__p);
    if ((v40 & 1) == 0)
      goto LABEL_7;
  }
  else if (!v40)
  {
LABEL_7:
    if (*(char *)(v41 - 89) < 0)
      operator delete(*(void **)(v41 - 112));
    _Unwind_Resume(exception_object);
  }
  __cxa_free_exception(v39);
  goto LABEL_7;
}

uint64_t sub_2399588D8(_QWORD *a1, unint64_t a2)
{
  unint64_t v2;
  _BYTE *v3;
  char *v5;
  unsigned int v6;
  unint64_t v7;
  BOOL v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  if (!a2)
    return (**(uint64_t (***)(_QWORD, uint64_t))*a1)(*a1, 48);
  v2 = a2;
  v3 = a1 + 2;
  if ((v2 & 0x8000000000000000) != 0)
  {
    *v3 = 45;
    v2 = -(uint64_t)v2;
    if (v2 >= 0xA)
    {
      v9 = 4;
      v10 = v2;
      while (v10 > 0x63)
      {
        if (v10 <= 0x3E7)
        {
          v5 = &v3[v9];
          if (v2 < 0x64)
            goto LABEL_34;
          goto LABEL_30;
        }
        if (v10 >> 4 < 0x271)
          goto LABEL_22;
        v9 += 4;
        v8 = v10 >= 0x186A0;
        v10 /= 0x2710uLL;
        if (!v8)
        {
          v9 -= 3;
LABEL_22:
          v5 = &v3[v9 + 1];
          if (v2 < 0x64)
            goto LABEL_34;
          goto LABEL_30;
        }
      }
      v6 = v9 - 1;
LABEL_29:
      v5 = &v3[v6];
      if (v2 < 0x64)
        goto LABEL_34;
      do
      {
LABEL_30:
        v11 = v2 / 0x64;
        *((_WORD *)v5 - 1) = *(_WORD *)&a00010203040506[2 * (v2 % 0x64) + 200];
        v5 -= 2;
        v12 = v2 >> 4;
        v2 /= 0x64uLL;
      }
      while (v12 > 0x270);
      if (v11 < 0xA)
        goto LABEL_35;
      goto LABEL_32;
    }
    v5 = (char *)a1 + 18;
  }
  else
  {
    if (v2 < 0xA)
    {
      *((_BYTE *)a1 + 16) = v2 + 48;
      return (*(uint64_t (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)*a1 + 8))(*a1, v3, 1);
    }
    v6 = 4;
    v7 = v2;
    while (1)
    {
      if (v7 <= 0x63)
      {
        v5 = &v3[v6 - 2];
        if (v2 >= 0x64)
          goto LABEL_30;
        goto LABEL_34;
      }
      if (v7 <= 0x3E7)
        break;
      if (v7 >> 4 < 0x271)
        goto LABEL_29;
      v6 += 4;
      v8 = v7 >= 0x186A0;
      v7 /= 0x2710uLL;
      if (!v8)
      {
        v5 = &v3[v6 - 3];
        if (v2 >= 0x64)
          goto LABEL_30;
        goto LABEL_34;
      }
    }
    v5 = &v3[v6 - 1];
    if (v2 >= 0x64)
      goto LABEL_30;
  }
LABEL_34:
  v11 = v2;
  if (v2 >= 0xA)
  {
LABEL_32:
    *((_WORD *)v5 - 1) = *(_WORD *)&a00010203040506[2 * v11 + 200];
    return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 8))(*a1);
  }
LABEL_35:
  *(v5 - 1) = v11 + 48;
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 8))(*a1);
}

void sub_239958B24(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v6;
  const std::string::value_type *v7;
  std::string::size_type v8;
  std::string *v9;
  __int128 v10;
  void **v11;
  void *__p[2];
  char v13;
  std::string v14;
  void *v15[2];
  int64_t v16;

  v13 = 10;
  strcpy((char *)__p, "type_error");
  sub_2399570B4(a1, &v14);
  v6 = *(char *)(a2 + 23);
  if (v6 >= 0)
    v7 = (const std::string::value_type *)a2;
  else
    v7 = *(const std::string::value_type **)a2;
  if (v6 >= 0)
    v8 = *(unsigned __int8 *)(a2 + 23);
  else
    v8 = *(_QWORD *)(a2 + 8);
  v9 = std::string::append(&v14, v7, v8);
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16 = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)v15 = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v14.__r_.__value_.__l.__data_);
    if ((v13 & 0x80000000) == 0)
      goto LABEL_9;
  }
  else if ((v13 & 0x80000000) == 0)
  {
    goto LABEL_9;
  }
  operator delete(__p[0]);
LABEL_9:
  if (v16 >= 0)
    v11 = v15;
  else
    v11 = (void **)v15[0];
  *(_QWORD *)a3 = &off_250AF0AA8;
  *(_DWORD *)(a3 + 8) = a1;
  MEMORY[0x23B83DB6C](a3 + 16, v11);
  *(_QWORD *)a3 = &off_250AF0B50;
  if (SHIBYTE(v16) < 0)
    operator delete(v15[0]);
}

void sub_239958C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::exception *v26;

  std::exception::~exception(v26);
  if (a26 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_239958C9C(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_250AF0AA8;
  std::runtime_error::~runtime_error(a1 + 1);
  std::exception::~exception(a1);
}

void sub_239958CCC(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_250AF0AA8;
  std::runtime_error::~runtime_error(a1 + 1);
  std::exception::~exception(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239958D10(_BYTE *a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  unsigned int v11;
  char v12;
  char v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;

  v2 = (uint64_t)a1;
  if ((*(_QWORD *)&a2 & 0x8000000000000000) != 0)
  {
    a2 = -a2;
    *a1 = 45;
    v2 = (uint64_t)(a1 + 1);
    if (a2 == 0.0)
      goto LABEL_3;
  }
  else if (a2 == 0.0)
  {
LABEL_3:
    *(_WORD *)v2 = 11824;
    result = v2 + 3;
    *(_BYTE *)(v2 + 2) = 48;
    return result;
  }
  v16 = 0;
  sub_239958F7C(v2, (int *)&v16 + 1, &v16, a2);
  v4 = SHIDWORD(v16);
  v5 = (int)v16 + (uint64_t)SHIDWORD(v16);
  if ((v16 & 0x80000000) == 0 && (int)v5 <= 15)
  {
    memset((void *)(v2 + SHIDWORD(v16)), 48, (int)v16);
    *(_WORD *)(v2 + v5) = 12334;
    return v2 + v5 + 2;
  }
  if ((v5 - 16) >= 0xFFFFFFF1)
  {
    v7 = v5;
    v8 = (_BYTE *)(v2 + v5);
    memmove(v8 + 1, v8, SHIDWORD(v16) - v7);
    *v8 = 46;
    return v4 + v2 + 1;
  }
  if ((_DWORD)v5 == 0 || v5 >= 0xFFFFFFFD)
  {
    v6 = -(int)v5;
    memmove((void *)(v2 + v6 + 2), (const void *)v2, SHIDWORD(v16));
    *(_WORD *)v2 = 11824;
    memset((void *)(v2 + 2), 48, v6);
    return v2 + v4 + v6 + 2;
  }
  if (HIDWORD(v16) == 1)
  {
    v9 = 1;
  }
  else
  {
    memmove((void *)(v2 + 2), (const void *)(v2 + 1), SHIDWORD(v16) - 1);
    *(_BYTE *)(v2 + 1) = 46;
    v9 = v4 + 1;
  }
  v10 = (_BYTE *)(v2 + v9);
  *v10 = 101;
  v11 = v5 - 1;
  if ((int)v5 >= 1)
    v12 = 43;
  else
    v12 = 45;
  if ((int)v5 - 1 < 0)
    v11 = 1 - v5;
  v10[1] = v12;
  if (v11 > 9)
  {
    if (v11 > 0x63)
    {
      v10[2] = v11 / 0x64 + 48;
      v15 = v11 % 0x64;
      v10[3] = (v15 / 0xAu) | 0x30;
      v10[4] = (v15 % 0xAu) | 0x30;
      v14 = 2;
      return (uint64_t)&v10[v14 + 3];
    }
    v10[2] = v11 / 0xAu + 48;
    v13 = (v11 % 0xAu) | 0x30;
  }
  else
  {
    v10[2] = 48;
    v13 = v11 + 48;
  }
  v10[3] = v13;
  v14 = 1;
  return (uint64_t)&v10[v14 + 3];
}

uint64_t sub_239958F7C(uint64_t a1, int *a2, _DWORD *a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  uint64_t v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  int v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  unsigned int v25;

  v4 = *(_QWORD *)&a4 & 0xFFFFFFFFFFFFFLL;
  if (!(*(_QWORD *)&a4 >> 52))
  {
    v5 = 2 * v4;
    v6 = (2 * (*(_QWORD *)&a4 & 0xFFFFFFFFFFFFFLL)) | 1;
    v7 = -1074;
    v8 = -1075;
LABEL_7:
    v10 = v5 - 1;
    v9 = v8;
    goto LABEL_8;
  }
  v7 = (*(_QWORD *)&a4 >> 52) - 1075;
  v5 = 2 * (v4 | 0x10000000000000);
  v6 = (2 * (*(_QWORD *)&a4 & 0xFFFFFFFFFFFFFLL | 0x10000000000000)) | 1;
  v8 = (*(_QWORD *)&a4 >> 52) - 1076;
  if (!(*(_QWORD *)&a4 >> 53) || v4)
  {
    v4 |= 0x10000000000000uLL;
    goto LABEL_7;
  }
  v9 = (*(_QWORD *)&a4 >> 52) - 53;
  v10 = 0x3FFFFFFFFFFFFFLL;
  v4 = 0x10000000000000;
LABEL_8:
  v11 = -4813693 - 78913 * v8;
  v12 = -v8;
  do
  {
    v13 = v6;
    v6 *= 2;
    v11 += 78913;
    ++v12;
  }
  while ((v6 & 0x8000000000000000) == 0);
  do
  {
    v14 = v4;
    v4 *= 2;
    v15 = --v7;
  }
  while ((v4 & 0x8000000000000000) == 0);
  v16 = v11 / 0x40000;
  if (v12 - 61 <= 0)
    v17 = v16;
  else
    v17 = v16 + 1;
  v18 = (char *)&unk_239F02DF0 + 16 * ((int)((v17 + 307 + (((v17 + 307) >> 28) & 7)) << 16) >> 19);
  v19 = *(_QWORD *)v18;
  v20 = HIDWORD(*(_QWORD *)v18);
  v21 = *(_QWORD *)v18;
  v22 = v10 << (v9 + v12);
  v23 = v14 >> 31;
  v24 = v18 + 8;
  LODWORD(v18) = *((_DWORD *)v18 + 2);
  v25 = v6 & 0xFFFFFFFE;
  *a3 = -*((_DWORD *)v24 + 1);
  return sub_23995916C(a1, a2, a3, ((v21 * (unint64_t)HIDWORD(v22)) >> 32)+ v20 * (unint64_t)HIDWORD(v22)+ ((v20 * (unint64_t)v22) >> 32)+ ((((v19 * (unint64_t)v22) >> 32)+ (v20 * v22)+ (v21 * HIDWORD(v22))+ 0x80000000) >> 32)+ 1, ((_DWORD)v18 - v12 + 64), v20 * v23+ ((v21 * v23) >> 32)+ ((v20 * (unint64_t)(v4 & 0xFFFFFFFE)) >> 32)+ ((((v20 * (unint64_t)(v4 & 0xFFFFFFFE)) & 0xFFFFFFFE)+ ((v21 * (unint64_t)(v4 & 0xFFFFFFFE)) >> 32)+ (v21 * v23)+ 0x80000000) >> 32),
           ((_DWORD)v18 + v15 + 64),
           v21,
           v20 * (v13 >> 31)
         + ((v21 * (v13 >> 31)) >> 32)
         + ((v20 * (unint64_t)v25) >> 32)
         + ((((v20 * (unint64_t)v25) & 0xFFFFFFFE)
           + ((v21 * (unint64_t)v25) >> 32)
           + v21 * (v13 >> 31)
           + 0x80000000) >> 32)
         - 1,
           (int)v18 - v12 + 64);
}

uint64_t sub_23995916C(uint64_t result, int *a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, int a10)
{
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v10 = a9 - a4;
  v11 = a9 - a6;
  v12 = -a10;
  v13 = 1 << -(char)a10;
  v14 = a9 >> -(char)a10;
  v15 = (v13 - 1) & a9;
  if (v14 <= 0x3B9AC9FF)
  {
    if (v14 <= 0x5F5E0FF)
    {
      if (v14 <= 0x98967F)
      {
        if (v14 <= 0xF423F)
        {
          v18 = v14 >> 5;
          v19 = v14 >> 4;
          if (v14 <= 9)
            v20 = 1;
          else
            v20 = 10;
          if (v14 <= 9)
            v21 = 1;
          else
            v21 = 2;
          if (v14 <= 0x63)
            v22 = v20;
          else
            v22 = 100;
          if (v14 <= 0x63)
            v23 = v21;
          else
            v23 = 3;
          if (v14 <= 0x3E7)
            v24 = v22;
          else
            v24 = 1000;
          if (v14 <= 0x3E7)
            v25 = v23;
          else
            v25 = 4;
          if (v19 <= 0x270)
            v26 = v24;
          else
            v26 = 10000;
          if (v19 <= 0x270)
            v27 = v25;
          else
            v27 = 5;
          if (v18 > 0xC34)
            v16 = 100000;
          else
            v16 = v26;
          if (v18 <= 0xC34)
            v17 = v27;
          else
            v17 = 6;
        }
        else
        {
          v16 = 1000000;
          v17 = 7;
        }
      }
      else
      {
        v16 = 10000000;
        v17 = 8;
      }
    }
    else
    {
      v16 = 100000000;
      v17 = 9;
    }
  }
  else
  {
    v16 = 1000000000;
    v17 = 10;
  }
  v28 = -a6;
  v29 = -a4;
  v30 = a6 - a9;
  while (v17 > 0)
  {
    v31 = v14 / v16;
    v14 = v14 % v16;
    v32 = *a2;
    *a2 = v32 + 1;
    *(_BYTE *)(result + v32) = v31 + 48;
    --v17;
    v33 = (v14 << v12) + v15;
    if (v10 < v33)
    {
      v16 /= 0xAu;
    }
    else
    {
      *a3 += v17;
      v34 = (unint64_t)v16 << v12;
      if (v33 >= v11 || v10 - v33 < v34)
        return result;
      v36 = *a2 - 1;
      v37 = v15 + (v14 << v12) + v34;
      v38 = v29 - v37;
      v39 = a9;
      do
      {
        if (v37 >= v11 && v28 - v33 + v39 <= v30 + v37)
          break;
        --*(_BYTE *)(result + v36);
        if (v37 >= v11)
          break;
        v40 = v38 + v39;
        v39 -= v34;
        v37 += v34;
      }
      while (v40 >= v34);
    }
    if (v10 >= v33)
      return result;
  }
  v41 = 0;
  do
  {
    v42 = v10;
    v43 = v11;
    v44 = (10 * v15) >> v12;
    v15 = (10 * v15) & (v13 - 1);
    v45 = v44 + 48;
    v46 = *a2;
    *a2 = v46 + 1;
    *(_BYTE *)(result + v46) = v45;
    v10 = 10 * v42;
    v11 = 10 * v43;
    --v41;
  }
  while (10 * v42 < v15);
  *a3 += v41;
  if (v15 < v11 && 10 * v42 - v15 >= v13)
  {
    v47 = *a2 - 1;
    v48 = 10 * v43;
    v49 = -(uint64_t)v15;
    v50 = 10 * v42 - v13;
    v51 = v13 + v15;
    v52 = -10 * v43;
    do
    {
      if (v51 >= v11 && v48 + v49 <= v52 + v51)
        break;
      --*(_BYTE *)(result + v47);
      if (v51 >= v11)
        break;
      v53 = v50 + v49;
      v49 -= v13;
      v51 += v13;
    }
    while (v53 >= v13);
  }
  return result;
}

uint64_t sub_23995944C(uint64_t a1, unsigned __int8 *a2)
{
  int v3;
  _QWORD *v4;
  __int128 *v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  const void *v10;
  size_t v11;
  char *v12;
  char *v13;
  const void ***v14;
  const void ***v15;
  const void **v16;
  const void **v17;
  const void **v18;
  const void ***v19;
  BOOL v20;
  uint64_t *v21;

  v3 = *a2;
  *(_BYTE *)a1 = v3;
  *(_QWORD *)(a1 + 8) = 0;
  switch(v3)
  {
    case 1:
      v14 = (const void ***)*((_QWORD *)a2 + 1);
      v4 = operator new(0x18uLL);
      v4[1] = 0;
      v4[2] = 0;
      *v4 = v4 + 1;
      v17 = *v14;
      v15 = v14 + 1;
      v16 = v17;
      if (v17 != (const void **)v15)
      {
        do
        {
          sub_239959674((uint64_t **)v4, v4 + 1, v16 + 4, (uint64_t)(v16 + 4));
          v18 = (const void **)v16[1];
          if (v18)
          {
            do
            {
              v19 = (const void ***)v18;
              v18 = (const void **)*v18;
            }
            while (v18);
          }
          else
          {
            do
            {
              v19 = (const void ***)v16[2];
              v20 = *v19 == v16;
              v16 = (const void **)v19;
            }
            while (!v20);
          }
          v16 = (const void **)v19;
        }
        while (v19 != v15);
      }
      goto LABEL_21;
    case 2:
      v21 = (uint64_t *)*((_QWORD *)a2 + 1);
      v4 = operator new(0x18uLL);
      v4[1] = 0;
      v4[2] = 0;
      *v4 = 0;
      sub_239959BEC(v4, *v21, v21[1], (v21[1] - *v21) >> 4);
      goto LABEL_21;
    case 3:
      v5 = (__int128 *)*((_QWORD *)a2 + 1);
      v6 = operator new(0x18uLL);
      v4 = v6;
      if (*((char *)v5 + 23) < 0)
      {
        sub_23941A7F8(v6, *(void **)v5, *((_QWORD *)v5 + 1));
      }
      else
      {
        v7 = *v5;
        *((_QWORD *)v6 + 2) = *((_QWORD *)v5 + 2);
        *v6 = v7;
      }
      goto LABEL_21;
    case 4:
      v4 = (_QWORD *)a2[8];
      goto LABEL_21;
    case 5:
    case 6:
    case 7:
      v4 = (_QWORD *)*((_QWORD *)a2 + 1);
      goto LABEL_21;
    case 8:
      v8 = *((_QWORD *)a2 + 1);
      v4 = operator new(0x20uLL);
      v4[1] = 0;
      v4[2] = 0;
      *v4 = 0;
      v10 = *(const void **)v8;
      v9 = *(_QWORD *)(v8 + 8);
      v11 = v9 - *(_QWORD *)v8;
      if (v9 != *(_QWORD *)v8)
      {
        if ((v11 & 0x8000000000000000) != 0)
          sub_2394189F8();
        v12 = (char *)operator new(v9 - *(_QWORD *)v8);
        *v4 = v12;
        v13 = &v12[v11];
        v4[2] = &v12[v11];
        memcpy(v12, v10, v11);
        v4[1] = v13;
      }
      *((_WORD *)v4 + 12) = *(_WORD *)(v8 + 24);
LABEL_21:
      *(_QWORD *)(a1 + 8) = v4;
      break;
    default:
      return a1;
  }
  return a1;
}

void sub_239959608(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_23995961C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239959630(_Unwind_Exception *a1)
{
  void **v1;
  void *v3;

  v3 = *v1;
  if (*v1)
  {
    v1[1] = v3;
    operator delete(v3);
    operator delete(v1);
    _Unwind_Resume(a1);
  }
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_239959674(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v14;
  uint64_t *v15;

  v6 = sub_23995979C(a1, a2, &v15, &v14, a3);
  v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    v8 = v6;
    v9 = (uint64_t *)operator new(0x48uLL);
    v7 = v9;
    if (*(char *)(a4 + 23) < 0)
    {
      sub_23941A7F8((_BYTE *)v9 + 32, *(void **)a4, *(_QWORD *)(a4 + 8));
    }
    else
    {
      *((_OWORD *)v9 + 2) = *(_OWORD *)a4;
      v9[6] = *(_QWORD *)(a4 + 16);
    }
    sub_23995944C(v7 + 7, a4 + 24);
    v10 = v15;
    *v7 = 0;
    v7[1] = 0;
    v7[2] = (uint64_t)v10;
    *v8 = (uint64_t)v7;
    v11 = (uint64_t *)**a1;
    v12 = v7;
    if (v11)
    {
      *a1 = v11;
      v12 = (uint64_t *)*v8;
    }
    sub_2394213B8(a1[1], v12);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v7;
}

void sub_239959764(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_239959B94((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_239959778(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v3;
  va_list va;

  va_start(va, a2);
  if (*(char *)(v2 + 55) < 0)
    operator delete(*v3);
  sub_239959B94((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_23995979C(uint64_t **a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, const void **a5)
{
  uint64_t **v8;
  int v10;
  int v11;
  size_t v12;
  const void *v13;
  size_t v14;
  const void *v15;
  size_t v16;
  int v17;
  _BOOL4 v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  int v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  BOOL v27;
  int v28;
  int v29;
  size_t v30;
  const void *v31;
  size_t v32;
  const void *v33;
  size_t v34;
  int v35;
  _BOOL4 v36;
  uint64_t *v37;
  uint64_t **v38;
  _QWORD *v39;
  const void *v40;
  const void *v41;
  int v42;
  size_t v43;
  const void *v44;
  size_t v45;
  int v46;
  _BOOL4 v47;
  int v48;
  _BOOL4 v49;
  uint64_t *v50;
  int v51;
  size_t v52;
  uint64_t *v53;
  size_t v54;
  int v55;
  _BOOL4 v56;
  uint64_t *v57;
  uint64_t **v58;
  uint64_t **v59;
  _QWORD *v60;
  const void *v61;
  const void *v62;
  int v63;
  size_t v64;
  const void *v65;
  size_t v66;
  int v67;
  _BOOL4 v68;
  int v69;
  _BOOL4 v70;

  v8 = a1 + 1;
  if (a1 + 1 == (uint64_t **)a2)
    goto LABEL_20;
  v10 = *((char *)a2 + 55);
  v11 = *((char *)a5 + 23);
  if (v11 >= 0)
    v12 = *((unsigned __int8 *)a5 + 23);
  else
    v12 = (size_t)a5[1];
  if (v11 >= 0)
    v13 = a5;
  else
    v13 = *a5;
  if (v10 >= 0)
    v14 = *((unsigned __int8 *)a2 + 55);
  else
    v14 = a2[5];
  if (v10 >= 0)
    v15 = a2 + 4;
  else
    v15 = (const void *)a2[4];
  if (v14 >= v12)
    v16 = v12;
  else
    v16 = v14;
  v17 = memcmp(v13, v15, v16);
  v18 = v12 < v14;
  if (v17)
    v18 = v17 < 0;
  if (v18)
  {
LABEL_20:
    v19 = (uint64_t *)*a2;
    if (*a1 == a2)
    {
      v21 = a2;
LABEL_53:
      if (v19)
      {
        *a3 = v21;
        return v21 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v19)
    {
      v20 = (uint64_t *)*a2;
      do
      {
        v21 = v20;
        v20 = (uint64_t *)v20[1];
      }
      while (v20);
    }
    else
    {
      v26 = a2;
      do
      {
        v21 = (uint64_t *)v26[2];
        v27 = *v21 == (_QWORD)v26;
        v26 = v21;
      }
      while (v27);
    }
    v28 = *((char *)a5 + 23);
    v29 = *((char *)v21 + 55);
    if (v29 >= 0)
      v30 = *((unsigned __int8 *)v21 + 55);
    else
      v30 = v21[5];
    if (v29 >= 0)
      v31 = v21 + 4;
    else
      v31 = (const void *)v21[4];
    if (v28 >= 0)
      v32 = *((unsigned __int8 *)a5 + 23);
    else
      v32 = (size_t)a5[1];
    if (v28 >= 0)
      v33 = a5;
    else
      v33 = *a5;
    if (v32 >= v30)
      v34 = v30;
    else
      v34 = v32;
    v35 = memcmp(v31, v33, v34);
    v36 = v30 < v32;
    if (v35)
      v36 = v35 < 0;
    if (v36)
      goto LABEL_53;
    v37 = *v8;
    if (*v8)
    {
      do
      {
        while (1)
        {
          v38 = (uint64_t **)v37;
          v41 = (const void *)v37[4];
          v39 = v37 + 4;
          v40 = v41;
          v42 = *((char *)v39 + 23);
          if (v42 >= 0)
            v43 = *((unsigned __int8 *)v39 + 23);
          else
            v43 = v39[1];
          if (v42 >= 0)
            v44 = v39;
          else
            v44 = v40;
          if (v43 >= v32)
            v45 = v32;
          else
            v45 = v43;
          v46 = memcmp(v33, v44, v45);
          v47 = v32 < v43;
          if (v46)
            v47 = v46 < 0;
          if (!v47)
            break;
          v37 = *v38;
          v8 = v38;
          if (!*v38)
            goto LABEL_74;
        }
        v48 = memcmp(v44, v33, v45);
        v49 = v43 < v32;
        if (v48)
          v49 = v48 < 0;
        if (!v49)
          break;
        v8 = v38 + 1;
        v37 = v38[1];
      }
      while (v37);
    }
    else
    {
      v38 = v8;
    }
LABEL_74:
    *a3 = (uint64_t *)v38;
    return (uint64_t *)v8;
  }
  v22 = memcmp(v15, v13, v16);
  v23 = v14 < v12;
  if (v22)
    v23 = v22 < 0;
  if (!v23)
  {
    *a3 = a2;
    *a4 = a2;
    return (uint64_t *)a4;
  }
  v24 = a2[1];
  if (v24)
  {
    v25 = (uint64_t *)a2[1];
    do
    {
      a4 = (uint64_t **)v25;
      v25 = (uint64_t *)*v25;
    }
    while (v25);
  }
  else
  {
    v50 = a2;
    do
    {
      a4 = (uint64_t **)v50[2];
      v27 = *a4 == v50;
      v50 = (uint64_t *)a4;
    }
    while (!v27);
  }
  if (a4 != v8)
  {
    v51 = *((char *)a4 + 55);
    if (v51 >= 0)
      v52 = *((unsigned __int8 *)a4 + 55);
    else
      v52 = (size_t)a4[5];
    if (v51 >= 0)
      v53 = (uint64_t *)(a4 + 4);
    else
      v53 = a4[4];
    if (v52 >= v12)
      v54 = v12;
    else
      v54 = v52;
    v55 = memcmp(v13, v53, v54);
    v56 = v12 < v52;
    if (v55)
      v56 = v55 < 0;
    if (!v56)
    {
      v57 = *v8;
      if (*v8)
      {
        v58 = a3;
        do
        {
          while (1)
          {
            v59 = (uint64_t **)v57;
            v62 = (const void *)v57[4];
            v60 = v57 + 4;
            v61 = v62;
            v63 = *((char *)v60 + 23);
            if (v63 >= 0)
              v64 = *((unsigned __int8 *)v60 + 23);
            else
              v64 = v60[1];
            if (v63 >= 0)
              v65 = v60;
            else
              v65 = v61;
            if (v64 >= v12)
              v66 = v12;
            else
              v66 = v64;
            v67 = memcmp(v13, v65, v66);
            v68 = v12 < v64;
            if (v67)
              v68 = v67 < 0;
            if (!v68)
              break;
            v57 = *v59;
            v8 = v59;
            if (!*v59)
              goto LABEL_119;
          }
          v69 = memcmp(v65, v13, v66);
          v70 = v64 < v12;
          if (v69)
            v70 = v69 < 0;
          if (!v70)
            break;
          v8 = v59 + 1;
          v57 = v59[1];
        }
        while (v57);
      }
      else
      {
        v59 = v8;
        v58 = a3;
      }
LABEL_119:
      *v58 = (uint64_t *)v59;
      return (uint64_t *)v8;
    }
  }
  if (v24)
  {
    *a3 = (uint64_t *)a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return (uint64_t *)a4;
}

uint64_t *sub_239959B94(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16))
    {
      sub_239956828((uint64_t *)(v2 + 64), *(unsigned __int8 *)(v2 + 56));
      if (*(char *)(v2 + 55) < 0)
        operator delete(*(void **)(v2 + 32));
    }
    operator delete((void *)v2);
  }
  return a1;
}

_QWORD *sub_239959BEC(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v5;
  _QWORD *i;

  if (a4)
  {
    v5 = result;
    if (a4 >> 60)
      sub_2394189F8();
    result = operator new(16 * a4);
    *v5 = result;
    v5[1] = result;
    v5[2] = &result[2 * a4];
    for (i = result; a2 != a3; i += 2)
    {
      sub_23995944C(result, a2);
      a2 += 16;
      result = i + 2;
    }
    v5[1] = result;
  }
  return result;
}

void sub_239959CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_239959CEC(&a9);
  _Unwind_Resume(a1);
}

void sub_239959CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11)
{
  uint64_t v11;
  uint64_t v12;

  sub_239959D88((uint64_t)&a11);
  *(_QWORD *)(v11 + 8) = v12;
  sub_239959CEC(&a9);
  _Unwind_Resume(a1);
}

void ***sub_239959CEC(void ***result)
{
  void ***v1;
  void **v2;
  uint64_t *v3;
  uint64_t *v4;
  void *v5;
  uint64_t *v6;
  uint64_t *v7;

  v1 = result;
  if (!*((_BYTE *)result + 8))
  {
    v2 = *result;
    v3 = (uint64_t *)**result;
    if (v3)
    {
      v4 = (uint64_t *)v2[1];
      v5 = **result;
      if (v4 != v3)
      {
        v6 = v4 - 1;
        do
        {
          v7 = v6 - 1;
          sub_239956828(v6, *((unsigned __int8 *)v6 - 8));
          v6 -= 2;
        }
        while (v7 != v3);
        v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

uint64_t sub_239959D88(uint64_t a1)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;

  if (!*(_BYTE *)(a1 + 24))
  {
    v2 = **(uint64_t ***)(a1 + 16);
    v3 = **(uint64_t ***)(a1 + 8);
    if (v2 != v3)
    {
      v4 = v2 - 1;
      do
      {
        v5 = v4 - 1;
        sub_239956828(v4, *((unsigned __int8 *)v4 - 8));
        v4 -= 2;
      }
      while (v5 != v3);
    }
  }
  return a1;
}

const char *sub_239959DEC(char *a1)
{
  unint64_t v1;

  v1 = *a1;
  if (v1 > 9)
    return "number";
  else
    return off_250AF0B68[v1];
}

uint64_t sub_239959E14(uint64_t a1, uint64_t *a2, uint64_t a3, int64x2_t *a4)
{
  uint64_t v6;
  std::string *v7;
  std::__fs::filesystem::path::__string_view v8;
  void **p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v10;
  std::basic_string_view<_CharT, _Traits>::size_type v11;
  void **v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int v23;
  _QWORD *v24;
  int v25;
  BOOL v26;
  uint64_t *v27;
  int v28;
  size_t v29;
  unint64_t v30;
  unsigned int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void **v36;
  uint64_t v37;
  unsigned int v38;
  std::string::size_type v39;
  std::string::size_type v40;
  std::string::size_type v41;
  std::__fs::filesystem::path *v42;
  std::string::size_type v43;
  std::string *v44;
  __int128 v45;
  std::string *v46;
  std::string::size_type v47;
  std::string *v48;
  __int128 v49;
  uint64_t *v50;
  int v51;
  int v52;
  uint64_t *v53;
  const std::string::value_type *v54;
  const std::string::value_type *v55;
  int v56;
  const std::string::value_type *v57;
  std::string::size_type v58;
  std::string *v59;
  __int128 v60;
  void **v61;
  __int128 v62;
  std::__fs::filesystem::path::__string_view v63;
  _BYTE *v64;
  std::basic_string_view<_CharT, _Traits>::size_type v65;
  std::basic_string_view<_CharT, _Traits>::size_type v66;
  std::string::size_type v67;
  void *v68;
  int v69;
  std::string::size_type v70;
  uint64_t v71;
  std::string::size_type v72;
  std::string::size_type v73;
  std::string *v74;
  std::string *p_n;
  std::__fs::filesystem::path::__string_view v76;
  _BYTE *v77;
  std::basic_string_view<_CharT, _Traits>::size_type v78;
  std::basic_string_view<_CharT, _Traits>::size_type v79;
  uint64_t v80;
  std::string *v81;
  std::__fs::filesystem::path::__string_view v82;
  _BYTE *v83;
  std::basic_string_view<_CharT, _Traits>::size_type v84;
  std::basic_string_view<_CharT, _Traits>::size_type v85;
  std::__fs::filesystem::path::__string_view v86;
  int v87;
  std::__fs::filesystem::path::__string_view v88;
  _BYTE *v89;
  BOOL v90;
  std::basic_string_view<_CharT, _Traits>::size_type v91;
  std::basic_string_view<_CharT, _Traits>::size_type v92;
  void *v93;
  int v94;
  unint64_t v95;
  uint64_t v96;
  int64x2_t *v98;
  int64x2_t *v99;
  uint64_t v100;
  void *v101;
  unsigned int __val;
  std::__fs::filesystem::path v105;
  _DWORD v106[2];
  std::string v107;
  std::__fs::filesystem::path v108;
  std::string v109;
  std::string pn;
  std::string __n;
  void **__dst;
  std::basic_string_view<_CharT, _Traits>::size_type size;
  void *v114;
  __int16 v115;
  void *__p;
  __int16 v117;
  void *v118;
  __int16 v119;
  void *v120;
  __int16 v121;
  void *v122;
  char v123;
  void **v124;
  std::basic_string_view<_CharT, _Traits>::size_type v125;
  _BYTE v126[7];
  unsigned __int8 v127;
  std::__fs::filesystem::path v128;

  v98 = a4 + 4;
  sub_23995AC58((unint64_t *)&a4[4], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4));
  memset(&v128, 0, sizeof(v128));
  v6 = *(unsigned __int8 *)(a1 + 23);
  v100 = a1;
  if ((v6 & 0x80u) == 0)
    v7 = (std::string *)a1;
  else
    v7 = *(std::string **)a1;
  if ((v6 & 0x80u) != 0)
    v6 = *(_QWORD *)(a1 + 8);
  sub_23948900C(&v128.__pn_, v7, (std::string *)((char *)v7 + v6));
  v8 = std::__fs::filesystem::path::__stem(&v128);
  if (v8.__size_ > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  if (v8.__size_ >= 0x17)
  {
    v10 = (v8.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8.__size_ | 7) != 0x17)
      v10 = v8.__size_ | 7;
    v11 = v10 + 1;
    p_dst = (void **)operator new(v10 + 1);
    size = v8.__size_;
    v114 = (void *)(v11 | 0x8000000000000000);
    __dst = p_dst;
    goto LABEL_13;
  }
  HIBYTE(v114) = v8.__size_;
  p_dst = (void **)&__dst;
  if (v8.__size_)
LABEL_13:
    memmove(p_dst, v8.__data_, v8.__size_);
  *((_BYTE *)p_dst + v8.__size_) = 0;
  v12 = __dst;
  LODWORD(__n.__r_.__value_.__l.__data_) = (_DWORD)v114;
  *(_DWORD *)((char *)__n.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v114 + 3);
  if ((SHIBYTE(v114) & 0x80000000) == 0)
  {
    v124 = __dst;
    v125 = size;
    *(_DWORD *)v126 = __n.__r_.__value_.__l.__data_;
    *(_DWORD *)&v126[3] = *(_DWORD *)((char *)__n.__r_.__value_.__r.__words + 3);
    v127 = HIBYTE(v114);
    if ((SHIBYTE(v128.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_16;
LABEL_19:
    operator delete(v128.__pn_.__r_.__value_.__l.__data_);
    v13 = *a2;
    if (a2[1] == *a2)
      goto LABEL_203;
    goto LABEL_20;
  }
  sub_23941A7F8(&v124, __dst, size);
  operator delete(v12);
  if (SHIBYTE(v128.__pn_.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_19;
LABEL_16:
  v13 = *a2;
  if (a2[1] != *a2)
  {
LABEL_20:
    v14 = 0;
    v15 = 0;
    v99 = a4;
    do
    {
      __val = v15;
      LOWORD(__dst) = v15;
      LOBYTE(size) = 0;
      v115 = 0;
      LOBYTE(v114) = 0;
      v117 = 0;
      LOBYTE(__p) = 0;
      v119 = 0;
      LOBYTE(v118) = 0;
      v121 = 0;
      LOBYTE(v120) = 0;
      v123 = 0;
      LOBYTE(v122) = 0;
      v16 = operator new(0x50uLL);
      *v16 = 1;
      v16[1] = &size;
      v16[2] = 2;
      v16[3] = (char *)&v115 + 1;
      v16[4] = 4;
      v16[5] = (char *)&v117 + 1;
      v16[6] = 5;
      v16[7] = (char *)&v119 + 1;
      v16[8] = 3;
      v101 = v16;
      v16[9] = (char *)&v121 + 1;
      v17 = v13 + 48 * v14;
      v20 = *(_QWORD *)(v17 + 32);
      v19 = (_QWORD *)(v17 + 32);
      v18 = v20;
      if (v20)
      {
        v21 = v16;
        v22 = v16 + 10;
LABEL_26:
        v23 = *(_DWORD *)v21;
        v24 = v19;
        do
        {
          v25 = *(_DWORD *)(v18 + 28);
          v26 = v25 < v23;
          if (v25 >= v23)
            v27 = (uint64_t *)v18;
          else
            v27 = (uint64_t *)(v18 + 8);
          if (!v26)
            v24 = (_QWORD *)v18;
          v18 = *v27;
        }
        while (*v27);
        if (v24 != v19 && v23 >= *((_DWORD *)v24 + 7))
        {
          *(_BYTE *)v21[1] = 1;
          v28 = (char)v127;
          if ((v127 & 0x80u) == 0)
            v29 = v127;
          else
            v29 = v125;
          v30 = v29 + 1;
          if (v29 + 1 > 0x7FFFFFFFFFFFFFF7)
            sub_23941A5AC();
          v31 = *((unsigned __int16 *)v24 + 16);
          v32 = a2[3];
          if (v30 >= 0x17)
          {
            v34 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v30 | 7) != 0x17)
              v34 = v30 | 7;
            v35 = v34 + 1;
            v33 = (char *)operator new(v34 + 1);
            v109.__r_.__value_.__l.__size_ = v29 + 1;
            v109.__r_.__value_.__r.__words[2] = v35 | 0x8000000000000000;
            v109.__r_.__value_.__r.__words[0] = (std::string::size_type)v33;
          }
          else
          {
            memset(&v109, 0, sizeof(v109));
            v33 = (char *)&v109;
            *((_BYTE *)&v109.__r_.__value_.__s + 23) = v29 + 1;
            if (!v29)
              goto LABEL_49;
          }
          if (v28 >= 0)
            v36 = (void **)&v124;
          else
            v36 = v124;
          memmove(v33, v36, v29);
LABEL_49:
          v37 = v32 + 48 * v31;
          *(_WORD *)&v33[v29] = 95;
          memset(&v108, 0, sizeof(v108));
          v38 = *(_DWORD *)v37 - 1;
          if (v38 >= 0xD)
          {
            v40 = 0;
            v41 = 0;
            v39 = 0;
          }
          else
          {
            MEMORY[0x23B83DBFC](&v108, off_250AF0BB8[v38]);
            v39 = HIBYTE(v108.__pn_.__r_.__value_.__r.__words[2]);
            v40 = v108.__pn_.__r_.__value_.__l.__size_;
            v41 = v108.__pn_.__r_.__value_.__r.__words[0];
          }
          if ((v39 & 0x80u) == 0)
            v42 = &v108;
          else
            v42 = (std::__fs::filesystem::path *)v41;
          if ((v39 & 0x80u) == 0)
            v43 = v39;
          else
            v43 = v40;
          v44 = std::string::append(&v109, (const std::string::value_type *)v42, v43);
          v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
          pn.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
          *(_OWORD *)&pn.__r_.__value_.__l.__data_ = v45;
          v44->__r_.__value_.__l.__size_ = 0;
          v44->__r_.__value_.__r.__words[2] = 0;
          v44->__r_.__value_.__r.__words[0] = 0;
          std::to_string(&v107, __val);
          if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v46 = &v107;
          else
            v46 = (std::string *)v107.__r_.__value_.__r.__words[0];
          if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v47 = HIBYTE(v107.__r_.__value_.__r.__words[2]);
          else
            v47 = v107.__r_.__value_.__l.__size_;
          v48 = std::string::append(&pn, (const std::string::value_type *)v46, v47);
          v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
          v128.__pn_.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v128.__pn_.__r_.__value_.__l.__data_ = v49;
          v48->__r_.__value_.__l.__size_ = 0;
          v48->__r_.__value_.__r.__words[2] = 0;
          v48->__r_.__value_.__r.__words[0] = 0;
          v50 = *(uint64_t **)(a3 + 8);
          if (!v50)
LABEL_206:
            sub_23941D898("map::at:  key not found");
          v51 = *(_DWORD *)v21;
          while (1)
          {
            while (1)
            {
              v52 = *((_DWORD *)v50 + 8);
              if (v51 >= v52)
                break;
              v50 = (uint64_t *)*v50;
              if (!v50)
                goto LABEL_206;
            }
            if (v52 >= v51)
              break;
            v50 = (uint64_t *)v50[1];
            if (!v50)
              goto LABEL_206;
          }
          v55 = (const std::string::value_type *)v50[9];
          v53 = v50 + 9;
          v54 = v55;
          v56 = *((char *)v53 + 23);
          if (v56 >= 0)
            v57 = (const std::string::value_type *)v53;
          else
            v57 = v54;
          if (v56 >= 0)
            v58 = *((unsigned __int8 *)v53 + 23);
          else
            v58 = v53[1];
          v59 = std::string::append(&v128.__pn_, v57, v58);
          v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
          __n.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__n.__r_.__value_.__l.__data_ = v60;
          v59->__r_.__value_.__l.__size_ = 0;
          v59->__r_.__value_.__r.__words[2] = 0;
          v59->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v128.__pn_.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v128.__pn_.__r_.__value_.__l.__data_);
            if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_85;
LABEL_79:
            if ((SHIBYTE(pn.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_80;
LABEL_86:
            operator delete(pn.__r_.__value_.__l.__data_);
            if (SHIBYTE(v108.__pn_.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_87;
LABEL_81:
            if ((SHIBYTE(v109.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_82;
LABEL_88:
            operator delete(v109.__r_.__value_.__l.__data_);
            if (!*(_BYTE *)(v32 + 48 * v31 + 5))
            {
LABEL_185:
              std::string::operator=((std::string *)(v21[1] + 8), &__n);
              if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__n.__r_.__value_.__l.__data_);
              goto LABEL_189;
            }
          }
          else
          {
            if ((SHIBYTE(v107.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_79;
LABEL_85:
            operator delete(v107.__r_.__value_.__l.__data_);
            if (SHIBYTE(pn.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_86;
LABEL_80:
            if ((SHIBYTE(v108.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_81;
LABEL_87:
            operator delete(v108.__pn_.__r_.__value_.__l.__data_);
            if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_88;
LABEL_82:
            if (!*(_BYTE *)(v32 + 48 * v31 + 5))
              goto LABEL_185;
          }
          v61 = (void **)(v32 + 48 * v31 + 24);
          if (*(char *)(v37 + 47) < 0)
          {
            sub_23941A7F8(&v128, *v61, *(_QWORD *)(v32 + 48 * v31 + 32));
          }
          else
          {
            v62 = *(_OWORD *)v61;
            v128.__pn_.__r_.__value_.__r.__words[2] = *(_QWORD *)(v32 + 48 * v31 + 40);
            *(_OWORD *)&v128.__pn_.__r_.__value_.__l.__data_ = v62;
          }
          pn = v128.__pn_;
          v63 = std::__fs::filesystem::path::__filename((const std::__fs::filesystem::path *)&pn);
          if (v63.__size_ > 0x7FFFFFFFFFFFFFF7)
            sub_23941A5AC();
          if (v63.__size_ >= 0x17)
          {
            v65 = (v63.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v63.__size_ | 7) != 0x17)
              v65 = v63.__size_ | 7;
            v66 = v65 + 1;
            v64 = operator new(v65 + 1);
            v128.__pn_.__r_.__value_.__l.__size_ = v63.__size_;
            v128.__pn_.__r_.__value_.__r.__words[2] = v66 | 0x8000000000000000;
            v128.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v64;
          }
          else
          {
            *((_BYTE *)&v128.__pn_.__r_.__value_.__s + 23) = v63.__size_;
            v64 = &v128;
            if (!v63.__size_)
            {
LABEL_100:
              v64[v63.__size_] = 0;
              v67 = v128.__pn_.__r_.__value_.__l.__size_;
              v68 = (void *)v128.__pn_.__r_.__value_.__r.__words[0];
              v106[0] = v128.__pn_.__r_.__value_.__r.__words[2];
              *(_DWORD *)((char *)v106 + 3) = *(_DWORD *)((char *)&v128.__pn_.__r_.__value_.__r.__words[2] + 3);
              v69 = SHIBYTE(v128.__pn_.__r_.__value_.__r.__words[2]);
              if (SHIBYTE(v128.__pn_.__r_.__value_.__r.__words[2]) < 0)
              {
                sub_23941A7F8(&v109, v128.__pn_.__r_.__value_.__l.__data_, v128.__pn_.__r_.__value_.__l.__size_);
                v70 = HIBYTE(v109.__r_.__value_.__r.__words[2]);
                v67 = v109.__r_.__value_.__l.__size_;
              }
              else
              {
                v70 = HIBYTE(v128.__pn_.__r_.__value_.__r.__words[2]);
                *(_OWORD *)&v109.__r_.__value_.__l.__data_ = *(_OWORD *)&v128.__pn_.__r_.__value_.__l.__data_;
                LODWORD(v109.__r_.__value_.__r.__words[2]) = v106[0];
                *(_DWORD *)((char *)&v109.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v106 + 3);
                *((_BYTE *)&v109.__r_.__value_.__s + 23) = *((_BYTE *)&v128.__pn_.__r_.__value_.__s + 23);
              }
              v71 = HIBYTE(__n.__r_.__value_.__r.__words[2]);
              if ((__n.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v72 = HIBYTE(__n.__r_.__value_.__r.__words[2]);
              else
                v72 = __n.__r_.__value_.__l.__size_;
              if ((v70 & 0x80u) == 0)
                v73 = v70;
              else
                v73 = v67;
              if (v72 != v73)
                goto LABEL_120;
              if ((v70 & 0x80u) == 0)
                v74 = &v109;
              else
                v74 = (std::string *)v109.__r_.__value_.__r.__words[0];
              if ((*((_BYTE *)&__n.__r_.__value_.__s + 23) & 0x80) != 0)
              {
                if (memcmp(__n.__r_.__value_.__l.__data_, v74, __n.__r_.__value_.__l.__size_))
                  goto LABEL_120;
              }
              else if (*((_BYTE *)&__n.__r_.__value_.__s + 23))
              {
                p_n = &__n;
                while (p_n->__r_.__value_.__s.__data_[0] == v74->__r_.__value_.__s.__data_[0])
                {
                  p_n = (std::string *)((char *)p_n + 1);
                  v74 = (std::string *)((char *)v74 + 1);
                  if (!--v71)
                    goto LABEL_155;
                }
LABEL_120:
                v76 = std::__fs::filesystem::path::__parent_path((const std::__fs::filesystem::path *)&pn);
                if (v76.__size_ > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                if (v76.__size_ >= 0x17)
                {
                  v78 = (v76.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v76.__size_ | 7) != 0x17)
                    v78 = v76.__size_ | 7;
                  v79 = v78 + 1;
                  v77 = operator new(v78 + 1);
                  v128.__pn_.__r_.__value_.__l.__size_ = v76.__size_;
                  v128.__pn_.__r_.__value_.__r.__words[2] = v79 | 0x8000000000000000;
                  v128.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v77;
                }
                else
                {
                  *((_BYTE *)&v128.__pn_.__r_.__value_.__s + 23) = v76.__size_;
                  v77 = &v128;
                  if (!v76.__size_)
                  {
LABEL_128:
                    v77[v76.__size_] = 0;
                    v108 = v128;
                    memset(&v105, 0, sizeof(v105));
                    v80 = *(unsigned __int8 *)(v100 + 23);
                    if ((v80 & 0x80u) == 0)
                      v81 = (std::string *)v100;
                    else
                      v81 = *(std::string **)v100;
                    if ((v80 & 0x80u) != 0)
                      v80 = *(_QWORD *)(v100 + 8);
                    sub_23948900C(&v105.__pn_, v81, (std::string *)((char *)v81 + v80));
                    v82 = std::__fs::filesystem::path::__parent_path(&v105);
                    if (v82.__size_ > 0x7FFFFFFFFFFFFFF7)
                      sub_23941A5AC();
                    if (v82.__size_ >= 0x17)
                    {
                      v84 = (v82.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                      if ((v82.__size_ | 7) != 0x17)
                        v84 = v82.__size_ | 7;
                      v85 = v84 + 1;
                      v83 = operator new(v84 + 1);
                      v128.__pn_.__r_.__value_.__l.__size_ = v82.__size_;
                      v128.__pn_.__r_.__value_.__r.__words[2] = v85 | 0x8000000000000000;
                      v128.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v83;
                    }
                    else
                    {
                      *((_BYTE *)&v128.__pn_.__r_.__value_.__s + 23) = v82.__size_;
                      v83 = &v128;
                      if (!v82.__size_)
                      {
LABEL_141:
                        v83[v82.__size_] = 0;
                        v107 = v128.__pn_;
                        if ((v128.__pn_.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                          v86.__data_ = (const std::string_view::value_type *)&v107;
                        else
                          v86.__data_ = (const std::string_view::value_type *)v107.__r_.__value_.__r.__words[0];
                        if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                          v86.__size_ = HIBYTE(v107.__r_.__value_.__r.__words[2]);
                        else
                          v86.__size_ = v107.__r_.__value_.__l.__size_;
                        if (std::__fs::filesystem::path::__compare(&v108, v86))
                        {
                          v87 = 0;
                          if ((SHIBYTE(v107.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                            goto LABEL_149;
LABEL_169:
                          operator delete(v107.__r_.__value_.__l.__data_);
                          if (SHIBYTE(v105.__pn_.__r_.__value_.__r.__words[2]) < 0)
                            goto LABEL_170;
LABEL_150:
                          if ((SHIBYTE(v108.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                            goto LABEL_151;
LABEL_171:
                          operator delete(v108.__pn_.__r_.__value_.__l.__data_);
                          if ((*((_BYTE *)&v109.__r_.__value_.__s + 23) & 0x80) != 0)
                            goto LABEL_156;
LABEL_152:
                          if ((v69 & 0x80000000) == 0)
                          {
LABEL_153:
                            if (!v87)
                              goto LABEL_183;
LABEL_158:
                            v88 = std::__fs::filesystem::path::__filename((const std::__fs::filesystem::path *)&pn);
                            if (v88.__size_ > 0x7FFFFFFFFFFFFFF7)
                              sub_23941A5AC();
                            if (v88.__size_ >= 0x17)
                            {
                              v91 = (v88.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
                              if ((v88.__size_ | 7) != 0x17)
                                v91 = v88.__size_ | 7;
                              v92 = v91 + 1;
                              v89 = operator new(v91 + 1);
                              v128.__pn_.__r_.__value_.__l.__size_ = v88.__size_;
                              v128.__pn_.__r_.__value_.__r.__words[2] = v92 | 0x8000000000000000;
                              v128.__pn_.__r_.__value_.__r.__words[0] = (std::string::size_type)v89;
                            }
                            else
                            {
                              *((_BYTE *)&v128.__pn_.__r_.__value_.__s + 23) = v88.__size_;
                              v89 = &v128;
                              if (!v88.__size_)
                              {
LABEL_177:
                                v89[v88.__size_] = 0;
                                v93 = (void *)v128.__pn_.__r_.__value_.__r.__words[0];
                                LODWORD(v108.__pn_.__r_.__value_.__l.__data_) = v128.__pn_.__r_.__value_.__r.__words[2];
                                *(_DWORD *)((char *)v108.__pn_.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v128.__pn_.__r_.__value_.__r.__words[2] + 3);
                                v94 = SHIBYTE(v128.__pn_.__r_.__value_.__r.__words[2]);
                                if (SHIBYTE(v128.__pn_.__r_.__value_.__r.__words[2]) < 0)
                                {
                                  sub_23941A7F8(&v109, v128.__pn_.__r_.__value_.__l.__data_, v128.__pn_.__r_.__value_.__l.__size_);
                                }
                                else
                                {
                                  *(_OWORD *)&v109.__r_.__value_.__l.__data_ = *(_OWORD *)&v128.__pn_.__r_.__value_.__l.__data_;
                                  LODWORD(v109.__r_.__value_.__r.__words[2]) = v108.__pn_.__r_.__value_.__l.__data_;
                                  *(_DWORD *)((char *)&v109.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v108.__pn_.__r_.__value_.__r.__words + 3);
                                  *((_BYTE *)&v109.__r_.__value_.__s + 23) = *((_BYTE *)&v128.__pn_.__r_.__value_.__s
                                                                             + 23);
                                }
                                if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0)
                                  operator delete(__n.__r_.__value_.__l.__data_);
                                __n = v109;
                                *((_BYTE *)&v109.__r_.__value_.__s + 23) = 0;
                                v109.__r_.__value_.__s.__data_[0] = 0;
                                if ((v94 & 0x80000000) == 0)
                                  goto LABEL_183;
                                operator delete(v93);
                                if ((SHIBYTE(pn.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                  goto LABEL_185;
                                goto LABEL_184;
                              }
                            }
                            memmove(v89, v88.__data_, v88.__size_);
                            goto LABEL_177;
                          }
                        }
                        else
                        {
                          std::__fs::filesystem::__status((const std::__fs::filesystem::path *)&pn, 0);
                          if (v128.__pn_.__r_.__value_.__s.__data_[0])
                            v90 = v128.__pn_.__r_.__value_.__s.__data_[0] == 255;
                          else
                            v90 = 1;
                          v87 = !v90;
                          if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
                            goto LABEL_169;
LABEL_149:
                          if ((SHIBYTE(v105.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                            goto LABEL_150;
LABEL_170:
                          operator delete(v105.__pn_.__r_.__value_.__l.__data_);
                          if (SHIBYTE(v108.__pn_.__r_.__value_.__r.__words[2]) < 0)
                            goto LABEL_171;
LABEL_151:
                          if ((*((_BYTE *)&v109.__r_.__value_.__s + 23) & 0x80) == 0)
                            goto LABEL_152;
LABEL_156:
                          operator delete(v109.__r_.__value_.__l.__data_);
                          if ((v69 & 0x80000000) == 0)
                            goto LABEL_153;
                        }
                        operator delete(v68);
                        if (v87)
                          goto LABEL_158;
LABEL_183:
                        if ((SHIBYTE(pn.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                          goto LABEL_185;
LABEL_184:
                        operator delete(pn.__r_.__value_.__l.__data_);
                        goto LABEL_185;
                      }
                    }
                    memmove(v83, v82.__data_, v82.__size_);
                    goto LABEL_141;
                  }
                }
                memmove(v77, v76.__data_, v76.__size_);
                goto LABEL_128;
              }
LABEL_155:
              v87 = 0;
              if ((v70 & 0x80) != 0)
                goto LABEL_156;
              goto LABEL_152;
            }
          }
          memmove(v64, v63.__data_, v63.__size_);
          goto LABEL_100;
        }
LABEL_189:
        while (1)
        {
          v21 += 2;
          if (v21 == v22)
            break;
          v18 = *v19;
          if (*v19)
            goto LABEL_26;
        }
      }
      v95 = v99[4].u64[1];
      if (v95 >= v99[5].i64[0])
      {
        v96 = sub_23995D4E8(v98, (uint64_t)&__dst);
      }
      else
      {
        sub_23995D718(v99[4].i64[1], (uint64_t)&__dst);
        v96 = v95 + 168;
        v99[4].i64[1] = v95 + 168;
      }
      v99[4].i64[1] = v96;
      operator delete(v101);
      if (v123 < 0)
      {
        operator delete(v122);
        if (((char)v121 & 0x80000000) == 0)
        {
LABEL_195:
          if (((char)v119 & 0x80000000) == 0)
            goto LABEL_196;
          goto LABEL_200;
        }
      }
      else if (((char)v121 & 0x80000000) == 0)
      {
        goto LABEL_195;
      }
      operator delete(v120);
      if (((char)v119 & 0x80000000) == 0)
      {
LABEL_196:
        if ((char)v117 < 0)
          goto LABEL_21;
        goto LABEL_201;
      }
LABEL_200:
      operator delete(v118);
      if ((char)v117 < 0)
      {
LABEL_21:
        operator delete(__p);
        if ((char)v115 < 0)
          goto LABEL_202;
        goto LABEL_22;
      }
LABEL_201:
      if ((char)v115 < 0)
LABEL_202:
        operator delete(v114);
LABEL_22:
      v14 = __val + 1;
      v13 = *a2;
      v15 = __val + 1;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 4) > v14);
  }
LABEL_203:
  if ((char)v127 < 0)
    operator delete(v124);
  return 1;
}

void sub_23995A9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,char a63)
{
  void *v63;
  uint64_t v64;

  operator delete(v63);
  if (*(char *)(v64 - 105) < 0)
    operator delete(*(void **)(v64 - 128));
  _Unwind_Resume(a1);
}

void sub_23995AC58(unint64_t *a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int64x2_t v17;
  char *v18;
  void *__p;
  int64x2_t v20;
  unint64_t v21;
  unint64_t *v22;

  v2 = a1[2];
  v3 = *a1;
  if (0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v2 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x186186186186187)
      sub_2394189F8();
    v5 = a1[1];
    v21 = 0;
    v22 = a1 + 2;
    v6 = 168 * a2;
    v7 = (char *)operator new(168 * a2);
    v8 = &v7[v5 - v3];
    if (v5 == v3)
    {
      v17 = vdupq_n_s64(v3);
      v18 = &v7[v5 - v3];
    }
    else
    {
      v9 = 0;
      do
      {
        v10 = &v8[v9];
        v11 = v5 + v9;
        *((_WORD *)v10 - 84) = *(_WORD *)(v5 + v9 - 168);
        *(v10 - 160) = *(_BYTE *)(v5 + v9 - 160);
        v12 = *(_OWORD *)(v5 + v9 - 152);
        *((_QWORD *)v10 - 17) = *(_QWORD *)(v5 + v9 - 136);
        *(_OWORD *)(v10 - 152) = v12;
        *(_QWORD *)(v11 - 144) = 0;
        *(_QWORD *)(v11 - 136) = 0;
        *(_QWORD *)(v11 - 152) = 0;
        *(v10 - 128) = *(_BYTE *)(v5 + v9 - 128);
        v13 = *(_OWORD *)(v5 + v9 - 120);
        *((_QWORD *)v10 - 13) = *(_QWORD *)(v5 + v9 - 104);
        *(_OWORD *)(v10 - 120) = v13;
        *(_QWORD *)(v11 - 112) = 0;
        *(_QWORD *)(v11 - 104) = 0;
        *(_QWORD *)(v11 - 120) = 0;
        *(v10 - 96) = *(_BYTE *)(v5 + v9 - 96);
        v14 = *(_OWORD *)(v5 + v9 - 88);
        *((_QWORD *)v10 - 9) = *(_QWORD *)(v5 + v9 - 72);
        *(_OWORD *)(v10 - 88) = v14;
        *(_QWORD *)(v11 - 80) = 0;
        *(_QWORD *)(v11 - 72) = 0;
        *(_QWORD *)(v11 - 88) = 0;
        *(v10 - 64) = *(_BYTE *)(v5 + v9 - 64);
        v15 = *(_OWORD *)(v5 + v9 - 56);
        *((_QWORD *)v10 - 5) = *(_QWORD *)(v5 + v9 - 40);
        *(_OWORD *)(v10 - 56) = v15;
        *(_QWORD *)(v11 - 48) = 0;
        *(_QWORD *)(v11 - 40) = 0;
        *(_QWORD *)(v11 - 56) = 0;
        *(v10 - 32) = *(_BYTE *)(v5 + v9 - 32);
        v16 = *(_OWORD *)(v5 + v9 - 24);
        *((_QWORD *)v10 - 1) = *(_QWORD *)(v5 + v9 - 8);
        *(_OWORD *)(v10 - 24) = v16;
        *(_QWORD *)(v11 - 16) = 0;
        *(_QWORD *)(v11 - 8) = 0;
        *(_QWORD *)(v11 - 24) = 0;
        v9 -= 168;
      }
      while (v5 + v9 != v3);
      v17 = *(int64x2_t *)a1;
      v2 = a1[2];
      v18 = &v8[v9];
    }
    *a1 = (unint64_t)v18;
    a1[1] = (unint64_t)v8;
    v20 = v17;
    a1[2] = (unint64_t)&v7[v6];
    v21 = v2;
    __p = (void *)v17.i64[0];
    sub_23995D424((uint64_t)&__p, v17.i64[0]);
    if (__p)
      operator delete(__p);
  }
}

uint64_t sub_23995AE0C(uint64_t a1)
{
  if (*(char *)(a1 + 167) < 0)
  {
    operator delete(*(void **)(a1 + 144));
    if ((*(char *)(a1 + 135) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 103) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 135) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 112));
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_5;
LABEL_10:
    operator delete(*(void **)(a1 + 48));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return a1;
    goto LABEL_11;
  }
LABEL_9:
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0)
    goto LABEL_10;
LABEL_5:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0)
    return a1;
LABEL_11:
  operator delete(*(void **)(a1 + 16));
  return a1;
}

uint64_t sub_23995AEAC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, _DWORD *a5)
{
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  int v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 *v40;
  uint64_t v41;
  __int128 v42;
  int v43;
  char *v44;
  size_t v45;
  size_t v46;
  char *p_dst;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  char *v53;
  char *v54;
  int v55;
  char *v56;
  _DWORD *v57;
  _DWORD *v58;
  _DWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _DWORD *v70;
  char *v71;
  __int128 *v72;
  uint64_t v73;
  __int128 v74;
  int v75;
  int v76;
  char *v77;
  _BYTE *v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _BYTE *v84;
  _DWORD *v85;
  unint64_t v86;
  _DWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD *v90;
  __int128 *v91;
  uint64_t v92;
  __int128 v93;
  int v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  _BYTE *v103;
  _DWORD *v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _OWORD *v109;
  char *v110;
  uint64_t v111;
  __int128 v112;
  int v113;
  uint64_t *v114;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *p_shared_owners;
  unint64_t v118;
  unint64_t v119;
  int *v120;
  int v121;
  char *v122;
  _DWORD *v123;
  _DWORD *v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  char *v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _DWORD *v136;
  char *v137;
  __int128 *v138;
  uint64_t v139;
  __int128 v140;
  int v141;
  int v142;
  char *v143;
  _BYTE *v144;
  char *v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  _BYTE *v150;
  _DWORD *v151;
  unint64_t v152;
  _DWORD *v153;
  uint64_t v154;
  uint64_t v155;
  _OWORD *v156;
  __int128 *v157;
  uint64_t v158;
  __int128 v159;
  int v160;
  int v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  unint64_t v168;
  _BYTE *v169;
  _DWORD *v170;
  unint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  _OWORD *v175;
  char *v176;
  uint64_t v177;
  __int128 v178;
  int v179;
  uint64_t v180;
  unint64_t v181;
  _BYTE *v182;
  _BYTE *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  __int128 *v193;
  uint64_t v194;
  __int128 v195;
  int v196;
  _BYTE *v197;
  _BYTE *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  __int128 *v208;
  uint64_t v209;
  __int128 v210;
  int v211;
  char *v212;
  size_t v213;
  size_t v214;
  uint64_t v215;
  void *p_p;
  uint64_t v217;
  uint64_t v218;
  unsigned int v219;
  unint64_t v220;
  int v221;
  char *v222;
  char *v223;
  uint64_t v224;
  unsigned int v225;
  char *v226;
  uint64_t v227;
  int v228;
  char *v229;
  char *v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  unint64_t v234;
  void *v235;
  _DWORD *v236;
  unint64_t v237;
  char *v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  _OWORD *v242;
  char *v243;
  uint64_t v244;
  __int128 v245;
  uint64_t *v246;
  uint64_t v247;
  std::__shared_weak_count *v248;
  unint64_t *v249;
  unint64_t v250;
  unint64_t v251;
  uint64_t *v252;
  uint64_t v253;
  uint64_t v254;
  unsigned int v255;
  char *v256;
  uint64_t v257;
  int v258;
  char *v259;
  char *v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  unint64_t v264;
  void *v265;
  _DWORD *v266;
  unint64_t v267;
  char *v268;
  int v269;
  uint64_t v270;
  uint64_t v271;
  _OWORD *v272;
  char *v273;
  uint64_t v274;
  __int128 v275;
  char *v276;
  size_t v277;
  size_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  _QWORD *v282;
  unsigned int v283;
  unsigned int v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  unint64_t v288;
  unint64_t v289;
  uint64_t v290;
  unsigned int v291;
  uint64_t v292;
  uint64_t *v293;
  uint64_t v294;
  std::__shared_weak_count *v295;
  unint64_t *v296;
  unint64_t v297;
  unint64_t v298;
  uint64_t *v299;
  std::__shared_weak_count *v300;
  uint64_t v301;
  unint64_t *v302;
  unint64_t v303;
  unint64_t v304;
  uint64_t *v305;
  uint64_t v306;
  std::__shared_weak_count *v307;
  unint64_t *v308;
  unint64_t v309;
  unint64_t v310;
  uint64_t *v311;
  uint64_t v312;
  std::__shared_weak_count *v313;
  unint64_t *v314;
  unint64_t v315;
  unint64_t v316;
  uint64_t *v317;
  uint64_t v318;
  std::__shared_weak_count *v319;
  unint64_t *v320;
  unint64_t v321;
  unint64_t v322;
  uint64_t *v323;
  uint64_t v324;
  std::__shared_weak_count *v325;
  unint64_t *v326;
  unint64_t v327;
  unint64_t v328;
  char *v329;
  size_t v330;
  size_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t **v335;
  unsigned int v336;
  unsigned int v337;
  uint64_t *v338;
  uint64_t v339;
  std::__shared_weak_count *v340;
  unint64_t *v341;
  unint64_t v342;
  unint64_t v343;
  unint64_t v344;
  unint64_t v345;
  unsigned int v346;
  uint64_t v347;
  uint64_t *v348;
  uint64_t v349;
  std::__shared_weak_count *v350;
  unint64_t *v351;
  unint64_t v352;
  unint64_t v353;
  uint64_t *v354;
  uint64_t v355;
  std::__shared_weak_count *v356;
  unint64_t *v357;
  unint64_t v358;
  unint64_t v359;
  uint64_t *v360;
  std::__shared_weak_count *v361;
  uint64_t v362;
  unint64_t *v363;
  unint64_t v364;
  unint64_t v365;
  char *v366;
  size_t v367;
  size_t v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  _QWORD *v372;
  uint64_t v373;
  char *v374;
  size_t v375;
  size_t v376;
  void *v377;
  uint64_t v378;
  uint64_t v379;
  unsigned int v380;
  uint64_t *v381;
  uint64_t v382;
  std::__shared_weak_count *v383;
  unint64_t *v384;
  unint64_t v385;
  unint64_t v386;
  BOOL v387;
  uint64_t v388;
  uint64_t *v389;
  uint64_t v390;
  std::__shared_weak_count *v391;
  unint64_t *v392;
  unint64_t v393;
  unint64_t v394;
  unint64_t v395;
  uint64_t v396;
  unint64_t v397;
  uint64_t v398;
  void *v399;
  uint64_t v401;
  uint64_t v402;
  void *v403;
  void *v404;
  uint64_t v405;
  unsigned int v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t *v409;
  uint64_t v410;
  std::__shared_weak_count *v411;
  unint64_t *v412;
  unint64_t v413;
  unint64_t v414;
  uint64_t v415;
  char *v416;
  uint64_t *v417;
  unint64_t v418;
  char *v419;
  uint64_t v420;
  uint64_t v421;
  unint64_t v422;
  uint64_t v423;
  unint64_t v424;
  _BYTE *v425;
  unsigned int *v426;
  unint64_t v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  _OWORD *v431;
  char *v432;
  uint64_t v433;
  __int128 v434;
  unsigned int v435;
  uint64_t v436;
  uint64_t v437;
  _DWORD *v438;
  uint64_t v439;
  int v440;
  uint64_t v441;
  unint64_t v442;
  void *__p;
  size_t v445;
  unint64_t v446;
  float32x4_t v447;
  uint64_t v448;
  int v449;
  std::string v450;
  uint64_t v451;
  int v452;
  void *v453[2];
  char v454;
  void *v455[3];
  uint64_t v456;
  __int32 v457;
  uint64_t v458;
  int v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  uint64_t v470;
  char *__dst;
  char *v472;
  unint64_t v473;

  v450.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v450.__r_.__value_.__r.__words[1] = xmmword_239EC7360;
  strcpy(v450.__r_.__value_.__l.__data_, "CorePhotogrammetry Bake");
  v451 = 0;
  v452 = 0;
  v454 = 13;
  strcpy((char *)v453, "ObjectCapture");
  memset(v455, 0, sizeof(v455));
  v470 = 0;
  v469 = 0u;
  v468 = 0u;
  v467 = 0u;
  v466 = 0u;
  v465 = 0u;
  v464 = 0u;
  v463 = 0u;
  v462 = 0u;
  v461 = 0u;
  v460 = 0u;
  std::string::operator=(&v450, (const std::string *)(a4 + 72));
  v451 = *(_QWORD *)(a4 + 96);
  v452 = *(_DWORD *)(a4 + 104);
  sub_239959E14(a1, a3, a4 + 16, (int64x2_t *)&v450);
  v436 = a1;
  v9 = a2;
  sub_23992E5C0(a2, &v447);
  v456 = v447.i64[0];
  v457 = v447.i32[2];
  v458 = v448;
  v459 = v449;
  if (!*a5)
  {
    v10 = (uint64_t)(*(_QWORD *)(a2 + 160) - *(_QWORD *)(a2 + 152)) >> 2;
    LODWORD(__dst) = 3;
    v11 = (uint64_t)(*((_QWORD *)&v460 + 1) - v460) >> 2;
    if (v10 <= v11)
    {
      if (v10 < v11)
        *((_QWORD *)&v460 + 1) = v460 + 4 * v10;
    }
    else
    {
      sub_2394DE27C((uint64_t)&v460, v10 - v11, (const float *)&__dst);
      v10 = (uint64_t)(*(_QWORD *)(a2 + 160) - *(_QWORD *)(a2 + 152)) >> 2;
    }
    v12 = 3 * v10;
    v13 = (_BYTE *)*((_QWORD *)&v461 + 1);
    if (3 * v10 <= (uint64_t)(*((_QWORD *)&v462 + 1) - *((_QWORD *)&v461 + 1)) >> 2)
    {
LABEL_20:
      v29 = (_BYTE *)*((_QWORD *)&v467 + 1);
      if (v12 <= (uint64_t)(*((_QWORD *)&v468 + 1) - *((_QWORD *)&v467 + 1)) >> 2)
        goto LABEL_32;
      if (!(v12 >> 62))
      {
        v30 = (_BYTE *)v468;
        v31 = (char *)operator new(12 * v10);
        v32 = v30 - v29;
        v33 = &v31[(v30 - v29) & 0xFFFFFFFFFFFFFFFCLL];
        v34 = v33;
        if (v30 == v29)
          goto LABEL_30;
        if ((unint64_t)(v32 - 4) >= 0x2C)
        {
          v34 = &v31[(v30 - v29) & 0xFFFFFFFFFFFFFFFCLL];
          if (v30 - v31 - (v32 & 0xFFFFFFFFFFFFFFFCLL) >= 0x20)
          {
            v35 = v32 >> 2;
            v36 = ((unint64_t)(v32 - 4) >> 2) + 1;
            v37 = 4 * (v36 & 0x7FFFFFFFFFFFFFF8);
            v38 = &v30[-v37];
            v34 = &v33[-v37];
            v39 = &v31[4 * v35 - 16];
            v40 = (__int128 *)(v30 - 16);
            v41 = v36 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v42 = *v40;
              *((_OWORD *)v39 - 1) = *(v40 - 1);
              *(_OWORD *)v39 = v42;
              v39 -= 32;
              v40 -= 2;
              v41 -= 8;
            }
            while (v41);
            v30 = v38;
            if (v36 == (v36 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_30:
              *((_QWORD *)&v467 + 1) = v34;
              *(_QWORD *)&v468 = v33;
              *((_QWORD *)&v468 + 1) = &v31[4 * v12];
              if (v29)
                operator delete(v29);
LABEL_32:
              v438 = a5;
              v44 = off_256934418[0];
              v45 = strlen(off_256934418[0]);
              if (v45 > 0x7FFFFFFFFFFFFFF7)
                sub_23941A5AC();
              v46 = v45;
              if (v45 >= 0x17)
              {
                v48 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v45 | 7) != 0x17)
                  v48 = v45 | 7;
                v49 = v48 + 1;
                p_dst = (char *)operator new(v48 + 1);
                v472 = (char *)v46;
                v473 = v49 | 0x8000000000000000;
                __dst = p_dst;
              }
              else
              {
                HIBYTE(v473) = v45;
                p_dst = (char *)&__dst;
                if (!v45)
                  goto LABEL_40;
              }
              memmove(p_dst, v44, v46);
LABEL_40:
              p_dst[v46] = 0;
              LODWORD(v445) = 0;
              __p = 0;
              v50 = sub_2394E5DE4((uint64_t **)(a2 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
              if (SHIBYTE(v473) < 0)
              {
                operator delete(__dst);
                if (*(_QWORD *)(a2 + 160) == *(_QWORD *)(a2 + 152))
                  goto LABEL_188;
              }
              else if (*(_QWORD *)(a2 + 160) == *(_QWORD *)(a2 + 152))
              {
LABEL_188:
                if (*v438 != 1)
                  goto LABEL_303;
                goto LABEL_189;
              }
              v51 = 0;
              v52 = 0;
              v439 = v50;
              while (1)
              {
                v53 = (char *)operator new(0xCuLL);
                v472 = v53 + 12;
                v473 = (unint64_t)(v53 + 12);
                *(_QWORD *)v53 = -1;
                *((_DWORD *)v53 + 2) = -1;
                __dst = v53;
                LODWORD(__p) = v52;
                sub_23996362C(v9, (unsigned int *)&__p, (uint64_t)&__dst);
                v54 = __dst;
                v55 = *(_DWORD *)__dst;
                v56 = (char *)*((_QWORD *)&v462 + 1);
                v57 = (_DWORD *)v462;
                if ((unint64_t)v462 < *((_QWORD *)&v462 + 1))
                {
                  *(_DWORD *)v462 = v55;
                  v58 = v57 + 1;
                  goto LABEL_67;
                }
                v59 = (_DWORD *)*((_QWORD *)&v461 + 1);
                v60 = v462 - *((_QWORD *)&v461 + 1);
                v61 = (uint64_t)(v462 - *((_QWORD *)&v461 + 1)) >> 2;
                v62 = v61 + 1;
                if ((unint64_t)(v61 + 1) >> 62)
                  goto LABEL_498;
                v63 = *((_QWORD *)&v462 + 1) - *((_QWORD *)&v461 + 1);
                if ((uint64_t)(*((_QWORD *)&v462 + 1) - *((_QWORD *)&v461 + 1)) >> 1 > v62)
                  v62 = v63 >> 1;
                v64 = (unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v62;
                if (v64)
                  break;
                v65 = 0;
                v66 = (char *)(4 * v61);
                *(_DWORD *)(4 * v61) = v55;
                v58 = (_DWORD *)(4 * v61 + 4);
                if (v57 != v59)
                  goto LABEL_59;
LABEL_65:
                v56 = &v65[4 * v64];
                *((_QWORD *)&v461 + 1) = v66;
                *(_QWORD *)&v462 = v58;
                *((_QWORD *)&v462 + 1) = v56;
                if (v59)
                {
                  operator delete(v59);
                  v54 = __dst;
                  v56 = (char *)*((_QWORD *)&v462 + 1);
                }
LABEL_67:
                *(_QWORD *)&v462 = v58;
                v76 = *((_DWORD *)v54 + 1);
                if (v58 < (_DWORD *)v56)
                {
                  *v58 = v76;
                  v77 = (char *)(v58 + 1);
                  goto LABEL_90;
                }
                v78 = (_BYTE *)*((_QWORD *)&v461 + 1);
                v79 = (char *)v58 - *((_QWORD *)&v461 + 1);
                v80 = ((uint64_t)v58 - *((_QWORD *)&v461 + 1)) >> 2;
                v81 = v80 + 1;
                if ((unint64_t)(v80 + 1) >> 62)
                  goto LABEL_498;
                v82 = (uint64_t)&v56[-*((_QWORD *)&v461 + 1)];
                if (v82 >> 1 > v81)
                  v81 = v82 >> 1;
                if ((unint64_t)v82 >= 0x7FFFFFFFFFFFFFFCLL)
                  v83 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v83 = v81;
                if (v83)
                {
                  if (v83 >> 62)
                    goto LABEL_500;
                  v84 = operator new(4 * v83);
                  v85 = &v84[4 * v80];
                  *v85 = v76;
                  v77 = (char *)(v85 + 1);
                  if (v58 == (_DWORD *)v78)
                    goto LABEL_88;
                }
                else
                {
                  v84 = 0;
                  v85 = (_DWORD *)(4 * v80);
                  *(_DWORD *)(4 * v80) = v76;
                  v77 = (char *)(4 * v80 + 4);
                  if (v58 == (_DWORD *)v78)
                    goto LABEL_88;
                }
                v86 = (char *)(v58 - 1) - v78;
                if (v86 < 0x2C)
                {
                  v87 = v58;
                  goto LABEL_87;
                }
                if ((unint64_t)((char *)v58 - v84 - (_QWORD)v79) < 0x20)
                {
                  v87 = v58;
                  do
                  {
LABEL_87:
                    v94 = *--v87;
                    *--v85 = v94;
                  }
                  while (v87 != (_DWORD *)v78);
                  goto LABEL_88;
                }
                v88 = (v86 >> 2) + 1;
                v89 = 4 * (v88 & 0x7FFFFFFFFFFFFFF8);
                v87 = &v58[v89 / 0xFFFFFFFFFFFFFFFCLL];
                v85 = (_DWORD *)((char *)v85 - v89);
                v90 = &v84[4 * v80 - 16];
                v91 = (__int128 *)(v58 - 4);
                v92 = v88 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v93 = *v91;
                  *(v90 - 1) = *(v91 - 1);
                  *v90 = v93;
                  v90 -= 2;
                  v91 -= 2;
                  v92 -= 8;
                }
                while (v92);
                if (v88 != (v88 & 0x7FFFFFFFFFFFFFF8))
                  goto LABEL_87;
LABEL_88:
                v56 = &v84[4 * v83];
                *((_QWORD *)&v461 + 1) = v85;
                *(_QWORD *)&v462 = v77;
                *((_QWORD *)&v462 + 1) = v56;
                if (v78)
                {
                  operator delete(v78);
                  v54 = __dst;
                  v56 = (char *)*((_QWORD *)&v462 + 1);
                }
LABEL_90:
                *(_QWORD *)&v462 = v77;
                v95 = *((_DWORD *)v54 + 2);
                if (v77 < v56)
                {
                  *(_DWORD *)v77 = v95;
                  v96 = (uint64_t)(v77 + 4);
                  goto LABEL_113;
                }
                v97 = (char *)*((_QWORD *)&v461 + 1);
                v98 = &v77[-*((_QWORD *)&v461 + 1)];
                v99 = (uint64_t)&v77[-*((_QWORD *)&v461 + 1)] >> 2;
                v100 = v99 + 1;
                if ((unint64_t)(v99 + 1) >> 62)
LABEL_498:
                  sub_2394189F8();
                v101 = (uint64_t)&v56[-*((_QWORD *)&v461 + 1)];
                if (v101 >> 1 > v100)
                  v100 = v101 >> 1;
                if ((unint64_t)v101 >= 0x7FFFFFFFFFFFFFFCLL)
                  v102 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v102 = v100;
                if (v102)
                {
                  if (v102 >> 62)
LABEL_500:
                    sub_239418A80();
                  v103 = operator new(4 * v102);
                  v104 = &v103[4 * v99];
                  *v104 = v95;
                  v96 = (uint64_t)(v104 + 1);
                  if (v77 == v97)
                    goto LABEL_111;
                }
                else
                {
                  v103 = 0;
                  v104 = (_DWORD *)(4 * v99);
                  *(_DWORD *)(4 * v99) = v95;
                  v96 = 4 * v99 + 4;
                  if (v77 == v97)
                    goto LABEL_111;
                }
                v105 = v77 - 4 - v97;
                if (v105 < 0x2C)
                {
                  v106 = v77;
                  goto LABEL_110;
                }
                if ((unint64_t)(v77 - v103 - (_QWORD)v98) < 0x20)
                {
                  v106 = v77;
                  do
                  {
LABEL_110:
                    v113 = *((_DWORD *)v106 - 1);
                    v106 -= 4;
                    *--v104 = v113;
                  }
                  while (v106 != v97);
                  goto LABEL_111;
                }
                v107 = (v105 >> 2) + 1;
                v108 = 4 * (v107 & 0x7FFFFFFFFFFFFFF8);
                v106 = &v77[-v108];
                v104 = (_DWORD *)((char *)v104 - v108);
                v109 = &v103[4 * v99 - 16];
                v110 = v77 - 16;
                v111 = v107 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v112 = *(_OWORD *)v110;
                  *(v109 - 1) = *((_OWORD *)v110 - 1);
                  *v109 = v112;
                  v109 -= 2;
                  v110 -= 32;
                  v111 -= 8;
                }
                while (v111);
                if (v107 != (v107 & 0x7FFFFFFFFFFFFFF8))
                  goto LABEL_110;
LABEL_111:
                *((_QWORD *)&v461 + 1) = v104;
                *(_QWORD *)&v462 = v96;
                *((_QWORD *)&v462 + 1) = &v103[4 * v102];
                if (v97)
                  operator delete(v97);
LABEL_113:
                *(_QWORD *)&v462 = v96;
                v114 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v439);
                v115 = *v114;
                v116 = (std::__shared_weak_count *)v114[1];
                if (v116)
                {
                  p_shared_owners = (unint64_t *)&v116->__shared_owners_;
                  do
                    v118 = __ldxr(p_shared_owners);
                  while (__stxr(v118 + 1, p_shared_owners));
                  do
                    v119 = __ldaxr(p_shared_owners);
                  while (__stlxr(v119 - 1, p_shared_owners));
                  if (!v119)
                  {
                    ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
                    std::__shared_weak_count::__release_weak(v116);
                  }
                }
                v120 = (int *)(*(_QWORD *)(v115 + 40) + 12 * v51);
                v121 = *v120;
                v122 = (char *)*((_QWORD *)&v468 + 1);
                v123 = (_DWORD *)v468;
                if ((unint64_t)v468 < *((_QWORD *)&v468 + 1))
                {
                  *(_DWORD *)v468 = v121;
                  v124 = v123 + 1;
                  goto LABEL_140;
                }
                v125 = (_BYTE *)*((_QWORD *)&v467 + 1);
                v126 = v468 - *((_QWORD *)&v467 + 1);
                v127 = (uint64_t)(v468 - *((_QWORD *)&v467 + 1)) >> 2;
                v128 = v127 + 1;
                if ((unint64_t)(v127 + 1) >> 62)
                  goto LABEL_499;
                v129 = *((_QWORD *)&v468 + 1) - *((_QWORD *)&v467 + 1);
                if ((uint64_t)(*((_QWORD *)&v468 + 1) - *((_QWORD *)&v467 + 1)) >> 1 > v128)
                  v128 = v129 >> 1;
                if ((unint64_t)v129 >= 0x7FFFFFFFFFFFFFFCLL)
                  v130 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v130 = v128;
                if (v130)
                {
                  if (v130 >> 62)
                    goto LABEL_501;
                  v131 = (char *)operator new(4 * v130);
                  v132 = &v131[4 * v127];
                  *(_DWORD *)v132 = v121;
                  v124 = v132 + 4;
                  if (v123 == (_DWORD *)v125)
                    goto LABEL_138;
LABEL_132:
                  v133 = (char *)(v123 - 1) - v125;
                  if (v133 < 0x2C)
                    goto LABEL_514;
                  if ((unint64_t)((char *)v123 - &v131[v126]) < 0x20)
                    goto LABEL_514;
                  v134 = (v133 >> 2) + 1;
                  v135 = 4 * (v134 & 0x7FFFFFFFFFFFFFF8);
                  v136 = &v123[v135 / 0xFFFFFFFFFFFFFFFCLL];
                  v132 -= v135;
                  v137 = &v131[4 * v127 - 16];
                  v138 = (__int128 *)(v123 - 4);
                  v139 = v134 & 0x7FFFFFFFFFFFFFF8;
                  do
                  {
                    v140 = *v138;
                    *((_OWORD *)v137 - 1) = *(v138 - 1);
                    *(_OWORD *)v137 = v140;
                    v137 -= 32;
                    v138 -= 2;
                    v139 -= 8;
                  }
                  while (v139);
                  v123 = v136;
                  if (v134 != (v134 & 0x7FFFFFFFFFFFFFF8))
                  {
LABEL_514:
                    do
                    {
                      v141 = *--v123;
                      *((_DWORD *)v132 - 1) = v141;
                      v132 -= 4;
                    }
                    while (v123 != (_DWORD *)v125);
                  }
                  goto LABEL_138;
                }
                v131 = 0;
                v132 = (char *)(4 * v127);
                *(_DWORD *)(4 * v127) = v121;
                v124 = (_DWORD *)(4 * v127 + 4);
                if (v123 != (_DWORD *)v125)
                  goto LABEL_132;
LABEL_138:
                v122 = &v131[4 * v130];
                *((_QWORD *)&v467 + 1) = v132;
                *(_QWORD *)&v468 = v124;
                *((_QWORD *)&v468 + 1) = v122;
                if (v125)
                {
                  operator delete(v125);
                  v122 = (char *)*((_QWORD *)&v468 + 1);
                }
LABEL_140:
                *(_QWORD *)&v468 = v124;
                v142 = v120[1];
                if (v124 < (_DWORD *)v122)
                {
                  *v124 = v142;
                  v143 = (char *)(v124 + 1);
                  goto LABEL_163;
                }
                v144 = (_BYTE *)*((_QWORD *)&v467 + 1);
                v145 = (char *)v124 - *((_QWORD *)&v467 + 1);
                v146 = ((uint64_t)v124 - *((_QWORD *)&v467 + 1)) >> 2;
                v147 = v146 + 1;
                if ((unint64_t)(v146 + 1) >> 62)
                  goto LABEL_499;
                v148 = (uint64_t)&v122[-*((_QWORD *)&v467 + 1)];
                if (v148 >> 1 > v147)
                  v147 = v148 >> 1;
                if ((unint64_t)v148 >= 0x7FFFFFFFFFFFFFFCLL)
                  v149 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v149 = v147;
                if (v149)
                {
                  if (v149 >> 62)
                    goto LABEL_501;
                  v150 = operator new(4 * v149);
                  v151 = &v150[4 * v146];
                  *v151 = v142;
                  v143 = (char *)(v151 + 1);
                  if (v124 == (_DWORD *)v144)
                    goto LABEL_161;
                }
                else
                {
                  v150 = 0;
                  v151 = (_DWORD *)(4 * v146);
                  *(_DWORD *)(4 * v146) = v142;
                  v143 = (char *)(4 * v146 + 4);
                  if (v124 == (_DWORD *)v144)
                    goto LABEL_161;
                }
                v152 = (char *)(v124 - 1) - v144;
                if (v152 < 0x2C)
                {
                  v153 = v124;
                  goto LABEL_160;
                }
                if ((unint64_t)((char *)v124 - v150 - (_QWORD)v145) < 0x20)
                {
                  v153 = v124;
                  do
                  {
LABEL_160:
                    v160 = *--v153;
                    *--v151 = v160;
                  }
                  while (v153 != (_DWORD *)v144);
                  goto LABEL_161;
                }
                v154 = (v152 >> 2) + 1;
                v155 = 4 * (v154 & 0x7FFFFFFFFFFFFFF8);
                v153 = &v124[v155 / 0xFFFFFFFFFFFFFFFCLL];
                v151 = (_DWORD *)((char *)v151 - v155);
                v156 = &v150[4 * v146 - 16];
                v157 = (__int128 *)(v124 - 4);
                v158 = v154 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v159 = *v157;
                  *(v156 - 1) = *(v157 - 1);
                  *v156 = v159;
                  v156 -= 2;
                  v157 -= 2;
                  v158 -= 8;
                }
                while (v158);
                if (v154 != (v154 & 0x7FFFFFFFFFFFFFF8))
                  goto LABEL_160;
LABEL_161:
                v122 = &v150[4 * v149];
                *((_QWORD *)&v467 + 1) = v151;
                *(_QWORD *)&v468 = v143;
                *((_QWORD *)&v468 + 1) = v122;
                if (v144)
                {
                  operator delete(v144);
                  v122 = (char *)*((_QWORD *)&v468 + 1);
                }
LABEL_163:
                *(_QWORD *)&v468 = v143;
                v161 = v120[2];
                if (v143 >= v122)
                {
                  v163 = (char *)*((_QWORD *)&v467 + 1);
                  v164 = &v143[-*((_QWORD *)&v467 + 1)];
                  v165 = (uint64_t)&v143[-*((_QWORD *)&v467 + 1)] >> 2;
                  v166 = v165 + 1;
                  if ((unint64_t)(v165 + 1) >> 62)
LABEL_499:
                    sub_2394189F8();
                  v167 = (uint64_t)&v122[-*((_QWORD *)&v467 + 1)];
                  if (v167 >> 1 > v166)
                    v166 = v167 >> 1;
                  if ((unint64_t)v167 >= 0x7FFFFFFFFFFFFFFCLL)
                    v168 = 0x3FFFFFFFFFFFFFFFLL;
                  else
                    v168 = v166;
                  if (v168)
                  {
                    if (v168 >> 62)
LABEL_501:
                      sub_239418A80();
                    v169 = operator new(4 * v168);
                    v170 = &v169[4 * v165];
                    *v170 = v161;
                    v162 = (uint64_t)(v170 + 1);
                    if (v143 != v163)
                    {
LABEL_174:
                      v171 = v143 - 4 - v163;
                      v9 = a2;
                      if (v171 < 0x2C)
                      {
                        v172 = v143;
                        goto LABEL_183;
                      }
                      if ((unint64_t)(v143 - v169 - (_QWORD)v164) < 0x20)
                      {
                        v172 = v143;
                        goto LABEL_183;
                      }
                      v173 = (v171 >> 2) + 1;
                      v174 = 4 * (v173 & 0x7FFFFFFFFFFFFFF8);
                      v172 = &v143[-v174];
                      v170 = (_DWORD *)((char *)v170 - v174);
                      v175 = &v169[4 * v165 - 16];
                      v176 = v143 - 16;
                      v177 = v173 & 0x7FFFFFFFFFFFFFF8;
                      do
                      {
                        v178 = *(_OWORD *)v176;
                        *(v175 - 1) = *((_OWORD *)v176 - 1);
                        *v175 = v178;
                        v175 -= 2;
                        v176 -= 32;
                        v177 -= 8;
                      }
                      while (v177);
                      if (v173 != (v173 & 0x7FFFFFFFFFFFFFF8))
                      {
                        do
                        {
LABEL_183:
                          v179 = *((_DWORD *)v172 - 1);
                          v172 -= 4;
                          *--v170 = v179;
                        }
                        while (v172 != v163);
                      }
LABEL_184:
                      *((_QWORD *)&v467 + 1) = v170;
                      *(_QWORD *)&v468 = v162;
                      *((_QWORD *)&v468 + 1) = &v169[4 * v168];
                      if (v163)
                        operator delete(v163);
                      goto LABEL_186;
                    }
                  }
                  else
                  {
                    v169 = 0;
                    v170 = (_DWORD *)(4 * v165);
                    *(_DWORD *)(4 * v165) = v161;
                    v162 = 4 * v165 + 4;
                    if (v143 != v163)
                      goto LABEL_174;
                  }
                  v9 = a2;
                  goto LABEL_184;
                }
                *(_DWORD *)v143 = v161;
                v162 = (uint64_t)(v143 + 4);
                v9 = a2;
LABEL_186:
                *(_QWORD *)&v468 = v162;
                if (__dst)
                {
                  v472 = __dst;
                  operator delete(__dst);
                }
                v51 = ++v52;
                if (v52 >= (unint64_t)((uint64_t)(*(_QWORD *)(v9 + 160) - *(_QWORD *)(v9 + 152)) >> 2))
                  goto LABEL_188;
              }
              if (v64 >> 62)
                goto LABEL_500;
              v65 = (char *)operator new(4 * v64);
              v66 = &v65[4 * v61];
              *(_DWORD *)v66 = v55;
              v58 = v66 + 4;
              if (v57 == v59)
                goto LABEL_65;
LABEL_59:
              v67 = (char *)(v57 - 1) - (char *)v59;
              if (v67 < 0x2C)
                goto LABEL_515;
              if ((unint64_t)((char *)v57 - &v65[v60]) < 0x20)
                goto LABEL_515;
              v68 = (v67 >> 2) + 1;
              v69 = 4 * (v68 & 0x7FFFFFFFFFFFFFF8);
              v70 = &v57[v69 / 0xFFFFFFFFFFFFFFFCLL];
              v66 -= v69;
              v71 = &v65[4 * v61 - 16];
              v72 = (__int128 *)(v57 - 4);
              v73 = v68 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                v74 = *v72;
                *((_OWORD *)v71 - 1) = *(v72 - 1);
                *(_OWORD *)v71 = v74;
                v71 -= 32;
                v72 -= 2;
                v73 -= 8;
              }
              while (v73);
              v57 = v70;
              if (v68 != (v68 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_515:
                do
                {
                  v75 = *--v57;
                  *((_DWORD *)v66 - 1) = v75;
                  v66 -= 4;
                }
                while (v57 != v59);
              }
              goto LABEL_65;
            }
          }
        }
        else
        {
          v34 = &v31[(v30 - v29) & 0xFFFFFFFFFFFFFFFCLL];
        }
        do
        {
          v43 = *((_DWORD *)v30 - 1);
          v30 -= 4;
          *((_DWORD *)v34 - 1) = v43;
          v34 -= 4;
        }
        while (v30 != v29);
        goto LABEL_30;
      }
LABEL_511:
      sub_2394189F8();
    }
    if (v12 >> 62)
      goto LABEL_511;
    v14 = (_BYTE *)v462;
    v15 = (char *)operator new(12 * v10);
    v16 = v14 - v13;
    v17 = &v15[(v14 - v13) & 0xFFFFFFFFFFFFFFFCLL];
    v18 = v17;
    if (v14 != v13)
    {
      if ((unint64_t)(v16 - 4) < 0x2C)
      {
        v18 = &v15[(v14 - v13) & 0xFFFFFFFFFFFFFFFCLL];
        do
        {
LABEL_17:
          v27 = *((_DWORD *)v14 - 1);
          v14 -= 4;
          *((_DWORD *)v18 - 1) = v27;
          v18 -= 4;
        }
        while (v14 != v13);
        goto LABEL_18;
      }
      v18 = &v15[(v14 - v13) & 0xFFFFFFFFFFFFFFFCLL];
      if ((unint64_t)(&v14[-(v16 & 0xFFFFFFFFFFFFFFFCLL)] - v15) < 0x20)
        goto LABEL_17;
      v19 = v16 >> 2;
      v20 = ((unint64_t)(v16 - 4) >> 2) + 1;
      v21 = 4 * (v20 & 0x7FFFFFFFFFFFFFF8);
      v22 = &v14[-v21];
      v18 = &v17[-v21];
      v23 = &v15[4 * v19 - 16];
      v24 = (__int128 *)(v14 - 16);
      v25 = v20 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v26 = *v24;
        *((_OWORD *)v23 - 1) = *(v24 - 1);
        *(_OWORD *)v23 = v26;
        v23 -= 32;
        v24 -= 2;
        v25 -= 8;
      }
      while (v25);
      v14 = v22;
      if (v20 != (v20 & 0x7FFFFFFFFFFFFFF8))
        goto LABEL_17;
    }
LABEL_18:
    *((_QWORD *)&v461 + 1) = v18;
    *(_QWORD *)&v462 = v17;
    *((_QWORD *)&v462 + 1) = &v15[12 * v10];
    if (v13)
    {
      operator delete(v13);
      v28 = *(_QWORD *)(a2 + 160) - *(_QWORD *)(a2 + 152);
      v10 = v28 >> 2;
      v12 = (v28 >> 2) + (v28 >> 1);
    }
    goto LABEL_20;
  }
  if (*a5 != 1)
    goto LABEL_303;
LABEL_189:
  v180 = *(_QWORD *)(v9 + 160) - *(_QWORD *)(v9 + 152);
  v181 = (uint64_t)(*((_QWORD *)&v460 + 1) - v460) >> 2;
  if (v180 >> 2 <= v181)
  {
    if (v180 >> 2 < v181)
      *((_QWORD *)&v460 + 1) = v460 + 4 * (v180 >> 2);
  }
  else
  {
    sub_23942CB44((uint64_t)&v460, (v180 >> 2) - v181);
    v180 = *(_QWORD *)(a2 + 160) - *(_QWORD *)(a2 + 152);
  }
  v182 = (_BYTE *)*((_QWORD *)&v461 + 1);
  if (v180 > (unint64_t)((uint64_t)(*((_QWORD *)&v462 + 1) - *((_QWORD *)&v461 + 1)) >> 2))
  {
    if ((unint64_t)v180 >> 62)
      goto LABEL_510;
    v183 = (_BYTE *)v462;
    v184 = (char *)operator new(4 * v180);
    v185 = v183 - v182;
    v186 = &v184[(v183 - v182) & 0xFFFFFFFFFFFFFFFCLL];
    v187 = v186;
    if (v183 == v182)
      goto LABEL_203;
    if ((unint64_t)(v185 - 4) >= 0x2C)
    {
      v187 = &v184[(v183 - v182) & 0xFFFFFFFFFFFFFFFCLL];
      if ((unint64_t)(&v183[-(v185 & 0xFFFFFFFFFFFFFFFCLL)] - v184) >= 0x20)
      {
        v188 = v185 >> 2;
        v189 = ((unint64_t)(v185 - 4) >> 2) + 1;
        v190 = 4 * (v189 & 0x7FFFFFFFFFFFFFF8);
        v191 = &v183[-v190];
        v187 = &v186[-v190];
        v192 = &v184[4 * v188 - 16];
        v193 = (__int128 *)(v183 - 16);
        v194 = v189 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v195 = *v193;
          *((_OWORD *)v192 - 1) = *(v193 - 1);
          *(_OWORD *)v192 = v195;
          v192 -= 32;
          v193 -= 2;
          v194 -= 8;
        }
        while (v194);
        v183 = v191;
        if (v189 == (v189 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_203:
          *((_QWORD *)&v461 + 1) = v187;
          *(_QWORD *)&v462 = v186;
          *((_QWORD *)&v462 + 1) = &v184[4 * v180];
          if (v182)
          {
            operator delete(v182);
            v180 = *(_QWORD *)(a2 + 160) - *(_QWORD *)(a2 + 152);
          }
          goto LABEL_205;
        }
      }
    }
    else
    {
      v187 = &v184[(v183 - v182) & 0xFFFFFFFFFFFFFFFCLL];
    }
    do
    {
      v196 = *((_DWORD *)v183 - 1);
      v183 -= 4;
      *((_DWORD *)v187 - 1) = v196;
      v187 -= 4;
    }
    while (v183 != v182);
    goto LABEL_203;
  }
LABEL_205:
  v197 = (_BYTE *)*((_QWORD *)&v467 + 1);
  if (v180 <= (unint64_t)((uint64_t)(*((_QWORD *)&v468 + 1) - *((_QWORD *)&v467 + 1)) >> 2))
    goto LABEL_217;
  if ((unint64_t)v180 >> 62)
LABEL_510:
    sub_2394189F8();
  v198 = (_BYTE *)v468;
  v199 = (char *)operator new(4 * v180);
  v200 = v198 - v197;
  v201 = &v199[(v198 - v197) & 0xFFFFFFFFFFFFFFFCLL];
  v202 = v201;
  if (v198 == v197)
    goto LABEL_215;
  if ((unint64_t)(v200 - 4) < 0x2C)
  {
    v202 = &v199[(v198 - v197) & 0xFFFFFFFFFFFFFFFCLL];
    do
    {
LABEL_214:
      v211 = *((_DWORD *)v198 - 1);
      v198 -= 4;
      *((_DWORD *)v202 - 1) = v211;
      v202 -= 4;
    }
    while (v198 != v197);
    goto LABEL_215;
  }
  v202 = &v199[(v198 - v197) & 0xFFFFFFFFFFFFFFFCLL];
  if ((unint64_t)(v198 - &v199[v200 & 0xFFFFFFFFFFFFFFFCLL]) < 0x20)
    goto LABEL_214;
  v203 = v200 >> 2;
  v204 = ((unint64_t)(v200 - 4) >> 2) + 1;
  v205 = 4 * (v204 & 0x7FFFFFFFFFFFFFF8);
  v206 = &v198[-v205];
  v202 = &v201[-v205];
  v207 = &v199[4 * v203 - 16];
  v208 = (__int128 *)(v198 - 16);
  v209 = v204 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    v210 = *v208;
    *((_OWORD *)v207 - 1) = *(v208 - 1);
    *(_OWORD *)v207 = v210;
    v207 -= 32;
    v208 -= 2;
    v209 -= 8;
  }
  while (v209);
  v198 = v206;
  if (v204 != (v204 & 0x7FFFFFFFFFFFFFF8))
    goto LABEL_214;
LABEL_215:
  *((_QWORD *)&v467 + 1) = v202;
  *(_QWORD *)&v468 = v201;
  *((_QWORD *)&v468 + 1) = &v199[4 * v180];
  if (v197)
    operator delete(v197);
LABEL_217:
  v212 = off_256934418[0];
  v213 = strlen(off_256934418[0]);
  if (v213 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v214 = v213;
  v215 = a2;
  if (v213 >= 0x17)
  {
    v217 = (v213 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v213 | 7) != 0x17)
      v217 = v213 | 7;
    v218 = v217 + 1;
    p_p = operator new(v217 + 1);
    v445 = v214;
    v446 = v218 | 0x8000000000000000;
    __p = p_p;
    goto LABEL_224;
  }
  HIBYTE(v446) = v213;
  p_p = &__p;
  if (v213)
LABEL_224:
    memmove(p_p, v212, v214);
  *((_BYTE *)p_p + v214) = 0;
  __dst = 0;
  v472 = 0;
  v473 = 0;
  v219 = sub_23993A364((uint64_t **)(a2 + 56), (uint64_t)&__dst, (unsigned __int8 *)&__p);
  if (__dst)
  {
    v472 = __dst;
    operator delete(__dst);
  }
  if (SHIBYTE(v446) < 0)
  {
    operator delete(__p);
    if (*(_QWORD *)(a2 + 160) == *(_QWORD *)(a2 + 152))
      goto LABEL_303;
LABEL_231:
    v220 = 0;
    v221 = 0;
    v437 = v219;
    while (1)
    {
      __dst = 0;
      v472 = 0;
      v473 = 0;
      v440 = v221;
      LODWORD(__p) = v221;
      sub_239961D90(v215, (unsigned int *)&__p, &__dst);
      v222 = __dst;
      v223 = v472;
      v442 = v220;
      *(_DWORD *)(v460 + 4 * v220) = (unint64_t)(v472 - __dst) >> 2;
      if (v223 != v222)
      {
        v224 = 0;
        v225 = 0;
        v226 = (char *)v462;
        while (1)
        {
          v228 = *(_DWORD *)&v222[4 * v224];
          if ((unint64_t)v226 >= *((_QWORD *)&v462 + 1))
            break;
          *(_DWORD *)v226 = v228;
          v227 = (uint64_t)(v226 + 4);
LABEL_236:
          *(_QWORD *)&v462 = v227;
          v226 = (char *)v227;
          v224 = ++v225;
          if (v225 >= (unint64_t)((v223 - v222) >> 2))
            goto LABEL_264;
        }
        v229 = (char *)*((_QWORD *)&v461 + 1);
        v230 = &v226[-*((_QWORD *)&v461 + 1)];
        v231 = (uint64_t)&v226[-*((_QWORD *)&v461 + 1)] >> 2;
        v232 = v231 + 1;
        if ((unint64_t)(v231 + 1) >> 62)
          sub_2394189F8();
        v233 = *((_QWORD *)&v462 + 1) - *((_QWORD *)&v461 + 1);
        if ((uint64_t)(*((_QWORD *)&v462 + 1) - *((_QWORD *)&v461 + 1)) >> 1 > v232)
          v232 = v233 >> 1;
        if ((unint64_t)v233 >= 0x7FFFFFFFFFFFFFFCLL)
          v234 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v234 = v232;
        if (v234)
        {
          if (v234 >> 62)
            sub_239418A80();
          v235 = operator new(4 * v234);
          v236 = (char *)v235 + 4 * v231;
          *v236 = v228;
          v227 = (uint64_t)(v236 + 1);
          if (v226 == v229)
            goto LABEL_252;
        }
        else
        {
          v235 = 0;
          v236 = (_DWORD *)(4 * v231);
          *(_DWORD *)(4 * v231) = v228;
          v227 = 4 * v231 + 4;
          if (v226 == v229)
            goto LABEL_252;
        }
        v237 = v226 - 4 - v229;
        if (v237 >= 0xBC)
        {
          if (&v230[(_QWORD)v235 - 4 - (v237 & 0xFFFFFFFFFFFFFFFCLL)] > &v230[(_QWORD)v235 - 4])
          {
            v238 = v226;
          }
          else if (&v226[-(v237 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v226 - 4)
          {
            v238 = v226;
          }
          else if ((unint64_t)(v226 - &v230[(_QWORD)v235]) >= 0x20)
          {
            v240 = (v237 >> 2) + 1;
            v241 = 4 * (v240 & 0x7FFFFFFFFFFFFFF8);
            v238 = &v226[-v241];
            v236 = (_DWORD *)((char *)v236 - v241);
            v242 = (char *)v235 + 4 * v231 - 16;
            v243 = v226 - 16;
            v244 = v240 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v245 = *(_OWORD *)v243;
              *(v242 - 1) = *((_OWORD *)v243 - 1);
              *v242 = v245;
              v242 -= 2;
              v243 -= 32;
              v244 -= 8;
            }
            while (v244);
            if (v240 == (v240 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_252:
              *((_QWORD *)&v461 + 1) = v236;
              *(_QWORD *)&v462 = v227;
              *((_QWORD *)&v462 + 1) = (char *)v235 + 4 * v234;
              if (v229)
              {
                operator delete(v229);
                v222 = __dst;
                v223 = v472;
              }
              goto LABEL_236;
            }
          }
          else
          {
            v238 = v226;
          }
        }
        else
        {
          v238 = v226;
        }
        do
        {
          v239 = *((_DWORD *)v238 - 1);
          v238 -= 4;
          *--v236 = v239;
        }
        while (v238 != v229);
        goto LABEL_252;
      }
LABEL_264:
      v246 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v437);
      v247 = *v246;
      v248 = (std::__shared_weak_count *)v246[1];
      if (v248)
      {
        v249 = (unint64_t *)&v248->__shared_owners_;
        do
          v250 = __ldxr(v249);
        while (__stxr(v250 + 1, v249));
        do
          v251 = __ldaxr(v249);
        while (__stlxr(v251 - 1, v249));
        if (!v251)
        {
          ((void (*)(std::__shared_weak_count *))v248->__on_zero_shared)(v248);
          std::__shared_weak_count::__release_weak(v248);
        }
      }
      v252 = (uint64_t *)(*(_QWORD *)(v247 + 40) + 24 * v442);
      v253 = *v252;
      if (v252[1] != *v252)
        break;
LABEL_301:
      if (__dst)
      {
        v472 = __dst;
        operator delete(__dst);
      }
      v220 = (v440 + 1);
      v215 = a2;
      v221 = v440 + 1;
      if (v220 >= (uint64_t)(*(_QWORD *)(a2 + 160) - *(_QWORD *)(a2 + 152)) >> 2)
        goto LABEL_303;
    }
    v254 = 0;
    v255 = 0;
    v256 = (char *)v468;
    while (1)
    {
      v258 = *(_DWORD *)(v253 + 4 * v254);
      if ((unint64_t)v256 >= *((_QWORD *)&v468 + 1))
        break;
      *(_DWORD *)v256 = v258;
      v257 = (uint64_t)(v256 + 4);
LABEL_273:
      *(_QWORD *)&v468 = v257;
      v253 = *v252;
      v256 = (char *)v257;
      v254 = ++v255;
      if (v255 >= (unint64_t)((v252[1] - *v252) >> 2))
        goto LABEL_301;
    }
    v259 = (char *)*((_QWORD *)&v467 + 1);
    v260 = &v256[-*((_QWORD *)&v467 + 1)];
    v261 = (uint64_t)&v256[-*((_QWORD *)&v467 + 1)] >> 2;
    v262 = v261 + 1;
    if ((unint64_t)(v261 + 1) >> 62)
      sub_2394189F8();
    v263 = *((_QWORD *)&v468 + 1) - *((_QWORD *)&v467 + 1);
    if ((uint64_t)(*((_QWORD *)&v468 + 1) - *((_QWORD *)&v467 + 1)) >> 1 > v262)
      v262 = v263 >> 1;
    if ((unint64_t)v263 >= 0x7FFFFFFFFFFFFFFCLL)
      v264 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v264 = v262;
    if (v264)
    {
      if (v264 >> 62)
        sub_239418A80();
      v265 = operator new(4 * v264);
      v266 = (char *)v265 + 4 * v261;
      *v266 = v258;
      v257 = (uint64_t)(v266 + 1);
      if (v256 == v259)
        goto LABEL_289;
    }
    else
    {
      v265 = 0;
      v266 = (_DWORD *)(4 * v261);
      *(_DWORD *)(4 * v261) = v258;
      v257 = 4 * v261 + 4;
      if (v256 == v259)
        goto LABEL_289;
    }
    v267 = v256 - 4 - v259;
    if (v267 >= 0xBC)
    {
      if (&v260[(_QWORD)v265 - 4 - (v267 & 0xFFFFFFFFFFFFFFFCLL)] > &v260[(_QWORD)v265 - 4])
      {
        v268 = v256;
      }
      else if (&v256[-(v267 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v256 - 4)
      {
        v268 = v256;
      }
      else if ((unint64_t)(v256 - &v260[(_QWORD)v265]) >= 0x20)
      {
        v270 = (v267 >> 2) + 1;
        v271 = 4 * (v270 & 0x7FFFFFFFFFFFFFF8);
        v268 = &v256[-v271];
        v266 = (_DWORD *)((char *)v266 - v271);
        v272 = (char *)v265 + 4 * v261 - 16;
        v273 = v256 - 16;
        v274 = v270 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v275 = *(_OWORD *)v273;
          *(v272 - 1) = *((_OWORD *)v273 - 1);
          *v272 = v275;
          v272 -= 2;
          v273 -= 32;
          v274 -= 8;
        }
        while (v274);
        if (v270 == (v270 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_289:
          *((_QWORD *)&v467 + 1) = v266;
          *(_QWORD *)&v468 = v257;
          *((_QWORD *)&v468 + 1) = (char *)v265 + 4 * v264;
          if (v259)
            operator delete(v259);
          goto LABEL_273;
        }
      }
      else
      {
        v268 = v256;
      }
    }
    else
    {
      v268 = v256;
    }
    do
    {
      v269 = *((_DWORD *)v268 - 1);
      v268 -= 4;
      *--v266 = v269;
    }
    while (v268 != v259);
    goto LABEL_289;
  }
  if (*(_QWORD *)(a2 + 160) != *(_QWORD *)(a2 + 152))
    goto LABEL_231;
LABEL_303:
  v276 = off_256934408[0];
  v277 = strlen(off_256934408[0]);
  if (v277 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v278 = v277;
  if (v277 >= 0x17)
  {
    v280 = (v277 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v277 | 7) != 0x17)
      v280 = v277 | 7;
    v281 = v280 + 1;
    v279 = (char *)operator new(v280 + 1);
    v472 = (char *)v278;
    v473 = v281 | 0x8000000000000000;
    __dst = v279;
    goto LABEL_310;
  }
  HIBYTE(v473) = v277;
  v279 = (char *)&__dst;
  if (v277)
LABEL_310:
    memmove(v279, v276, v278);
  v279[v278] = 0;
  v282 = (_QWORD *)(a2 + 8);
  __p = 0;
  v445 = 0;
  v283 = sub_2394E5F40((uint64_t **)(a2 + 8), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v284 = v283;
  if (SHIBYTE(v473) < 0)
  {
    operator delete(__dst);
    if (v284 == -1)
      goto LABEL_446;
  }
  else if (v283 == -1)
  {
    goto LABEL_446;
  }
  v286 = *(_QWORD *)(a2 + 104);
  v285 = *(_QWORD *)(a2 + 112);
  v287 = (v285 - v286) >> 2;
  v288 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v463 + 1) - v463) >> 2);
  if (v287 <= v288)
  {
    if (v287 < v288)
      *((_QWORD *)&v463 + 1) = v463 + 12 * v287;
  }
  else
  {
    sub_2394EF24C((uint64_t)&v463, v287 - v288);
    v286 = *(_QWORD *)(a2 + 104);
    v285 = *(_QWORD *)(a2 + 112);
    v287 = (v285 - v286) >> 2;
  }
  v289 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v465 - *((_QWORD *)&v464 + 1)) >> 2);
  if (v287 <= v289)
  {
    if (v287 < v289)
      *(_QWORD *)&v465 = *((_QWORD *)&v464 + 1) + 12 * v287;
  }
  else
  {
    sub_2394EF24C((uint64_t)&v464 + 8, v287 - v289);
    v286 = *(_QWORD *)(a2 + 104);
    v285 = *(_QWORD *)(a2 + 112);
  }
  if (v285 != v286)
  {
    v290 = 0;
    v291 = 0;
    v292 = v284;
    do
    {
      v293 = (uint64_t *)(*v282 + 16 * v292);
      v294 = *v293;
      v295 = (std::__shared_weak_count *)v293[1];
      if (v295)
      {
        v296 = (unint64_t *)&v295->__shared_owners_;
        do
          v297 = __ldxr(v296);
        while (__stxr(v297 + 1, v296));
        do
          v298 = __ldaxr(v296);
        while (__stlxr(v298 - 1, v296));
        if (!v298)
        {
          ((void (*)(std::__shared_weak_count *))v295->__on_zero_shared)(v295);
          std::__shared_weak_count::__release_weak(v295);
        }
      }
      *(_DWORD *)(v463 + 12 * v290) = *(_DWORD *)(*(_QWORD *)(v294 + 40) + 16 * v290);
      v299 = (uint64_t *)(*(_QWORD *)(a2 + 8) + 16 * *(unsigned int *)(a2 + 176));
      v301 = *v299;
      v300 = (std::__shared_weak_count *)v299[1];
      if (v300)
      {
        v302 = (unint64_t *)&v300->__shared_owners_;
        do
          v303 = __ldxr(v302);
        while (__stxr(v303 + 1, v302));
        do
          v304 = __ldaxr(v302);
        while (__stlxr(v304 - 1, v302));
        if (!v304)
        {
          ((void (*)(std::__shared_weak_count *))v300->__on_zero_shared)(v300);
          std::__shared_weak_count::__release_weak(v300);
        }
      }
      *(_DWORD *)(*((_QWORD *)&v464 + 1) + 12 * v290) = *(_DWORD *)(*(_QWORD *)(v301 + 40) + 16 * v290);
      v305 = (uint64_t *)(*v282 + 16 * v292);
      v306 = *v305;
      v307 = (std::__shared_weak_count *)v305[1];
      if (v307)
      {
        v308 = (unint64_t *)&v307->__shared_owners_;
        do
          v309 = __ldxr(v308);
        while (__stxr(v309 + 1, v308));
        do
          v310 = __ldaxr(v308);
        while (__stlxr(v310 - 1, v308));
        if (!v310)
        {
          ((void (*)(std::__shared_weak_count *))v307->__on_zero_shared)(v307);
          std::__shared_weak_count::__release_weak(v307);
        }
      }
      *(_DWORD *)(v463 + 12 * v290 + 4) = *(_DWORD *)(*(_QWORD *)(v306 + 40) + 16 * v290 + 4);
      v311 = (uint64_t *)(*(_QWORD *)(a2 + 8) + 16 * *(unsigned int *)(a2 + 176));
      v312 = *v311;
      v313 = (std::__shared_weak_count *)v311[1];
      if (v313)
      {
        v314 = (unint64_t *)&v313->__shared_owners_;
        do
          v315 = __ldxr(v314);
        while (__stxr(v315 + 1, v314));
        do
          v316 = __ldaxr(v314);
        while (__stlxr(v316 - 1, v314));
        if (!v316)
        {
          ((void (*)(std::__shared_weak_count *))v313->__on_zero_shared)(v313);
          std::__shared_weak_count::__release_weak(v313);
        }
      }
      *(_DWORD *)(*((_QWORD *)&v464 + 1) + 12 * v290 + 4) = *(_DWORD *)(*(_QWORD *)(v312 + 40) + 16 * v290 + 4);
      v317 = (uint64_t *)(*v282 + 16 * v292);
      v318 = *v317;
      v319 = (std::__shared_weak_count *)v317[1];
      if (v319)
      {
        v320 = (unint64_t *)&v319->__shared_owners_;
        do
          v321 = __ldxr(v320);
        while (__stxr(v321 + 1, v320));
        do
          v322 = __ldaxr(v320);
        while (__stlxr(v322 - 1, v320));
        if (!v322)
        {
          ((void (*)(std::__shared_weak_count *))v319->__on_zero_shared)(v319);
          std::__shared_weak_count::__release_weak(v319);
        }
      }
      *(_DWORD *)(v463 + 12 * v290 + 8) = *(_DWORD *)(*(_QWORD *)(v318 + 40) + 16 * v290 + 8);
      v323 = (uint64_t *)(*(_QWORD *)(a2 + 8) + 16 * *(unsigned int *)(a2 + 176));
      v324 = *v323;
      v325 = (std::__shared_weak_count *)v323[1];
      if (v325)
      {
        v326 = (unint64_t *)&v325->__shared_owners_;
        do
          v327 = __ldxr(v326);
        while (__stxr(v327 + 1, v326));
        do
          v328 = __ldaxr(v326);
        while (__stlxr(v328 - 1, v326));
        if (!v328)
        {
          ((void (*)(std::__shared_weak_count *))v325->__on_zero_shared)(v325);
          std::__shared_weak_count::__release_weak(v325);
        }
      }
      *(_DWORD *)(*((_QWORD *)&v464 + 1) + 12 * v290 + 8) = *(_DWORD *)(*(_QWORD *)(v324 + 40) + 16 * v290 + 8);
      v290 = ++v291;
    }
    while (v291 < (unint64_t)((uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 2));
  }
  v329 = off_256934438[0];
  v330 = strlen(off_256934438[0]);
  if (v330 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v331 = v330;
  if (v330 >= 0x17)
  {
    v333 = (v330 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v330 | 7) != 0x17)
      v333 = v330 | 7;
    v334 = v333 + 1;
    v332 = (char *)operator new(v333 + 1);
    v472 = (char *)v331;
    v473 = v334 | 0x8000000000000000;
    __dst = v332;
    goto LABEL_369;
  }
  HIBYTE(v473) = v330;
  v332 = (char *)&__dst;
  if (v330)
LABEL_369:
    memmove(v332, v329, v331);
  v332[v331] = 0;
  v335 = (uint64_t **)(a2 + 80);
  __p = 0;
  v336 = sub_2394E5C88((uint64_t **)(a2 + 80), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v337 = v336;
  if (SHIBYTE(v473) < 0)
  {
    operator delete(__dst);
    if (v337 == -1)
      goto LABEL_446;
  }
  else if (v336 == -1)
  {
    goto LABEL_446;
  }
  v338 = &(*v335)[2 * v337];
  v339 = *v338;
  v340 = (std::__shared_weak_count *)v338[1];
  if (v340)
  {
    v341 = (unint64_t *)&v340->__shared_owners_;
    do
      v342 = __ldxr(v341);
    while (__stxr(v342 + 1, v341));
    do
      v343 = __ldaxr(v341);
    while (__stlxr(v343 - 1, v341));
    if (!v343)
    {
      ((void (*)(std::__shared_weak_count *))v340->__on_zero_shared)(v340);
      std::__shared_weak_count::__release_weak(v340);
    }
  }
  v344 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v339 + 16))(v339);
  v345 = (uint64_t)(*((_QWORD *)&v466 + 1) - v466) >> 3;
  if (v344 <= v345)
  {
    if (v344 < v345)
      *((_QWORD *)&v466 + 1) = v466 + 8 * v344;
  }
  else
  {
    sub_2394FBB68((void **)&v466, v344 - v345);
  }
  v346 = 0;
  v347 = v337;
  while (1)
  {
    v348 = &(*v335)[2 * v347];
    v349 = *v348;
    v350 = (std::__shared_weak_count *)v348[1];
    if (v350)
    {
      v351 = (unint64_t *)&v350->__shared_owners_;
      do
        v352 = __ldxr(v351);
      while (__stxr(v352 + 1, v351));
      do
        v353 = __ldaxr(v351);
      while (__stlxr(v353 - 1, v351));
      if (!v353)
      {
        ((void (*)(std::__shared_weak_count *))v350->__on_zero_shared)(v350);
        std::__shared_weak_count::__release_weak(v350);
      }
    }
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v349 + 16))(v349) <= (unint64_t)v346)
      break;
    v354 = &(*v335)[2 * v347];
    v355 = *v354;
    v356 = (std::__shared_weak_count *)v354[1];
    if (v356)
    {
      v357 = (unint64_t *)&v356->__shared_owners_;
      do
        v358 = __ldxr(v357);
      while (__stxr(v358 + 1, v357));
      do
        v359 = __ldaxr(v357);
      while (__stlxr(v359 - 1, v357));
      if (!v359)
      {
        ((void (*)(std::__shared_weak_count *))v356->__on_zero_shared)(v356);
        std::__shared_weak_count::__release_weak(v356);
      }
    }
    *(_DWORD *)(v466 + 8 * v346) = *(_DWORD *)(*(_QWORD *)(v355 + 40) + 8 * v346);
    v360 = &(*v335)[2 * v347];
    v362 = *v360;
    v361 = (std::__shared_weak_count *)v360[1];
    if (v361)
    {
      v363 = (unint64_t *)&v361->__shared_owners_;
      do
        v364 = __ldxr(v363);
      while (__stxr(v364 + 1, v363));
      do
        v365 = __ldaxr(v363);
      while (__stlxr(v365 - 1, v363));
      if (!v365)
      {
        ((void (*)(std::__shared_weak_count *))v361->__on_zero_shared)(v361);
        std::__shared_weak_count::__release_weak(v361);
      }
    }
    *(_DWORD *)(v466 + 8 * v346 + 4) = *(_DWORD *)(*(_QWORD *)(v362 + 40) + 8 * v346 + 4);
    ++v346;
  }
  v366 = off_256934428[0];
  v367 = strlen(off_256934428[0]);
  if (v367 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v368 = v367;
  if (v367 >= 0x17)
  {
    v370 = (v367 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v367 | 7) != 0x17)
      v370 = v367 | 7;
    v371 = v370 + 1;
    v369 = (char *)operator new(v370 + 1);
    v472 = (char *)v368;
    v473 = v371 | 0x8000000000000000;
    __dst = v369;
    goto LABEL_412;
  }
  HIBYTE(v473) = v367;
  v369 = (char *)&__dst;
  if (v367)
LABEL_412:
    memmove(v369, v366, v368);
  v369[v368] = 0;
  v372 = (_QWORD *)(a2 + 56);
  LOWORD(__p) = 0;
  LODWORD(v373) = sub_23958CE84((uint64_t **)(a2 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v473) < 0)
    operator delete(__dst);
  v374 = off_256934448[0];
  v375 = strlen(off_256934448[0]);
  if (v375 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v376 = v375;
  if (v375 >= 0x17)
  {
    v378 = (v375 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v375 | 7) != 0x17)
      v378 = v375 | 7;
    v379 = v378 + 1;
    v377 = operator new(v378 + 1);
    v445 = v376;
    v446 = v379 | 0x8000000000000000;
    __p = v377;
    goto LABEL_422;
  }
  HIBYTE(v446) = v375;
  v377 = &__p;
  if (v375)
LABEL_422:
    memmove(v377, v374, v376);
  *((_BYTE *)v377 + v376) = 0;
  __dst = 0;
  v472 = 0;
  v473 = 0;
  v380 = sub_23958C0D8(v335, (uint64_t)&__dst, (unsigned __int8 *)&__p);
  if ((SHIBYTE(v473) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v446) & 0x80000000) == 0)
      goto LABEL_425;
LABEL_428:
    operator delete(__p);
    if ((_DWORD)v373 == -1)
      goto LABEL_446;
    goto LABEL_429;
  }
  operator delete(__dst);
  if (SHIBYTE(v446) < 0)
    goto LABEL_428;
LABEL_425:
  if ((_DWORD)v373 == -1)
  {
LABEL_446:
    v398 = 0;
    sub_23995D1E8(&v456);
    v399 = v455[0];
    if (!v455[0])
      goto LABEL_448;
    goto LABEL_447;
  }
LABEL_429:
  if (v380 == -1)
    goto LABEL_446;
  v381 = &(*v335)[2 * v380];
  v382 = *v381;
  v383 = (std::__shared_weak_count *)v381[1];
  if (v383)
  {
    v384 = (unint64_t *)&v383->__shared_owners_;
    do
      v385 = __ldxr(v384);
    while (__stxr(v385 + 1, v384));
    do
      v386 = __ldaxr(v384);
    while (__stlxr(v386 - 1, v384));
    if (!v386)
    {
      ((void (*)(std::__shared_weak_count *))v383->__on_zero_shared)(v383);
      std::__shared_weak_count::__release_weak(v383);
    }
  }
  v387 = (unint64_t)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v382 + 16))(v382) >= 2;
  v388 = v436;
  if (v387)
  {
    v389 = &(*v335)[2 * v380];
    v390 = *v389;
    v391 = (std::__shared_weak_count *)v389[1];
    if (v391)
    {
      v392 = (unint64_t *)&v391->__shared_owners_;
      do
        v393 = __ldxr(v392);
      while (__stxr(v393 + 1, v392));
      do
        v394 = __ldaxr(v392);
      while (__stlxr(v394 - 1, v392));
      if (!v394)
      {
        ((void (*)(std::__shared_weak_count *))v391->__on_zero_shared)(v391);
        std::__shared_weak_count::__release_weak(v391);
      }
    }
    v395 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v390 + 16))(v390);
    v396 = *((_QWORD *)&v469 + 1);
    v397 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v469 + 1) - v469) >> 3);
    if (v395 <= v397)
    {
      if (v395 < v397)
      {
        v401 = v469 + 24 * v395;
        if (*((_QWORD *)&v469 + 1) != v401)
        {
          v402 = *((_QWORD *)&v469 + 1);
          do
          {
            v404 = *(void **)(v402 - 24);
            v402 -= 24;
            v403 = v404;
            if (v404)
            {
              *(_QWORD *)(v396 - 16) = v403;
              operator delete(v403);
            }
            v396 = v402;
          }
          while (v402 != v401);
        }
        *((_QWORD *)&v469 + 1) = v401;
      }
    }
    else
    {
      sub_2394D951C((uint64_t)&v469, v395 - v397);
    }
    v388 = v436;
    if (*(_QWORD *)(a2 + 160) != *(_QWORD *)(a2 + 152))
    {
      v405 = 0;
      v406 = 0;
      v373 = v373;
      v441 = v373;
      while (1)
      {
        v409 = (uint64_t *)(*v372 + 16 * v373);
        v410 = *v409;
        v411 = (std::__shared_weak_count *)v409[1];
        if (v411)
        {
          v412 = (unint64_t *)&v411->__shared_owners_;
          do
            v413 = __ldxr(v412);
          while (__stxr(v413 + 1, v412));
          do
            v414 = __ldaxr(v412);
          while (__stlxr(v414 - 1, v412));
          if (!v414)
          {
            ((void (*)(std::__shared_weak_count *))v411->__on_zero_shared)(v411);
            std::__shared_weak_count::__release_weak(v411);
            v388 = v436;
          }
        }
        v415 = v469 + 24 * *(unsigned __int16 *)(*(_QWORD *)(v410 + 40) + 2 * v405);
        v417 = (uint64_t *)(v415 + 8);
        v416 = *(char **)(v415 + 8);
        v418 = *(_QWORD *)(v415 + 16);
        if ((unint64_t)v416 >= v418)
          break;
        *(_DWORD *)v416 = v406;
        v407 = (uint64_t)(v416 + 4);
        v408 = a2;
LABEL_463:
        *v417 = v407;
        v405 = ++v406;
        if (v406 >= (unint64_t)((uint64_t)(*(_QWORD *)(v408 + 160) - *(_QWORD *)(v408 + 152)) >> 2))
          goto LABEL_492;
      }
      v419 = *(char **)v415;
      v420 = (uint64_t)&v416[-*(_QWORD *)v415];
      v421 = v420 >> 2;
      v422 = (v420 >> 2) + 1;
      if (v422 >> 62)
        sub_2394189F8();
      v423 = v418 - (_QWORD)v419;
      if (v423 >> 1 > v422)
        v422 = v423 >> 1;
      if ((unint64_t)v423 >= 0x7FFFFFFFFFFFFFFCLL)
        v424 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v424 = v422;
      if (v424)
      {
        if (v424 >> 62)
          sub_239418A80();
        v425 = operator new(4 * v424);
        v426 = (unsigned int *)&v425[4 * v421];
        *v426 = v406;
        v407 = (uint64_t)(v426 + 1);
        if (v416 == v419)
          goto LABEL_489;
      }
      else
      {
        v425 = 0;
        v426 = (unsigned int *)(4 * v421);
        *(_DWORD *)(4 * v421) = v406;
        v407 = 4 * v421 + 4;
        if (v416 == v419)
        {
LABEL_489:
          *(_QWORD *)v415 = v426;
          *v417 = v407;
          *(_QWORD *)(v415 + 16) = &v425[4 * v424];
          if (v419)
            operator delete(v419);
          v388 = v436;
          v372 = (_QWORD *)(a2 + 56);
          v408 = a2;
          v373 = v441;
          goto LABEL_463;
        }
      }
      v427 = v416 - 4 - v419;
      if (v427 < 0x2C)
        goto LABEL_516;
      if ((unint64_t)(v416 - &v425[v420]) < 0x20)
        goto LABEL_516;
      v428 = (v427 >> 2) + 1;
      v429 = 4 * (v428 & 0x7FFFFFFFFFFFFFF8);
      v430 = &v416[-v429];
      v426 = (unsigned int *)((char *)v426 - v429);
      v431 = &v425[4 * v421 - 16];
      v432 = v416 - 16;
      v433 = v428 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v434 = *(_OWORD *)v432;
        *(v431 - 1) = *((_OWORD *)v432 - 1);
        *v431 = v434;
        v431 -= 2;
        v432 -= 32;
        v433 -= 8;
      }
      while (v433);
      v416 = v430;
      if (v428 != (v428 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_516:
        do
        {
          v435 = *((_DWORD *)v416 - 1);
          v416 -= 4;
          *--v426 = v435;
        }
        while (v416 != v419);
      }
      goto LABEL_489;
    }
  }
LABEL_492:
  sub_239A0F700(v388, (uint64_t)&v450);
  v398 = 1;
  sub_23995D1E8(&v456);
  v399 = v455[0];
  if (v455[0])
  {
LABEL_447:
    sub_23995D2BC((uint64_t)v455, (uint64_t)v399);
    operator delete(v455[0]);
  }
LABEL_448:
  if (v454 < 0)
  {
    operator delete(v453[0]);
    if ((SHIBYTE(v450.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return v398;
LABEL_452:
    operator delete(v450.__r_.__value_.__l.__data_);
    return v398;
  }
  if (SHIBYTE(v450.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_452;
  return v398;
}

void sub_23995D008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  sub_23995D120((uint64_t)&a31);
  _Unwind_Resume(a1);
}

void sub_23995D0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;
  void *v30;

  v30 = *(void **)(v28 - 112);
  if (v30)
  {
    *(_QWORD *)(v28 - 104) = v30;
    operator delete(v30);
  }
  sub_23995D120((uint64_t)&a28);
  _Unwind_Resume(a1);
}

uint64_t sub_23995D120(uint64_t a1)
{
  uint64_t v2;

  sub_23995D1E8((_QWORD *)(a1 + 88));
  v2 = *(_QWORD *)(a1 + 64);
  if (v2)
  {
    sub_23995D2BC(a1 + 64, v2);
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0)
  {
    operator delete(*(void **)(a1 + 40));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
      return a1;
  }
  else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_23995D19C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  int v5;

  v5 = 0;
  return sub_23995AEAC(a1, a2, a3, a4, &v5);
}

uint64_t sub_23995D1C0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  int v5;

  v5 = 1;
  return sub_23995AEAC(a1, a2, a3, a4, &v5);
}

_QWORD *sub_23995D1E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v2 = a1[21];
  if (v2)
  {
    v3 = a1[22];
    v4 = (void *)a1[21];
    if (v3 != v2)
    {
      v5 = a1[22];
      do
      {
        v7 = *(void **)(v5 - 24);
        v5 -= 24;
        v6 = v7;
        if (v7)
        {
          *(_QWORD *)(v3 - 16) = v6;
          operator delete(v6);
        }
        v3 = v5;
      }
      while (v5 != v2);
      v4 = (void *)a1[21];
    }
    a1[22] = v2;
    operator delete(v4);
  }
  v8 = (void *)a1[18];
  if (v8)
  {
    a1[19] = v8;
    operator delete(v8);
  }
  v9 = (void *)a1[15];
  if (v9)
  {
    a1[16] = v9;
    operator delete(v9);
  }
  v10 = (void *)a1[12];
  if (v10)
  {
    a1[13] = v10;
    operator delete(v10);
  }
  v11 = (void *)a1[9];
  if (v11)
  {
    a1[10] = v11;
    operator delete(v11);
  }
  v12 = (void *)a1[6];
  if (v12)
  {
    a1[7] = v12;
    operator delete(v12);
  }
  v13 = (void *)a1[3];
  if (v13)
  {
    a1[4] = v13;
    operator delete(v13);
  }
  return a1;
}

void sub_23995D2BC(uint64_t a1, uint64_t a2)
{
  uint64_t i;

  for (i = *(_QWORD *)(a1 + 8); i != a2; i -= 168)
  {
    if (*(char *)(i - 1) < 0)
    {
      operator delete(*(void **)(i - 24));
      if ((*(char *)(i - 33) & 0x80000000) == 0)
      {
LABEL_6:
        if ((*(char *)(i - 65) & 0x80000000) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*(char *)(i - 33) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(*(void **)(i - 56));
    if ((*(char *)(i - 65) & 0x80000000) == 0)
    {
LABEL_7:
      if ((*(char *)(i - 97) & 0x80000000) == 0)
        goto LABEL_8;
      goto LABEL_13;
    }
LABEL_12:
    operator delete(*(void **)(i - 88));
    if ((*(char *)(i - 97) & 0x80000000) == 0)
    {
LABEL_8:
      if (*(char *)(i - 129) < 0)
        goto LABEL_14;
      continue;
    }
LABEL_13:
    operator delete(*(void **)(i - 120));
    if (*(char *)(i - 129) < 0)
LABEL_14:
      operator delete(*(void **)(i - 152));
  }
  *(_QWORD *)(a1 + 8) = a2;
}

void sub_23995D378(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_23995D378(a1, *(_QWORD *)a2);
    sub_23995D378(a1, *(_QWORD *)(a2 + 8));
    if (*(char *)(a2 + 79) < 0)
    {
      operator delete(*(void **)(a2 + 56));
      if ((*(char *)(a2 + 55) & 0x80000000) == 0)
        goto LABEL_4;
    }
    else if ((*(char *)(a2 + 55) & 0x80000000) == 0)
    {
LABEL_4:
      operator delete((void *)a2);
      return;
    }
    operator delete(*(void **)(a2 + 32));
    operator delete((void *)a2);
  }
}

uint64_t sub_23995D3F0(uint64_t a1)
{
  sub_23995D424(a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_23995D424(uint64_t a1, uint64_t a2)
{
  uint64_t i;

  for (i = *(_QWORD *)(a1 + 16); i != a2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 168;
    if (*(char *)(i - 1) < 0)
    {
      operator delete(*(void **)(i - 24));
      if ((*(char *)(i - 33) & 0x80000000) == 0)
      {
LABEL_6:
        if ((*(char *)(i - 65) & 0x80000000) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*(char *)(i - 33) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(*(void **)(i - 56));
    if ((*(char *)(i - 65) & 0x80000000) == 0)
    {
LABEL_7:
      if ((*(char *)(i - 97) & 0x80000000) == 0)
        goto LABEL_8;
      goto LABEL_13;
    }
LABEL_12:
    operator delete(*(void **)(i - 88));
    if ((*(char *)(i - 97) & 0x80000000) == 0)
    {
LABEL_8:
      if (*(char *)(i - 129) < 0)
        goto LABEL_14;
      continue;
    }
LABEL_13:
    operator delete(*(void **)(i - 120));
    if (*(char *)(i - 129) < 0)
LABEL_14:
      operator delete(*(void **)(i - 152));
  }
}

uint64_t sub_23995D4E8(int64x2_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64x2_t v20;
  char *v21;
  void *__p;
  int64x2_t v24;
  char *v25;
  int64x2_t *v26;

  v3 = 0xCF3CF3CF3CF3CF3DLL * ((a1->i64[1] - a1->i64[0]) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x186186186186186)
    sub_2394189F8();
  if (0x9E79E79E79E79E7ALL * ((a1[1].i64[0] - a1->i64[0]) >> 3) > v4)
    v4 = 0x9E79E79E79E79E7ALL * ((a1[1].i64[0] - a1->i64[0]) >> 3);
  if (0xCF3CF3CF3CF3CF3DLL * ((a1[1].i64[0] - a1->i64[0]) >> 3) >= 0xC30C30C30C30C3)
    v6 = 0x186186186186186;
  else
    v6 = v4;
  v26 = a1 + 1;
  if (v6)
  {
    if (v6 > 0x186186186186186)
      sub_239418A80();
    v7 = (char *)operator new(168 * v6);
  }
  else
  {
    v7 = 0;
  }
  __p = v7;
  v24.i64[0] = (uint64_t)&v7[168 * v3];
  v25 = &v7[168 * v6];
  sub_23995D718(v24.i64[0], a2);
  v8 = v24.i64[0];
  v9 = v24.i64[0] + 168;
  v24.i64[1] = v24.i64[0] + 168;
  v11 = a1->i64[0];
  v10 = a1->u64[1];
  if (v10 == a1->i64[0])
  {
    v20 = vdupq_n_s64(v10);
  }
  else
  {
    v12 = 0;
    do
    {
      v13 = v8 + v12;
      v14 = v10 + v12;
      *(_WORD *)(v13 - 168) = *(_WORD *)(v10 + v12 - 168);
      *(_BYTE *)(v13 - 160) = *(_BYTE *)(v10 + v12 - 160);
      v15 = *(_OWORD *)(v10 + v12 - 152);
      *(_QWORD *)(v13 - 136) = *(_QWORD *)(v10 + v12 - 136);
      *(_OWORD *)(v13 - 152) = v15;
      *(_QWORD *)(v14 - 144) = 0;
      *(_QWORD *)(v14 - 136) = 0;
      *(_QWORD *)(v14 - 152) = 0;
      *(_BYTE *)(v13 - 128) = *(_BYTE *)(v10 + v12 - 128);
      v16 = *(_OWORD *)(v10 + v12 - 120);
      *(_QWORD *)(v13 - 104) = *(_QWORD *)(v10 + v12 - 104);
      *(_OWORD *)(v13 - 120) = v16;
      *(_QWORD *)(v14 - 112) = 0;
      *(_QWORD *)(v14 - 104) = 0;
      *(_QWORD *)(v14 - 120) = 0;
      *(_BYTE *)(v13 - 96) = *(_BYTE *)(v10 + v12 - 96);
      v17 = *(_OWORD *)(v10 + v12 - 88);
      *(_QWORD *)(v13 - 72) = *(_QWORD *)(v10 + v12 - 72);
      *(_OWORD *)(v13 - 88) = v17;
      *(_QWORD *)(v14 - 80) = 0;
      *(_QWORD *)(v14 - 72) = 0;
      *(_QWORD *)(v14 - 88) = 0;
      *(_BYTE *)(v13 - 64) = *(_BYTE *)(v10 + v12 - 64);
      v18 = *(_OWORD *)(v10 + v12 - 56);
      *(_QWORD *)(v13 - 40) = *(_QWORD *)(v10 + v12 - 40);
      *(_OWORD *)(v13 - 56) = v18;
      *(_QWORD *)(v14 - 48) = 0;
      *(_QWORD *)(v14 - 40) = 0;
      *(_QWORD *)(v14 - 56) = 0;
      *(_BYTE *)(v13 - 32) = *(_BYTE *)(v10 + v12 - 32);
      v19 = *(_OWORD *)(v10 + v12 - 24);
      *(_QWORD *)(v13 - 8) = *(_QWORD *)(v10 + v12 - 8);
      *(_OWORD *)(v13 - 24) = v19;
      *(_QWORD *)(v14 - 16) = 0;
      *(_QWORD *)(v14 - 8) = 0;
      *(_QWORD *)(v14 - 24) = 0;
      v12 -= 168;
    }
    while (v10 + v12 != v11);
    v20 = *a1;
    v9 = v24.i64[1];
    v8 += v12;
  }
  a1->i64[0] = v8;
  a1->i64[1] = v9;
  v24 = v20;
  v21 = (char *)a1[1].i64[0];
  a1[1].i64[0] = (uint64_t)v25;
  v25 = v21;
  __p = (void *)v20.i64[0];
  sub_23995D424((uint64_t)&__p, v20.i64[0]);
  if (__p)
    operator delete(__p);
  return v9;
}

void sub_23995D704(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_23995D3F0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_23995D718(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _BYTE *v9;
  __int128 v10;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  if (*(char *)(a2 + 39) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 16), *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v5 = a1 + 48;
    if ((*(char *)(a2 + 71) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = v4;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v5 = a1 + 48;
    if ((*(char *)(a2 + 71) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = *(_OWORD *)(a2 + 48);
      *(_QWORD *)(v5 + 16) = *(_QWORD *)(a2 + 64);
      *(_OWORD *)v5 = v6;
      goto LABEL_6;
    }
  }
  sub_23941A7F8((_BYTE *)v5, *(void **)(a2 + 48), *(_QWORD *)(a2 + 56));
LABEL_6:
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (*(char *)(a2 + 103) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 80), *(void **)(a2 + 80), *(_QWORD *)(a2 + 88));
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = v7;
  }
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  if (*(char *)(a2 + 135) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 112), *(void **)(a2 + 112), *(_QWORD *)(a2 + 120));
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = v8;
  }
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v9 = (_BYTE *)(a1 + 144);
  if (*(char *)(a2 + 167) < 0)
  {
    sub_23941A7F8(v9, *(void **)(a2 + 144), *(_QWORD *)(a2 + 152));
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_OWORD *)v9 = v10;
  }
  return a1;
}

void sub_23995D88C(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;

  if (v1[135] < 0)
  {
    operator delete(*v5);
    if ((v1[103] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v1[71] & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v1[103] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v4);
  if ((v1[71] & 0x80000000) == 0)
  {
LABEL_4:
    if ((v1[39] & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(*v3);
  if ((v1[39] & 0x80000000) == 0)
LABEL_5:
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

long double sub_23995D928(float32x4_t *a1, float32x4_t *a2, float32x4_t *a3)
{
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  long double v9;
  double v10;
  double v11;
  long double v13;

  v3 = vsubq_f32(*a1, *a2);
  v4 = vsubq_f32(*a3, *a2);
  v5 = vmulq_f32(v3, v3);
  v5.i32[3] = 0;
  v5.i64[0] = vpaddq_f32(v5, v5).u64[0];
  v5.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v5.f32));
  v6 = vmulq_f32(v4, v4);
  v6.i32[3] = 0;
  v7 = vdivq_f32(v3, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 0));
  v5.i64[0] = vpaddq_f32(v6, v6).u64[0];
  v5.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v5.f32));
  v8 = vmulq_f32(v7, vdivq_f32(v4, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 0)));
  v8.i32[3] = 0;
  v9 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v8, v8));
  v10 = fabs(v9);
  v11 = 0.0;
  if (v10 < 0.001)
    return v11;
  if (vabdd_f64(1.0, v10) < 0.001)
    return 1000.0;
  v13 = acos(v9);
  return 1.0 / tan(v13);
}

uint64_t sub_23995D9F4(uint64_t a1, unsigned int a2, float32x4_t *a3)
{
  _QWORD *v5;
  int v6;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int *v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int *v32;
  int v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  unsigned int v39;
  float *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  __double2 v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  float32x4_t v49;
  uint64_t v50;
  float32x4_t v51;
  float32x4_t v52;
  int8x16_t v53;
  double v54;
  float64x2_t v55;
  uint64_t v56;
  double v57;
  int v58;
  double v59;
  double v60;
  unsigned int *v61;
  uint64_t v62;
  unsigned int *v63;
  float v64;
  int8x16_t v65;
  double v66;
  __double2 v67;
  double v68;
  float sinval;
  int8x16_t v70;
  double v71;
  float64x2_t v72;
  int8x16_t v73;
  float64_t v74;
  float32x2_t v75;
  float64x2_t v76;
  float64x2_t v77;
  double v78;
  float64x2_t v79;
  unsigned int v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v86;
  float32x4_t v87;
  float32x4_t *v88;
  float32x4_t v89;
  double v90;
  float64x2_t v91;
  unsigned int v92;
  uint64_t v93[3];
  unsigned int v94;
  unsigned int v95[3];

  v94 = a2;
  v95[0] = a2;
  v5 = (_QWORD *)(a1 + 104);
  sub_239962B1C((uint64_t)v93, (_QWORD *)(a1 + 104), v95);
  v6 = -1;
  do
    ++v6;
  while (sub_239962B44(v93) != -1);
  v7 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v9 = *v7;
  v8 = (std::__shared_weak_count *)v7[1];
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      if (sub_2399423C8(a1, &v94))
        goto LABEL_9;
LABEL_31:
      sub_239962480((uint64_t)v93, v5, &v94);
      v33 = 0;
      v34 = 0.0;
      v35 = 0.0;
      v36 = 0.0;
      v37 = 0.0;
      v38 = 0.0;
      v90 = 0.0;
      while (1)
      {
        v39 = sub_2399624A8(v93);
        if (v39 == -1)
          break;
        v40 = (float *)(*(_QWORD *)(v9 + 40) + 16 * v39);
        v41 = *v40;
        v42 = v40[1];
        v43 = v34;
        v44 = v40[2];
        v45 = __sincos_stret((double)v33 * 6.28318531 / (double)v6);
        v90 = v90 + v45.__cosval * v41;
        v38 = v38 + v45.__cosval * v42;
        v37 = v37 + v45.__cosval * v44;
        v36 = v36 + v45.__sinval * v41;
        v35 = v35 + v45.__sinval * v42;
        v34 = v43 + v45.__sinval * v44;
        ++v33;
      }
      *(float *)&v46 = v38 * v34 - v37 * v35;
      *(float *)&v47 = v37 * v36 - v90 * v34;
      v49.i64[0] = __PAIR64__(v47, v46);
      *(float *)&v48 = v90 * v35 - v38 * v36;
      v49.i64[1] = v48;
      goto LABEL_42;
    }
  }
  if (!sub_2399423C8(a1, &v94))
    goto LABEL_31;
LABEL_9:
  v88 = a3;
  v13 = -1;
  v92 = -1;
  sub_239962B1C((uint64_t)v93, v5, &v94);
  v95[0] = sub_239962B44(v93);
  if (v95[0] != -1)
  {
    v14 = -1;
    v15 = -1;
    while (1)
    {
      v16 = *(unsigned int *)sub_239962518((uint64_t)v5, v95);
      v17 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v18 = *v17;
      v19 = (std::__shared_weak_count *)v17[1];
      if (!v19)
        goto LABEL_17;
      v20 = (unint64_t *)&v19->__shared_owners_;
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      do
        v22 = __ldaxr(v20);
      while (__stlxr(v22 - 1, v20));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
        if (((*(_QWORD *)(*(_QWORD *)(v18 + 40) + ((v16 >> 3) & 0x1FFFFFF8)) >> v16) & 1) != 0)
        {
LABEL_18:
          v23 = (unsigned int *)sub_239962518((uint64_t)v5, v95);
          v14 = *(_DWORD *)(sub_239962518((uint64_t)v5, v23) + 12);
          v24 = v95[0];
          v92 = v95[0];
          v25 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
          v26 = *v25;
          v27 = (std::__shared_weak_count *)v25[1];
          if (!v27)
            goto LABEL_26;
          goto LABEL_22;
        }
      }
      else
      {
LABEL_17:
        if (((*(_QWORD *)(*(_QWORD *)(v18 + 40) + ((v16 >> 3) & 0x1FFFFFF8)) >> v16) & 1) != 0)
          goto LABEL_18;
      }
      v24 = v95[0];
      v28 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v26 = *v28;
      v27 = (std::__shared_weak_count *)v28[1];
      if (!v27)
        goto LABEL_26;
LABEL_22:
      v29 = (unint64_t *)&v27->__shared_owners_;
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
      do
        v31 = __ldaxr(v29);
      while (__stlxr(v31 - 1, v29));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
        if (((*(_QWORD *)(*(_QWORD *)(v26 + 40) + ((v24 >> 3) & 0x1FFFFFF8)) >> v24) & 1) == 0)
          goto LABEL_11;
LABEL_27:
        v32 = (unsigned int *)sub_239962518((uint64_t)v5, v95);
        v15 = *(_DWORD *)(sub_239962518((uint64_t)v5, v32) + 12);
        v13 = v95[0];
        goto LABEL_11;
      }
LABEL_26:
      if (((*(_QWORD *)(*(_QWORD *)(v26 + 40) + ((v24 >> 3) & 0x1FFFFFF8)) >> v24) & 1) != 0)
        goto LABEL_27;
LABEL_11:
      v95[0] = sub_239962B44(v93);
      if (v95[0] == -1)
        goto LABEL_36;
    }
  }
  v15 = -1;
  v14 = -1;
LABEL_36:
  v50 = *(_QWORD *)(v9 + 40);
  v51 = *(float32x4_t *)(v50 + 16 * v15);
  v52 = *(float32x4_t *)(v50 + 16 * v14);
  if (v6 == 2)
  {
    v53 = (int8x16_t)vsubq_f32(vaddq_f32(*(float32x4_t *)(v50 + 16 * v94), *(float32x4_t *)(v50 + 16 * v94)), vaddq_f32(v51, v52));
    v54 = *(float *)v53.i32;
    v53.i32[0] = vextq_s8(v53, v53, 8uLL).u32[0];
    v55 = vcvtq_f64_f32(*(float32x2_t *)v53.i8);
    a3 = v88;
  }
  else
  {
    v86 = *(float32x4_t *)(v50 + 16 * v14);
    v87 = *(float32x4_t *)(v50 + 16 * v15);
    v56 = sub_239962518((uint64_t)v5, &v92);
    a3 = v88;
    v57 = 3.14159265 / ((double)v6 + -1.0);
    v95[0] = *(_DWORD *)sub_239962518((uint64_t)v5, (unsigned int *)(v56 + 4));
    v91 = 0u;
    v58 = 1;
    v59 = 0.0;
    do
    {
      v60 = sin(v57 * (double)v58);
      v61 = (unsigned int *)sub_239962518((uint64_t)v5, v95);
      v89 = *(float32x4_t *)(*(_QWORD *)(v9 + 40) + 16 * *(unsigned int *)(sub_239962518((uint64_t)v5, v61) + 12));
      v62 = sub_239962518((uint64_t)v5, v95);
      v63 = (unsigned int *)sub_239962518((uint64_t)v5, (unsigned int *)(v62 + 4));
      v64 = v60;
      v65 = (int8x16_t)vmulq_n_f32(v89, v64);
      v66 = *(float *)v65.i32;
      v65.i32[0] = vextq_s8(v65, v65, 8uLL).u32[0];
      v59 = v59 + v66;
      v91 = vaddq_f64(v91, vcvtq_f64_f32(*(float32x2_t *)v65.i8));
      v95[0] = *v63;
      ++v58;
    }
    while (v95[0] != v13);
    v67 = __sincos_stret(v57);
    v68 = v67.__cosval * 2.0 + -2.0;
    sinval = v67.__sinval;
    v70 = (int8x16_t)vmulq_n_f32(vaddq_f32(*(float32x4_t *)(v50 + 16 * v15), *(float32x4_t *)(v50 + 16 * v14)), sinval);
    v71 = *(float *)v70.i32;
    v70.i32[0] = vextq_s8(v70, v70, 8uLL).u32[0];
    v72 = vcvtq_f64_f32(*(float32x2_t *)v70.i8);
    v54 = v68 * v59 + v71;
    v55 = vaddq_f64(vmulq_n_f64(v91, v68), v72);
    v52 = v86;
    v51 = v87;
  }
  v73 = (int8x16_t)vsubq_f32(v52, v51);
  v74 = *(float *)&v73.i32[1];
  v75.i32[0] = vextq_s8(v73, v73, 8uLL).u32[0];
  v75.i32[1] = v73.i32[0];
  v76 = vcvtq_f64_f32(v75);
  v77 = (float64x2_t)vextq_s8((int8x16_t)v55, (int8x16_t)v55, 8uLL);
  v78 = vmuld_lane_f64(-v55.f64[1], v76, 1) + v54 * v74;
  v55.f64[1] = v54;
  v79 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v76.f64[0], 0);
  v79.f64[0] = v74;
  *(float32x2_t *)v49.f32 = vcvt_f32_f64(vmlaq_f64(vmulq_f64(v79, vnegq_f64(v55)), v76, v77));
  *(float *)&v80 = v78;
  v49.i64[1] = v80;
LABEL_42:
  *a3 = v49;
  v81 = vmulq_f32(v49, v49);
  v81.i32[3] = 0;
  v82 = vpaddq_f32(v81, v81);
  v83 = vpaddq_f32(v82, v82);
  if (v83.f32[0] <= 0.0)
    v84 = (float32x4_t)xmmword_239F02850;
  else
    v84 = vdivq_f32(v49, vsqrtq_f32(v83));
  *a3 = v84;
  return 1;
}

uint64_t sub_23995DFFC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, unsigned int a3@<W2>, float32x4_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t result;
  float32x4_t v9;
  unsigned int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  float v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  unsigned int v22;
  _DWORD v23[5];
  unsigned int v24;

  v24 = a3;
  *a4 = 0u;
  v7 = a1 + 104;
  sub_239962B1C((uint64_t)v23, (_QWORD *)(a1 + 104), &v24);
  result = sub_239962B44(v23);
  v9 = 0uLL;
  v22 = result;
  if ((_DWORD)result != -1)
  {
    v10 = result;
    do
    {
      while (1)
      {
        v11 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
        v13 = *v11;
        v12 = (std::__shared_weak_count *)v11[1];
        if (v12)
        {
          p_shared_owners = (unint64_t *)&v12->__shared_owners_;
          do
            v15 = __ldxr(p_shared_owners);
          while (__stxr(v15 + 1, p_shared_owners));
          do
            v16 = __ldaxr(p_shared_owners);
          while (__stlxr(v16 - 1, p_shared_owners));
          if (!v16)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        if (((*(_QWORD *)(*(_QWORD *)(v13 + 40) + (((unint64_t)v10 >> 3) & 0x1FFFFFF8)) >> v10) & 1) == 0)
          break;
        result = sub_239962B44(v23);
        v10 = result;
        v22 = result;
        if ((_DWORD)result == -1)
          goto LABEL_12;
      }
      v17 = sub_23992E268(a1, v22);
      *a4 = vaddq_f32(*a4, vmulq_n_f32(*(float32x4_t *)(*a2 + 16 * *(unsigned int *)(sub_239962518(v7, &v22) + 16)), v17));
      result = sub_239962B44(v23);
      v10 = result;
      v22 = result;
    }
    while ((_DWORD)result != -1);
LABEL_12:
    v9 = *a4;
  }
  v18 = vmulq_f32(v9, v9);
  v18.i32[3] = 0;
  v19 = vpaddq_f32(v18, v18);
  v20 = vpaddq_f32(v19, v19);
  if (v20.f32[0] <= 0.0)
    v21 = (float32x4_t)xmmword_239F02850;
  else
    v21 = vdivq_f32(v9, vsqrtq_f32(v20));
  *a4 = v21;
  return result;
}

uint64_t sub_23995E194(uint64_t a1, unsigned int a2, float32x4_t *a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t *v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  float32x4_t v19;
  uint64_t v20;
  uint64_t *v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  float32x4_t v27;
  uint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  int32x4_t v35;
  float32x4_t v36;
  uint64_t v37;
  uint64_t *v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x2_t v47;
  float32x4_t v48;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  int32x4_t v54;
  unsigned int v55;

  v55 = a2;
  v5 = (unsigned int *)operator new(0xCuLL);
  *(_QWORD *)v5 = -1;
  v5[2] = -1;
  v6 = (unsigned int *)sub_23996252C(a1 + 104, &v55);
  v7 = (unsigned int *)sub_239962518(a1 + 104, v6);
  *v5 = *(_DWORD *)(sub_239962518(a1 + 104, v7) + 12);
  v8 = (unsigned int *)sub_23996252C(a1 + 104, &v55);
  v9 = sub_239962518(a1 + 104, v8);
  v10 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)(v9 + 8));
  v5[1] = *(_DWORD *)(sub_239962518(a1 + 104, v10) + 12);
  v11 = (unsigned int *)sub_23996252C(a1 + 104, &v55);
  v5[2] = *(_DWORD *)(sub_239962518(a1 + 104, v11) + 12);
  v12 = v5[1];
  v13 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v15 = *v13;
  v14 = (std::__shared_weak_count *)v13[1];
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v17 = __ldxr(p_shared_owners);
    while (__stxr(v17 + 1, p_shared_owners));
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v19 = *(float32x4_t *)(*(_QWORD *)(v15 + 40) + 16 * v12);
  v20 = *v5;
  v21 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v23 = *v21;
  v22 = (std::__shared_weak_count *)v21[1];
  if (v22)
  {
    v24 = (unint64_t *)&v22->__shared_owners_;
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
    do
      v26 = __ldaxr(v24);
    while (__stlxr(v26 - 1, v24));
    if (!v26)
    {
      v52 = v19;
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
      v19 = v52;
    }
  }
  v27 = *(float32x4_t *)(*(_QWORD *)(v23 + 40) + 16 * v20);
  v28 = v5[2];
  v29 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v31 = *v29;
  v30 = (std::__shared_weak_count *)v29[1];
  if (v30)
  {
    v32 = (unint64_t *)&v30->__shared_owners_;
    do
      v33 = __ldxr(v32);
    while (__stxr(v33 + 1, v32));
    do
      v34 = __ldaxr(v32);
    while (__stlxr(v34 - 1, v32));
    if (!v34)
    {
      v50 = v27;
      v53 = v19;
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
      v27 = v50;
      v19 = v53;
    }
  }
  v35 = (int32x4_t)vsubq_f32(v19, v27);
  v36 = *(float32x4_t *)(*(_QWORD *)(v31 + 40) + 16 * v28);
  v37 = *v5;
  v38 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v40 = *v38;
  v39 = (std::__shared_weak_count *)v38[1];
  if (v39)
  {
    v41 = (unint64_t *)&v39->__shared_owners_;
    do
      v42 = __ldxr(v41);
    while (__stxr(v42 + 1, v41));
    do
      v43 = __ldaxr(v41);
    while (__stlxr(v43 - 1, v41));
    if (!v43)
    {
      v51 = v36;
      v54 = v35;
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
      v36 = v51;
      v35 = v54;
    }
  }
  v44 = (int32x4_t)vsubq_f32(v36, *(float32x4_t *)(*(_QWORD *)(v40 + 40) + 16 * v37));
  v45 = vmlsq_f32(vmulq_f32((float32x4_t)vzip2q_s32(vzip1q_s32(v35, (int32x4_t)vextq_s8((int8x16_t)v35, (int8x16_t)v35, 0xCuLL)), v35), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v44, (int8x16_t)v44, 4uLL), v44)), (float32x4_t)vzip2q_s32(vzip1q_s32(v44, (int32x4_t)vextq_s8((int8x16_t)v44, (int8x16_t)v44, 0xCuLL)), v44), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v35, (int8x16_t)v35, 4uLL), v35));
  v46 = vmulq_f32(v45, v45);
  v46.i32[3] = 0;
  v47 = (float32x2_t)vpaddq_f32(v46, v46).u64[0];
  v47.f32[0] = sqrtf(vaddv_f32(v47));
  if (v47.f32[0] <= 0.0)
    v48 = (float32x4_t)xmmword_239F02850;
  else
    v48 = vdivq_f32(v45, (float32x4_t)vdupq_lane_s32((int32x2_t)v47, 0));
  *a3 = v48;
  operator delete(v5);
  return 1;
}

void sub_23995E480(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_23995E494@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, float32x4_t *a3@<X8>)
{
  a3->i64[0] = 0;
  a3->i64[1] = 0;
  return sub_23995E194(a1, a2, a3);
}

uint64_t sub_23995E4A4(uint64_t result)
{
  uint64_t v1;

  v1 = result;
  *(_QWORD *)result = off_250AF0C30;
  if (*(char *)(result + 31) < 0)
  {
    operator delete(*(void **)(result + 8));
    return v1;
  }
  return result;
}

uint64_t sub_23995E4F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::string *v9;
  std::__fs::filesystem::path::__string_view v10;
  void **p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v12;
  std::basic_string_view<_CharT, _Traits>::size_type v13;
  void **v14;
  int v15;
  _DWORD *v16;
  char v17;
  std::runtime_error *exception;
  int v20;
  const std::string::value_type *v21;
  std::string::size_type v22;
  std::string *v23;
  __int128 v24;
  std::string v25;
  std::string v26;
  void *__p[2];
  uint64_t v28;
  void *v29[2];
  uint64_t v30;
  void *v31[2];
  uint64_t v32;
  std::__fs::filesystem::path v33;
  void **v34;
  std::basic_string_view<_CharT, _Traits>::size_type v35;
  _BYTE v36[7];
  char v37;
  void **__dst;
  std::basic_string_view<_CharT, _Traits>::size_type size;
  unint64_t v40;

  v4 = operator new(0x30uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_250ADF208;
  v4[4] = 0;
  v4[5] = 0;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v4[3] = 0;
  *(_QWORD *)(a1 + 8) = v4 + 3;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  memset(&v33, 0, sizeof(v33));
  v8 = *(unsigned __int8 *)(a2 + 23);
  if ((v8 & 0x80u) == 0)
    v9 = (std::string *)a2;
  else
    v9 = *(std::string **)a2;
  if ((v8 & 0x80u) != 0)
    v8 = *(_QWORD *)(a2 + 8);
  sub_23948900C(&v33.__pn_, v9, (std::string *)((char *)v9 + v8));
  v10 = std::__fs::filesystem::path::__extension(&v33);
  if (v10.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  if (v10.__size_ >= 0x17)
  {
    v12 = (v10.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10.__size_ | 7) != 0x17)
      v12 = v10.__size_ | 7;
    v13 = v12 + 1;
    p_dst = (void **)operator new(v12 + 1);
    size = v10.__size_;
    v40 = v13 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_18;
  }
  HIBYTE(v40) = v10.__size_;
  p_dst = (void **)&__dst;
  if (v10.__size_)
LABEL_18:
    memmove(p_dst, v10.__data_, v10.__size_);
  *((_BYTE *)p_dst + v10.__size_) = 0;
  v14 = __dst;
  LODWORD(v26.__r_.__value_.__l.__data_) = v40;
  *(_DWORD *)((char *)v26.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v40 + 3);
  if (SHIBYTE(v40) < 0)
  {
    sub_23941A7F8(&v34, __dst, size);
    operator delete(v14);
    if ((SHIBYTE(v33.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_21:
      __dst = 0;
      size = 0;
      v40 = 0;
      v15 = v37;
      if ((v37 & 0x80000000) == 0)
        goto LABEL_22;
LABEL_27:
      if (v35 == 4)
      {
        v16 = v34;
        if (*(_DWORD *)v34 != 1920492846)
          goto LABEL_29;
LABEL_36:
        if (*(char *)(a2 + 23) < 0)
        {
          sub_23941A7F8(v31, *(void **)a2, *(_QWORD *)(a2 + 8));
        }
        else
        {
          *(_OWORD *)v31 = *(_OWORD *)a2;
          v32 = *(_QWORD *)(a2 + 16);
        }
        v17 = sub_239944BB4(v31, *(_QWORD *)(a1 + 8));
        if (SHIBYTE(v32) < 0)
          operator delete(v31[0]);
        MEMORY[0x23B83DBFC](&__dst, "LoadExr");
        goto LABEL_48;
      }
LABEL_30:
      if (*(char *)(a2 + 23) < 0)
      {
        sub_23941A7F8(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
      }
      else
      {
        *(_OWORD *)__p = *(_OWORD *)a2;
        v28 = *(_QWORD *)(a2 + 16);
      }
      v17 = sub_239944934(__p, *(_QWORD *)(a1 + 8));
      if (SHIBYTE(v28) < 0)
        operator delete(__p[0]);
      MEMORY[0x23B83DBFC](&__dst, "LoadJpeg");
      goto LABEL_48;
    }
  }
  else
  {
    v34 = __dst;
    v35 = size;
    *(_DWORD *)v36 = v26.__r_.__value_.__l.__data_;
    *(_DWORD *)&v36[3] = *(_DWORD *)((char *)v26.__r_.__value_.__r.__words + 3);
    v37 = HIBYTE(v40);
    if ((SHIBYTE(v33.__pn_.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_21;
  }
  operator delete(v33.__pn_.__r_.__value_.__l.__data_);
  __dst = 0;
  size = 0;
  v40 = 0;
  v15 = v37;
  if (v37 < 0)
    goto LABEL_27;
LABEL_22:
  if (v15 != 4)
    goto LABEL_30;
  if ((_DWORD)v34 == 1920492846)
    goto LABEL_36;
  v16 = &v34;
LABEL_29:
  if (*v16 != 1735290926)
    goto LABEL_30;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_23941A7F8(v29, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)a2;
    v30 = *(_QWORD *)(a2 + 16);
  }
  v17 = sub_239944934(v29, *(_QWORD *)(a1 + 8));
  if (SHIBYTE(v30) < 0)
    operator delete(v29[0]);
  MEMORY[0x23B83DBFC](&__dst, "LoadPng");
LABEL_48:
  if ((v17 & 1) == 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_23941A4FC(&v25, " failed ");
    sub_23995EB04(&v25, (uint64_t)&__dst, &v26);
    v20 = *(char *)(a2 + 23);
    if (v20 >= 0)
      v21 = (const std::string::value_type *)a2;
    else
      v21 = *(const std::string::value_type **)a2;
    if (v20 >= 0)
      v22 = *(unsigned __int8 *)(a2 + 23);
    else
      v22 = *(_QWORD *)(a2 + 8);
    v23 = std::string::append(&v26, v21, v22);
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v33.__pn_.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__pn_.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, &v33.__pn_);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *(_WORD *)(a1 + 4) = 257;
  if (SHIBYTE(v40) < 0)
  {
    operator delete(__dst);
    if ((v37 & 0x80000000) == 0)
      return 1;
LABEL_53:
    operator delete(v34);
    return 1;
  }
  if (v37 < 0)
    goto LABEL_53;
  return 1;
}

void sub_23995E908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  uint64_t v47;

  if (a33 < 0)
    operator delete(__p);
  if (*(char *)(v47 - 65) < 0)
    operator delete(*(void **)(v47 - 88));
  if (*(char *)(v47 - 89) < 0)
    operator delete(*(void **)(v47 - 112));
  _Unwind_Resume(exception_object);
}

uint64_t sub_23995EA34(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  __int128 v5;

  *(_DWORD *)a1 = *a3;
  *(_WORD *)(a1 + 4) = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 24), *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    v5 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 24) = v5;
  }
  sub_23995E4F8(a1, a2);
  return a1;
}

void sub_23995EAA8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_23995EB04@<Q0>(std::string *this@<X1>, uint64_t a2@<X0>, std::string *a3@<X8>)
{
  int v4;
  const std::string::value_type *v5;
  std::string::size_type v6;
  __n128 *v7;
  __n128 result;

  v4 = *(char *)(a2 + 23);
  if (v4 >= 0)
    v5 = (const std::string::value_type *)a2;
  else
    v5 = *(const std::string::value_type **)a2;
  if (v4 >= 0)
    v6 = *(unsigned __int8 *)(a2 + 23);
  else
    v6 = *(_QWORD *)(a2 + 8);
  v7 = (__n128 *)std::string::insert(this, 0, v5, v6);
  result = *v7;
  *a3 = *(std::string *)v7->n128_u8;
  v7->n128_u64[0] = 0;
  v7->n128_u64[1] = 0;
  v7[1].n128_u64[0] = 0;
  return result;
}

_QWORD *sub_23995EB5C(_QWORD *a1)
{
  *a1 = &off_250AF0CA0;
  sub_23995EBB0(a1);
  sub_23995F4F8((uint64_t)(a1 + 10));
  sub_23995F4F8((uint64_t)(a1 + 7));
  sub_23995F4F8((uint64_t)(a1 + 4));
  sub_23995F4F8((uint64_t)(a1 + 1));
  return a1;
}

void sub_23995EBB0(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;

  v2 = (_QWORD *)a1[1];
  v3 = (_QWORD *)a1[2];
  while (v2 != v3)
  {
    if (*v2)
    {
      v4 = (std::__shared_weak_count *)v2[1];
      *v2 = 0;
      v2[1] = 0;
      if (v4)
      {
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v6 = __ldaxr(p_shared_owners);
        while (__stlxr(v6 - 1, p_shared_owners));
        if (!v6)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
      }
    }
    v2 += 2;
  }
  v7 = (_QWORD *)a1[4];
  v8 = (_QWORD *)a1[5];
  while (v7 != v8)
  {
    if (*v7)
    {
      v9 = (std::__shared_weak_count *)v7[1];
      *v7 = 0;
      v7[1] = 0;
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    v7 += 2;
  }
  v12 = (_QWORD *)a1[7];
  v13 = (_QWORD *)a1[8];
  while (v12 != v13)
  {
    if (*v12)
    {
      v14 = (std::__shared_weak_count *)v12[1];
      *v12 = 0;
      v12[1] = 0;
      if (v14)
      {
        v15 = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldaxr(v15);
        while (__stlxr(v16 - 1, v15));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
    }
    v12 += 2;
  }
  v17 = (_QWORD *)a1[10];
  v18 = (_QWORD *)a1[11];
  while (v17 != v18)
  {
    if (*v17)
    {
      v19 = (std::__shared_weak_count *)v17[1];
      *v17 = 0;
      v17[1] = 0;
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldaxr(v20);
        while (__stlxr(v21 - 1, v20));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
    }
    v17 += 2;
  }
}

_QWORD *sub_23995ED44(_QWORD *a1)
{
  *a1 = &off_250AF0CA0;
  sub_23995EBB0(a1);
  sub_23995F4F8((uint64_t)(a1 + 10));
  sub_23995F4F8((uint64_t)(a1 + 7));
  sub_23995F4F8((uint64_t)(a1 + 4));
  sub_23995F4F8((uint64_t)(a1 + 1));
  return a1;
}

void sub_23995ED98(_QWORD *a1)
{
  *a1 = &off_250AF0CA0;
  sub_23995EBB0(a1);
  sub_23995F4F8((uint64_t)(a1 + 10));
  sub_23995F4F8((uint64_t)(a1 + 7));
  sub_23995F4F8((uint64_t)(a1 + 4));
  sub_23995F4F8((uint64_t)(a1 + 1));
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_23995EDFC(_QWORD *a1, uint64_t **a2)
{
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t **v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t **v18;
  uint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t **v29;
  uint64_t v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t **v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t **v51;
  _QWORD *v52;

  v6 = (uint64_t *)a1[1];
  v5 = (uint64_t *)a1[2];
  v4 = a1 + 1;
  v7 = a2 + 1;
  if (v6 != v5)
  {
    v8 = ((char *)a2[2] - (char *)a2[1]) >> 4;
    do
    {
      v9 = *v6;
      v10 = (std::__shared_weak_count *)v6[1];
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
      }
      if (v9)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 24))(v9, v8);
      if (v10)
      {
        v13 = (unint64_t *)&v10->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      v6 += 2;
    }
    while (v6 != v5);
  }
  v17 = (uint64_t *)a1[4];
  v15 = (uint64_t *)a1[5];
  v16 = a1 + 4;
  v18 = a2 + 4;
  if (v17 != v15)
  {
    v19 = ((char *)a2[5] - (char *)a2[4]) >> 4;
    do
    {
      v20 = *v17;
      v21 = (std::__shared_weak_count *)v17[1];
      if (v21)
      {
        v22 = (unint64_t *)&v21->__shared_owners_;
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
      }
      if (v20)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v20 + 24))(v20, v19);
      if (v21)
      {
        v24 = (unint64_t *)&v21->__shared_owners_;
        do
          v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      v17 += 2;
    }
    while (v17 != v15);
  }
  v51 = v7;
  v52 = v4;
  v27 = (uint64_t *)a1[7];
  v26 = (uint64_t *)a1[8];
  v28 = a1 + 7;
  v29 = a2 + 7;
  if (v27 != v26)
  {
    v30 = ((char *)a2[8] - (char *)a2[7]) >> 4;
    do
    {
      v31 = *v27;
      v32 = (std::__shared_weak_count *)v27[1];
      if (v32)
      {
        v33 = (unint64_t *)&v32->__shared_owners_;
        do
          v34 = __ldxr(v33);
        while (__stxr(v34 + 1, v33));
      }
      if (v31)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v31 + 24))(v31, v30);
      if (v32)
      {
        v35 = (unint64_t *)&v32->__shared_owners_;
        do
          v36 = __ldaxr(v35);
        while (__stlxr(v36 - 1, v35));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
        }
      }
      v27 += 2;
    }
    while (v27 != v26);
  }
  v39 = (uint64_t *)a1[10];
  v38 = (uint64_t *)a1[11];
  v37 = a1 + 10;
  v42 = a2[10];
  v41 = a2 + 10;
  v40 = v42;
  if (v39 != v38)
  {
    v43 = ((char *)v41[1] - (char *)v40) >> 4;
    do
    {
      v44 = *v39;
      v45 = (std::__shared_weak_count *)v39[1];
      if (v45)
      {
        v46 = (unint64_t *)&v45->__shared_owners_;
        do
          v47 = __ldxr(v46);
        while (__stxr(v47 + 1, v46));
      }
      if (v44)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v44 + 24))(v44, v43);
      if (v45)
      {
        v48 = (unint64_t *)&v45->__shared_owners_;
        do
          v49 = __ldaxr(v48);
        while (__stlxr(v49 - 1, v48));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
      v39 += 2;
    }
    while (v39 != v38);
  }
  sub_23995F178(v52, v51);
  sub_23995F178(v16, v18);
  sub_23995F178(v28, v29);
  return sub_23995F178(v37, v41);
}

void sub_23995F0D8(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_23995F178(_QWORD *a1, uint64_t **a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  std::__shared_weak_count *v11;
  char *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __int128 *v20;
  char *v21;
  _QWORD *v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  char *v29;
  void *v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  _QWORD *i;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __int128 v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  void *__p;
  char *v43;
  unint64_t v44;

  __p = 0;
  v43 = 0;
  v44 = 0;
  v3 = *a2;
  v4 = a2[1];
  while (v3 != v4)
  {
    v5 = *v3;
    v6 = (std::__shared_weak_count *)v3[1];
    v40 = *v3;
    v41 = v6;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      if (v5)
      {
LABEL_12:
        (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)v5 + 80))(&v39);
      }
      else
      {
        *(_QWORD *)&v39 = 0;
        *((_QWORD *)&v39 + 1) = v6;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
      }
      v10 = v43;
      if ((unint64_t)v43 < v44)
        goto LABEL_14;
      goto LABEL_17;
    }
    if (v5)
      goto LABEL_12;
    v39 = 0uLL;
    v10 = v43;
    if ((unint64_t)v43 < v44)
    {
LABEL_14:
      *(_OWORD *)v10 = v39;
      v43 = v10 + 16;
      v11 = v41;
      if (!v41)
        goto LABEL_2;
      goto LABEL_22;
    }
LABEL_17:
    v12 = sub_2394E46BC((char **)&__p, (uint64_t)&v39);
    v13 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
    v43 = v12;
    if (!*((_QWORD *)&v39 + 1))
      goto LABEL_21;
    v14 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
      v11 = v41;
      if (!v41)
        goto LABEL_2;
    }
    else
    {
LABEL_21:
      v11 = v41;
      if (!v41)
        goto LABEL_2;
    }
LABEL_22:
    v16 = (unint64_t *)&v11->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
LABEL_2:
    v3 += 2;
  }
  v18 = (_QWORD *)*a1;
  v19 = (_QWORD *)a1[1];
  if ((_QWORD *)*a1 != v19)
  {
    do
    {
      if (*v18)
      {
        v23 = (std::__shared_weak_count *)v18[1];
        *v18 = 0;
        v18[1] = 0;
        if (v23)
        {
          v24 = (unint64_t *)&v23->__shared_owners_;
          do
            v25 = __ldaxr(v24);
          while (__stlxr(v25 - 1, v24));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
            std::__shared_weak_count::__release_weak(v23);
          }
        }
      }
      v18 += 2;
    }
    while (v18 != v19);
    v18 = (_QWORD *)*a1;
    for (i = (_QWORD *)a1[1]; i != v18; i -= 2)
    {
      v35 = (std::__shared_weak_count *)*(i - 1);
      if (v35)
      {
        v36 = (unint64_t *)&v35->__shared_owners_;
        do
          v37 = __ldaxr(v36);
        while (__stlxr(v37 - 1, v36));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
    }
  }
  a1[1] = v18;
  sub_23995F608((uint64_t)a1, (v43 - (_BYTE *)__p) >> 4);
  v20 = (__int128 *)__p;
  v21 = v43;
  if (__p != v43)
  {
    v22 = (_QWORD *)a1[1];
    do
    {
      while ((unint64_t)v22 >= a1[2])
      {
        v22 = sub_23951E0F0((uint64_t)a1, v20);
        a1[1] = v22;
        if (++v20 == (__int128 *)v21)
          goto LABEL_44;
      }
      *v22 = *(_QWORD *)v20;
      v26 = *((_QWORD *)v20 + 1);
      v22[1] = v26;
      if (v26)
      {
        v27 = (unint64_t *)(v26 + 8);
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
      }
      v22 += 2;
      a1[1] = v22;
      ++v20;
    }
    while (v20 != (__int128 *)v21);
LABEL_44:
    v20 = (__int128 *)__p;
  }
  if (v20)
  {
    v29 = v43;
    v30 = v20;
    if (v43 != (char *)v20)
    {
      do
      {
        v31 = (std::__shared_weak_count *)*((_QWORD *)v29 - 1);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldaxr(v32);
          while (__stlxr(v33 - 1, v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        v29 -= 16;
      }
      while (v29 != (char *)v20);
      v30 = __p;
    }
    v43 = (char *)v20;
    operator delete(v30);
  }
  return a1;
}

void sub_23995F488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_2394631DC((void **)va);
  _Unwind_Resume(a1);
}

void sub_23995F4A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void *a14)
{
  sub_239416DA0((uint64_t)&a9);
  sub_239416DA0((uint64_t)&a12);
  sub_2394631DC(&a14);
  _Unwind_Resume(a1);
}

void sub_23995F4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v5;
  va_list va;
  uint64_t v7;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  sub_239416DA0((uint64_t)va);
  sub_2394631DC((void **)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_23995F4E0()
{
  return 0;
}

uint64_t sub_23995F4E8()
{
  return 0;
}

uint64_t sub_23995F4F0()
{
  return 0;
}

uint64_t sub_23995F4F8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD **)(a1 + 8);
  if (*(_QWORD **)a1 == v3)
  {
    if (!v2)
      return a1;
  }
  else
  {
    do
    {
      if (*v2)
      {
        v5 = (std::__shared_weak_count *)v2[1];
        *v2 = 0;
        v2[1] = 0;
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
      }
      v2 += 2;
    }
    while (v2 != v3);
    v2 = *(_QWORD **)a1;
    if (!*(_QWORD *)a1)
      return a1;
  }
  v8 = *(_QWORD **)(a1 + 8);
  v9 = v2;
  if (v8 != v2)
  {
    do
    {
      v10 = (std::__shared_weak_count *)*(v8 - 1);
      if (v10)
      {
        v11 = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldaxr(v11);
        while (__stlxr(v12 - 1, v11));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      v8 -= 2;
    }
    while (v8 != v2);
    v9 = *(_QWORD **)a1;
  }
  *(_QWORD *)(a1 + 8) = v2;
  operator delete(v9);
  return a1;
}

void sub_23995F608(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  __int128 v10;
  char *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;

  v2 = *(char **)a1;
  if (a2 > (uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 4)
  {
    if (a2 >> 60)
      sub_2394189F8();
    v4 = *(char **)(a1 + 8);
    v5 = 16 * a2;
    v6 = (char *)operator new(16 * a2);
    v7 = &v6[v5];
    v8 = &v6[v4 - v2];
    if (v4 == v2)
    {
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v2)
LABEL_16:
        operator delete(v2);
    }
    else
    {
      v9 = &v6[v4 - v2];
      do
      {
        v10 = *((_OWORD *)v4 - 1);
        v4 -= 16;
        *((_OWORD *)v9 - 1) = v10;
        v9 -= 16;
        *(_QWORD *)v4 = 0;
        *((_QWORD *)v4 + 1) = 0;
      }
      while (v4 != v2);
      v11 = *(char **)a1;
      v2 = *(char **)(a1 + 8);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      if (v2 != v11)
      {
        do
        {
          v12 = (std::__shared_weak_count *)*((_QWORD *)v2 - 1);
          if (v12)
          {
            p_shared_owners = (unint64_t *)&v12->__shared_owners_;
            do
              v14 = __ldaxr(p_shared_owners);
            while (__stlxr(v14 - 1, p_shared_owners));
            if (!v14)
            {
              ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
              std::__shared_weak_count::__release_weak(v12);
            }
          }
          v2 -= 16;
        }
        while (v2 != v11);
        v2 = v11;
      }
      if (v2)
        goto LABEL_16;
    }
  }
}

uint64_t sub_23995F710(uint64_t a1)
{
  _DWORD *v2;
  const void *v3;
  size_t v4;
  size_t v5;
  void **p_dst;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  size_t v10;
  size_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  void **__dst;
  size_t v17;
  unint64_t v18;

  *(_OWORD *)(a1 + 104) = 0u;
  *(_QWORD *)(a1 + 168) = 0;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_QWORD *)a1 = &off_250AF0CD8;
  *(_QWORD *)(a1 + 176) = -1;
  v2 = (_DWORD *)(a1 + 176);
  v3 = (const void *)qword_2569343F0;
  v4 = strlen((const char *)qword_2569343F0);
  if (v4 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (void **)operator new(v7 + 1);
    v17 = v5;
    v18 = v8 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v18) = v4;
  p_dst = (void **)&__dst;
  if (v4)
LABEL_8:
    memmove(p_dst, v3, v5);
  *((_BYTE *)p_dst + v5) = 0;
  sub_239930D50((_QWORD *)a1, v2, (uint64_t)&__dst);
  if (SHIBYTE(v18) < 0)
    operator delete(__dst);
  v9 = (const void *)qword_256934410;
  v10 = strlen((const char *)qword_256934410);
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    v12 = (void **)operator new(v13 + 1);
    v17 = v11;
    v18 = v14 | 0x8000000000000000;
    __dst = v12;
    goto LABEL_18;
  }
  HIBYTE(v18) = v10;
  v12 = (void **)&__dst;
  if (v10)
LABEL_18:
    memmove(v12, v9, v11);
  *((_BYTE *)v12 + v11) = 0;
  sub_23992B82C((_QWORD *)a1, (_DWORD *)(a1 + 180), (uint64_t)&__dst);
  if (SHIBYTE(v18) < 0)
    operator delete(__dst);
  return a1;
}

void sub_23995F8EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _QWORD *v15;
  void **v16;

  if (a15 < 0)
  {
    operator delete(__p);
    sub_23995EB5C(v15);
    sub_23995F954(v16);
    _Unwind_Resume(a1);
  }
  sub_23995EB5C(v15);
  sub_23995F954(v16);
  _Unwind_Resume(a1);
}

void **sub_23995F954(void **a1)
{
  void *v2;
  void *v3;
  void *v4;

  sub_239962124(a1);
  v2 = a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  v3 = a1[3];
  if (v3)
  {
    a1[4] = v3;
    operator delete(v3);
  }
  v4 = *a1;
  if (*a1)
  {
    a1[1] = v4;
    operator delete(v4);
  }
  return a1;
}

char **sub_23995F9AC(char **result, uint64_t a2)
{
  char **v3;

  if (result != (char **)a2)
  {
    v3 = result;
    sub_23995FB50(result);
    sub_239962140(v3 + 13, (char **)(a2 + 104));
    result = (char **)sub_23995EDFC(v3, (uint64_t **)a2);
    *((_DWORD *)v3 + 44) = *(_DWORD *)(a2 + 176);
    *((_DWORD *)v3 + 45) = *(_DWORD *)(a2 + 180);
  }
  return result;
}

uint64_t sub_23995FA00(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  void **v12;
  void *v13;
  void *v14;
  void *v15;

  *(_QWORD *)a1 = &off_250AF0CD8;
  v2 = *(unsigned int *)(a1 + 176);
  if ((_DWORD)v2 != -1)
  {
    v3 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 16 * v2);
    v4 = (std::__shared_weak_count *)v3[1];
    *v3 = 0;
    v3[1] = 0;
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  *(_DWORD *)(a1 + 176) = -1;
  v7 = *(unsigned int *)(a1 + 180);
  if ((_DWORD)v7 != -1)
  {
    v8 = (_QWORD *)(*(_QWORD *)(a1 + 32) + 16 * v7);
    v9 = (std::__shared_weak_count *)v8[1];
    *v8 = 0;
    v8[1] = 0;
    if (v9)
    {
      v10 = (unint64_t *)&v9->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  *(_DWORD *)(a1 + 180) = -1;
  sub_23995EB5C((_QWORD *)a1);
  v12 = (void **)(a1 + 104);
  sub_239962124((_QWORD *)(a1 + 104));
  v13 = *(void **)(a1 + 152);
  if (v13)
  {
    *(_QWORD *)(a1 + 160) = v13;
    operator delete(v13);
  }
  v14 = *(void **)(a1 + 128);
  if (v14)
  {
    *(_QWORD *)(a1 + 136) = v14;
    operator delete(v14);
  }
  v15 = *v12;
  if (*v12)
  {
    *(_QWORD *)(a1 + 112) = v15;
    operator delete(v15);
  }
  return a1;
}

void sub_23995FB2C(uint64_t a1)
{
  sub_23995FA00(a1);
  JUMPOUT(0x23B83E31CLL);
}

void sub_23995FB50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;

  sub_239962124(a1 + 13);
  v2 = (*(uint64_t (**)(_QWORD *))(*a1 + 16))(a1);
  v3 = (uint64_t *)a1[1];
  v4 = (uint64_t *)a1[2];
  if (v3 != v4)
  {
    v5 = v2;
    do
    {
      v6 = *v3;
      v7 = (std::__shared_weak_count *)v3[1];
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
      }
      if (v6)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 32))(v6, v5);
      if (v7)
      {
        v10 = (unint64_t *)&v7->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
      }
      v3 += 2;
    }
    while (v3 != v4);
  }
  v12 = (*(uint64_t (**)(_QWORD *))(*a1 + 24))(a1);
  v13 = (uint64_t *)a1[4];
  v14 = (uint64_t *)a1[5];
  if (v13 != v14)
  {
    v15 = v12;
    do
    {
      v16 = *v13;
      v17 = (std::__shared_weak_count *)v13[1];
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
      }
      if (v16)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v16 + 32))(v16, v15);
      if (v17)
      {
        v20 = (unint64_t *)&v17->__shared_owners_;
        do
          v21 = __ldaxr(v20);
        while (__stlxr(v21 - 1, v20));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      v13 += 2;
    }
    while (v13 != v14);
  }
  v22 = (*(uint64_t (**)(_QWORD *))(*a1 + 32))(a1);
  v23 = (uint64_t *)a1[7];
  v24 = (uint64_t *)a1[8];
  if (v23 != v24)
  {
    v25 = v22;
    do
    {
      v26 = *v23;
      v27 = (std::__shared_weak_count *)v23[1];
      if (v27)
      {
        v28 = (unint64_t *)&v27->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
      }
      if (v26)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v26 + 32))(v26, v25);
      if (v27)
      {
        v30 = (unint64_t *)&v27->__shared_owners_;
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      v23 += 2;
    }
    while (v23 != v24);
  }
  v33 = (_QWORD *)a1[10];
  v32 = (_QWORD *)a1[11];
  while (v33 != v32)
  {
    if (*v33)
      (*(void (**)(_QWORD))(*(_QWORD *)*v33 + 40))(*v33);
    v33 += 2;
  }
}

void sub_23995FD78(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_23995FDF8(_QWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  sub_239962A78((uint64_t)(a1 + 13), a2);
  v3 = (*(uint64_t (**)(_QWORD *))(*a1 + 16))(a1);
  v4 = (uint64_t *)a1[1];
  v5 = (uint64_t *)a1[2];
  if (v4 != v5)
  {
    v6 = v3;
    do
    {
      v7 = *v4;
      v8 = (std::__shared_weak_count *)v4[1];
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldxr(p_shared_owners);
        while (__stxr(v10 + 1, p_shared_owners));
      }
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 32))(v7, v6);
      if (v8)
      {
        v11 = (unint64_t *)&v8->__shared_owners_;
        do
          v12 = __ldaxr(v11);
        while (__stlxr(v12 - 1, v11));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v4 += 2;
    }
    while (v4 != v5);
  }
}

void sub_23995FEBC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void sub_23995FED4(_QWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  sub_239962AA4((uint64_t)(a1 + 13), a2);
  v3 = (*(uint64_t (**)(_QWORD *))(*a1 + 24))(a1);
  v4 = (uint64_t *)a1[4];
  v5 = (uint64_t *)a1[5];
  if (v4 != v5)
  {
    v6 = v3;
    do
    {
      v7 = *v4;
      v8 = (std::__shared_weak_count *)v4[1];
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldxr(p_shared_owners);
        while (__stxr(v10 + 1, p_shared_owners));
      }
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 32))(v7, v6);
      if (v8)
      {
        v11 = (unint64_t *)&v8->__shared_owners_;
        do
          v12 = __ldaxr(v11);
        while (__stlxr(v12 - 1, v11));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v4 += 2;
    }
    while (v4 != v5);
  }
}

void sub_23995FF98(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

void sub_23995FFB0(_QWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  sub_239962AE8((uint64_t)(a1 + 13), a2);
  v3 = (*(uint64_t (**)(_QWORD *))(*a1 + 32))(a1);
  v4 = (uint64_t *)a1[7];
  v5 = (uint64_t *)a1[8];
  if (v4 != v5)
  {
    v6 = v3;
    do
    {
      v7 = *v4;
      v8 = (std::__shared_weak_count *)v4[1];
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldxr(p_shared_owners);
        while (__stxr(v10 + 1, p_shared_owners));
      }
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 32))(v7, v6);
      if (v8)
      {
        v11 = (unint64_t *)&v8->__shared_owners_;
        do
          v12 = __ldaxr(v11);
        while (__stlxr(v12 - 1, v11));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v4 += 2;
    }
    while (v4 != v5);
  }
}

void sub_239960074(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

uint64_t sub_23996008C(uint64_t a1)
{
  char *v2;
  size_t v3;
  size_t v4;
  void *p_p;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  char *v10;
  size_t v11;
  size_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  void *__p;
  size_t v28;
  unint64_t v29;
  unsigned int v30;
  _QWORD v31[2];

  v2 = off_256934408[0];
  v3 = strlen(off_256934408[0]);
  if (v3 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_33;
  v4 = v3;
  if (v3 >= 0x17)
  {
    v6 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17)
      v6 = v3 | 7;
    v7 = v6 + 1;
    p_p = operator new(v6 + 1);
    v28 = v4;
    v29 = v7 | 0x8000000000000000;
    __p = p_p;
    goto LABEL_8;
  }
  HIBYTE(v29) = v3;
  p_p = &__p;
  if (v3)
LABEL_8:
    memmove(p_p, v2, v4);
  *((_BYTE *)p_p + v4) = 0;
  v31[0] = 0;
  v31[1] = 0;
  v8 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)v31, (unsigned __int8 *)&__p);
  v9 = v8;
  v30 = v8;
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (v9 != -1)
      goto LABEL_23;
  }
  else if (v8 != -1)
  {
    goto LABEL_23;
  }
  v10 = off_256934408[0];
  v11 = strlen(off_256934408[0]);
  if (v11 > 0x7FFFFFFFFFFFFFF7)
LABEL_33:
    sub_23941A5AC();
  v12 = v11;
  if (v11 >= 0x17)
  {
    v14 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v14 = v11 | 7;
    v15 = v14 + 1;
    v13 = operator new(v14 + 1);
    v28 = v12;
    v29 = v15 | 0x8000000000000000;
    __p = v13;
    goto LABEL_20;
  }
  HIBYTE(v29) = v11;
  v13 = &__p;
  if (v11)
LABEL_20:
    memmove(v13, v10, v12);
  *((_BYTE *)v13 + v12) = 0;
  sub_239930D50((_QWORD *)a1, &v30, (uint64_t)&__p);
  if (SHIBYTE(v29) < 0)
    operator delete(__p);
LABEL_23:
  v16 = *(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104);
  if (v16)
  {
    v17 = 0;
    v18 = 0;
    v19 = v16 >> 2;
    do
    {
      v20 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * v30);
      v22 = *v20;
      v21 = (std::__shared_weak_count *)v20[1];
      if (v21)
      {
        p_shared_owners = (unint64_t *)&v21->__shared_owners_;
        do
          v24 = __ldxr(p_shared_owners);
        while (__stxr(v24 + 1, p_shared_owners));
        do
          v25 = __ldaxr(p_shared_owners);
        while (__stlxr(v25 - 1, p_shared_owners));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      sub_23995D9F4(a1, v17, (float32x4_t *)(*(_QWORD *)(v22 + 40) + 16 * v17));
      v17 = ++v18;
    }
    while (v19 > v18);
  }
  return 1;
}

void sub_2399602C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399602E4(uint64_t a1)
{
  return (uint64_t)(*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2;
}

uint64_t sub_2399602F4(uint64_t a1)
{
  char *v2;
  size_t v3;
  size_t v4;
  void *p_p;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  char *v10;
  size_t v11;
  size_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  void *__p;
  size_t v28;
  unint64_t v29;
  unsigned int v30;
  _QWORD v31[2];

  v2 = off_256934430[0];
  v3 = strlen(off_256934430[0]);
  if (v3 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_33;
  v4 = v3;
  if (v3 >= 0x17)
  {
    v6 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17)
      v6 = v3 | 7;
    v7 = v6 + 1;
    p_p = operator new(v6 + 1);
    v28 = v4;
    v29 = v7 | 0x8000000000000000;
    __p = p_p;
    goto LABEL_8;
  }
  HIBYTE(v29) = v3;
  p_p = &__p;
  if (v3)
LABEL_8:
    memmove(p_p, v2, v4);
  *((_BYTE *)p_p + v4) = 0;
  v31[0] = 0;
  v31[1] = 0;
  v8 = sub_2394E5F40((uint64_t **)(a1 + 56), (uint64_t)v31, (unsigned __int8 *)&__p);
  v9 = v8;
  v30 = v8;
  if (SHIBYTE(v29) < 0)
  {
    operator delete(__p);
    if (v9 != -1)
      goto LABEL_23;
  }
  else if (v8 != -1)
  {
    goto LABEL_23;
  }
  v10 = off_256934430[0];
  v11 = strlen(off_256934430[0]);
  if (v11 > 0x7FFFFFFFFFFFFFF7)
LABEL_33:
    sub_23941A5AC();
  v12 = v11;
  if (v11 >= 0x17)
  {
    v14 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v14 = v11 | 7;
    v15 = v14 + 1;
    v13 = operator new(v14 + 1);
    v28 = v12;
    v29 = v15 | 0x8000000000000000;
    __p = v13;
    goto LABEL_20;
  }
  HIBYTE(v29) = v11;
  v13 = &__p;
  if (v11)
LABEL_20:
    memmove(v13, v10, v12);
  *((_BYTE *)v13 + v12) = 0;
  sub_23994E3E8((_QWORD *)a1, &v30, (uint64_t)&__p);
  if (SHIBYTE(v29) < 0)
    operator delete(__p);
LABEL_23:
  v16 = *(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152);
  if (v16)
  {
    v17 = 0;
    v18 = 0;
    v19 = v16 >> 2;
    do
    {
      v20 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v30);
      v22 = *v20;
      v21 = (std::__shared_weak_count *)v20[1];
      if (v21)
      {
        p_shared_owners = (unint64_t *)&v21->__shared_owners_;
        do
          v24 = __ldxr(p_shared_owners);
        while (__stxr(v24 + 1, p_shared_owners));
        do
          v25 = __ldaxr(p_shared_owners);
        while (__stlxr(v25 - 1, p_shared_owners));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
      }
      sub_23995E194(a1, v17, (float32x4_t *)(*(_QWORD *)(v22 + 40) + 16 * v17));
      v17 = ++v18;
    }
    while (v19 > v18);
  }
  return 1;
}

void sub_23996052C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23996054C(uint64_t a1)
{
  return (uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
}

uint64_t sub_23996055C(_QWORD *a1)
{
  const void *v2;
  size_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *__p[2];
  unint64_t v10;
  int v11;

  v11 = -1;
  v2 = (const void *)qword_2569343F8;
  v3 = strlen((const char *)qword_2569343F8);
  if (v3 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v4 = (void *)v3;
  if (v3 >= 0x17)
  {
    v6 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17)
      v6 = v3 | 7;
    v7 = v6 + 1;
    v5 = operator new(v6 + 1);
    __p[1] = v4;
    v10 = v7 | 0x8000000000000000;
    __p[0] = v5;
    goto LABEL_8;
  }
  HIBYTE(v10) = v3;
  v5 = __p;
  if (v3)
LABEL_8:
    memmove(v5, v2, (size_t)v4);
  *((_BYTE *)v4 + (_QWORD)v5) = 0;
  sub_239940320(a1, &v11, (uint64_t)__p);
  if (SHIBYTE(v10) < 0)
    operator delete(__p[0]);
  return 1;
}

void sub_239960640(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23996065C(uint64_t a1)
{
  const void *v2;
  size_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t **v8;
  unsigned int v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *v15[2];
  unint64_t v16;
  void *__p;
  void *v18;
  uint64_t v19;

  v2 = (const void *)qword_2569343F8;
  v3 = strlen((const char *)qword_2569343F8);
  if (v3 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v4 = (void *)v3;
  if (v3 >= 0x17)
  {
    v6 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17)
      v6 = v3 | 7;
    v7 = v6 + 1;
    v5 = operator new(v6 + 1);
    v15[1] = v4;
    v16 = v7 | 0x8000000000000000;
    v15[0] = v5;
    goto LABEL_8;
  }
  HIBYTE(v16) = v3;
  v5 = v15;
  if (v3)
LABEL_8:
    memmove(v5, v2, (size_t)v4);
  *((_BYTE *)v4 + (_QWORD)v5) = 0;
  v8 = (uint64_t **)(a1 + 8);
  __p = 0;
  v18 = 0;
  v19 = 0;
  v9 = sub_239961640(v8, (uint64_t)&__p, (unsigned __int8 *)v15);
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
  if (SHIBYTE(v16) < 0)
    operator delete(v15[0]);
  if (v9 != -1)
  {
    v10 = &(*v8)[2 * v9];
    v11 = (std::__shared_weak_count *)v10[1];
    *v10 = 0;
    v10[1] = 0;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  return 1;
}

void sub_2399607A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16)
{
  if (__p)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399607E0(uint64_t a1, _DWORD *a2, _DWORD *a3, unsigned int a4, int a5)
{
  const void *v7;
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  uint64_t *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  unint64_t i;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  int v48;
  uint64_t *v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _DWORD *v56;
  _DWORD *j;
  _QWORD *v58;
  _DWORD *v59;
  unint64_t v60;
  uint64_t *v61;
  std::__shared_weak_count *v62;
  uint64_t v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unsigned int *v68;
  unint64_t v69;
  uint64_t *v70;
  std::__shared_weak_count *v71;
  uint64_t v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char *v79;
  uint64_t v80;
  unsigned int v81;
  _DWORD *v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _DWORD *v93;
  _DWORD *v94;
  uint64_t v95;
  _DWORD *v96;
  uint64_t k;
  _DWORD *v98;
  unsigned int *v99;
  unsigned int v100;
  uint64_t *v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  _DWORD *v108;
  _DWORD *v109;
  uint64_t v110;
  uint64_t *v111;
  char *v112;
  char *v113;
  unint64_t v114;
  _QWORD *v115;
  char **v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  char **v125;
  unint64_t v126;
  _BYTE *v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  _OWORD *v134;
  char *v135;
  uint64_t v136;
  __int128 v137;
  int v138;
  unsigned int v139;
  uint64_t *v140;
  std::__shared_weak_count *v141;
  uint64_t v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  unsigned int **v146;
  _QWORD *v147;
  unsigned int *v148;
  unint64_t v149;
  unsigned int *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  _BYTE *v157;
  unsigned int *v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unsigned int *v162;
  _OWORD *v163;
  unsigned int *v164;
  uint64_t v165;
  __int128 v166;
  unsigned int v167;
  unsigned int v170;
  char *v172;
  unsigned int *v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  char *v178;
  char *v179;
  char *v180;
  void *__dst[2];
  unint64_t v182;
  __int128 __p;
  uint64_t v184;

  v7 = (const void *)qword_2569343F8;
  v8 = strlen((const char *)qword_2569343F8);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v10 = (void **)operator new(v11 + 1);
    __dst[1] = v9;
    v182 = v12 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_8;
  }
  HIBYTE(v182) = v8;
  v10 = __dst;
  if (v8)
LABEL_8:
    memmove(v10, v7, (size_t)v9);
  *((_BYTE *)v9 + (_QWORD)v10) = 0;
  __p = 0uLL;
  v184 = 0;
  v177 = (_QWORD *)(a1 + 8);
  v13 = sub_239961640((uint64_t **)(a1 + 8), (uint64_t)&__p, (unsigned __int8 *)__dst);
  if ((_QWORD)__p)
  {
    *((_QWORD *)&__p + 1) = __p;
    operator delete((void *)__p);
  }
  if ((SHIBYTE(v182) & 0x80000000) == 0)
  {
    if (a4)
      goto LABEL_13;
    return 1;
  }
  operator delete(__dst[0]);
  if (!a4)
    return 1;
LABEL_13:
  v14 = a4;
  v178 = (char *)operator new(4 * a4);
  memset_pattern16(v178, &unk_239F032F0, 4 * a4);
  v15 = (char *)operator new(4 * a4);
  v170 = a4;
  memset(v15, 255, 4 * a4);
  v16 = (char *)operator new(4 * a4);
  memset(v16, 255, 4 * a4);
  v175 = a4;
  v176 = v13;
  v180 = v16;
  if (a5)
  {
    v17 = 0;
    do
    {
      v18 = v14;
      v19 = a3[v17++];
      v20 = v17;
      if (v17 == v18)
        v20 = 0;
      v21 = a3[v20];
      v22 = (uint64_t *)(*v177 + 16 * v13);
      v23 = *v22;
      v24 = (std::__shared_weak_count *)v22[1];
      if (v24)
      {
        p_shared_owners = (unint64_t *)&v24->__shared_owners_;
        do
          v26 = __ldxr(p_shared_owners);
        while (__stxr(v26 + 1, p_shared_owners));
        do
          v27 = __ldaxr(p_shared_owners);
        while (__stlxr(v27 - 1, p_shared_owners));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      v28 = *(_QWORD *)(v23 + 40) + 24 * v19;
      v29 = *(_DWORD **)v28;
      v32 = *(_QWORD *)(v28 + 8);
      v31 = (unint64_t *)(v28 + 8);
      for (i = v32; (unint64_t)v29 < i; i = *v31)
      {
        v34 = *v29;
        LODWORD(__p) = *v29;
        v35 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
        v36 = *v35;
        v37 = (std::__shared_weak_count *)v35[1];
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        v33 = *(_QWORD *)(*(_QWORD *)(v36 + 40) + ((v34 >> 3) & 0x1FFFFFF8)) >> v34;
        v16 = v180;
        if ((v33 & 1) == 0)
        {
          v41 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__p);
          if (*(_DWORD *)(sub_239962518(a1 + 104, v41) + 12) == v21)
          {
            v42 = 0;
            goto LABEL_157;
          }
        }
        ++v29;
      }
      v14 = v175;
    }
    while (v17 != v175);
  }
  v43 = 0;
  v44 = (_QWORD *)(a1 + 104);
  v179 = v15;
  do
  {
    v45 = v43 + 1;
    v46 = (v43 + 1);
    v47 = a3[v43];
    if (v43 + 1 == v14)
      v46 = 0;
    v48 = a3[v46];
    v49 = (uint64_t *)(*v177 + 16 * v176);
    v51 = *v49;
    v50 = (std::__shared_weak_count *)v49[1];
    if (v50)
    {
      v52 = (unint64_t *)&v50->__shared_owners_;
      do
        v53 = __ldxr(v52);
      while (__stxr(v53 + 1, v52));
      do
        v54 = __ldaxr(v52);
      while (__stlxr(v54 - 1, v52));
      if (!v54)
      {
        ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
        std::__shared_weak_count::__release_weak(v50);
      }
    }
    v55 = *(_QWORD *)(v51 + 40) + 24 * v47;
    v56 = *(_DWORD **)v55;
    v59 = *(_DWORD **)(v55 + 8);
    v58 = (_QWORD *)(v55 + 8);
    for (j = v59; ; j = (_DWORD *)*v58)
    {
      if (v56 >= j)
      {
        *(_DWORD *)&v178[4 * v43] = 1;
        LODWORD(v184) = -1;
        *(_QWORD *)&__p = -1;
        *((_QWORD *)&__p + 1) = -1;
        *(_DWORD *)&v15[4 * v43] = sub_23996142C(a1, 0, &__p);
        LODWORD(v184) = -1;
        *(_QWORD *)&__p = -1;
        *((_QWORD *)&__p + 1) = -1;
        v78 = sub_23996142C(a1, 1, &__p);
        v14 = v175;
        v79 = &v16[4 * ((v170 - v43) % v170)];
        *(_DWORD *)v79 = v78;
        sub_23996256C(a1 + 104, &v15[4 * v43], v79);
        goto LABEL_40;
      }
      v60 = *v56;
      LODWORD(__p) = *v56;
      v61 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v63 = *v61;
      v62 = (std::__shared_weak_count *)v61[1];
      if (v62)
      {
        v64 = (unint64_t *)&v62->__shared_owners_;
        do
          v65 = __ldxr(v64);
        while (__stxr(v65 + 1, v64));
        do
          v66 = __ldaxr(v64);
        while (__stlxr(v66 - 1, v64));
        if (!v66)
        {
          ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
          std::__shared_weak_count::__release_weak(v62);
        }
      }
      v67 = *(_QWORD *)(*(_QWORD *)(v63 + 40) + ((v60 >> 3) & 0x1FFFFFF8)) >> v60;
      v15 = v179;
      v16 = v180;
      if ((v67 & 1) != 0)
      {
        v68 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__p);
        if (*(_DWORD *)(sub_239962518(a1 + 104, v68) + 12) == v48)
          break;
      }
      ++v56;
    }
    v69 = __p;
    v70 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
    v72 = *v70;
    v71 = (std::__shared_weak_count *)v70[1];
    if (v71)
    {
      v73 = (unint64_t *)&v71->__shared_owners_;
      do
        v74 = __ldxr(v73);
      while (__stxr(v74 + 1, v73));
      do
        v75 = __ldaxr(v73);
      while (__stlxr(v75 - 1, v73));
      if (!v75)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
    *(_QWORD *)(*(_QWORD *)(v72 + 40) + ((v69 >> 3) & 0x1FFFFFF8)) &= ~(1 << v69);
    v76 = 4 * v43;
    *(_DWORD *)&v179[v76] = __p;
    *(_DWORD *)&v178[v76] = 0;
    v16 = v180;
    v14 = v175;
    if ((a5 & 1) == 0)
    {
      v77 = *v58 - (_QWORD)(v56 + 1);
      if ((_DWORD *)*v58 != v56 + 1)
        memmove(v56, v56 + 1, *v58 - (_QWORD)(v56 + 1));
      *v58 = (char *)v56 + v77;
    }
LABEL_40:
    ++v43;
  }
  while (v45 != v14);
  v80 = v14;
  v81 = v170;
  v82 = a3;
  do
  {
    v83 = 4 * ((v81 - 1) % v170);
    v84 = *(_DWORD *)&v178[v83];
    v85 = 4 * (v81 % v170);
    v86 = *(_DWORD *)&v178[v85];
    LODWORD(__p) = *(_DWORD *)&v15[v83];
    LODWORD(__dst[0]) = *(_DWORD *)&v15[v85];
    sub_23996259C((uint64_t)v44, a2, __dst);
    if (v84 == 1 && v86 == 1)
    {
      v93 = (_DWORD *)sub_239962518((uint64_t)v44, (unsigned int *)__dst);
      v94 = (_DWORD *)sub_239962518((uint64_t)v44, (unsigned int *)&__p);
LABEL_90:
      sub_23996253C((uint64_t)v44, v93, v94);
      goto LABEL_91;
    }
    if (v84 == 1 && v86 == 0)
    {
      v95 = sub_239962518((uint64_t)v44, (unsigned int *)__dst);
      v94 = (_DWORD *)sub_239962518((uint64_t)v44, (unsigned int *)&__p);
      v93 = (_DWORD *)(v95 + 4);
      goto LABEL_90;
    }
    if (v84)
      v89 = 0;
    else
      v89 = v86 == 1;
    if (v89)
    {
      v93 = (_DWORD *)sub_239962518((uint64_t)v44, (unsigned int *)__dst);
      v92 = sub_239962518((uint64_t)v44, (unsigned int *)&__p);
      goto LABEL_89;
    }
    if (!(v84 | v86))
    {
      v90 = sub_239962518((uint64_t)v44, (unsigned int *)&__p);
      if (*(_DWORD *)(v90 + 8) != LODWORD(__dst[0]))
      {
        v91 = sub_239962518((uint64_t)v44, (unsigned int *)__dst);
        v92 = sub_239962518((uint64_t)v44, (unsigned int *)&__p);
        v93 = (_DWORD *)(v91 + 4);
LABEL_89:
        v94 = (_DWORD *)(v92 + 8);
        goto LABEL_90;
      }
    }
LABEL_91:
    sub_2399625C8(v44, __dst, v82);
    v96 = (_DWORD *)sub_239962518((uint64_t)v44, (unsigned int *)&__p);
    sub_2399625C8(v44, v96, v82);
    sub_2399625F4(v44, v82, __dst);
    sub_23996253C((uint64_t)v44, &__p, __dst);
    ++v82;
    ++v81;
    --v80;
  }
  while (v80);
  for (k = 0; k != v14; ++k)
  {
    if (*(_DWORD *)&v178[4 * k] != 1)
      continue;
    v174 = (unsigned int *)&v15[4 * k];
    v99 = (unsigned int *)sub_239962518((uint64_t)v44, v174);
    v100 = *(_DWORD *)(sub_239962518((uint64_t)v44, v99) + 12);
    v101 = (uint64_t *)(*v177 + 16 * v176);
    v102 = *v101;
    v103 = (std::__shared_weak_count *)v101[1];
    if (v103)
    {
      v104 = (unint64_t *)&v103->__shared_owners_;
      do
        v105 = __ldxr(v104);
      while (__stxr(v105 + 1, v104));
      do
        v106 = __ldaxr(v104);
      while (__stlxr(v106 - 1, v104));
      if (!v106)
      {
        ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
        std::__shared_weak_count::__release_weak(v103);
      }
    }
    v107 = *(_QWORD *)(v102 + 40);
    v108 = (_DWORD *)sub_239962518((uint64_t)v44, v174);
    v109 = v108;
    v110 = v107 + 24 * v100;
    v113 = *(char **)(v110 + 8);
    v111 = (uint64_t *)(v110 + 8);
    v112 = v113;
    v115 = v111 + 1;
    v114 = v111[1];
    if ((unint64_t)v113 >= v114)
    {
      v116 = (char **)(v107 + 24 * v100);
      v117 = *v116;
      v118 = v112 - *v116;
      v119 = v118 >> 2;
      v120 = (v118 >> 2) + 1;
      if (v120 >> 62)
        sub_2394189F8();
      v121 = v114 - (_QWORD)v117;
      if (v121 >> 1 > v120)
        v120 = v121 >> 1;
      if ((unint64_t)v121 >= 0x7FFFFFFFFFFFFFFCLL)
        v122 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v122 = v120;
      if (v122)
      {
        v172 = (char *)(v112 - *v116);
        if (v122 >> 62)
          sub_239418A80();
        v123 = v118 >> 2;
        v124 = v111;
        v125 = v116;
        v126 = v122;
        v127 = operator new(4 * v122);
        v122 = v126;
        v116 = v125;
        v111 = v124;
        v119 = v123;
        v118 = (uint64_t)v172;
        v128 = &v127[4 * v123];
        *(_DWORD *)v128 = *v109;
        v129 = (uint64_t)(v128 + 4);
        if (v112 != v117)
        {
LABEL_115:
          v130 = v112 - 4 - v117;
          if (v130 >= 0x2C)
          {
            v14 = v175;
            if ((unint64_t)(v112 - &v127[v118]) >= 0x20)
            {
              v131 = (v130 >> 2) + 1;
              v132 = 4 * (v131 & 0x7FFFFFFFFFFFFFF8);
              v133 = &v112[-v132];
              v128 -= v132;
              v134 = &v127[4 * v119 - 16];
              v135 = v112 - 16;
              v136 = v131 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                v137 = *(_OWORD *)v135;
                *(v134 - 1) = *((_OWORD *)v135 - 1);
                *v134 = v137;
                v134 -= 2;
                v135 -= 32;
                v136 -= 8;
              }
              while (v136);
              v112 = v133;
              if (v131 == (v131 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_125:
                v112 = *v116;
                *v116 = v128;
                *v111 = v129;
                *v115 = &v127[4 * v122];
                if (!v112)
                  goto LABEL_127;
                goto LABEL_126;
              }
            }
          }
          else
          {
            v14 = v175;
          }
          do
          {
            v138 = *((_DWORD *)v112 - 1);
            v112 -= 4;
            *((_DWORD *)v128 - 1) = v138;
            v128 -= 4;
          }
          while (v112 != v117);
          goto LABEL_125;
        }
      }
      else
      {
        v127 = 0;
        v128 = (char *)(4 * v119);
        *(_DWORD *)(4 * v119) = *v109;
        v129 = 4 * v119 + 4;
        if (v112 != v117)
          goto LABEL_115;
      }
      v14 = v175;
      *v116 = v128;
      *v111 = v129;
      *v115 = &v127[4 * v122];
      if (!v112)
      {
LABEL_127:
        *v111 = v129;
        v15 = v179;
        v16 = v180;
        if (!a5)
          continue;
        goto LABEL_128;
      }
LABEL_126:
      operator delete(v112);
      goto LABEL_127;
    }
    *(_DWORD *)v112 = *v108;
    v14 = v175;
    *v111 = (uint64_t)(v112 + 4);
    v15 = v179;
    v16 = v180;
    if (!a5)
      continue;
LABEL_128:
    v139 = *(_DWORD *)(sub_239962518((uint64_t)v44, v174) + 12);
    v140 = (uint64_t *)(*v177 + 16 * v176);
    v142 = *v140;
    v141 = (std::__shared_weak_count *)v140[1];
    if (v141)
    {
      v143 = (unint64_t *)&v141->__shared_owners_;
      do
        v144 = __ldxr(v143);
      while (__stxr(v144 + 1, v143));
      do
        v145 = __ldaxr(v143);
      while (__stlxr(v145 - 1, v143));
      if (!v145)
      {
        ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
        std::__shared_weak_count::__release_weak(v141);
      }
    }
    v146 = (unsigned int **)(*(_QWORD *)(v142 + 40) + 24 * v139);
    v147 = v146 + 1;
    v148 = v146[1];
    v149 = (unint64_t)v146[2];
    if ((unint64_t)v148 < v149)
    {
      *v148 = *v174;
      v98 = v148 + 1;
      v15 = v179;
      v16 = v180;
    }
    else
    {
      v150 = *v146;
      v151 = (char *)v148 - (char *)*v146;
      v152 = v151 >> 2;
      v153 = (v151 >> 2) + 1;
      if (v153 >> 62)
        sub_2394189F8();
      v154 = v149 - (_QWORD)v150;
      if (v154 >> 1 > v153)
        v153 = v154 >> 1;
      if ((unint64_t)v154 >= 0x7FFFFFFFFFFFFFFCLL)
        v155 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v155 = v153;
      if (v155)
      {
        if (v155 >> 62)
          sub_239418A80();
        v156 = v155;
        v157 = operator new(4 * v155);
        v155 = v156;
      }
      else
      {
        v157 = 0;
      }
      v158 = (unsigned int *)&v157[4 * v152];
      *v158 = *v174;
      v98 = v158 + 1;
      if (v148 != v150)
      {
        v159 = (char *)(v148 - 1) - (char *)v150;
        if (v159 < 0x2C)
          goto LABEL_166;
        if ((unint64_t)((char *)v148 - &v157[v151]) < 0x20)
          goto LABEL_166;
        v160 = (v159 >> 2) + 1;
        v161 = 4 * (v160 & 0x7FFFFFFFFFFFFFF8);
        v162 = &v148[v161 / 0xFFFFFFFFFFFFFFFCLL];
        v158 = (unsigned int *)((char *)v158 - v161);
        v163 = &v157[4 * v152 - 16];
        v164 = v148 - 4;
        v165 = v160 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v166 = *(_OWORD *)v164;
          *(v163 - 1) = *((_OWORD *)v164 - 1);
          *v163 = v166;
          v163 -= 2;
          v164 -= 8;
          v165 -= 8;
        }
        while (v165);
        v148 = v162;
        if (v160 != (v160 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_166:
          do
          {
            v167 = *--v148;
            *--v158 = v167;
          }
          while (v148 != v150);
        }
        v148 = *v146;
      }
      *v146 = v158;
      *v147 = v98;
      v146[2] = (unsigned int *)&v157[4 * v155];
      v16 = v180;
      if (v148)
        operator delete(v148);
      v15 = v179;
    }
    *v147 = v98;
    v14 = v175;
  }
  v42 = 1;
LABEL_157:
  operator delete(v16);
  operator delete(v15);
  operator delete(v178);
  return v42;
}

void sub_239961370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p)
{
  void *v16;

  operator delete(v16);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_23996138C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p)
{
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2399613A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26)
{
  if (__p)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  _Unwind_Resume(exception_object);
}

void sub_2399613DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, void *a17, void *a18)
{
  operator delete(a18);
  operator delete(a17);
  operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_23996142C(uint64_t a1, int a2, __int128 *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t *v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = sub_239962794((_QWORD *)(a1 + 104), a3);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  v7 = *(uint64_t **)(a1 + 32);
  v8 = *(uint64_t **)(a1 + 40);
  if (v7 != v8)
  {
    v9 = v6;
    do
    {
      v10 = *v7;
      v11 = (std::__shared_weak_count *)v7[1];
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          v13 = __ldxr(p_shared_owners);
        while (__stxr(v13 + 1, p_shared_owners));
      }
      if (v10)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v10 + 32))(v10, v9);
      if (v11)
      {
        v14 = (unint64_t *)&v11->__shared_owners_;
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      v7 += 2;
    }
    while (v7 != v8);
    v7 = *(uint64_t **)(a1 + 32);
  }
  v16 = &v7[2 * *(unsigned int *)(a1 + 180)];
  v18 = *v16;
  v17 = (std::__shared_weak_count *)v16[1];
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
      v22 = *(_QWORD *)(v18 + 40);
      v23 = (unint64_t)v5 >> 6;
      v24 = 1 << v5;
      if (a2)
        goto LABEL_21;
LABEL_23:
      v25 = *(_QWORD *)(v22 + 8 * v23) & ~v24;
      goto LABEL_24;
    }
  }
  v22 = *(_QWORD *)(v18 + 40);
  v23 = (unint64_t)v5 >> 6;
  v24 = 1 << v5;
  if (!a2)
    goto LABEL_23;
LABEL_21:
  v25 = *(_QWORD *)(v22 + 8 * v23) | v24;
LABEL_24:
  *(_QWORD *)(v22 + 8 * v23) = v25;
  return v5;
}

void sub_2399615A8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2399615C0(_QWORD *result, unsigned int *a2, unsigned int *a3)
{
  _QWORD **v3;
  _QWORD **i;

  v3 = (_QWORD **)result[1];
  for (i = (_QWORD **)result[2]; v3 != i; v3 += 2)
  {
    result = *v3;
    if (*v3)
      result = (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD, _QWORD))(*result + 72))(result, *a2, *a3);
  }
  return result;
}

unint64_t sub_239961624(uint64_t a1)
{
  return 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2);
}

uint64_t sub_239961640(uint64_t **a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  void *v12;
  int v13;
  unsigned __int8 *v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *__s1[2];
  uint64_t v20;

  v3 = *a1;
  v4 = a1[1];
  if (*a1 != v4)
  {
    v6 = 0;
    do
    {
      v8 = *v3;
      if (!*v3)
        goto LABEL_5;
      if (*(char *)(v8 + 31) < 0)
      {
        sub_23941A7F8(__s1, *(void **)(v8 + 8), *(_QWORD *)(v8 + 16));
      }
      else
      {
        v9 = *(_OWORD *)(v8 + 8);
        v20 = *(_QWORD *)(v8 + 24);
        *(_OWORD *)__s1 = v9;
      }
      v10 = HIBYTE(v20);
      if (v20 >= 0)
        v11 = (void *)HIBYTE(v20);
      else
        v11 = __s1[1];
      v12 = (void *)a3[23];
      v13 = (char)v12;
      if ((char)v12 < 0)
        v12 = (void *)*((_QWORD *)a3 + 1);
      if (v11 == v12)
      {
        if (v13 >= 0)
          v14 = a3;
        else
          v14 = *(unsigned __int8 **)a3;
        if (v20 < 0)
        {
          v17 = __s1[0];
          if (memcmp(__s1[0], v14, (size_t)__s1[1]))
          {
            operator delete(v17);
            goto LABEL_5;
          }
LABEL_27:
          v7 = *(_QWORD *)(*v3 + 32) == (_QWORD)sub_239941BF8;
          if ((v10 & 0x80) == 0)
          {
LABEL_4:
            if (v7)
              return v6;
            goto LABEL_5;
          }
          goto LABEL_28;
        }
        if (!HIBYTE(v20))
          goto LABEL_27;
        v15 = __s1;
        v16 = HIBYTE(v20);
        while (*(unsigned __int8 *)v15 == *v14)
        {
          v15 = (void **)((char *)v15 + 1);
          ++v14;
          if (!--v16)
            goto LABEL_27;
        }
      }
      v7 = 0;
      if ((v20 & 0x8000000000000000) == 0)
        goto LABEL_4;
LABEL_28:
      operator delete(__s1[0]);
      if (v7)
        return v6;
LABEL_5:
      v3 += 2;
      v6 = (v6 + 1);
    }
    while (v3 != v4);
  }
  return 0xFFFFFFFFLL;
}

_QWORD *sub_23996179C(uint64_t a1)
{
  _QWORD *result;

  result = (_QWORD *)sub_23995F710(a1);
  *result = &off_250AF0D10;
  return result;
}

void sub_2399617C0(uint64_t a1)
{
  sub_23995FA00(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_2399617E4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  size_t v28;
  char *v29;
  uint64_t v30;
  unsigned int v32;
  _DWORD v33[4];
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  sub_23995FB50((_QWORD *)a1);
  sub_23995FDF8((_QWORD *)a1, (a2[1] - *a2) >> 4);
  v8 = *a2;
  if (a2[1] != *a2)
  {
    v9 = 0;
    v10 = 0;
    do
    {
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v13 = *v11;
      v12 = (std::__shared_weak_count *)v11[1];
      if (v12)
      {
        p_shared_owners = (unint64_t *)&v12->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      *(_OWORD *)(*(_QWORD *)(v13 + 40) + 16 * v9) = *(_OWORD *)(v8 + 16 * v9);
      v8 = *a2;
      v9 = ++v10;
    }
    while (v10 < (unint64_t)((a2[1] - *a2) >> 4));
  }
  sub_23995FFB0((_QWORD *)a1, 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3) + ((a3[1] - *a3) >> 4));
  sub_23996055C((_QWORD *)a1);
  v17 = *a3;
  if (a3[1] != *a3)
  {
    v18 = 0;
    v19 = 1;
    do
    {
      v20 = (_DWORD *)(v17 + 16 * v18);
      v33[0] = *v20;
      v33[1] = v20[1];
      v33[2] = v20[2];
      v33[3] = v20[3];
      v32 = v19 - 1;
      sub_2399607E0(a1, &v32, v33, 4u, 0);
      v18 = v19;
      v17 = *a3;
      ++v19;
    }
    while (v18 < (a3[1] - *a3) >> 4);
  }
  v21 = *a4;
  if (a4[1] != *a4)
  {
    v22 = 0;
    v23 = 0;
    do
    {
      v24 = *a3;
      v25 = a3[1];
      v26 = (_QWORD *)(v21 + 24 * v22);
      v27 = (uint64_t)(v26[1] - *v26) >> 2;
      v28 = 4 * v27;
      if ((_DWORD)v27)
      {
        v29 = (char *)operator new(4 * v27);
        memset(v29, 255, v28);
        v30 = 0;
        do
        {
          *(_DWORD *)&v29[v30] = *(_DWORD *)(*v26 + v30);
          v30 += 4;
        }
        while (v28 != v30);
      }
      else
      {
        v29 = 0;
      }
      v33[0] = v23 + ((unint64_t)(v25 - v24) >> 4);
      sub_2399607E0(a1, v33, v29, v27, 0);
      if (v29)
        operator delete(v29);
      v21 = *a4;
      v22 = ++v23;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3) > v23);
  }
  sub_23996065C(a1);
  return 1;
}

void sub_239961AA0(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
  {
    operator delete(v1);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239961AC4(uint64_t a1, _QWORD *a2, uint64_t *a3, _QWORD *a4)
{
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  uint64_t i;
  uint64_t *v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  __int128 *v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  void *exception;
  __int128 v33;
  int v34;

  sub_23995FB50((_QWORD *)a1);
  v8 = (uint64_t)(a2[1] - *a2) >> 2;
  if (v8 != 3 * (v8 / 3))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x23B83DB6C](exception, "in_positions length not divisible by 3");
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  v9 = a4[1] - *a4;
  v10 = (v8 / 3);
  sub_23995FDF8((_QWORD *)a1, v10);
  if (v10)
  {
    for (i = 0; i != v10; ++i)
    {
      LODWORD(v11) = *(_DWORD *)(*a2 + 4 * (3 * i));
      DWORD1(v11) = *(_DWORD *)(*a2 + 4 * (3 * i + 1));
      DWORD2(v11) = *(_DWORD *)(*a2 + 4 * (3 * i + 2));
      v13 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v15 = *v13;
      v14 = (std::__shared_weak_count *)v13[1];
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v17 = __ldxr(p_shared_owners);
        while (__stxr(v17 + 1, p_shared_owners));
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          v33 = v11;
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
          v11 = v33;
        }
      }
      *(_OWORD *)(*(_QWORD *)(v15 + 40) + 16 * i) = v11;
    }
  }
  sub_23995FFB0((_QWORD *)a1, v9);
  sub_23996055C((_QWORD *)a1);
  if ((_DWORD)v9)
  {
    v19 = 0;
    v20 = 0;
    do
    {
      v21 = *(unsigned __int8 *)(*a4 + v19);
      if (*(_BYTE *)(*a4 + v19))
      {
        v22 = (char *)operator new(4 * v21);
        memset(v22, 255, 4 * v21);
        v23 = *a3;
        if (v21 < 0x10 || __CFADD__(v20, v21 - 1) || (unint64_t)&v22[-v23 + -4 * v20] < 0x20)
        {
          v24 = 0;
        }
        else
        {
          v25 = 0;
          v24 = v21 & 0xF8;
          v26 = v20;
          do
          {
            v27 = (__int128 *)(v23 + 4 * v26);
            v28 = *v27;
            v29 = v27[1];
            v30 = &v22[v25];
            *(_OWORD *)v30 = v28;
            *((_OWORD *)v30 + 1) = v29;
            v25 += 32;
            v26 += 8;
          }
          while (((4 * (int)v21) & 0x3E0) != v25);
          if (v24 == v21)
            goto LABEL_22;
        }
        do
        {
          *(_DWORD *)&v22[4 * v24] = *(_DWORD *)(v23 + 4 * (v20 + v24));
          ++v24;
        }
        while (v21 != v24);
      }
      else
      {
        v22 = 0;
      }
LABEL_22:
      v34 = v19;
      sub_2399607E0(a1, &v34, v22, v21, 0);
      if (v22)
        operator delete(v22);
      v20 += v21;
      ++v19;
    }
    while (v19 != v9);
  }
  sub_23996065C(a1);
  return 1;
}

void sub_239961D58(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_239961D6C(_Unwind_Exception *exception_object)
{
  void *v1;

  if (!v1)
    _Unwind_Resume(exception_object);
  operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_239961D90(uint64_t a1, unsigned int *a2, char **a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _OWORD *v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  int v27;
  unsigned int v28;

  v4 = a1 + 104;
  v5 = *(_DWORD *)sub_23996252C(a1 + 104, a2);
  v28 = v5;
  do
  {
    v28 = *(_DWORD *)(sub_239962518(v4, &v28) + 8);
    v7 = sub_239962518(v4, &v28);
    v8 = v7;
    v10 = a3[1];
    v9 = (unint64_t)a3[2];
    if ((unint64_t)v10 < v9)
    {
      *(_DWORD *)v10 = *(_DWORD *)(v7 + 12);
      v6 = (uint64_t)(v10 + 4);
      goto LABEL_3;
    }
    v11 = *a3;
    v12 = v10 - *a3;
    v13 = v12 >> 2;
    v14 = (v12 >> 2) + 1;
    if (v14 >> 62)
      sub_2394189F8();
    v15 = v9 - (_QWORD)v11;
    if (v15 >> 1 > v14)
      v14 = v15 >> 1;
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL)
      v16 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v16 = v14;
    if (v16)
    {
      if (v16 >> 62)
        sub_239418A80();
      v17 = operator new(4 * v16);
      v18 = &v17[4 * v13];
      *(_DWORD *)v18 = *(_DWORD *)(v8 + 12);
      v6 = (uint64_t)(v18 + 4);
      if (v10 == v11)
        goto LABEL_23;
LABEL_16:
      v19 = v10 - 4 - v11;
      if (v19 < 0x2C)
        goto LABEL_30;
      if ((unint64_t)(v10 - &v17[v12]) < 0x20)
        goto LABEL_30;
      v20 = (v19 >> 2) + 1;
      v21 = 4 * (v20 & 0x7FFFFFFFFFFFFFF8);
      v22 = &v10[-v21];
      v18 -= v21;
      v23 = &v17[4 * v13 - 16];
      v24 = v10 - 16;
      v25 = v20 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v26 = *(_OWORD *)v24;
        *(v23 - 1) = *((_OWORD *)v24 - 1);
        *v23 = v26;
        v23 -= 2;
        v24 -= 32;
        v25 -= 8;
      }
      while (v25);
      v10 = v22;
      if (v20 != (v20 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_30:
        do
        {
          v27 = *((_DWORD *)v10 - 1);
          v10 -= 4;
          *((_DWORD *)v18 - 1) = v27;
          v18 -= 4;
        }
        while (v10 != v11);
      }
      v10 = *a3;
      goto LABEL_23;
    }
    v17 = 0;
    v18 = (char *)(4 * v13);
    *(_DWORD *)(4 * v13) = *(_DWORD *)(v8 + 12);
    v6 = 4 * v13 + 4;
    if (v10 != v11)
      goto LABEL_16;
LABEL_23:
    *a3 = v18;
    a3[1] = (char *)v6;
    a3[2] = &v17[4 * v16];
    if (v10)
      operator delete(v10);
LABEL_3:
    a3[1] = (char *)v6;
  }
  while (v28 != v5);
}

void sub_239961F68(uint64_t a1, unsigned int *a2, unsigned int **a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unsigned int *v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE *v16;
  unsigned int *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  _OWORD *v22;
  unsigned int *v23;
  uint64_t v24;
  __int128 v25;
  unsigned int v26;
  unsigned int v27;

  v4 = a1 + 104;
  v5 = *(_DWORD *)sub_23996252C(a1 + 104, a2);
  v27 = v5;
  do
  {
    v7 = *(_DWORD *)(sub_239962518(v4, &v27) + 8);
    v27 = v7;
    v9 = a3[1];
    v8 = (unint64_t)a3[2];
    if ((unint64_t)v9 < v8)
    {
      *v9 = v7;
      v6 = (uint64_t)(v9 + 1);
      goto LABEL_3;
    }
    v10 = *a3;
    v11 = (char *)v9 - (char *)*a3;
    v12 = v11 >> 2;
    v13 = (v11 >> 2) + 1;
    if (v13 >> 62)
      sub_2394189F8();
    v14 = v8 - (_QWORD)v10;
    if (v14 >> 1 > v13)
      v13 = v14 >> 1;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL)
      v15 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    if (v15)
    {
      if (v15 >> 62)
        sub_239418A80();
      v16 = operator new(4 * v15);
      v17 = (unsigned int *)&v16[4 * v12];
      *v17 = v7;
      v6 = (uint64_t)(v17 + 1);
      if (v9 == v10)
        goto LABEL_23;
LABEL_16:
      v18 = (char *)(v9 - 1) - (char *)v10;
      if (v18 < 0x2C)
        goto LABEL_30;
      if ((unint64_t)((char *)v9 - &v16[v11]) < 0x20)
        goto LABEL_30;
      v19 = (v18 >> 2) + 1;
      v20 = 4 * (v19 & 0x7FFFFFFFFFFFFFF8);
      v21 = &v9[v20 / 0xFFFFFFFFFFFFFFFCLL];
      v17 = (unsigned int *)((char *)v17 - v20);
      v22 = &v16[4 * v12 - 16];
      v23 = v9 - 4;
      v24 = v19 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v25 = *(_OWORD *)v23;
        *(v22 - 1) = *((_OWORD *)v23 - 1);
        *v22 = v25;
        v22 -= 2;
        v23 -= 8;
        v24 -= 8;
      }
      while (v24);
      v9 = v21;
      if (v19 != (v19 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_30:
        do
        {
          v26 = *--v9;
          *--v17 = v26;
        }
        while (v9 != v10);
      }
      v9 = *a3;
      goto LABEL_23;
    }
    v16 = 0;
    v17 = (unsigned int *)(4 * v12);
    *(_DWORD *)(4 * v12) = v7;
    v6 = 4 * v12 + 4;
    if (v9 != v10)
      goto LABEL_16;
LABEL_23:
    *a3 = v17;
    a3[1] = (unsigned int *)v6;
    a3[2] = (unsigned int *)&v16[4 * v15];
    if (v9)
      operator delete(v9);
LABEL_3:
    a3[1] = (unsigned int *)v6;
  }
  while (v27 != v5);
}

_QWORD *sub_239962124(_QWORD *result)
{
  result[1] = *result;
  result[4] = result[3];
  result[7] = result[6];
  return result;
}

void sub_239962140(char **a1, char **a2)
{
  int64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  int v20;
  char *v21;
  int64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  __int128 v29;
  char *v30;
  int64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  int v46;

  v4 = a2[1] - *a2;
  v5 = v4 >> 2;
  v6 = *a1;
  if (v4 >> 2 <= (unint64_t)((a1[2] - *a1) >> 2))
    goto LABEL_13;
  if (v4 < 0)
    sub_2394189F8();
  v7 = a1[1];
  v8 = (char *)operator new(v4);
  v9 = v7 - v6;
  v10 = &v8[(v7 - v6) & 0xFFFFFFFFFFFFFFFCLL];
  v11 = v10;
  if (v7 != v6)
  {
    if ((unint64_t)(v9 - 4) < 0x2C)
    {
      v11 = &v8[(v7 - v6) & 0xFFFFFFFFFFFFFFFCLL];
      do
      {
LABEL_10:
        v20 = *((_DWORD *)v7 - 1);
        v7 -= 4;
        *((_DWORD *)v11 - 1) = v20;
        v11 -= 4;
      }
      while (v7 != v6);
      goto LABEL_11;
    }
    v11 = &v8[(v7 - v6) & 0xFFFFFFFFFFFFFFFCLL];
    if ((unint64_t)(v7 - &v8[v9 & 0xFFFFFFFFFFFFFFFCLL]) < 0x20)
      goto LABEL_10;
    v12 = v9 >> 2;
    v13 = ((unint64_t)(v9 - 4) >> 2) + 1;
    v14 = 4 * (v13 & 0x7FFFFFFFFFFFFFF8);
    v15 = &v7[-v14];
    v11 = &v10[-v14];
    v16 = &v8[4 * v12 - 16];
    v17 = v7 - 16;
    v18 = v13 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v19 = *(_OWORD *)v17;
      *((_OWORD *)v16 - 1) = *((_OWORD *)v17 - 1);
      *(_OWORD *)v16 = v19;
      v16 -= 32;
      v17 -= 32;
      v18 -= 8;
    }
    while (v18);
    v7 = v15;
    if (v13 != (v13 & 0x7FFFFFFFFFFFFFF8))
      goto LABEL_10;
  }
LABEL_11:
  *a1 = v11;
  a1[1] = v10;
  a1[2] = &v8[4 * v5];
  if (v6)
    operator delete(v6);
LABEL_13:
  v21 = a1[3];
  v22 = a2[4] - a2[3];
  v23 = 0xCCCCCCCCCCCCCCCDLL * (v22 >> 2);
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[5] - v21) >> 2) < v23)
  {
    if (v23 >= 0xCCCCCCCCCCCCCCDLL)
      sub_2394189F8();
    v24 = a1[4];
    v25 = (char *)operator new(v22);
    v26 = &v25[20 * ((v24 - v21) / 20)];
    v27 = v26;
    if (v24 != v21)
    {
      v28 = &v25[20 * ((v24 - v21) / 20)];
      do
      {
        v29 = *(_OWORD *)(v24 - 20);
        v27 = v28 - 20;
        *((_DWORD *)v28 - 1) = *((_DWORD *)v24 - 1);
        *(_OWORD *)(v28 - 20) = v29;
        v24 -= 20;
        v28 -= 20;
      }
      while (v24 != v21);
    }
    a1[3] = v27;
    a1[4] = v26;
    a1[5] = &v25[20 * v23];
    if (v21)
      operator delete(v21);
  }
  v30 = a1[6];
  v31 = a2[7] - a2[6];
  v32 = v31 >> 2;
  if (v31 >> 2 > (unint64_t)((a1[8] - v30) >> 2))
  {
    if (v31 < 0)
      sub_2394189F8();
    v33 = a1[7];
    v34 = (char *)operator new(v31);
    v35 = v33 - v30;
    v36 = &v34[(v33 - v30) & 0xFFFFFFFFFFFFFFFCLL];
    v37 = v36;
    if (v33 == v30)
      goto LABEL_30;
    if ((unint64_t)(v35 - 4) >= 0x2C)
    {
      v37 = &v34[(v33 - v30) & 0xFFFFFFFFFFFFFFFCLL];
      if ((unint64_t)(v33 - &v34[v35 & 0xFFFFFFFFFFFFFFFCLL]) >= 0x20)
      {
        v38 = v35 >> 2;
        v39 = ((unint64_t)(v35 - 4) >> 2) + 1;
        v40 = 4 * (v39 & 0x7FFFFFFFFFFFFFF8);
        v41 = &v33[-v40];
        v37 = &v36[-v40];
        v42 = &v34[4 * v38 - 16];
        v43 = v33 - 16;
        v44 = v39 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v45 = *(_OWORD *)v43;
          *((_OWORD *)v42 - 1) = *((_OWORD *)v43 - 1);
          *(_OWORD *)v42 = v45;
          v42 -= 32;
          v43 -= 32;
          v44 -= 8;
        }
        while (v44);
        v33 = v41;
        if (v39 == (v39 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_30:
          a1[6] = v37;
          a1[7] = v36;
          a1[8] = &v34[4 * v32];
          if (v30)
            operator delete(v30);
          goto LABEL_32;
        }
      }
    }
    else
    {
      v37 = &v34[(v33 - v30) & 0xFFFFFFFFFFFFFFFCLL];
    }
    do
    {
      v46 = *((_DWORD *)v33 - 1);
      v33 -= 4;
      *((_DWORD *)v37 - 1) = v46;
      v37 -= 4;
    }
    while (v33 != v30);
    goto LABEL_30;
  }
LABEL_32:
  if (a1 != a2)
  {
    sub_23942156C(a1, *a2, a2[1], (a2[1] - *a2) >> 2);
    sub_239962BCC(a1 + 3, a2[3], a2[4], 0xCCCCCCCCCCCCCCCDLL * ((a2[4] - a2[3]) >> 2));
    sub_23942156C(a1 + 6, a2[6], a2[7], (a2[7] - a2[6]) >> 2);
  }
}

uint64_t sub_239962480(uint64_t result, _QWORD *a2, unsigned int *a3)
{
  uint64_t v3;
  int v4;

  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = a2;
  *(_QWORD *)(result + 16) = -1;
  v3 = *a3;
  if ((_DWORD)v3 != -1)
  {
    v4 = *(_DWORD *)(*a2 + 4 * v3);
    *(_DWORD *)(result + 16) = v4;
    *(_DWORD *)(result + 20) = v4;
  }
  return result;
}

uint64_t sub_2399624A8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v1 = *((unsigned int *)a1 + 5);
  if ((_DWORD)v1 == -1)
  {
    *((_DWORD *)a1 + 5) = -1;
    return v1;
  }
  else
  {
    v2 = *a1;
    v3 = 20 * v1;
    v4 = *(_DWORD *)(*(_QWORD *)(a1[1] + 24) + 20 * *(unsigned int *)(*(_QWORD *)(a1[1] + 24) + v3 + 4));
    if (v4 == *((_DWORD *)a1 + 4))
      v4 = -1;
    *((_DWORD *)a1 + 5) = v4;
    return *(unsigned int *)(*(_QWORD *)(v2 + 24) + 20 * *(unsigned int *)(*(_QWORD *)(v2 + 24) + v3) + 12);
  }
}

uint64_t sub_239962508(_QWORD *a1, unsigned int *a2)
{
  return *a1 + 4 * *a2;
}

uint64_t sub_239962518(uint64_t a1, unsigned int *a2)
{
  return *(_QWORD *)(a1 + 24) + 20 * *a2;
}

uint64_t sub_23996252C(uint64_t a1, unsigned int *a2)
{
  return *(_QWORD *)(a1 + 48) + 4 * *a2;
}

uint64_t sub_23996253C(uint64_t result, _DWORD *a2, _DWORD *a3)
{
  *(_DWORD *)(*(_QWORD *)(result + 24) + 20 * *a2 + 8) = *a3;
  *(_DWORD *)(*(_QWORD *)(result + 24) + 20 * *a3 + 4) = *a2;
  return result;
}

uint64_t sub_23996256C(uint64_t result, _DWORD *a2, _DWORD *a3)
{
  *(_DWORD *)(*(_QWORD *)(result + 24) + 20 * *a2) = *a3;
  *(_DWORD *)(*(_QWORD *)(result + 24) + 20 * *a3) = *a2;
  return result;
}

uint64_t sub_23996259C(uint64_t result, _DWORD *a2, _DWORD *a3)
{
  *(_DWORD *)(*(_QWORD *)(result + 48) + 4 * *a2) = *a3;
  *(_DWORD *)(*(_QWORD *)(result + 24) + 20 * *a3 + 16) = *a2;
  return result;
}

_QWORD *sub_2399625C8(_QWORD *result, _DWORD *a2, _DWORD *a3)
{
  *(_DWORD *)(result[3] + 20 * *a2 + 12) = *a3;
  *(_DWORD *)(*result + 4 * *a3) = *a2;
  return result;
}

_QWORD *sub_2399625F4(_QWORD *result, _DWORD *a2, _DWORD *a3)
{
  *(_DWORD *)(*result + 4 * *a2) = *a3;
  *(_DWORD *)(result[3] + 20 * *a3 + 12) = *a2;
  return result;
}

unint64_t sub_239962620(void **a1, _DWORD *a2)
{
  unint64_t v4;
  char *v5;
  char *v6;
  _DWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  _DWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  int v23;

  v5 = (char *)a1[1];
  v4 = (unint64_t)a1[2];
  v6 = v5;
  if ((unint64_t)v5 >= v4)
  {
    v8 = (char *)*a1;
    v9 = v5 - (_BYTE *)*a1;
    v10 = v9 >> 2;
    v11 = (v9 >> 2) + 1;
    if (v11 >> 62)
      sub_2394189F8();
    v12 = v4 - (_QWORD)v8;
    if (v12 >> 1 > v11)
      v11 = v12 >> 1;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL)
      v13 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v13 = v11;
    if (v13)
    {
      if (v13 >> 62)
        sub_239418A80();
      v14 = operator new(4 * v13);
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[4 * v10];
    *v15 = *a2;
    v7 = v15 + 1;
    if (v5 != v8)
    {
      v16 = v5 - v8 - 4;
      if (v16 < 0x2C)
        goto LABEL_28;
      if ((unint64_t)(v5 - v14 - v9) < 0x20)
        goto LABEL_28;
      v17 = (v16 >> 2) + 1;
      v18 = 4 * (v17 & 0x7FFFFFFFFFFFFFF8);
      v6 = &v5[-v18];
      v15 = (_DWORD *)((char *)v15 - v18);
      v19 = &v14[4 * v10 - 16];
      v20 = (__int128 *)(v5 - 16);
      v21 = v17 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v22 = *v20;
        *(v19 - 1) = *(v20 - 1);
        *v19 = v22;
        v19 -= 2;
        v20 -= 2;
        v21 -= 8;
      }
      while (v21);
      if (v17 != (v17 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_28:
        do
        {
          v23 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *--v15 = v23;
        }
        while (v6 != v8);
      }
      v6 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v7;
    a1[2] = &v14[4 * v13];
    if (v6)
      operator delete(v6);
  }
  else
  {
    *(_DWORD *)v5 = *a2;
    v7 = v5 + 4;
  }
  a1[1] = v7;
  return (unint64_t)((char *)v7 - (_BYTE *)*a1 - 4) >> 2;
}

uint64_t sub_239962794(_QWORD *a1, __int128 *a2)
{
  unint64_t v4;
  _DWORD *v5;
  __int128 v6;
  _DWORD *v7;
  _DWORD **v8;
  _DWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  v5 = (_DWORD *)a1[4];
  v4 = a1[5];
  if ((unint64_t)v5 >= v4)
  {
    v8 = (_DWORD **)(a1 + 3);
    v9 = (_DWORD *)a1[3];
    v10 = 0xCCCCCCCCCCCCCCCDLL * (v5 - v9) + 1;
    if (v10 > 0xCCCCCCCCCCCCCCCLL)
      sub_2394189F8();
    v11 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v4 - (_QWORD)v9) >> 2);
    if (2 * v11 > v10)
      v10 = 2 * v11;
    if (v11 >= 0x666666666666666)
      v12 = 0xCCCCCCCCCCCCCCCLL;
    else
      v12 = v10;
    if (v12)
    {
      if (v12 > 0xCCCCCCCCCCCCCCCLL)
        sub_239418A80();
      v13 = (char *)operator new(20 * v12);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[4 * (v5 - v9)];
    *(_OWORD *)v14 = *a2;
    *((_DWORD *)v14 + 4) = *((_DWORD *)a2 + 4);
    v7 = v14 + 20;
    if (v5 != v9)
    {
      do
      {
        v15 = *(_OWORD *)(v5 - 5);
        *((_DWORD *)v14 - 1) = *(v5 - 1);
        *(_OWORD *)(v14 - 20) = v15;
        v14 -= 20;
        v5 -= 5;
      }
      while (v5 != v9);
      v5 = *v8;
    }
    a1[3] = v14;
    a1[4] = v7;
    a1[5] = &v13[20 * v12];
    if (v5)
      operator delete(v5);
  }
  else
  {
    v6 = *a2;
    v5[4] = *((_DWORD *)a2 + 4);
    *(_OWORD *)v5 = v6;
    v7 = v5 + 5;
  }
  a1[4] = v7;
  return -858993459 * (((unint64_t)v7 - a1[3] - 20) >> 2);
}

unint64_t sub_2399628F8(_QWORD *a1, _DWORD *a2)
{
  unint64_t v4;
  char *v5;
  char *v6;
  _DWORD *v7;
  void **v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  int v23;

  v5 = (char *)a1[7];
  v4 = a1[8];
  v6 = v5;
  if ((unint64_t)v5 >= v4)
  {
    v8 = (void **)(a1 + 6);
    v9 = (char *)a1[6];
    v10 = (v5 - v9) >> 2;
    v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 62)
      sub_2394189F8();
    v12 = v4 - (_QWORD)v9;
    if (v12 >> 1 > v11)
      v11 = v12 >> 1;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL)
      v13 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v13 = v11;
    if (v13)
    {
      if (v13 >> 62)
        sub_239418A80();
      v14 = (char *)operator new(4 * v13);
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[4 * v10];
    *(_DWORD *)v15 = *a2;
    v7 = v15 + 4;
    if (v5 != v9)
    {
      v16 = v5 - v9 - 4;
      if (v16 < 0x2C)
        goto LABEL_28;
      if ((unint64_t)(v9 - v14) < 0x20)
        goto LABEL_28;
      v17 = (v16 >> 2) + 1;
      v18 = 4 * (v17 & 0x7FFFFFFFFFFFFFF8);
      v6 = &v5[-v18];
      v15 -= v18;
      v19 = &v14[4 * v10 - 16];
      v20 = (__int128 *)(v5 - 16);
      v21 = v17 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v22 = *v20;
        *((_OWORD *)v19 - 1) = *(v20 - 1);
        *(_OWORD *)v19 = v22;
        v19 -= 32;
        v20 -= 2;
        v21 -= 8;
      }
      while (v21);
      if (v17 != (v17 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_28:
        do
        {
          v23 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v15 - 1) = v23;
          v15 -= 4;
        }
        while (v6 != v9);
      }
      v6 = (char *)*v8;
    }
    a1[6] = v15;
    a1[7] = v7;
    a1[8] = &v14[4 * v13];
    if (v6)
      operator delete(v6);
  }
  else
  {
    *(_DWORD *)v5 = *a2;
    v7 = v5 + 4;
  }
  a1[7] = v7;
  return ((unint64_t)v7 - a1[6] - 4) >> 2;
}

void sub_239962A78(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;

  v2 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 2;
  v3 = a2 >= v2;
  v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_2394EE834((void **)a1, v4);
  }
  else if (!v3)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 4 * a2;
  }
}

void sub_239962AA4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = 0xCCCCCCCCCCCCCCCDLL * ((*(_QWORD *)(a1 + 32) - v2) >> 2);
  v4 = a2 >= v3;
  v5 = a2 - v3;
  if (v5 != 0 && v4)
  {
    sub_2394EE140((char **)(a1 + 24), v5);
  }
  else if (!v4)
  {
    *(_QWORD *)(a1 + 32) = v2 + 20 * a2;
  }
}

void sub_239962AE8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = (*(_QWORD *)(a1 + 56) - v2) >> 2;
  v4 = a2 >= v3;
  v5 = a2 - v3;
  if (v5 != 0 && v4)
  {
    sub_2394EE834((void **)(a1 + 48), v5);
  }
  else if (!v4)
  {
    *(_QWORD *)(a1 + 56) = v2 + 4 * a2;
  }
}

uint64_t sub_239962B1C(uint64_t result, _QWORD *a2, unsigned int *a3)
{
  uint64_t v3;
  int v4;

  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = -1;
  v3 = *a3;
  if ((_DWORD)v3 != -1)
  {
    v4 = *(_DWORD *)(*a2 + 4 * v3);
    *(_DWORD *)(result + 8) = v4;
    *(_DWORD *)(result + 12) = v4;
  }
  return result;
}

uint64_t sub_239962B44(_DWORD *a1)
{
  uint64_t result;
  int v3;

  result = a1[3];
  if ((_DWORD)result == -1
    || (v3 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 24)
                       + 20 * *(unsigned int *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + 20 * result + 4)),
        v3 == a1[2]))
  {
    v3 = -1;
  }
  a1[3] = v3;
  return result;
}

uint64_t sub_239962B88(_DWORD *a1)
{
  uint64_t result;
  int v3;

  result = a1[3];
  if ((_DWORD)result == -1
    || (v3 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 24)
                       + 20 * *(unsigned int *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + 20 * result)
                       + 8),
        v3 == a1[2]))
  {
    v3 = -1;
  }
  a1[3] = v3;
  return result;
}

_QWORD *sub_239962BCC(_QWORD *result, char *__src, char *a3, size_t __sz)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  size_t v14;
  void **v15;
  _BYTE *v16;
  char *v17;
  void *v18;

  v6 = __src;
  v7 = result;
  v8 = result[2];
  v9 = (char *)*result;
  if (0xCCCCCCCCCCCCCCCDLL * ((v8 - *result) >> 2) < __sz)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (__sz > 0xCCCCCCCCCCCCCCCLL)
      goto LABEL_23;
    v10 = 0xCCCCCCCCCCCCCCCDLL * (v8 >> 2);
    v11 = 2 * v10;
    if (2 * v10 <= __sz)
      v11 = __sz;
    v12 = v10 >= 0x666666666666666 ? 0xCCCCCCCCCCCCCCCLL : v11;
    if (v12 > 0xCCCCCCCCCCCCCCCLL)
LABEL_23:
      sub_2394189F8();
    v13 = 20 * v12;
    result = operator new(20 * v12);
    v9 = (char *)result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + v13;
    v14 = a3 - v6;
    if (v14)
      result = memcpy(result, v6, v14);
    v15 = (void **)(v7 + 1);
    goto LABEL_22;
  }
  v15 = (void **)(result + 1);
  v16 = (_BYTE *)result[1];
  if (0xCCCCCCCCCCCCCCCDLL * ((v16 - v9) >> 2) >= __sz)
  {
    v14 = a3 - __src;
    if (a3 == __src)
      goto LABEL_22;
    v18 = (void *)*result;
LABEL_21:
    result = memmove(v18, __src, v14);
    goto LABEL_22;
  }
  v17 = &__src[4 * ((v16 - v9) >> 2)];
  if (v16 != v9)
  {
    result = memmove((void *)*result, __src, v16 - v9);
    v9 = (char *)*v15;
  }
  v14 = a3 - v17;
  if (v14)
  {
    v18 = v9;
    __src = v17;
    goto LABEL_21;
  }
LABEL_22:
  *v15 = &v9[v14];
  return result;
}

uint64_t sub_239962D44(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  void *exception;
  int v26;
  _DWORD v27[3];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  sub_23995FB50((_QWORD *)a1);
  v6 = (uint64_t)(a2[1] - *a2) >> 2;
  v7 = v6 / 3;
  if (v6 != 3 * (v6 / 3))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x23B83DB6C](exception, "in_positions length not divisible by 3");
    goto LABEL_18;
  }
  v8 = (a3[1] - *a3) >> 2;
  v9 = v8 / 3;
  if (v8 != 3 * (v8 / 3))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x23B83DB6C](exception, "indices length not divisible by 3");
LABEL_18:
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  v10 = v7;
  sub_23995FDF8((_QWORD *)a1, v7);
  v11 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v13 = *v11;
  v12 = (std::__shared_weak_count *)v11[1];
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v10)
  {
    v17 = 0;
    v18 = 0;
    do
    {
      v19 = *a2 + v17;
      *(_QWORD *)&v20 = *(_QWORD *)v19;
      *((_QWORD *)&v20 + 1) = *(unsigned int *)(v19 + 8);
      *(_OWORD *)(*(_QWORD *)(v13 + 40) + v18) = v20;
      v18 += 16;
      v17 += 12;
    }
    while (16 * v10 != v18);
  }
  sub_23995FFB0((_QWORD *)a1, v9);
  sub_23996055C((_QWORD *)a1);
  if ((_DWORD)v9)
  {
    v21 = 0;
    v22 = 2;
    do
    {
      v23 = *a3;
      v27[0] = *(_DWORD *)(*a3 + 4 * (v22 - 2));
      v27[1] = *(_DWORD *)(v23 + 4 * (v22 - 1));
      v27[2] = *(_DWORD *)(v23 + 4 * v22);
      v26 = v21;
      sub_2399607E0(a1, &v26, v27, 3u, 0);
      ++v21;
      v22 += 3;
    }
    while (v9 != v21);
  }
  sub_23996065C(a1);
  return 1;
}

void sub_239962F70(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_239962F84(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239962F9C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;

  v1 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v2 = *v1;
  v3 = (std::__shared_weak_count *)v1[1];
  if (!v3)
    return v2;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldxr(p_shared_owners);
  while (__stxr(v5 + 1, p_shared_owners));
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return v2;
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return v2;
}

_QWORD *sub_23996301C(uint64_t a1)
{
  _QWORD *result;

  result = (_QWORD *)sub_23995F710(a1);
  *result = &off_250AF0D48;
  return result;
}

void sub_239963040(uint64_t a1)
{
  sub_23995FA00(a1);
  JUMPOUT(0x23B83E31CLL);
}

uint64_t sub_239963064(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  unsigned int *v8;
  _DWORD *v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int32 v26;
  char *v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  _DWORD *v34;
  unint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  char *v44;
  uint64_t v45;
  unsigned int v46;
  char *v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  int v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  void *__p;
  char *v66;
  char *v67;
  unsigned int v68;
  int32x2_t v69;
  uint64_t v70;

  v70 = *MEMORY[0x24BDAC8D0];
  v2 = a1[13];
  v4 = a1[14];
  v3 = a1 + 13;
  v5 = a1[20] - a1[19];
  v6 = 3 * (v5 >> 2);
  if (3 * (v5 >> 2))
  {
    v7 = 4 * v6;
    v8 = (unsigned int *)operator new(4 * v6);
    bzero(v8, v7);
  }
  else
  {
    v8 = 0;
  }
  v9 = operator new(0xCuLL);
  *(_QWORD *)v9 = -1;
  v9[2] = -1;
  v11 = v5 & 0x3FFFFFFFCLL;
  v10 = (v5 & 0x3FFFFFFFCLL) == 0;
  v12 = (v5 >> 2);
  if (!v10)
  {
    v13 = 0;
    v14 = 0;
    do
    {
      LODWORD(__p) = v14;
      v15 = (unsigned int *)sub_23996252C((uint64_t)v3, (unsigned int *)&__p);
      v16 = (unsigned int *)sub_239962518((uint64_t)v3, v15);
      *v9 = *(_DWORD *)(sub_239962518((uint64_t)v3, v16) + 12);
      v17 = (unsigned int *)sub_23996252C((uint64_t)v3, (unsigned int *)&__p);
      v18 = sub_239962518((uint64_t)v3, v17);
      v19 = (unsigned int *)sub_239962518((uint64_t)v3, (unsigned int *)(v18 + 8));
      v9[1] = *(_DWORD *)(sub_239962518((uint64_t)v3, v19) + 12);
      v20 = (unsigned int *)sub_23996252C((uint64_t)v3, (unsigned int *)&__p);
      v21 = *(_DWORD *)(sub_239962518((uint64_t)v3, v20) + 12);
      v9[2] = v21;
      v22 = v9[1];
      v8[v13] = *v9;
      v8[v13 + 1] = v22;
      v8[v13 + 2] = v21;
      ++v14;
      v13 += 3;
    }
    while (v12 != v14);
  }
  v62 = v12;
  sub_239962124(v3);
  v61 = ((unint64_t)(v4 - v2) >> 2);
  sub_239962A78((uint64_t)v3, v61);
  __p = 0;
  v66 = 0;
  v67 = 0;
  sub_239962AE8((uint64_t)v3, v12);
  sub_23996055C(a1);
  if (!v11)
  {
    v44 = 0;
    goto LABEL_58;
  }
  v23 = 0;
  v24 = 0;
  v63 = (unint64_t)(v4 - v2) >> 2;
  do
  {
    v26 = v8[(3 * v24 + 1)];
    v68 = v8[(3 * v24)];
    v69.i32[0] = v26;
    v69.i32[1] = v8[(3 * v24 + 2)];
    v64 = v24;
    if ((sub_2399607E0((uint64_t)a1, &v64, &v68, 3u, 1) & 1) == 0)
    {
      if (v23 < v67)
      {
        *(_DWORD *)v23 = v24;
        v25 = (uint64_t)(v23 + 4);
      }
      else
      {
        v27 = (char *)__p;
        v28 = v23 - (_BYTE *)__p;
        v29 = (v23 - (_BYTE *)__p) >> 2;
        v30 = v29 + 1;
        if ((unint64_t)(v29 + 1) >> 62)
          sub_2394189F8();
        v31 = v67 - (_BYTE *)__p;
        if ((v67 - (_BYTE *)__p) >> 1 > v30)
          v30 = v31 >> 1;
        if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL)
          v32 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v32 = v30;
        if (v32)
        {
          if (v32 >> 62)
            sub_239418A80();
          v33 = operator new(4 * v32);
          v34 = &v33[4 * v29];
          *v34 = v24;
          v25 = (uint64_t)(v34 + 1);
          if (v23 != v27)
          {
LABEL_23:
            v35 = v23 - 4 - v27;
            if (v35 < 0xBC
              || &v33[v28 - 4 - (v35 & 0xFFFFFFFFFFFFFFFCLL)] > &v33[v28 - 4]
              || &v23[-(v35 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v23 - 4
              || (unint64_t)(v23 - v33 - v28) < 0x20)
            {
              v36 = v23;
              v12 = v62;
            }
            else
            {
              v38 = (v35 >> 2) + 1;
              v39 = 4 * (v38 & 0x7FFFFFFFFFFFFFF8);
              v36 = &v23[-v39];
              v34 = (_DWORD *)((char *)v34 - v39);
              v40 = &v33[4 * v29 - 16];
              v41 = v23 - 16;
              v42 = v38 & 0x7FFFFFFFFFFFFFF8;
              v12 = v62;
              do
              {
                v43 = *(_OWORD *)v41;
                *(v40 - 1) = *((_OWORD *)v41 - 1);
                *v40 = v43;
                v40 -= 2;
                v41 -= 32;
                v42 -= 8;
              }
              while (v42);
              if (v38 == (v38 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_26:
                v23 = (char *)__p;
                __p = v34;
                v66 = (char *)v25;
                v67 = &v33[4 * v32];
                if (!v23)
                  goto LABEL_10;
                goto LABEL_30;
              }
            }
            do
            {
              v37 = *((_DWORD *)v36 - 1);
              v36 -= 4;
              *--v34 = v37;
            }
            while (v36 != v27);
            goto LABEL_26;
          }
        }
        else
        {
          v33 = 0;
          v34 = (_DWORD *)(4 * v29);
          *(_DWORD *)(4 * v29) = v24;
          v25 = 4 * v29 + 4;
          if (v23 != v27)
            goto LABEL_23;
        }
        v12 = v62;
        __p = v34;
        v66 = (char *)v25;
        v67 = &v33[4 * v32];
        if (v23)
LABEL_30:
          operator delete(v23);
      }
LABEL_10:
      v66 = (char *)v25;
      v23 = (char *)v25;
    }
    ++v24;
  }
  while (v24 != v12);
  v44 = (char *)__p;
  if (v23 != __p)
  {
    sub_23995FDF8(a1, ((v23 - (_BYTE *)__p) >> 1) + ((v23 - (_BYTE *)__p) >> 2) + v61);
    v45 = 0;
    v46 = 0;
    do
    {
      v47 = &v44[4 * v45];
      v48 = *(_DWORD *)v47;
      v49 = 3 * v46 + v63;
      v68 = 3 * v46 + v63;
      v69 = vadd_s32(vdup_n_s32(v49), (int32x2_t)0x200000001);
      v51 = (_QWORD *)a1[1];
      v50 = (_QWORD *)a1[2];
      if (v51 != v50)
      {
        v52 = 3 * v48;
        v53 = v8[3 * v48];
        do
        {
          if (*v51)
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*v51 + 64))(*v51, v53, v49);
            v50 = (_QWORD *)a1[2];
          }
          v51 += 2;
        }
        while (v51 != v50);
        v54 = (_QWORD *)a1[1];
        if (v54 != v50)
        {
          v55 = v69.u32[0];
          v56 = v8[v52 + 1];
          do
          {
            if (*v54)
            {
              (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*v54 + 64))(*v54, v56, v55);
              v50 = (_QWORD *)a1[2];
            }
            v54 += 2;
          }
          while (v54 != v50);
          v57 = (_QWORD *)a1[1];
          if (v57 != v50)
          {
            v58 = v8[v52 + 2];
            v59 = v69.u32[1];
            do
            {
              if (*v57)
              {
                (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*v57 + 64))(*v57, v58, v59);
                v50 = (_QWORD *)a1[2];
              }
              v57 += 2;
            }
            while (v57 != v50);
          }
        }
      }
      sub_2399607E0((uint64_t)a1, v47, &v68, 3u, 0);
      v44 = (char *)__p;
      v45 = ++v46;
    }
    while (v46 < (unint64_t)((v66 - (_BYTE *)__p) >> 2));
  }
LABEL_58:
  sub_23996065C((uint64_t)a1);
  if (v44)
  {
    v66 = v44;
    operator delete(v44);
  }
  operator delete(v9);
  if (v8)
    operator delete(v8);
  return 1;
}

void sub_2399635CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  void *v14;

  if (v14)
    operator delete(v14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23996362C(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int *v11;
  uint64_t result;

  v5 = a1 + 104;
  v6 = (unsigned int *)sub_23996252C(a1 + 104, a2);
  v7 = (unsigned int *)sub_239962518(v5, v6);
  **(_DWORD **)a3 = *(_DWORD *)(sub_239962518(v5, v7) + 12);
  v8 = (unsigned int *)sub_23996252C(v5, a2);
  v9 = sub_239962518(v5, v8);
  v10 = (unsigned int *)sub_239962518(v5, (unsigned int *)(v9 + 8));
  *(_DWORD *)(*(_QWORD *)a3 + 4) = *(_DWORD *)(sub_239962518(v5, v10) + 12);
  v11 = (unsigned int *)sub_23996252C(v5, a2);
  result = sub_239962518(v5, v11);
  *(_DWORD *)(*(_QWORD *)a3 + 8) = *(_DWORD *)(result + 12);
  return result;
}

void sub_2399636E4(uint64_t a1, unsigned int a2, unsigned int a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unint64_t v11;
  char v12;
  size_t v13;
  void **v14;
  int v15;
  _BOOL4 v16;
  void *__p[2];
  uint64_t v18;
  void *__dst[2];
  char v20;

  v5 = *(_QWORD **)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 16);
  if (v5 != v4)
  {
    v7 = a2;
    v8 = a3;
    if ((a4 & 1) == 0)
    {
      while (1)
      {
        v9 = *v5;
        if (*v5)
          break;
LABEL_7:
        v5 += 2;
        if (v5 == *(_QWORD **)(a1 + 16))
          return;
      }
      if (*(char *)(v9 + 31) < 0)
      {
        sub_23941A7F8(__p, *(void **)(v9 + 8), *(_QWORD *)(v9 + 16));
      }
      else
      {
        v10 = *(_OWORD *)(v9 + 8);
        v18 = *(_QWORD *)(v9 + 24);
        *(_OWORD *)__p = v10;
      }
      v11 = HIBYTE(v18);
      v12 = HIBYTE(v18);
      if (v18 < 0)
        v11 = (unint64_t)__p[1];
      if (v11 >= 2)
        v13 = 2;
      else
        v13 = v11;
      v20 = v13;
      if (!v13)
        goto LABEL_25;
      if (v18 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      memcpy(__dst, v14, v13);
      v15 = v20;
      *((_BYTE *)__dst + v13) = 0;
      if ((v15 & 0x80000000) == 0)
      {
        if (v15 == 2)
        {
          v16 = LOWORD(__dst[0]) != 14966;
          if ((v12 & 0x80) == 0)
            goto LABEL_27;
          goto LABEL_26;
        }
LABEL_25:
        v16 = 1;
        if ((v12 & 0x80) == 0)
          goto LABEL_27;
        goto LABEL_26;
      }
      if (__dst[1] == (void *)2)
      {
        v16 = *(_WORD *)__dst[0] != 14966;
        operator delete(__dst[0]);
        if (v18 < 0)
LABEL_26:
          operator delete(__p[0]);
      }
      else
      {
        v16 = 1;
        operator delete(__dst[0]);
        if (v18 < 0)
          goto LABEL_26;
      }
LABEL_27:
      if (v16)
        (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*v5 + 64))(*v5, v7, v8);
      goto LABEL_7;
    }
    do
    {
      if (*v5)
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*v5 + 64))(*v5, v7, v8);
        v4 = *(_QWORD **)(a1 + 16);
      }
      v5 += 2;
    }
    while (v5 != v4);
  }
}

_DWORD *sub_23996389C(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int *v7;
  _DWORD *result;

  v5 = a1 + 104;
  v6 = (unsigned int *)sub_23996252C(a1 + 104, a2);
  **(_DWORD **)a3 = *(_DWORD *)(sub_239962518(v5, v6) + 8);
  v7 = (unsigned int *)sub_23996252C(v5, a2);
  *(_DWORD *)(*(_QWORD *)a3 + 4) = *(_DWORD *)(sub_239962518(v5, v7) + 4);
  result = (_DWORD *)sub_23996252C(v5, a2);
  *(_DWORD *)(*(_QWORD *)a3 + 8) = *result;
  return result;
}

uint64_t sub_239963924(uint64_t a1, unsigned int *a2, int a3, unsigned int *a4)
{
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t result;
  int v24;
  int32x4_t v25;
  int32x4_t v26;
  int32x4_t v27;
  int32x4_t v28;
  int32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float v43;
  float v44;
  float32x4_t v45;
  float v46;
  float32x4_t v47;
  float32x4_t v48;
  float v49;
  float v50;
  BOOL v51;
  float32x4_t v52;
  float v53;
  float v54;
  float v55;
  BOOL v56;
  float32x4_t v57;
  float v58;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  int v64;
  char v65;
  unsigned int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  _DWORD *v78;
  uint64_t v79;
  _DWORD *v80;
  void *__p[2];
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  uint64_t v85[3];
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;

  v8 = *a2;
  v9 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v11 = *v9;
  v10 = (std::__shared_weak_count *)v9[1];
  if (!v10)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldxr(p_shared_owners);
  while (__stxr(v13 + 1, p_shared_owners));
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (((*(_QWORD *)(*(_QWORD *)(v11 + 40) + ((v8 >> 3) & 0x1FFFFFF8)) >> v8) & 1) != 0)
      return 0;
  }
  else
  {
LABEL_6:
    if (((*(_QWORD *)(*(_QWORD *)(v11 + 40) + ((v8 >> 3) & 0x1FFFFFF8)) >> v8) & 1) != 0)
      return 0;
  }
  v15 = *(unsigned int *)sub_239962518(a1 + 104, a2);
  v16 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v18 = *v16;
  v17 = (std::__shared_weak_count *)v16[1];
  if (!v17)
    goto LABEL_12;
  v19 = (unint64_t *)&v17->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    if (((*(_QWORD *)(*(_QWORD *)(v18 + 40) + ((v15 >> 3) & 0x1FFFFFF8)) >> v15) & 1) != 0)
      return 0;
  }
  else
  {
LABEL_12:
    if (((*(_QWORD *)(*(_QWORD *)(v18 + 40) + ((v15 >> 3) & 0x1FFFFFF8)) >> v15) & 1) != 0)
      return 0;
  }
  v97 = *a2;
  v96 = *(_DWORD *)(sub_239962518(a1 + 104, &v97) + 8);
  v95 = *(_DWORD *)(sub_239962518(a1 + 104, &v96) + 8);
  v94 = *(_DWORD *)sub_239962518(a1 + 104, &v97);
  v93 = *(_DWORD *)(sub_239962518(a1 + 104, &v94) + 8);
  v92 = *(_DWORD *)(sub_239962518(a1 + 104, &v93) + 8);
  v91 = *(_DWORD *)(sub_239962518(a1 + 104, &v97) + 16);
  v90 = *(_DWORD *)(sub_239962518(a1 + 104, &v94) + 16);
  v89 = *(_DWORD *)(sub_239962518(a1 + 104, &v97) + 12);
  v88 = *(_DWORD *)(sub_239962518(a1 + 104, &v94) + 12);
  v87 = *(_DWORD *)(sub_239962518(a1 + 104, &v95) + 12);
  v22 = *(_DWORD *)(sub_239962518(a1 + 104, &v92) + 12);
  v86 = v22;
  if (v89 == v88)
    return 0;
  result = 0;
  if (v88 == v87 || v89 == v87 || v89 == v22 || v88 == v22 || v87 == v22)
    return result;
  sub_239962480((uint64_t)v85, (_QWORD *)(a1 + 104), &v87);
  while (1)
  {
    v24 = sub_2399624A8(v85);
    if (v24 == -1)
      break;
    if (v24 == v86)
      return 0;
  }
  if (a3)
  {
    sub_239964188(a1, &v89, (__n128 *)__p);
    sub_239964188(a1, &v88, (__n128 *)&v84);
    sub_239964188(a1, &v87, (__n128 *)&v83);
    sub_239964188(a1, &v86, (__n128 *)&v82);
    v25 = (int32x4_t)vsubq_f32(v84, *(float32x4_t *)__p);
    v26 = (int32x4_t)vsubq_f32(v83, *(float32x4_t *)__p);
    v27 = (int32x4_t)vsubq_f32(v82, *(float32x4_t *)__p);
    v28 = (int32x4_t)vsubq_f32(v84, v82);
    v29 = (int32x4_t)vsubq_f32(v83, v82);
    v30 = (float32x4_t)vzip2q_s32(vzip1q_s32(v25, (int32x4_t)vextq_s8((int8x16_t)v25, (int8x16_t)v25, 0xCuLL)), v25);
    v31 = (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v26, 4uLL), v26);
    v32 = (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v25, (int8x16_t)v25, 4uLL), v25);
    v33 = (float32x4_t)vzip2q_s32(vzip1q_s32(v26, (int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v26, 0xCuLL)), v26);
    v34 = vmlsq_f32(vmulq_f32(v30, v31), v33, v32);
    v35 = (float32x4_t)vzip2q_s32(vzip1q_s32(v27, (int32x4_t)vextq_s8((int8x16_t)v27, (int8x16_t)v27, 0xCuLL)), v27);
    v36 = (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v27, (int8x16_t)v27, 4uLL), v27);
    v37 = vmlsq_f32(vmulq_f32(v32, v35), v30, v36);
    v38 = vmlsq_f32(vmulq_f32((float32x4_t)vzip2q_s32(vzip1q_s32(v28, (int32x4_t)vextq_s8((int8x16_t)v28, (int8x16_t)v28, 0xCuLL)), v28), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v29, (int8x16_t)v29, 4uLL), v29)), (float32x4_t)vzip2q_s32(vzip1q_s32(v29, (int32x4_t)vextq_s8((int8x16_t)v29, (int8x16_t)v29, 0xCuLL)), v29), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v28, (int8x16_t)v28, 4uLL), v28));
    v39 = vmlsq_f32(vmulq_f32(v31, v35), v33, v36);
    v40 = vmulq_f32(v34, v34);
    v40.i32[3] = 0;
    v41 = vmulq_f32(v37, v37);
    v41.i32[3] = 0;
    v42 = vmulq_f32(v38, v38);
    v42.i32[3] = 0;
    v43 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v41, v41));
    v44 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v42, v42));
    v45 = vmulq_f32(v39, v39);
    v45.i32[3] = 0;
    v46 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v45, v45));
    v47 = vmulq_f32(v34, v38);
    v47.i32[3] = 0;
    v40.f32[0] = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v40, v40)) * 0.70711;
    v51 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v47, v47)) < (float)(v40.f32[0] * v44);
    v48 = vmulq_f32(v34, v39);
    v48.i32[3] = 0;
    v49 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v48, v48));
    v50 = v40.f32[0] * v46;
    v51 = v51 || v49 < v50;
    v52 = vmulq_f32(v37, v38);
    v52.i32[3] = 0;
    v53 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v52, v52));
    v54 = v43 * 0.70711;
    v55 = (float)(v43 * 0.70711) * v44;
    v56 = v51 || v53 < v55;
    v57 = vmulq_f32(v37, v39);
    v57.i32[3] = 0;
    v58 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v57, v57));
    if (v56 || v58 < (float)(v54 * v46))
      return 0;
  }
  if (*a4 != -1)
  {
    sub_239926B74(__p, 3uLL);
    sub_23996362C(a1, &v91, (uint64_t)__p);
    if (*(_DWORD *)__p[0] != v89)
    {
      if (*((_DWORD *)__p[0] + 1) == v89)
      {
        v60 = 1;
LABEL_47:
        if (*(_DWORD *)__p[0] == v88)
          goto LABEL_52;
        if (*((_DWORD *)__p[0] + 1) == v88)
        {
          v66 = 1;
          goto LABEL_53;
        }
        if (*((_DWORD *)__p[0] + 2) != v88)
LABEL_52:
          v66 = 0;
        else
          v66 = 2;
LABEL_53:
        sub_23996362C(a1, &v90, (uint64_t)__p);
        if (*(_DWORD *)__p[0] != v89)
        {
          if (*((_DWORD *)__p[0] + 1) == v89)
          {
            v67 = 1;
LABEL_59:
            if (*(_DWORD *)__p[0] == v88)
              goto LABEL_64;
            if (*((_DWORD *)__p[0] + 1) == v88)
            {
              v68 = 1;
              goto LABEL_65;
            }
            if (*((_DWORD *)__p[0] + 2) != v88)
LABEL_64:
              v68 = 0;
            else
              v68 = 2;
LABEL_65:
            v69 = sub_239964210(a1, *a4);
            v70 = v91;
            v71 = *(_QWORD *)(v69 + 40);
            v72 = sub_239964210(a1, *a4);
            v73 = v71 + 12 * v70;
            v74 = *(_QWORD *)(v72 + 40) + 12 * v90;
            v64 = *(_DWORD *)(v73 + 4 * v60);
            if (v64 == *(_DWORD *)(v74 + 4 * v67)
              && (v63 = *(_DWORD *)(v73 + 4 * v66), v63 == *(_DWORD *)(v74 + 4 * v68)))
            {
              v65 = 0;
              v75 = 1;
              if (v66 >= 2)
                v75 = -2;
              v62 = *(_DWORD *)(v73 + 4 * (v75 + v66));
              if (v67 > 1)
                v76 = -2;
              else
                v76 = 1;
              v61 = *(_DWORD *)(v74 + 4 * (int)(v76 + v67));
            }
            else
            {
              v61 = 0;
              v62 = 0;
              v63 = 0;
              v64 = 0;
              v65 = 1;
            }
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
            goto LABEL_76;
          }
          if (*((_DWORD *)__p[0] + 2) == v89)
          {
            v67 = 2;
            goto LABEL_59;
          }
        }
        v67 = 0;
        goto LABEL_59;
      }
      if (*((_DWORD *)__p[0] + 2) == v89)
      {
        v60 = 2;
        goto LABEL_47;
      }
    }
    v60 = 0;
    goto LABEL_47;
  }
  v61 = 0;
  v62 = 0;
  v63 = 0;
  v64 = 0;
  v65 = 0;
LABEL_76:
  sub_23996253C(a1 + 104, &v96, &v94);
  sub_23996253C(a1 + 104, &v94, &v92);
  sub_23996253C(a1 + 104, &v92, &v96);
  sub_23996253C(a1 + 104, &v97, &v95);
  sub_23996253C(a1 + 104, &v95, &v93);
  sub_23996253C(a1 + 104, &v93, &v97);
  sub_2399625C8((_QWORD *)(a1 + 104), &v97, &v86);
  sub_2399625C8((_QWORD *)(a1 + 104), &v94, &v87);
  sub_2399625F4((_QWORD *)(a1 + 104), &v89, &v93);
  sub_2399625F4((_QWORD *)(a1 + 104), &v88, &v96);
  sub_2399625F4((_QWORD *)(a1 + 104), &v87, &v95);
  sub_2399625F4((_QWORD *)(a1 + 104), &v86, &v92);
  sub_23996259C(a1 + 104, &v91, &v93);
  sub_23996259C(a1 + 104, &v90, &v96);
  result = 1;
  if ((v65 & 1) == 0 && *a4 != -1)
  {
    v77 = sub_239964210(a1, *a4);
    v78 = (_DWORD *)(*(_QWORD *)(v77 + 40) + 12 * v91);
    *v78 = v61;
    v78[1] = v62;
    v78[2] = v64;
    v79 = sub_239964210(a1, *a4);
    v80 = (_DWORD *)(*(_QWORD *)(v79 + 40) + 12 * v90);
    *v80 = v62;
    v80[1] = v61;
    v80[2] = v63;
    return 1;
  }
  return result;
}

void sub_2399640C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (!__p)
    _Unwind_Resume(exception_object);
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2399640F8(uint64_t a1, unsigned int *a2)
{
  unint64_t v2;
  uint64_t *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;

  v2 = *a2;
  v3 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v5 = *v3;
  v4 = (std::__shared_weak_count *)v3[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return (*(_QWORD *)(*(_QWORD *)(v5 + 40) + ((v2 >> 3) & 0x1FFFFFF8)) >> v2) & 1;
}

__n128 sub_239964188@<Q0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, __n128 *a3@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  __n128 result;

  v4 = *a2;
  v5 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v7 = *v5;
  v6 = (std::__shared_weak_count *)v5[1];
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  result = *(__n128 *)(*(_QWORD *)(v7 + 40) + 16 * v4);
  *a3 = result;
  return result;
}

uint64_t sub_239964210(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;

  v2 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a2);
  v3 = *v2;
  v4 = (std::__shared_weak_count *)v2[1];
  if (!v4)
    return v3;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (v7)
    return v3;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v3;
}

uint64_t sub_23996428C(uint64_t a1, unsigned int *a2, unsigned int *a3, int a4)
{
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int *v16;
  unsigned int *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unsigned int *v28;
  int v29;
  unsigned int *v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t *v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  std::__shared_weak_count *v58;
  uint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  std::__shared_weak_count *v65;
  uint64_t v66;
  unint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t *v80;
  unint64_t v81;
  int v82;
  unsigned int v83[2];
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;

  v88 = *MEMORY[0x24BDAC8D0];
  v8 = *a2;
  v9 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v11 = *v9;
  v10 = (std::__shared_weak_count *)v9[1];
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v11 + 40) + ((v8 >> 3) & 0x1FFFFFF8));
  v16 = (unsigned int *)sub_239962518(a1 + 104, a2);
  v17 = v16;
  if (((v15 >> v8) & 1) != 0)
  {
    v18 = a1;
    return sub_239964918(v18, v17, a3);
  }
  v19 = *v16;
  v20 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v22 = *v20;
  v21 = (std::__shared_weak_count *)v20[1];
  if (!v21)
    goto LABEL_14;
  v23 = (unint64_t *)&v21->__shared_owners_;
  do
    v24 = __ldxr(v23);
  while (__stxr(v24 + 1, v23));
  do
    v25 = __ldaxr(v23);
  while (__stlxr(v25 - 1, v23));
  if (!v25)
  {
    ((void (*)(std::__shared_weak_count *, unsigned int *))v21->__on_zero_shared)(v21, v16);
    std::__shared_weak_count::__release_weak(v21);
    if (((*(_QWORD *)(*(_QWORD *)(v22 + 40) + ((v19 >> 3) & 0x1FFFFFF8)) >> v19) & 1) != 0)
      goto LABEL_15;
  }
  else
  {
LABEL_14:
    if (((*(_QWORD *)(*(_QWORD *)(v22 + 40) + ((v19 >> 3) & 0x1FFFFFF8)) >> v19) & 1) != 0)
    {
LABEL_15:
      v18 = a1;
      v17 = a2;
      return sub_239964918(v18, v17, a3);
    }
  }
  v27 = sub_239962518(a1 + 104, a2);
  v28 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)(v27 + 8));
  v29 = *(_DWORD *)(sub_239962518(a1 + 104, v28) + 12);
  v30 = (unsigned int *)sub_239962518(a1 + 104, a2);
  v31 = sub_239962518(a1 + 104, v30);
  if (v29 == *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)(v31 + 4)) + 12))
    return 0;
  v86 = -1;
  v85 = -1;
  v87 = -1;
  v32 = -858993459 * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2);
  sub_23995FED4((_QWORD *)a1, v32 + 6);
  v84 = v32;
  v33 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v35 = *v33;
  v34 = (std::__shared_weak_count *)v33[1];
  if (v34)
  {
    v36 = (unint64_t *)&v34->__shared_owners_;
    do
      v37 = __ldxr(v36);
    while (__stxr(v37 + 1, v36));
    do
      v38 = __ldaxr(v36);
    while (__stlxr(v38 - 1, v36));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v35 + 40) + 8 * (v32 >> 6)) &= ~(1 << v32);
  LODWORD(v85) = v32 + 1;
  v39 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v41 = *v39;
  v40 = (std::__shared_weak_count *)v39[1];
  if (v40)
  {
    v42 = (unint64_t *)&v40->__shared_owners_;
    do
      v43 = __ldxr(v42);
    while (__stxr(v43 + 1, v42));
    do
      v44 = __ldaxr(v42);
    while (__stlxr(v44 - 1, v42));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v41 + 40) + (((unint64_t)(v32 + 1) >> 3) & 0x1FFFFFF8)) &= ~(1 << (v32 + 1));
  HIDWORD(v85) = v32 + 2;
  v45 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v47 = *v45;
  v46 = (std::__shared_weak_count *)v45[1];
  if (v46)
  {
    v48 = (unint64_t *)&v46->__shared_owners_;
    do
      v49 = __ldxr(v48);
    while (__stxr(v49 + 1, v48));
    do
      v50 = __ldaxr(v48);
    while (__stlxr(v50 - 1, v48));
    if (!v50)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v47 + 40) + (((unint64_t)(v32 + 2) >> 3) & 0x1FFFFFF8)) &= ~(1 << (v32 + 2));
  LODWORD(v86) = v32 + 3;
  v51 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v53 = *v51;
  v52 = (std::__shared_weak_count *)v51[1];
  if (v52)
  {
    v54 = (unint64_t *)&v52->__shared_owners_;
    do
      v55 = __ldxr(v54);
    while (__stxr(v55 + 1, v54));
    do
      v56 = __ldaxr(v54);
    while (__stlxr(v56 - 1, v54));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v53 + 40) + (((unint64_t)(v32 + 3) >> 3) & 0x1FFFFFF8)) &= ~(1 << (v32 + 3));
  HIDWORD(v86) = v32 + 4;
  v57 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v59 = *v57;
  v58 = (std::__shared_weak_count *)v57[1];
  if (v58)
  {
    v60 = (unint64_t *)&v58->__shared_owners_;
    do
      v61 = __ldxr(v60);
    while (__stxr(v61 + 1, v60));
    do
      v62 = __ldaxr(v60);
    while (__stlxr(v62 - 1, v60));
    if (!v62)
    {
      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v59 + 40) + (((unint64_t)(v32 + 4) >> 3) & 0x1FFFFFF8)) &= ~(1 << (v32 + 4));
  v63 = v32 + 5;
  v87 = v63;
  v64 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v66 = *v64;
  v65 = (std::__shared_weak_count *)v64[1];
  if (v65)
  {
    v67 = (unint64_t *)&v65->__shared_owners_;
    do
      v68 = __ldxr(v67);
    while (__stxr(v68 + 1, v67));
    do
      v69 = __ldaxr(v67);
    while (__stlxr(v69 - 1, v67));
    if (!v69)
    {
      ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
      std::__shared_weak_count::__release_weak(v65);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v66 + 40) + ((v63 >> 3) & 0x1FFFFFF8)) &= ~(1 << v63);
  v70 = (*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
  sub_23995FFB0((_QWORD *)a1, (v70 + 2));
  v83[0] = v70;
  v83[1] = v70 + 1;
  v71 = *a3;
  if (*a3 == -1)
  {
    v82 = -1;
    *a3 = sub_239962620((void **)(a1 + 104), &v82);
    v72 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
    v73 = *(uint64_t **)(a1 + 8);
    v74 = *(uint64_t **)(a1 + 16);
    if (v73 != v74)
    {
      v75 = v72;
      do
      {
        v76 = *v73;
        v77 = (std::__shared_weak_count *)v73[1];
        if (v77)
        {
          v78 = (unint64_t *)&v77->__shared_owners_;
          do
            v79 = __ldxr(v78);
          while (__stxr(v79 + 1, v78));
        }
        if (v76)
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v76 + 32))(v76, v75);
        if (v77)
        {
          v80 = (unint64_t *)&v77->__shared_owners_;
          do
            v81 = __ldaxr(v80);
          while (__stlxr(v81 - 1, v80));
          if (!v81)
          {
            ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
            std::__shared_weak_count::__release_weak(v77);
          }
        }
        v73 += 2;
      }
      while (v73 != v74);
    }
  }
  return sub_239965DFC(a1, a2, a3, v83, &v84, a4, v71 == -1);
}

void sub_2399648F8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBEB78();
  _Unwind_Resume(exception_object);
}

uint64_t sub_239964918(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  unsigned int *v4;
  uint64_t **v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  char *v22;
  size_t v23;
  size_t v24;
  float32x4_t *p_dst;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  size_t v29;
  size_t v30;
  float32x4_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  size_t v35;
  size_t v36;
  float32x4_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t **v40;
  unsigned int v41;
  char *v42;
  size_t v43;
  size_t v44;
  float32x4_t *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  unsigned int *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  float32x4_t v63;
  uint64_t *v64;
  uint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  float32x4_t v70;
  float32x4_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  float32x4_t v87;
  float32x4_t v88;
  uint64_t *v89;
  uint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  float32x4_t v109;
  float32x4_t v110;
  uint64_t *v111;
  uint64_t v112;
  std::__shared_weak_count *v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  BOOL v120;
  int v121;
  _DWORD *v122;
  unsigned int *v123;
  unsigned int *v124;
  unsigned int *v125;
  uint64_t v126;
  unsigned int *v127;
  unsigned int *v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  uint64_t *v133;
  uint64_t v134;
  std::__shared_weak_count *v135;
  unint64_t *v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  std::__shared_weak_count *v148;
  unint64_t *v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  std::__shared_weak_count *v155;
  unint64_t *v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  std::__shared_weak_count *v161;
  unint64_t *v162;
  unint64_t v163;
  unint64_t v164;
  int v165;
  uint64_t *v166;
  uint64_t v167;
  std::__shared_weak_count *v168;
  unint64_t *v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  float32x2_t v179;
  uint64_t *v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  unsigned int v186;
  uint64_t *v187;
  uint64_t v188;
  std::__shared_weak_count *v189;
  unint64_t *v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  std::__shared_weak_count *v195;
  unint64_t *v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  std::__shared_weak_count *v201;
  unint64_t *v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  unint64_t *v219;
  unint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  std::__shared_weak_count *v223;
  unint64_t *v224;
  unint64_t v225;
  unint64_t v226;
  unsigned int *v227;
  uint64_t *v228;
  uint64_t v229;
  std::__shared_weak_count *v230;
  unint64_t *v231;
  unint64_t v232;
  unint64_t v233;
  unsigned int *v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  uint64_t *v238;
  uint64_t v239;
  std::__shared_weak_count *v240;
  unint64_t *v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  std::__shared_weak_count *v247;
  unint64_t *v248;
  unint64_t v249;
  unint64_t v250;
  int v251;
  unsigned int v252;
  uint64_t **v253;
  _QWORD *v254;
  float32x4_t v255;
  float32x4_t v256;
  float32x4_t v257;
  uint64_t v258;
  unsigned int v259;
  unsigned int *v260;
  unsigned int v261;
  unsigned int v262;
  uint64_t **v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  float32x4_t __dst;
  unint64_t v278;
  __int128 v279;
  _BYTE v280[9];

  v4 = a2;
  v6 = (uint64_t **)(a1 + 32);
  v7 = *a2;
  v8 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v9 = *v8;
  v10 = (std::__shared_weak_count *)v8[1];
  if (!v10)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (((*(_QWORD *)(*(_QWORD *)(v9 + 40) + ((v7 >> 3) & 0x1FFFFFF8)) >> v7) & 1) != 0)
      goto LABEL_17;
  }
  else
  {
LABEL_6:
    if (((*(_QWORD *)(*(_QWORD *)(v9 + 40) + ((v7 >> 3) & 0x1FFFFFF8)) >> v7) & 1) != 0)
      goto LABEL_17;
  }
  v14 = *(unsigned int *)sub_239962518(a1 + 104, v4);
  v15 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v16 = *v15;
  v17 = (std::__shared_weak_count *)v15[1];
  if (!v17)
    goto LABEL_12;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldxr(v18);
  while (__stxr(v19 + 1, v18));
  do
    v20 = __ldaxr(v18);
  while (__stlxr(v20 - 1, v18));
  if (!v20)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    if (((*(_QWORD *)(*(_QWORD *)(v16 + 40) + ((v14 >> 3) & 0x1FFFFFF8)) >> v14) & 1) == 0)
      return 0;
  }
  else
  {
LABEL_12:
    if (((*(_QWORD *)(*(_QWORD *)(v16 + 40) + ((v14 >> 3) & 0x1FFFFFF8)) >> v14) & 1) == 0)
      return 0;
  }
LABEL_17:
  v22 = off_256934438[0];
  v23 = strlen(off_256934438[0]);
  if (v23 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_256;
  v24 = v23;
  v253 = v6;
  if (v23 >= 0x17)
  {
    v26 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v23 | 7) != 0x17)
      v26 = v23 | 7;
    v27 = v26 + 1;
    p_dst = (float32x4_t *)operator new(v26 + 1);
    __dst.i64[1] = v24;
    v278 = v27 | 0x8000000000000000;
    __dst.i64[0] = (uint64_t)p_dst;
    goto LABEL_24;
  }
  HIBYTE(v278) = v23;
  p_dst = &__dst;
  if (v23)
LABEL_24:
    memmove(p_dst, v22, v24);
  p_dst->i8[v24] = 0;
  *(_QWORD *)&v279 = 0;
  v254 = (_QWORD *)(a1 + 80);
  v262 = sub_2394E5C88((uint64_t **)(a1 + 80), (uint64_t)&v279, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v278) < 0)
    operator delete((void *)__dst.i64[0]);
  v28 = off_256934418[0];
  v29 = strlen(off_256934418[0]);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
LABEL_256:
    sub_23941A5AC();
  v30 = v29;
  v260 = a3;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = (float32x4_t *)operator new(v32 + 1);
    __dst.i64[1] = v30;
    v278 = v33 | 0x8000000000000000;
    __dst.i64[0] = (uint64_t)v31;
    goto LABEL_34;
  }
  HIBYTE(v278) = v29;
  v31 = &__dst;
  if (v29)
LABEL_34:
    memmove(v31, v28, v30);
  v31->i8[v30] = 0;
  *(_QWORD *)((char *)&v279 + 4) = 0;
  LODWORD(v279) = 0;
  v263 = (uint64_t **)(a1 + 56);
  v261 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&v279, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v278) < 0)
    operator delete((void *)__dst.i64[0]);
  v34 = off_256934400[0];
  v35 = strlen(off_256934400[0]);
  if (v35 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_256;
  v36 = v35;
  if (v35 >= 0x17)
  {
    v38 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v35 | 7) != 0x17)
      v38 = v35 | 7;
    v39 = v38 + 1;
    v37 = (float32x4_t *)operator new(v38 + 1);
    __dst.i64[1] = v36;
    v278 = v39 | 0x8000000000000000;
    __dst.i64[0] = (uint64_t)v37;
    goto LABEL_44;
  }
  HIBYTE(v278) = v35;
  v37 = &__dst;
  if (v35)
LABEL_44:
    memmove(v37, v34, v36);
  v37->i8[v36] = 0;
  v40 = (uint64_t **)(a1 + 8);
  v279 = 0uLL;
  v41 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)&v279, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v278) < 0)
    operator delete((void *)__dst.i64[0]);
  v42 = off_256934408[0];
  v43 = strlen(off_256934408[0]);
  if (v43 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_256;
  v44 = v43;
  if (v43 >= 0x17)
  {
    v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v43 | 7) != 0x17)
      v46 = v43 | 7;
    v47 = v46 + 1;
    v45 = (float32x4_t *)operator new(v46 + 1);
    __dst.i64[1] = v44;
    v278 = v47 | 0x8000000000000000;
    __dst.i64[0] = (uint64_t)v45;
    goto LABEL_54;
  }
  HIBYTE(v278) = v43;
  v45 = &__dst;
  if (v43)
LABEL_54:
    memmove(v45, v42, v44);
  v45->i8[v44] = 0;
  v279 = 0uLL;
  v48 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)&v279, (unsigned __int8 *)&__dst);
  v49 = v260;
  if (SHIBYTE(v278) < 0)
    operator delete((void *)__dst.i64[0]);
  v50 = *v4;
  v51 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v52 = *v51;
  v53 = (std::__shared_weak_count *)v51[1];
  if (v53)
  {
    v54 = (unint64_t *)&v53->__shared_owners_;
    do
      v55 = __ldxr(v54);
    while (__stxr(v55 + 1, v54));
    do
      v56 = __ldaxr(v54);
    while (__stlxr(v56 - 1, v54));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
    }
  }
  if (((*(_QWORD *)(*(_QWORD *)(v52 + 40) + ((v50 >> 3) & 0x1FFFFFF8)) >> v50) & 1) != 0)
    v4 = (unsigned int *)sub_239962518(a1 + 104, v4);
  LODWORD(v279) = *v4;
  v276 = *(_DWORD *)sub_239962518(a1 + 104, (unsigned int *)&v279);
  v275 = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&v279) + 8);
  v274 = *(_DWORD *)(sub_239962518(a1 + 104, &v275) + 8);
  v273 = *(_DWORD *)(sub_239962518(a1 + 104, &v276) + 8);
  v272 = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&v279) + 16);
  v271 = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&v279) + 12);
  v270 = *(_DWORD *)(sub_239962518(a1 + 104, &v275) + 12);
  v269 = *(_DWORD *)(sub_239962518(a1 + 104, &v274) + 12);
  if (*v260 == -1)
  {
    v57 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v58 = *v57;
    v59 = (std::__shared_weak_count *)v57[1];
    if (v59)
    {
      v60 = (unint64_t *)&v59->__shared_owners_;
      do
        v61 = __ldxr(v60);
      while (__stxr(v61 + 1, v60));
      do
        v62 = __ldaxr(v60);
      while (__stlxr(v62 - 1, v60));
      if (!v62)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
    }
    v63 = *(float32x4_t *)(*(_QWORD *)(v58 + 40) + 16 * v271);
    v64 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v65 = *v64;
    v66 = (std::__shared_weak_count *)v64[1];
    if (v66)
    {
      v67 = (unint64_t *)&v66->__shared_owners_;
      do
        v68 = __ldxr(v67);
      while (__stxr(v68 + 1, v67));
      do
        v69 = __ldaxr(v67);
      while (__stlxr(v69 - 1, v67));
      if (!v69)
      {
        v255 = v63;
        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
        std::__shared_weak_count::__release_weak(v66);
        v63 = v255;
      }
    }
    v70 = vaddq_f32(v63, *(float32x4_t *)(*(_QWORD *)(v65 + 40) + 16 * v270));
    v71.i64[0] = 0x3F0000003F000000;
    v71.i64[1] = 0x3F0000003F000000;
    __dst = vmulq_f32(v70, v71);
    v268 = -1;
    *v260 = sub_23992B920(a1, &__dst, &v268);
  }
  __dst.i32[0] = -1;
  v268 = sub_239967A60((_QWORD *)a1, &__dst);
  if (v41 != -1)
  {
    v72 = v41;
    v73 = &(*v40)[2 * v41];
    v74 = *v73;
    v75 = (std::__shared_weak_count *)v73[1];
    if (v75)
    {
      v76 = (unint64_t *)&v75->__shared_owners_;
      do
        v77 = __ldxr(v76);
      while (__stxr(v77 + 1, v76));
      do
        v78 = __ldaxr(v76);
      while (__stlxr(v78 - 1, v76));
      if (!v78)
      {
        ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
        std::__shared_weak_count::__release_weak(v75);
      }
    }
    v79 = v270;
    v80 = *(_QWORD *)(v74 + 40);
    v81 = &(*v40)[2 * v72];
    v82 = *v81;
    v83 = (std::__shared_weak_count *)v81[1];
    if (v83)
    {
      v84 = (unint64_t *)&v83->__shared_owners_;
      do
        v85 = __ldxr(v84);
      while (__stxr(v85 + 1, v84));
      do
        v86 = __ldaxr(v84);
      while (__stlxr(v86 - 1, v84));
      if (!v86)
      {
        ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
        std::__shared_weak_count::__release_weak(v83);
      }
    }
    v87.i64[0] = 0x3F0000003F000000;
    v87.i64[1] = 0x3F0000003F000000;
    v88 = vmulq_f32(vaddq_f32(*(float32x4_t *)(*(_QWORD *)(v82 + 40) + 16 * v271), *(float32x4_t *)(v80 + 16 * v79)), v87);
    v89 = &(*v40)[2 * v72];
    v90 = *v89;
    v91 = (std::__shared_weak_count *)v89[1];
    if (v91)
    {
      v92 = (unint64_t *)&v91->__shared_owners_;
      do
        v93 = __ldxr(v92);
      while (__stxr(v93 + 1, v92));
      do
        v94 = __ldaxr(v92);
      while (__stlxr(v94 - 1, v92));
      if (!v94)
      {
        v256 = v88;
        ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
        std::__shared_weak_count::__release_weak(v91);
        v88 = v256;
      }
    }
    *(float32x4_t *)(*(_QWORD *)(v90 + 40) + 16 * *v260) = v88;
  }
  if (v48 != -1)
  {
    v95 = &(*v40)[2 * v48];
    v96 = *v95;
    v97 = (std::__shared_weak_count *)v95[1];
    if (v97)
    {
      v98 = (unint64_t *)&v97->__shared_owners_;
      do
        v99 = __ldxr(v98);
      while (__stxr(v99 + 1, v98));
      do
        v100 = __ldaxr(v98);
      while (__stlxr(v100 - 1, v98));
      if (!v100)
      {
        ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
        std::__shared_weak_count::__release_weak(v97);
      }
    }
    v101 = v270;
    v102 = *(_QWORD *)(v96 + 40);
    v103 = &(*v40)[2 * v48];
    v104 = *v103;
    v105 = (std::__shared_weak_count *)v103[1];
    if (v105)
    {
      v106 = (unint64_t *)&v105->__shared_owners_;
      do
        v107 = __ldxr(v106);
      while (__stxr(v107 + 1, v106));
      do
        v108 = __ldaxr(v106);
      while (__stlxr(v108 - 1, v106));
      if (!v108)
      {
        ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
        std::__shared_weak_count::__release_weak(v105);
      }
    }
    v109.i64[0] = 0x3F0000003F000000;
    v109.i64[1] = 0x3F0000003F000000;
    v110 = vmulq_f32(vaddq_f32(*(float32x4_t *)(*(_QWORD *)(v104 + 40) + 16 * v271), *(float32x4_t *)(v102 + 16 * v101)), v109);
    v111 = &(*v40)[2 * v48];
    v112 = *v111;
    v113 = (std::__shared_weak_count *)v111[1];
    if (v113)
    {
      v114 = (unint64_t *)&v113->__shared_owners_;
      do
        v115 = __ldxr(v114);
      while (__stxr(v115 + 1, v114));
      do
        v116 = __ldaxr(v114);
      while (__stlxr(v116 - 1, v114));
      if (!v116)
      {
        v257 = v110;
        ((void (*)(std::__shared_weak_count *))v113->__on_zero_shared)(v113);
        std::__shared_weak_count::__release_weak(v113);
        v110 = v257;
      }
    }
    *(float32x4_t *)(*(_QWORD *)(v112 + 40) + 16 * *v260) = v110;
  }
  sub_2399636E4(a1, v271, *v260, 0);
  sub_2399615C0((_QWORD *)a1, v260, &v270);
  v117 = 0;
  v252 = 0;
  v118 = 0;
  v119 = 0;
  v120 = v262 == -1 || v261 == -1;
  v121 = !v120;
  if (!v120)
  {
    v122 = operator new(0xCuLL);
    *(_QWORD *)v122 = -1;
    v122[2] = -1;
    v123 = (unsigned int *)sub_23996252C(a1 + 104, &v272);
    v124 = (unsigned int *)sub_239962518(a1 + 104, v123);
    *v122 = *(_DWORD *)(sub_239962518(a1 + 104, v124) + 12);
    v125 = (unsigned int *)sub_23996252C(a1 + 104, &v272);
    v126 = sub_239962518(a1 + 104, v125);
    v127 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)(v126 + 8));
    v122[1] = *(_DWORD *)(sub_239962518(a1 + 104, v127) + 12);
    v128 = (unsigned int *)sub_23996252C(a1 + 104, &v272);
    v129 = *(_DWORD *)(sub_239962518(a1 + 104, v128) + 12);
    v122[2] = v129;
    v251 = v121;
    if (*v122 == v271)
    {
LABEL_127:
      v130 = 0;
      v131 = 1;
      v132 = 1;
      goto LABEL_132;
    }
    if (v122[1] == v271)
    {
      v132 = 0;
      v131 = 1;
      v130 = 1;
    }
    else
    {
      if (v129 != v271)
        goto LABEL_127;
      v132 = 0;
      v130 = 2;
      v131 = -2;
    }
LABEL_132:
    v133 = &(*v263)[2 * v261];
    v134 = *v133;
    v135 = (std::__shared_weak_count *)v133[1];
    if (v135)
    {
      v136 = (unint64_t *)&v135->__shared_owners_;
      do
        v137 = __ldxr(v136);
      while (__stxr(v137 + 1, v136));
      do
        v138 = __ldaxr(v136);
      while (__stlxr(v138 - 1, v136));
      if (!v138)
      {
        ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
        std::__shared_weak_count::__release_weak(v135);
      }
    }
    v139 = *(unsigned int *)(*(_QWORD *)(v134 + 40) + 12 * v272 + 4 * v130);
    v140 = &(*v263)[2 * v261];
    v141 = *v140;
    v142 = (std::__shared_weak_count *)v140[1];
    if (v142)
    {
      v143 = (unint64_t *)&v142->__shared_owners_;
      do
        v144 = __ldxr(v143);
      while (__stxr(v144 + 1, v143));
      do
        v145 = __ldaxr(v143);
      while (__stlxr(v145 - 1, v143));
      if (!v145)
      {
        ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
        std::__shared_weak_count::__release_weak(v142);
      }
    }
    v258 = *(unsigned int *)(*(_QWORD *)(v141 + 40) + 12 * v272 + 4 * (int)(v131 + v130));
    v146 = &(*v263)[2 * v261];
    v147 = *v146;
    v148 = (std::__shared_weak_count *)v146[1];
    if (v148)
    {
      v149 = (unint64_t *)&v148->__shared_owners_;
      do
        v150 = __ldxr(v149);
      while (__stxr(v150 + 1, v149));
      do
        v151 = __ldaxr(v149);
      while (__stlxr(v151 - 1, v149));
      if (!v151)
      {
        ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
        std::__shared_weak_count::__release_weak(v148);
      }
    }
    v152 = (int)(v130 - 1);
    if (v132)
      v152 = 2;
    v252 = *(_DWORD *)(*(_QWORD *)(v147 + 40) + 12 * v272 + 4 * v152);
    v153 = (uint64_t *)(*v254 + 16 * v262);
    v154 = *v153;
    v155 = (std::__shared_weak_count *)v153[1];
    if (v155)
    {
      v156 = (unint64_t *)&v155->__shared_owners_;
      do
        v157 = __ldxr(v156);
      while (__stxr(v157 + 1, v156));
      do
        v158 = __ldaxr(v156);
      while (__stlxr(v158 - 1, v156));
      if (!v158)
      {
        ((void (*)(std::__shared_weak_count *))v155->__on_zero_shared)(v155);
        std::__shared_weak_count::__release_weak(v155);
      }
    }
    (*(void (**)(uint64_t))(*(_QWORD *)v154 + 48))(v154);
    v159 = (uint64_t *)(*v254 + 16 * v262);
    v160 = *v159;
    v161 = (std::__shared_weak_count *)v159[1];
    if (v161)
    {
      v162 = (unint64_t *)&v161->__shared_owners_;
      do
        v163 = __ldxr(v162);
      while (__stxr(v163 + 1, v162));
      do
        v164 = __ldaxr(v162);
      while (__stlxr(v164 - 1, v162));
      if (!v164)
      {
        ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
        std::__shared_weak_count::__release_weak(v161);
      }
    }
    v165 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v160 + 16))(v160);
    v166 = (uint64_t *)(*v254 + 16 * v262);
    v167 = *v166;
    v168 = (std::__shared_weak_count *)v166[1];
    if (v168)
    {
      v169 = (unint64_t *)&v168->__shared_owners_;
      do
        v170 = __ldxr(v169);
      while (__stxr(v170 + 1, v169));
      do
        v171 = __ldaxr(v169);
      while (__stlxr(v171 - 1, v169));
      if (!v171)
      {
        ((void (*)(std::__shared_weak_count *))v168->__on_zero_shared)(v168);
        std::__shared_weak_count::__release_weak(v168);
      }
    }
    v172 = *(_QWORD *)(v167 + 40);
    v173 = (uint64_t *)(*v254 + 16 * v262);
    v174 = *v173;
    v175 = (std::__shared_weak_count *)v173[1];
    if (v175)
    {
      v176 = (unint64_t *)&v175->__shared_owners_;
      do
        v177 = __ldxr(v176);
      while (__stxr(v177 + 1, v176));
      do
        v178 = __ldaxr(v176);
      while (__stlxr(v178 - 1, v176));
      if (!v178)
      {
        ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
        std::__shared_weak_count::__release_weak(v175);
      }
    }
    v117 = v165 - 1;
    v118 = v258;
    v179 = vmul_f32(vadd_f32(*(float32x2_t *)(v172 + 8 * v139), *(float32x2_t *)(*(_QWORD *)(v174 + 40) + 8 * v258)), (float32x2_t)0x3F0000003F000000);
    v180 = (uint64_t *)(*v254 + 16 * v262);
    v181 = *v180;
    v182 = (std::__shared_weak_count *)v180[1];
    v49 = v260;
    v121 = v251;
    if (v182)
    {
      v183 = (unint64_t *)&v182->__shared_owners_;
      do
        v184 = __ldxr(v183);
      while (__stxr(v184 + 1, v183));
      do
        v185 = __ldaxr(v183);
      while (__stlxr(v185 - 1, v183));
      if (!v185)
      {
        ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
        std::__shared_weak_count::__release_weak(v182);
      }
    }
    *(float32x2_t *)(*(_QWORD *)(v181 + 40) + 8 * v117) = v179;
    operator delete(v122);
    v119 = v139;
    v40 = (uint64_t **)(a1 + 8);
  }
  v259 = v118;
  v186 = -858993459 * ((uint64_t)(*(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128)) >> 2);
  sub_23995FED4((_QWORD *)a1, v186 + 4);
  v266 = v186 + 1;
  v267 = v186;
  v264 = v186 + 3;
  v265 = v186 + 2;
  v187 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v188 = *v187;
  v189 = (std::__shared_weak_count *)v187[1];
  if (v189)
  {
    v190 = (unint64_t *)&v189->__shared_owners_;
    do
      v191 = __ldxr(v190);
    while (__stxr(v191 + 1, v190));
    do
      v192 = __ldaxr(v190);
    while (__stlxr(v192 - 1, v190));
    if (!v192)
    {
      ((void (*)(std::__shared_weak_count *))v189->__on_zero_shared)(v189);
      std::__shared_weak_count::__release_weak(v189);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v188 + 40) + 8 * (v186 >> 6)) &= ~(1 << v186);
  v193 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v194 = *v193;
  v195 = (std::__shared_weak_count *)v193[1];
  if (v195)
  {
    v196 = (unint64_t *)&v195->__shared_owners_;
    do
      v197 = __ldxr(v196);
    while (__stxr(v197 + 1, v196));
    do
      v198 = __ldaxr(v196);
    while (__stlxr(v198 - 1, v196));
    if (!v198)
    {
      ((void (*)(std::__shared_weak_count *))v195->__on_zero_shared)(v195);
      std::__shared_weak_count::__release_weak(v195);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v194 + 40) + (((unint64_t)v266 >> 3) & 0x1FFFFFF8)) &= ~(1 << v266);
  v199 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v200 = *v199;
  v201 = (std::__shared_weak_count *)v199[1];
  if (v201)
  {
    v202 = (unint64_t *)&v201->__shared_owners_;
    do
      v203 = __ldxr(v202);
    while (__stxr(v203 + 1, v202));
    do
      v204 = __ldaxr(v202);
    while (__stlxr(v204 - 1, v202));
    if (!v204)
    {
      ((void (*)(std::__shared_weak_count *))v201->__on_zero_shared)(v201);
      std::__shared_weak_count::__release_weak(v201);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v200 + 40) + (((unint64_t)v265 >> 3) & 0x1FFFFFF8)) &= ~(1 << v265);
  v205 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v206 = *v205;
  v207 = (std::__shared_weak_count *)v205[1];
  if (v207)
  {
    v208 = (unint64_t *)&v207->__shared_owners_;
    do
      v209 = __ldxr(v208);
    while (__stxr(v209 + 1, v208));
    do
      v210 = __ldaxr(v208);
    while (__stlxr(v210 - 1, v208));
    if (!v210)
    {
      ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
      std::__shared_weak_count::__release_weak(v207);
    }
  }
  *(_QWORD *)(*(_QWORD *)(v206 + 40) + (((unint64_t)v264 >> 3) & 0x1FFFFFF8)) |= 1 << v264;
  sub_23996253C(a1 + 104, &v275, &v267);
  sub_23996253C(a1 + 104, &v267, &v279);
  sub_23996253C(a1 + 104, &v274, &v265);
  sub_23996253C(a1 + 104, &v265, &v266);
  sub_23996253C(a1 + 104, &v266, &v274);
  sub_23996253C(a1 + 104, &v276, &v264);
  sub_23996253C(a1 + 104, &v264, &v273);
  sub_23996256C(a1 + 104, &v267, &v266);
  sub_23996256C(a1 + 104, &v265, &v264);
  sub_2399625C8((_QWORD *)(a1 + 104), &v279, v49);
  sub_2399625C8((_QWORD *)(a1 + 104), &v267, &v269);
  sub_2399625C8((_QWORD *)(a1 + 104), &v266, v49);
  sub_2399625C8((_QWORD *)(a1 + 104), &v265, &v271);
  sub_2399625C8((_QWORD *)(a1 + 104), &v264, v49);
  sub_23996259C(a1 + 104, &v272, &v267);
  sub_23996259C(a1 + 104, &v268, &v266);
  sub_23996259C(a1 + 104, &v268, &v274);
  sub_23996259C(a1 + 104, &v268, &v265);
  if (v121)
  {
    v211 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1);
    v212 = *(uint64_t **)(a1 + 56);
    v213 = *(uint64_t **)(a1 + 64);
    if (v212 != v213)
    {
      v214 = v211;
      do
      {
        v215 = *v212;
        v216 = (std::__shared_weak_count *)v212[1];
        if (v216)
        {
          v217 = (unint64_t *)&v216->__shared_owners_;
          do
            v218 = __ldxr(v217);
          while (__stxr(v218 + 1, v217));
        }
        if (v215)
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v215 + 32))(v215, v214);
        if (v216)
        {
          v219 = (unint64_t *)&v216->__shared_owners_;
          do
            v220 = __ldaxr(v219);
          while (__stlxr(v220 - 1, v219));
          if (!v220)
          {
            ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
            std::__shared_weak_count::__release_weak(v216);
          }
        }
        v212 += 2;
      }
      while (v212 != v213);
      v212 = *v263;
    }
    v221 = &v212[2 * v261];
    v222 = *v221;
    v223 = (std::__shared_weak_count *)v221[1];
    if (v223)
    {
      v224 = (unint64_t *)&v223->__shared_owners_;
      do
        v225 = __ldxr(v224);
      while (__stxr(v225 + 1, v224));
      do
        v226 = __ldaxr(v224);
      while (__stlxr(v226 - 1, v224));
      if (!v226)
      {
        ((void (*)(std::__shared_weak_count *))v223->__on_zero_shared)(v223);
        std::__shared_weak_count::__release_weak(v223);
      }
    }
    v227 = (unsigned int *)(*(_QWORD *)(v222 + 40) + 12 * v272);
    *v227 = v117;
    v227[1] = v259;
    v227[2] = v252;
    v228 = &(*v263)[2 * v261];
    v229 = *v228;
    v230 = (std::__shared_weak_count *)v228[1];
    if (v230)
    {
      v231 = (unint64_t *)&v230->__shared_owners_;
      do
        v232 = __ldxr(v231);
      while (__stxr(v232 + 1, v231));
      do
        v233 = __ldaxr(v231);
      while (__stlxr(v233 - 1, v231));
      if (!v233)
      {
        ((void (*)(std::__shared_weak_count *))v230->__on_zero_shared)(v230);
        std::__shared_weak_count::__release_weak(v230);
      }
    }
    v234 = (unsigned int *)(*(_QWORD *)(v229 + 40) + 12 * v268);
    *v234 = v117;
    v234[1] = v252;
    v234[2] = v119;
  }
  HIBYTE(v278) = 15;
  strcpy((char *)&__dst, "th:isnew_subdiv");
  v280[0] = 0;
  v235 = sub_23993A208(v253, (uint64_t)v280, (unsigned __int8 *)&__dst);
  v236 = v235;
  if ((SHIBYTE(v278) & 0x80000000) == 0)
  {
    if (v235 == -1)
      return 1;
LABEL_239:
    HIBYTE(v278) = 15;
    strcpy((char *)&__dst, "tv:isnew_subdiv");
    v280[0] = 0;
    v237 = sub_23993A208(v40, (uint64_t)v280, (unsigned __int8 *)&__dst);
    if (SHIBYTE(v278) < 0)
      operator delete((void *)__dst.i64[0]);
    if (v237 != -1)
    {
      v238 = &(*v253)[2 * v236];
      v239 = *v238;
      v240 = (std::__shared_weak_count *)v238[1];
      if (v240)
      {
        v241 = (unint64_t *)&v240->__shared_owners_;
        do
          v242 = __ldxr(v241);
        while (__stxr(v242 + 1, v241));
        do
          v243 = __ldaxr(v241);
        while (__stlxr(v243 - 1, v241));
        if (!v243)
        {
          ((void (*)(std::__shared_weak_count *))v240->__on_zero_shared)(v240);
          std::__shared_weak_count::__release_weak(v240);
        }
      }
      v244 = *(_QWORD *)(v239 + 40);
      *(_QWORD *)(v244 + (((unint64_t)v267 >> 3) & 0x1FFFFFF8)) |= 1 << v267;
      *(_QWORD *)(v244 + (((unint64_t)v266 >> 3) & 0x1FFFFFF8)) |= 1 << v266;
      *(_QWORD *)(v244 + (((unint64_t)v265 >> 3) & 0x1FFFFFF8)) &= ~(1 << v265);
      *(_QWORD *)(v244 + (((unint64_t)v264 >> 3) & 0x1FFFFFF8)) &= ~(1 << v264);
      v245 = &(*v40)[2 * v237];
      v246 = *v245;
      v247 = (std::__shared_weak_count *)v245[1];
      if (v247)
      {
        v248 = (unint64_t *)&v247->__shared_owners_;
        do
          v249 = __ldxr(v248);
        while (__stxr(v249 + 1, v248));
        do
          v250 = __ldaxr(v248);
        while (__stlxr(v250 - 1, v248));
        if (!v250)
        {
          ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
          std::__shared_weak_count::__release_weak(v247);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v246 + 40) + (((unint64_t)*v49 >> 3) & 0x1FFFFFF8)) |= 1 << *v49;
    }
    return 1;
  }
  operator delete((void *)__dst.i64[0]);
  if (v236 != -1)
    goto LABEL_239;
  return 1;
}

void sub_239965D64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_239965DFC(uint64_t a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, unsigned int *a5, int a6, int a7)
{
  uint64_t **v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  size_t v29;
  void *v30;
  void **v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  size_t v36;
  void *v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  size_t v42;
  void *v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  char *v48;
  size_t v49;
  void *v50;
  void **v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t *v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  float32x4_t v66;
  uint64_t *v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  float32x4_t v73;
  uint64_t *v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t v83;
  float32x4_t v84;
  float32x4_t v85;
  uint64_t *v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  float32x4_t v92;
  float32x4_t v93;
  float32x4_t v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  float32x4_t v98;
  uint64_t *v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  unint64_t v104;
  float32x4_t v105;
  float32x4_t v106;
  uint64_t *v107;
  uint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t *v113;
  std::__shared_weak_count *v114;
  uint64_t v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  std::__shared_weak_count *v121;
  uint64_t v122;
  unint64_t *v123;
  unint64_t v124;
  unint64_t v125;
  float32x4_t v126;
  float32x4_t v127;
  uint64_t *v128;
  uint64_t v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  std::__shared_weak_count *v136;
  uint64_t v137;
  unint64_t *v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  std::__shared_weak_count *v143;
  uint64_t v144;
  unsigned int *v145;
  unint64_t *v146;
  unint64_t v147;
  unint64_t v148;
  float32x4_t v149;
  float32x4_t v150;
  uint64_t *v151;
  uint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  unsigned int v157;
  int v158;
  int v160;
  uint64_t *v161;
  uint64_t v162;
  std::__shared_weak_count *v163;
  unint64_t *v164;
  unint64_t v165;
  unint64_t v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  unsigned int v175;
  uint64_t v176;
  _DWORD *v177;
  _DWORD *v178;
  unsigned int *v179;
  unsigned int *v180;
  unsigned int *v181;
  uint64_t v182;
  unsigned int *v183;
  unsigned int *v184;
  unsigned int *v185;
  unsigned int *v186;
  unsigned int *v187;
  uint64_t v188;
  unsigned int *v189;
  unsigned int *v190;
  int v191;
  uint64_t v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  unsigned int v196;
  uint64_t v197;
  int v198;
  int v199;
  int v200;
  uint64_t *v201;
  uint64_t v202;
  std::__shared_weak_count *v203;
  unint64_t *v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  std::__shared_weak_count *v209;
  unint64_t *v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  std::__shared_weak_count *v216;
  uint64_t v217;
  unint64_t *v218;
  unint64_t v219;
  unint64_t v220;
  float32x2_t v221;
  float32x2_t v222;
  uint64_t *v223;
  uint64_t v224;
  std::__shared_weak_count *v225;
  unint64_t *v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t *v229;
  uint64_t v230;
  std::__shared_weak_count *v231;
  unint64_t *v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t *v235;
  uint64_t v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  unint64_t v240;
  int v241;
  uint64_t *v242;
  uint64_t v243;
  std::__shared_weak_count *v244;
  unint64_t *v245;
  unint64_t v246;
  unint64_t v247;
  unint64_t *v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t *v251;
  std::__shared_weak_count *v252;
  uint64_t v253;
  unint64_t *v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t *v259;
  std::__shared_weak_count *v260;
  uint64_t v261;
  unint64_t *v262;
  unint64_t v263;
  unint64_t v264;
  float32x2_t v265;
  float32x2_t v266;
  uint64_t *v267;
  uint64_t v268;
  std::__shared_weak_count *v269;
  unint64_t *v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t *v273;
  uint64_t v274;
  std::__shared_weak_count *v275;
  unint64_t *v276;
  unint64_t v277;
  unint64_t v278;
  uint64_t *v279;
  uint64_t v280;
  std::__shared_weak_count *v281;
  unint64_t *v282;
  unint64_t v283;
  unint64_t v284;
  uint64_t *v285;
  uint64_t v286;
  std::__shared_weak_count *v287;
  unint64_t *v288;
  unint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t v293;
  std::__shared_weak_count *v294;
  unint64_t *v295;
  unint64_t v296;
  unint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t *v300;
  std::__shared_weak_count *v301;
  uint64_t v302;
  unint64_t *v303;
  unint64_t v304;
  unint64_t v305;
  float32x2_t v306;
  float32x2_t v307;
  uint64_t *v308;
  uint64_t v309;
  std::__shared_weak_count *v310;
  unint64_t *v311;
  unint64_t v312;
  unint64_t v313;
  uint64_t *v314;
  uint64_t v315;
  std::__shared_weak_count *v316;
  unint64_t *v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t *v320;
  std::__shared_weak_count *v321;
  unint64_t *v322;
  unint64_t v323;
  unint64_t v324;
  uint64_t *v325;
  std::__shared_weak_count *v326;
  uint64_t v327;
  int v328;
  int v329;
  unint64_t *v330;
  unint64_t v331;
  unint64_t v332;
  _DWORD *v333;
  uint64_t *v334;
  std::__shared_weak_count *v335;
  uint64_t v336;
  unint64_t *v337;
  unint64_t v338;
  unint64_t v339;
  _DWORD *v340;
  int v341;
  uint64_t *v342;
  std::__shared_weak_count *v343;
  uint64_t v344;
  unint64_t *v345;
  unint64_t v346;
  unint64_t v347;
  uint64_t v348;
  uint64_t *v349;
  uint64_t v350;
  std::__shared_weak_count *v351;
  unint64_t *v352;
  unint64_t v353;
  unint64_t v354;
  _DWORD *v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  uint64_t *v359;
  uint64_t v360;
  std::__shared_weak_count *v361;
  unint64_t *v362;
  unint64_t v363;
  unint64_t v364;
  uint64_t v365;
  uint64_t *v366;
  std::__shared_weak_count *v367;
  uint64_t v368;
  unint64_t *v369;
  unint64_t v370;
  unint64_t v371;
  uint64_t v372;
  _QWORD *v373;
  uint64_t v374;
  uint64_t v375;
  int v376;
  int v377;
  int v378;
  uint64_t v379;
  float32x4_t v380;
  float32x4_t v381;
  int v382;
  unsigned int *v383;
  _QWORD *v384;
  unsigned int v385;
  unsigned int v386;
  uint64_t **v387;
  uint64_t **v388;
  void *__pb[2];
  void *__pc[2];
  void *__pd[2];
  void *__pe[2];
  void *__pf[2];
  void *__pg[2];
  void *__ph[2];
  _DWORD *__pa;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  void *__dst[2];
  unint64_t v412;
  __int128 v413;
  _BYTE v414[9];

  v12 = (uint64_t **)(a1 + 32);
  v13 = *a2;
  v14 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v15 = *v14;
  v16 = (std::__shared_weak_count *)v14[1];
  if (!v16)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(p_shared_owners);
  while (__stxr(v18 + 1, p_shared_owners));
  do
    v19 = __ldaxr(p_shared_owners);
  while (__stlxr(v19 - 1, p_shared_owners));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if (((*(_QWORD *)(*(_QWORD *)(v15 + 40) + ((v13 >> 3) & 0x1FFFFFF8)) >> v13) & 1) != 0)
      return 0;
  }
  else
  {
LABEL_6:
    if (((*(_QWORD *)(*(_QWORD *)(v15 + 40) + ((v13 >> 3) & 0x1FFFFFF8)) >> v13) & 1) != 0)
      return 0;
  }
  v387 = v12;
  v20 = (_QWORD *)(a1 + 104);
  v21 = *(unsigned int *)sub_239962518(a1 + 104, a2);
  v22 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v23 = *v22;
  v24 = (std::__shared_weak_count *)v22[1];
  if (!v24)
    goto LABEL_12;
  v25 = (unint64_t *)&v24->__shared_owners_;
  do
    v26 = __ldxr(v25);
  while (__stxr(v26 + 1, v25));
  do
    v27 = __ldaxr(v25);
  while (__stlxr(v27 - 1, v25));
  if (v27)
  {
LABEL_12:
    if (((*(_QWORD *)(*(_QWORD *)(v23 + 40) + ((v21 >> 3) & 0x1FFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_13;
    return 0;
  }
  ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
  std::__shared_weak_count::__release_weak(v24);
  if (((*(_QWORD *)(*(_QWORD *)(v23 + 40) + ((v21 >> 3) & 0x1FFFFFF8)) >> v21) & 1) != 0)
    return 0;
LABEL_13:
  v383 = a5;
  v28 = off_256934438[0];
  v29 = strlen(off_256934438[0]);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_359;
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v33 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v33 = v29 | 7;
    v34 = v33 + 1;
    v31 = (void **)operator new(v33 + 1);
    __dst[1] = v30;
    v412 = v34 | 0x8000000000000000;
    __dst[0] = v31;
    goto LABEL_24;
  }
  HIBYTE(v412) = v29;
  v31 = __dst;
  if (v29)
LABEL_24:
    memmove(v31, v28, (size_t)v30);
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  *(_QWORD *)&v413 = 0;
  v373 = (_QWORD *)(a1 + 80);
  v385 = sub_2394E5C88((uint64_t **)(a1 + 80), (uint64_t)&v413, (unsigned __int8 *)__dst);
  if (SHIBYTE(v412) < 0)
    operator delete(__dst[0]);
  v35 = off_256934418[0];
  v36 = strlen(off_256934418[0]);
  if (v36 > 0x7FFFFFFFFFFFFFF7)
LABEL_359:
    sub_23941A5AC();
  v37 = (void *)v36;
  if (v36 >= 0x17)
  {
    v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v36 | 7) != 0x17)
      v39 = v36 | 7;
    v40 = v39 + 1;
    v38 = (void **)operator new(v39 + 1);
    __dst[1] = v37;
    v412 = v40 | 0x8000000000000000;
    __dst[0] = v38;
    goto LABEL_34;
  }
  HIBYTE(v412) = v36;
  v38 = __dst;
  if (v36)
LABEL_34:
    memmove(v38, v35, (size_t)v37);
  *((_BYTE *)v37 + (_QWORD)v38) = 0;
  *(_QWORD *)((char *)&v413 + 4) = 0;
  LODWORD(v413) = 0;
  v386 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&v413, (unsigned __int8 *)__dst);
  if (SHIBYTE(v412) < 0)
    operator delete(__dst[0]);
  v41 = off_256934400[0];
  v42 = strlen(off_256934400[0]);
  if (v42 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_359;
  v43 = (void *)v42;
  v384 = (_QWORD *)(a1 + 56);
  if (v42 >= 0x17)
  {
    v45 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v42 | 7) != 0x17)
      v45 = v42 | 7;
    v46 = v45 + 1;
    v44 = (void **)operator new(v45 + 1);
    __dst[1] = v43;
    v412 = v46 | 0x8000000000000000;
    __dst[0] = v44;
    goto LABEL_44;
  }
  HIBYTE(v412) = v42;
  v44 = __dst;
  if (v42)
LABEL_44:
    memmove(v44, v41, (size_t)v43);
  *((_BYTE *)v43 + (_QWORD)v44) = 0;
  v413 = 0uLL;
  v388 = (uint64_t **)(a1 + 8);
  v47 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)&v413, (unsigned __int8 *)__dst);
  if (SHIBYTE(v412) < 0)
    operator delete(__dst[0]);
  v48 = off_256934408[0];
  v49 = strlen(off_256934408[0]);
  if (v49 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_359;
  v50 = (void *)v49;
  if (v49 >= 0x17)
  {
    v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v49 | 7) != 0x17)
      v52 = v49 | 7;
    v53 = v47;
    v54 = v52 + 1;
    v51 = (void **)operator new(v52 + 1);
    v55 = v54 | 0x8000000000000000;
    v47 = v53;
    __dst[1] = v50;
    v412 = v55;
    __dst[0] = v51;
    goto LABEL_54;
  }
  HIBYTE(v412) = v49;
  v51 = __dst;
  if (v49)
LABEL_54:
    memmove(v51, v48, (size_t)v50);
  *((_BYTE *)v50 + (_QWORD)v51) = 0;
  v413 = 0uLL;
  v56 = sub_2394E5F40(v388, (uint64_t)&v413, (unsigned __int8 *)__dst);
  if (SHIBYTE(v412) < 0)
    operator delete(__dst[0]);
  LODWORD(v413) = *a2;
  v410 = *(_DWORD *)(sub_239962518((uint64_t)v20, (unsigned int *)&v413) + 8);
  v409 = *(_DWORD *)(sub_239962518((uint64_t)v20, &v410) + 8);
  v408 = *(_DWORD *)sub_239962518((uint64_t)v20, (unsigned int *)&v413);
  v407 = *(_DWORD *)(sub_239962518((uint64_t)v20, &v408) + 8);
  v406 = *(_DWORD *)(sub_239962518((uint64_t)v20, &v407) + 8);
  v405 = *(_DWORD *)(sub_239962518((uint64_t)v20, (unsigned int *)&v413) + 16);
  v404 = *(_DWORD *)(sub_239962518((uint64_t)v20, &v408) + 16);
  v403 = *(_DWORD *)(sub_239962518((uint64_t)v20, (unsigned int *)&v413) + 12);
  v402 = *(_DWORD *)(sub_239962518((uint64_t)v20, &v408) + 12);
  v401 = *(_DWORD *)(sub_239962518((uint64_t)v20, &v409) + 12);
  v57 = *(_DWORD *)(sub_239962518((uint64_t)v20, &v406) + 12);
  v58 = *a3;
  v399 = *a3;
  v400 = v57;
  if (a7)
  {
    v59 = v47;
    v60 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v61 = *v60;
    v62 = (std::__shared_weak_count *)v60[1];
    if (a6)
    {
      if (v62)
      {
        v63 = (unint64_t *)&v62->__shared_owners_;
        do
          v64 = __ldxr(v63);
        while (__stxr(v64 + 1, v63));
        do
          v65 = __ldaxr(v63);
        while (__stlxr(v65 - 1, v63));
        if (!v65)
        {
          ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
          std::__shared_weak_count::__release_weak(v62);
        }
      }
      v66 = *(float32x4_t *)(*(_QWORD *)(v61 + 40) + 16 * v402);
      v67 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v68 = *v67;
      v69 = (std::__shared_weak_count *)v67[1];
      if (v69)
      {
        v70 = (unint64_t *)&v69->__shared_owners_;
        do
          v71 = __ldxr(v70);
        while (__stxr(v71 + 1, v70));
        do
          v72 = __ldaxr(v70);
        while (__stlxr(v72 - 1, v70));
        if (!v72)
        {
          *(float32x4_t *)__pb = v66;
          ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
          std::__shared_weak_count::__release_weak(v69);
          v66 = *(float32x4_t *)__pb;
        }
      }
      v73 = vaddq_f32(v66, *(float32x4_t *)(*(_QWORD *)(v68 + 40) + 16 * v403));
      __asm { FMOV            V1.4S, #0.375 }
      v78 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v79 = *v78;
      v80 = (std::__shared_weak_count *)v78[1];
      if (v80)
      {
        v81 = (unint64_t *)&v80->__shared_owners_;
        do
          v82 = __ldxr(v81);
        while (__stxr(v82 + 1, v81));
        do
          v83 = __ldaxr(v81);
        while (__stlxr(v83 - 1, v81));
        if (!v83)
        {
          *(float32x4_t *)__pc = v73;
          v380 = _Q1;
          ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
          std::__shared_weak_count::__release_weak(v80);
          _Q1 = v380;
          v73 = *(float32x4_t *)__pc;
        }
      }
      v84 = vmulq_f32(v73, _Q1);
      v85 = *(float32x4_t *)(*(_QWORD *)(v79 + 40) + 16 * v401);
      v86 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v87 = *v86;
      v88 = (std::__shared_weak_count *)v86[1];
      if (v88)
      {
        v89 = (unint64_t *)&v88->__shared_owners_;
        do
          v90 = __ldxr(v89);
        while (__stxr(v90 + 1, v89));
        do
          v91 = __ldaxr(v89);
        while (__stlxr(v91 - 1, v89));
        if (!v91)
        {
          *(float32x4_t *)__pd = v84;
          v381 = v85;
          ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
          std::__shared_weak_count::__release_weak(v88);
          v85 = v381;
          v84 = *(float32x4_t *)__pd;
        }
      }
      v92 = vaddq_f32(v85, *(float32x4_t *)(*(_QWORD *)(v87 + 40) + 16 * v400));
      v93.i64[0] = 0x3E0000003E000000;
      v93.i64[1] = 0x3E0000003E000000;
      v94 = vaddq_f32(v84, vmulq_f32(v92, v93));
    }
    else
    {
      if (v62)
      {
        v95 = (unint64_t *)&v62->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
          std::__shared_weak_count::__release_weak(v62);
        }
      }
      v98 = *(float32x4_t *)(*(_QWORD *)(v61 + 40) + 16 * v402);
      v99 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v100 = *v99;
      v101 = (std::__shared_weak_count *)v99[1];
      if (v101)
      {
        v102 = (unint64_t *)&v101->__shared_owners_;
        do
          v103 = __ldxr(v102);
        while (__stxr(v103 + 1, v102));
        do
          v104 = __ldaxr(v102);
        while (__stlxr(v104 - 1, v102));
        if (!v104)
        {
          *(float32x4_t *)__pe = v98;
          ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
          std::__shared_weak_count::__release_weak(v101);
          v98 = *(float32x4_t *)__pe;
        }
      }
      v105 = vaddq_f32(v98, *(float32x4_t *)(*(_QWORD *)(v100 + 40) + 16 * v403));
      v106.i64[0] = 0x3F0000003F000000;
      v106.i64[1] = 0x3F0000003F000000;
      v94 = vmulq_f32(v105, v106);
    }
    v107 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v108 = *v107;
    v109 = (std::__shared_weak_count *)v107[1];
    v47 = v59;
    if (v109)
    {
      v110 = (unint64_t *)&v109->__shared_owners_;
      do
        v111 = __ldxr(v110);
      while (__stxr(v111 + 1, v110));
      do
        v112 = __ldaxr(v110);
      while (__stlxr(v112 - 1, v110));
      if (!v112)
      {
        *(float32x4_t *)__pf = v94;
        ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
        std::__shared_weak_count::__release_weak(v109);
        v94 = *(float32x4_t *)__pf;
      }
    }
    v58 = v399;
    *(float32x4_t *)(*(_QWORD *)(v108 + 40) + 16 * v399) = v94;
  }
  if (v47 != -1)
  {
    v113 = &(*v388)[2 * v47];
    v115 = *v113;
    v114 = (std::__shared_weak_count *)v113[1];
    if (v114)
    {
      v116 = (unint64_t *)&v114->__shared_owners_;
      do
        v117 = __ldxr(v116);
      while (__stxr(v117 + 1, v116));
      do
        v118 = __ldaxr(v116);
      while (__stlxr(v118 - 1, v116));
      if (!v118)
      {
        ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
        std::__shared_weak_count::__release_weak(v114);
      }
    }
    v119 = *(_QWORD *)(v115 + 40);
    v120 = &(*v388)[2 * v47];
    v122 = *v120;
    v121 = (std::__shared_weak_count *)v120[1];
    if (v121)
    {
      v123 = (unint64_t *)&v121->__shared_owners_;
      do
        v124 = __ldxr(v123);
      while (__stxr(v124 + 1, v123));
      do
        v125 = __ldaxr(v123);
      while (__stlxr(v125 - 1, v123));
      if (!v125)
      {
        ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
        std::__shared_weak_count::__release_weak(v121);
      }
    }
    v126.i64[0] = 0x3F0000003F000000;
    v126.i64[1] = 0x3F0000003F000000;
    v127 = vmulq_f32(vaddq_f32(*(float32x4_t *)(*(_QWORD *)(v122 + 40) + 16 * v403), *(float32x4_t *)(v119 + 16 * v402)), v126);
    v128 = &(*v388)[2 * v47];
    v129 = *v128;
    v130 = (std::__shared_weak_count *)v128[1];
    if (v130)
    {
      v131 = (unint64_t *)&v130->__shared_owners_;
      do
        v132 = __ldxr(v131);
      while (__stxr(v132 + 1, v131));
      do
        v133 = __ldaxr(v131);
      while (__stlxr(v133 - 1, v131));
      if (!v133)
      {
        *(float32x4_t *)__pg = v127;
        ((void (*)(std::__shared_weak_count *))v130->__on_zero_shared)(v130);
        std::__shared_weak_count::__release_weak(v130);
        v127 = *(float32x4_t *)__pg;
      }
    }
    v58 = v399;
    *(float32x4_t *)(*(_QWORD *)(v129 + 40) + 16 * v399) = v127;
  }
  if (v56 == -1)
  {
    v157 = v58;
    v145 = v383;
  }
  else
  {
    v134 = v56;
    v135 = &(*v388)[2 * v56];
    v137 = *v135;
    v136 = (std::__shared_weak_count *)v135[1];
    if (v136)
    {
      v138 = (unint64_t *)&v136->__shared_owners_;
      do
        v139 = __ldxr(v138);
      while (__stxr(v139 + 1, v138));
      do
        v140 = __ldaxr(v138);
      while (__stlxr(v140 - 1, v138));
      if (!v140)
      {
        ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
        std::__shared_weak_count::__release_weak(v136);
      }
    }
    v141 = *(_QWORD *)(v137 + 40);
    v142 = &(*v388)[2 * v56];
    v144 = *v142;
    v143 = (std::__shared_weak_count *)v142[1];
    v145 = v383;
    if (v143)
    {
      v146 = (unint64_t *)&v143->__shared_owners_;
      do
        v147 = __ldxr(v146);
      while (__stxr(v147 + 1, v146));
      do
        v148 = __ldaxr(v146);
      while (__stlxr(v148 - 1, v146));
      if (!v148)
      {
        ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
        std::__shared_weak_count::__release_weak(v143);
      }
    }
    v149.i64[0] = 0x3F0000003F000000;
    v149.i64[1] = 0x3F0000003F000000;
    v150 = vmulq_f32(vaddq_f32(*(float32x4_t *)(*(_QWORD *)(v144 + 40) + 16 * v403), *(float32x4_t *)(v141 + 16 * v402)), v149);
    v151 = &(*v388)[2 * v134];
    v152 = *v151;
    v153 = (std::__shared_weak_count *)v151[1];
    if (v153)
    {
      v154 = (unint64_t *)&v153->__shared_owners_;
      do
        v155 = __ldxr(v154);
      while (__stxr(v155 + 1, v154));
      do
        v156 = __ldaxr(v154);
      while (__stlxr(v156 - 1, v154));
      if (!v156)
      {
        *(float32x4_t *)__ph = v150;
        ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
        std::__shared_weak_count::__release_weak(v153);
        v150 = *(float32x4_t *)__ph;
      }
    }
    v157 = v399;
    *(float32x4_t *)(*(_QWORD *)(v152 + 40) + 16 * v399) = v150;
  }
  sub_2399636E4(a1, v403, v157, 0);
  sub_2399615C0((_QWORD *)a1, &v399, &v402);
  v377 = 0;
  v378 = 0;
  v158 = 0;
  v374 = 0;
  v375 = 0;
  v382 = 0;
  _ZF = v385 == -1 || v386 == -1;
  v160 = !_ZF;
  v376 = v160;
  if (!_ZF)
  {
    v161 = (uint64_t *)(*v384 + 16 * v386);
    v162 = *v161;
    v163 = (std::__shared_weak_count *)v161[1];
    if (v163)
    {
      v164 = (unint64_t *)&v163->__shared_owners_;
      do
        v165 = __ldxr(v164);
      while (__stxr(v165 + 1, v164));
      do
        v166 = __ldaxr(v164);
      while (__stlxr(v166 - 1, v164));
      if (!v166)
      {
        ((void (*)(std::__shared_weak_count *))v163->__on_zero_shared)(v163);
        std::__shared_weak_count::__release_weak(v163);
      }
    }
    v167 = v405;
    v168 = *(_QWORD *)(v162 + 40);
    v169 = (uint64_t *)(*v384 + 16 * v386);
    v170 = *v169;
    v171 = (std::__shared_weak_count *)v169[1];
    if (v171)
    {
      v172 = (unint64_t *)&v171->__shared_owners_;
      do
        v173 = __ldxr(v172);
      while (__stxr(v173 + 1, v172));
      do
        v174 = __ldaxr(v172);
      while (__stlxr(v174 - 1, v172));
      if (!v174)
      {
        ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
        std::__shared_weak_count::__release_weak(v171);
      }
    }
    v175 = v404;
    v176 = *(_QWORD *)(v170 + 40);
    v177 = operator new(0xCuLL);
    *(_QWORD *)v177 = -1;
    v177[2] = -1;
    v178 = operator new(0xCuLL);
    *(_QWORD *)v178 = -1;
    __pa = v178;
    v178[2] = -1;
    v179 = (unsigned int *)sub_23996252C((uint64_t)v20, &v405);
    v180 = (unsigned int *)sub_239962518((uint64_t)v20, v179);
    *v177 = *(_DWORD *)(sub_239962518((uint64_t)v20, v180) + 12);
    v181 = (unsigned int *)sub_23996252C((uint64_t)v20, &v405);
    v182 = sub_239962518((uint64_t)v20, v181);
    v183 = (unsigned int *)sub_239962518((uint64_t)v20, (unsigned int *)(v182 + 8));
    v177[1] = *(_DWORD *)(sub_239962518((uint64_t)v20, v183) + 12);
    v184 = (unsigned int *)sub_23996252C((uint64_t)v20, &v405);
    v177[2] = *(_DWORD *)(sub_239962518((uint64_t)v20, v184) + 12);
    v185 = (unsigned int *)sub_23996252C((uint64_t)v20, &v404);
    v186 = (unsigned int *)sub_239962518((uint64_t)v20, v185);
    *__pa = *(_DWORD *)(sub_239962518((uint64_t)v20, v186) + 12);
    v187 = (unsigned int *)sub_23996252C((uint64_t)v20, &v404);
    v188 = sub_239962518((uint64_t)v20, v187);
    v189 = (unsigned int *)sub_239962518((uint64_t)v20, (unsigned int *)(v188 + 8));
    __pa[1] = *(_DWORD *)(sub_239962518((uint64_t)v20, v189) + 12);
    v190 = (unsigned int *)sub_23996252C((uint64_t)v20, &v404);
    v191 = *(_DWORD *)(sub_239962518((uint64_t)v20, v190) + 12);
    __pa[2] = v191;
    if (*v177 == v403)
      goto LABEL_169;
    if (v177[1] == v403)
    {
      v192 = 1;
      goto LABEL_170;
    }
    if (v177[2] != v403)
LABEL_169:
      v192 = 0;
    else
      v192 = 2;
LABEL_170:
    if (*v177 != v402)
    {
      if (v177[1] == v402)
      {
        v193 = 1;
LABEL_176:
        v194 = v168 + 12 * v167;
        v195 = v176 + 12 * v175;
        if (*__pa == v403)
          goto LABEL_181;
        if (__pa[1] == v403)
        {
          v196 = 1;
          goto LABEL_182;
        }
        if (v191 != v403)
LABEL_181:
          v196 = 0;
        else
          v196 = 2;
LABEL_182:
        if (*__pa != v402)
        {
          if (__pa[1] == v402)
          {
            v197 = 1;
LABEL_188:
            if (v193 > 1)
              v198 = -2;
            else
              v198 = 1;
            LODWORD(v374) = *(_DWORD *)(v194 + 4 * (int)(v198 + v193));
            HIDWORD(v374) = *(_DWORD *)(v194 + 4 * v192);
            v372 = v197;
            v199 = *(_DWORD *)(v195 + 4 * v197);
            v379 = v193;
            if (v196 > 1)
              v200 = -2;
            else
              v200 = 1;
            LODWORD(v375) = *(_DWORD *)(v195 + 4 * (int)(v200 + v196));
            HIDWORD(v375) = *(_DWORD *)(v195 + 4 * v196);
            v201 = (uint64_t *)(*v373 + 16 * v385);
            v202 = *v201;
            v203 = (std::__shared_weak_count *)v201[1];
            v382 = v199;
            v377 = *(_DWORD *)(v194 + 4 * v193);
            if (*(_DWORD *)(v194 + 4 * v192) == HIDWORD(v375) && *(_DWORD *)(v194 + 4 * v193) == v199)
            {
              if (v203)
              {
                v204 = (unint64_t *)&v203->__shared_owners_;
                do
                  v205 = __ldxr(v204);
                while (__stxr(v205 + 1, v204));
                do
                  v206 = __ldaxr(v204);
                while (__stlxr(v206 - 1, v204));
                if (!v206)
                {
                  ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
                  std::__shared_weak_count::__release_weak(v203);
                }
              }
              (*(void (**)(uint64_t))(*(_QWORD *)v202 + 48))(v202);
              v207 = (uint64_t *)(*v373 + 16 * v385);
              v208 = *v207;
              v209 = (std::__shared_weak_count *)v207[1];
              if (v209)
              {
                v210 = (unint64_t *)&v209->__shared_owners_;
                do
                  v211 = __ldxr(v210);
                while (__stxr(v211 + 1, v210));
                do
                  v212 = __ldaxr(v210);
                while (__stlxr(v212 - 1, v210));
                if (!v212)
                {
                  ((void (*)(std::__shared_weak_count *))v209->__on_zero_shared)(v209);
                  std::__shared_weak_count::__release_weak(v209);
                }
              }
              v213 = *(unsigned int *)(v194 + 4 * v192);
              v214 = *(_QWORD *)(v208 + 40);
              v215 = (uint64_t *)(*v373 + 16 * v385);
              v217 = *v215;
              v216 = (std::__shared_weak_count *)v215[1];
              if (v216)
              {
                v218 = (unint64_t *)&v216->__shared_owners_;
                do
                  v219 = __ldxr(v218);
                while (__stxr(v219 + 1, v218));
                do
                  v220 = __ldaxr(v218);
                while (__stlxr(v220 - 1, v218));
                if (!v220)
                {
                  ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
                  std::__shared_weak_count::__release_weak(v216);
                }
              }
              v221 = *(float32x2_t *)(v214 + 8 * v213);
              v222 = *(float32x2_t *)(*(_QWORD *)(v217 + 40) + 8 * *(unsigned int *)(v194 + 4 * v379));
              v223 = (uint64_t *)(*v373 + 16 * v385);
              v224 = *v223;
              v225 = (std::__shared_weak_count *)v223[1];
              if (v225)
              {
                v226 = (unint64_t *)&v225->__shared_owners_;
                do
                  v227 = __ldxr(v226);
                while (__stxr(v227 + 1, v226));
                do
                  v228 = __ldaxr(v226);
                while (__stlxr(v228 - 1, v226));
                if (!v228)
                {
                  ((void (*)(std::__shared_weak_count *))v225->__on_zero_shared)(v225);
                  std::__shared_weak_count::__release_weak(v225);
                }
              }
              v229 = (uint64_t *)(*v373 + 16 * v385);
              v230 = *v229;
              v231 = (std::__shared_weak_count *)v229[1];
              if (v231)
              {
                v232 = (unint64_t *)&v231->__shared_owners_;
                do
                  v233 = __ldxr(v232);
                while (__stxr(v233 + 1, v232));
                do
                  v234 = __ldaxr(v232);
                while (__stlxr(v234 - 1, v232));
                if (!v234)
                {
                  ((void (*)(std::__shared_weak_count *))v231->__on_zero_shared)(v231);
                  std::__shared_weak_count::__release_weak(v231);
                }
              }
              *(float32x2_t *)(*(_QWORD *)(v224 + 40)
                             + 8 * (*(uint64_t (**)(uint64_t))(*(_QWORD *)v230 + 16))(v230)
                             - 8) = vmul_f32(vadd_f32(v221, v222), (float32x2_t)0x3F0000003F000000);
              v235 = (uint64_t *)(*v373 + 16 * v385);
              v236 = *v235;
              v237 = (std::__shared_weak_count *)v235[1];
              if (v237)
              {
                v238 = (unint64_t *)&v237->__shared_owners_;
                do
                  v239 = __ldxr(v238);
                while (__stxr(v239 + 1, v238));
                do
                  v240 = __ldaxr(v238);
                while (__stlxr(v240 - 1, v238));
                if (!v240)
                {
                  ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
                  std::__shared_weak_count::__release_weak(v237);
                }
              }
              v241 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v236 + 16))(v236);
              v242 = (uint64_t *)(*v373 + 16 * v385);
              v243 = *v242;
              v244 = (std::__shared_weak_count *)v242[1];
              if (v244)
              {
                v245 = (unint64_t *)&v244->__shared_owners_;
                do
                  v246 = __ldxr(v245);
                while (__stxr(v246 + 1, v245));
                do
                  v247 = __ldaxr(v245);
                while (__stlxr(v247 - 1, v245));
                if (!v247)
                {
                  ((void (*)(std::__shared_weak_count *))v244->__on_zero_shared)(v244);
                  std::__shared_weak_count::__release_weak(v244);
                }
              }
            }
            else
            {
              if (v203)
              {
                v248 = (unint64_t *)&v203->__shared_owners_;
                do
                  v249 = __ldxr(v248);
                while (__stxr(v249 + 1, v248));
                do
                  v250 = __ldaxr(v248);
                while (__stlxr(v250 - 1, v248));
                if (!v250)
                {
                  ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
                  std::__shared_weak_count::__release_weak(v203);
                }
              }
              (*(void (**)(uint64_t))(*(_QWORD *)v202 + 48))(v202);
              v251 = (uint64_t *)(*v373 + 16 * v385);
              v253 = *v251;
              v252 = (std::__shared_weak_count *)v251[1];
              if (v252)
              {
                v254 = (unint64_t *)&v252->__shared_owners_;
                do
                  v255 = __ldxr(v254);
                while (__stxr(v255 + 1, v254));
                do
                  v256 = __ldaxr(v254);
                while (__stlxr(v256 - 1, v254));
                if (!v256)
                {
                  ((void (*)(std::__shared_weak_count *))v252->__on_zero_shared)(v252);
                  std::__shared_weak_count::__release_weak(v252);
                }
              }
              v257 = *(unsigned int *)(v194 + 4 * v192);
              v258 = *(_QWORD *)(v253 + 40);
              v259 = (uint64_t *)(*v373 + 16 * v385);
              v261 = *v259;
              v260 = (std::__shared_weak_count *)v259[1];
              if (v260)
              {
                v262 = (unint64_t *)&v260->__shared_owners_;
                do
                  v263 = __ldxr(v262);
                while (__stxr(v263 + 1, v262));
                do
                  v264 = __ldaxr(v262);
                while (__stlxr(v264 - 1, v262));
                if (!v264)
                {
                  ((void (*)(std::__shared_weak_count *))v260->__on_zero_shared)(v260);
                  std::__shared_weak_count::__release_weak(v260);
                }
              }
              v265 = *(float32x2_t *)(v258 + 8 * v257);
              v266 = *(float32x2_t *)(*(_QWORD *)(v261 + 40) + 8 * *(unsigned int *)(v194 + 4 * v379));
              v267 = (uint64_t *)(*v373 + 16 * v385);
              v268 = *v267;
              v269 = (std::__shared_weak_count *)v267[1];
              if (v269)
              {
                v270 = (unint64_t *)&v269->__shared_owners_;
                do
                  v271 = __ldxr(v270);
                while (__stxr(v271 + 1, v270));
                do
                  v272 = __ldaxr(v270);
                while (__stlxr(v272 - 1, v270));
                if (!v272)
                {
                  ((void (*)(std::__shared_weak_count *))v269->__on_zero_shared)(v269);
                  std::__shared_weak_count::__release_weak(v269);
                }
              }
              v273 = (uint64_t *)(*v373 + 16 * v385);
              v274 = *v273;
              v275 = (std::__shared_weak_count *)v273[1];
              if (v275)
              {
                v276 = (unint64_t *)&v275->__shared_owners_;
                do
                  v277 = __ldxr(v276);
                while (__stxr(v277 + 1, v276));
                do
                  v278 = __ldaxr(v276);
                while (__stlxr(v278 - 1, v276));
                if (!v278)
                {
                  ((void (*)(std::__shared_weak_count *))v275->__on_zero_shared)(v275);
                  std::__shared_weak_count::__release_weak(v275);
                }
              }
              *(float32x2_t *)(*(_QWORD *)(v268 + 40)
                             + 8 * (*(uint64_t (**)(uint64_t))(*(_QWORD *)v274 + 16))(v274)
                             - 8) = vmul_f32(vadd_f32(v265, v266), (float32x2_t)0x3F0000003F000000);
              v279 = (uint64_t *)(*v373 + 16 * v385);
              v280 = *v279;
              v281 = (std::__shared_weak_count *)v279[1];
              if (v281)
              {
                v282 = (unint64_t *)&v281->__shared_owners_;
                do
                  v283 = __ldxr(v282);
                while (__stxr(v283 + 1, v282));
                do
                  v284 = __ldaxr(v282);
                while (__stlxr(v284 - 1, v282));
                if (!v284)
                {
                  ((void (*)(std::__shared_weak_count *))v281->__on_zero_shared)(v281);
                  std::__shared_weak_count::__release_weak(v281);
                }
              }
              v241 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v280 + 16))(v280);
              v285 = (uint64_t *)(*v373 + 16 * v385);
              v286 = *v285;
              v287 = (std::__shared_weak_count *)v285[1];
              if (v287)
              {
                v288 = (unint64_t *)&v287->__shared_owners_;
                do
                  v289 = __ldxr(v288);
                while (__stxr(v289 + 1, v288));
                do
                  v290 = __ldaxr(v288);
                while (__stlxr(v290 - 1, v288));
                if (!v290)
                {
                  ((void (*)(std::__shared_weak_count *))v287->__on_zero_shared)(v287);
                  std::__shared_weak_count::__release_weak(v287);
                }
              }
              (*(void (**)(uint64_t))(*(_QWORD *)v286 + 48))(v286);
              v291 = v196;
              v292 = (uint64_t *)(*v373 + 16 * v385);
              v293 = *v292;
              v294 = (std::__shared_weak_count *)v292[1];
              if (v294)
              {
                v295 = (unint64_t *)&v294->__shared_owners_;
                do
                  v296 = __ldxr(v295);
                while (__stxr(v296 + 1, v295));
                do
                  v297 = __ldaxr(v295);
                while (__stlxr(v297 - 1, v295));
                if (!v297)
                {
                  ((void (*)(std::__shared_weak_count *))v294->__on_zero_shared)(v294);
                  std::__shared_weak_count::__release_weak(v294);
                }
              }
              v298 = *(unsigned int *)(v195 + 4 * v291);
              v299 = *(_QWORD *)(v293 + 40);
              v300 = (uint64_t *)(*v373 + 16 * v385);
              v302 = *v300;
              v301 = (std::__shared_weak_count *)v300[1];
              if (v301)
              {
                v303 = (unint64_t *)&v301->__shared_owners_;
                do
                  v304 = __ldxr(v303);
                while (__stxr(v304 + 1, v303));
                do
                  v305 = __ldaxr(v303);
                while (__stlxr(v305 - 1, v303));
                if (!v305)
                {
                  ((void (*)(std::__shared_weak_count *))v301->__on_zero_shared)(v301);
                  std::__shared_weak_count::__release_weak(v301);
                }
              }
              v306 = *(float32x2_t *)(v299 + 8 * v298);
              v307 = *(float32x2_t *)(*(_QWORD *)(v302 + 40) + 8 * *(unsigned int *)(v195 + 4 * v372));
              v308 = (uint64_t *)(*v373 + 16 * v385);
              v309 = *v308;
              v310 = (std::__shared_weak_count *)v308[1];
              if (v310)
              {
                v311 = (unint64_t *)&v310->__shared_owners_;
                do
                  v312 = __ldxr(v311);
                while (__stxr(v312 + 1, v311));
                do
                  v313 = __ldaxr(v311);
                while (__stlxr(v313 - 1, v311));
                if (!v313)
                {
                  ((void (*)(std::__shared_weak_count *))v310->__on_zero_shared)(v310);
                  std::__shared_weak_count::__release_weak(v310);
                }
              }
              v314 = (uint64_t *)(*v373 + 16 * v385);
              v315 = *v314;
              v316 = (std::__shared_weak_count *)v314[1];
              if (v316)
              {
                v317 = (unint64_t *)&v316->__shared_owners_;
                do
                  v318 = __ldxr(v317);
                while (__stxr(v318 + 1, v317));
                do
                  v319 = __ldaxr(v317);
                while (__stlxr(v319 - 1, v317));
                if (!v319)
                {
                  ((void (*)(std::__shared_weak_count *))v316->__on_zero_shared)(v316);
                  std::__shared_weak_count::__release_weak(v316);
                }
              }
              *(float32x2_t *)(*(_QWORD *)(v309 + 40)
                             + 8 * (*(uint64_t (**)(uint64_t))(*(_QWORD *)v315 + 16))(v315)
                             - 8) = vmul_f32(vadd_f32(v306, v307), (float32x2_t)0x3F0000003F000000);
              v320 = (uint64_t *)(*v373 + 16 * v385);
              v243 = *v320;
              v321 = (std::__shared_weak_count *)v320[1];
              if (v321)
              {
                v322 = (unint64_t *)&v321->__shared_owners_;
                do
                  v323 = __ldxr(v322);
                while (__stxr(v323 + 1, v322));
                do
                  v324 = __ldaxr(v322);
                while (__stlxr(v324 - 1, v322));
                if (!v324)
                {
                  ((void (*)(std::__shared_weak_count *))v321->__on_zero_shared)(v321);
                  std::__shared_weak_count::__release_weak(v321);
                }
              }
            }
            v158 = v241 - 1;
            v378 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v243 + 16))(v243) - 1;
            operator delete(__pa);
            operator delete(v177);
            v145 = v383;
            goto LABEL_312;
          }
          if (v191 == v402)
          {
            v197 = 2;
            goto LABEL_188;
          }
        }
        v197 = 0;
        goto LABEL_188;
      }
      if (v177[2] == v402)
      {
        v193 = 2;
        goto LABEL_176;
      }
    }
    v193 = 0;
    goto LABEL_176;
  }
LABEL_312:
  sub_23996253C((uint64_t)v20, &v410, v145);
  sub_23996253C((uint64_t)v20, v145, &v413);
  sub_23996253C((uint64_t)v20, &v408, v145 + 2);
  sub_23996253C((uint64_t)v20, v145 + 2, &v406);
  sub_23996253C((uint64_t)v20, &v409, v145 + 4);
  sub_23996253C((uint64_t)v20, v145 + 4, v145 + 1);
  sub_23996253C((uint64_t)v20, v145 + 1, &v409);
  sub_23996253C((uint64_t)v20, &v407, v145 + 3);
  sub_23996253C((uint64_t)v20, v145 + 3, v145 + 5);
  sub_23996253C((uint64_t)v20, v145 + 5, &v407);
  sub_23996256C((uint64_t)v20, v145, v145 + 1);
  sub_23996256C((uint64_t)v20, v145 + 2, v145 + 3);
  sub_23996256C((uint64_t)v20, v145 + 4, v145 + 5);
  sub_2399625C8(v20, &v413, &v399);
  sub_2399625C8(v20, v145, &v401);
  sub_2399625C8(v20, v145 + 1, &v399);
  sub_2399625C8(v20, v145 + 4, &v403);
  sub_2399625C8(v20, v145 + 5, &v399);
  sub_2399625C8(v20, v145 + 3, &v400);
  sub_2399625C8(v20, v145 + 2, &v399);
  sub_23996259C((uint64_t)v20, &v405, v145);
  sub_23996259C((uint64_t)v20, &v404, v145 + 2);
  sub_23996259C((uint64_t)v20, a4, &v409);
  sub_23996259C((uint64_t)v20, a4, v145 + 4);
  sub_23996259C((uint64_t)v20, a4, v145 + 1);
  sub_23996259C((uint64_t)v20, a4 + 1, &v407);
  sub_23996259C((uint64_t)v20, a4 + 1, v145 + 3);
  sub_23996259C((uint64_t)v20, a4 + 1, v145 + 5);
  if (v376)
  {
    v325 = (uint64_t *)(*v384 + 16 * v386);
    v327 = *v325;
    v326 = (std::__shared_weak_count *)v325[1];
    v328 = v382;
    v329 = v377;
    if (v326)
    {
      v330 = (unint64_t *)&v326->__shared_owners_;
      do
        v331 = __ldxr(v330);
      while (__stxr(v331 + 1, v330));
      do
        v332 = __ldaxr(v330);
      while (__stlxr(v332 - 1, v330));
      if (!v332)
      {
        ((void (*)(std::__shared_weak_count *))v326->__on_zero_shared)(v326);
        std::__shared_weak_count::__release_weak(v326);
        v329 = v377;
        v328 = v382;
      }
    }
    v333 = (_DWORD *)(*(_QWORD *)(v327 + 40) + 12 * v405);
    *v333 = v158;
    v333[1] = v329;
    v333[2] = v374;
    v334 = (uint64_t *)(*v384 + 16 * v386);
    v336 = *v334;
    v335 = (std::__shared_weak_count *)v334[1];
    if (v335)
    {
      v337 = (unint64_t *)&v335->__shared_owners_;
      do
        v338 = __ldxr(v337);
      while (__stxr(v338 + 1, v337));
      do
        v339 = __ldaxr(v337);
      while (__stlxr(v339 - 1, v337));
      if (!v339)
      {
        ((void (*)(std::__shared_weak_count *))v335->__on_zero_shared)(v335);
        std::__shared_weak_count::__release_weak(v335);
        v328 = v382;
      }
    }
    v340 = (_DWORD *)(*(_QWORD *)(v336 + 40) + 12 * v404);
    *v340 = v375;
    v340[1] = v328;
    v341 = v378;
    v340[2] = v378;
    v342 = (uint64_t *)(*v384 + 16 * v386);
    v344 = *v342;
    v343 = (std::__shared_weak_count *)v342[1];
    if (v343)
    {
      v345 = (unint64_t *)&v343->__shared_owners_;
      do
        v346 = __ldxr(v345);
      while (__stxr(v346 + 1, v345));
      do
        v347 = __ldaxr(v345);
      while (__stlxr(v347 - 1, v345));
      if (!v347)
      {
        ((void (*)(std::__shared_weak_count *))v343->__on_zero_shared)(v343);
        std::__shared_weak_count::__release_weak(v343);
        v341 = v378;
      }
    }
    v348 = *(_QWORD *)(v344 + 40) + 12 * *a4;
    *(_QWORD *)v348 = v374;
    *(_DWORD *)(v348 + 8) = v158;
    v349 = (uint64_t *)(*v384 + 16 * v386);
    v350 = *v349;
    v351 = (std::__shared_weak_count *)v349[1];
    if (v351)
    {
      v352 = (unint64_t *)&v351->__shared_owners_;
      do
        v353 = __ldxr(v352);
      while (__stxr(v353 + 1, v352));
      do
        v354 = __ldaxr(v352);
      while (__stlxr(v354 - 1, v352));
      if (!v354)
      {
        ((void (*)(std::__shared_weak_count *))v351->__on_zero_shared)(v351);
        std::__shared_weak_count::__release_weak(v351);
        v341 = v378;
      }
    }
    v355 = (_DWORD *)(*(_QWORD *)(v350 + 40) + 12 * a4[1]);
    *v355 = HIDWORD(v375);
    v355[1] = v375;
    v355[2] = v341;
  }
  HIBYTE(v412) = 15;
  strcpy((char *)__dst, "th:isnew_subdiv");
  v414[0] = 0;
  v356 = sub_23993A208(v387, (uint64_t)v414, (unsigned __int8 *)__dst);
  v357 = v356;
  if ((SHIBYTE(v412) & 0x80000000) == 0)
  {
    if (v356 == -1)
      return 1;
LABEL_342:
    HIBYTE(v412) = 15;
    strcpy((char *)__dst, "tv:isnew_subdiv");
    v414[0] = 0;
    v358 = sub_23993A208(v388, (uint64_t)v414, (unsigned __int8 *)__dst);
    if (SHIBYTE(v412) < 0)
      operator delete(__dst[0]);
    if (v358 != -1)
    {
      v359 = &(*v387)[2 * v357];
      v360 = *v359;
      v361 = (std::__shared_weak_count *)v359[1];
      if (v361)
      {
        v362 = (unint64_t *)&v361->__shared_owners_;
        do
          v363 = __ldxr(v362);
        while (__stxr(v363 + 1, v362));
        do
          v364 = __ldaxr(v362);
        while (__stlxr(v364 - 1, v362));
        if (!v364)
        {
          ((void (*)(std::__shared_weak_count *))v361->__on_zero_shared)(v361);
          std::__shared_weak_count::__release_weak(v361);
        }
      }
      v365 = *(_QWORD *)(v360 + 40);
      *(_QWORD *)(v365 + (((unint64_t)*v145 >> 3) & 0x1FFFFFF8)) |= 1 << *v145;
      *(_QWORD *)(v365 + (((unint64_t)v145[1] >> 3) & 0x1FFFFFF8)) |= 1 << v145[1];
      *(_QWORD *)(v365 + (((unint64_t)v145[2] >> 3) & 0x1FFFFFF8)) |= 1 << v145[2];
      *(_QWORD *)(v365 + (((unint64_t)v145[3] >> 3) & 0x1FFFFFF8)) |= 1 << v145[3];
      *(_QWORD *)(v365 + (((unint64_t)v145[4] >> 3) & 0x1FFFFFF8)) &= ~(1 << v145[4]);
      *(_QWORD *)(v365 + (((unint64_t)v145[5] >> 3) & 0x1FFFFFF8)) &= ~(1 << v145[5]);
      v366 = &(*v388)[2 * v358];
      v368 = *v366;
      v367 = (std::__shared_weak_count *)v366[1];
      if (v367)
      {
        v369 = (unint64_t *)&v367->__shared_owners_;
        do
          v370 = __ldxr(v369);
        while (__stxr(v370 + 1, v369));
        do
          v371 = __ldaxr(v369);
        while (__stlxr(v371 - 1, v369));
        if (!v371)
        {
          ((void (*)(std::__shared_weak_count *))v367->__on_zero_shared)(v367);
          std::__shared_weak_count::__release_weak(v367);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v368 + 40) + (((unint64_t)v399 >> 3) & 0x1FFFFFF8)) |= 1 << v399;
    }
    return 1;
  }
  operator delete(__dst[0]);
  if (v357 != -1)
    goto LABEL_342;
  return 1;
}

void sub_2399679DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p)
{
  void *v23;

  operator delete(__p);
  operator delete(v23);
  _Unwind_Resume(a1);
}

uint64_t sub_239967A34(uint64_t a1, unsigned int *a2, int a3)
{
  unsigned int v4;

  v4 = -1;
  return sub_23996428C(a1, a2, &v4, a3);
}

unint64_t sub_239967A60(_QWORD *a1, _DWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  v3 = sub_2399628F8(a1 + 13, a2);
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 32))(a1);
  v5 = (uint64_t *)a1[7];
  v6 = (uint64_t *)a1[8];
  if (v5 != v6)
  {
    v7 = v4;
    do
    {
      v8 = *v5;
      v9 = (std::__shared_weak_count *)v5[1];
      if (v9)
      {
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(p_shared_owners);
        while (__stxr(v11 + 1, p_shared_owners));
      }
      if (v8)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 32))(v8, v7);
      if (v9)
      {
        v12 = (unint64_t *)&v9->__shared_owners_;
        do
          v13 = __ldaxr(v12);
        while (__stlxr(v13 - 1, v12));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
  return v3;
}

void sub_239967B34(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    sub_239EBEC08();
  _Unwind_Resume(exception_object);
}

uint64_t sub_239967B4C(uint64_t a1, unsigned int *a2, int a3, int a4)
{
  unsigned int *v6;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t *v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int *v23;
  _BOOL4 v24;
  _BOOL4 v25;
  _BOOL4 v26;
  uint64_t result;
  unsigned int *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  unint64_t v36;
  uint64_t *v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  int i;
  uint64_t v51;
  float32x4_t v52;
  _DWORD *v53;
  unint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  float32x4_t v65;
  int v66;
  _DWORD v67[4];
  void *__p;
  _BYTE *v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72[3];
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;

  v6 = a2;
  v8 = *a2;
  v9 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v11 = *v9;
  v10 = (std::__shared_weak_count *)v9[1];
  if (!v10)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldxr(p_shared_owners);
  while (__stxr(v13 + 1, p_shared_owners));
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (((*(_QWORD *)(*(_QWORD *)(v11 + 40) + ((v8 >> 3) & 0x1FFFFFF8)) >> v8) & 1) != 0)
      goto LABEL_52;
  }
  else
  {
LABEL_6:
    if (((*(_QWORD *)(*(_QWORD *)(v11 + 40) + ((v8 >> 3) & 0x1FFFFFF8)) >> v8) & 1) != 0)
      goto LABEL_52;
  }
  v15 = (_QWORD *)(a1 + 104);
  v16 = *(unsigned int *)sub_239962518(a1 + 104, v6);
  v17 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v19 = *v17;
  v18 = (std::__shared_weak_count *)v17[1];
  if (v18)
  {
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (((*(_QWORD *)(*(_QWORD *)(v19 + 40) + ((v16 >> 3) & 0x1FFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_13;
LABEL_52:
      if (a3)
        return sub_239968338(a1, v6);
      return 0;
    }
  }
  if (((*(_QWORD *)(*(_QWORD *)(v19 + 40) + ((v16 >> 3) & 0x1FFFFFF8)) >> v16) & 1) != 0)
    goto LABEL_52;
LABEL_13:
  v90 = *(_DWORD *)(sub_239962518(a1 + 104, v6) + 12);
  v23 = (unsigned int *)sub_239962518(a1 + 104, v6);
  v89 = *(_DWORD *)(sub_239962518(a1 + 104, v23) + 12);
  if (v90 == v89)
    return 0;
  v24 = sub_2399423C8(a1, &v90);
  v25 = sub_2399423C8(a1, &v89);
  v26 = v25;
  if (v24 || v25)
  {
    result = 0;
    if (!a3 || v24 && v26)
      return result;
  }
  if (!v24)
    v6 = (unsigned int *)sub_239962518(a1 + 104, v6);
  v88 = *v6;
  v87 = *(_DWORD *)(sub_239962518(a1 + 104, &v88) + 8);
  v86 = *(_DWORD *)(sub_239962518(a1 + 104, &v87) + 8);
  v85 = *(_DWORD *)sub_239962518(a1 + 104, &v88);
  v84 = *(_DWORD *)(sub_239962518(a1 + 104, &v85) + 8);
  v83 = *(_DWORD *)(sub_239962518(a1 + 104, &v84) + 8);
  v82 = *(_DWORD *)sub_239962518(a1 + 104, &v86);
  v81 = *(_DWORD *)sub_239962518(a1 + 104, &v84);
  v80 = *(_DWORD *)sub_239962518(a1 + 104, &v87);
  v79 = *(_DWORD *)sub_239962518(a1 + 104, &v83);
  v78 = *(_DWORD *)(sub_239962518(a1 + 104, &v88) + 16);
  v77 = *(_DWORD *)(sub_239962518(a1 + 104, &v85) + 16);
  v76 = *(_DWORD *)(sub_239962518(a1 + 104, &v88) + 12);
  v28 = (unsigned int *)sub_239962518(a1 + 104, &v88);
  v75 = *(_DWORD *)(sub_239962518(a1 + 104, v28) + 12);
  v29 = *(_DWORD *)(sub_239962518(a1 + 104, &v86) + 12);
  v74 = v29;
  v30 = *(_DWORD *)(sub_239962518(a1 + 104, &v83) + 12);
  v73 = v30;
  LODWORD(__p) = v76;
  sub_239962B1C((uint64_t)v72, (_QWORD *)(a1 + 104), (unsigned int *)&__p);
  v31 = 0;
  do
    v32 = v31++;
  while (sub_239962B44(v72) != -1);
  LODWORD(__p) = v75;
  sub_239962B1C((uint64_t)v72, (_QWORD *)(a1 + 104), (unsigned int *)&__p);
  v33 = -1;
  do
    ++v33;
  while (sub_239962B44(v72) != -1);
  LODWORD(__p) = v29;
  sub_239962B1C((uint64_t)v72, (_QWORD *)(a1 + 104), (unsigned int *)&__p);
  v34 = -1;
  do
    ++v34;
  while (sub_239962B44(v72) != -1);
  if (v34 <= a4)
    return 0;
  LODWORD(__p) = v30;
  sub_239962B1C((uint64_t)v72, (_QWORD *)(a1 + 104), (unsigned int *)&__p);
  v35 = -1;
  do
    ++v35;
  while (sub_239962B44(v72) != -1);
  result = 0;
  if (v35 <= a4 || v33 < 3)
    return result;
  v36 = v82;
  v37 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v39 = *v37;
  v38 = (std::__shared_weak_count *)v37[1];
  if (v38)
  {
    v40 = (unint64_t *)&v38->__shared_owners_;
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 1, v40));
    do
      v42 = __ldaxr(v40);
    while (__stlxr(v42 - 1, v40));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  if ((((*(_QWORD *)(*(_QWORD *)(v39 + 40) + ((v36 >> 3) & 0x1FFFFFF8)) >> v36) & 1) == 0
     || (sub_2399640F8(a1, &v81) & 1) == 0)
    && v32 == 2)
  {
    return 0;
  }
  if (v31 + v33 - 5 <= a4)
    return 0;
  v43 = v74;
  v44 = v73;
  if (v74 == v73 || v74 == v76)
    return 0;
  result = 0;
  if (v76 != v75 && v73 != v75 && v73 != v76 && v74 != v75)
  {
    sub_239962480((uint64_t)v72, (_QWORD *)(a1 + 104), &v76);
    v45 = sub_2399624A8(v72);
    v71 = v45;
    if (v45 != -1)
    {
      v46 = 0;
      do
      {
        if (v45 == v75)
        {
          if (v46 > 0)
            return 0;
          v46 = 1;
        }
        sub_239962480((uint64_t)&__p, (_QWORD *)(a1 + 104), &v71);
        while (1)
        {
          v47 = sub_2399624A8((uint64_t *)&__p);
          if (v47 == -1)
            break;
          if (v47 == v75 && v71 != v43 && v71 != v44)
            return 0;
        }
        v45 = sub_2399624A8(v72);
        v71 = v45;
      }
      while (v45 != -1);
    }
    __p = 0;
    v69 = 0;
    v70 = 0;
    sub_239962B1C((uint64_t)v67, (_QWORD *)(a1 + 104), &v75);
    for (i = sub_239962B44(v67); ; i = sub_239962B44(v67))
    {
      v66 = i;
      if (i == -1)
        break;
      if (i != v87 && i != v85)
        sub_239968AD4(&__p, &v66);
    }
    sub_239964188(a1, &v76, (__n128 *)&v65);
    sub_239964188(a1, &v75, (__n128 *)&v64);
    v62 = v65;
    v63 = v64;
    v51 = sub_239962F9C(a1);
    v52.i64[0] = 0x3F0000003F000000;
    v52.i64[1] = 0x3F0000003F000000;
    *(float32x4_t *)(*(_QWORD *)(v51 + 40) + 16 * v76) = vmulq_f32(vaddq_f32(v63, v62), v52);
    sub_23996256C(a1 + 104, &v82, &v80);
    sub_23996256C(a1 + 104, &v81, &v79);
    v53 = __p;
    if (v69 != __p)
    {
      v54 = 0;
      v55 = 1;
      do
      {
        sub_2399625C8(v15, &v53[v54], &v76);
        v54 = v55;
        v53 = __p;
        ++v55;
      }
      while (v54 < (v69 - (_BYTE *)__p) >> 2);
    }
    sub_2399625F4(v15, &v74, &v80);
    sub_2399625F4(v15, &v73, &v81);
    sub_2399625F4(v15, &v76, &v82);
    *(_DWORD *)sub_23996252C((uint64_t)v15, &v78) = -1;
    *(_DWORD *)sub_23996252C((uint64_t)v15, &v77) = -1;
    v56 = sub_239962518((uint64_t)v15, &v88);
    *(_QWORD *)v56 = -1;
    *(_QWORD *)(v56 + 8) = -1;
    *(_DWORD *)(v56 + 16) = -1;
    v57 = sub_239962518((uint64_t)v15, &v87);
    *(_QWORD *)v57 = -1;
    *(_QWORD *)(v57 + 8) = -1;
    *(_DWORD *)(v57 + 16) = -1;
    v58 = sub_239962518((uint64_t)v15, &v86);
    *(_QWORD *)v58 = -1;
    *(_QWORD *)(v58 + 8) = -1;
    *(_DWORD *)(v58 + 16) = -1;
    v59 = sub_239962518((uint64_t)v15, &v85);
    *(_QWORD *)v59 = -1;
    *(_QWORD *)(v59 + 8) = -1;
    *(_DWORD *)(v59 + 16) = -1;
    v60 = sub_239962518((uint64_t)v15, &v84);
    *(_QWORD *)v60 = -1;
    *(_QWORD *)(v60 + 8) = -1;
    *(_DWORD *)(v60 + 16) = -1;
    v61 = sub_239962518((uint64_t)v15, &v83);
    *(_QWORD *)v61 = -1;
    *(_QWORD *)(v61 + 8) = -1;
    *(_DWORD *)(v61 + 16) = -1;
    *(_DWORD *)sub_239962508(v15, &v75) = -1;
    if (__p)
    {
      v69 = __p;
      operator delete(__p);
    }
    return 1;
  }
  return result;
}

void sub_239968300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239968338(uint64_t a1, unsigned int *a2)
{
  unsigned int *v2;
  unint64_t v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  int v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  char *v35;
  unint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  char *v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t *v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  float32x4_t v52;
  uint64_t v53;
  uint64_t *v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  float32x4_t v60;
  float32x4_t v61;
  float32x4_t v62;
  uint64_t *v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  unint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  float32x4_t v76;
  float32x4_t v77;
  _DWORD v78[4];
  char *v79;
  char *v80;
  char *v81;
  unsigned int v82;
  uint64_t v83[3];
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;

  v2 = a2;
  v4 = *a2;
  v5 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v7 = *v5;
  v6 = (std::__shared_weak_count *)v5[1];
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (((*(_QWORD *)(*(_QWORD *)(v7 + 40) + ((v4 >> 3) & 0x1FFFFFF8)) >> v4) & 1) != 0)
    v2 = (unsigned int *)sub_239962518(a1 + 104, v2);
  v95 = *v2;
  v11 = (_QWORD *)(a1 + 104);
  v94 = *(_DWORD *)sub_239962518(a1 + 104, &v95);
  v93 = *(_DWORD *)(sub_239962518(a1 + 104, &v94) + 4);
  v92 = *(_DWORD *)(sub_239962518(a1 + 104, &v94) + 8);
  v91 = *(_DWORD *)(sub_239962518(a1 + 104, &v95) + 8);
  v90 = *(_DWORD *)(sub_239962518(a1 + 104, &v95) + 4);
  v12 = *(_DWORD *)sub_239962518(a1 + 104, &v90);
  v89 = v12;
  v88 = *(_DWORD *)sub_239962518(a1 + 104, &v91);
  v87 = *(_DWORD *)(sub_239962518(a1 + 104, &v95) + 16);
  v86 = *(_DWORD *)(sub_239962518(a1 + 104, &v95) + 12);
  v13 = (unsigned int *)sub_239962518(a1 + 104, &v95);
  v85 = *(_DWORD *)(sub_239962518(a1 + 104, v13) + 12);
  v84 = *(_DWORD *)(sub_239962518(a1 + 104, &v90) + 12);
  if (v93 == v88 && v92 == v12)
  {
    *(_DWORD *)sub_23996252C(a1 + 104, &v87) = -1;
    v14 = sub_239962518((uint64_t)v11, &v95);
    *(_QWORD *)v14 = -1;
    *(_QWORD *)(v14 + 8) = -1;
    *(_DWORD *)(v14 + 16) = -1;
    v15 = sub_239962518((uint64_t)v11, &v91);
    *(_QWORD *)v15 = -1;
    *(_QWORD *)(v15 + 8) = -1;
    *(_DWORD *)(v15 + 16) = -1;
    v16 = sub_239962518((uint64_t)v11, &v90);
    *(_QWORD *)v16 = -1;
    *(_QWORD *)(v16 + 8) = -1;
    *(_DWORD *)(v16 + 16) = -1;
    v17 = sub_239962518((uint64_t)v11, &v93);
    *(_QWORD *)v17 = -1;
    *(_QWORD *)(v17 + 8) = -1;
    *(_DWORD *)(v17 + 16) = -1;
    v18 = sub_239962518((uint64_t)v11, &v94);
    *(_QWORD *)v18 = -1;
    *(_QWORD *)(v18 + 8) = -1;
    *(_DWORD *)(v18 + 16) = -1;
    v19 = sub_239962518((uint64_t)v11, &v92);
    *(_QWORD *)v19 = -1;
    *(_QWORD *)(v19 + 8) = -1;
    *(_DWORD *)(v19 + 16) = -1;
    *(_DWORD *)sub_239962508(v11, &v84) = -1;
    *(_DWORD *)sub_239962508(v11, &v86) = -1;
    *(_DWORD *)sub_239962508(v11, &v85) = -1;
    return 1;
  }
  sub_239962480((uint64_t)v83, (_QWORD *)(a1 + 104), &v86);
  v20 = sub_2399624A8(v83);
  v82 = v20;
  if (v20 != -1)
  {
    v21 = 0;
    do
    {
      if (v20 == v85)
      {
        if (v21 > 0)
          return 0;
        v21 = 1;
      }
      sub_239962480((uint64_t)&v79, (_QWORD *)(a1 + 104), &v82);
      while (1)
      {
        v22 = sub_2399624A8((uint64_t *)&v79);
        if (v22 == -1)
          break;
        if (v22 == v85 && v82 != v84)
          return 0;
      }
      v20 = sub_2399624A8(v83);
      v82 = v20;
    }
    while (v20 != -1);
  }
  v79 = 0;
  v80 = 0;
  v81 = 0;
  sub_239962B1C((uint64_t)v78, (_QWORD *)(a1 + 104), &v85);
  v24 = sub_239962B44(v78);
  v25 = 0;
  while (v24 != -1)
  {
    if (v24 != v91 && v24 != v89)
    {
      if (v25 < v81)
      {
        *(_DWORD *)v25 = v24;
        v26 = (uint64_t)(v25 + 4);
        goto LABEL_25;
      }
      v28 = (uint64_t)v79;
      v29 = (char *)(v25 - v79);
      v30 = (v25 - v79) >> 2;
      v31 = v30 + 1;
      if ((unint64_t)(v30 + 1) >> 62)
        sub_2394189F8();
      v32 = v81 - v79;
      if ((v81 - v79) >> 1 > v31)
        v31 = v32 >> 1;
      if ((unint64_t)v32 >= 0x7FFFFFFFFFFFFFFCLL)
        v33 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v33 = v31;
      if (v33)
      {
        if (v33 >> 62)
          sub_239418A80();
        v34 = operator new(4 * v33);
        v35 = &v34[4 * v30];
        *(_DWORD *)v35 = v24;
        v26 = (uint64_t)(v35 + 4);
        if (v25 == (char *)v28)
        {
LABEL_42:
          v79 = v35;
          v80 = (char *)v26;
          v81 = &v34[4 * v33];
          if (!v25)
            goto LABEL_25;
LABEL_49:
          operator delete(v25);
LABEL_25:
          v80 = (char *)v26;
          v25 = (char *)v26;
          goto LABEL_26;
        }
      }
      else
      {
        v34 = 0;
        v35 = (char *)(4 * v30);
        *(_DWORD *)(4 * v30) = v24;
        v26 = 4 * v30 + 4;
        if (v25 == (char *)v28)
          goto LABEL_42;
      }
      v36 = (unint64_t)&v25[-v28 - 4];
      if (v36 < 0xBC)
      {
        v37 = v25;
        goto LABEL_47;
      }
      if (&v29[(_QWORD)v34 - 4 - (v36 & 0xFFFFFFFFFFFFFFFCLL)] > &v29[(_QWORD)v34 - 4])
      {
        v37 = v25;
        goto LABEL_47;
      }
      if (&v25[-(v36 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v25 - 4)
      {
        v37 = v25;
        goto LABEL_47;
      }
      if ((unint64_t)(v25 - v34 - (_QWORD)v29) < 0x20)
      {
        v37 = v25;
        goto LABEL_47;
      }
      v39 = (v36 >> 2) + 1;
      v40 = 4 * (v39 & 0x7FFFFFFFFFFFFFF8);
      v37 = &v25[-v40];
      v35 -= v40;
      v41 = &v34[4 * v30 - 16];
      v42 = v25 - 16;
      v43 = v39 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v44 = *(_OWORD *)v42;
        *(v41 - 1) = *((_OWORD *)v42 - 1);
        *v41 = v44;
        v41 -= 2;
        v42 -= 32;
        v43 -= 8;
      }
      while (v43);
      if (v39 != (v39 & 0x7FFFFFFFFFFFFFF8))
      {
        do
        {
LABEL_47:
          v38 = *((_DWORD *)v37 - 1);
          v37 -= 4;
          *((_DWORD *)v35 - 1) = v38;
          v35 -= 4;
        }
        while (v37 != (char *)v28);
      }
      v25 = v79;
      v79 = v35;
      v80 = (char *)v26;
      v81 = &v34[4 * v33];
      if (v25)
        goto LABEL_49;
      goto LABEL_25;
    }
LABEL_26:
    v24 = sub_239962B44(v78);
  }
  v45 = v86;
  v46 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v48 = *v46;
  v47 = (std::__shared_weak_count *)v46[1];
  if (v47)
  {
    v49 = (unint64_t *)&v47->__shared_owners_;
    do
      v50 = __ldxr(v49);
    while (__stxr(v50 + 1, v49));
    do
      v51 = __ldaxr(v49);
    while (__stlxr(v51 - 1, v49));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
  v52 = *(float32x4_t *)(*(_QWORD *)(v48 + 40) + 16 * v45);
  v53 = v85;
  v54 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v56 = *v54;
  v55 = (std::__shared_weak_count *)v54[1];
  if (v55)
  {
    v57 = (unint64_t *)&v55->__shared_owners_;
    do
      v58 = __ldxr(v57);
    while (__stxr(v58 + 1, v57));
    do
      v59 = __ldaxr(v57);
    while (__stlxr(v59 - 1, v57));
    if (!v59)
    {
      v76 = v52;
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
      v52 = v76;
    }
  }
  v60 = vaddq_f32(v52, *(float32x4_t *)(*(_QWORD *)(v56 + 40) + 16 * v53));
  v61.i64[0] = 0x3F0000003F000000;
  v61.i64[1] = 0x3F0000003F000000;
  v62 = vmulq_f32(v60, v61);
  v63 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v65 = *v63;
  v64 = (std::__shared_weak_count *)v63[1];
  if (v64)
  {
    v66 = (unint64_t *)&v64->__shared_owners_;
    do
      v67 = __ldxr(v66);
    while (__stxr(v67 + 1, v66));
    do
      v68 = __ldaxr(v66);
    while (__stlxr(v68 - 1, v66));
    if (!v68)
    {
      v77 = v62;
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
      v62 = v77;
    }
  }
  *(float32x4_t *)(*(_QWORD *)(v65 + 40) + 16 * v86) = v62;
  sub_23996253C((uint64_t)v11, &v93, &v92);
  sub_23996256C((uint64_t)v11, &v89, &v88);
  v69 = v80;
  if (v80 != v79)
  {
    v70 = 0;
    v71 = 1;
    v69 = v79;
    do
    {
      sub_2399625C8(v11, &v69[4 * v70], &v86);
      v70 = v71;
      v69 = v79;
      ++v71;
    }
    while (v70 < (v80 - v79) >> 2);
  }
  sub_2399625F4(v11, &v84, &v88);
  sub_2399625F4(v11, &v86, &v89);
  *(_DWORD *)sub_23996252C((uint64_t)v11, &v87) = -1;
  v72 = sub_239962518((uint64_t)v11, &v95);
  *(_QWORD *)v72 = -1;
  *(_QWORD *)(v72 + 8) = -1;
  *(_DWORD *)(v72 + 16) = -1;
  v73 = sub_239962518((uint64_t)v11, &v91);
  *(_QWORD *)v73 = -1;
  *(_QWORD *)(v73 + 8) = -1;
  *(_DWORD *)(v73 + 16) = -1;
  v74 = sub_239962518((uint64_t)v11, &v90);
  *(_QWORD *)v74 = -1;
  *(_QWORD *)(v74 + 8) = -1;
  *(_DWORD *)(v74 + 16) = -1;
  v75 = sub_239962518((uint64_t)v11, &v94);
  *(_QWORD *)v75 = -1;
  *(_QWORD *)(v75 + 8) = -1;
  *(_DWORD *)(v75 + 16) = -1;
  *(_DWORD *)sub_239962508(v11, &v85) = -1;
  if (v69)
    operator delete(v69);
  return 1;
}

void sub_239968AA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_239968AD4(void **a1, _DWORD *a2)
{
  unint64_t v4;
  char *v5;
  char *v6;
  _DWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  _DWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  int v23;

  v5 = (char *)a1[1];
  v4 = (unint64_t)a1[2];
  v6 = v5;
  if ((unint64_t)v5 >= v4)
  {
    v8 = (char *)*a1;
    v9 = v5 - (_BYTE *)*a1;
    v10 = v9 >> 2;
    v11 = (v9 >> 2) + 1;
    if (v11 >> 62)
      sub_2394189F8();
    v12 = v4 - (_QWORD)v8;
    if (v12 >> 1 > v11)
      v11 = v12 >> 1;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL)
      v13 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v13 = v11;
    if (v13)
    {
      if (v13 >> 62)
        sub_239418A80();
      v14 = operator new(4 * v13);
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[4 * v10];
    *v15 = *a2;
    v7 = v15 + 1;
    if (v5 != v8)
    {
      v16 = v5 - v8 - 4;
      if (v16 < 0x2C)
        goto LABEL_28;
      if ((unint64_t)(v5 - v14 - v9) < 0x20)
        goto LABEL_28;
      v17 = (v16 >> 2) + 1;
      v18 = 4 * (v17 & 0x7FFFFFFFFFFFFFF8);
      v6 = &v5[-v18];
      v15 = (_DWORD *)((char *)v15 - v18);
      v19 = &v14[4 * v10 - 16];
      v20 = (__int128 *)(v5 - 16);
      v21 = v17 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v22 = *v20;
        *(v19 - 1) = *(v20 - 1);
        *v19 = v22;
        v19 -= 2;
        v20 -= 2;
        v21 -= 8;
      }
      while (v21);
      if (v17 != (v17 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_28:
        do
        {
          v23 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *--v15 = v23;
        }
        while (v6 != v8);
      }
      v6 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v7;
    a1[2] = &v14[4 * v13];
    if (v6)
      operator delete(v6);
  }
  else
  {
    *(_DWORD *)v5 = *a2;
    v7 = v5 + 4;
  }
  a1[1] = v7;
}

uint64_t sub_239968C38(uint64_t a1, unsigned int *a2)
{
  unsigned int *v4;
  _QWORD *v5;
  unsigned int *v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  unsigned int *v59;
  unint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _DWORD *v85;
  unsigned int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  unsigned int *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  _BOOL4 v123;
  uint64_t *v124;
  uint64_t v125;
  std::__shared_weak_count *v126;
  unint64_t *v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  std::__shared_weak_count *v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *exception;
  _BOOL4 v140;
  _BOOL4 v141;
  BOOL v142;
  unsigned int *v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  uint64_t v153;
  unsigned int v154;
  uint64_t v155;

  v155 = *MEMORY[0x24BDAC8D0];
  v4 = (unsigned int *)operator new(0xCuLL);
  *(_QWORD *)v4 = -1;
  v4[2] = -1;
  v5 = (_QWORD *)(a1 + 104);
  v6 = (unsigned int *)sub_23996252C(a1 + 104, a2);
  *v4 = *(_DWORD *)(sub_239962518(a1 + 104, v6) + 8);
  v7 = (unsigned int *)sub_23996252C(a1 + 104, a2);
  v4[1] = *(_DWORD *)(sub_239962518(a1 + 104, v7) + 4);
  v143 = a2;
  v4[2] = *(_DWORD *)sub_23996252C(a1 + 104, a2);
  v8 = *(unsigned int *)sub_239962518(a1 + 104, v4);
  v9 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v11 = *v9;
  v10 = (std::__shared_weak_count *)v9[1];
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v11 + 40) + ((v8 >> 3) & 0x1FFFFFF8));
  v16 = *(unsigned int *)sub_239962518(a1 + 104, v4 + 1);
  v17 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v18 = *v17;
  v19 = (std::__shared_weak_count *)v17[1];
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v23 = ((v15 >> v8) & 1) + ((*(_QWORD *)(*(_QWORD *)(v18 + 40) + ((v16 >> 3) & 0x1FFFFFF8)) >> v16) & 1);
  v24 = *(unsigned int *)sub_239962518(a1 + 104, v4 + 2);
  v25 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v26 = *v25;
  v27 = (std::__shared_weak_count *)v25[1];
  if (v27)
  {
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  switch(v23 + ((*(_QWORD *)(*(_QWORD *)(v26 + 40) + ((v24 >> 3) & 0x1FFFFFF8)) >> v24) & 1))
  {
    case 0:
      v153 = -1;
      v154 = -1;
      LODWORD(v153) = *(_DWORD *)(sub_239962518(a1 + 104, v4) + 12);
      v142 = sub_2399423C8(a1, (unsigned int *)&v153);
      HIDWORD(v153) = *(_DWORD *)(sub_239962518(a1 + 104, v4 + 1) + 12);
      v141 = sub_2399423C8(a1, (unsigned int *)&v153 + 1);
      v154 = *(_DWORD *)(sub_239962518(a1 + 104, v4 + 2) + 12);
      v140 = sub_2399423C8(a1, &v154);
      v31 = *v4;
      v32 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v33 = *v32;
      v34 = (std::__shared_weak_count *)v32[1];
      if (v34)
      {
        v35 = (unint64_t *)&v34->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v33 + 40) + ((v31 >> 3) & 0x1FFFFFF8)) |= 1 << v31;
      *(_DWORD *)(sub_239962518(a1 + 104, v4) + 16) = -1;
      v38 = v4[1];
      v39 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v40 = *v39;
      v41 = (std::__shared_weak_count *)v39[1];
      if (v41)
      {
        v42 = (unint64_t *)&v41->__shared_owners_;
        do
          v43 = __ldxr(v42);
        while (__stxr(v43 + 1, v42));
        do
          v44 = __ldaxr(v42);
        while (__stlxr(v44 - 1, v42));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
          std::__shared_weak_count::__release_weak(v41);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v40 + 40) + ((v38 >> 3) & 0x1FFFFFF8)) |= 1 << v38;
      *(_DWORD *)(sub_239962518(a1 + 104, v4 + 1) + 16) = -1;
      v45 = v4[2];
      v46 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v47 = *v46;
      v48 = (std::__shared_weak_count *)v46[1];
      if (v48)
      {
        v49 = (unint64_t *)&v48->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v47 + 40) + ((v45 >> 3) & 0x1FFFFFF8)) |= 1 << v45;
      *(_DWORD *)(sub_239962518(a1 + 104, v4 + 2) + 16) = -1;
      *(_DWORD *)sub_23996252C(a1 + 104, v143) = -1;
      if (v142)
        sub_239969C40(a1, (unsigned int *)&v153);
      if (v141)
        sub_239969C40(a1, (unsigned int *)&v153 + 1);
      if (v140)
        sub_239969C40(a1, &v154);
      goto LABEL_75;
    case 1:
      v152 = -1;
      LODWORD(v153) = -1;
      v151 = -1;
      v99 = *(unsigned int *)sub_239962518(a1 + 104, v4);
      v100 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v101 = *v100;
      v102 = (std::__shared_weak_count *)v100[1];
      if (v102)
      {
        v103 = (unint64_t *)&v102->__shared_owners_;
        do
          v104 = __ldxr(v103);
        while (__stxr(v104 + 1, v103));
        do
          v105 = __ldaxr(v103);
        while (__stlxr(v105 - 1, v103));
        if (!v105)
        {
          ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
          std::__shared_weak_count::__release_weak(v102);
        }
      }
      v106 = v4;
      if (((*(_QWORD *)(*(_QWORD *)(v101 + 40) + ((v99 >> 3) & 0x1FFFFFF8)) >> v99) & 1) != 0)
        goto LABEL_97;
      v107 = *(unsigned int *)sub_239962518(a1 + 104, v4 + 1);
      v108 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v109 = *v108;
      v110 = (std::__shared_weak_count *)v108[1];
      if (v110)
      {
        v111 = (unint64_t *)&v110->__shared_owners_;
        do
          v112 = __ldxr(v111);
        while (__stxr(v112 + 1, v111));
        do
          v113 = __ldaxr(v111);
        while (__stlxr(v113 - 1, v111));
        if (!v113)
        {
          ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
          std::__shared_weak_count::__release_weak(v110);
        }
      }
      v106 = v4 + 1;
      if (((*(_QWORD *)(*(_QWORD *)(v109 + 40) + ((v107 >> 3) & 0x1FFFFFF8)) >> v107) & 1) != 0)
        goto LABEL_97;
      v114 = *(unsigned int *)sub_239962518(a1 + 104, v4 + 2);
      v115 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v116 = *v115;
      v117 = (std::__shared_weak_count *)v115[1];
      if (v117)
      {
        v118 = (unint64_t *)&v117->__shared_owners_;
        do
          v119 = __ldxr(v118);
        while (__stxr(v119 + 1, v118));
        do
          v120 = __ldaxr(v118);
        while (__stlxr(v120 - 1, v118));
        if (!v120)
        {
          ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
          std::__shared_weak_count::__release_weak(v117);
        }
      }
      v106 = v4 + 2;
      if (((*(_QWORD *)(*(_QWORD *)(v116 + 40) + ((v114 >> 3) & 0x1FFFFFF8)) >> v114) & 1) != 0)
LABEL_97:
        v152 = *v106;
      LODWORD(v153) = *(_DWORD *)(sub_239962518(a1 + 104, &v152) + 4);
      v121 = sub_239962518(a1 + 104, &v152);
      v122 = *(unsigned int *)(v121 + 8);
      v151 = *(_DWORD *)(v121 + 8);
      v150 = *(_DWORD *)sub_239962518(a1 + 104, &v152);
      v149 = *(_DWORD *)(sub_239962518(a1 + 104, &v150) + 4);
      v148 = *(_DWORD *)(sub_239962518(a1 + 104, &v150) + 8);
      v147 = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&v153) + 12);
      v146 = *(_DWORD *)(sub_239962518(a1 + 104, &v148) + 12);
      v145 = *(_DWORD *)(sub_239962518(a1 + 104, &v150) + 12);
      v123 = sub_2399423C8(a1, &v147);
      v124 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v125 = *v124;
      v126 = (std::__shared_weak_count *)v124[1];
      if (v126)
      {
        v127 = (unint64_t *)&v126->__shared_owners_;
        do
          v128 = __ldxr(v127);
        while (__stxr(v128 + 1, v127));
        do
          v129 = __ldaxr(v127);
        while (__stlxr(v129 - 1, v127));
        if (!v129)
        {
          ((void (*)(std::__shared_weak_count *))v126->__on_zero_shared)(v126);
          std::__shared_weak_count::__release_weak(v126);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v125 + 40) + ((v122 >> 3) & 0x1FFFFFF8)) |= 1 << v122;
      v130 = v153;
      v131 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v132 = *v131;
      v133 = (std::__shared_weak_count *)v131[1];
      if (v133)
      {
        v134 = (unint64_t *)&v133->__shared_owners_;
        do
          v135 = __ldxr(v134);
        while (__stxr(v135 + 1, v134));
        do
          v136 = __ldaxr(v134);
        while (__stlxr(v136 - 1, v134));
        if (!v136)
        {
          ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
          std::__shared_weak_count::__release_weak(v133);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v132 + 40) + ((v130 >> 3) & 0x1FFFFFF8)) |= 1 << v130;
      *(_DWORD *)(sub_239962518(a1 + 104, &v151) + 16) = -1;
      *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&v153) + 16) = -1;
      sub_23996253C(a1 + 104, &v149, &v151);
      sub_23996253C(a1 + 104, &v153, &v148);
      sub_2399625F4((_QWORD *)(a1 + 104), &v146, &v148);
      sub_2399625F4((_QWORD *)(a1 + 104), &v145, &v151);
      v137 = sub_239962518(a1 + 104, &v152);
      *(_QWORD *)v137 = -1;
      *(_QWORD *)(v137 + 8) = -1;
      *(_DWORD *)(v137 + 16) = -1;
      v138 = sub_239962518(a1 + 104, &v150);
      *(_QWORD *)v138 = -1;
      *(_QWORD *)(v138 + 8) = -1;
      *(_DWORD *)(v138 + 16) = -1;
      *(_DWORD *)sub_23996252C(a1 + 104, v143) = -1;
      if (v123)
        sub_239969C40(a1, &v147);
      goto LABEL_75;
    case 2:
      v152 = -1;
      LODWORD(v153) = -1;
      v151 = -1;
      v52 = *(unsigned int *)sub_239962518(a1 + 104, v4);
      v53 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v54 = *v53;
      v55 = (std::__shared_weak_count *)v53[1];
      if (v55)
      {
        v56 = (unint64_t *)&v55->__shared_owners_;
        do
          v57 = __ldxr(v56);
        while (__stxr(v57 + 1, v56));
        do
          v58 = __ldaxr(v56);
        while (__stlxr(v58 - 1, v56));
        if (!v58)
        {
          ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
          std::__shared_weak_count::__release_weak(v55);
        }
      }
      v59 = v4;
      if (((*(_QWORD *)(*(_QWORD *)(v54 + 40) + ((v52 >> 3) & 0x1FFFFFF8)) >> v52) & 1) == 0)
        goto LABEL_65;
      v60 = *(unsigned int *)sub_239962518(a1 + 104, v4 + 1);
      v61 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v62 = *v61;
      v63 = (std::__shared_weak_count *)v61[1];
      if (v63)
      {
        v64 = (unint64_t *)&v63->__shared_owners_;
        do
          v65 = __ldxr(v64);
        while (__stxr(v65 + 1, v64));
        do
          v66 = __ldaxr(v64);
        while (__stlxr(v66 - 1, v64));
        if (!v66)
        {
          ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
          std::__shared_weak_count::__release_weak(v63);
        }
      }
      v59 = v4 + 1;
      if (((*(_QWORD *)(*(_QWORD *)(v62 + 40) + ((v60 >> 3) & 0x1FFFFFF8)) >> v60) & 1) == 0)
        goto LABEL_65;
      v67 = *(unsigned int *)sub_239962518(a1 + 104, v4 + 2);
      v68 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v69 = *v68;
      v70 = (std::__shared_weak_count *)v68[1];
      if (v70)
      {
        v71 = (unint64_t *)&v70->__shared_owners_;
        do
          v72 = __ldxr(v71);
        while (__stxr(v72 + 1, v71));
        do
          v73 = __ldaxr(v71);
        while (__stlxr(v73 - 1, v71));
        if (!v73)
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
      }
      v59 = v4 + 2;
      if (((*(_QWORD *)(*(_QWORD *)(v69 + 40) + ((v67 >> 3) & 0x1FFFFFF8)) >> v67) & 1) == 0)
LABEL_65:
        LODWORD(v153) = *v59;
      v152 = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&v153) + 8);
      v151 = *(_DWORD *)(sub_239962518(a1 + 104, &v152) + 8);
      v150 = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&v153) + 12);
      v149 = *(_DWORD *)(sub_239962518(a1 + 104, &v152) + 12);
      v148 = *(_DWORD *)(sub_239962518(a1 + 104, &v151) + 12);
      v147 = *(_DWORD *)sub_239962518(a1 + 104, &v152);
      v146 = *(_DWORD *)(sub_239962518(a1 + 104, &v147) + 8);
      v145 = *(_DWORD *)sub_239962518(a1 + 104, &v151);
      v144 = *(_DWORD *)(sub_239962518(a1 + 104, &v145) + 4);
      v74 = v153;
      v75 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v76 = *v75;
      v77 = (std::__shared_weak_count *)v75[1];
      if (v77)
      {
        v78 = (unint64_t *)&v77->__shared_owners_;
        do
          v79 = __ldxr(v78);
        while (__stxr(v79 + 1, v78));
        do
          v80 = __ldaxr(v78);
        while (__stlxr(v80 - 1, v78));
        if (!v80)
        {
          ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
          std::__shared_weak_count::__release_weak(v77);
        }
      }
      *(_QWORD *)(*(_QWORD *)(v76 + 40) + ((v74 >> 3) & 0x1FFFFFF8)) |= 1 << v74;
      *(_DWORD *)(sub_239962518((uint64_t)v5, (unsigned int *)&v153) + 16) = -1;
      sub_23996253C((uint64_t)v5, &v144, &v153);
      sub_23996253C((uint64_t)v5, &v153, &v146);
      sub_2399625F4(v5, &v150, &v153);
      sub_2399625F4(v5, &v149, &v146);
      *(_DWORD *)sub_239962508(v5, &v148) = -1;
      v81 = sub_239962518((uint64_t)v5, &v145);
      *(_QWORD *)v81 = -1;
      *(_QWORD *)(v81 + 8) = -1;
      *(_DWORD *)(v81 + 16) = -1;
      v82 = sub_239962518((uint64_t)v5, &v147);
      *(_QWORD *)v82 = -1;
      *(_QWORD *)(v82 + 8) = -1;
      *(_DWORD *)(v82 + 16) = -1;
      v83 = sub_239962518((uint64_t)v5, &v151);
      *(_QWORD *)v83 = -1;
      *(_QWORD *)(v83 + 8) = -1;
      *(_DWORD *)(v83 + 16) = -1;
      v84 = sub_239962518((uint64_t)v5, &v152);
      *(_QWORD *)v84 = -1;
      *(_QWORD *)(v84 + 8) = -1;
      *(_DWORD *)(v84 + 16) = -1;
      v85 = (_DWORD *)sub_23996252C((uint64_t)v5, v143);
      goto LABEL_74;
    case 3:
      v86 = (unsigned int *)sub_239962518(a1 + 104, v4);
      v87 = sub_239962518(a1 + 104, v86);
      *(_QWORD *)v87 = -1;
      *(_QWORD *)(v87 + 8) = -1;
      *(_DWORD *)(v87 + 16) = -1;
      v88 = sub_239962518(a1 + 104, v4);
      *(_DWORD *)sub_239962508((_QWORD *)(a1 + 104), (unsigned int *)(v88 + 12)) = -1;
      v89 = sub_239962518(a1 + 104, v4);
      *(_QWORD *)v89 = -1;
      *(_QWORD *)(v89 + 8) = -1;
      *(_DWORD *)(v89 + 16) = -1;
      v90 = (unsigned int *)sub_239962518(a1 + 104, v4 + 1);
      v91 = sub_239962518(a1 + 104, v90);
      *(_QWORD *)v91 = -1;
      *(_QWORD *)(v91 + 8) = -1;
      *(_DWORD *)(v91 + 16) = -1;
      v92 = sub_239962518(a1 + 104, v4 + 1);
      *(_DWORD *)sub_239962508((_QWORD *)(a1 + 104), (unsigned int *)(v92 + 12)) = -1;
      v93 = sub_239962518(a1 + 104, v4 + 1);
      *(_QWORD *)v93 = -1;
      *(_QWORD *)(v93 + 8) = -1;
      *(_DWORD *)(v93 + 16) = -1;
      v94 = (unsigned int *)sub_239962518(a1 + 104, v4 + 2);
      v95 = sub_239962518(a1 + 104, v94);
      *(_QWORD *)v95 = -1;
      *(_QWORD *)(v95 + 8) = -1;
      *(_DWORD *)(v95 + 16) = -1;
      v96 = sub_239962518(a1 + 104, v4 + 2);
      *(_DWORD *)sub_239962508((_QWORD *)(a1 + 104), (unsigned int *)(v96 + 12)) = -1;
      v97 = sub_239962518(a1 + 104, v4 + 2);
      *(_QWORD *)v97 = -1;
      *(_QWORD *)(v97 + 8) = -1;
      *(_DWORD *)(v97 + 16) = -1;
      v85 = (_DWORD *)sub_23996252C(a1 + 104, v143);
LABEL_74:
      *v85 = -1;
LABEL_75:
      operator delete(v4);
      return 1;
    default:
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x23B83DB6C](exception, "TriMesh<T>::DeleteFace num_of_bound > 3");
      __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
}

void sub_239969A1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  __cxa_free_exception(v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969A38(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969A4C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969A60(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969A74(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969A88(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969A9C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969AB0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969AC4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969AD8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969AEC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969B00(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969B14(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969B28(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969B3C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969B50(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969B64(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969B78(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969B8C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969BA0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969BB4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969BC8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969BDC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969BF0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969C04(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969C18(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_239969C2C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_239969C40(uint64_t a1, unsigned int *a2)
{
  _QWORD *v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  _DWORD *v12;
  std::string::size_type v13;
  uint64_t v14;
  unsigned int v15;
  std::string::size_type v16;
  std::string::size_type v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  _BYTE *v22;
  unsigned int *v23;
  unint64_t v24;
  _DWORD *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 *v30;
  uint64_t v31;
  __int128 v32;
  std::string::size_type v33;
  uint64_t v34;
  unsigned int v35;
  _BYTE *size;
  std::string::size_type v37;
  std::string::size_type v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  _BYTE *v43;
  unsigned int *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _OWORD *v49;
  __int128 *v50;
  uint64_t v51;
  __int128 v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  unsigned int v61;
  int *v62;
  std::runtime_error *exception;
  std::string *v65;
  __int128 v66;
  std::string v67;
  std::string __p;
  unsigned int v69;
  _DWORD v70[5];
  unsigned int v71;
  __int128 v72;
  int v73;
  uint64_t v74;
  _QWORD v75[3];

  v75[1] = *MEMORY[0x24BDAC8D0];
  v71 = *a2;
  v3 = (_QWORD *)(a1 + 104);
  sub_239962B1C((uint64_t)v70, (_QWORD *)(a1 + 104), &v71);
  v4 = sub_239962B44(v70);
  v69 = v4;
  v74 = -1;
  v75[0] = -1;
  if (v4 == -1)
  {
    v5 = 0;
    goto LABEL_85;
  }
  v5 = 0;
  do
  {
    v6 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
    v8 = *v6;
    v7 = (std::__shared_weak_count *)v6[1];
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    if (((*(_QWORD *)(*(_QWORD *)(v8 + 40) + (((unint64_t)v4 >> 3) & 0x1FFFFFF8)) >> v4) & 1) != 0)
      *((_DWORD *)&v75[-1] + v5++) = v69;
    v4 = sub_239962B44(v70);
    v69 = v4;
  }
  while (v4 != -1);
  if (v5 != 2)
  {
LABEL_85:
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::to_string(&v67, v5);
    v65 = std::string::insert(&v67, 0, "Unable to split nonmanifold v:");
    v66 = *(_OWORD *)&v65->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v65->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v66;
    v65->__r_.__value_.__l.__size_ = 0;
    v65->__r_.__value_.__r.__words[2] = 0;
    v65->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(exception, &__p);
    __cxa_throw(exception, (struct type_info *)&unk_250ADB1A8, (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  LODWORD(v75[0]) = *(_DWORD *)(sub_239962518((uint64_t)v3, (unsigned int *)&v74) + 4);
  v12 = 0;
  HIDWORD(v75[0]) = *(_DWORD *)(sub_239962518((uint64_t)v3, (unsigned int *)&v74 + 1) + 4);
  memset(&__p, 0, sizeof(__p));
  memset(&v67, 0, sizeof(v67));
  v69 = v74;
  do
  {
    v14 = sub_239962518((uint64_t)v3, &v69);
    v15 = *(_DWORD *)sub_239962518((uint64_t)v3, (unsigned int *)(v14 + 4));
    v69 = v15;
    if ((unint64_t)v12 < __p.__r_.__value_.__r.__words[2])
    {
      *v12 = v15;
      v13 = (std::string::size_type)(v12 + 1);
      goto LABEL_15;
    }
    v16 = __p.__r_.__value_.__r.__words[0];
    v17 = (std::string::size_type)v12 - __p.__r_.__value_.__r.__words[0];
    v18 = (uint64_t)((uint64_t)v12 - __p.__r_.__value_.__r.__words[0]) >> 2;
    v19 = v18 + 1;
    if ((unint64_t)(v18 + 1) >> 62)
LABEL_83:
      sub_2394189F8();
    v20 = __p.__r_.__value_.__r.__words[2] - __p.__r_.__value_.__r.__words[0];
    if ((uint64_t)(__p.__r_.__value_.__r.__words[2] - __p.__r_.__value_.__r.__words[0]) >> 1 > v19)
      v19 = v20 >> 1;
    if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL)
      v21 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v21 = v19;
    if (v21)
    {
      if (v21 >> 62)
LABEL_82:
        sub_239418A80();
      v22 = operator new(4 * v21);
      v23 = (unsigned int *)&v22[4 * v18];
      *v23 = v15;
      v13 = (std::string::size_type)(v23 + 1);
      if (v12 == (_DWORD *)v16)
        goto LABEL_26;
LABEL_29:
      v24 = (unint64_t)v12 - v16 - 4;
      if (v24 >= 0xBC)
      {
        if (&v22[v17 - 4 - (v24 & 0xFFFFFFFFFFFFFFFCLL)] > &v22[v17 - 4])
        {
          v25 = v12;
        }
        else if ((_DWORD *)((char *)v12 - (v24 & 0xFFFFFFFFFFFFFFFCLL) - 4) > v12 - 1)
        {
          v25 = v12;
        }
        else if ((char *)v12 - v22 - v17 >= 0x20)
        {
          v27 = (v24 >> 2) + 1;
          v28 = 4 * (v27 & 0x7FFFFFFFFFFFFFF8);
          v25 = &v12[v28 / 0xFFFFFFFFFFFFFFFCLL];
          v23 = (unsigned int *)((char *)v23 - v28);
          v29 = &v22[4 * v18 - 16];
          v30 = (__int128 *)(v12 - 4);
          v31 = v27 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v32 = *v30;
            *(v29 - 1) = *(v30 - 1);
            *v29 = v32;
            v29 -= 2;
            v30 -= 2;
            v31 -= 8;
          }
          while (v31);
          if (v27 == (v27 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_32:
            v12 = (_DWORD *)__p.__r_.__value_.__r.__words[0];
            __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v23;
            __p.__r_.__value_.__l.__size_ = v13;
            __p.__r_.__value_.__r.__words[2] = (std::string::size_type)&v22[4 * v21];
            if (!v12)
              goto LABEL_15;
LABEL_33:
            operator delete(v12);
            goto LABEL_15;
          }
        }
        else
        {
          v25 = v12;
        }
      }
      else
      {
        v25 = v12;
      }
      do
      {
        v26 = *--v25;
        *--v23 = v26;
      }
      while (v25 != (_DWORD *)v16);
      goto LABEL_32;
    }
    v22 = 0;
    v23 = (unsigned int *)(4 * v18);
    *(_DWORD *)(4 * v18) = v15;
    v13 = 4 * v18 + 4;
    if (v12 != (_DWORD *)v16)
      goto LABEL_29;
LABEL_26:
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v23;
    __p.__r_.__value_.__l.__size_ = v13;
    __p.__r_.__value_.__r.__words[2] = (std::string::size_type)&v22[4 * v21];
    if (v12)
      goto LABEL_33;
LABEL_15:
    __p.__r_.__value_.__l.__size_ = v13;
    v12 = (_DWORD *)v13;
  }
  while (v69 != HIDWORD(v74));
  do
  {
    v34 = sub_239962518((uint64_t)v3, &v69);
    v35 = *(_DWORD *)sub_239962518((uint64_t)v3, (unsigned int *)(v34 + 4));
    v69 = v35;
    size = (_BYTE *)v67.__r_.__value_.__l.__size_;
    if (v67.__r_.__value_.__l.__size_ < v67.__r_.__value_.__r.__words[2])
    {
      *(_DWORD *)v67.__r_.__value_.__l.__size_ = v35;
      v33 = (std::string::size_type)(size + 4);
      goto LABEL_46;
    }
    v37 = v67.__r_.__value_.__r.__words[0];
    v38 = v67.__r_.__value_.__l.__size_ - v67.__r_.__value_.__r.__words[0];
    v39 = (uint64_t)(v67.__r_.__value_.__l.__size_ - v67.__r_.__value_.__r.__words[0]) >> 2;
    v40 = v39 + 1;
    if ((unint64_t)(v39 + 1) >> 62)
      goto LABEL_83;
    v41 = v67.__r_.__value_.__r.__words[2] - v67.__r_.__value_.__r.__words[0];
    if ((uint64_t)(v67.__r_.__value_.__r.__words[2] - v67.__r_.__value_.__r.__words[0]) >> 1 > v40)
      v40 = v41 >> 1;
    if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFFCLL)
      v42 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v42 = v40;
    if (v42)
    {
      if (v42 >> 62)
        goto LABEL_82;
      v43 = operator new(4 * v42);
      v44 = (unsigned int *)&v43[4 * v39];
      *v44 = v35;
      v33 = (std::string::size_type)(v44 + 1);
      if (size == (_BYTE *)v37)
      {
LABEL_57:
        v67.__r_.__value_.__r.__words[0] = (std::string::size_type)v44;
        v67.__r_.__value_.__r.__words[2] = (std::string::size_type)&v43[4 * v42];
        if (size)
          goto LABEL_67;
        goto LABEL_46;
      }
    }
    else
    {
      v43 = 0;
      v44 = (unsigned int *)(4 * v39);
      *(_DWORD *)(4 * v39) = v35;
      v33 = 4 * v39 + 4;
      if (size == (_BYTE *)v37)
        goto LABEL_57;
    }
    v45 = (unint64_t)&size[-v37 - 4];
    if (v45 < 0x2C)
      goto LABEL_88;
    if ((unint64_t)(size - &v43[v38]) < 0x20)
      goto LABEL_88;
    v46 = (v45 >> 2) + 1;
    v47 = 4 * (v46 & 0x7FFFFFFFFFFFFFF8);
    v48 = &size[-v47];
    v44 = (unsigned int *)((char *)v44 - v47);
    v49 = &v43[4 * v39 - 16];
    v50 = (__int128 *)(size - 16);
    v51 = v46 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v52 = *v50;
      *(v49 - 1) = *(v50 - 1);
      *v49 = v52;
      v49 -= 2;
      v50 -= 2;
      v51 -= 8;
    }
    while (v51);
    size = v48;
    if (v46 != (v46 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_88:
      do
      {
        v53 = *((_DWORD *)size - 1);
        size -= 4;
        *--v44 = v53;
      }
      while (size != (_BYTE *)v37);
    }
    size = (_BYTE *)v67.__r_.__value_.__r.__words[0];
    v67.__r_.__value_.__r.__words[0] = (std::string::size_type)v44;
    v67.__r_.__value_.__r.__words[2] = (std::string::size_type)&v43[4 * v42];
    if (size)
LABEL_67:
      operator delete(size);
LABEL_46:
    v67.__r_.__value_.__l.__size_ = v33;
  }
  while (v69 != (_DWORD)v74);
  v54 = v71;
  v55 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v56 = *v55;
  v57 = (std::__shared_weak_count *)v55[1];
  if (v57)
  {
    v58 = (unint64_t *)&v57->__shared_owners_;
    do
      v59 = __ldxr(v58);
    while (__stxr(v59 + 1, v58));
    do
      v60 = __ldaxr(v58);
    while (__stlxr(v60 - 1, v58));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
  }
  v72 = *(_OWORD *)(*(_QWORD *)(v56 + 40) + 16 * v54);
  v73 = -1;
  v61 = sub_23992B920(a1, &v72, &v73);
  sub_23996253C((uint64_t)v3, v75, (_DWORD *)&v74 + 1);
  sub_23996253C((uint64_t)v3, (_DWORD *)v75 + 1, &v74);
  *(_QWORD *)&v72 = a1;
  *((_QWORD *)&v72 + 1) = v61;
  if (v67.__r_.__value_.__r.__words[0] != v67.__r_.__value_.__l.__size_)
  {
    v62 = (int *)v67.__r_.__value_.__r.__words[0];
    do
    {
      v73 = *v62;
      sub_2399625C8((_QWORD *)(v72 + 104), &v73, (_DWORD *)&v72 + 2);
      ++v62;
    }
    while (v62 != (int *)v67.__r_.__value_.__l.__size_);
  }
  sub_2399625F4(v3, &v71, (_DWORD *)&v74 + 1);
  sub_2399636E4(a1, v71, v61, 0);
  if (v67.__r_.__value_.__r.__words[0])
    operator delete(v67.__r_.__value_.__l.__data_);
  if (__p.__r_.__value_.__r.__words[0])
    operator delete(__p.__r_.__value_.__l.__data_);
  return 1;
}

void sub_23996A2D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  void *v23;
  int v24;

  if (a23 < 0)
    operator delete(__p);
  if (a17 < 0)
  {
    operator delete(a12);
    if ((v24 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v24)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v23);
  _Unwind_Resume(a1);
}

BOOL sub_23996A390(_QWORD *a1)
{
  char *v1;
  size_t v2;
  size_t v3;
  char **p_dst;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  char *v8;
  size_t v9;
  size_t v10;
  char **v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  _BOOL8 v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  unsigned int v32;
  char *v33;
  char *v34;
  void *v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE *v61;
  unsigned int *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _OWORD *v68;
  char *v69;
  uint64_t v70;
  __int128 v71;
  unsigned int v72;
  uint64_t *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t *v80;
  unint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  std::__shared_weak_count *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _BYTE *v91;
  unsigned int *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  _OWORD *v98;
  char *v99;
  uint64_t v100;
  __int128 v101;
  unsigned int v102;
  uint64_t *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t *v109;
  char *v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  _BYTE *v118;
  unsigned int *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  _OWORD *v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  unsigned int v128;
  uint64_t *v129;
  uint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t *v140;
  char *v141;
  unint64_t v142;
  unint64_t v143;
  unsigned int **v144;
  unsigned int *v145;
  unsigned int *v146;
  unsigned int v147;
  uint64_t *v148;
  uint64_t v149;
  std::__shared_weak_count *v150;
  unint64_t *v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  std::__shared_weak_count *v157;
  unint64_t *v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  std::__shared_weak_count *v163;
  unint64_t *v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  std::__shared_weak_count *v170;
  unint64_t *v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  std::__shared_weak_count *v176;
  unint64_t *v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  std::__shared_weak_count *v188;
  unint64_t *v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  std::__shared_weak_count *v195;
  unint64_t *v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  std::__shared_weak_count *v202;
  unint64_t *v203;
  unint64_t v204;
  unint64_t v205;
  _DWORD *v206;
  _DWORD *v207;
  uint64_t *v208;
  uint64_t v209;
  std::__shared_weak_count *v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  std::__shared_weak_count *v219;
  unint64_t *v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  std::__shared_weak_count *v225;
  unint64_t *v226;
  unint64_t v227;
  unint64_t v228;
  char *v229;
  char *v230;
  void *v231;
  char *v232;
  void *v233;
  void *v234;
  unint64_t v236;
  unsigned int v237;
  uint64_t v238;
  _QWORD *v239;
  unsigned int v241;
  uint64_t *v242;
  void *__p;
  void *v244;
  uint64_t v245;
  void *v246;
  char *v247;
  uint64_t v248;
  char *__dst;
  size_t v250;
  unint64_t v251;

  v1 = off_256934438[0];
  v2 = strlen(off_256934438[0]);
  if (v2 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_278;
  v3 = v2;
  if (v2 >= 0x17)
  {
    v5 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17)
      v5 = v2 | 7;
    v6 = v5 + 1;
    p_dst = (char **)operator new(v5 + 1);
    v250 = v3;
    v251 = v6 | 0x8000000000000000;
    __dst = (char *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v251) = v2;
  p_dst = &__dst;
  if (v2)
LABEL_8:
    memmove(p_dst, v1, v3);
  *((_BYTE *)p_dst + v3) = 0;
  v246 = 0;
  v239 = a1 + 10;
  v7 = sub_2394E5C88((uint64_t **)a1 + 10, (uint64_t)&v246, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v251) < 0)
    operator delete(__dst);
  v8 = off_256934418[0];
  v9 = strlen(off_256934418[0]);
  if (v9 > 0x7FFFFFFFFFFFFFF7)
LABEL_278:
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v12 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v12 = v9 | 7;
    v13 = v12 + 1;
    v11 = (char **)operator new(v12 + 1);
    v250 = v10;
    v251 = v13 | 0x8000000000000000;
    __dst = (char *)v11;
  }
  else
  {
    HIBYTE(v251) = v9;
    v11 = &__dst;
    if (!v9)
      goto LABEL_19;
  }
  memmove(v11, v8, v10);
LABEL_19:
  *((_BYTE *)v11 + v10) = 0;
  LODWORD(v247) = 0;
  v246 = 0;
  v242 = a1 + 7;
  v14 = sub_2394E5DE4((uint64_t **)a1 + 7, (uint64_t)&v246, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v251) < 0)
  {
    operator delete(__dst);
    v15 = 0;
    if (v7 == -1)
      return v15;
  }
  else
  {
    v15 = 0;
    if (v7 == -1)
      return v15;
  }
  if (v14 == -1)
    return v15;
  __dst = 0;
  v250 = 0;
  v251 = 0;
  v246 = 0;
  v247 = 0;
  v248 = 0;
  v16 = (uint64_t *)(*v239 + 16 * v7);
  v17 = *v16;
  v18 = (std::__shared_weak_count *)v16[1];
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(p_shared_owners);
    while (__stxr(v20 + 1, p_shared_owners));
    do
      v21 = __ldaxr(p_shared_owners);
    while (__stlxr(v21 - 1, p_shared_owners));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
  sub_23941C5D8((uint64_t)&__dst, v22, 1uLL);
  v238 = v7;
  v23 = (uint64_t *)(*v239 + 16 * v7);
  v24 = *v23;
  v25 = (std::__shared_weak_count *)v23[1];
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
    do
      v28 = __ldaxr(v26);
    while (__stlxr(v28 - 1, v26));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v29 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 16))(v24);
  __p = 0;
  v244 = 0;
  v245 = 0;
  v30 = v247;
  v31 = 0xAAAAAAAAAAAAAAABLL * ((v247 - (_BYTE *)v246) >> 3);
  if (v29 <= v31)
  {
    if (v29 < v31)
    {
      v32 = v14;
      v33 = (char *)v246 + 24 * v29;
      if (v247 != v33)
      {
        v34 = v247;
        do
        {
          v36 = (void *)*((_QWORD *)v34 - 3);
          v34 -= 24;
          v35 = v36;
          if (v36)
          {
            *((_QWORD *)v30 - 2) = v35;
            operator delete(v35);
          }
          v30 = v34;
        }
        while (v34 != v33);
      }
      v247 = v33;
      v14 = v32;
    }
  }
  else
  {
    sub_23942D308((char **)&v246, v29 - v31, (uint64_t)&__p);
  }
  v237 = v14;
  if (__p)
  {
    v244 = __p;
    operator delete(__p);
  }
  v37 = a1 + 7;
  if (a1[20] != a1[19])
  {
    v38 = 0;
    v39 = 0;
    while (1)
    {
      v41 = (uint64_t *)(*v37 + 16 * v237);
      v42 = *v41;
      v43 = (std::__shared_weak_count *)v41[1];
      v241 = v39;
      if (v43)
      {
        v44 = (unint64_t *)&v43->__shared_owners_;
        do
          v45 = __ldxr(v44);
        while (__stxr(v45 + 1, v44));
        do
          v46 = __ldaxr(v44);
        while (__stlxr(v46 - 1, v44));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
          std::__shared_weak_count::__release_weak(v43);
          v39 = v241;
          v37 = a1 + 7;
        }
      }
      v47 = *(unsigned int *)(*(_QWORD *)(v42 + 40) + 12 * v38);
      *(_QWORD *)&__dst[(v47 >> 3) & 0x1FFFFFF8] &= ~(1 << v47);
      v48 = (char *)v246 + 24 * v47;
      v50 = (uint64_t *)(v48 + 8);
      v49 = (char *)*((_QWORD *)v48 + 1);
      v51 = *((_QWORD *)v48 + 2);
      if ((unint64_t)v49 < v51)
      {
        *(_DWORD *)v49 = v39;
        *v50 = (uint64_t)(v49 + 4);
        v52 = (uint64_t *)(*v37 + 16 * v237);
        v53 = *v52;
        v54 = (std::__shared_weak_count *)v52[1];
        if (!v54)
          goto LABEL_86;
LABEL_81:
        v74 = (unint64_t *)&v54->__shared_owners_;
        do
          v75 = __ldxr(v74);
        while (__stxr(v75 + 1, v74));
        do
          v76 = __ldaxr(v74);
        while (__stlxr(v76 - 1, v74));
        if (!v76)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
          v39 = v241;
          v37 = a1 + 7;
        }
        goto LABEL_86;
      }
      v55 = *(char **)v48;
      v56 = (uint64_t)&v49[-*(_QWORD *)v48];
      v57 = v56 >> 2;
      v58 = (v56 >> 2) + 1;
      if (v58 >> 62)
        goto LABEL_276;
      v59 = v51 - (_QWORD)v55;
      if (v59 >> 1 > v58)
        v58 = v59 >> 1;
      v60 = (unint64_t)v59 >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v58;
      if (!v60)
        break;
      if (v60 >> 62)
        goto LABEL_277;
      v61 = operator new(4 * v60);
      v39 = v241;
      v62 = (unsigned int *)&v61[4 * v57];
      *v62 = v241;
      v63 = (uint64_t)(v62 + 1);
      if (v49 != v55)
        goto LABEL_69;
LABEL_78:
      *(_QWORD *)v48 = v62;
      *v50 = v63;
      *((_QWORD *)v48 + 2) = &v61[4 * v60];
      if (v55)
      {
        operator delete(v55);
        v39 = v241;
      }
      v37 = a1 + 7;
      *v50 = v63;
      v73 = (uint64_t *)(*v242 + 16 * v237);
      v53 = *v73;
      v54 = (std::__shared_weak_count *)v73[1];
      if (v54)
        goto LABEL_81;
LABEL_86:
      v77 = *(unsigned int *)(*(_QWORD *)(v53 + 40) + 12 * v38 + 4);
      *(_QWORD *)&__dst[(v77 >> 3) & 0x1FFFFFF8] &= ~(1 << v77);
      v78 = (char *)v246 + 24 * v77;
      v80 = (uint64_t *)(v78 + 8);
      v79 = (char *)*((_QWORD *)v78 + 1);
      v81 = *((_QWORD *)v78 + 2);
      if ((unint64_t)v79 < v81)
      {
        *(_DWORD *)v79 = v39;
        *v80 = (uint64_t)(v79 + 4);
        v82 = (uint64_t *)(*v37 + 16 * v237);
        v83 = *v82;
        v84 = (std::__shared_weak_count *)v82[1];
        if (!v84)
          goto LABEL_115;
LABEL_110:
        v104 = (unint64_t *)&v84->__shared_owners_;
        do
          v105 = __ldxr(v104);
        while (__stxr(v105 + 1, v104));
        do
          v106 = __ldaxr(v104);
        while (__stlxr(v106 - 1, v104));
        if (!v106)
        {
          ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
          std::__shared_weak_count::__release_weak(v84);
          v39 = v241;
          v37 = a1 + 7;
        }
        goto LABEL_115;
      }
      v85 = *(char **)v78;
      v86 = (uint64_t)&v79[-*(_QWORD *)v78];
      v87 = v86 >> 2;
      v88 = (v86 >> 2) + 1;
      if (v88 >> 62)
        goto LABEL_276;
      v89 = v81 - (_QWORD)v85;
      if (v89 >> 1 > v88)
        v88 = v89 >> 1;
      if ((unint64_t)v89 >= 0x7FFFFFFFFFFFFFFCLL)
        v90 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v90 = v88;
      if (!v90)
      {
        v91 = 0;
        v92 = (unsigned int *)(4 * v87);
        *(_DWORD *)(4 * v87) = v39;
        v93 = 4 * v87 + 4;
        if (v79 == v85)
          goto LABEL_107;
LABEL_98:
        v94 = v79 - 4 - v85;
        if (v94 < 0x2C)
          goto LABEL_281;
        if ((unint64_t)(v79 - &v91[v86]) < 0x20)
          goto LABEL_281;
        v95 = (v94 >> 2) + 1;
        v96 = 4 * (v95 & 0x7FFFFFFFFFFFFFF8);
        v97 = &v79[-v96];
        v92 = (unsigned int *)((char *)v92 - v96);
        v98 = &v91[4 * v87 - 16];
        v99 = v79 - 16;
        v100 = v95 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v101 = *(_OWORD *)v99;
          *(v98 - 1) = *((_OWORD *)v99 - 1);
          *v98 = v101;
          v98 -= 2;
          v99 -= 32;
          v100 -= 8;
        }
        while (v100);
        v79 = v97;
        if (v95 != (v95 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_281:
          do
          {
            v102 = *((_DWORD *)v79 - 1);
            v79 -= 4;
            *--v92 = v102;
          }
          while (v79 != v85);
        }
        goto LABEL_107;
      }
      if (v90 >> 62)
        goto LABEL_277;
      v91 = operator new(4 * v90);
      v39 = v241;
      v92 = (unsigned int *)&v91[4 * v87];
      *v92 = v241;
      v93 = (uint64_t)(v92 + 1);
      if (v79 != v85)
        goto LABEL_98;
LABEL_107:
      *(_QWORD *)v78 = v92;
      *v80 = v93;
      *((_QWORD *)v78 + 2) = &v91[4 * v90];
      if (v85)
      {
        operator delete(v85);
        v39 = v241;
      }
      v37 = a1 + 7;
      *v80 = v93;
      v103 = (uint64_t *)(*v242 + 16 * v237);
      v83 = *v103;
      v84 = (std::__shared_weak_count *)v103[1];
      if (v84)
        goto LABEL_110;
LABEL_115:
      v107 = *(unsigned int *)(*(_QWORD *)(v83 + 40) + 12 * v38 + 8);
      *(_QWORD *)&__dst[(v107 >> 3) & 0x1FFFFFF8] &= ~(1 << v107);
      v108 = (char *)v246 + 24 * v107;
      v109 = (uint64_t *)(v108 + 8);
      v110 = (char *)*((_QWORD *)v108 + 1);
      v111 = *((_QWORD *)v108 + 2);
      if ((unint64_t)v110 >= v111)
      {
        v112 = *(char **)v108;
        v113 = (uint64_t)&v110[-*(_QWORD *)v108];
        v114 = v113 >> 2;
        v115 = (v113 >> 2) + 1;
        if (v115 >> 62)
LABEL_276:
          sub_2394189F8();
        v116 = v111 - (_QWORD)v112;
        if (v116 >> 1 > v115)
          v115 = v116 >> 1;
        if ((unint64_t)v116 >= 0x7FFFFFFFFFFFFFFCLL)
          v117 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v117 = v115;
        if (v117)
        {
          if (v117 >> 62)
LABEL_277:
            sub_239418A80();
          v118 = operator new(4 * v117);
          v39 = v241;
          v119 = (unsigned int *)&v118[4 * v114];
          *v119 = v241;
          v40 = (uint64_t)(v119 + 1);
          if (v110 != v112)
          {
LABEL_125:
            v120 = v110 - 4 - v112;
            if (v120 < 0x2C)
              goto LABEL_282;
            if ((unint64_t)(v110 - &v118[v113]) < 0x20)
              goto LABEL_282;
            v121 = (v120 >> 2) + 1;
            v122 = 4 * (v121 & 0x7FFFFFFFFFFFFFF8);
            v123 = &v110[-v122];
            v119 = (unsigned int *)((char *)v119 - v122);
            v124 = &v118[4 * v114 - 16];
            v125 = v110 - 16;
            v126 = v121 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v127 = *(_OWORD *)v125;
              *(v124 - 1) = *((_OWORD *)v125 - 1);
              *v124 = v127;
              v124 -= 2;
              v125 -= 32;
              v126 -= 8;
            }
            while (v126);
            v110 = v123;
            if (v121 != (v121 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_282:
              do
              {
                v128 = *((_DWORD *)v110 - 1);
                v110 -= 4;
                *--v119 = v128;
              }
              while (v110 != v112);
            }
          }
        }
        else
        {
          v118 = 0;
          v119 = (unsigned int *)(4 * v114);
          *(_DWORD *)(4 * v114) = v39;
          v40 = 4 * v114 + 4;
          if (v110 != v112)
            goto LABEL_125;
        }
        *(_QWORD *)v108 = v119;
        *v109 = v40;
        *((_QWORD *)v108 + 2) = &v118[4 * v117];
        if (v112)
        {
          operator delete(v112);
          v39 = v241;
        }
        v37 = a1 + 7;
        goto LABEL_50;
      }
      *(_DWORD *)v110 = v39;
      v40 = (uint64_t)(v110 + 4);
LABEL_50:
      *v109 = v40;
      v38 = ++v39;
      if (v39 >= (unint64_t)((uint64_t)(a1[20] - a1[19]) >> 2))
        goto LABEL_137;
    }
    v61 = 0;
    v62 = (unsigned int *)(4 * v57);
    *(_DWORD *)(4 * v57) = v39;
    v63 = 4 * v57 + 4;
    if (v49 == v55)
      goto LABEL_78;
LABEL_69:
    v64 = v49 - 4 - v55;
    if (v64 < 0x2C)
      goto LABEL_283;
    if ((unint64_t)(v49 - &v61[v56]) < 0x20)
      goto LABEL_283;
    v65 = (v64 >> 2) + 1;
    v66 = 4 * (v65 & 0x7FFFFFFFFFFFFFF8);
    v67 = &v49[-v66];
    v62 = (unsigned int *)((char *)v62 - v66);
    v68 = &v61[4 * v57 - 16];
    v69 = v49 - 16;
    v70 = v65 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v71 = *(_OWORD *)v69;
      *(v68 - 1) = *((_OWORD *)v69 - 1);
      *v68 = v71;
      v68 -= 2;
      v69 -= 32;
      v70 -= 8;
    }
    while (v70);
    v49 = v67;
    if (v65 != (v65 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_283:
      do
      {
        v72 = *((_DWORD *)v49 - 1);
        v49 -= 4;
        *--v62 = v72;
      }
      while (v49 != v55);
    }
    goto LABEL_78;
  }
LABEL_137:
  v129 = (uint64_t *)(*v239 + 16 * v238);
  v130 = *v129;
  v131 = (std::__shared_weak_count *)v129[1];
  if (v131)
  {
    v132 = (unint64_t *)&v131->__shared_owners_;
    do
      v133 = __ldxr(v132);
    while (__stxr(v133 + 1, v132));
    do
      v134 = __ldaxr(v132);
    while (__stlxr(v134 - 1, v132));
    if (!v134)
    {
      ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
      std::__shared_weak_count::__release_weak(v131);
    }
  }
  v135 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v130 + 16))(v130);
  v136 = v135;
  if (!v135)
    goto LABEL_263;
  v137 = 0;
  v138 = 0;
  v236 = v135;
  v139 = v135 - 1;
  v140 = a1 + 7;
  while (1)
  {
    if (v139 > v138)
    {
      while (((*(_QWORD *)&__dst[(v139 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v139) & 1) != 0)
      {
        if (--v139 <= v138)
        {
          v139 = v138;
          break;
        }
      }
    }
    if (v138 < v139)
    {
      v142 = v137;
      v143 = v138;
      while (((*(_QWORD *)&__dst[(v143 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v143) & 1) == 0)
      {
        ++v143;
        ++v142;
        if (v139 == v143)
        {
          v137 = v139 + v137 - v138;
          goto LABEL_231;
        }
      }
      v138 = v143;
      v137 = v142;
    }
    if (v138 == v139)
      break;
    if ((*(_QWORD *)&__dst[8 * (v138 >> 6)] & (1 << v138)) == 0
      || (*(_QWORD *)&__dst[8 * (v139 >> 6)] & (1 << v139)) != 0)
    {
      v15 = 0;
      v229 = (char *)v246;
      if (!v246)
        goto LABEL_271;
      goto LABEL_264;
    }
    v144 = (unsigned int **)((char *)v246 + 24 * v139);
    v145 = *v144;
    v146 = v144[1];
    while (v145 != v146)
    {
      v147 = *v145;
      v148 = (uint64_t *)(*v140 + 16 * v237);
      v149 = *v148;
      v150 = (std::__shared_weak_count *)v148[1];
      if (!v150)
        goto LABEL_168;
      v151 = (unint64_t *)&v150->__shared_owners_;
      do
        v152 = __ldxr(v151);
      while (__stxr(v152 + 1, v151));
      do
        v153 = __ldaxr(v151);
      while (__stlxr(v153 - 1, v151));
      if (!v153)
      {
        ((void (*)(std::__shared_weak_count *))v150->__on_zero_shared)(v150);
        std::__shared_weak_count::__release_weak(v150);
        v140 = a1 + 7;
        v154 = *v242;
        if (v139 != *(_DWORD *)(*(_QWORD *)(v149 + 40) + 12 * v147))
          goto LABEL_176;
      }
      else
      {
LABEL_168:
        v154 = *v140;
        if (v139 != *(_DWORD *)(*(_QWORD *)(v149 + 40) + 12 * v147))
          goto LABEL_176;
      }
      v155 = (uint64_t *)(v154 + 16 * v237);
      v156 = *v155;
      v157 = (std::__shared_weak_count *)v155[1];
      if (v157)
      {
        v158 = (unint64_t *)&v157->__shared_owners_;
        do
          v159 = __ldxr(v158);
        while (__stxr(v159 + 1, v158));
        do
          v160 = __ldaxr(v158);
        while (__stlxr(v160 - 1, v158));
        if (!v160)
        {
          ((void (*)(std::__shared_weak_count *))v157->__on_zero_shared)(v157);
          std::__shared_weak_count::__release_weak(v157);
          v140 = a1 + 7;
        }
      }
      *(_DWORD *)(*(_QWORD *)(v156 + 40) + 12 * v147) = v138;
      v154 = *v140;
LABEL_176:
      v161 = (uint64_t *)(v154 + 16 * v237);
      v162 = *v161;
      v163 = (std::__shared_weak_count *)v161[1];
      if (!v163)
        goto LABEL_181;
      v164 = (unint64_t *)&v163->__shared_owners_;
      do
        v165 = __ldxr(v164);
      while (__stxr(v165 + 1, v164));
      do
        v166 = __ldaxr(v164);
      while (__stlxr(v166 - 1, v164));
      if (!v166)
      {
        ((void (*)(std::__shared_weak_count *))v163->__on_zero_shared)(v163);
        std::__shared_weak_count::__release_weak(v163);
        v140 = a1 + 7;
        v167 = *v242;
        if (v139 != *(_DWORD *)(*(_QWORD *)(v162 + 40) + 12 * v147 + 4))
          goto LABEL_189;
      }
      else
      {
LABEL_181:
        v167 = *v140;
        if (v139 != *(_DWORD *)(*(_QWORD *)(v162 + 40) + 12 * v147 + 4))
          goto LABEL_189;
      }
      v168 = (uint64_t *)(v167 + 16 * v237);
      v169 = *v168;
      v170 = (std::__shared_weak_count *)v168[1];
      if (v170)
      {
        v171 = (unint64_t *)&v170->__shared_owners_;
        do
          v172 = __ldxr(v171);
        while (__stxr(v172 + 1, v171));
        do
          v173 = __ldaxr(v171);
        while (__stlxr(v173 - 1, v171));
        if (!v173)
        {
          ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
          std::__shared_weak_count::__release_weak(v170);
          v140 = a1 + 7;
        }
      }
      *(_DWORD *)(*(_QWORD *)(v169 + 40) + 12 * v147 + 4) = v138;
      v167 = *v140;
LABEL_189:
      v174 = (uint64_t *)(v167 + 16 * v237);
      v175 = *v174;
      v176 = (std::__shared_weak_count *)v174[1];
      if (!v176)
        goto LABEL_194;
      v177 = (unint64_t *)&v176->__shared_owners_;
      do
        v178 = __ldxr(v177);
      while (__stxr(v178 + 1, v177));
      do
        v179 = __ldaxr(v177);
      while (__stlxr(v179 - 1, v177));
      if (!v179)
      {
        ((void (*)(std::__shared_weak_count *))v176->__on_zero_shared)(v176);
        std::__shared_weak_count::__release_weak(v176);
        v140 = a1 + 7;
        if (v139 != *(_DWORD *)(*(_QWORD *)(v175 + 40) + 12 * v147 + 8))
          goto LABEL_161;
      }
      else
      {
LABEL_194:
        if (v139 != *(_DWORD *)(*(_QWORD *)(v175 + 40) + 12 * v147 + 8))
          goto LABEL_161;
      }
      v180 = (uint64_t *)(*v140 + 16 * v237);
      v181 = *v180;
      v182 = (std::__shared_weak_count *)v180[1];
      if (v182)
      {
        v183 = (unint64_t *)&v182->__shared_owners_;
        do
          v184 = __ldxr(v183);
        while (__stxr(v184 + 1, v183));
        do
          v185 = __ldaxr(v183);
        while (__stlxr(v185 - 1, v183));
        if (!v185)
        {
          ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
          std::__shared_weak_count::__release_weak(v182);
          v140 = a1 + 7;
        }
      }
      *(_DWORD *)(*(_QWORD *)(v181 + 40) + 12 * v147 + 8) = v138;
LABEL_161:
      ++v145;
    }
    v186 = (uint64_t *)(*v239 + 16 * v238);
    v187 = *v186;
    v188 = (std::__shared_weak_count *)v186[1];
    if (v188)
    {
      v189 = (unint64_t *)&v188->__shared_owners_;
      do
        v190 = __ldxr(v189);
      while (__stxr(v190 + 1, v189));
      do
        v191 = __ldaxr(v189);
      while (__stlxr(v191 - 1, v189));
      if (!v191)
      {
        ((void (*)(std::__shared_weak_count *))v188->__on_zero_shared)(v188);
        std::__shared_weak_count::__release_weak(v188);
        v140 = a1 + 7;
      }
    }
    v192 = *(_QWORD *)(*(_QWORD *)(v187 + 40) + 8 * v138);
    v193 = (uint64_t *)(*v239 + 16 * v238);
    v194 = *v193;
    v195 = (std::__shared_weak_count *)v193[1];
    if (v195)
    {
      v196 = (unint64_t *)&v195->__shared_owners_;
      do
        v197 = __ldxr(v196);
      while (__stxr(v197 + 1, v196));
      do
        v198 = __ldaxr(v196);
      while (__stlxr(v198 - 1, v196));
      if (!v198)
      {
        ((void (*)(std::__shared_weak_count *))v195->__on_zero_shared)(v195);
        std::__shared_weak_count::__release_weak(v195);
        v140 = a1 + 7;
      }
    }
    v199 = *(_QWORD *)(v194 + 40);
    v200 = (uint64_t *)(*v239 + 16 * v238);
    v201 = *v200;
    v202 = (std::__shared_weak_count *)v200[1];
    if (v202)
    {
      v203 = (unint64_t *)&v202->__shared_owners_;
      do
        v204 = __ldxr(v203);
      while (__stxr(v204 + 1, v203));
      do
        v205 = __ldaxr(v203);
      while (__stlxr(v205 - 1, v203));
      if (!v205)
      {
        ((void (*)(std::__shared_weak_count *))v202->__on_zero_shared)(v202);
        std::__shared_weak_count::__release_weak(v202);
        v140 = a1 + 7;
      }
    }
    v206 = (_DWORD *)(v199 + 8 * v139);
    v207 = (_DWORD *)(*(_QWORD *)(v201 + 40) + 8 * v138);
    *v207 = *v206;
    v207[1] = v206[1];
    v208 = (uint64_t *)(*v239 + 16 * v238);
    v209 = *v208;
    v210 = (std::__shared_weak_count *)v208[1];
    if (v210)
    {
      v211 = (unint64_t *)&v210->__shared_owners_;
      do
        v212 = __ldxr(v211);
      while (__stxr(v212 + 1, v211));
      do
        v213 = __ldaxr(v211);
      while (__stlxr(v213 - 1, v211));
      if (!v213)
      {
        ((void (*)(std::__shared_weak_count *))v210->__on_zero_shared)(v210);
        std::__shared_weak_count::__release_weak(v210);
        v140 = a1 + 7;
      }
    }
    *(_QWORD *)(*(_QWORD *)(v209 + 40) + 8 * v139) = v192;
    v141 = __dst;
    *(_QWORD *)&__dst[8 * (v138 >> 6)] &= ~(1 << v138);
    *(_QWORD *)&v141[8 * (v139 >> 6)] |= 1 << v139;
    ++v138;
    ++v137;
    if (v138 > v139)
      goto LABEL_232;
  }
LABEL_231:
  v141 = __dst;
  v137 += (~*(_QWORD *)&__dst[(v139 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v139) & 1;
LABEL_232:
  v136 = v236;
  if (v137 && ((*(_QWORD *)&v141[((v137 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v137 - 1)) & 1) != 0)
  {
    LOBYTE(v214) = 0;
  }
  else if (v137 == v236)
  {
    LOBYTE(v214) = 1;
  }
  else
  {
    v214 = (*(_QWORD *)&v141[(v137 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v137) & 1;
  }
  v215 = 0;
  if (v236 <= 1)
    v216 = 1;
  else
    v216 = v236;
  while (2)
  {
    if (v215 < v137)
    {
      if ((v214 & 1) != 0)
      {
        LOBYTE(v214) = ((*(_QWORD *)&__dst[(v215 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v215) & 1) == 0;
        goto LABEL_242;
      }
LABEL_241:
      LOBYTE(v214) = 0;
      goto LABEL_242;
    }
    if ((v214 & 1) == 0)
      goto LABEL_241;
    v214 = (*(_QWORD *)&__dst[(v215 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v215) & 1;
LABEL_242:
    if (v216 != ++v215)
      continue;
    break;
  }
  if ((v214 & 1) == 0)
  {
LABEL_263:
    v15 = v136 == 0;
    v229 = (char *)v246;
    if (!v246)
      goto LABEL_271;
    goto LABEL_264;
  }
  v217 = (uint64_t *)(*v239 + 16 * v238);
  v218 = *v217;
  v219 = (std::__shared_weak_count *)v217[1];
  if (v219)
  {
    v220 = (unint64_t *)&v219->__shared_owners_;
    do
      v221 = __ldxr(v220);
    while (__stxr(v221 + 1, v220));
    do
      v222 = __ldaxr(v220);
    while (__stlxr(v222 - 1, v220));
    if (!v222)
    {
      ((void (*)(std::__shared_weak_count *))v219->__on_zero_shared)(v219);
      std::__shared_weak_count::__release_weak(v219);
    }
  }
  (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v218 + 32))(v218, v137);
  v223 = (uint64_t *)(*v239 + 16 * v238);
  v224 = *v223;
  v225 = (std::__shared_weak_count *)v223[1];
  if (v225)
  {
    v226 = (unint64_t *)&v225->__shared_owners_;
    do
      v227 = __ldxr(v226);
    while (__stxr(v227 + 1, v226));
    do
      v228 = __ldaxr(v226);
    while (__stlxr(v228 - 1, v226));
    if (!v228)
    {
      ((void (*)(std::__shared_weak_count *))v225->__on_zero_shared)(v225);
      std::__shared_weak_count::__release_weak(v225);
    }
  }
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v224 + 16))(v224) == v137;
  v229 = (char *)v246;
  if (v246)
  {
LABEL_264:
    v230 = v247;
    v231 = v229;
    if (v247 != v229)
    {
      v232 = v247;
      do
      {
        v234 = (void *)*((_QWORD *)v232 - 3);
        v232 -= 24;
        v233 = v234;
        if (v234)
        {
          *((_QWORD *)v230 - 2) = v233;
          operator delete(v233);
        }
        v230 = v232;
      }
      while (v232 != v229);
      v231 = v246;
    }
    v247 = v229;
    operator delete(v231);
  }
LABEL_271:
  if (__dst)
    operator delete(__dst);
  return v15;
}

void sub_23996B598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (__p)
    operator delete(__p);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    if (!a20)
      JUMPOUT(0x23996B52CLL);
    JUMPOUT(0x23996B4E8);
  }
  sub_23942A16C((void **)&a20);
  if (a23)
    operator delete(a23);
  _Unwind_Resume(a1);
}

uint64_t sub_23996B628(uint64_t a1, _QWORD *a2, float32x2_t **a3, int a4)
{
  float32x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  char *v19;
  void *v20;
  char *v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _BYTE *v27;
  _DWORD *v28;
  unint64_t v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  double *v40;
  double *v41;
  double *v42;
  unint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _BYTE *v58;
  double *v59;
  unint64_t v60;
  double *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  double *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  float v70;
  double v71;
  uint64_t v72;
  double v73;
  __int128 *v74;
  __int128 *v75;
  __int128 *v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  __int128 *v82;
  __int128 v83;
  uint64_t v84;
  double v85;
  __int128 *v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  __int128 *v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  __int128 *v95;
  __int128 v96;
  __int128 *v97;
  uint64_t v98;
  uint64_t v99;
  __int128 *v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  __int128 *v105;
  __int128 v106;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  __int128 *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  float64x2_t *v118;
  char *v119;
  float32x2_t *v120;
  unint64_t v121;
  uint64_t v122;
  float32x2_t *v123;
  float64x2_t *v124;
  unint64_t v125;
  float32x4_t v126;
  float64x2_t v127;
  float64x2_t v128;
  float *v129;
  unint64_t v130;
  double *v131;
  float v132;
  int v134;
  void *v138;
  char *v139;
  __int128 v140;
  char *v141;
  __int128 v142;
  char *v143;
  __int128 v144;
  char *v145;
  __int128 v146;
  char *v147;
  char *v148;
  unint64_t v149;
  unint64_t v150;
  float64x2_t *v151;
  unint64_t v152;
  float32x2_t v153;
  float32x2_t v154;
  float32x2_t v155;
  float32x2_t v156;
  unint64_t v157;
  double *v158;
  float v159;
  uint64_t v160;
  float32_t v161;
  char *v162;
  float32x4_t *v163;
  unint64_t v164;
  uint64_t v165;
  float64x2_t *v166;
  float32x4_t *v167;
  unint64_t v168;
  float64x2_t v169;
  float64x2_t v170;
  float64x2_t v171;
  float64x2_t v172;
  double *v173;
  unint64_t v174;
  float *v175;
  double v176;
  float v177;
  uint64_t v178;
  uint64_t v179;
  float32x2_t *v181;
  float32x2_t *v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  _QWORD *v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  float32x4_t v195;
  float32x4_t v196;
  void *v197;
  uint64_t v198;
  double *v199;
  void *__p[2];
  char *v201;
  void *v202[2];
  char *v203;
  unsigned int v204;
  unint64_t v205[2];
  __int128 *v206;
  __int128 *v207;
  unint64_t v208;
  uint64_t v209;

  v190 = (_QWORD *)(a1 + 104);
  v5 = a3[1];
  v6 = (char *)v5 - (char *)*a3;
  v7 = v6 >> 2;
  v8 = ((*(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104)) >> 2);
  if (v6 >> 2 != v8)
    return 0;
  v9 = a2[1] - *a2;
  v189 = v9;
  if (v9 != 4 && v9 >> 2 != v7)
    return 0;
  v188 = a2;
  v181 = *a3;
  v182 = a3[1];
  v178 = v6 >> 2;
  v179 = (char *)v5 - (char *)*a3;
  v183 = *(_QWORD *)(a1 + 112) - *(_QWORD *)(a1 + 104);
  sub_239942C1C(v205, v7, v6 >> 2);
  v11 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
  v12 = *v11;
  v13 = (std::__shared_weak_count *)v11[1];
  if (!v13)
    goto LABEL_12;
  p_shared_owners = (unint64_t *)&v13->__shared_owners_;
  do
    v15 = __ldxr(p_shared_owners);
  while (__stxr(v15 + 1, p_shared_owners));
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
    v184 = v183 & 0x3FFFFFFFCLL;
    if ((v183 & 0x3FFFFFFFCLL) != 0)
      goto LABEL_13;
  }
  else
  {
LABEL_12:
    v184 = v183 & 0x3FFFFFFFCLL;
    if ((v183 & 0x3FFFFFFFCLL) != 0)
    {
LABEL_13:
      v17 = 0;
      v187 = v8;
      v193 = v12;
      while (1)
      {
        v204 = v17;
        sub_239962480((uint64_t)v202, v190, &v204);
        v18 = sub_2399624A8((uint64_t *)v202);
        v19 = 0;
        __p[0] = 0;
        __p[1] = 0;
        v201 = 0;
        while (v18 != -1)
        {
          if (v19 < v201)
          {
            *(_DWORD *)v19 = v18;
            v20 = v19 + 4;
            goto LABEL_17;
          }
          v21 = (char *)__p[0];
          v22 = v19 - (char *)__p[0];
          v23 = (v19 - (char *)__p[0]) >> 2;
          v24 = v23 + 1;
          if ((unint64_t)(v23 + 1) >> 62)
            sub_2394189F8();
          v25 = v201 - (char *)__p[0];
          if ((v201 - (char *)__p[0]) >> 1 > v24)
            v24 = v25 >> 1;
          if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFFCLL)
            v26 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v26 = v24;
          if (v26)
          {
            if (v26 >> 62)
              sub_239418A80();
            v27 = operator new(4 * v26);
            v28 = &v27[4 * v23];
            *v28 = v18;
            v20 = v28 + 1;
            if (v19 == v21)
            {
LABEL_35:
              __p[0] = v28;
              __p[1] = v20;
              v201 = &v27[4 * v26];
              if (!v19)
                goto LABEL_17;
LABEL_36:
              operator delete(v19);
              goto LABEL_17;
            }
          }
          else
          {
            v27 = 0;
            v28 = (_DWORD *)(4 * v23);
            *(_DWORD *)(4 * v23) = v18;
            v20 = (void *)(4 * v23 + 4);
            if (v19 == v21)
              goto LABEL_35;
          }
          v29 = v19 - 4 - v21;
          if (v29 < 0xBC)
          {
            v30 = v19;
            goto LABEL_31;
          }
          if (&v27[v22 - 4 - (v29 & 0xFFFFFFFFFFFFFFFCLL)] > &v27[v22 - 4])
          {
            v30 = v19;
            do
            {
LABEL_31:
              v31 = *((_DWORD *)v30 - 1);
              v30 -= 4;
              *--v28 = v31;
            }
            while (v30 != v21);
            goto LABEL_32;
          }
          if (&v19[-(v29 & 0xFFFFFFFFFFFFFFFCLL) - 4] > v19 - 4)
          {
            v30 = v19;
            goto LABEL_31;
          }
          if ((unint64_t)(v19 - v27 - v22) < 0x20)
          {
            v30 = v19;
            goto LABEL_31;
          }
          v32 = (v29 >> 2) + 1;
          v33 = 4 * (v32 & 0x7FFFFFFFFFFFFFF8);
          v30 = &v19[-v33];
          v28 = (_DWORD *)((char *)v28 - v33);
          v34 = &v27[4 * v23 - 16];
          v35 = v19 - 16;
          v36 = v32 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v37 = *(_OWORD *)v35;
            *(v34 - 1) = *((_OWORD *)v35 - 1);
            *v34 = v37;
            v34 -= 2;
            v35 -= 32;
            v36 -= 8;
          }
          while (v36);
          if (v32 != (v32 & 0x7FFFFFFFFFFFFFF8))
            goto LABEL_31;
LABEL_32:
          v19 = (char *)__p[0];
          __p[0] = v28;
          __p[1] = v20;
          v201 = &v27[4 * v26];
          if (v19)
            goto LABEL_36;
LABEL_17:
          __p[1] = v20;
          v18 = sub_2399624A8((uint64_t *)v202);
          v19 = (char *)v20;
        }
        v38 = (unint64_t)(v19 - (char *)__p[0]) >> 2;
        v197 = 0;
        v198 = 0;
        v199 = 0;
        v194 = v38;
        v39 = (v38 - 1);
        v191 = v38;
        v192 = v17;
        if ((int)v38 >= 1)
        {
          v40 = 0;
          v41 = 0;
          v42 = 0;
          v43 = 0;
          v44 = 0.0;
          v45 = v193;
          while (1)
          {
            v47 = v43 - 1;
            if (!v43)
              v47 = v39;
            v48 = *((unsigned int *)__p[0] + v47);
            v49 = v43 + 1;
            v50 = (v43 + 1);
            if (v43 >= v39)
              v50 = 0;
            v51 = *((unsigned int *)__p[0] + v50);
            v52 = *(_QWORD *)(v45 + 40);
            v196 = *(float32x4_t *)(v52 + 16 * v204);
            v195 = *(float32x4_t *)(v52 + 16 * *((unsigned int *)__p[0] + v43));
            v53 = sub_23995D928(&v196, (float32x4_t *)(v52 + 16 * v48), &v195);
            v54 = v53 + sub_23995D928(&v196, (float32x4_t *)(*(_QWORD *)(v45 + 40) + 16 * v51), &v195);
            if (v42 >= v41)
              break;
            *v42 = v54;
            v46 = (uint64_t)(v42 + 1);
LABEL_50:
            v198 = v46;
            v44 = v44 + v40[v43];
            v42 = (double *)v46;
            ++v43;
            if (v49 == v194)
              goto LABEL_82;
          }
          v55 = v42 - v40;
          v56 = v55 + 1;
          if ((unint64_t)(v55 + 1) >> 61)
            sub_2394189F8();
          if (((char *)v41 - (char *)v40) >> 2 > v56)
            v56 = ((char *)v41 - (char *)v40) >> 2;
          if ((unint64_t)((char *)v41 - (char *)v40) >= 0x7FFFFFFFFFFFFFF8)
            v57 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v57 = v56;
          if (v57)
          {
            if (v57 >> 61)
              sub_239418A80();
            v58 = operator new(8 * v57);
            v59 = (double *)&v58[8 * v55];
            *v59 = v54;
            v46 = (uint64_t)(v59 + 1);
            if (v42 != v40)
            {
LABEL_65:
              v60 = (char *)(v42 - 1) - (char *)v40;
              if (v60 < 0x168
                || &v58[(char *)v42 - (char *)v40 - 8 - (v60 & 0xFFFFFFFFFFFFFFF8)] > &v58[(char *)v42
                                                                                           - (char *)v40
                                                                                           - 8]
                || (double *)((char *)v42 - (v60 & 0xFFFFFFFFFFFFFFF8) - 8) > v42 - 1
                || (unint64_t)((char *)v40 - v58) < 0x20)
              {
                v61 = v42;
              }
              else
              {
                v63 = (v60 >> 3) + 1;
                v64 = 8 * (v63 & 0x3FFFFFFFFFFFFFFCLL);
                v61 = &v42[v64 / 0xFFFFFFFFFFFFFFF8];
                v59 = (double *)((char *)v59 - v64);
                v65 = &v58[8 * v55 - 16];
                v66 = v42 - 2;
                v67 = v63 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  v68 = *(_OWORD *)v66;
                  *(v65 - 1) = *((_OWORD *)v66 - 1);
                  *v65 = v68;
                  v65 -= 2;
                  v66 -= 4;
                  v67 -= 4;
                }
                while (v67);
                if (v63 == (v63 & 0x3FFFFFFFFFFFFFFCLL))
                {
LABEL_68:
                  v41 = (double *)&v58[8 * v57];
                  v197 = v59;
                  v198 = v46;
                  v199 = v41;
                  if (!v40)
                  {
LABEL_70:
                    v40 = v59;
                    v45 = v193;
                    goto LABEL_50;
                  }
LABEL_69:
                  operator delete(v40);
                  goto LABEL_70;
                }
              }
              do
              {
                v62 = *((_QWORD *)v61-- - 1);
                *((_QWORD *)v59-- - 1) = v62;
              }
              while (v61 != v40);
              goto LABEL_68;
            }
          }
          else
          {
            v58 = 0;
            v59 = (double *)(8 * v55);
            *(double *)(8 * v55) = v54;
            v46 = 8 * v55 + 8;
            if (v42 != v40)
              goto LABEL_65;
          }
          v41 = (double *)&v58[8 * v57];
          v197 = v59;
          v198 = v46;
          v199 = v41;
          if (!v40)
            goto LABEL_70;
          goto LABEL_69;
        }
        v44 = 0.0;
LABEL_82:
        v69 = v189 == 4 ? 0 : v192;
        v70 = *(float *)(*v188 + 4 * v69);
        v71 = v70;
        v72 = v204;
        v73 = v70 + 1.0;
        v74 = v207;
        if ((unint64_t)v207 >= v208)
        {
          v76 = v206;
          v77 = 0xAAAAAAAAAAAAAAABLL * (((char *)v207 - (char *)v206) >> 3);
          v78 = v77 + 1;
          if (v77 + 1 > 0xAAAAAAAAAAAAAAALL)
            sub_2394189F8();
          if (0x5555555555555556 * ((uint64_t)(v208 - (_QWORD)v206) >> 3) > v78)
            v78 = 0x5555555555555556 * ((uint64_t)(v208 - (_QWORD)v206) >> 3);
          v79 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v208 - (_QWORD)v206) >> 3) >= 0x555555555555555
              ? 0xAAAAAAAAAAAAAAALL
              : v78;
          if (v79)
          {
            if (v79 > 0xAAAAAAAAAAAAAAALL)
              sub_239418A80();
            v80 = (char *)operator new(24 * v79);
          }
          else
          {
            v80 = 0;
          }
          v81 = &v80[24 * v77];
          *(_QWORD *)v81 = v72;
          *((_QWORD *)v81 + 1) = v72;
          *((double *)v81 + 2) = v73;
          v82 = (__int128 *)v81;
          if (v74 != v76)
          {
            do
            {
              v83 = *(__int128 *)((char *)v74 - 24);
              *((_QWORD *)v82 - 1) = *((_QWORD *)v74 - 1);
              *(__int128 *)((char *)v82 - 24) = v83;
              v82 = (__int128 *)((char *)v82 - 24);
              v74 = (__int128 *)((char *)v74 - 24);
            }
            while (v74 != v76);
            v74 = v206;
          }
          v75 = (__int128 *)(v81 + 24);
          v206 = v82;
          v207 = (__int128 *)(v81 + 24);
          v208 = (unint64_t)&v80[24 * v79];
          if (v74)
            operator delete(v74);
        }
        else
        {
          *(_QWORD *)v207 = v204;
          *((_QWORD *)v74 + 1) = v72;
          v75 = (__int128 *)((char *)v74 + 24);
          *((double *)v74 + 2) = v73;
        }
        v207 = v75;
        if (v191 >= 1 && v70 != 0.0)
          break;
LABEL_144:
        if (v197)
          operator delete(v197);
        v8 = v187;
        if (__p[0])
          operator delete(__p[0]);
        v17 = v192 + 1;
        if (v192 + 1 == v187)
          goto LABEL_150;
      }
      v84 = 0;
      if (v44 <= 0.0)
      {
        v85 = -1.0 / (double)v191 * v71;
        while (1)
        {
          v98 = v204;
          v99 = *((unsigned int *)__p[0] + v84);
          if ((unint64_t)v75 < v208)
          {
            *(_QWORD *)v75 = v204;
            *((_QWORD *)v75 + 1) = v99;
            v97 = (__int128 *)((char *)v75 + 24);
            *((double *)v75 + 2) = v85;
          }
          else
          {
            v100 = v206;
            v101 = 0xAAAAAAAAAAAAAAABLL * (((char *)v75 - (char *)v206) >> 3);
            v102 = v101 + 1;
            if (v101 + 1 > 0xAAAAAAAAAAAAAAALL)
              goto LABEL_212;
            if (0x5555555555555556 * ((uint64_t)(v208 - (_QWORD)v206) >> 3) > v102)
              v102 = 0x5555555555555556 * ((uint64_t)(v208 - (_QWORD)v206) >> 3);
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v208 - (_QWORD)v206) >> 3) >= 0x555555555555555)
              v103 = 0xAAAAAAAAAAAAAAALL;
            else
              v103 = v102;
            if (v103)
            {
              if (v103 > 0xAAAAAAAAAAAAAAALL)
                goto LABEL_213;
              v104 = (char *)operator new(24 * v103);
            }
            else
            {
              v104 = 0;
            }
            v105 = (__int128 *)&v104[24 * v101];
            *(_QWORD *)v105 = v98;
            *((_QWORD *)v105 + 1) = v99;
            *((double *)v105 + 2) = v85;
            v97 = (__int128 *)((char *)v105 + 24);
            if (v75 == v100)
            {
              v206 = (__int128 *)&v104[24 * v101];
              v207 = (__int128 *)((char *)v105 + 24);
              v208 = (unint64_t)&v104[24 * v103];
            }
            else
            {
              do
              {
                v106 = *(__int128 *)((char *)v75 - 24);
                *((_QWORD *)v105 - 1) = *((_QWORD *)v75 - 1);
                *(__int128 *)((char *)v105 - 24) = v106;
                v105 = (__int128 *)((char *)v105 - 24);
                v75 = (__int128 *)((char *)v75 - 24);
              }
              while (v75 != v100);
              v75 = v206;
              v206 = v105;
              v207 = v97;
              v208 = (unint64_t)&v104[24 * v103];
              if (!v75)
                goto LABEL_126;
            }
            operator delete(v75);
          }
LABEL_126:
          v207 = v97;
          ++v84;
          v75 = v97;
          if (v84 == v194)
            goto LABEL_144;
        }
      }
      while (1)
      {
        v87 = *((unsigned int *)__p[0] + v84);
        v88 = v204;
        v89 = -*((double *)v197 + v84) / v44 * v71;
        if ((unint64_t)v75 < v208)
        {
          *(_QWORD *)v75 = v204;
          *((_QWORD *)v75 + 1) = v87;
          v86 = (__int128 *)((char *)v75 + 24);
          *((double *)v75 + 2) = v89;
        }
        else
        {
          v90 = v206;
          v91 = 0xAAAAAAAAAAAAAAABLL * (((char *)v75 - (char *)v206) >> 3);
          v92 = v91 + 1;
          if (v91 + 1 > 0xAAAAAAAAAAAAAAALL)
LABEL_212:
            sub_2394189F8();
          if (0x5555555555555556 * ((uint64_t)(v208 - (_QWORD)v206) >> 3) > v92)
            v92 = 0x5555555555555556 * ((uint64_t)(v208 - (_QWORD)v206) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v208 - (_QWORD)v206) >> 3) >= 0x555555555555555)
            v93 = 0xAAAAAAAAAAAAAAALL;
          else
            v93 = v92;
          if (v93)
          {
            if (v93 > 0xAAAAAAAAAAAAAAALL)
LABEL_213:
              sub_239418A80();
            v94 = (char *)operator new(24 * v93);
          }
          else
          {
            v94 = 0;
          }
          v95 = (__int128 *)&v94[24 * v91];
          *(_QWORD *)v95 = v88;
          *((_QWORD *)v95 + 1) = v87;
          *((double *)v95 + 2) = v89;
          v86 = (__int128 *)((char *)v95 + 24);
          if (v75 == v90)
          {
            v206 = (__int128 *)&v94[24 * v91];
            v207 = (__int128 *)((char *)v95 + 24);
            v208 = (unint64_t)&v94[24 * v93];
          }
          else
          {
            do
            {
              v96 = *(__int128 *)((char *)v75 - 24);
              *((_QWORD *)v95 - 1) = *((_QWORD *)v75 - 1);
              *(__int128 *)((char *)v95 - 24) = v96;
              v95 = (__int128 *)((char *)v95 - 24);
              v75 = (__int128 *)((char *)v75 - 24);
            }
            while (v75 != v90);
            v75 = v206;
            v206 = v95;
            v207 = v86;
            v208 = (unint64_t)&v94[24 * v93];
            if (!v75)
              goto LABEL_107;
          }
          operator delete(v75);
        }
LABEL_107:
        v207 = v86;
        ++v84;
        v75 = v86;
        if (v84 == v194)
          goto LABEL_144;
      }
    }
  }
LABEL_150:
  v108 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((char *)v207 - (char *)v206) >> 3));
  v202[0] = sub_239942E84;
  if (v207 == v206)
    v109 = 0;
  else
    v109 = v108;
  sub_239942EBC((uint64_t)v206, v207, (unsigned int (**)(__int128 *, __int128 *))v202, v109, 1);
  if (v205[0] != -1)
  {
    v110 = 0;
    v111 = v209;
    do
      *(_QWORD *)(v111 + 8 * v110++) = 0;
    while (v110 < v205[0] + 1);
  }
  v112 = v206;
  if (v207 != v206)
  {
    v113 = 0;
    v114 = ((char *)v207 - (char *)v206) / 24;
    v115 = v209;
    if (v114 <= 1)
      v114 = 1;
    do
    {
      ++v113;
      v116 = *(_QWORD *)v112;
      v112 = (__int128 *)((char *)v112 + 24);
      *(_QWORD *)(v115 + 8 * v116 + 8) = v113;
    }
    while (v114 != v113);
  }
  v202[0] = 0;
  v202[1] = 0;
  v203 = 0;
  if (v182 == v181)
  {
    v119 = 0;
    v118 = 0;
    __p[0] = 0;
    __p[1] = 0;
    v201 = 0;
    if (!v184)
      goto LABEL_172;
  }
  else
  {
    v117 = (char *)operator new(2 * v179);
    v202[0] = v117;
    v203 = &v117[8 * v178];
    bzero(v117, 2 * v179);
    v202[1] = &v117[2 * v179];
    v118 = (float64x2_t *)operator new(2 * v179);
    __p[0] = v118;
    v201 = (char *)&v118->f64[v178];
    bzero(v118, 2 * v179);
    v119 = (char *)v118 + 2 * v179;
    __p[1] = v119;
    if (!v184)
      goto LABEL_172;
  }
  v120 = *a3;
  if (v8 >= 8)
  {
    v122 = (v183 >> 2) & 7;
    v121 = v8 - v122;
    v123 = v120 + 2;
    v124 = v118 + 2;
    v125 = v8 - v122;
    do
    {
      v126 = *(float32x4_t *)v123[-2].f32;
      v127 = vcvtq_f64_f32(*v123);
      v128 = vcvt_hight_f64_f32(*(float32x4_t *)v123->f32);
      v124[-2] = vcvtq_f64_f32(*(float32x2_t *)v126.f32);
      v124[-1] = vcvt_hight_f64_f32(v126);
      *v124 = v127;
      v124[1] = v128;
      v124 += 4;
      v123 += 4;
      v125 -= 8;
    }
    while (v125);
    if (!v122)
      goto LABEL_172;
  }
  else
  {
    v121 = 0;
  }
  v129 = (float *)v120 + v121;
  v130 = v121 - v8;
  v131 = &v118->f64[v121];
  do
  {
    v132 = *v129++;
    *v131++ = v132;
    _CF = __CFADD__(v130++, 1);
  }
  while (!_CF);
LABEL_172:
  v134 = 0;
  __asm { FMOV            V10.2S, #1.0 }
  do
  {
    v138 = __p[0];
    *(_OWORD *)__p = *(_OWORD *)v202;
    v202[0] = v138;
    v202[1] = v119;
    v139 = v203;
    v203 = v201;
    v201 = v139;
    sub_239941EA8(v205, (uint64_t *)v202, (float64x2_t **)__p, 0x14u);
    v140 = *(_OWORD *)v202;
    *(_OWORD *)v202 = *(_OWORD *)__p;
    *(_OWORD *)__p = v140;
    v141 = v203;
    v203 = v201;
    v201 = v141;
    sub_239941EA8(v205, (uint64_t *)v202, (float64x2_t **)__p, 0x14u);
    v142 = *(_OWORD *)v202;
    *(_OWORD *)v202 = *(_OWORD *)__p;
    *(_OWORD *)__p = v142;
    v143 = v203;
    v203 = v201;
    v201 = v143;
    sub_239941EA8(v205, (uint64_t *)v202, (float64x2_t **)__p, 0x14u);
    v144 = *(_OWORD *)v202;
    *(_OWORD *)v202 = *(_OWORD *)__p;
    *(_OWORD *)__p = v144;
    v145 = v203;
    v203 = v201;
    v201 = v145;
    sub_239941EA8(v205, (uint64_t *)v202, (float64x2_t **)__p, 0x14u);
    v146 = *(_OWORD *)v202;
    *(_OWORD *)v202 = *(_OWORD *)__p;
    *(_OWORD *)__p = v146;
    v147 = v203;
    v203 = v201;
    v201 = v147;
    sub_239941EA8(v205, (uint64_t *)v202, (float64x2_t **)__p, 0x14u);
    v148 = (char *)__p[0];
    v119 = (char *)__p[1];
    if (__p[1] == __p[0])
      goto LABEL_173;
    v149 = ((char *)__p[1] - (char *)__p[0]) >> 3;
    if (v149 <= 1)
      v149 = 1;
    if (v149 >= 4)
    {
      v150 = v149 & 0xFFFFFFFFFFFFFFFCLL;
      v151 = (float64x2_t *)((char *)__p[0] + 16);
      v152 = v149 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        v153 = vcvt_f32_f64(v151[-1]);
        v154 = vcvt_f32_f64(*v151);
        v155 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v153, _D10), (int8x8_t)_D10, (int8x8_t)v153);
        v156 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v154, _D10), (int8x8_t)_D10, (int8x8_t)v154);
        v151[-1] = vcvtq_f64_f32((float32x2_t)vbic_s8((int8x8_t)v155, (int8x8_t)vcltz_f32(v155)));
        *v151 = vcvtq_f64_f32((float32x2_t)vbic_s8((int8x8_t)v156, (int8x8_t)vcltz_f32(v156)));
        v151 += 2;
        v152 -= 4;
      }
      while (v152);
      if (v149 == v150)
        goto LABEL_173;
    }
    else
    {
      v150 = 0;
    }
    v157 = v149 - v150;
    v158 = (double *)&v148[8 * v150];
    do
    {
      v159 = *v158;
      if (v159 > 1.0)
        v159 = 1.0;
      if (v159 < 0.0)
        v159 = 0.0;
      *v158++ = v159;
      --v157;
    }
    while (v157);
LABEL_173:
    ++v134;
  }
  while (v134 != 5);
  if (!v184)
    goto LABEL_203;
  if (!a4)
  {
    v162 = (char *)__p[0];
    v163 = (float32x4_t *)*a3;
    if (v8 >= 8)
    {
      v165 = (v183 >> 2) & 7;
      v164 = v8 - v165;
      v166 = (float64x2_t *)((char *)__p[0] + 32);
      v167 = v163 + 1;
      v168 = v8 - v165;
      do
      {
        v170 = v166[-2];
        v169 = v166[-1];
        v172 = *v166;
        v171 = v166[1];
        v166 += 4;
        v167[-1] = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v170), v169);
        *v167 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v172), v171);
        v167 += 2;
        v168 -= 8;
      }
      while (v168);
      if (!v165)
        goto LABEL_203;
    }
    else
    {
      v164 = 0;
    }
    v173 = (double *)&v162[8 * v164];
    v174 = v164 - v8;
    v175 = &v163->f32[v164];
    do
    {
      v176 = *v173++;
      v177 = v176;
      *v175++ = v177;
      _CF = __CFADD__(v174++, 1);
    }
    while (!_CF);
    goto LABEL_203;
  }
  v160 = 0;
  do
  {
    LODWORD(v197) = v160;
    if (!sub_2399423C8(a1, (unsigned int *)&v197))
    {
      v161 = *((double *)__p[0] + v160);
      (*a3)->f32[v160] = v161;
    }
    ++v160;
  }
  while (v8 != v160);
LABEL_203:
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v202[0])
  {
    v202[1] = v202[0];
    operator delete(v202[0]);
  }
  sub_239942D74(v205);
  return 1;
}

void sub_23996C480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38)
{
  uint64_t v38;

  if (__p)
    operator delete(__p);
  sub_239942D74((_QWORD *)(v38 - 240));
  _Unwind_Resume(a1);
}

uint64_t sub_23996C564(uint64_t a1, uint64_t a2)
{
  float32x2_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  float32x4_t *v8;
  float32x4_t v9;
  unint64_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  unint64_t v23;
  float *v24;
  float v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v33;
  char *v34;
  char *v35;

  v4 = *(float32x2_t **)a2;
  v5 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v5)
  {
    v6 = v5 >> 2;
    if (v6 <= 1)
      v6 = 1;
    if (v6 >= 8)
    {
      v7 = v6 & 0xFFFFFFFFFFFFFFF8;
      v8 = (float32x4_t *)&v4[2];
      v9 = (float32x4_t)vdupq_n_s32(0xBCA3D70A);
      __asm
      {
        FMOV            V1.4S, #0.75
        FMOV            V2.4S, #1.0
      }
      v16 = v6 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        v17 = vaddq_f32(v8[-1], v9);
        v18 = vaddq_f32(*v8, v9);
        v19 = (float32x4_t)vbicq_s8((int8x16_t)vmulq_f32(v17, _Q1), (int8x16_t)vcltzq_f32(v17));
        v20 = (float32x4_t)vbicq_s8((int8x16_t)vmulq_f32(v18, _Q1), (int8x16_t)vcltzq_f32(v18));
        v21 = (float32x4_t)vbicq_s8((int8x16_t)v19, (int8x16_t)vcltzq_f32(v19));
        v22 = (float32x4_t)vbicq_s8((int8x16_t)v20, (int8x16_t)vcltzq_f32(v20));
        v8[-1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v21, _Q2), (int8x16_t)_Q2, (int8x16_t)v21);
        *(int8x16_t *)v8 = vbslq_s8((int8x16_t)vcgtq_f32(v22, _Q2), (int8x16_t)_Q2, (int8x16_t)v22);
        v8 += 2;
        v16 -= 8;
      }
      while (v16);
      if (v6 == v7)
        goto LABEL_18;
    }
    else
    {
      v7 = 0;
    }
    v23 = v6 - v7;
    v24 = (float *)v4 + v7;
    do
    {
      v25 = *v24 + -0.02;
      if (v25 >= 0.0)
        v26 = v25 * 0.75;
      else
        v26 = 0.0;
      if (v26 < 0.0)
        v26 = 0.0;
      if (v26 > 1.0)
        v26 = 1.0;
      *v24++ = v26;
      --v23;
    }
    while (v23);
  }
LABEL_18:
  v28 = *(_QWORD *)(a1 + 104);
  v27 = *(_QWORD *)(a1 + 112);
  v34 = 0;
  v35 = 0;
  v33 = 0;
  v29 = v27 - v28;
  if (v27 == v28)
  {
    v30 = 0;
  }
  else
  {
    if (v29 < 0)
      sub_2394189F8();
    v30 = (char *)operator new(v27 - v28);
    v33 = v30;
    v35 = &v30[4 * (v29 >> 2)];
    memset_pattern16(v30, &unk_239F03360, v29 & 0xFFFFFFFFFFFFFFFCLL);
    v34 = v35;
  }
  v31 = sub_23996B628(a1, &v33, (float32x2_t **)a2, 0);
  if (v30)
    operator delete(v30);
  return v31;
}

void sub_23996C714(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  void *v11;

  if (v11)
    operator delete(v11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23996C740(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _DWORD *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  float *v19;
  float v20;
  uint64_t v21;
  double v22;
  unsigned int v23;
  uint64_t v24;
  float64x2_t v25;
  float32x4_t *v26;
  uint64_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float *v30;
  uint64_t v31;
  float v32;
  unsigned int v34;
  void *__p;
  char *v36;
  char *v37;

  v12 = operator new(0xCuLL);
  v36 = (char *)(v12 + 3);
  v37 = (char *)(v12 + 3);
  *(_QWORD *)v12 = -1;
  v12[2] = -1;
  __p = v12;
  v13 = *(_DWORD *)(a3 + 8);
  if (!v13 || (v14 = *(_DWORD *)(a3 + 4)) == 0)
  {
LABEL_21:
    v36 = (char *)v12;
    operator delete(v12);
    return 1;
  }
  v15 = 0;
  v16 = *(_DWORD *)(a3 + 4);
  do
  {
    if (v16)
    {
      v17 = 0;
      while (1)
      {
        if (!*(_BYTE *)(*(_QWORD *)(a3 + 16) + *(_DWORD *)(a3 + 12) * (v17 + v16 * v15)))
          goto LABEL_9;
        v34 = *(_DWORD *)(*(_QWORD *)(a5 + 16) + 4 * (v17 + *(_DWORD *)(a5 + 4) * v15) * *(_DWORD *)(a5 + 12));
        sub_23996362C(a1, &v34, (uint64_t)&__p);
        v12 = __p;
        v18 = *(unsigned int *)(a6 + 12);
        if ((_DWORD)v18)
        {
          v19 = (float *)(*(_QWORD *)(a4 + 16) + 16 * (v17 + *(_DWORD *)(a4 + 4) * v15) * *(_DWORD *)(a4 + 12));
          v20 = v19[1] * *(float *)(*a2 + 4 * *((unsigned int *)__p + 1))
              + *(float *)(*a2 + 4 * *(unsigned int *)__p) * *v19
              + *(float *)(*a2 + 4 * *((unsigned int *)__p + 2)) * v19[2];
          v21 = *(_QWORD *)(a6 + 16);
          v22 = 1.0 - v20;
          v23 = v17 + v15 * *(_DWORD *)(a6 + 4);
          if (v18 >= 8)
          {
            v24 = v18 & 0xFFFFFFF8;
            v25 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v22, 0);
            v26 = (float32x4_t *)(v21 + 4 * v18 * v23 + 16);
            v27 = v24;
            do
            {
              v28 = vmulq_n_f32(v26[-1], v20);
              v29 = vmulq_n_f32(*v26, v20);
              v26[-1] = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vaddq_f64(v25, vcvtq_f64_f32(*(float32x2_t *)v28.f32))), vaddq_f64(v25, vcvt_hight_f64_f32(v28)));
              *v26 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vaddq_f64(v25, vcvtq_f64_f32(*(float32x2_t *)v29.f32))), vaddq_f64(v25, vcvt_hight_f64_f32(v29)));
              v26 += 2;
              v27 -= 8;
            }
            while (v27);
            if (v24 == v18)
              goto LABEL_8;
          }
          else
          {
            v24 = 0;
          }
          v30 = (float *)(v21 + 4 * v24 + 4 * v18 * v23);
          v31 = v18 - v24;
          do
          {
            v32 = v22 + (float)(*v30 * v20);
            *v30++ = v32;
            --v31;
          }
          while (v31);
        }
LABEL_8:
        v14 = *(_DWORD *)(a3 + 4);
LABEL_9:
        ++v17;
        v16 = v14;
        if (v17 >= v14)
        {
          v13 = *(_DWORD *)(a3 + 8);
          v16 = v14;
          break;
        }
      }
    }
    ++v15;
  }
  while (v15 < v13);
  if (v12)
    goto LABEL_21;
  return 1;
}

void sub_23996C994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_23996C9B0(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t *a6, uint64_t a7, int a8)
{
  int v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  int v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  void *__p[2];
  char v71;
  id v72;
  int v73;

  v15 = a5;
  v16 = (void *)MEMORY[0x23B83EC40]();
  sub_23993D738(a3);
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = *(id *)a1;
  *(_QWORD *)a1 = v17;

  v19 = *(id *)a1;
  v72 = 0;
  sub_2399FA2BC(v19, (uint64_t)&v72, a6, a8);
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = v72;
  v22 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v20;

  if (!v21)
  {
    sub_23993D760(a3);
    v26 = objc_claimAutoreleasedReturnValue();
    v27 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v26;

    sub_23993D77C(a3);
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v28;

    v30 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", 4 * a2, 0);
    v31 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = v30;

    v32 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", 4 * a2, 0);
    v33 = *(void **)(a1 + 80);
    *(_QWORD *)(a1 + 80) = v32;

    v34 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", 12 * a2, 0);
    v35 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v34;

    v36 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", 12 * a2, 0);
    v37 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v36;

    v38 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", 4 * a2, 0);
    v39 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v38;

    v40 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", 32 * a2, 32);
    v41 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v40;

    v42 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", 16 * a2, 32);
    v43 = *(void **)(a1 + 64);
    *(_QWORD *)(a1 + 64) = v42;

    v44 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", 4 * a2, 32);
    v45 = *(void **)(a1 + 88);
    *(_QWORD *)(a1 + 88) = v44;

    v46 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", 4 * a2, 32);
    v47 = *(void **)(a1 + 96);
    *(_QWORD *)(a1 + 96) = v46;

    if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*(int64x2_t *)(a1 + 32)), (int32x4_t)vceqzq_s64(*(int64x2_t *)(a1 + 48))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*(int64x2_t *)(a1 + 64)), (int32x4_t)vceqzq_s64(*(int64x2_t *)(a1 + 80)))))) & 1) != 0|| !*(_QWORD *)(a1 + 96))
    {
      if (v15)
        *(_DWORD *)(a4 + 384) = 2;
      v63 = *(_QWORD *)(a7 + 24);
      if (v63)
      {
        v71 = 0;
        LOBYTE(__p[0]) = 0;
        v73 = 2;
        (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v63 + 48))(v63, &v73, __p);
        if (v71 < 0)
          operator delete(__p[0]);
      }
      goto LABEL_8;
    }
    v48 = objc_alloc_init(MEMORY[0x24BDDD550]);
    objc_msgSend(v48, "setThreadGroupSizeIsMultipleOfThreadExecutionWidth:", 1);
    v49 = (void *)objc_msgSend(*(id *)(a1 + 8), "newFunctionWithName:", CFSTR("szPPfSnwed"));
    objc_msgSend(v48, "setComputeFunction:", v49);

    v50 = *(id *)a1;
    v69 = 0;
    v51 = objc_msgSend(v50, "newComputePipelineStateWithDescriptor:options:reflection:error:", v48, 0, 0, &v69);
    v52 = v69;
    v53 = *(void **)(a1 + 104);
    *(_QWORD *)(a1 + 104) = v51;

    if (*(_QWORD *)(a1 + 104))
    {
      v54 = (void *)objc_msgSend(*(id *)(a1 + 8), "newFunctionWithName:", CFSTR("EDhdscza3Z"));
      objc_msgSend(v48, "setComputeFunction:", v54);

      v55 = *(id *)a1;
      v68 = v52;
      v56 = objc_msgSend(v55, "newComputePipelineStateWithDescriptor:options:reflection:error:", v48, 0, 0, &v68);
      v57 = v68;

      v58 = *(void **)(a1 + 112);
      *(_QWORD *)(a1 + 112) = v56;

      if (!*(_QWORD *)(a1 + 112))
      {
        if (v15)
          *(_DWORD *)(a4 + 384) = 5;
        v65 = *(_QWORD *)(a7 + 24);
        if (v65)
        {
          v71 = 0;
          LOBYTE(__p[0]) = 0;
          v73 = 5;
          (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v65 + 48))(v65, &v73, __p);
          if (v71 < 0)
            operator delete(__p[0]);
        }
        v24 = 1;
        v52 = v57;
        goto LABEL_38;
      }
      v59 = (void *)objc_msgSend(*(id *)(a1 + 8), "newFunctionWithName:", CFSTR("kKPMS8MNt0"));
      objc_msgSend(v48, "setComputeFunction:", v59);

      v60 = *(id *)a1;
      v67 = v57;
      v61 = objc_msgSend(v60, "newComputePipelineStateWithDescriptor:options:reflection:error:", v48, 0, 0, &v67);
      v52 = v67;

      v62 = *(void **)(a1 + 120);
      *(_QWORD *)(a1 + 120) = v61;

      if (*(_QWORD *)(a1 + 120))
      {
        v24 = 0;
LABEL_38:

        goto LABEL_9;
      }
      if (v15)
        *(_DWORD *)(a4 + 384) = 5;
      v66 = *(_QWORD *)(a7 + 24);
      if (!v66)
      {
LABEL_37:
        v24 = 1;
        goto LABEL_38;
      }
      v71 = 0;
      LOBYTE(__p[0]) = 0;
      v73 = 5;
      (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v66 + 48))(v66, &v73, __p);
    }
    else
    {
      if (v15)
        *(_DWORD *)(a4 + 384) = 5;
      v64 = *(_QWORD *)(a7 + 24);
      if (!v64)
        goto LABEL_37;
      v71 = 0;
      LOBYTE(__p[0]) = 0;
      v73 = 5;
      (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v64 + 48))(v64, &v73, __p);
    }
    if (v71 < 0)
      operator delete(__p[0]);
    goto LABEL_37;
  }
  if (v15)
    *(_DWORD *)(a4 + 384) = 5;
  v23 = *(_QWORD *)(a7 + 24);
  if (v23)
  {
    v71 = 0;
    LOBYTE(__p[0]) = 0;
    v73 = 5;
    (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v23 + 48))(v23, &v73, __p);
    if (v71 < 0)
      operator delete(__p[0]);
  }

LABEL_8:
  v24 = 1;
LABEL_9:
  objc_autoreleasePoolPop(v16);
  return v24 == 0;
}

void sub_23996CEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  void *v18;

  if (a17 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

uint64_t sub_23996CF8C(uint64_t a1, unsigned int a2, _QWORD *a3, float a4, float a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  float *v17;
  uint64_t v18;
  int v19;
  float v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _DWORD *v29;
  void *v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  void *v34;
  int v35;
  uint64_t v36;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *__p[2];
  char v45;
  unint64_t v46;
  int64x2_t v47;
  unint64_t v48;
  int64x2_t v49;
  unint64_t v50;
  int64x2_t v51;
  unint64_t v52;
  int64x2_t v53;
  int v54;
  unint64_t v55;
  int64x2_t v56;
  uint64_t v57;
  int64x2_t v58;
  float v59;
  float v60;
  _DWORD v61[3];

  v59 = a4;
  v60 = a5;
  if (((a3[1] - *a3) >> 4) >= 0xFF)
    v14 = 255;
  else
    v14 = (a3[1] - *a3) >> 4;
  v15 = MEMORY[0x23B83EC40]();
  v42 = (void *)objc_msgSend(*(id *)a1, "newCommandQueue");
  v16 = objc_msgSend(*(id *)(a1 + 48), "contents");
  if (a2)
  {
    v17 = (float *)v16;
    v18 = a2;
    do
    {
      v19 = rand();
      v20 = (float)((float)((float)v19 * 4.6566e-10) + (float)((float)v19 * 4.6566e-10)) * 3.14159265;
      *v17++ = v20;
      --v18;
    }
    while (v18);
  }
  objc_msgSend(v42, "commandBuffer");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = a7;
  v39 = a8;
  v40 = a9;
  v22 = objc_msgSend(*(id *)(a1 + 104), "maxTotalThreadsPerThreadgroup");
  v23 = a2;
  if (v22 >= a2)
    v24 = a2;
  else
    v24 = v22;
  objc_msgSend(v21, "computeCommandEncoder");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 88), 0, 0);
  objc_msgSend(v25, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 72), 0, 1);
  objc_msgSend(v25, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 96), 0, 2);
  objc_msgSend(v25, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 80), 0, 3);
  objc_msgSend(v25, "setComputePipelineState:", *(_QWORD *)(a1 + 104));
  v57 = a2;
  v58 = vdupq_n_s64(1uLL);
  v55 = v24;
  v56 = v58;
  objc_msgSend(v25, "dispatchThreads:threadsPerThreadgroup:", &v57, &v55);
  objc_msgSend(v25, "endEncoding");
  v41 = (void *)v15;
  if (v14)
  {
    v26 = 0;
    do
    {
      v27 = objc_msgSend(*(id *)(a1 + 112), "maxTotalThreadsPerThreadgroup");
      if (v27 >= v23)
        v28 = v23;
      else
        v28 = v27;
      LODWORD(__p[0]) = 0;
      v29 = (_DWORD *)(*a3 + v26);
      LODWORD(__p[0]) = *v29;
      v61[0] = 0;
      v61[0] = v29[1];
      v54 = 0;
      v54 = v29[2];
      objc_msgSend(v21, "computeCommandEncoder");
      v30 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v30, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 32), 0, 0);
      objc_msgSend(v30, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 40), 0, 1);
      objc_msgSend(v30, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 56), 0, 2);
      objc_msgSend(v30, "setBytes:length:atIndex:", __p, 4, 3);
      objc_msgSend(v30, "setBytes:length:atIndex:", v61, 4, 4);
      objc_msgSend(v30, "setBytes:length:atIndex:", &v54, 4, 5);
      objc_msgSend(v30, "setBytes:length:atIndex:", &v59, 4, 6);
      objc_msgSend(v30, "setBytes:length:atIndex:", &v60, 4, 7);
      objc_msgSend(v30, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 48), 0, 8);
      objc_msgSend(v30, "setComputePipelineState:", *(_QWORD *)(a1 + 112));
      v52 = v23;
      v53 = vdupq_n_s64(1uLL);
      v50 = v28;
      v51 = v53;
      objc_msgSend(v30, "dispatchThreads:threadsPerThreadgroup:", &v52, &v50);
      objc_msgSend(v30, "endEncoding");
      objc_msgSend(*(id *)(a1 + 24), "encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:intersectionBuffer:intersectionBufferOffset:rayCount:accelerationStructure:", v21, 1, *(_QWORD *)(a1 + 56), 0, *(_QWORD *)(a1 + 64), 0, v23, *(_QWORD *)(a1 + 16));
      v31 = objc_msgSend(*(id *)(a1 + 120), "maxTotalThreadsPerThreadgroup");
      if (v31 >= v23)
        v32 = v23;
      else
        v32 = v31;
      objc_msgSend(v21, "computeCommandEncoder");
      v33 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v33, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 64), 0, 0);
      objc_msgSend(v33, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 40), 0, 1);
      objc_msgSend(v33, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 56), 0, 2);
      objc_msgSend(v33, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 72), 0, 3);
      objc_msgSend(v33, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 88), 0, 4);
      objc_msgSend(v33, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 80), 0, 5);
      objc_msgSend(v33, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 96), 0, 6);
      objc_msgSend(v33, "setComputePipelineState:", *(_QWORD *)(a1 + 120));
      v48 = v23;
      v49 = vdupq_n_s64(1uLL);
      v46 = v32;
      v47 = v49;
      objc_msgSend(v33, "dispatchThreads:threadsPerThreadgroup:", &v48, &v46);
      objc_msgSend(v33, "endEncoding");
      v26 += 16;
      v25 = v33;
    }
    while (16 * v14 != v26);
  }
  else
  {
    v33 = v25;
  }
  sub_2399FCF18();
  objc_msgSend(v21, "commit");
  objc_msgSend(v21, "waitUntilCompleted");
  objc_msgSend(v21, "error");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = sub_2399F93F8(v34);

  if (v35)
  {
    if (v39)
      *(_DWORD *)(v38 + 384) = 16;
    v36 = *(_QWORD *)(v40 + 24);
    if (v36)
    {
      v45 = 0;
      LOBYTE(__p[0]) = 0;
      v61[0] = 16;
      (*(void (**)(uint64_t, _DWORD *, void **))(*(_QWORD *)v36 + 48))(v36, v61, __p);
      if (v45 < 0)
        operator delete(__p[0]);
    }
  }

  objc_autoreleasePoolPop(v41);
  return v35 ^ 1u;
}

void sub_23996D4D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  void *v23;
  void *v24;

  if (a23 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_23996D500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_23996D520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_23996D538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_23996D54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_23996D560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_23996D57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

BOOL sub_23996D5B0(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t *a6, uint64_t a7, int a8)
{
  int v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  int v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *__p[2];
  char v48;
  id v49;
  int v50;

  v15 = a5;
  v16 = (void *)MEMORY[0x23B83EC40]();
  sub_23993D738(a3);
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = *(id *)a1;
  *(_QWORD *)a1 = v17;

  v19 = *(id *)a1;
  v49 = 0;
  sub_2399FA2BC(v19, (uint64_t)&v49, a6, a8);
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = v49;
  v22 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v20;

  if (v21)
  {
    if (v15)
      *(_DWORD *)(a4 + 384) = 5;
    v23 = *(_QWORD *)(a7 + 24);
    if (v23)
    {
      v48 = 0;
      LOBYTE(__p[0]) = 0;
      v50 = 5;
      (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v23 + 48))(v23, &v50, __p);
      if (v48 < 0)
        operator delete(__p[0]);
    }

LABEL_8:
    v24 = 1;
    goto LABEL_9;
  }
  sub_23993D744(a3);
  v26 = objc_claimAutoreleasedReturnValue();
  v27 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v26;

  v28 = 4 * a2;
  v29 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", v28, 0);
  v30 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v29;

  v31 = 12 * a2;
  v32 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", v31, 0);
  v33 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v32;

  v34 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", v31, 0);
  v35 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v34;

  v36 = objc_msgSend(*(id *)a1, "newBufferWithLength:options:", v28, 0);
  v37 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v36;

  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vuzp1q_s32((int32x4_t)vceqzq_s64(*(int64x2_t *)(a1 + 32)), (int32x4_t)vceqzq_s64(*(int64x2_t *)(a1 + 48))))) & 1) != 0)
  {
    if (v15)
      *(_DWORD *)(a4 + 384) = 2;
    v38 = *(_QWORD *)(a7 + 24);
    if (v38)
    {
      v48 = 0;
      LOBYTE(__p[0]) = 0;
      v50 = 2;
      (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v38 + 48))(v38, &v50, __p);
      if (v48 < 0)
        operator delete(__p[0]);
    }
    goto LABEL_8;
  }
  v39 = objc_alloc_init(MEMORY[0x24BDDD550]);
  objc_msgSend(v39, "setThreadGroupSizeIsMultipleOfThreadExecutionWidth:", 1);
  v40 = (void *)objc_msgSend(*(id *)(a1 + 8), "newFunctionWithName:", CFSTR("rtak"));
  objc_msgSend(v39, "setComputeFunction:", v40);

  v41 = *(id *)a1;
  v46 = 0;
  v42 = objc_msgSend(v41, "newComputePipelineStateWithDescriptor:options:reflection:error:", v39, 0, 0, &v46);
  v43 = v46;
  v44 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v42;

  if (*(_QWORD *)(a1 + 24))
  {
    v24 = 0;
  }
  else
  {
    if (v15)
      *(_DWORD *)(a4 + 384) = 5;
    v45 = *(_QWORD *)(a7 + 24);
    if (v45)
    {
      v48 = 0;
      LOBYTE(__p[0]) = 0;
      v50 = 5;
      (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v45 + 48))(v45, &v50, __p);
      if (v48 < 0)
        operator delete(__p[0]);
    }
    v24 = 1;
  }

LABEL_9:
  objc_autoreleasePoolPop(v16);
  return v24 == 0;
}

void sub_23996D8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

uint64_t sub_23996D91C(uint64_t a1, unsigned int a2, int a3, float a4, float a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  int v14;
  void *v15;
  void *v16;
  uint64_t v17;
  float *v18;
  uint64_t v19;
  int v20;
  float v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  void *v26;
  int v27;
  uint64_t v28;
  uint64_t v30;
  void *__p;
  char v32;
  unint64_t v33;
  int64x2_t v34;
  uint64_t v35;
  int64x2_t v36;
  int v37;
  float v38;
  float v39;
  int v40;

  v38 = a5;
  v39 = a4;
  v37 = 3;
  if (a3 == 2)
  {
    v14 = 1;
  }
  else
  {
    if (a3 != 1)
      goto LABEL_6;
    v14 = 2;
  }
  v37 = v14;
LABEL_6:
  v15 = (void *)MEMORY[0x23B83EC40]();
  v16 = (void *)objc_msgSend(*(id *)a1, "newCommandQueue");
  v17 = objc_msgSend(*(id *)(a1 + 56), "contents");
  if (a2)
  {
    v18 = (float *)v17;
    v19 = a2;
    do
    {
      v20 = rand();
      v21 = (float)((float)((float)v20 * 4.6566e-10) + (float)((float)v20 * 4.6566e-10)) * 3.14159265;
      *v18++ = v21;
      --v19;
    }
    while (v19);
  }
  objc_msgSend(v16, "commandBuffer");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = a7;
  v23 = objc_msgSend(*(id *)(a1 + 24), "maxTotalThreadsPerThreadgroup");
  if (v23 >= a2)
    v24 = a2;
  else
    v24 = v23;
  objc_msgSend(v22, "computeCommandEncoder");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 32), 0, 0);
  objc_msgSend(v25, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 40), 0, 1);
  objc_msgSend(v25, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 48), 0, 2);
  objc_msgSend(v25, "setAccelerationStructure:atBufferIndex:", *(_QWORD *)(a1 + 16), 3);
  objc_msgSend(v25, "useResource:usage:", *(_QWORD *)(a1 + 16), 1);
  objc_msgSend(v25, "setBuffer:offset:atIndex:", *(_QWORD *)(a1 + 56), 0, 4);
  objc_msgSend(v25, "setBytes:length:atIndex:", &v39, 4, 5);
  objc_msgSend(v25, "setBytes:length:atIndex:", &v38, 4, 6);
  objc_msgSend(v25, "setBytes:length:atIndex:", &v37, 4, 7);
  objc_msgSend(v25, "setComputePipelineState:", *(_QWORD *)(a1 + 24));
  v35 = a2;
  v36 = vdupq_n_s64(1uLL);
  v33 = v24;
  v34 = v36;
  objc_msgSend(v25, "dispatchThreads:threadsPerThreadgroup:", &v35, &v33);
  objc_msgSend(v25, "endEncoding");
  sub_2399FCF18();
  objc_msgSend(v22, "commit");
  objc_msgSend(v22, "waitUntilCompleted");
  objc_msgSend(v22, "error");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = sub_2399F93F8(v26);

  if (v27)
  {
    if (a8)
      *(_DWORD *)(v30 + 384) = 16;
    v28 = *(_QWORD *)(a9 + 24);
    if (v28)
    {
      v32 = 0;
      LOBYTE(__p) = 0;
      v40 = 16;
      (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v28 + 48))(v28, &v40, &__p);
      if (v32 < 0)
        operator delete(__p);
    }
  }

  objc_autoreleasePoolPop(v15);
  return v27 ^ 1u;
}

void sub_23996DC00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_23996DC6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_23996DC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, int a6, _QWORD *a7, float a8, float a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t *a13, _QWORD *a14, unsigned __int8 a15)
{
  char *v20;
  size_t v21;
  size_t v22;
  __int128 *p_dst;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t *v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  unint64_t v31;
  unsigned int *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  _OWORD *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  char *v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  unsigned int v53;
  unint64_t v54;
  unsigned int v55;
  unint64_t v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  BOOL v60;
  char v61;
  unint64_t i;
  char v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  BOOL v69;
  int v70;
  BOOL v71;
  int v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _OWORD *v77;
  uint64_t v78;
  _OWORD *v79;
  float v80;
  float v81;
  double v82;
  float v83;
  __float2 v84;
  __int128 v85;
  float v86;
  __float2 v87;
  __int128 v88;
  float v89;
  __float2 v90;
  __int128 v91;
  float v92;
  __float2 v93;
  __int128 v94;
  float v95;
  __float2 v96;
  __int128 v97;
  float v98;
  __float2 v99;
  __int128 v100;
  float v101;
  __float2 v102;
  __int128 v103;
  float v104;
  __float2 v105;
  __int128 v106;
  float v107;
  __float2 v108;
  __int128 v109;
  _QWORD *v110;
  uint64_t v111;
  _BOOL4 v112;
  _DWORD *v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  _DWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  std::__shared_weak_count *v124;
  uint64_t v125;
  unint64_t *v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  float *v130;
  float v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  std::__shared_weak_count *v135;
  unint64_t *v136;
  unint64_t v137;
  unint64_t v138;
  float32x4_t v139;
  float v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  std::__shared_weak_count *v144;
  unint64_t *v145;
  unint64_t v146;
  unint64_t v147;
  float32x4_t v148;
  uint64_t v149;
  uint64_t v150;
  float32x4_t v151;
  float32x4_t v152;
  float32x4_t v153;
  float v154;
  float v155;
  uint64_t *v156;
  uint64_t v157;
  std::__shared_weak_count *v158;
  unint64_t *v159;
  unint64_t v160;
  unint64_t v161;
  float32x4_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  std::__shared_weak_count *v166;
  unint64_t *v167;
  unint64_t v168;
  unint64_t v169;
  float32x4_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  std::__shared_weak_count *v174;
  unint64_t *v175;
  unint64_t v176;
  unint64_t v177;
  float32x4_t v178;
  float v179;
  float32x4_t v180;
  float32x4_t v181;
  float32x4_t v182;
  float32x4_t v183;
  float32x4_t v184;
  int32x4_t v185;
  int32x4_t v186;
  float32x4_t v187;
  float32x4_t v188;
  float32x4_t v189;
  float32x4_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  float32x4_t v194;
  float32x4_t v195;
  float32x4_t v196;
  float32x4_t v197;
  float v198;
  float v199;
  float32x4_t v200;
  float v201;
  float32x4_t v202;
  float v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  _DWORD *v218;
  int v219;
  int v220;
  uint64_t v221;
  _BOOL4 v222;
  int *v223;
  uint64_t v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int *v228;
  uint64_t v229;
  unsigned int v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  uint64_t v234;
  std::__shared_weak_count *v235;
  unint64_t *v236;
  unint64_t v237;
  unint64_t v238;
  uint64_t v239;
  float *v240;
  float v241;
  uint64_t v242;
  uint64_t *v243;
  std::__shared_weak_count *v244;
  uint64_t v245;
  unint64_t *v246;
  unint64_t v247;
  unint64_t v248;
  float32x4_t v249;
  float v250;
  uint64_t v251;
  uint64_t *v252;
  std::__shared_weak_count *v253;
  uint64_t v254;
  unint64_t *v255;
  unint64_t v256;
  unint64_t v257;
  float32x4_t v258;
  uint64_t v259;
  uint64_t v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x4_t v263;
  float v264;
  float v265;
  uint64_t *v266;
  uint64_t v267;
  std::__shared_weak_count *v268;
  unint64_t *v269;
  unint64_t v270;
  unint64_t v271;
  float32x4_t v272;
  uint64_t v273;
  uint64_t *v274;
  uint64_t v275;
  std::__shared_weak_count *v276;
  unint64_t *v277;
  unint64_t v278;
  unint64_t v279;
  float32x4_t v280;
  uint64_t v281;
  uint64_t *v282;
  std::__shared_weak_count *v283;
  uint64_t v284;
  unint64_t *v285;
  unint64_t v286;
  unint64_t v287;
  float32x4_t v288;
  float v289;
  float32x4_t v290;
  float32x4_t v291;
  float32x4_t v292;
  float32x4_t v293;
  float32x4_t v294;
  int32x4_t v295;
  int32x4_t v296;
  float32x4_t v297;
  float32x4_t v298;
  float32x4_t v299;
  float32x4_t v300;
  float32x4_t v301;
  float32x4_t v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  float32x4_t v306;
  float32x4_t v307;
  float v308;
  float v309;
  float32x4_t v310;
  float v311;
  float32x4_t v312;
  float v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  int v317;
  uint64_t v318;
  uint64_t v319;
  _QWORD *v320;
  uint64_t v321;
  _QWORD *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  int v328;
  int *v329;
  int v330;
  int v331;
  int v332;
  float v333;
  float v334;
  uint64_t v335;
  void *v336;
  uint64_t v337;
  unsigned int v338;
  _QWORD *v339;
  uint64_t v340;
  _QWORD *v341;
  uint64_t v342;
  float *v343;
  uint64_t v344;
  int v345;
  uint64_t v346;
  _DWORD *v347;
  int v348;
  float v349;
  int32x2_t v350;
  uint64_t v351;
  unsigned int v352;
  unint64_t v353;
  unsigned int v354;
  uint64_t v355;
  int v356;
  int v357;
  uint64_t v358;
  int v359;
  uint64_t v360;
  int v361;
  int v362;
  uint64_t v363;
  int v364;
  unsigned int v365;
  unint64_t v366;
  uint64_t v367;
  uint64_t v368;
  int32x4_t *v369;
  int32x4_t v370;
  uint64_t v371;
  _DWORD *v372;
  uint64_t v373;
  unsigned int v374;
  unint64_t j;
  uint64_t v376;
  uint64_t v377;
  int32x4_t *v378;
  int32x4_t v379;
  uint64_t v380;
  _DWORD *v381;
  uint64_t v382;
  unsigned int v383;
  unint64_t v384;
  uint64_t v385;
  uint64_t v386;
  int32x4_t *v387;
  int32x4_t v388;
  uint64_t v389;
  _DWORD *v390;
  uint64_t v391;
  unint64_t v392;
  int v393;
  int v394;
  uint64_t v395;
  int v396;
  unint64_t v397;
  int v398;
  uint64_t v399;
  int v400;
  unsigned int v401;
  uint64_t v402;
  int v403;
  int v404;
  uint64_t v405;
  _DWORD *v406;
  int v407;
  int v408;
  int v409;
  int v410;
  unsigned int v411;
  unint64_t k;
  float v413;
  float *v414;
  unint64_t v415;
  unsigned int v416;
  uint64_t v417;
  _DWORD *v418;
  int32x4_t *v419;
  int32x4_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v424;
  _QWORD *v425;
  uint64_t v426;
  _QWORD *v427;
  uint64_t v428;
  float *v429;
  float *v430;
  uint64_t v431;
  int v432;
  uint64_t v433;
  int *v434;
  int v435;
  int v436;
  int v437;
  float v438;
  float32x4_t v439;
  _DWORD *v440;
  uint64_t v441;
  void *context;
  float32x4_t v443;
  float32x4_t v444;
  float32x4_t v445;
  _DWORD *v446;
  int *v447;
  uint64_t v448;
  float32x4_t v449;
  float32x4_t v450;
  uint64_t v451;
  int *v452;
  int v453;
  uint64_t v454;
  float v455;
  float v456;
  float v457;
  uint64_t v458;
  float v459;
  float v460;
  float v461;
  float v462;
  float v463;
  float v464;
  float32x4_t v465;
  float32x4_t v466;
  float32x4_t v467;
  float v468;
  float v469;
  float v470;
  float32x4_t v471;
  float32x4_t v472;
  float32x4_t v473;
  float32x4_t v474;
  float32x4_t v475;
  float32x4_t v476;
  float32x4_t v477;
  float32x4_t v478;
  float32x4_t v479;
  float32x4_t v480;
  float32x4_t v481;
  float32x4_t v482;
  unsigned int v483;
  float32x4_t v484;
  float32x4_t v485;
  float32x4_t v486;
  float32x4_t v487;
  float32x4_t v488;
  float32x4_t v489;
  uint64_t v491;
  unsigned int v493;
  char v494;
  float32x4_t v495;
  float32x4_t v496;
  float32x4_t v497;
  float v498;
  float v499;
  float32x4_t v500;
  float32x4_t v501;
  float v502;
  char v503;
  float32x4_t v504;
  float v505;
  int v507;
  _QWORD *v509;
  float v510;
  unsigned int v511;
  float32x4_t v512;
  unsigned int v513;
  __int128 __dst;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  _QWORD v522[3];
  uint64_t v523;
  uint64_t v524;
  unsigned int *v525;
  unsigned int *v526;
  _DWORD *v527;
  _BYTE v528[24];
  _BYTE *v529;
  _BYTE v530[24];
  _BYTE *v531;
  _BYTE v532[24];
  _BYTE *v533;
  _BYTE v534[24];
  _BYTE *v535;
  _QWORD v536[3];
  _QWORD *v537;
  _BYTE v538[24];
  _BYTE *v539;
  _BYTE v540[24];
  _BYTE *v541;
  _BYTE v542[24];
  _BYTE *v543;
  _BYTE v544[24];
  _BYTE *v545;
  _QWORD v546[3];
  _QWORD *v547;
  uint64_t v548;

  v548 = *MEMORY[0x24BDAC8D0];
  v20 = off_256934408[0];
  v21 = strlen(off_256934408[0]);
  if (v21 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v22 = v21;
  v509 = a7;
  v453 = a6;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    p_dst = (__int128 *)operator new(v24 + 1);
    *((_QWORD *)&__dst + 1) = v22;
    *(_QWORD *)&v515 = v25 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_8;
  }
  BYTE7(v515) = v21;
  p_dst = &__dst;
  if (v21)
LABEL_8:
    memmove(p_dst, v20, v22);
  *((_BYTE *)p_dst + v22) = 0;
  v526 = 0;
  v525 = 0;
  v26 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)&v525, (unsigned __int8 *)&__dst);
  if (SBYTE7(v515) < 0)
    operator delete((void *)__dst);
  v27 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * v26);
  v28 = (std::__shared_weak_count *)v27[1];
  v491 = *v27;
  if (v28)
  {
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldxr(p_shared_owners);
    while (__stxr(v30 + 1, p_shared_owners));
    do
      v31 = __ldaxr(p_shared_owners);
    while (__stlxr(v31 - 1, p_shared_owners));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v32 = (unsigned int *)operator new(0xCuLL);
  v525 = v32;
  v527 = v32 + 3;
  *(_QWORD *)v32 = -1;
  v32[2] = -1;
  v526 = v32 + 3;
  v33 = *(_DWORD *)(a2 + 4);
  v493 = *(_DWORD *)(a2 + 8);
  v34 = v493 * v33;
  v35 = operator new[]();
  v36 = v35;
  if ((_DWORD)v34)
  {
    v37 = 0;
    v38 = *(_QWORD *)(a2 + 16);
    if (v34 < 8 || (unint64_t)(v35 - v38) < 0x20)
      goto LABEL_29;
    if (v34 >= 0x20)
    {
      v37 = v34 & 0xFFFFFFE0;
      v39 = (__int128 *)(v38 + 16);
      v40 = (_OWORD *)(v35 + 16);
      v41 = v37;
      do
      {
        v42 = *v39;
        *(v40 - 1) = *(v39 - 1);
        *v40 = v42;
        v39 += 2;
        v40 += 2;
        v41 -= 32;
      }
      while (v41);
      if (v37 == v34)
        goto LABEL_31;
      if ((((_BYTE)v493 * (_BYTE)v33) & 0x18) == 0)
      {
LABEL_29:
        v48 = (_BYTE *)(v35 + v37);
        v49 = (char *)(v38 + v37);
        v50 = v34 - v37;
        do
        {
          v51 = *v49++;
          *v48++ = v51;
          --v50;
        }
        while (v50);
        goto LABEL_31;
      }
    }
    else
    {
      v37 = 0;
    }
    v43 = v37;
    v37 = v34 & 0xFFFFFFF8;
    v44 = (uint64_t *)(v38 + v43);
    v45 = (_QWORD *)(v35 + v43);
    v46 = v43 - v37;
    do
    {
      v47 = *v44++;
      *v45++ = v47;
      v46 += 8;
    }
    while (v46);
    if (v37 != v34)
      goto LABEL_29;
  }
LABEL_31:
  v483 = v26;
  v52 = *(_DWORD *)(a2 + 8);
  v507 = v33;
  if (v52)
  {
    v53 = *(_DWORD *)(a2 + 4);
    if (v53)
    {
      v54 = 0;
      v55 = *(_DWORD *)(a2 + 4);
      do
      {
        if (!v55)
        {
          v56 = v54 + 1;
          goto LABEL_35;
        }
        v57 = v54 - 1;
        v56 = v54 + 1;
        v58 = v33 * v54;
        if (!*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_DWORD *)(a2 + 12) * v55 * v54))
          goto LABEL_55;
        v59 = v509[3];
        if (v59)
        {
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 48))(v59) & 1) != 0)
            goto LABEL_313;
          v53 = *(_DWORD *)(a2 + 4);
        }
        if (v53 == 1)
        {
          v60 = 0;
          if (!v54)
            goto LABEL_47;
        }
        else
        {
          v60 = *(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_DWORD *)(a2 + 12) + *(_DWORD *)(a2 + 12) * v53 * v54) == 0;
          if (!v54)
            goto LABEL_47;
        }
        if (!*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_DWORD *)(a2 + 12) * v53 * v57))
          v60 = 1;
LABEL_47:
        v52 = *(_DWORD *)(a2 + 8);
        if (v54 >= v52 - 1)
        {
          if (v60)
            goto LABEL_53;
        }
        else
        {
          if (!*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_DWORD *)(a2 + 12) * v53 * v56))
            v60 = 1;
          if (v60)
          {
LABEL_53:
            v61 = 1;
            goto LABEL_54;
          }
        }
        v61 = 0;
LABEL_54:
        *(_BYTE *)(v36 + v58) = v61;
LABEL_55:
        if (v53 < 2)
        {
          v55 = v53;
          goto LABEL_35;
        }
        for (i = 1; i < v53; ++i)
        {
          if (*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_DWORD *)(a2 + 12) * (i + v53 * (_DWORD)v54)))
          {
            v64 = v509[3];
            if (v64 && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v64 + 48))(v64) & 1) != 0)
            {
              v73 = 0;
              goto LABEL_403;
            }
            v65 = *(_QWORD *)(a2 + 16);
            v53 = *(_DWORD *)(a2 + 4);
            v66 = *(_DWORD *)(a2 + 12);
            v67 = (i + v53 * v54 - 1) * v66;
            v68 = *(unsigned __int8 *)(v65 + v67);
            v69 = *(_BYTE *)(v65 + v67) == 0;
            if (i < v53 - 1)
            {
              v70 = *(unsigned __int8 *)(v65 + v66 + v66 * (i + v53 * (_DWORD)v54));
              if (v68)
                v71 = v70 == 0;
              else
                v71 = 1;
              v69 = v71;
            }
            if (v54 && !*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_DWORD *)(a2 + 12) * (i + v53 * v57)))
              v69 = 1;
            v52 = *(_DWORD *)(a2 + 8);
            if (v54 >= v52 - 1)
            {
              if (v69)
                goto LABEL_79;
            }
            else
            {
              if (!*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_DWORD *)(a2 + 12) * (i + v53 * (_DWORD)v56)))
                v69 = 1;
              if (v69)
              {
LABEL_79:
                v63 = 1;
                goto LABEL_58;
              }
            }
            v63 = v54 & 1 & i;
LABEL_58:
            *(_BYTE *)(v36 + v58 + i) = v63;
          }
        }
        v55 = v53;
        v33 = v507;
LABEL_35:
        v54 = v56;
      }
      while (v56 < v52);
    }
  }
  v524 = 0;
  sub_23993C9C8((uint64_t)a5, (double *)&v524);
  v523 = 0x100000000;
  if (v453 == 1)
  {
    v72 = 2;
  }
  else
  {
    if (v453 != 2)
      goto LABEL_88;
    v72 = 1;
  }
  LODWORD(v523) = v72;
LABEL_88:
  v74 = sub_23993BC9C(a5, &v523);
  context = (void *)MEMORY[0x23B83EC40](v74);
  v75 = a14;
  if (!sub_23993D744((uint64_t)a5))
  {
    v77 = operator new(0x7F0uLL);
    v522[0] = v77;
    v522[2] = v77 + 127;
    bzero(v77 + 1, 0x7E0uLL);
    v78 = 0;
    v522[1] = v77 + 127;
    *v77 = xmmword_239ECEFD0;
    v79 = v77 + 5;
    do
    {
      v80 = (double)v78 * -0.94 / 13.0 + 0.98;
      v510 = v80;
      v81 = sqrtf(1.0 - (float)(v80 * v80));
      v82 = (double)v78 * 0.448798951;
      v83 = v82 + 0.0;
      v84 = __sincosf_stret(v83);
      *(float *)&v85 = v81 * v84.__cosval;
      *((float *)&v85 + 1) = v81 * v84.__sinval;
      *((_QWORD *)&v85 + 1) = LODWORD(v510);
      *(v79 - 4) = v85;
      v86 = v82 + 0.698131701;
      v87 = __sincosf_stret(v86);
      *(float *)&v88 = v81 * v87.__cosval;
      *((float *)&v88 + 1) = v81 * v87.__sinval;
      *((_QWORD *)&v88 + 1) = LODWORD(v510);
      *(v79 - 3) = v88;
      v89 = v82 + 1.3962634;
      v90 = __sincosf_stret(v89);
      *(float *)&v91 = v81 * v90.__cosval;
      *((float *)&v91 + 1) = v81 * v90.__sinval;
      *((_QWORD *)&v91 + 1) = LODWORD(v510);
      *(v79 - 2) = v91;
      v92 = v82 + 2.0943951;
      v93 = __sincosf_stret(v92);
      *(float *)&v94 = v81 * v93.__cosval;
      *((float *)&v94 + 1) = v81 * v93.__sinval;
      *((_QWORD *)&v94 + 1) = LODWORD(v510);
      *(v79 - 1) = v94;
      v95 = v82 + 2.7925268;
      v96 = __sincosf_stret(v95);
      *(float *)&v97 = v81 * v96.__cosval;
      *((float *)&v97 + 1) = v81 * v96.__sinval;
      *((_QWORD *)&v97 + 1) = LODWORD(v510);
      *v79 = v97;
      v98 = v82 + 3.4906585;
      v99 = __sincosf_stret(v98);
      *(float *)&v100 = v81 * v99.__cosval;
      *((float *)&v100 + 1) = v81 * v99.__sinval;
      *((_QWORD *)&v100 + 1) = LODWORD(v510);
      v79[1] = v100;
      v101 = v82 + 4.1887902;
      v102 = __sincosf_stret(v101);
      *(float *)&v103 = v81 * v102.__cosval;
      *((float *)&v103 + 1) = v81 * v102.__sinval;
      *((_QWORD *)&v103 + 1) = LODWORD(v510);
      v79[2] = v103;
      v104 = v82 + 4.88692191;
      v105 = __sincosf_stret(v104);
      *(float *)&v106 = v81 * v105.__cosval;
      *((float *)&v106 + 1) = v81 * v105.__sinval;
      *((_QWORD *)&v106 + 1) = LODWORD(v510);
      v79[3] = v106;
      v107 = v82 + 5.58505361;
      v108 = __sincosf_stret(v107);
      *(float *)&v109 = v81 * v108.__cosval;
      *((float *)&v109 + 1) = v81 * v108.__sinval;
      *((_QWORD *)&v109 + 1) = LODWORD(v510);
      v79[4] = v109;
      ++v78;
      v79 += 9;
    }
    while (v78 != 14);
    v520 = 0u;
    v521 = 0u;
    v518 = 0u;
    v519 = 0u;
    v516 = 0u;
    v517 = 0u;
    __dst = 0u;
    v515 = 0u;
    v110 = a14;
    if (v483 == -1)
      goto LABEL_282;
    v111 = a14[3];
    if (v111)
    {
      if ((_QWORD *)v111 == a14)
      {
        v547 = v546;
        (*(void (**)(_QWORD *, _QWORD *))(*a14 + 24))(a14, v546);
LABEL_193:
        v222 = sub_23996C9B0((uint64_t)&__dst, 0x100000u, (uint64_t)a5, a11, a12, a13, (uint64_t)v546, a15);
        if (v547 == v546)
        {
          (*(void (**)(void))(v546[0] + 32))();
          if (!v222)
            goto LABEL_282;
        }
        else
        {
          if (v547)
          {
            (*(void (**)(void))(*v547 + 40))();
            if (v222)
              goto LABEL_196;
LABEL_282:
            v503 = 0;
            sub_239970140((id *)&__dst);
            v336 = (void *)v522[0];
            if (!v522[0])
              goto LABEL_284;
            goto LABEL_283;
          }
          if (!v222)
            goto LABEL_282;
        }
LABEL_196:
        v223 = (int *)operator new(0x800000uLL);
        bzero(v223, 0x800000uLL);
        v458 = objc_msgSend((id)v516, "contents");
        v454 = objc_msgSend(*((id *)&v516 + 1), "contents");
        if (!v493 || !v33)
        {
          v503 = 1;
          goto LABEL_286;
        }
        v225 = 0;
        v226 = 0;
        v227 = 0;
        v447 = v223 + 1;
        v503 = 1;
        v452 = v223;
        v441 = v36;
        while (!*(_BYTE *)(v36 + v226 + v227 * v33))
        {
LABEL_273:
          if (++v226 >= v33)
          {
            v226 = 0;
            if (++v227 >= v493)
            {
              if ((v503 & 1) != 0 && v225)
              {
                v335 = v509[3];
                if (!v335)
                  goto LABEL_280;
                if ((_QWORD *)v335 == v509)
                {
                  v541 = v540;
                  (*(void (**)(_QWORD *, _BYTE *))(*v509 + 24))(v509, v540);
                }
                else
                {
                  v335 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v335 + 16))(v335);
LABEL_280:
                  v541 = (_BYTE *)v335;
                }
                v424 = v110[3];
                if (v424)
                {
                  if ((_QWORD *)v424 != v110)
                  {
                    v424 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v424 + 16))(v424);
                    goto LABEL_410;
                  }
                  v539 = v538;
                  (*(void (**)(_QWORD *, _BYTE *))(*v110 + 24))(v110, v538);
                }
                else
                {
LABEL_410:
                  v539 = (_BYTE *)v424;
                }
                v503 = sub_23996CF8C((uint64_t)&__dst, v225, v522, a8, a9, v224, a11, a12, (uint64_t)v538);
                v425 = v539;
                if (v539 == v538)
                {
                  v426 = 4;
                  v425 = v538;
LABEL_416:
                  (*(void (**)(void))(*v425 + 8 * v426))();
                }
                else if (v539)
                {
                  v426 = 5;
                  goto LABEL_416;
                }
                v427 = v541;
                if (v541 == v540)
                {
                  v428 = 4;
                  v427 = v540;
LABEL_421:
                  (*(void (**)(void))(*v427 + 8 * v428))();
                }
                else if (v541)
                {
                  v428 = 5;
                  goto LABEL_421;
                }
                v429 = (float *)objc_msgSend(*((id *)&v518 + 1), "contents");
                v430 = (float *)objc_msgSend((id)v519, "contents");
                v431 = *(_QWORD *)(a4 + 16);
                v432 = *(_DWORD *)(a4 + 4);
                v433 = v225;
                v434 = v223 + 1;
                v435 = *(_DWORD *)(a4 + 12);
                do
                {
                  v438 = 1.0;
                  if (*v430 > 0.0)
                    v438 = 1.0 - (float)(*v429 / *v430);
                  v436 = *(v434 - 1);
                  v437 = *v434;
                  v434 += 2;
                  *(float *)(v431 + 4 * ((v436 + v432 * v437) * v435)) = v438;
                  ++v430;
                  ++v429;
                  --v433;
                }
                while (v433);
              }
LABEL_286:
              operator delete(v223);
              sub_239970140((id *)&__dst);
              v336 = (void *)v522[0];
              if (!v522[0])
              {
LABEL_284:
                v73 = v503 & 1;
                goto LABEL_311;
              }
LABEL_283:
              operator delete(v336);
              goto LABEL_284;
            }
          }
        }
        v228 = (unsigned int *)&v223[2 * v225];
        *v228 = v226;
        v228[1] = v227;
        v229 = *(_QWORD *)(a3 + 16);
        v230 = v227;
        v231 = (v226 + *(_DWORD *)(a3 + 4) * v227) * *(_DWORD *)(a3 + 12);
        v513 = *(_DWORD *)(v229 + 16 * v231 + 4);
        sub_23996362C(a1, &v513, (uint64_t)&v525);
        v232 = *v525;
        v233 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v234 = *v233;
        v235 = (std::__shared_weak_count *)v233[1];
        if (v235)
        {
          v236 = (unint64_t *)&v235->__shared_owners_;
          do
            v237 = __ldxr(v236);
          while (__stxr(v237 + 1, v236));
          do
            v238 = __ldaxr(v236);
          while (__stlxr(v238 - 1, v236));
          if (!v238)
          {
            ((void (*)(std::__shared_weak_count *))v235->__on_zero_shared)(v235);
            std::__shared_weak_count::__release_weak(v235);
          }
        }
        v512 = *(float32x4_t *)(*(_QWORD *)(v234 + 40) + 16 * v232);
        v239 = v229 + 16 * v231;
        v241 = *(float *)(v239 + 8);
        v240 = (float *)(v239 + 8);
        v505 = v241;
        v242 = v525[1];
        v243 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v245 = *v243;
        v244 = (std::__shared_weak_count *)v243[1];
        v36 = v441;
        if (v244)
        {
          v246 = (unint64_t *)&v244->__shared_owners_;
          do
            v247 = __ldxr(v246);
          while (__stxr(v247 + 1, v246));
          do
            v248 = __ldaxr(v246);
          while (__stlxr(v248 - 1, v246));
          if (!v248)
          {
            ((void (*)(std::__shared_weak_count *))v244->__on_zero_shared)(v244);
            std::__shared_weak_count::__release_weak(v244);
          }
        }
        v249 = *(float32x4_t *)(*(_QWORD *)(v245 + 40) + 16 * v242);
        v250 = v240[1];
        v251 = v525[2];
        v252 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v254 = *v252;
        v253 = (std::__shared_weak_count *)v252[1];
        v499 = v250;
        v501 = v249;
        if (v253)
        {
          v255 = (unint64_t *)&v253->__shared_owners_;
          do
            v256 = __ldxr(v255);
          while (__stxr(v256 + 1, v255));
          do
            v257 = __ldaxr(v255);
          while (__stlxr(v257 - 1, v255));
          if (!v257)
          {
            ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
            std::__shared_weak_count::__release_weak(v253);
            v250 = v499;
            v249 = v501;
          }
        }
        v258 = *(float32x4_t *)(*(_QWORD *)(v254 + 40) + 16 * v251);
        v259 = *(_QWORD *)(v491 + 40);
        v260 = *v525;
        v261 = *(float32x4_t *)(v259 + 16 * v525[1]);
        v262 = *(float32x4_t *)(v259 + 16 * v260);
        v263 = *(float32x4_t *)(v259 + 16 * v525[2]);
        v265 = *v240;
        v264 = v240[1];
        v266 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v267 = *v266;
        v268 = (std::__shared_weak_count *)v266[1];
        if (v268)
        {
          v269 = (unint64_t *)&v268->__shared_owners_;
          do
            v270 = __ldxr(v269);
          while (__stxr(v270 + 1, v269));
          do
            v271 = __ldaxr(v269);
          while (__stlxr(v271 - 1, v269));
          if (!v271)
          {
            v495 = v258;
            v480 = v263;
            v487 = v261;
            v468 = v264;
            v474 = v262;
            v462 = v265;
            ((void (*)(std::__shared_weak_count *))v268->__on_zero_shared)(v268);
            std::__shared_weak_count::__release_weak(v268);
            v265 = v462;
            v264 = v468;
            v262 = v474;
            v263 = v480;
            v261 = v487;
            v258 = v495;
            v250 = v499;
            v249 = v501;
          }
        }
        v272 = *(float32x4_t *)(*(_QWORD *)(v267 + 40) + 16 * v260);
        v273 = v525[1];
        v274 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v275 = *v274;
        v276 = (std::__shared_weak_count *)v274[1];
        if (v276)
        {
          v277 = (unint64_t *)&v276->__shared_owners_;
          do
            v278 = __ldxr(v277);
          while (__stxr(v278 + 1, v277));
          do
            v279 = __ldaxr(v277);
          while (__stlxr(v279 - 1, v277));
          if (!v279)
          {
            v449 = v272;
            v496 = v258;
            v481 = v263;
            v488 = v261;
            v469 = v264;
            v475 = v262;
            v463 = v265;
            ((void (*)(std::__shared_weak_count *))v276->__on_zero_shared)(v276);
            std::__shared_weak_count::__release_weak(v276);
            v265 = v463;
            v264 = v469;
            v262 = v475;
            v263 = v481;
            v261 = v488;
            v258 = v496;
            v250 = v499;
            v272 = v449;
            v249 = v501;
          }
        }
        v280 = *(float32x4_t *)(*(_QWORD *)(v275 + 40) + 16 * v273);
        v33 = v507;
        v281 = v525[2];
        v282 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v284 = *v282;
        v283 = (std::__shared_weak_count *)v282[1];
        if (v283)
        {
          v285 = (unint64_t *)&v283->__shared_owners_;
          do
            v286 = __ldxr(v285);
          while (__stxr(v286 + 1, v285));
          do
            v287 = __ldaxr(v285);
          while (__stlxr(v287 - 1, v285));
          if (!v287)
          {
            v450 = v272;
            v497 = v258;
            v482 = v263;
            v489 = v261;
            v470 = v264;
            v476 = v262;
            v464 = v265;
            v445 = v280;
            ((void (*)(std::__shared_weak_count *))v283->__on_zero_shared)(v283);
            std::__shared_weak_count::__release_weak(v283);
            v280 = v445;
            v265 = v464;
            v264 = v470;
            v262 = v476;
            v263 = v482;
            v261 = v489;
            v258 = v497;
            v250 = v499;
            v272 = v450;
            v249 = v501;
          }
        }
        v288 = vaddq_f32(vmulq_n_f32(v512, v505), vmulq_n_f32(v249, v250));
        v289 = (float)(1.0 - v265) - v264;
        v290 = vmulq_n_f32(v258, v289);
        v291 = vaddq_f32(vaddq_f32(vmulq_n_f32(v262, v265), vmulq_n_f32(v261, v264)), vmulq_n_f32(v263, v289));
        v292 = vmulq_f32(v291, v291);
        v292.i32[3] = 0;
        v292.i64[0] = vpaddq_f32(v292, v292).u64[0];
        v292.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v292.f32));
        v293 = *(float32x4_t *)(*(_QWORD *)(v284 + 40) + 16 * v281);
        v294 = vaddq_f32(v288, v290);
        v295 = (int32x4_t)vsubq_f32(v280, v272);
        v296 = (int32x4_t)vsubq_f32(v293, v280);
        v297 = (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v296, (int8x16_t)v296, 4uLL), v296);
        v298 = (float32x4_t)vzip2q_s32(vzip1q_s32(v296, (int32x4_t)vextq_s8((int8x16_t)v296, (int8x16_t)v296, 0xCuLL)), v296);
        v299 = vmlsq_f32(vmulq_f32((float32x4_t)vzip2q_s32(vzip1q_s32(v295, (int32x4_t)vextq_s8((int8x16_t)v295, (int8x16_t)v295, 0xCuLL)), v295), v297), v298, (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v295, (int8x16_t)v295, 4uLL), v295));
        v300 = vmulq_f32(v299, v299);
        v300.i32[3] = 0;
        v301 = vdivq_f32(v291, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v292.f32, 0));
        v300.i64[0] = vpaddq_f32(v300, v300).u64[0];
        v300.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v300.f32));
        v302 = vdivq_f32(v299, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v300.f32, 0));
        v303 = vmulq_f32(v301, v302);
        v303.i32[3] = 0;
        v304 = vpaddq_f32(v303, v303);
        v304.f32[0] = vaddv_f32(*(float32x2_t *)v304.f32);
        v298.i32[0] = 0;
        v305 = (float32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_f32(v298, v304), 0), (int8x16_t)vnegq_f32(v302), (int8x16_t)v302);
        v306 = vmulq_f32(v272, v305);
        v306.i32[3] = 0;
        v307 = vmulq_f32(v280, v305);
        v307.i32[3] = 0;
        v308 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v306, v306));
        v309 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v307, v307));
        v310 = vmulq_f32(v293, v305);
        v310.i32[3] = 0;
        v311 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v310, v310));
        if (v309 > v308)
          v308 = v309;
        if (v311 > v308)
          v308 = v311;
        v312 = vmulq_f32(v294, v305);
        v312.i32[3] = 0;
        v313 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v312, v312));
        if (v308 > v313)
          v294 = vaddq_f32(v294, vmulq_n_f32(v301, (float)(v308 - v313) + a8));
        v110 = a14;
        v314 = 12 * v225;
        v315 = v458 + v314;
        *(_QWORD *)v315 = v294.i64[0];
        *(_DWORD *)(v315 + 8) = v294.i32[2];
        v316 = v454 + v314;
        *(_QWORD *)v316 = v301.i64[0];
        *(_DWORD *)(v316 + 8) = v301.i32[2];
        ++v225;
        v317 = v503 & 1;
        if ((v503 & 1) == 0 || v225 != 0x100000)
        {
LABEL_269:
          if (v317)
          {
            v227 = v230;
          }
          else
          {
            v226 = v33;
            v227 = v493;
          }
          v223 = v452;
          goto LABEL_273;
        }
        v318 = v509[3];
        if (v318)
        {
          if ((_QWORD *)v318 == v509)
          {
            v545 = v544;
            (*(void (**)(_QWORD *, _BYTE *))(*v509 + 24))(v509, v544);
LABEL_249:
            v319 = a14[3];
            if (v319)
            {
              if ((_QWORD *)v319 == a14)
              {
                v543 = v542;
                (*(void (**)(_QWORD *, _BYTE *))(*a14 + 24))(a14, v542);
LABEL_254:
                v317 = sub_23996CF8C((uint64_t)&__dst, 0x100000u, v522, a8, a9, v224, a11, a12, (uint64_t)v542);
                v320 = v543;
                if (v543 == v542)
                {
                  v320 = v542;
                  v321 = 4;
                }
                else
                {
                  if (!v543)
                    goto LABEL_259;
                  v321 = 5;
                }
                (*(void (**)(void))(*v320 + 8 * v321))();
LABEL_259:
                v322 = v545;
                if (v545 == v544)
                {
                  v322 = v544;
                  v323 = 4;
                }
                else
                {
                  if (!v545)
                    goto LABEL_264;
                  v323 = 5;
                }
                (*(void (**)(void))(*v322 + 8 * v323))();
LABEL_264:
                v324 = objc_msgSend(*((id *)&v518 + 1), "contents");
                v325 = objc_msgSend((id)v519, "contents");
                v326 = 0;
                v33 = v507;
                v327 = *(_QWORD *)(a4 + 16);
                v328 = *(_DWORD *)(a4 + 4);
                v329 = v447;
                v330 = *(_DWORD *)(a4 + 12);
                do
                {
                  v333 = *(float *)(v325 + v326);
                  v334 = 1.0;
                  if (v333 > 0.0)
                    v334 = 1.0 - (float)(*(float *)(v324 + v326) / v333);
                  v331 = *(v329 - 1);
                  v332 = *v329;
                  v329 += 2;
                  *(float *)(v327 + 4 * ((v331 + v328 * v332) * v330)) = v334;
                  v326 += 4;
                }
                while (v326 != 0x400000);
                v225 = 0;
                v503 = v317;
                goto LABEL_269;
              }
              v319 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v319 + 16))(v319);
            }
            v543 = (_BYTE *)v319;
            goto LABEL_254;
          }
          v318 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v318 + 16))(v318);
        }
        v545 = (_BYTE *)v318;
        goto LABEL_249;
      }
      v111 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v111 + 16))(v111);
    }
    v547 = (_QWORD *)v111;
    goto LABEL_193;
  }
  v516 = 0u;
  v517 = 0u;
  __dst = 0u;
  v515 = 0u;
  if (v483 == -1)
    goto LABEL_187;
  v76 = a14[3];
  if (!v76)
    goto LABEL_93;
  if ((_QWORD *)v76 != a14)
  {
    v76 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v76 + 16))(v76);
LABEL_93:
    v537 = (_QWORD *)v76;
    goto LABEL_101;
  }
  v537 = v536;
  (*(void (**)(_QWORD *, _QWORD *))(*a14 + 24))(a14, v536);
LABEL_101:
  v112 = sub_23996D5B0((uint64_t)&__dst, 0x100000u, (uint64_t)a5, a11, a12, a13, (uint64_t)v536, a15);
  if (v537 == v536)
  {
    (*(void (**)(void))(v536[0] + 32))();
    if (!v112)
      goto LABEL_187;
  }
  else
  {
    if (v537)
    {
      (*(void (**)(void))(*v537 + 40))();
      if (v112)
        goto LABEL_104;
LABEL_187:
      v73 = 0;
      goto LABEL_310;
    }
    if (!v112)
      goto LABEL_187;
  }
LABEL_104:
  v113 = operator new(0x800000uLL);
  bzero(v113, 0x800000uLL);
  v451 = objc_msgSend((id)v516, "contents");
  v448 = objc_msgSend(*((id *)&v516 + 1), "contents");
  v115 = a1;
  if (!v493 || !v33)
  {
    v220 = 1;
    goto LABEL_309;
  }
  v116 = 0;
  v117 = 0;
  v118 = 0;
  v440 = v113 + 1;
  v494 = 1;
  v446 = v113;
  while (1)
  {
    if (!*(_BYTE *)(v36 + v117 + v118 * v33))
      goto LABEL_178;
    v511 = v116;
    v119 = &v113[2 * v116];
    *v119 = v117;
    v119[1] = v118;
    v120 = *(_QWORD *)(a3 + 16);
    v121 = (v117 + *(_DWORD *)(a3 + 4) * v118) * *(_DWORD *)(a3 + 12);
    LODWORD(v522[0]) = *(_DWORD *)(v120 + 16 * v121 + 4);
    sub_23996362C(v115, (unsigned int *)v522, (uint64_t)&v525);
    v122 = *v525;
    v123 = (uint64_t *)(*(_QWORD *)(v115 + 8) + 16 * *(unsigned int *)(v115 + 176));
    v125 = *v123;
    v124 = (std::__shared_weak_count *)v123[1];
    if (v124)
    {
      v126 = (unint64_t *)&v124->__shared_owners_;
      do
        v127 = __ldxr(v126);
      while (__stxr(v127 + 1, v126));
      do
        v128 = __ldaxr(v126);
      while (__stlxr(v128 - 1, v126));
      if (!v128)
      {
        ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
        std::__shared_weak_count::__release_weak(v124);
        v115 = a1;
      }
    }
    v129 = v120 + 16 * v121;
    v131 = *(float *)(v129 + 8);
    v130 = (float *)(v129 + 8);
    v502 = v131;
    v504 = *(float32x4_t *)(*(_QWORD *)(v125 + 40) + 16 * v122);
    v132 = v525[1];
    v133 = (uint64_t *)(*(_QWORD *)(v115 + 8) + 16 * *(unsigned int *)(v115 + 176));
    v134 = *v133;
    v135 = (std::__shared_weak_count *)v133[1];
    if (v135)
    {
      v136 = (unint64_t *)&v135->__shared_owners_;
      do
        v137 = __ldxr(v136);
      while (__stxr(v137 + 1, v136));
      do
        v138 = __ldaxr(v136);
      while (__stlxr(v138 - 1, v136));
      if (!v138)
      {
        ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
        std::__shared_weak_count::__release_weak(v135);
        v115 = a1;
      }
    }
    v139 = *(float32x4_t *)(*(_QWORD *)(v134 + 40) + 16 * v132);
    v140 = v130[1];
    v141 = v525[2];
    v142 = (uint64_t *)(*(_QWORD *)(v115 + 8) + 16 * *(unsigned int *)(v115 + 176));
    v143 = *v142;
    v144 = (std::__shared_weak_count *)v142[1];
    v498 = v140;
    v500 = v139;
    if (v144)
    {
      v145 = (unint64_t *)&v144->__shared_owners_;
      do
        v146 = __ldxr(v145);
      while (__stxr(v146 + 1, v145));
      do
        v147 = __ldaxr(v145);
      while (__stlxr(v147 - 1, v145));
      if (!v147)
      {
        ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
        std::__shared_weak_count::__release_weak(v144);
        v140 = v498;
        v139 = v500;
        v115 = a1;
      }
    }
    v148 = *(float32x4_t *)(*(_QWORD *)(v143 + 40) + 16 * v141);
    v149 = *(_QWORD *)(v491 + 40);
    v150 = *v525;
    v151 = *(float32x4_t *)(v149 + 16 * v525[1]);
    v152 = *(float32x4_t *)(v149 + 16 * v150);
    v153 = *(float32x4_t *)(v149 + 16 * v525[2]);
    v155 = *v130;
    v154 = v130[1];
    v156 = (uint64_t *)(*(_QWORD *)(v115 + 8) + 16 * *(unsigned int *)(v115 + 176));
    v157 = *v156;
    v158 = (std::__shared_weak_count *)v156[1];
    if (v158)
    {
      v159 = (unint64_t *)&v158->__shared_owners_;
      do
        v160 = __ldxr(v159);
      while (__stxr(v160 + 1, v159));
      do
        v161 = __ldaxr(v159);
      while (__stlxr(v161 - 1, v159));
      if (!v161)
      {
        v477 = v151;
        v484 = v148;
        v465 = v152;
        v471 = v153;
        v455 = v155;
        v459 = v154;
        ((void (*)(std::__shared_weak_count *))v158->__on_zero_shared)(v158);
        std::__shared_weak_count::__release_weak(v158);
        v155 = v455;
        v154 = v459;
        v152 = v465;
        v153 = v471;
        v151 = v477;
        v148 = v484;
        v140 = v498;
        v139 = v500;
        v115 = a1;
      }
    }
    v162 = *(float32x4_t *)(*(_QWORD *)(v157 + 40) + 16 * v150);
    v163 = v525[1];
    v164 = (uint64_t *)(*(_QWORD *)(v115 + 8) + 16 * *(unsigned int *)(v115 + 176));
    v165 = *v164;
    v166 = (std::__shared_weak_count *)v164[1];
    if (v166)
    {
      v167 = (unint64_t *)&v166->__shared_owners_;
      do
        v168 = __ldxr(v167);
      while (__stxr(v168 + 1, v167));
      do
        v169 = __ldaxr(v167);
      while (__stlxr(v169 - 1, v167));
      if (!v169)
      {
        v443 = v162;
        v478 = v151;
        v485 = v148;
        v466 = v152;
        v472 = v153;
        v456 = v155;
        v460 = v154;
        ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
        std::__shared_weak_count::__release_weak(v166);
        v155 = v456;
        v154 = v460;
        v152 = v466;
        v153 = v472;
        v151 = v478;
        v148 = v485;
        v162 = v443;
        v140 = v498;
        v139 = v500;
        v115 = a1;
      }
    }
    v170 = *(float32x4_t *)(*(_QWORD *)(v165 + 40) + 16 * v163);
    v171 = v525[2];
    v172 = (uint64_t *)(*(_QWORD *)(v115 + 8) + 16 * *(unsigned int *)(v115 + 176));
    v173 = *v172;
    v174 = (std::__shared_weak_count *)v172[1];
    if (v174)
    {
      v175 = (unint64_t *)&v174->__shared_owners_;
      do
        v176 = __ldxr(v175);
      while (__stxr(v176 + 1, v175));
      do
        v177 = __ldaxr(v175);
      while (__stlxr(v177 - 1, v175));
      if (!v177)
      {
        v444 = v162;
        v479 = v151;
        v486 = v148;
        v467 = v152;
        v473 = v153;
        v457 = v155;
        v461 = v154;
        v439 = v170;
        ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
        std::__shared_weak_count::__release_weak(v174);
        v170 = v439;
        v155 = v457;
        v154 = v461;
        v152 = v467;
        v153 = v473;
        v151 = v479;
        v148 = v486;
        v162 = v444;
        v140 = v498;
        v139 = v500;
        v115 = a1;
      }
    }
    v178 = vaddq_f32(vmulq_n_f32(v504, v502), vmulq_n_f32(v139, v140));
    v179 = (float)(1.0 - v155) - v154;
    v180 = vmulq_n_f32(v148, v179);
    v181 = vaddq_f32(vaddq_f32(vmulq_n_f32(v152, v155), vmulq_n_f32(v151, v154)), vmulq_n_f32(v153, v179));
    v182 = vmulq_f32(v181, v181);
    v182.i32[3] = 0;
    v182.i64[0] = vpaddq_f32(v182, v182).u64[0];
    v182.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v182.f32));
    v183 = *(float32x4_t *)(*(_QWORD *)(v173 + 40) + 16 * v171);
    v184 = vaddq_f32(v178, v180);
    v185 = (int32x4_t)vsubq_f32(v170, v162);
    v186 = (int32x4_t)vsubq_f32(v183, v170);
    v187 = (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v186, (int8x16_t)v186, 4uLL), v186);
    v188 = (float32x4_t)vzip2q_s32(vzip1q_s32(v186, (int32x4_t)vextq_s8((int8x16_t)v186, (int8x16_t)v186, 0xCuLL)), v186);
    v189 = vmlsq_f32(vmulq_f32((float32x4_t)vzip2q_s32(vzip1q_s32(v185, (int32x4_t)vextq_s8((int8x16_t)v185, (int8x16_t)v185, 0xCuLL)), v185), v187), v188, (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v185, (int8x16_t)v185, 4uLL), v185));
    v190 = vmulq_f32(v189, v189);
    v190.i32[3] = 0;
    v191 = vdivq_f32(v181, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v182.f32, 0));
    v190.i64[0] = vpaddq_f32(v190, v190).u64[0];
    v190.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v190.f32));
    v192 = vdivq_f32(v189, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v190.f32, 0));
    v193 = vmulq_f32(v191, v192);
    v193.i32[3] = 0;
    v194 = vpaddq_f32(v193, v193);
    v194.f32[0] = vaddv_f32(*(float32x2_t *)v194.f32);
    v188.i32[0] = 0;
    v195 = (float32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_f32(v188, v194), 0), (int8x16_t)vnegq_f32(v192), (int8x16_t)v192);
    v196 = vmulq_f32(v162, v195);
    v196.i32[3] = 0;
    v197 = vmulq_f32(v170, v195);
    v197.i32[3] = 0;
    v198 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v196, v196));
    v199 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v197, v197));
    v200 = vmulq_f32(v183, v195);
    v200.i32[3] = 0;
    v201 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v200, v200));
    if (v199 > v198)
      v198 = v199;
    if (v201 > v198)
      v198 = v201;
    v202 = vmulq_f32(v184, v195);
    v202.i32[3] = 0;
    v203 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v202, v202));
    if (v198 > v203)
      v184 = vaddq_f32(v184, vmulq_n_f32(v191, (float)(v198 - v203) + a8));
    v33 = v507;
    v75 = a14;
    v204 = 12 * v511;
    v205 = v451 + v204;
    *(_QWORD *)v205 = v184.i64[0];
    *(_DWORD *)(v205 + 8) = v184.i32[2];
    v206 = v448 + v204;
    *(_QWORD *)v206 = v191.i64[0];
    *(_DWORD *)(v206 + 8) = v191.i32[2];
    v116 = v511 + 1;
    v207 = v494 & 1;
    if ((v494 & 1) != 0 && v511 == 0xFFFFF)
    {
      v208 = v509[3];
      if (v208)
      {
        if ((_QWORD *)v208 == v509)
        {
          v535 = v534;
          (*(void (**)(_QWORD *, _BYTE *))(*v509 + 24))(v509, v534);
LABEL_157:
          v209 = a14[3];
          if (v209)
          {
            if ((_QWORD *)v209 == a14)
            {
              v533 = v532;
              (*(void (**)(_QWORD *, _BYTE *))(*a14 + 24))(a14, v532);
LABEL_162:
              v207 = sub_23996D91C((uint64_t)&__dst, 0x100000u, v453, a8, a9, v114, a11, a12, (uint64_t)v532);
              v210 = v533;
              if (v533 == v532)
              {
                v210 = v532;
                v211 = 4;
              }
              else
              {
                if (!v533)
                  goto LABEL_167;
                v211 = 5;
              }
              (*(void (**)(void))(*v210 + 8 * v211))();
LABEL_167:
              v212 = v535;
              if (v535 == v534)
              {
                v212 = v534;
                v213 = 4;
              }
              else
              {
                if (!v535)
                  goto LABEL_172;
                v213 = 5;
              }
              (*(void (**)(void))(*v212 + 8 * v213))();
LABEL_172:
              v214 = objc_msgSend((id)v517, "contents");
              v215 = 0;
              v216 = *(_QWORD *)(a4 + 16);
              v217 = *(_DWORD *)(a4 + 4);
              v218 = v440;
              v219 = *(_DWORD *)(a4 + 12);
              do
              {
                *(float *)(v216 + 4 * ((*(v218 - 1) + v217 * *v218) * v219)) = 1.0
                                                                                             - *(float *)(v214 + v215);
                v218 += 2;
                v215 += 4;
              }
              while (v215 != 0x400000);
              v116 = 0;
              v494 = v207;
              v115 = a1;
              goto LABEL_175;
            }
            v209 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v209 + 16))(v209);
          }
          v533 = (_BYTE *)v209;
          goto LABEL_162;
        }
        v208 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v208 + 16))(v208);
      }
      v535 = (_BYTE *)v208;
      goto LABEL_157;
    }
LABEL_175:
    if (!v207)
    {
      v117 = v507;
      v118 = v493;
    }
    v113 = v446;
LABEL_178:
    if (++v117 >= v33)
    {
      v117 = 0;
      if (++v118 >= v493)
        break;
    }
  }
  v220 = v494 & 1;
  if ((v494 & 1) != 0 && v116)
  {
    v221 = v509[3];
    if (!v221)
      goto LABEL_185;
    if ((_QWORD *)v221 == v509)
    {
      v531 = v530;
      (*(void (**)(_QWORD *, _BYTE *))(*v509 + 24))(v509, v530);
    }
    else
    {
      v221 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v221 + 16))(v221);
LABEL_185:
      v531 = (_BYTE *)v221;
    }
    v337 = v75[3];
    if (v337)
    {
      v338 = v116;
      if ((_QWORD *)v337 != v75)
      {
        v337 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v337 + 16))(v337);
        goto LABEL_295;
      }
      v529 = v528;
      (*(void (**)(_QWORD *, _BYTE *))(*v75 + 24))(v75, v528);
    }
    else
    {
      v338 = v116;
LABEL_295:
      v529 = (_BYTE *)v337;
    }
    v220 = sub_23996D91C((uint64_t)&__dst, v338, v453, a8, a9, v114, a11, a12, (uint64_t)v528);
    v339 = v529;
    if (v529 == v528)
    {
      v340 = 4;
      v339 = v528;
LABEL_301:
      (*(void (**)(void))(*v339 + 8 * v340))();
    }
    else if (v529)
    {
      v340 = 5;
      goto LABEL_301;
    }
    v341 = v531;
    if (v531 == v530)
    {
      v342 = 4;
      v341 = v530;
LABEL_306:
      (*(void (**)(void))(*v341 + 8 * v342))();
    }
    else if (v531)
    {
      v342 = 5;
      goto LABEL_306;
    }
    v343 = (float *)objc_msgSend((id)v517, "contents");
    v344 = *(_QWORD *)(a4 + 16);
    v345 = *(_DWORD *)(a4 + 4);
    v346 = v338;
    v347 = v113 + 1;
    v348 = *(_DWORD *)(a4 + 12);
    do
    {
      v349 = *v343++;
      *(float *)(v344 + 4 * ((*(v347 - 1) + v345 * *v347) * v348)) = 1.0 - v349;
      v347 += 2;
      --v346;
    }
    while (v346);
  }
LABEL_309:
  operator delete(v113);
  v73 = v220 != 0;
LABEL_310:

LABEL_311:
  objc_autoreleasePoolPop(context);
  sub_23993BC9C(a5, &v524);
  v351 = v509[3];
  if (v351)
  {
    if ((((*(unsigned int (**)(uint64_t))(*(_QWORD *)v351 + 48))(v351) | v73 ^ 1) & 1) != 0)
    {
LABEL_313:
      v73 = 0;
      goto LABEL_403;
    }
LABEL_315:
    v352 = *(_DWORD *)(a2 + 8);
    if (v352)
    {
      v353 = *(unsigned int *)(a2 + 4);
      if (v353 >= 2)
      {
        v354 = 0;
        v355 = *(_QWORD *)(a2 + 16);
        v356 = *(_DWORD *)(a2 + 12);
        do
        {
          v357 = v353 * v354;
          v358 = *(_QWORD *)(a4 + 16);
          v359 = *(_DWORD *)(a4 + 4);
          v360 = *(unsigned int *)(a4 + 12);
          v361 = v354 * v33;
          if (v354)
          {
            v362 = v359 * (v354 - 1);
            v363 = v360 & 0xFFFFFFF8;
            if (v354 < v352 - 1)
            {
              v364 = v359 * (v354 | 1);
              v365 = v360 + v360 * v359 * v354;
              v366 = 1;
              while (1)
              {
                if (!*(_BYTE *)(v355 + (v356 * (v357 + v366)))
                  || *(_BYTE *)(v36 + (v361 + v366))
                  || !(_DWORD)v360)
                {
                  goto LABEL_322;
                }
                v367 = 4 * v365;
                *(float *)v350.i32 = (float)(*(float *)(v358 + 4 * ((v362 + v366) * v360))
                                           + *(float *)(v358 + 4 * ((v364 + v366) * v360)))
                                   * 0.5;
                if (v360 >= 8)
                {
                  v369 = (int32x4_t *)(v358 + 16 + v367);
                  v370 = vdupq_lane_s32(v350, 0);
                  v371 = v360 & 0xFFFFFFF8;
                  do
                  {
                    v369[-1] = v370;
                    *v369 = v370;
                    v369 += 2;
                    v371 -= 8;
                  }
                  while (v371);
                  v368 = v360 & 0xFFFFFFF8;
                  if (v363 == v360)
                    goto LABEL_322;
                }
                else
                {
                  v368 = 0;
                }
                v372 = (_DWORD *)(v358 + v367 + 4 * v368);
                v373 = v360 - v368;
                do
                {
                  *v372++ = v350.i32[0];
                  --v373;
                }
                while (v373);
LABEL_322:
                v366 += 2;
                v365 += 2 * v360;
                if (v366 >= v353)
                  goto LABEL_318;
              }
            }
            v383 = v360 + v360 * v359 * v354;
            v384 = 1;
            while (2)
            {
              if (*(_BYTE *)(v355 + (v356 * (v357 + v384)))
                && !*(_BYTE *)(v36 + (v361 + v384))
                && (_DWORD)v360)
              {
                v385 = 4 * v383;
                v350.i32[0] = *(_DWORD *)(v358 + 4 * ((v362 + v384) * v360));
                if (v360 < 8)
                {
                  v386 = 0;
                  goto LABEL_357;
                }
                v387 = (int32x4_t *)(v358 + 16 + v385);
                v388 = vdupq_lane_s32(v350, 0);
                v389 = v360 & 0xFFFFFFF8;
                do
                {
                  v387[-1] = v388;
                  *v387 = v388;
                  v387 += 2;
                  v389 -= 8;
                }
                while (v389);
                v386 = v360 & 0xFFFFFFF8;
                if (v363 != v360)
                {
LABEL_357:
                  v390 = (_DWORD *)(v358 + v385 + 4 * v386);
                  v391 = v360 - v386;
                  do
                  {
                    *v390++ = v350.i32[0];
                    --v391;
                  }
                  while (v391);
                }
              }
              v384 += 2;
              v383 += 2 * v360;
              if (v384 >= v353)
                goto LABEL_318;
              continue;
            }
          }
          v374 = *(_DWORD *)(a4 + 12);
          for (j = 1; j < v353; j += 2)
          {
            if (*(_BYTE *)(v355 + (v356 * (v357 + j)))
              && !*(_BYTE *)(v36 + (v361 + j))
              && (_DWORD)v360)
            {
              v376 = 4 * v374;
              v350.i32[0] = *(_DWORD *)(v358 + 4 * ((v359 + j) * v360));
              if (v360 < 8)
              {
                v377 = 0;
LABEL_344:
                v381 = (_DWORD *)(v358 + v376 + 4 * v377);
                v382 = v360 - v377;
                do
                {
                  *v381++ = v350.i32[0];
                  --v382;
                }
                while (v382);
                goto LABEL_335;
              }
              v378 = (int32x4_t *)(v358 + 16 + v376);
              v379 = vdupq_lane_s32(v350, 0);
              v380 = v360 & 0xFFFFFFF8;
              do
              {
                v378[-1] = v379;
                *v378 = v379;
                v378 += 2;
                v380 -= 8;
              }
              while (v380);
              v377 = v360 & 0xFFFFFFF8;
              if (v377 != v360)
                goto LABEL_344;
            }
LABEL_335:
            v374 += 2 * v360;
          }
LABEL_318:
          v354 += 2;
        }
        while (v354 < v352);
      }
      v392 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v392)
      {
        v393 = 0;
        v394 = 0;
        v395 = *(_QWORD *)(a2 + 16);
        v396 = *(_DWORD *)(a2 + 12);
        v397 = (v392 - 1);
        v398 = 2 * v396;
        do
        {
          v399 = *(unsigned int *)(a4 + 12);
          if ((_DWORD)v399)
          {
            v400 = v392 * v394;
            v401 = v394 * v507;
            v402 = *(_QWORD *)(a4 + 16);
            v403 = *(_DWORD *)(a4 + 4);
            v404 = v403 * v394;
            v405 = (v399 + v399 * v403 * v394);
            if (v399 >= 8)
            {
              v415 = 0;
              v416 = v399 * v403 * v394;
              do
              {
                if (*(_BYTE *)(v395 + (v396 * (v400 + v415)))
                  && !*(_BYTE *)(v36 + v401 + v415))
                {
                  if (v415)
                  {
                    v350.i32[0] = *(_DWORD *)(v402 + 4 * ((v415 + v404 - 1) * v399));
                    if (v415 < v397)
                      *(float *)v350.i32 = (float)(*(float *)v350.i32
                                                 + *(float *)(v402
                                                            + 4
                                                            * ((v415 | 1) + v404)
                                                            * v399))
                                         * 0.5;
                  }
                  else
                  {
                    v350.i32[0] = *(_DWORD *)(v402 + 4 * v405);
                  }
                  v417 = 4 * v416;
                  v418 = (_DWORD *)(v402 + ((4 * v399) & 0x3FFFFFFE0) + v417);
                  v419 = (int32x4_t *)(v402 + 16 + v417);
                  v420 = vdupq_lane_s32(v350, 0);
                  v421 = v399 & 0xFFFFFFF8;
                  do
                  {
                    v419[-1] = v420;
                    *v419 = v420;
                    v419 += 2;
                    v421 -= 8;
                  }
                  while (v421);
                  if (v399 != (v399 & 0xFFFFFFF8))
                  {
                    v422 = v399 - (v399 & 0xFFFFFFF8);
                    do
                    {
                      *v418++ = v350.i32[0];
                      --v422;
                    }
                    while (v422);
                  }
                }
                v415 += 2;
                v416 += 2 * v399;
              }
              while (v415 < v392);
            }
            else
            {
              if (*(_BYTE *)(v395 + (v396 * v400)))
              {
                if (!*(_BYTE *)(v36 + v401))
                {
                  v406 = (_DWORD *)(v402 + 4 * (v404 * v399));
                  v407 = *(_DWORD *)(v402 + 4 * v405);
                  *v406 = v407;
                  if ((_DWORD)v399 != 1)
                  {
                    v406[1] = v407;
                    if ((_DWORD)v399 != 2)
                    {
                      v406[2] = v407;
                      if ((_DWORD)v399 != 3)
                      {
                        v406[3] = v407;
                        if ((_DWORD)v399 != 4)
                        {
                          v406[4] = v407;
                          if ((_DWORD)v399 != 5)
                          {
                            v406[5] = v407;
                            if ((_DWORD)v399 != 6)
                              v406[6] = v407;
                          }
                        }
                      }
                    }
                  }
                }
              }
              if (v392 >= 3)
              {
                v408 = 0;
                v409 = v399 * (v404 + 3);
                v410 = v399 * (v404 + 2);
                v411 = v398;
                for (k = 2; k < v392; k += 2)
                {
                  if (*(_BYTE *)(v395 + v411) && !*(_BYTE *)(v36 + (v393 + k)))
                  {
                    v413 = *(float *)(v402 + 4 * (v405 + v408));
                    if (k < v397)
                      v413 = (float)(v413 + *(float *)(v402 + 4 * (v409 + v408))) * 0.5;
                    v414 = (float *)(v402 + 4 * (v410 + v408));
                    *v414 = v413;
                    if ((_DWORD)v399 != 1)
                    {
                      v414[1] = v413;
                      if ((_DWORD)v399 != 2)
                      {
                        v414[2] = v413;
                        if ((_DWORD)v399 != 3)
                        {
                          v414[3] = v413;
                          if ((_DWORD)v399 != 4)
                          {
                            v414[4] = v413;
                            if ((_DWORD)v399 != 5)
                            {
                              v414[5] = v413;
                              if ((_DWORD)v399 != 6)
                                v414[6] = v413;
                            }
                          }
                        }
                      }
                    }
                  }
                  v408 += 2 * v399;
                  v411 += 2 * v396;
                }
              }
            }
          }
          ++v394;
          v393 += v507;
          v398 += v392 * v396;
        }
        while (v394 != v352);
      }
    }
    v73 = 1;
  }
  else if ((_DWORD)v73)
  {
    goto LABEL_315;
  }
LABEL_403:
  MEMORY[0x23B83E2F8](v36, 0x1000C8077774924);
  if (v525)
  {
    v526 = v525;
    operator delete(v525);
  }
  return v73;
}

void sub_23996FD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61)
{
  unint64_t *v62;
  uint64_t v63;
  void *v64;

  v62 = (unint64_t *)STACK[0x340];
  if ((unint64_t *)STACK[0x340] == &STACK[0x328])
  {
    v63 = 4;
    v62 = &STACK[0x328];
  }
  else
  {
    if (!v62)
      goto LABEL_6;
    v63 = 5;
  }
  (*(void (**)(void))(*v62 + 8 * v63))();
LABEL_6:
  operator delete(__p);
  sub_239970140(&a61);
  if (STACK[0x228])
    operator delete((void *)STACK[0x228]);
  MEMORY[0x23B83E2F8](a13, 0x1000C8077774924);
  v64 = (void *)STACK[0x250];
  if (!STACK[0x250])
    _Unwind_Resume(a1);
  STACK[0x258] = (unint64_t)v64;
  operator delete(v64);
  _Unwind_Resume(a1);
}

id *sub_2399700E0(id *a1)
{

  return a1;
}

id *sub_239970140(id *a1)
{

  return a1;
}

uint64_t sub_2399701E0(uint64_t a1, int a2, char a3, unsigned int a4, int *a5, uint64_t a6, char a7, _QWORD *a8, float a9, uint64_t a10)
{
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v26;
  uint64_t v27;
  void *__p[2];
  char v29;
  _OWORD v30[2];
  __int128 v31;
  _BYTE v32[28];
  int v33;
  char v34;
  uint64_t v35;
  float v36;
  char v37;
  int v38;
  char v39;
  int v40;
  char v41;
  uint64_t v42;
  __int16 v43;
  int v44;
  int v45;
  _QWORD v46[3];
  _QWORD *v47;
  _QWORD v48[3];
  _QWORD *v49;
  _QWORD v50[3];
  _QWORD *v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v37 = 0;
  v38 = 100000;
  v39 = 0;
  v42 = 1;
  v40 = a2;
  v41 = a3;
  v35 = a4;
  v36 = a9;
  v43 = 257;
  v44 = *a5;
  if (a7)
  {
    v31 = 0u;
    memset(v32, 0, sizeof(v32));
    memset(v30, 0, sizeof(v30));
    v33 = 3;
    v34 = 1;
    v50[0] = &off_250AF0D80;
    v51 = v50;
    v13 = a8[3];
    if (v13)
    {
      if ((_QWORD *)v13 == a8)
      {
        v49 = v48;
        (*(void (**)(_QWORD *, _QWORD *))(*a8 + 24))(a8, v48);
LABEL_8:
        v15 = (uint64_t)v51;
        if (v51)
        {
          if (v51 == v50)
          {
            v47 = v46;
            (*(void (**)(uint64_t, _QWORD *))(v50[0] + 24))((uint64_t)v50, v46);
LABEL_13:
            v14 = sub_239933010(a1, (uint64_t)&v35, (uint64_t)v30, v48, v46);
            v16 = v47;
            if (v47 == v46)
            {
              v17 = 4;
              v16 = v46;
            }
            else
            {
              if (!v47)
                goto LABEL_18;
              v17 = 5;
            }
            (*(void (**)(void))(*v16 + 8 * v17))();
LABEL_18:
            v18 = v49;
            if (v49 == v48)
            {
              v19 = 4;
              v18 = v48;
            }
            else
            {
              if (!v49)
                goto LABEL_23;
              v19 = 5;
            }
            (*(void (**)(void))(*v18 + 8 * v19))();
LABEL_23:
            switch(v33)
            {
              case 0:
                goto LABEL_34;
              case 1:
                *(_DWORD *)(a6 + 384) = 22;
                v21 = *(_QWORD *)(a10 + 24);
                if (!v21)
                  goto LABEL_34;
                v29 = 0;
                LOBYTE(__p[0]) = 0;
                v45 = 22;
                (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v21 + 48))(v21, &v45, __p);
                break;
              case 2:
                *(_DWORD *)(a6 + 384) = 11;
                v20 = *(_QWORD *)(a10 + 24);
                if (!v20)
                  goto LABEL_34;
                v29 = 0;
                LOBYTE(__p[0]) = 0;
                v45 = 11;
                (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v20 + 48))(v20, &v45, __p);
                break;
              default:
                v22 = a8[3];
                if (!v22 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 48))(v22) & 1) == 0)
                {
                  *(_QWORD *)(a6 + 224) = *(_QWORD *)&v30[0];
                  *(_QWORD *)(a6 + 232) = *((_QWORD *)&v31 + 1);
                  *(_QWORD *)(a6 + 256) = *(_QWORD *)v32;
                  *(_QWORD *)(a6 + 264) = *(_QWORD *)&v32[8];
                  *(_QWORD *)(a6 + 240) = *(_QWORD *)&v32[16];
                  *(_DWORD *)(a6 + 248) = *(_DWORD *)&v32[24];
                  v26 = v51;
                  if (v51 == v50)
                  {
                    v27 = 4;
                    v26 = v50;
                  }
                  else
                  {
                    if (!v51)
                      return v14;
                    v27 = 5;
                  }
                  (*(void (**)(void))(*v26 + 8 * v27))();
                  return v14;
                }
LABEL_34:
                v23 = v51;
                if (v51 == v50)
                {
                  v24 = 4;
                  v23 = v50;
                }
                else
                {
                  if (!v51)
                    return 0;
                  v24 = 5;
                }
                (*(void (**)(void))(*v23 + 8 * v24))();
                return 0;
            }
            if (v29 < 0)
              operator delete(__p[0]);
            goto LABEL_34;
          }
          v15 = (*(uint64_t (**)(_QWORD *))(*v51 + 16))(v51);
        }
        v47 = (_QWORD *)v15;
        goto LABEL_13;
      }
      v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 16))(v13);
    }
    v49 = (_QWORD *)v13;
    goto LABEL_8;
  }
  return sub_239932ED4(a1, (uint64_t)&v35);
}

void sub_239970524(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v17;

  if (a15 < 0)
    operator delete(__p);
  v17 = *(_QWORD *)(v15 - 64);
  if (v17 == v15 - 88)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v15 - 88) + 32))(v15 - 88);
    _Unwind_Resume(exception_object);
  }
  if (!v17)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)v17 + 40))(v17);
  _Unwind_Resume(exception_object);
}

double sub_239970604(size_t a1, int a2, char a3, int a4, int *a5, uint64_t a6, char a7, uint64_t a8)
{
  int v8;
  double result;
  uint64_t v12;
  void *__p;
  char v14;
  _OWORD v15[2];
  __int128 v16;
  _BYTE v17[28];
  int v18;
  char v19;
  float v20[2];
  char v21;
  int v22;
  int v23;
  int v24;

  v20[0] = 1.0472;
  LODWORD(v20[1]) = a2;
  v21 = a3;
  if (a4 == 2)
    v8 = 2;
  else
    v8 = 1;
  if (!a4)
    v8 = 0;
  v22 = v8;
  v23 = *a5;
  if (a7)
  {
    v16 = 0u;
    memset(v17, 0, sizeof(v17));
    memset(v15, 0, sizeof(v15));
    v18 = 3;
    v19 = 1;
    sub_239932E8C(a1, v20, (uint64_t)v15);
    if (v18)
    {
      if (v18 == 2)
      {
        *(_DWORD *)(a6 + 384) = 11;
        v12 = *(_QWORD *)(a8 + 24);
        if (v12)
        {
          v14 = 0;
          LOBYTE(__p) = 0;
          v24 = 11;
          (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v12 + 48))(v12, &v24, &__p);
          if (v14 < 0)
            operator delete(__p);
        }
      }
      else
      {
        *(_QWORD *)(a6 + 224) = *(_QWORD *)&v15[0];
        *(_QWORD *)(a6 + 232) = *((_QWORD *)&v16 + 1);
        result = *(double *)v17;
        *(_QWORD *)(a6 + 256) = *(_QWORD *)v17;
        *(_QWORD *)(a6 + 264) = *(_QWORD *)&v17[8];
      }
    }
  }
  else
  {
    sub_239932E90(a1, v20);
  }
  return result;
}

void sub_239970728(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239970744(size_t a1, int a2, char a3, unsigned int a4, uint64_t a5, char a6, unsigned int a7, int a8, float a9, int *a10, _QWORD *a11, _QWORD *a12)
{
  _QWORD *v18;
  _QWORD *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _BYTE v31[24];
  _BYTE *v32;
  _BYTE v33[24];
  _BYTE *v34;
  _QWORD v35[3];
  _QWORD *v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  if (a7 >= (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2))
  {
    v21 = (_QWORD *)a11[3];
    if (v21)
    {
      if (v21 == a11)
      {
        v36 = v35;
        (*(void (**)(_QWORD *, _QWORD *))(*a11 + 24))(a11, v35);
      }
      else
      {
        v36 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v21 + 16))(a11[3]);
      }
    }
    else
    {
      v36 = 0;
    }
    v27 = a12[3];
    if (v27)
    {
      if ((_QWORD *)v27 == a12)
      {
        v34 = v33;
        (*(void (**)(_QWORD *, _BYTE *))(*a12 + 24))(a12, v33);
LABEL_19:
        v24 = sub_2399701E0(a1, a2, a3, a4, a10, a5, a6, v35, a9, (uint64_t)v33);
        v28 = v34;
        if (v34 == v33)
        {
          v29 = 4;
          v28 = v33;
        }
        else
        {
          if (!v34)
            goto LABEL_24;
          v29 = 5;
        }
        (*(void (**)(void))(*v28 + 8 * v29))();
LABEL_24:
        v25 = v36;
        if (v36 == v35)
        {
          v26 = 4;
          v25 = v35;
          goto LABEL_28;
        }
        goto LABEL_25;
      }
      v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 16))(v27);
    }
    v34 = (_BYTE *)v27;
    goto LABEL_19;
  }
  v18 = (_QWORD *)a12[3];
  if (v18)
  {
    if (v18 == a12)
    {
      v32 = v31;
      (*(void (**)(_QWORD *, _BYTE *))(*a12 + 24))(a12, v31);
    }
    else
    {
      v32 = (_BYTE *)(*(uint64_t (**)(_QWORD *))(*v18 + 16))(v18);
    }
  }
  else
  {
    v32 = 0;
  }
  v22.n128_f64[0] = sub_239970604(a1, a2, a3, a8, a10, a5, a6, (uint64_t)v31);
  v24 = v23;
  v25 = v32;
  if (v32 == v31)
  {
    v26 = 4;
    v25 = v31;
LABEL_28:
    (*(void (**)(__n128))(*v25 + 8 * v26))(v22);
    return v24;
  }
LABEL_25:
  if (v25)
  {
    v26 = 5;
    goto LABEL_28;
  }
  return v24;
}

void sub_2399709A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t *a21)
{
  if (a21 == &a18)
  {
    (*(void (**)(void))(a18 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (!a21)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*a21 + 40))();
  _Unwind_Resume(exception_object);
}

BOOL sub_239970A5C(uint64_t a1, size_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5, uint64_t a6, char a7, uint64_t a8, _QWORD *a9, _QWORD *a10, uint64_t a11, std::chrono::system_clock::time_point *a12)
{
  _QWORD *v17;
  uint64_t v18;
  unsigned int v19;
  float v20;
  unsigned int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::chrono::system_clock::time_point v28;
  char *v29;
  size_t v30;
  size_t v31;
  void *p_p;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char *v36;
  size_t v37;
  size_t v38;
  void *v39;
  size_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  _BOOL4 v48;
  int v49;
  uint64_t v50;
  __n128 v51;
  int v52;
  int v53;
  unsigned int v54;
  float v55;
  int v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  unsigned int v65;
  float v66;
  uint64_t v67;
  int v68;
  int v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v87;
  char *v88;
  size_t v89;
  size_t v90;
  void **p_dst;
  uint64_t v92;
  uint64_t v93;
  int v94;
  int v95;
  void **__dst;
  size_t v100;
  unint64_t v101;
  float v102;
  __int16 v103;
  int v104;
  void *__p;
  size_t v106;
  unint64_t v107;
  _BYTE v108[24];
  _BYTE *v109;
  _QWORD v110[3];
  _QWORD *v111;
  _QWORD v112[3];
  _QWORD *v113;
  _QWORD v114[3];
  _QWORD *v115;
  _BYTE v116[24];
  _BYTE *v117;
  _QWORD v118[3];
  _QWORD *v119;
  uint64_t v120;

  v120 = *MEMORY[0x24BDAC8D0];
  kdebug_trace();
  sub_23995F9AC((char **)a2, a1);
  v17 = a9;
  v18 = (*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
  v19 = *(_DWORD *)(a3 + 4);
  v20 = 0.0;
  if (v19 <= v18)
  {
    v20 = *(float *)a3;
    v21 = (float)((float)(1.0 - *(float *)a3) * (float)v18);
    if (v19 > v21 || (v19 = *(_DWORD *)(a3 + 8), v19 < v21))
      v20 = 1.0 - (float)((float)v19 / (float)v18);
  }
  v103 = 256;
  v104 = 1065353216;
  v102 = v20;
  if (v18 >= 0x1E8481 && v20 > 0.99)
    HIBYTE(v103) = 0;
  v22 = a9[3];
  if (!v22)
    goto LABEL_11;
  if ((_QWORD *)v22 != a9)
  {
    v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 16))(v22);
LABEL_11:
    v119 = (_QWORD *)v22;
    goto LABEL_13;
  }
  v119 = v118;
  (*(void (**)(_QWORD *, _QWORD *))(*a9 + 24))(a9, v118);
LABEL_13:
  sub_239941C04(a2, (int *)&v102, v118);
  v23 = v119;
  if (v119 == v118)
  {
    v24 = 4;
    v23 = v118;
    goto LABEL_17;
  }
  if (v119)
  {
    v24 = 5;
LABEL_17:
    (*(void (**)(void))(*v23 + 8 * v24))();
  }
  v25 = a9[3];
  if (v25)
  {
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v25 + 48))(v25) & 1) != 0)
      return 0;
    v26 = a9[3];
    if (v26)
    {
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v26 + 48))(v26) & 1) != 0)
        return 0;
    }
  }
  sub_23993EE78(a2, 2, 1, 1.0);
  v27 = *(_QWORD *)(a8 + 24);
  if (v27)
  {
    HIBYTE(v107) = 0;
    LOBYTE(__p) = 0;
    LODWORD(__dst) = 1097859072;
    (*(void (**)(uint64_t, void ***, void **))(*(_QWORD *)v27 + 48))(v27, &__dst, &__p);
    if (SHIBYTE(v107) < 0)
      operator delete(__p);
  }
  v28.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (a7)
    *(double *)(a6 + 120) = (double)(v28.__d_.__rep_ - a12->__d_.__rep_) / 1000000.0;
  a12->__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  kdebug_trace();
  kdebug_trace();
  v29 = off_256934418[0];
  v30 = strlen(off_256934418[0]);
  if (v30 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v31 = v30;
  if (v30 >= 0x17)
  {
    v33 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v30 | 7) != 0x17)
      v33 = v30 | 7;
    v34 = v33 + 1;
    p_p = operator new(v33 + 1);
    v106 = v31;
    v107 = v34 | 0x8000000000000000;
    __p = p_p;
    goto LABEL_34;
  }
  HIBYTE(v107) = v30;
  p_p = &__p;
  if (v30)
LABEL_34:
    memmove(p_p, v29, v31);
  *((_BYTE *)p_p + v31) = 0;
  LODWORD(v100) = 0;
  __dst = 0;
  v35 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&__dst, (unsigned __int8 *)&__p);
  if (SHIBYTE(v107) < 0)
    operator delete(__p);
  v36 = off_256934438[0];
  v37 = strlen(off_256934438[0]);
  if (v37 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v38 = v37;
  if (v37 >= 0x17)
  {
    v40 = a2;
    v41 = a7;
    v42 = a4;
    v43 = (v37 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v37 | 7) != 0x17)
      v43 = v37 | 7;
    v44 = v43 + 1;
    v39 = operator new(v43 + 1);
    v106 = v38;
    v107 = v44 | 0x8000000000000000;
    __p = v39;
    a4 = v42;
    a7 = v41;
    a2 = v40;
    v17 = a9;
    goto LABEL_44;
  }
  HIBYTE(v107) = v37;
  v39 = &__p;
  if (v37)
LABEL_44:
    memmove(v39, v36, v38);
  *((_BYTE *)v39 + v38) = 0;
  __dst = 0;
  v45 = sub_2394E5C88((uint64_t **)(a1 + 80), (uint64_t)&__dst, (unsigned __int8 *)&__p);
  v46 = v45;
  if ((SHIBYTE(v107) & 0x80000000) == 0)
  {
    v48 = v35 != -1 && v45 != -1;
    v49 = *(_DWORD *)(a3 + 12);
    if (v49)
      goto LABEL_53;
LABEL_67:
    v59 = *a4;
    v60 = *a5;
    v61 = *(_DWORD *)(a3 + 24);
    v62 = a10[3];
    if (v62)
    {
      if ((_QWORD *)v62 == a10)
      {
        v117 = v116;
        (*(void (**)(_QWORD *, _BYTE *))(*a10 + 24))(a10, v116);
LABEL_80:
        v51.n128_f64[0] = sub_239970604(a2, v59, v60, v61, (int *)(a3 + 28), a6, a7, (uint64_t)v116);
        v68 = v69;
        v70 = v117;
        if (v117 == v116)
        {
          v71 = 4;
          v70 = v116;
        }
        else
        {
          if (!v117)
            goto LABEL_85;
          v71 = 5;
        }
        (*(void (**)(__n128))(*v70 + 8 * v71))(v51);
LABEL_85:
        v72 = v17[3];
        if (v72)
        {
          v73 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v72 + 48))(v72, v51);
          goto LABEL_123;
        }
        goto LABEL_126;
      }
      v62 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v62 + 16))(v62);
    }
    v117 = (_BYTE *)v62;
    goto LABEL_80;
  }
  operator delete(__p);
  v48 = v35 != -1 && v46 != -1;
  v49 = *(_DWORD *)(a3 + 12);
  if (!v49)
    goto LABEL_67;
LABEL_53:
  v50 = a11;
  if (v49 == 2)
  {
    if (v48 && !sub_239933AA8(a2, a1, a11))
    {
      v68 = 0;
      goto LABEL_108;
    }
    v52 = *(_DWORD *)a4;
    v53 = *(_DWORD *)a5;
    v54 = *(_DWORD *)(a3 + 16);
    v55 = *(float *)(a3 + 20);
    v56 = *(_DWORD *)(a3 + 24);
    v57 = v17[3];
    if (v57)
    {
      if ((_QWORD *)v57 == v17)
      {
        v115 = v114;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*v17 + 24))(v17, v114, v50);
LABEL_88:
        v74 = a10[3];
        if (v74)
        {
          if ((_QWORD *)v74 == a10)
          {
            v113 = v112;
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*a10 + 24))(a10, v112, v50);
LABEL_98:
            v68 = sub_239970744(a2, v52, v53, v54, a6, a7, 0x7A120u, v56, v55, (int *)(a3 + 28), v114, v112);
            v76 = v113;
            if (v113 == v112)
            {
              v77 = 4;
              v76 = v112;
            }
            else
            {
              if (!v113)
                goto LABEL_103;
              v77 = 5;
            }
            (*(void (**)(void))(*v76 + 8 * v77))();
LABEL_103:
            v78 = v115;
            if (v115 == v114)
            {
              v79 = 4;
              v78 = v114;
            }
            else
            {
              if (!v115)
                goto LABEL_108;
              v79 = 5;
            }
            (*(void (**)(void))(*v78 + 8 * v79))();
LABEL_108:
            v80 = v17[3];
            if (v80)
              goto LABEL_122;
LABEL_126:
            v87 = *(_QWORD *)(a8 + 24);
            if (v87
              && (HIBYTE(v107) = 0,
                  LOBYTE(__p) = 0,
                  LODWORD(__dst) = 1101529088,
                  (*(void (**)(uint64_t, void ***, void **, __n128))(*(_QWORD *)v87 + 48))(v87, &__dst, &__p, v51), SHIBYTE(v107) < 0))
            {
              operator delete(__p);
              if (v68)
              {
LABEL_129:
                v88 = off_256934448[0];
                v89 = strlen(off_256934448[0]);
                if (v89 > 0x7FFFFFFFFFFFFFF7)
                  sub_23941A5AC();
                v90 = v89;
                if (v89 >= 0x17)
                {
                  v92 = (v89 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v89 | 7) != 0x17)
                    v92 = v89 | 7;
                  v93 = v92 + 1;
                  p_dst = (void **)operator new(v92 + 1);
                  v100 = v90;
                  v101 = v93 | 0x8000000000000000;
                  __dst = p_dst;
                }
                else
                {
                  HIBYTE(v101) = v89;
                  p_dst = (void **)&__dst;
                  if (!v89)
                  {
LABEL_137:
                    *((_BYTE *)p_dst + v90) = 0;
                    __p = 0;
                    v106 = 0;
                    v107 = 0;
                    v94 = sub_23958C0D8((uint64_t **)(a2 + 80), (uint64_t)&__p, (unsigned __int8 *)&__dst);
                    v95 = v94;
                    if (SHIBYTE(v107) < 0)
                    {
                      operator delete(__p);
                      v85 = v95 != -1;
                      if (SHIBYTE(v101) < 0)
LABEL_143:
                        operator delete(__dst);
                    }
                    else
                    {
                      v85 = v94 != -1;
                      if (SHIBYTE(v101) < 0)
                        goto LABEL_143;
                    }
LABEL_144:
                    kdebug_trace();
                    a12->__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
                    return v85;
                  }
                }
                memmove(p_dst, v88, v90);
                goto LABEL_137;
              }
            }
            else if (v68)
            {
              goto LABEL_129;
            }
            v85 = 0;
            goto LABEL_144;
          }
          v74 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v74 + 16))(v74);
        }
        v113 = (_QWORD *)v74;
        goto LABEL_98;
      }
      v57 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 16))(v57);
    }
    v115 = (_QWORD *)v57;
    goto LABEL_88;
  }
  if (v48 && !sub_239933AA8(a2, a1, a11))
  {
    v68 = 0;
    goto LABEL_121;
  }
  v63 = *(_DWORD *)a4;
  v64 = *(_DWORD *)a5;
  v65 = *(_DWORD *)(a3 + 16);
  v66 = *(float *)(a3 + 20);
  v67 = v17[3];
  if (!v67)
    goto LABEL_76;
  if ((_QWORD *)v67 != v17)
  {
    v67 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v67 + 16))(v67);
LABEL_76:
    v111 = (_QWORD *)v67;
    goto LABEL_93;
  }
  v111 = v110;
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*v17 + 24))(v17, v110, v50);
LABEL_93:
  v75 = a10[3];
  if (!v75)
  {
LABEL_96:
    v109 = (_BYTE *)v75;
    goto LABEL_111;
  }
  if ((_QWORD *)v75 != a10)
  {
    v75 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v75 + 16))(v75);
    goto LABEL_96;
  }
  v109 = v108;
  (*(void (**)(_QWORD *, _BYTE *, uint64_t))(*a10 + 24))(a10, v108, v50);
LABEL_111:
  v68 = sub_2399701E0(a2, v63, v64, v65, (int *)(a3 + 28), a6, a7, v110, v66, (uint64_t)v108);
  v81 = v109;
  if (v109 == v108)
  {
    v82 = 4;
    v81 = v108;
  }
  else
  {
    if (!v109)
      goto LABEL_116;
    v82 = 5;
  }
  (*(void (**)(void))(*v81 + 8 * v82))();
LABEL_116:
  v83 = v111;
  if (v111 == v110)
  {
    v84 = 4;
    v83 = v110;
  }
  else
  {
    if (!v111)
      goto LABEL_121;
    v84 = 5;
  }
  (*(void (**)(void))(*v83 + 8 * v84))();
LABEL_121:
  v80 = v17[3];
  if (!v80)
    goto LABEL_126;
LABEL_122:
  v73 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v80 + 48))(v80);
LABEL_123:
  if ((v73 & 1) == 0)
    goto LABEL_126;
  return 0;
}

void sub_239971420(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,int a27,int a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,char *a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a42;
  if (a42 == &a39)
  {
    v49 = 4;
    v48 = &a39;
  }
  else
  {
    if (!a42)
      goto LABEL_6;
    v49 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v48 + 8 * v49))();
LABEL_6:
  if (a2 == 2)
  {
    __cxa_begin_catch(exception_object);
    if (a14)
      *(_DWORD *)(a18 + 384) = 1;
    if (*(_QWORD *)(a17 + 24))
    {
      sub_23941A4FC(&__p, "");
      a28 = 1;
      v50 = *(_QWORD *)(a17 + 24);
      if (!v50)
        sub_2394172E0();
      (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v50 + 48))(v50, &a28, &__p);
      if (a34 < 0)
        operator delete(__p);
    }
    __cxa_end_catch();
    JUMPOUT(0x239971248);
  }
  _Unwind_Resume(exception_object);
}

void sub_239971868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_23997188C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _QWORD *v29;
  int v30;
  uint64_t v31;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  v34 = *(_QWORD **)(v31 - 120);
  if (v34 == v29)
  {
    v35 = 4;
    v34 = (_QWORD *)(v31 - 144);
  }
  else
  {
    if (!v34)
      goto LABEL_6;
    v35 = 5;
  }
  (*(void (**)(void))(*v34 + 8 * v35))();
LABEL_6:
  if (a2 == 2)
  {
    __cxa_begin_catch(a1);
    if (v30)
      *(_DWORD *)(a17 + 384) = 1;
    if (*(_QWORD *)(a16 + 24))
    {
      sub_23941A4FC(&__p, "");
      a19 = 1;
      v36 = *(_QWORD *)(a16 + 24);
      if (!v36)
        sub_2394172E0();
      (*(void (**)(uint64_t, int *, void **))(*(_QWORD *)v36 + 48))(v36, &a19, &__p);
      if (a29 < 0)
        operator delete(__p);
    }
    __cxa_end_catch();
    JUMPOUT(0x239971248);
  }
  _Unwind_Resume(a1);
}

void sub_23997194C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239971970(_Unwind_Exception *a1, int a2)
{
  if (a2)
    JUMPOUT(0x239971978);
  _Unwind_Resume(a1);
}

void sub_239971980()
{
  JUMPOUT(0x239971988);
}

void sub_239971A0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_239971A30(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  _Unwind_Resume(a1);
}

uint64_t sub_239971A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, _QWORD *a7)
{
  int v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  int64_t v19;
  _BOOL4 v20;
  _QWORD *v21;
  _BOOL4 v22;
  std::__shared_weak_count *v23;
  _QWORD *v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  int v29;
  char v30;
  int v31;
  _QWORD *v32;
  std::chrono::system_clock::time_point v33;
  std::chrono::system_clock::time_point v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  _QWORD *v37;
  std::__fs::filesystem::path::__string_view v38;
  int v39;
  int v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  std::chrono::system_clock::time_point v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  int v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  size_t v61;
  size_t v62;
  int8x16_t *p_dst;
  _BOOL4 v64;
  _BOOL4 v65;
  std::__shared_weak_count *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t *p_shared_owners;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  size_t v78;
  size_t v79;
  int8x16_t *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  char *v85;
  size_t v86;
  size_t v87;
  int8x16_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t **v98;
  uint64_t **v99;
  uint64_t v100;
  __int128 v101;
  uint64_t *v102;
  uint64_t **v103;
  uint64_t **v104;
  unsigned int v105;
  char *v106;
  uint64_t *v107;
  uint64_t *v108;
  std::string *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  int8x16_t *v115;
  uint64_t v116;
  std::chrono::system_clock::time_point v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  std::string *v140;
  uint64_t v141;
  float *v142;
  uint64_t v143;
  void *v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  std::__shared_weak_count *v148;
  unint64_t *v149;
  unint64_t v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  unint64_t i;
  _QWORD *v162;
  _BOOL4 v163;
  unsigned __int8 v164;
  uint64_t v165;
  _QWORD *v166;
  int v168;
  void *v169[2];
  char v170;
  _DWORD v171[100];
  void *v172;
  void *v173;
  void *v174;
  char v175;
  void *v176;
  char v177;
  std::string v178;
  std::string v179;
  _QWORD *v180;
  std::__shared_weak_count *v181;
  std::string v182;
  uint64_t v183;
  unint64_t v184;
  char *v185;
  std::__shared_weak_count *v186;
  _QWORD *v187;
  std::__shared_weak_count *v188;
  std::string __p;
  void *v190;
  void *v191;
  char *v192;
  std::chrono::system_clock::time_point v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  _QWORD v200[3];
  _QWORD *v201;
  _BYTE v202[24];
  _BYTE *v203;
  _BYTE v204[24];
  _BYTE *v205;
  _BYTE v206[24];
  _BYTE *v207;
  _BYTE v208[24];
  _BYTE *v209;
  std::string __str;
  std::string *p_str;
  _BYTE v212[24];
  _BYTE *v213;
  _BYTE v214[24];
  _BYTE *v215;
  _BYTE v216[24];
  _BYTE *v217;
  _BYTE v218[24];
  _BYTE *v219;
  float v220[6];
  float *v221;
  _QWORD v222[3];
  _QWORD *v223;
  _QWORD v224[3];
  _QWORD *v225;
  _BYTE v226[24];
  _BYTE *v227;
  _QWORD v228[3];
  _QWORD *v229;
  _QWORD v230[3];
  _QWORD *v231;
  _QWORD v232[3];
  _QWORD *v233;
  int8x16_t __dst;
  unint64_t v235;
  int8x16_t *v236;
  uint64_t v237;

  v237 = *MEMORY[0x24BDAC8D0];
  v13 = *(unsigned __int8 *)(a4 + 504);
  v14 = (_QWORD *)a7[3];
  if (v14)
  {
    if (v14 == a7)
    {
      v233 = v232;
      (*(void (**)(_QWORD *, _QWORD *))(*a7 + 24))(a7, v232);
    }
    else
    {
      v233 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v14 + 16))(v14);
    }
  }
  else
  {
    v233 = 0;
  }
  v15 = a7[7];
  if (!v15)
    goto LABEL_9;
  if ((_QWORD *)v15 != a7 + 4)
  {
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 16))(v15);
LABEL_9:
    v231 = (_QWORD *)v15;
    goto LABEL_11;
  }
  v231 = v230;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v15 + 24))(v15, v230);
LABEL_11:
  v16 = a7[11];
  if (!v16)
  {
LABEL_14:
    v229 = (_QWORD *)v16;
    goto LABEL_16;
  }
  if ((_QWORD *)v16 != a7 + 8)
  {
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
    goto LABEL_14;
  }
  v229 = v228;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v16 + 24))(v16, v228);
LABEL_16:
  v165 = a3;
  v166 = a7;
  v193.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  kdebug_trace();
  v191 = 0;
  v190 = 0;
  v192 = 0;
  v18 = *(_BYTE **)(a4 + 456);
  v17 = *(_BYTE **)(a4 + 464);
  v19 = v17 - v18;
  if (v17 != v18)
  {
    if (v19 < 0)
      sub_2394189F8();
    v190 = operator new(v17 - v18);
    v192 = (char *)v190 + 8 * (v19 >> 3);
    memcpy(v190, v18, v19);
    v191 = v192;
  }
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
  __p.__r_.__value_.__s.__data_[0] = 0;
  sub_23992A5B4((uint64_t)v169, &__p, 0, 0);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_2399FCB68();
  sub_2399FCBCC(&__str);
  sub_2399FCAE8(&__dst);
  v168 = a6;
  sub_2399F9B40(&v190);
  v20 = sub_2399F945C((unint64_t **)&v190);
  if (v20)
    goto LABEL_26;
  if (a6)
    *(_DWORD *)(a5 + 384) = 17;
  if (v229
    && (*((_BYTE *)&__str.__r_.__value_.__s + 23) = 0,
        __str.__r_.__value_.__s.__data_[0] = 0,
        v194 = 17,
        (*(void (**)(_QWORD *, int *, std::string *))(*v229 + 48))(v229, &v194, &__str),
        SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0))
  {
    operator delete(__str.__r_.__value_.__l.__data_);
    v21 = v233;
    if (!v233)
      goto LABEL_29;
  }
  else
  {
LABEL_26:
    v21 = v233;
    if (!v233)
      goto LABEL_29;
  }
  *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
  __str.__r_.__value_.__s.__data_[0] = 0;
  v194 = 1088421888;
  (*(void (**)(_QWORD *, int *, std::string *))(*v21 + 48))(v21, &v194, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
LABEL_29:
  if (v13)
    v22 = 0;
  else
    v22 = v20;
  if (v22)
  {
    std::__fs::filesystem::__status((const std::__fs::filesystem::path *)(a4 + 480), 0);
    if (__str.__r_.__value_.__s.__data_[0] != 255 && __str.__r_.__value_.__s.__data_[0])
    {
      v20 = 1;
    }
    else
    {
      if (a6)
        *(_DWORD *)(a5 + 384) = 4;
      if (v229)
      {
        *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
        __str.__r_.__value_.__s.__data_[0] = 0;
        __dst.i32[0] = 4;
        (*(void (**)(_QWORD *, int8x16_t *, std::string *))(*v229 + 48))(v229, &__dst, &__str);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__str.__r_.__value_.__l.__data_);
      }
      v20 = 0;
    }
  }
  sub_23992A6A0((uint64_t)v169);
  sub_2399FC9C0();
  kdebug_trace();
  kdebug_trace();
  v23 = (std::__shared_weak_count *)operator new(0xD0uLL);
  v23->__shared_owners_ = 0;
  v23->__shared_weak_owners_ = 0;
  v23->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADED90;
  v24 = &v23[1].__vftable;
  sub_23996301C((uint64_t)&v23[1]);
  v187 = &v23[1].__vftable;
  v188 = v23;
  v25 = (char *)operator new(0x60uLL);
  *((_QWORD *)v25 + 1) = 0;
  *((_QWORD *)v25 + 2) = 0;
  *(_QWORD *)v25 = &off_250ADEDC8;
  *(_OWORD *)(v25 + 24) = 0u;
  v26 = (uint64_t *)(v25 + 24);
  *(_OWORD *)(v25 + 72) = 0u;
  *(_OWORD *)(v25 + 40) = 0u;
  *(_OWORD *)(v25 + 56) = 0u;
  *((_QWORD *)v25 + 11) = 0;
  *((_QWORD *)v25 + 9) = v25 + 80;
  v185 = v25 + 24;
  v186 = (std::__shared_weak_count *)v25;
  v27 = *(unsigned int *)(a4 + 60);
  v184 = *(unsigned int *)(a4 + 56);
  v183 = v27;
  if (v20)
  {
    *((_BYTE *)&v182.__r_.__value_.__s + 23) = 0;
    v182.__r_.__value_.__s.__data_[0] = 0;
    sub_23992A5B4((uint64_t)v169, &v182, 0, 0);
    if (SHIBYTE(v182.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v182.__r_.__value_.__l.__data_);
    __dst.i16[0] = 1;
    __dst.i8[2] = 1;
    __dst.i32[1] = 2;
    if (*(char *)(a1 + 23) < 0)
      sub_23941A7F8(&__str, *(void **)a1, *(_QWORD *)(a1 + 8));
    else
      __str = *(std::string *)a1;
    v28 = sub_23994C314((uint64_t)&__str, (uint64_t)v24, v26, (uint64_t)&__dst);
    v29 = v28;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__str.__r_.__value_.__l.__data_);
      v220[0] = 0.0;
      if (!v29)
        goto LABEL_56;
    }
    else
    {
      v220[0] = 0.0;
      if (!v28)
        goto LABEL_56;
    }
    LODWORD(__str.__r_.__value_.__l.__data_) = 1;
    if (sub_23992EA5C((uint64_t)v24, v26, v220, (int *)&__str)
      && (sub_2399170A8(v26, v220, &v184, &v183) & 1) != 0)
    {
      sub_2399407A8(v24);
      v30 = 0;
      v31 = 1;
      v32 = v233;
      if (v233)
        goto LABEL_61;
      goto LABEL_66;
    }
LABEL_56:
    if (a6)
      *(_DWORD *)(a5 + 384) = 7;
    if (v229
      && (*((_BYTE *)&__str.__r_.__value_.__s + 23) = 0,
          __str.__r_.__value_.__s.__data_[0] = 0,
          v195 = 7,
          (*(void (**)(_QWORD *, int *, std::string *))(*v229 + 48))(v229, &v195, &__str),
          SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0))
    {
      operator delete(__str.__r_.__value_.__l.__data_);
      v31 = 0;
      v30 = 1;
      v32 = v233;
      if (v233)
      {
LABEL_61:
        *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
        __str.__r_.__value_.__s.__data_[0] = 0;
        v195 = 1092616192;
        (*(void (**)(_QWORD *, int *, std::string *))(*v32 + 48))(v32, &v195, &__str);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__str.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      v31 = 0;
      v30 = 1;
      v32 = v233;
      if (v233)
        goto LABEL_61;
    }
LABEL_66:
    if ((v30 & 1) == 0 && v23[7].__shared_weak_owners_ - v23[7].__shared_owners_ <= 7uLL)
    {
      if (a6)
        *(_DWORD *)(a5 + 384) = 9;
      if (v229)
      {
        *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
        __str.__r_.__value_.__s.__data_[0] = 0;
        v195 = 9;
        (*(void (**)(_QWORD *, int *, std::string *))(*v229 + 48))(v229, &v195, &__str);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__str.__r_.__value_.__l.__data_);
      }
      v31 = 0;
    }
    sub_23992A6A0((uint64_t)v169);
    sub_2399FC9C0();
    v20 = v31 != 0;
  }
  kdebug_trace();
  v33.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (a6)
    *(double *)a5 = (double)(v33.__d_.__rep_ - v193.__d_.__rep_) / 1000000.0;
  v34.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  v193.__d_.__rep_ = v34.__d_.__rep_;
  if (v231 && (*(unsigned int (**)(_QWORD *))(*v231 + 48))(v231))
  {
    if (a6)
      *(_DWORD *)(a5 + 384) = 10;
    if (v229)
    {
      v170 = 0;
      LOBYTE(v169[0]) = 0;
      LODWORD(__str.__r_.__value_.__l.__data_) = 10;
      (*(void (**)(_QWORD *, std::string *, void **))(*v229 + 48))(v229, &__str, v169);
      if (v170 < 0)
        operator delete(v169[0]);
    }
    v35 = 0;
    goto LABEL_346;
  }
  v36 = (std::__shared_weak_count *)operator new(0xD0uLL);
  v36->__shared_owners_ = 0;
  v36->__shared_weak_owners_ = 0;
  v37 = &v36[1].__vftable;
  v36->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADED90;
  sub_23996301C((uint64_t)&v36[1]);
  v180 = &v36[1].__vftable;
  v181 = v36;
  if (v20)
  {
    *((_BYTE *)&v179.__r_.__value_.__s + 23) = 0;
    v179.__r_.__value_.__s.__data_[0] = 0;
    sub_23992A5B4((uint64_t)v169, &v179, 0, 0);
    if (SHIBYTE(v179.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v179.__r_.__value_.__l.__data_);
    memset(&__str, 0, sizeof(__str));
    sub_23948900C(&__str, (std::string *)"", (std::string *)"");
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v38.__data_ = (const std::string_view::value_type *)&__str;
    else
      v38.__data_ = (const std::string_view::value_type *)__str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v38.__size_ = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    else
      v38.__size_ = __str.__r_.__value_.__l.__size_;
    v39 = std::__fs::filesystem::path::__compare((const std::__fs::filesystem::path *)a2, v38);
    v40 = v39;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__str.__r_.__value_.__l.__data_);
      if (v40)
        goto LABEL_96;
    }
    else if (v39)
    {
LABEL_96:
      kdebug_trace();
      __dst.i32[1] = 3;
      __dst.i16[0] = 1;
      __dst.i8[2] = 0;
      if (*(char *)(a2 + 23) < 0)
        sub_23941A7F8(&__str, *(void **)a2, *(_QWORD *)(a2 + 8));
      else
        __str = *(std::string *)a2;
      v44 = sub_239946B50((uint64_t)&__str, (uint64_t)v37, &__dst);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
      sub_2399407A8(v37);
      v45.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
      if (a6)
        *(double *)(a5 + 112) = (double)(v45.__d_.__rep_ - v34.__d_.__rep_) / 1000000.0;
      if (v233)
      {
        *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
        __str.__r_.__value_.__s.__data_[0] = 0;
        v196 = 1101529088;
        (*(void (**)(_QWORD *, int *, std::string *))(*v233 + 48))(v233, &v196, &__str);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__str.__r_.__value_.__l.__data_);
      }
      kdebug_trace();
      if ((v44 & 1) != 0)
      {
        v46 = 1;
      }
      else
      {
        if (a6)
          *(_DWORD *)(a5 + 384) = 8;
        if (v229)
        {
          *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
          __str.__r_.__value_.__s.__data_[0] = 0;
          v196 = 8;
          (*(void (**)(_QWORD *, int *, std::string *))(*v229 + 48))(v229, &v196, &__str);
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__str.__r_.__value_.__l.__data_);
        }
        v46 = 0;
      }
      goto LABEL_146;
    }
    v42 = (uint64_t)v187;
    v43 = (uint64_t)v233;
    if (v233)
    {
      if (v233 == v232)
      {
        v227 = v226;
        (*(void (**)(_QWORD *, _BYTE *))(v232[0] + 24))(v232, v226);
LABEL_121:
        v47 = (uint64_t)v231;
        if (v231)
        {
          if (v231 == v230)
          {
            v225 = v224;
            (*(void (**)(_QWORD *, _QWORD *))(v230[0] + 24))(v230, v224);
LABEL_126:
            v48 = (uint64_t)v229;
            if (v229)
            {
              if (v229 == v228)
              {
                v223 = v222;
                (*(void (**)(_QWORD *, _QWORD *))(v228[0] + 24))(v228, v222);
LABEL_131:
                v46 = sub_239970A5C(v42, (size_t)v37, a4, &v184, &v183, a5, a6, (uint64_t)v226, v224, v222, (uint64_t)&v190, &v193);
                v49 = v223;
                if (v223 == v222)
                {
                  v50 = 4;
                  v49 = v222;
                }
                else
                {
                  if (!v223)
                    goto LABEL_136;
                  v50 = 5;
                }
                (*(void (**)(void))(*v49 + 8 * v50))();
LABEL_136:
                v51 = v225;
                if (v225 == v224)
                {
                  v52 = 4;
                  v51 = v224;
                }
                else
                {
                  if (!v225)
                    goto LABEL_141;
                  v52 = 5;
                }
                (*(void (**)(void))(*v51 + 8 * v52))();
LABEL_141:
                v53 = v227;
                if (v227 == v226)
                {
                  v54 = 4;
                  v53 = v226;
                }
                else
                {
                  if (!v227)
                  {
LABEL_146:
                    sub_23992A6A0((uint64_t)v169);
                    v41 = v46;
                    goto LABEL_147;
                  }
                  v54 = 5;
                }
                (*(void (**)(void))(*v53 + 8 * v54))();
                goto LABEL_146;
              }
              v48 = (*(uint64_t (**)(_QWORD *))(*v229 + 16))(v229);
            }
            v223 = (_QWORD *)v48;
            goto LABEL_131;
          }
          v47 = (*(uint64_t (**)(_QWORD *))(*v231 + 16))(v231);
        }
        v225 = (_QWORD *)v47;
        goto LABEL_126;
      }
      v43 = (*(uint64_t (**)(_QWORD *))(*v233 + 16))(v233);
    }
    v227 = (_BYTE *)v43;
    goto LABEL_121;
  }
  v41 = 0;
LABEL_147:
  sub_2399FC9C0();
  if (v231 && (*(unsigned int (**)(_QWORD *))(*v231 + 48))(v231))
  {
    if (a6)
      *(_DWORD *)(a5 + 384) = 10;
    v55 = v229;
    if (!v229)
      goto LABEL_340;
    goto LABEL_338;
  }
  v193.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  kdebug_trace();
  *((_BYTE *)&v178.__r_.__value_.__s + 23) = 0;
  v178.__r_.__value_.__s.__data_[0] = 0;
  sub_23992A5B4((uint64_t)v169, &v178, 0, 0);
  if (SHIBYTE(v178.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v178.__r_.__value_.__l.__data_);
    if (v41)
    {
LABEL_155:
      v56 = sub_23996008C((uint64_t)v187);
      v57 = v233;
      if (!v233)
        goto LABEL_160;
      goto LABEL_159;
    }
  }
  else if (v41)
  {
    goto LABEL_155;
  }
  v56 = 0;
  v57 = v233;
  if (!v233)
    goto LABEL_160;
LABEL_159:
  *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
  __str.__r_.__value_.__s.__data_[0] = 0;
  v197 = 1103626240;
  (*(void (**)(_QWORD *, int *, std::string *))(*v57 + 48))(v57, &v197, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__str.__r_.__value_.__l.__data_);
    v58 = v231;
    if (!v231)
      goto LABEL_169;
    goto LABEL_161;
  }
LABEL_160:
  v58 = v231;
  if (!v231)
    goto LABEL_169;
LABEL_161:
  if ((*(unsigned int (**)(_QWORD *))(*v58 + 48))(v58))
  {
    if (a6)
      *(_DWORD *)(a5 + 384) = 10;
    if (v229)
    {
      *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
      __str.__r_.__value_.__s.__data_[0] = 0;
      __dst.i32[0] = 10;
      (*(void (**)(_QWORD *, int8x16_t *, std::string *))(*v229 + 48))(v229, &__dst, &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
    }
    sub_23992A6A0((uint64_t)v169);
    goto LABEL_340;
  }
LABEL_169:
  if (!v56)
  {
    v64 = 0;
    goto LABEL_243;
  }
  v59 = (uint64_t)v180;
  v164 = a6;
  if (!sub_23996008C((uint64_t)v180))
  {
    v65 = 0;
    v67 = *(_QWORD **)(*(_QWORD *)(v59 + 80) + 0xFFFFFFFF0);
    v66 = *(std::__shared_weak_count **)(*(_QWORD *)(v59 + 80) + 0xFFFFFFFF8);
    if (!v66)
      goto LABEL_192;
    goto LABEL_187;
  }
  v60 = off_256934448[0];
  v61 = strlen(off_256934448[0]);
  if (v61 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v62 = v61;
  if (v61 >= 0x17)
  {
    v68 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v61 | 7) != 0x17)
      v68 = v61 | 7;
    v69 = v68 + 1;
    p_dst = (int8x16_t *)operator new(v68 + 1);
    __dst.i64[1] = v62;
    v235 = v69 | 0x8000000000000000;
    __dst.i64[0] = (uint64_t)p_dst;
    goto LABEL_181;
  }
  HIBYTE(v235) = v61;
  p_dst = &__dst;
  if (v61)
LABEL_181:
    memmove(p_dst, v60, v62);
  p_dst->i8[v62] = 0;
  memset(&__str, 0, sizeof(__str));
  v70 = sub_23958C0D8((uint64_t **)(v59 + 80), (uint64_t)&__str, (unsigned __int8 *)&__dst);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  v65 = v70 != -1;
  if (SHIBYTE(v235) < 0)
    operator delete((void *)__dst.i64[0]);
  v71 = v180[10] + 16 * v70;
  v67 = *(_QWORD **)v71;
  v66 = *(std::__shared_weak_count **)(v71 + 8);
  if (v66)
  {
LABEL_187:
    p_shared_owners = (unint64_t *)&v66->__shared_owners_;
    do
      v73 = __ldxr(p_shared_owners);
    while (__stxr(v73 + 1, p_shared_owners));
    do
      v74 = __ldaxr(p_shared_owners);
    while (__stlxr(v74 - 1, p_shared_owners));
    if (!v74)
    {
      ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
      std::__shared_weak_count::__release_weak(v66);
    }
  }
LABEL_192:
  v75 = (*(uint64_t (**)(_QWORD *))(*v67 + 16))(v67);
  v76 = (uint64_t)v180;
  v77 = off_256934458;
  v78 = strlen(off_256934458);
  if (v78 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v79 = v78;
  v163 = v65;
  if (v78 >= 0x17)
  {
    v81 = (v78 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v78 | 7) != 0x17)
      v81 = v78 | 7;
    v82 = v81 + 1;
    v80 = (int8x16_t *)operator new(v81 + 1);
    __dst.i64[1] = v79;
    v235 = v82 | 0x8000000000000000;
    __dst.i64[0] = (uint64_t)v80;
    goto LABEL_199;
  }
  HIBYTE(v235) = v78;
  v80 = &__dst;
  if (v78)
LABEL_199:
    memmove(v80, v77, v79);
  v80->i8[v79] = 0;
  *(_OWORD *)&__str.__r_.__value_.__r.__words[1] = 0uLL;
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str.__r_.__value_.__l.__size_;
  v83 = sub_23958C234((uint64_t **)(v76 + 80), (uint64_t)&__str, (unsigned __int8 *)&__dst);
  sub_23958B6B4((uint64_t)&__str, (char *)__str.__r_.__value_.__l.__size_);
  if (SHIBYTE(v235) < 0)
  {
    operator delete((void *)__dst.i64[0]);
    if (v83 == -1)
      goto LABEL_204;
  }
  else if (v83 == -1)
  {
LABEL_204:
    v84 = (uint64_t)v180;
    v85 = off_256934458;
    v86 = strlen(off_256934458);
    if (v86 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v87 = v86;
    if (v86 >= 0x17)
    {
      v89 = (v86 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v86 | 7) != 0x17)
        v89 = v86 | 7;
      v90 = v89 + 1;
      v88 = (int8x16_t *)operator new(v89 + 1);
      __dst.i64[1] = v87;
      v235 = v90 | 0x8000000000000000;
      __dst.i64[0] = (uint64_t)v88;
    }
    else
    {
      HIBYTE(v235) = v86;
      v88 = &__dst;
      if (!v86)
      {
LABEL_212:
        v88->i8[v87] = 0;
        *(_OWORD *)&__str.__r_.__value_.__r.__words[1] = 0uLL;
        __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str.__r_.__value_.__l.__size_;
        v83 = sub_23958A738(v84 + 80, (uint64_t)&__str, (uint64_t)&__dst);
        sub_23958B6B4((uint64_t)&__str, (char *)__str.__r_.__value_.__l.__size_);
        if (SHIBYTE(v235) < 0)
          operator delete((void *)__dst.i64[0]);
        goto LABEL_214;
      }
    }
    memmove(v88, v85, v87);
    goto LABEL_212;
  }
LABEL_214:
  v91 = v180[10] + 16 * v83;
  v92 = *(_QWORD **)v91;
  v93 = *(std::__shared_weak_count **)(v91 + 8);
  if (v93)
  {
    v94 = (unint64_t *)&v93->__shared_owners_;
    do
      v95 = __ldxr(v94);
    while (__stxr(v95 + 1, v94));
    do
      v96 = __ldaxr(v94);
    while (__stlxr(v96 - 1, v94));
    if (!v96)
    {
      ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
      std::__shared_weak_count::__release_weak(v93);
    }
  }
  (*(void (**)(_QWORD *, uint64_t))(*v92 + 32))(v92, 1);
  if (v75)
  {
    v97 = 0;
    v98 = (uint64_t **)v92[5];
    v99 = v98 + 1;
    do
    {
      v100 = v67[5] + 24 * v97;
      if (*(char *)(v100 + 23) < 0)
      {
        sub_23941A7F8(&__str, *(void **)v100, *(_QWORD *)(v100 + 8));
      }
      else
      {
        v101 = *(_OWORD *)v100;
        __str.__r_.__value_.__r.__words[2] = *(_QWORD *)(v100 + 16);
        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v101;
      }
      v102 = *v99;
      v103 = v98 + 1;
      v104 = v98 + 1;
      if (*v99)
      {
        while (1)
        {
          while (1)
          {
            v104 = (uint64_t **)v102;
            v105 = *((unsigned __int16 *)v102 + 16);
            if (v105 <= (unsigned __int16)v97)
              break;
            v102 = *v104;
            v103 = v104;
            if (!*v104)
              goto LABEL_233;
          }
          if (v105 >= (unsigned __int16)v97)
            break;
          v102 = v104[1];
          if (!v102)
          {
            v103 = v104 + 1;
            goto LABEL_233;
          }
        }
        v106 = (char *)v104;
      }
      else
      {
LABEL_233:
        v106 = (char *)operator new(0x40uLL);
        *((_WORD *)v106 + 16) = v97;
        *((_QWORD *)v106 + 6) = 0;
        *((_QWORD *)v106 + 7) = 0;
        *((_QWORD *)v106 + 5) = 0;
        *(_QWORD *)v106 = 0;
        *((_QWORD *)v106 + 1) = 0;
        *((_QWORD *)v106 + 2) = v104;
        *v103 = (uint64_t *)v106;
        v107 = (uint64_t *)**v98;
        v108 = (uint64_t *)v106;
        if (v107)
        {
          *v98 = v107;
          v108 = *v103;
        }
        sub_2394213B8(v98[1], v108);
        v98[2] = (uint64_t *)((char *)v98[2] + 1);
      }
      std::string::operator=((std::string *)(v106 + 40), &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
      ++v97;
    }
    while (v97 != v75);
  }
  if (v233)
  {
    *((_BYTE *)&__str.__r_.__value_.__s + 23) = 0;
    __str.__r_.__value_.__s.__data_[0] = 0;
    v198 = 1106247680;
    a6 = v164;
    (*(void (**)(_QWORD *, int *, std::string *))(*v233 + 48))(v233, &v198, &__str);
    v64 = v163;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
  }
  else
  {
    a6 = v164;
    v64 = v163;
  }
LABEL_243:
  sub_23992A6A0((uint64_t)v169);
  sub_2399FC9C0();
  kdebug_trace();
  if (v231 && (*(unsigned int (**)(_QWORD *))(*v231 + 48))(v231))
  {
    if (v168)
      *(_DWORD *)(a5 + 384) = 10;
    v55 = v229;
    if (!v229)
      goto LABEL_340;
    goto LABEL_338;
  }
  if (!v64)
  {
    v35 = 0;
    v111 = v231;
    if (!v231)
      goto LABEL_381;
    goto LABEL_334;
  }
  sub_239973BF0((uint64_t)v169, (__int128 *)a4);
  v171[0] = v184;
  v171[1] = v183;
  v221 = 0;
  if (v233)
  {
    __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_250AF0DC8;
    __str.__r_.__value_.__l.__size_ = (std::string::size_type)v232;
    p_str = &__str;
    sub_239587C2C(&__str, v220);
    v109 = p_str;
    if (p_str == &__str)
    {
      v110 = 4;
      v109 = &__str;
    }
    else
    {
      if (!p_str)
        goto LABEL_258;
      v110 = 5;
    }
    (*(void (**)(void))(v109->__r_.__value_.__r.__words[0] + 8 * v110))();
  }
LABEL_258:
  sub_239586FCC(&__str, v166);
  v112 = (uint64_t)v221;
  if (!v221)
  {
    v113 = a6;
    v114 = a5;
    goto LABEL_262;
  }
  v113 = a6;
  v114 = a5;
  if (v221 != v220)
  {
    v112 = (*(uint64_t (**)(void))(*(_QWORD *)v221 + 16))();
LABEL_262:
    v236 = (int8x16_t *)v112;
    goto LABEL_264;
  }
  v236 = &__dst;
  (*(void (**)(float *, int8x16_t *))(*(_QWORD *)v220 + 24))(v220, &__dst);
LABEL_264:
  sub_239587C2C(&__dst, &__str);
  v115 = v236;
  if (v236 == &__dst)
  {
    v116 = 4;
    v115 = &__dst;
  }
  else
  {
    if (!v236)
      goto LABEL_269;
    v116 = 5;
  }
  (*(void (**)(void))(v115->i64[0] + 8 * v116))();
LABEL_269:
  v117.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (v168)
    *(double *)(v114 + 280) = (double)(v117.__d_.__rep_ - v193.__d_.__rep_) / 1000000.0;
  v118 = (uint64_t)v187;
  v119 = v185;
  v120 = (uint64_t)v180;
  sub_239586FCC(v200, &__str);
  v121 = v119;
  a5 = v114;
  v35 = sub_239927EC4(v118, v121, v120, v165, (uint64_t)v169, v114, v113, v200);
  v122 = v209;
  if (v209 == v208)
  {
    v123 = 4;
    v122 = v208;
  }
  else
  {
    if (!v209)
      goto LABEL_276;
    v123 = 5;
  }
  (*(void (**)(void))(*v122 + 8 * v123))();
LABEL_276:
  v124 = v207;
  if (v207 == v206)
  {
    v125 = 4;
    v124 = v206;
  }
  else
  {
    if (!v207)
      goto LABEL_281;
    v125 = 5;
  }
  (*(void (**)(void))(*v124 + 8 * v125))();
LABEL_281:
  v126 = v205;
  if (v205 == v204)
  {
    v127 = 4;
    v126 = v204;
  }
  else
  {
    if (!v205)
      goto LABEL_286;
    v127 = 5;
  }
  (*(void (**)(void))(*v126 + 8 * v127))();
LABEL_286:
  v128 = v203;
  if (v203 == v202)
  {
    v129 = 4;
    v128 = v202;
  }
  else
  {
    if (!v203)
      goto LABEL_291;
    v129 = 5;
  }
  (*(void (**)(void))(*v128 + 8 * v129))();
LABEL_291:
  v130 = v201;
  if (v201 == v200)
  {
    v131 = 4;
    v130 = v200;
    goto LABEL_295;
  }
  if (v201)
  {
    v131 = 5;
LABEL_295:
    (*(void (**)(void))(*v130 + 8 * v131))();
  }
  if (v233)
  {
    HIBYTE(v235) = 0;
    __dst.i8[0] = 0;
    v199 = 1120403456;
    (*(void (**)(_QWORD *, int *, int8x16_t *))(*v233 + 48))(v233, &v199, &__dst);
    if (SHIBYTE(v235) < 0)
      operator delete((void *)__dst.i64[0]);
  }
  v132 = v219;
  if (v219 == v218)
  {
    v133 = 4;
    v132 = v218;
  }
  else
  {
    if (!v219)
      goto LABEL_304;
    v133 = 5;
  }
  (*(void (**)(void))(*v132 + 8 * v133))();
LABEL_304:
  v134 = v217;
  if (v217 == v216)
  {
    v135 = 4;
    v134 = v216;
  }
  else
  {
    if (!v217)
      goto LABEL_309;
    v135 = 5;
  }
  (*(void (**)(void))(*v134 + 8 * v135))();
LABEL_309:
  v136 = v215;
  if (v215 == v214)
  {
    v137 = 4;
    v136 = v214;
  }
  else
  {
    if (!v215)
      goto LABEL_314;
    v137 = 5;
  }
  (*(void (**)(void))(*v136 + 8 * v137))();
LABEL_314:
  v138 = v213;
  if (v213 == v212)
  {
    v139 = 4;
    v138 = v212;
  }
  else
  {
    if (!v213)
      goto LABEL_319;
    v139 = 5;
  }
  (*(void (**)(void))(*v138 + 8 * v139))();
LABEL_319:
  v140 = p_str;
  if (p_str == &__str)
  {
    v141 = 4;
    v140 = &__str;
  }
  else
  {
    if (!p_str)
      goto LABEL_324;
    v141 = 5;
  }
  (*(void (**)(void))(v140->__r_.__value_.__r.__words[0] + 8 * v141))();
LABEL_324:
  v142 = v221;
  if (v221 == v220)
  {
    v143 = 4;
    v142 = v220;
  }
  else
  {
    if (!v221)
      goto LABEL_329;
    v143 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v142 + 8 * v143))();
LABEL_329:
  if (v177 < 0)
  {
    operator delete(v176);
    if ((v175 & 0x80000000) == 0)
    {
LABEL_331:
      v144 = v172;
      if (!v172)
        goto LABEL_333;
      goto LABEL_332;
    }
  }
  else if ((v175 & 0x80000000) == 0)
  {
    goto LABEL_331;
  }
  operator delete(v174);
  v144 = v172;
  if (v172)
  {
LABEL_332:
    v173 = v144;
    operator delete(v144);
  }
LABEL_333:
  sub_239586EB4((uint64_t)v171);
  v111 = v231;
  if (!v231)
    goto LABEL_381;
LABEL_334:
  if ((*(unsigned int (**)(_QWORD *))(*v111 + 48))(v111))
  {
    if (v168)
      *(_DWORD *)(a5 + 384) = 10;
    v55 = v229;
    if (!v229)
      goto LABEL_340;
LABEL_338:
    v170 = 0;
    LOBYTE(v169[0]) = 0;
    LODWORD(__str.__r_.__value_.__l.__data_) = 10;
    (*(void (**)(_QWORD *, std::string *, void **))(*v229 + 48))(v55, &__str, v169);
    if (v170 < 0)
      operator delete(v169[0]);
LABEL_340:
    v35 = 0;
    goto LABEL_341;
  }
LABEL_381:
  for (i = 0; ; ++i)
  {
    v162 = (_QWORD *)sub_2399FC9C0();
    if (i >= 0xD37A6F4DE9BD37A7 * ((uint64_t)(v162[1] - *v162) >> 3))
      break;
    sub_2399FC9C0();
  }
LABEL_341:
  v145 = v181;
  if (v181)
  {
    v146 = (unint64_t *)&v181->__shared_owners_;
    do
      v147 = __ldaxr(v146);
    while (__stlxr(v147 - 1, v146));
    if (!v147)
    {
      ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
      std::__shared_weak_count::__release_weak(v145);
    }
  }
LABEL_346:
  v148 = v186;
  if (v186)
  {
    v149 = (unint64_t *)&v186->__shared_owners_;
    do
      v150 = __ldaxr(v149);
    while (__stlxr(v150 - 1, v149));
    if (!v150)
    {
      ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
      std::__shared_weak_count::__release_weak(v148);
    }
  }
  v151 = v188;
  if (v188)
  {
    v152 = (unint64_t *)&v188->__shared_owners_;
    do
      v153 = __ldaxr(v152);
    while (__stlxr(v153 - 1, v152));
    if (!v153)
    {
      ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
      std::__shared_weak_count::__release_weak(v151);
    }
  }
  if (v190)
  {
    v191 = v190;
    operator delete(v190);
  }
  v154 = v229;
  if (v229 == v228)
  {
    v155 = 4;
    v154 = v228;
  }
  else
  {
    if (!v229)
      goto LABEL_363;
    v155 = 5;
  }
  (*(void (**)(void))(*v154 + 8 * v155))();
LABEL_363:
  v156 = v231;
  if (v231 == v230)
  {
    v157 = 4;
    v156 = v230;
  }
  else
  {
    if (!v231)
      goto LABEL_368;
    v157 = 5;
  }
  (*(void (**)(void))(*v156 + 8 * v157))();
LABEL_368:
  v158 = v233;
  if (v233 == v232)
  {
    v159 = 4;
    v158 = v232;
    goto LABEL_372;
  }
  if (v233)
  {
    v159 = 5;
LABEL_372:
    (*(void (**)(void))(*v158 + 8 * v159))();
  }
  return v35;
}

void sub_2399734C0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  __cxa_end_catch();
  JUMPOUT(0x239973A50);
}

void sub_2399734EC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0)
    operator delete(__p);
  JUMPOUT(0x239973A58);
}

void sub_239973504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  if (SLOBYTE(STACK[0x417]) < 0)
    operator delete((void *)STACK[0x400]);
  sub_23992A6A0((uint64_t)va);
  if (STACK[0x328])
    JUMPOUT(0x239973A70);
  if (*(_QWORD *)(v12 - 200) == v12 - 224)
    JUMPOUT(0x239973A90);
  JUMPOUT(0x239973A88);
}

void sub_23997351C(void *a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  JUMPOUT(0x239973AFCLL);
}

void sub_2399735C8()
{
  uint64_t v0;

  __cxa_end_catch();
  sub_23992A6A0((uint64_t)&v0);
  JUMPOUT(0x239973A50);
}

void sub_2399735F0(uint64_t a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  JUMPOUT(0x239973AFCLL);
}

void sub_239973600(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a2 == 2)
  {
    __cxa_begin_catch(a1);
    if (a21)
      *(_DWORD *)(v21 + 384) = 1;
    if (*(_QWORD *)(v22 - 200))
    {
      sub_23941A4FC(&STACK[0x400], "");
      *(_DWORD *)(v22 - 128) = 1;
      v23 = *(_QWORD *)(v22 - 200);
      if (!v23)
        sub_2394172E0();
      (*(void (**)(uint64_t, uint64_t, unint64_t *))(*(_QWORD *)v23 + 48))(v23, v22 - 128, &STACK[0x400]);
      if (SLOBYTE(STACK[0x417]) < 0)
        operator delete((void *)STACK[0x400]);
    }
    __cxa_end_catch();
    if (!*(_QWORD *)(v22 - 168))
      JUMPOUT(0x23997264CLL);
    JUMPOUT(0x2399725D4);
  }
  sub_23992A6A0((uint64_t)&v24);
  JUMPOUT(0x239973A50);
}

void sub_239973610(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v31;

  sub_23992A6A0((uint64_t)&__p);
  if (a2 == 2)
  {
    __cxa_begin_catch(a1);
    if (a21)
      *(_DWORD *)(v27 + 384) = 1;
    if (*(_QWORD *)(v28 - 200))
    {
      sub_23941A4FC(&__p, "");
      LODWORD(STACK[0x400]) = 1;
      v31 = *(_QWORD *)(v28 - 200);
      if (!v31)
        sub_2394172E0();
      (*(void (**)(uint64_t, unint64_t *, void **))(*(_QWORD *)v31 + 48))(v31, &STACK[0x400], &__p);
      if (a27 < 0)
        operator delete(__p);
    }
    __cxa_end_catch();
    JUMPOUT(0x239972028);
  }
  JUMPOUT(0x239973A58);
}

void sub_239973620(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v25;

  if (SLOBYTE(STACK[0x417]) < 0)
    operator delete((void *)STACK[0x400]);
  if (a2 == 2)
  {
    __cxa_begin_catch(a1);
    if (a21)
      *(_DWORD *)(v21 + 384) = 1;
    if (*(_QWORD *)(v22 - 200))
    {
      sub_23941A4FC(&STACK[0x400], "");
      *(_DWORD *)(v22 - 128) = 1;
      v25 = *(_QWORD *)(v22 - 200);
      if (!v25)
        sub_2394172E0();
      (*(void (**)(uint64_t, uint64_t, unint64_t *))(*(_QWORD *)v25 + 48))(v25, v22 - 128, &STACK[0x400]);
      if (SLOBYTE(STACK[0x417]) < 0)
        operator delete((void *)STACK[0x400]);
    }
    __cxa_end_catch();
    if (!*(_QWORD *)(v22 - 168))
      JUMPOUT(0x23997264CLL);
    JUMPOUT(0x2399725D4);
  }
  JUMPOUT(0x239973724);
}

void sub_2399736C0()
{
  uint64_t v0;

  __cxa_end_catch();
  sub_23992A6A0((uint64_t)&v0);
  JUMPOUT(0x239973A50);
}

void sub_2399736F8(uint64_t a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  JUMPOUT(0x239973AFCLL);
}

void sub_239973704(uint64_t a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  JUMPOUT(0x239973AFCLL);
}

void sub_239973730()
{
  if (SLOBYTE(STACK[0x2B7]) < 0)
    operator delete((void *)STACK[0x2A0]);
  JUMPOUT(0x239973A50);
}

void sub_239973748()
{
  if (SLOBYTE(STACK[0x29F]) < 0)
    operator delete((void *)STACK[0x288]);
  JUMPOUT(0x239973A50);
}

void sub_239973760(uint64_t a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  JUMPOUT(0x239973AFCLL);
}

void sub_23997376C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v31;

  if (SLOBYTE(STACK[0x417]) < 0)
    operator delete((void *)STACK[0x400]);
  sub_23992A6A0((uint64_t)&a22);
  if (a2 == 2)
  {
    __cxa_begin_catch(a1);
    if (a21)
      *(_DWORD *)(v27 + 384) = 1;
    if (*(_QWORD *)(v28 - 200))
    {
      sub_23941A4FC(&a22, "");
      LODWORD(STACK[0x400]) = 1;
      v31 = *(_QWORD *)(v28 - 200);
      if (!v31)
        sub_2394172E0();
      (*(void (**)(uint64_t, unint64_t *, void **))(*(_QWORD *)v31 + 48))(v31, &STACK[0x400], &a22);
      if (a27 < 0)
        operator delete(a22);
    }
    __cxa_end_catch();
    JUMPOUT(0x239972028);
  }
  JUMPOUT(0x239973A58);
}

void sub_23997380C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  __cxa_end_catch();
  JUMPOUT(0x239973A58);
}

void sub_239973838()
{
  if (SLOBYTE(STACK[0x2DF]) < 0)
    operator delete((void *)STACK[0x2C8]);
  JUMPOUT(0x23997378CLL);
}

void sub_23997385C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, ...)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  va_list va;

  va_start(va, a15);
  if (SLOBYTE(STACK[0x417]) < 0)
    operator delete((void *)STACK[0x400]);
  if (a2 == 2)
  {
    __cxa_begin_catch(a1);
    if (a15)
      *(_DWORD *)(v15 + 384) = 1;
    if (*(_QWORD *)(v16 - 200))
    {
      sub_23941A4FC(&STACK[0x400], "");
      *(_DWORD *)(v16 - 128) = 1;
      v19 = *(_QWORD *)(v16 - 200);
      if (!v19)
        sub_2394172E0();
      (*(void (**)(uint64_t, uint64_t, unint64_t *))(*(_QWORD *)v19 + 48))(v19, v16 - 128, &STACK[0x400]);
      if (SLOBYTE(STACK[0x417]) < 0)
        operator delete((void *)STACK[0x400]);
    }
    __cxa_end_catch();
    JUMPOUT(0x239971D34);
  }
  sub_23992A6A0((uint64_t)va);
  if (STACK[0x328])
    JUMPOUT(0x239973A70);
  JUMPOUT(0x239973938);
}

void sub_239973878()
{
  JUMPOUT(0x239973A9CLL);
}

void sub_239973880()
{
  JUMPOUT(0x239973ACCLL);
}

void sub_239973888()
{
  std::__shared_weak_count *v0;
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(v0);
  operator delete(v1);
  JUMPOUT(0x239973A58);
}

void sub_23997389C()
{
  JUMPOUT(0x239973A58);
}

void sub_2399738A4(uint64_t a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  JUMPOUT(0x239973AFCLL);
}

void sub_2399738B0()
{
  JUMPOUT(0x239973A60);
}

void sub_2399738B8()
{
  std::__shared_weak_count *v0;
  uint64_t v1;
  void *v2;

  std::__shared_weak_count::~__shared_weak_count(v0);
  operator delete(v2);
  if (!STACK[0x328])
  {
    if (*(_QWORD *)(v1 - 200) == v1 - 224)
      JUMPOUT(0x239973A90);
    JUMPOUT(0x239973A88);
  }
  JUMPOUT(0x239973A70);
}

void sub_2399738D8()
{
  uint64_t v0;

  if (!STACK[0x328])
  {
    if (*(_QWORD *)(v0 - 200) == v0 - 224)
      JUMPOUT(0x239973A90);
    JUMPOUT(0x239973A88);
  }
  JUMPOUT(0x239973A70);
}

void sub_2399738E8(uint64_t a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  JUMPOUT(0x239973AFCLL);
}

void sub_2399738F4(uint64_t a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  JUMPOUT(0x239973AFCLL);
}

void sub_239973900()
{
  uint64_t v0;

  if (!STACK[0x328])
  {
    if (*(_QWORD *)(v0 - 200) == v0 - 224)
      JUMPOUT(0x239973A90);
    JUMPOUT(0x239973A88);
  }
  JUMPOUT(0x239973A70);
}

void sub_239973910()
{
  uint64_t v0;

  if (SLOBYTE(STACK[0x327]) < 0)
  {
    operator delete((void *)STACK[0x310]);
    if (STACK[0x328])
LABEL_7:
      JUMPOUT(0x239973A70);
  }
  else if (STACK[0x328])
  {
    goto LABEL_7;
  }
  if (*(_QWORD *)(v0 - 200) == v0 - 224)
    JUMPOUT(0x239973A90);
  JUMPOUT(0x239973A88);
}

void sub_239973954(uint64_t a1, int a2)
{
  if (a2)
    JUMPOUT(0x23997395CLL);
  JUMPOUT(0x239973AFCLL);
}

void sub_239973964()
{
  JUMPOUT(0x239973B34);
}

void sub_239973970()
{
  uint64_t v0;

  if (!STACK[0x328])
  {
    if (*(_QWORD *)(v0 - 200) == v0 - 224)
      JUMPOUT(0x239973A90);
    JUMPOUT(0x239973A88);
  }
  JUMPOUT(0x239973A70);
}

void sub_239973984()
{
  JUMPOUT(0x23997398CLL);
}

void sub_239973A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  __cxa_end_catch();
  sub_23992A6A0((uint64_t)va);
  if (STACK[0x328])
    JUMPOUT(0x239973A70);
  JUMPOUT(0x239973938);
}

void sub_239973A4C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  sub_239416DA0((uint64_t)&STACK[0x2B8]);
  sub_239416DA0((uint64_t)&STACK[0x2F0]);
  sub_239416DA0((uint64_t)&STACK[0x300]);
  v3 = (void *)STACK[0x328];
  if (STACK[0x328])
  {
    STACK[0x330] = (unint64_t)v3;
    operator delete(v3);
    v4 = *(_QWORD **)(v1 - 200);
    if (v4 != (_QWORD *)(v1 - 224))
    {
LABEL_3:
      if (!v4)
        goto LABEL_6;
      v5 = 5;
LABEL_5:
      (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_6:
      v6 = *(_QWORD **)(v1 - 168);
      if (v6 == (_QWORD *)(v1 - 192))
      {
        v7 = 4;
        v6 = (_QWORD *)(v1 - 192);
      }
      else
      {
        if (!v6)
          goto LABEL_11;
        v7 = 5;
      }
      (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_11:
      v8 = *(_QWORD *)(v1 - 136);
      if (v8 == v1 - 160)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 160) + 32))(v1 - 160);
        _Unwind_Resume(a1);
      }
      if (!v8)
        _Unwind_Resume(a1);
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 40))(v8);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v4 = *(_QWORD **)(v1 - 200);
    if (v4 != (_QWORD *)(v1 - 224))
      goto LABEL_3;
  }
  v5 = 4;
  v4 = (_QWORD *)(v1 - 224);
  goto LABEL_5;
}

void sub_239973BBC()
{
  uint64_t v0;

  __cxa_end_catch();
  sub_23992A6A0((uint64_t)&v0);
  JUMPOUT(0x239973A50);
}

void sub_239973BE4(uint64_t a1, int a2)
{
  if (a2)
    sub_239416A48(a1);
  JUMPOUT(0x239973AFCLL);
}

uint64_t sub_239973BF0(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _BYTE *v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  __int128 v13;
  _BYTE *v14;
  __int128 v15;
  uint64_t v16;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)a1 = v4;
  sub_239973D5C(a1 + 56, (uint64_t)a2 + 56);
  *(_QWORD *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 464) = 0;
  *(_QWORD *)(a1 + 472) = 0;
  v8 = (_BYTE *)*((_QWORD *)a2 + 57);
  v7 = (_BYTE *)*((_QWORD *)a2 + 58);
  v9 = v7 - v8;
  if (v7 != v8)
  {
    if (v9 < 0)
      sub_2394189F8();
    v10 = (char *)operator new(v7 - v8);
    *(_QWORD *)(a1 + 456) = v10;
    *(_QWORD *)(a1 + 464) = v10;
    v11 = &v10[8 * (v9 >> 3)];
    *(_QWORD *)(a1 + 472) = v11;
    memcpy(v10, v8, v9);
    *(_QWORD *)(a1 + 464) = v11;
  }
  v12 = (_BYTE *)(a1 + 480);
  if (*((char *)a2 + 503) < 0)
  {
    sub_23941A7F8(v12, *((void **)a2 + 60), *((_QWORD *)a2 + 61));
  }
  else
  {
    v13 = a2[30];
    *(_QWORD *)(a1 + 496) = *((_QWORD *)a2 + 62);
    *(_OWORD *)v12 = v13;
  }
  *(_BYTE *)(a1 + 504) = *((_BYTE *)a2 + 504);
  v14 = (_BYTE *)(a1 + 512);
  if (*((char *)a2 + 535) < 0)
  {
    sub_23941A7F8(v14, *((void **)a2 + 64), *((_QWORD *)a2 + 65));
  }
  else
  {
    v15 = a2[32];
    *(_QWORD *)(a1 + 528) = *((_QWORD *)a2 + 66);
    *(_OWORD *)v14 = v15;
  }
  v16 = *((_QWORD *)a2 + 67);
  *(_DWORD *)(a1 + 544) = *((_DWORD *)a2 + 136);
  *(_QWORD *)(a1 + 536) = v16;
  return a1;
}

void sub_239973D18(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_239586E68(v2);
  sub_239586EB4(v1);
  _Unwind_Resume(a1);
}

void sub_239973D34(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void *v5;

  v5 = *v3;
  if (*v3)
  {
    *(_QWORD *)(v1 + 464) = v5;
    operator delete(v5);
  }
  sub_239586EB4(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_239973D5C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE *v13;
  __int128 v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  if (*(char *)(a2 + 39) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 16), *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = v4;
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (*(char *)(a2 + 79) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 56), *(void **)(a2 + 56), *(_QWORD *)(a2 + 64));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v5;
  }
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  if (*(char *)(a2 + 119) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 96), *(void **)(a2 + 96), *(_QWORD *)(a2 + 104));
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = v6;
  }
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  if (*(char *)(a2 + 159) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 136), *(void **)(a2 + 136), *(_QWORD *)(a2 + 144));
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = v7;
  }
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  if (*(char *)(a2 + 199) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 176), *(void **)(a2 + 176), *(_QWORD *)(a2 + 184));
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = v8;
  }
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 204) = *(_BYTE *)(a2 + 204);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  if (*(char *)(a2 + 239) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 216), *(void **)(a2 + 216), *(_QWORD *)(a2 + 224));
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = v9;
  }
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  if (*(char *)(a2 + 279) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 256), *(void **)(a2 + 256), *(_QWORD *)(a2 + 264));
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = v10;
  }
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  if (*(char *)(a2 + 319) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 296), *(void **)(a2 + 296), *(_QWORD *)(a2 + 304));
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = v11;
  }
  *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  if (*(char *)(a2 + 359) < 0)
  {
    sub_23941A7F8((_BYTE *)(a1 + 336), *(void **)(a2 + 336), *(_QWORD *)(a2 + 344));
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = v12;
  }
  *(_DWORD *)(a1 + 360) = *(_DWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  v13 = (_BYTE *)(a1 + 376);
  if (*(char *)(a2 + 399) < 0)
  {
    sub_23941A7F8(v13, *(void **)(a2 + 376), *(_QWORD *)(a2 + 384));
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_OWORD *)v13 = v14;
  }
  return a1;
}

void sub_239974030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10)
{
  char *v10;
  void **v11;
  void **v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  void **v17;
  void **v18;

  if (v10[359] < 0)
  {
    operator delete(*v11);
    if ((v10[319] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v10[279] & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v10[319] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v18);
  if ((v10[279] & 0x80000000) == 0)
  {
LABEL_4:
    if ((v10[239] & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*v17);
  if ((v10[239] & 0x80000000) == 0)
  {
LABEL_5:
    if ((v10[199] & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  operator delete(*v16);
  if ((v10[199] & 0x80000000) == 0)
  {
LABEL_6:
    if ((v10[159] & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*v15);
  if ((v10[159] & 0x80000000) == 0)
  {
LABEL_7:
    if ((v10[119] & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*v14);
  if ((v10[119] & 0x80000000) == 0)
  {
LABEL_8:
    if ((v10[79] & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*v13);
  if ((v10[79] & 0x80000000) == 0)
  {
LABEL_9:
    if ((v10[39] & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*v12);
  if ((v10[39] & 0x80000000) == 0)
LABEL_10:
    _Unwind_Resume(exception_object);
LABEL_19:
  operator delete(*a10);
  _Unwind_Resume(exception_object);
}

void sub_23997419C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_2399741B0()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_250AF0D80;
  return result;
}

void sub_2399741D4(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_250AF0D80;
}

void sub_2399741F4()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239974208(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF0DC8;
  result[1] = v3;
  return result;
}

uint64_t sub_23997423C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF0DC8;
  a2[1] = v2;
  return result;
}

uint64_t sub_239974258(uint64_t a1, float *a2)
{
  uint64_t result;
  float v3;
  float v4;

  result = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 24);
  if (result)
  {
    v3 = *a2 / 100.0 * 70.0 + 30.0;
    v4 = v3;
    return (*(uint64_t (**)(uint64_t, float *))(*(_QWORD *)result + 48))(result, &v4);
  }
  return result;
}

BOOL sub_2399742BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, float a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t *a10, uint64_t a11, unsigned __int8 a12)
{
  _QWORD *v14;
  unsigned int v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  _BOOL8 v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  char *v31;
  size_t v32;
  size_t v33;
  float32x4_t *p_p;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t *v39;
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v42;
  unint64_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float v46;
  unsigned int v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  float *v64;
  float v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  float32x4_t v73;
  float v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  float32x4_t v82;
  uint64_t v83;
  uint64_t v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float v88;
  float v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  float32x4_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  unint64_t v104;
  float32x4_t v105;
  uint64_t v106;
  uint64_t *v107;
  std::__shared_weak_count *v108;
  uint64_t v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  float32x4_t v113;
  float v114;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  int32x4_t v121;
  int32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  float32x4_t v125;
  float32x4_t v126;
  float32x4_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  float32x4_t v131;
  float v132;
  float v133;
  float32x4_t v134;
  float v135;
  float32x4_t v136;
  float v137;
  int v138;
  __int32 v139;
  double v140;
  float v141;
  float64x2_t v142;
  __double2 v143;
  uint64_t v144;
  unint64_t v145;
  double v146;
  float v147;
  unsigned int v148;
  float v149;
  float32x4_t v150;
  float32x4_t v151;
  float32x4_t v152;
  void *v153;
  unint64_t v154;
  unint64_t v155;
  void *v156;
  void *v157;
  int v158;
  uint64_t v159;
  unsigned int v160;
  _BYTE *v161;
  uint64_t v162;
  int v163;
  int v164;
  _BYTE *v165;
  uint64_t v166;
  void *v167;
  unint64_t v168;
  unint64_t v169;
  void *v170;
  void *v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  _BYTE *v177;
  int v178;
  int v179;
  int v181;
  BOOL v182;
  void *context;
  void *v185;
  unsigned int v186;
  void *v188;
  void *v189;
  void *v190;
  float32x4_t v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  float32x4_t v196;
  float32x4_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  void *v202;
  int v203;
  float v204;
  float v205;
  float v206;
  float v207;
  float v208;
  float v209;
  float32x4_t v210;
  float32x4_t v211;
  float32x4_t v212;
  float32x4_t v213;
  float32x4_t v214;
  float32x4_t v215;
  float32x4_t v216;
  float32x4_t v217;
  float32x4_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  float v222;
  char *v225;
  __int32 v226;
  float32x4_t v228;
  double v229;
  float v230;
  uint64_t v231;
  unint64_t v232;
  float32x4_t v233;
  float64x2_t v234;
  unint64_t v235;
  int64x2_t v236;
  unint64_t v237;
  int64x2_t v238;
  unint64_t v239;
  int64x2_t v240;
  uint64_t v241;
  int64x2_t v242;
  unsigned int v243;
  float32x4_t __p;
  unint64_t v245;
  float32x4_t v246;
  float32x4_t v247;
  void *v248;
  void *v249;
  char *v250;
  id v251;
  id v252;
  uint64_t v253;
  double v254;
  int v255;
  __int128 v256;
  char v257;
  __int128 v258;
  uint64_t v259;

  v259 = *MEMORY[0x24BDAC8D0];
  v254 = 0.0;
  sub_23993C9C8((uint64_t)a5, &v254);
  v253 = 0x100000000;
  v14 = sub_23993BC9C(a5, &v253);
  v232 = (*(_DWORD *)(a2 + 8) * *(_DWORD *)(a2 + 4));
  v15 = v232 >> 7;
  if (v232 >> 7 >= 0x2000)
    v15 = 0x2000;
  v186 = v15;
  context = (void *)MEMORY[0x23B83EC40](v14);
  sub_23993D738((uint64_t)a5);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v192 = (void *)objc_msgSend(v16, "newCommandQueue");
  v252 = 0;
  v202 = v16;
  sub_2399FA2BC(v16, (uint64_t)&v252, a10, a12);
  v185 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v252;
  if (v17)
  {
    if (a9)
      *(_DWORD *)(a8 + 384) = 5;
    v18 = *(_QWORD *)(a11 + 24);
    if (v18)
    {
      HIBYTE(v245) = 0;
      __p.i8[0] = 0;
      LODWORD(v248) = 5;
      (*(void (**)(uint64_t, void **, float32x4_t *))(*(_QWORD *)v18 + 48))(v18, &v248, &__p);
      if (SHIBYTE(v245) < 0)
        operator delete((void *)__p.i64[0]);
    }

    v19 = 0;
    v194 = 0;
    v195 = 0;
    v188 = 0;
    v189 = 0;
    v20 = 0;
    v190 = 0;
    goto LABEL_136;
  }
  v181 = a9;
  sub_23993D760((uint64_t)a5);
  v21 = objc_claimAutoreleasedReturnValue();
  sub_23993D77C((uint64_t)a5);
  v189 = (void *)v21;
  v190 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = objc_alloc_init(MEMORY[0x24BDDD550]);
  objc_msgSend(v22, "setThreadGroupSizeIsMultipleOfThreadExecutionWidth:", 1);
  v23 = (void *)objc_msgSend(v185, "newFunctionWithName:", CFSTR("rcdBOOL"));
  objc_msgSend(v22, "setComputeFunction:", v23);

  v251 = 0;
  v24 = objc_msgSend(v16, "newComputePipelineStateWithDescriptor:options:reflection:error:", v22, 0, 0, &v251);
  v25 = v251;
  if (!v24)
  {
    if (v181)
      *(_DWORD *)(a8 + 384) = 5;
    v29 = *(_QWORD *)(a11 + 24);
    if (v29)
    {
      HIBYTE(v245) = 0;
      __p.i8[0] = 0;
      LODWORD(v248) = 5;
      (*(void (**)(uint64_t, void **, float32x4_t *))(*(_QWORD *)v29 + 48))(v29, &v248, &__p);
      if (SHIBYTE(v245) < 0)
        operator delete((void *)__p.i64[0]);
    }

    v19 = 0;
    v194 = 0;
    v195 = 0;
    v188 = 0;
    v20 = 0;
    goto LABEL_136;
  }
  v195 = (void *)v24;

  v200 = v186 << 7;
  v26 = (void *)objc_msgSend(v16, "newBufferWithLength:options:", 32 * v200, 0);
  v27 = objc_msgSend(v16, "newBufferWithLength:options:", 16 * v200, 32);
  v193 = (void *)objc_msgSend(v16, "newBufferWithLength:options:", v200, 0);
  v194 = (void *)v27;
  v188 = v26;
  v28 = objc_msgSend(v26, "contents");
  if (v186)
  {
    v225 = (char *)operator new(8 * v186);
    bzero(v225, 8 * v186);
  }
  else
  {
    v225 = 0;
  }
  v30 = operator new(0xCuLL);
  v250 = (char *)(v30 + 3);
  *(_QWORD *)v30 = -1;
  v30[2] = -1;
  v248 = v30;
  v249 = v30 + 3;
  v31 = off_256934408[0];
  v32 = strlen(off_256934408[0]);
  if (v32 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v33 = v32;
  if (v32 >= 0x17)
  {
    v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v32 | 7) != 0x17)
      v35 = v32 | 7;
    v36 = v35 + 1;
    p_p = (float32x4_t *)operator new(v35 + 1);
    v245 = v36 | 0x8000000000000000;
    __p.i64[0] = (uint64_t)p_p;
    __p.i64[1] = v33;
  }
  else
  {
    HIBYTE(v245) = v32;
    p_p = &__p;
    if (!v32)
      goto LABEL_28;
  }
  memmove(p_p, v31, v33);
LABEL_28:
  p_p->i8[v33] = 0;
  v256 = 0uLL;
  v37 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)&v256, (unsigned __int8 *)&__p);
  v182 = v37 != -1;
  v38 = a1;
  if (SHIBYTE(v245) < 0)
  {
    operator delete((void *)__p.i64[0]);
    v38 = a1;
  }
  v39 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * v37);
  v40 = (std::__shared_weak_count *)v39[1];
  v199 = *v39;
  if (v40)
  {
    p_shared_owners = (unint64_t *)&v40->__shared_owners_;
    do
      v42 = __ldxr(p_shared_owners);
    while (__stxr(v42 + 1, p_shared_owners));
    do
      v43 = __ldaxr(p_shared_owners);
    while (__stlxr(v43 - 1, p_shared_owners));
    v38 = a1;
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
      v38 = a1;
    }
  }
  __p = 0uLL;
  LODWORD(v245) = 0;
  v44.i64[0] = 0x80000000800000;
  v44.i64[1] = 0x80000000800000;
  v246 = (float32x4_t)vdupq_n_s32(0x7F7FFFFFu);
  v247 = v44;
  sub_23992E814(v38, &__p);
  v45 = vsubq_f32(v247, v246);
  v46 = v45.f32[1];
  if (v45.f32[0] >= v45.f32[1])
    v46 = v45.f32[0];
  v45.i32[0] = v45.i32[2];
  if (v46 >= v45.f32[2])
    v45.f32[0] = v46;
  v226 = v45.i32[0];
  if (!*(_DWORD *)(a2 + 8))
    goto LABEL_131;
  v47 = *(_DWORD *)(a2 + 4);
  if (!v47)
    goto LABEL_131;
  v48 = 0;
  v49 = 0;
  v50 = v28 + 16;
  v51 = v232 >> 7;
  if (v232 >> 7 >= 0x2000)
    v51 = 0x2000;
  v198 = -128 * v51;
LABEL_46:
  v52 = 0;
  v203 = v48;
  while (1)
  {
    if (!*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_DWORD *)(a2 + 12) * (v52 + v47 * v48)))
      goto LABEL_48;
    v53 = *(_QWORD *)(a3 + 16);
    v54 = ((v52 + *(_DWORD *)(a3 + 4) * v48) * *(_DWORD *)(a3 + 12));
    v243 = *(_DWORD *)(v53 + 16 * v54 + 4);
    v55 = a1;
    sub_23996362C(a1, &v243, (uint64_t)&v248);
    v56 = *(unsigned int *)v248;
    v57 = (uint64_t *)(*(_QWORD *)(v55 + 8) + 16 * *(unsigned int *)(v55 + 176));
    v58 = *v57;
    v59 = (std::__shared_weak_count *)v57[1];
    if (v59)
    {
      v60 = (unint64_t *)&v59->__shared_owners_;
      do
        v61 = __ldxr(v60);
      while (__stxr(v61 + 1, v60));
      do
        v62 = __ldaxr(v60);
      while (__stlxr(v62 - 1, v60));
      v55 = a1;
      if (!v62)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
        v55 = a1;
      }
    }
    v63 = v53 + 16 * v54;
    v65 = *(float *)(v63 + 8);
    v64 = (float *)(v63 + 8);
    v230 = v65;
    v233 = *(float32x4_t *)(*(_QWORD *)(v58 + 40) + 16 * v56);
    v66 = *((unsigned int *)v248 + 1);
    v67 = (uint64_t *)(*(_QWORD *)(v55 + 8) + 16 * *(unsigned int *)(v55 + 176));
    v68 = *v67;
    v69 = (std::__shared_weak_count *)v67[1];
    if (v69)
    {
      v70 = (unint64_t *)&v69->__shared_owners_;
      do
        v71 = __ldxr(v70);
      while (__stxr(v71 + 1, v70));
      do
        v72 = __ldaxr(v70);
      while (__stlxr(v72 - 1, v70));
      v55 = a1;
      if (!v72)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        v55 = a1;
      }
    }
    v73 = *(float32x4_t *)(*(_QWORD *)(v68 + 40) + 16 * v66);
    v74 = v64[1];
    v75 = *((unsigned int *)v248 + 2);
    v76 = (uint64_t *)(*(_QWORD *)(v55 + 8) + 16 * *(unsigned int *)(v55 + 176));
    v77 = *v76;
    v78 = (std::__shared_weak_count *)v76[1];
    v228 = v73;
    v222 = v74;
    if (v78)
    {
      v79 = (unint64_t *)&v78->__shared_owners_;
      do
        v80 = __ldxr(v79);
      while (__stxr(v80 + 1, v79));
      do
        v81 = __ldaxr(v79);
      while (__stlxr(v81 - 1, v79));
      if (!v81)
      {
        ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
        std::__shared_weak_count::__release_weak(v78);
        v74 = v222;
        v73 = v228;
      }
    }
    v82 = *(float32x4_t *)(*(_QWORD *)(v77 + 40) + 16 * v75);
    v83 = *(_QWORD *)(v199 + 40);
    v84 = *(unsigned int *)v248;
    v85 = *(float32x4_t *)(v83 + 16 * *((unsigned int *)v248 + 1));
    v86 = *(float32x4_t *)(v83 + 16 * v84);
    v87 = *(float32x4_t *)(v83 + 16 * *((unsigned int *)v248 + 2));
    v89 = *v64;
    v88 = v64[1];
    v90 = a1;
    v91 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v92 = *v91;
    v93 = (std::__shared_weak_count *)v91[1];
    if (v93)
    {
      v94 = (unint64_t *)&v93->__shared_owners_;
      do
        v95 = __ldxr(v94);
      while (__stxr(v95 + 1, v94));
      do
        v96 = __ldaxr(v94);
      while (__stlxr(v96 - 1, v94));
      v90 = a1;
      if (!v96)
      {
        v216 = v85;
        v219 = v82;
        v210 = v86;
        v213 = v87;
        v204 = v89;
        v207 = v88;
        ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
        std::__shared_weak_count::__release_weak(v93);
        v89 = v204;
        v88 = v207;
        v86 = v210;
        v87 = v213;
        v85 = v216;
        v82 = v219;
        v74 = v222;
        v73 = v228;
        v90 = a1;
      }
    }
    v97 = *(float32x4_t *)(*(_QWORD *)(v92 + 40) + 16 * v84);
    v98 = *((unsigned int *)v248 + 1);
    v99 = (uint64_t *)(*(_QWORD *)(v90 + 8) + 16 * *(unsigned int *)(v90 + 176));
    v100 = *v99;
    v101 = (std::__shared_weak_count *)v99[1];
    if (v101)
    {
      v102 = (unint64_t *)&v101->__shared_owners_;
      do
        v103 = __ldxr(v102);
      while (__stxr(v103 + 1, v102));
      do
        v104 = __ldaxr(v102);
      while (__stlxr(v104 - 1, v102));
      v90 = a1;
      if (!v104)
      {
        v196 = v97;
        v217 = v85;
        v220 = v82;
        v211 = v86;
        v214 = v87;
        v205 = v89;
        v208 = v88;
        ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
        std::__shared_weak_count::__release_weak(v101);
        v89 = v205;
        v88 = v208;
        v86 = v211;
        v87 = v214;
        v85 = v217;
        v82 = v220;
        v97 = v196;
        v74 = v222;
        v73 = v228;
        v90 = a1;
      }
    }
    v105 = *(float32x4_t *)(*(_QWORD *)(v100 + 40) + 16 * v98);
    v106 = *((unsigned int *)v248 + 2);
    v107 = (uint64_t *)(*(_QWORD *)(v90 + 8) + 16 * *(unsigned int *)(v90 + 176));
    v109 = *v107;
    v108 = (std::__shared_weak_count *)v107[1];
    v16 = v202;
    v48 = v203;
    if (v108)
    {
      v110 = (unint64_t *)&v108->__shared_owners_;
      do
        v111 = __ldxr(v110);
      while (__stxr(v111 + 1, v110));
      do
        v112 = __ldaxr(v110);
      while (__stlxr(v112 - 1, v110));
      if (!v112)
      {
        v197 = v97;
        v218 = v85;
        v221 = v82;
        v212 = v86;
        v215 = v87;
        v206 = v89;
        v209 = v88;
        v191 = v105;
        ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
        std::__shared_weak_count::__release_weak(v108);
        v105 = v191;
        v89 = v206;
        v88 = v209;
        v86 = v212;
        v87 = v215;
        v85 = v218;
        v82 = v221;
        v97 = v197;
        v74 = v222;
        v73 = v228;
      }
    }
    v113 = vaddq_f32(vmulq_n_f32(v233, v230), vmulq_n_f32(v73, v74));
    v114 = (float)(1.0 - v89) - v88;
    v115 = vmulq_n_f32(v82, v114);
    v116 = vaddq_f32(vaddq_f32(vmulq_n_f32(v86, v89), vmulq_n_f32(v85, v88)), vmulq_n_f32(v87, v114));
    v117 = vmulq_f32(v116, v116);
    v117.i32[3] = 0;
    v117.i64[0] = vpaddq_f32(v117, v117).u64[0];
    v117.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v117.f32));
    v118 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v117.f32, 0);
    v119 = *(float32x4_t *)(*(_QWORD *)(v109 + 40) + 16 * v106);
    v120 = vaddq_f32(v113, v115);
    v121 = (int32x4_t)vsubq_f32(v105, v97);
    v122 = (int32x4_t)vsubq_f32(v119, v105);
    v123 = vmlsq_f32(vmulq_f32((float32x4_t)vzip2q_s32(vzip1q_s32(v121, (int32x4_t)vextq_s8((int8x16_t)v121, (int8x16_t)v121, 0xCuLL)), v121), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v122, (int8x16_t)v122, 4uLL), v122)), (float32x4_t)vzip2q_s32(vzip1q_s32(v122, (int32x4_t)vextq_s8((int8x16_t)v122, (int8x16_t)v122, 0xCuLL)), v122), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v121, (int8x16_t)v121, 4uLL), v121));
    v124 = vmulq_f32(v123, v123);
    v124.i32[3] = 0;
    v125 = vdivq_f32(v116, v118);
    v116.i64[0] = vpaddq_f32(v124, v124).u64[0];
    v116.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v116.f32));
    v126 = vdivq_f32(v123, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v116.f32, 0));
    v127 = vmulq_f32(v125, v126);
    v127.i32[3] = 0;
    v128 = vpaddq_f32(v127, v127);
    v128.f32[0] = vaddv_f32(*(float32x2_t *)v128.f32);
    v118.i32[0] = 0;
    v129 = (float32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_f32(v118, v128), 0), (int8x16_t)vnegq_f32(v126), (int8x16_t)v126);
    v130 = vmulq_f32(v97, v129);
    v130.i32[3] = 0;
    v131 = vmulq_f32(v105, v129);
    v131.i32[3] = 0;
    v132 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v130, v130));
    v133 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v131, v131));
    v134 = vmulq_f32(v119, v129);
    v134.i32[3] = 0;
    v135 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v134, v134));
    if (v133 > v132)
      v132 = v133;
    if (v135 > v132)
      v132 = v135;
    v136 = vmulq_f32(v120, v129);
    v136.i32[3] = 0;
    v137 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v136, v136));
    if (v132 > v137)
      v120 = vaddq_f32(v120, vmulq_n_f32(v125, (float)(v132 - v137) + a6));
    v138 = 0;
    *(_DWORD *)&v225[(v49 >> 4) & 0xFFFFFFFFFFFFFF8] = v52;
    *(_DWORD *)&v225[(v49 >> 4) & 0xFFFFFFFFFFFFFF8 | 4] = v203;
    v231 = v120.i64[0];
    v139 = v120.i32[2];
    v140 = 0.0;
    do
    {
      v229 = v140;
      v141 = (v140 + 0.5) * -0.0625 + 1.0;
      v143 = __sincos_stret((v141 + -0.5 + v141 + -0.5) * 3.14159265);
      v142.f64[0] = v143.__cosval;
      v144 = 0;
      v142.f64[1] = v143.__sinval;
      v234 = v142;
      v145 = v50 + 32 * v49;
      v146 = 0.0;
      do
      {
        v147 = (v146 + 0.5) * -0.125 + 1.0;
        *(float *)&v148 = sin((v147 + -0.5) * 3.14159265);
        v149 = sqrt(1.0 - (float)(*(float *)&v148 * *(float *)&v148));
        *(float32x2_t *)v150.f32 = vcvt_f32_f64(vmulq_n_f64(v234, v149));
        v150.i64[1] = v148;
        v151 = vmulq_f32(v150, v150);
        v151.i32[3] = 0;
        v151.i64[0] = vpaddq_f32(v151, v151).u64[0];
        v151.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v151.f32));
        v152 = vdivq_f32(v150, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v151.f32, 0));
        *(_QWORD *)(v145 - 16) = v231;
        *(_QWORD *)v145 = v152.i64[0];
        *(_DWORD *)(v145 - 8) = v139;
        *(float *)(v145 - 4) = a6;
        *(_DWORD *)(v145 + 8) = v152.i32[2];
        *(_DWORD *)(v145 + 12) = v226;
        v146 = v146 + 1.0;
        ++v144;
        v145 += 32;
      }
      while ((_DWORD)v144 != 8);
      v140 = v229 + 1.0;
      ++v138;
      v49 += v144;
    }
    while (v138 != 16);
    if (!(v49 + v198))
      break;
LABEL_47:
    v47 = *(_DWORD *)(a2 + 4);
LABEL_48:
    if (++v52 >= v47)
      goto LABEL_113;
  }
  objc_msgSend(v192, "commandBuffer", v140);
  v153 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v189, "encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:intersectionBuffer:intersectionBufferOffset:rayCount:accelerationStructure:", v153, 1, v188, 0, v194, 0, v200, v190);
  v154 = objc_msgSend(v195, "maxTotalThreadsPerThreadgroup");
  if (v154 >= v200)
    v155 = v186 << 7;
  else
    v155 = v154;
  objc_msgSend(v153, "computeCommandEncoder");
  v156 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v156, "setBuffer:offset:atIndex:", v194, 0, 0);
  objc_msgSend(v156, "setBuffer:offset:atIndex:", v193, 0, 1);
  objc_msgSend(v156, "setComputePipelineState:", v195);
  v241 = v186 << 7;
  v242 = vdupq_n_s64(1uLL);
  v239 = v155;
  v240 = v242;
  objc_msgSend(v156, "dispatchThreads:threadsPerThreadgroup:", &v241, &v239);
  objc_msgSend(v156, "endEncoding");
  sub_2399FCF18();
  objc_msgSend(v153, "commit");
  objc_msgSend(v153, "waitUntilCompleted");
  objc_msgSend(v153, "error");
  v157 = (void *)objc_claimAutoreleasedReturnValue();
  v158 = sub_2399F93F8(v157);

  if (!v158)
  {
    v159 = objc_msgSend(v193, "contents");
    if (v186)
    {
      v160 = 0;
      v161 = (_BYTE *)(v159 + 3);
      do
      {
        v162 = 0;
        v163 = *(_DWORD *)&v225[4 * (v160 >> 6)];
        v164 = *(_DWORD *)&v225[4 * ((v160 >> 6) | 1)];
        v165 = v161;
        do
        {
          *((_BYTE *)&v258 + v162++) = v165[4] | (2
                                                * ((4
                                                  * ((4 * ((4 * *(v165 - 3)) | (2 * *(v165 - 2)) | *(v165 - 1))) | (2 * *v165) | v165[1])) | (2 * v165[2]) | v165[3]));
          v165 += 8;
        }
        while (v162 != 16);
        *(_OWORD *)(*(_QWORD *)(a4 + 16)
                  + 4 * ((v163 + *(_DWORD *)(a4 + 4) * v164) * *(_DWORD *)(a4 + 12))) = v258;
        v160 += 128;
        v161 += 128;
      }
      while (v200 > v160);
    }

    v49 = 0;
    goto LABEL_47;
  }
  if (v181)
    *(_DWORD *)(a8 + 384) = 16;
  v166 = *(_QWORD *)(a11 + 24);
  if (v166)
  {
    v257 = 0;
    LOBYTE(v256) = 0;
    v255 = 16;
    (*(void (**)(uint64_t, int *, __int128 *))(*(_QWORD *)v166 + 48))(v166, &v255, &v256);
    if (v257 < 0)
      operator delete((void *)v256);
  }

  v182 = 0;
  v49 = v186 << 7;
LABEL_113:
  while (++v48 < *(_DWORD *)(a2 + 8))
  {
    v47 = *(_DWORD *)(a2 + 4);
    if (v47)
      goto LABEL_46;
  }
  if (v182 && v49)
  {
    objc_msgSend(v192, "commandBuffer");
    v167 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v189, "encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:intersectionBuffer:intersectionBufferOffset:rayCount:accelerationStructure:", v167, 1, v188, 0, v194, 0, v49, v190);
    v168 = objc_msgSend(v195, "maxTotalThreadsPerThreadgroup");
    if (v168 >= v49)
      v169 = v49;
    else
      v169 = v168;
    objc_msgSend(v167, "computeCommandEncoder");
    v170 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v170, "setBuffer:offset:atIndex:", v194, 0, 0);
    objc_msgSend(v170, "setBuffer:offset:atIndex:", v193, 0, 1);
    objc_msgSend(v170, "setComputePipelineState:", v195);
    v237 = v49;
    v238 = vdupq_n_s64(1uLL);
    v235 = v169;
    v236 = v238;
    objc_msgSend(v170, "dispatchThreads:threadsPerThreadgroup:", &v237, &v235);
    objc_msgSend(v170, "endEncoding");
    sub_2399FCF18();
    objc_msgSend(v167, "commit");
    objc_msgSend(v167, "waitUntilCompleted");
    objc_msgSend(v167, "error");
    v171 = (void *)objc_claimAutoreleasedReturnValue();
    v172 = sub_2399F93F8(v171);

    if (v172)
    {
      if (v181)
        *(_DWORD *)(a8 + 384) = 16;
      v173 = *(_QWORD *)(a11 + 24);
      if (v173)
      {
        v257 = 0;
        LOBYTE(v256) = 0;
        v255 = 16;
        (*(void (**)(uint64_t, int *, __int128 *))(*(_QWORD *)v173 + 48))(v173, &v255, &v256);
        if (v257 < 0)
          operator delete((void *)v256);
      }
      v182 = 0;
    }
    else
    {
      v174 = objc_msgSend(v193, "contents");
      LODWORD(v175) = 0;
      do
      {
        v176 = 0;
        v177 = (_BYTE *)(v174 + 3 + v175);
        v178 = *(_DWORD *)&v225[4 * (v175 >> 6)];
        v179 = *(_DWORD *)&v225[4 * ((v175 >> 6) | 1)];
        do
        {
          *((_BYTE *)&v256 + v176++) = v177[4] | (2
                                                * ((4
                                                  * ((4 * ((4 * *(v177 - 3)) | (2 * *(v177 - 2)) | *(v177 - 1))) | (2 * *v177) | v177[1])) | (2 * v177[2]) | v177[3]));
          v177 += 8;
        }
        while (v176 != 16);
        *(_OWORD *)(*(_QWORD *)(a4 + 16)
                  + 4 * ((v178 + *(_DWORD *)(a4 + 4) * v179) * *(_DWORD *)(a4 + 12))) = v256;
        v175 = (v175 + 128);
      }
      while (v49 > v175);
    }

  }
LABEL_131:
  if (v248)
  {
    v249 = v248;
    operator delete(v248);
  }
  if (v225)
    operator delete(v225);
  v20 = v182;
  v19 = v193;
LABEL_136:

  objc_autoreleasePoolPop(context);
  return v20;
}

void sub_23997541C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,uint64_t a21,uint64_t a22,void *a23,void *a24,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51)
{
  void *v51;
  void *v52;
  uint64_t v53;
  void *v55;

  if (*(char *)(v53 - 185) < 0)
    operator delete(*(void **)(v53 - 208));

  v55 = (void *)STACK[0x240];
  if (STACK[0x240])
  {
    STACK[0x248] = (unint64_t)v55;
    operator delete(v55);
  }
  if (a51)
    operator delete(a51);

  _Unwind_Resume(a1);
}

uint64_t sub_239975620(const std::__fs::filesystem::path *a1, uint64_t a2)
{
  std::__fs::filesystem::path::__string_view v4;
  void **p_dst;
  std::basic_string_view<_CharT, _Traits>::size_type v6;
  std::basic_string_view<_CharT, _Traits>::size_type v7;
  std::basic_string_view<_CharT, _Traits>::size_type v8;
  _BYTE *p_p;
  unsigned __int8 v10;
  int v11;
  char *v12;
  _BYTE *v13;
  _DWORD *v14;
  uint64_t v15;
  void **v16;
  __int128 v18;
  std::string::size_type v19;
  __int128 v20;
  std::string::size_type v21;
  __int128 v22;
  std::string::size_type v23;
  _DWORD v24[2];
  void *__p;
  std::basic_string_view<_CharT, _Traits>::size_type v26;
  _BYTE v27[7];
  unsigned __int8 v28;
  void **__dst;
  std::basic_string_view<_CharT, _Traits>::size_type size;
  unint64_t v31;

  v4 = std::__fs::filesystem::path::__extension(a1);
  if (v4.__size_ >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  if (v4.__size_ >= 0x17)
  {
    v6 = (v4.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4.__size_ | 7) != 0x17)
      v6 = v4.__size_ | 7;
    v7 = v6 + 1;
    p_dst = (void **)operator new(v6 + 1);
    size = v4.__size_;
    v31 = v7 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v31) = v4.__size_;
  p_dst = (void **)&__dst;
  if (v4.__size_)
LABEL_8:
    memmove(p_dst, v4.__data_, v4.__size_);
  *((_BYTE *)p_dst + v4.__size_) = 0;
  p_p = __dst;
  v8 = size;
  v24[0] = v31;
  *(_DWORD *)((char *)v24 + 3) = *(_DWORD *)((char *)&v31 + 3);
  v10 = HIBYTE(v31);
  if (SHIBYTE(v31) < 0)
  {
    sub_23941A7F8(&__p, __dst, size);
    operator delete(p_p);
    v10 = v28;
    p_p = __p;
    v8 = v26;
  }
  else
  {
    __p = __dst;
    v26 = size;
    *(_DWORD *)v27 = v24[0];
    *(_DWORD *)&v27[3] = *(_DWORD *)((char *)v24 + 3);
    v28 = HIBYTE(v31);
  }
  v11 = (char)v10;
  v12 = (char *)&__p + v10;
  if (v11 >= 0)
    v13 = v12;
  else
    v13 = &p_p[v8];
  if (v11 >= 0)
    p_p = &__p;
  for (; p_p != v13; ++p_p)
    *p_p = __tolower((char)*p_p);
  if ((char)v28 < 0)
  {
    if (v26 == 4)
    {
      v14 = __p;
      if (*(_DWORD *)__p != 1920492846)
      {
LABEL_25:
        if (*v14 == 1735290926)
        {
          if (SHIBYTE(a1->__pn_.__r_.__value_.__r.__words[2]) < 0)
          {
            sub_23941A7F8(&v20, a1->__pn_.__r_.__value_.__l.__data_, a1->__pn_.__r_.__value_.__l.__size_);
          }
          else
          {
            v20 = *(_OWORD *)&a1->__pn_.__r_.__value_.__l.__data_;
            v21 = a1->__pn_.__r_.__value_.__r.__words[2];
          }
          v15 = sub_239944934(&v20, a2);
          if ((SHIBYTE(v21) & 0x80000000) == 0)
            goto LABEL_42;
          v16 = (void **)&v20;
          goto LABEL_41;
        }
        goto LABEL_26;
      }
LABEL_31:
      if (SHIBYTE(a1->__pn_.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_23941A7F8(&v22, a1->__pn_.__r_.__value_.__l.__data_, a1->__pn_.__r_.__value_.__l.__size_);
      }
      else
      {
        v22 = *(_OWORD *)&a1->__pn_.__r_.__value_.__l.__data_;
        v23 = a1->__pn_.__r_.__value_.__r.__words[2];
      }
      v15 = sub_239944BB4(&v22, a2);
      if ((SHIBYTE(v23) & 0x80000000) == 0)
        goto LABEL_42;
      v16 = (void **)&v22;
      goto LABEL_41;
    }
  }
  else if (v28 == 4)
  {
    if ((_DWORD)__p != 1920492846)
    {
      v14 = &__p;
      goto LABEL_25;
    }
    goto LABEL_31;
  }
LABEL_26:
  if (SHIBYTE(a1->__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_23941A7F8(&v18, a1->__pn_.__r_.__value_.__l.__data_, a1->__pn_.__r_.__value_.__l.__size_);
  }
  else
  {
    v18 = *(_OWORD *)&a1->__pn_.__r_.__value_.__l.__data_;
    v19 = a1->__pn_.__r_.__value_.__r.__words[2];
  }
  v15 = sub_239944934(&v18, a2);
  if ((SHIBYTE(v19) & 0x80000000) == 0)
    goto LABEL_42;
  v16 = (void **)&v18;
LABEL_41:
  operator delete(*v16);
LABEL_42:
  if ((char)v28 < 0)
    operator delete(__p);
  return v15;
}

void sub_2399758B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a21 < 0)
    operator delete(__p);
  if (a35 < 0)
    operator delete(a30);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239975928(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  int v11;
  char *v12;
  __int128 *p_dst;
  __int128 *v14;
  _BOOL8 v15;
  void **v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 __dst;
  uint64_t v24;

  v7 = *(_QWORD *)(a4 + 24);
  if (v7)
    return (*(uint64_t (**)(uint64_t, __int128 *, uint64_t))(*(_QWORD *)v7 + 48))(v7, a1, a2);
  if (*(char *)(a3 + 55) < 0)
  {
    sub_23941A7F8(&__dst, *(void **)(a3 + 32), *(_QWORD *)(a3 + 40));
  }
  else
  {
    __dst = *(_OWORD *)(a3 + 32);
    v24 = *(_QWORD *)(a3 + 48);
  }
  v11 = HIBYTE(v24);
  if (v24 >= 0)
    v12 = (char *)&__dst + HIBYTE(v24);
  else
    v12 = (char *)(__dst + *((_QWORD *)&__dst + 1));
  if (v24 >= 0)
    p_dst = &__dst;
  else
    p_dst = (__int128 *)__dst;
  if (p_dst != (__int128 *)v12)
  {
    do
    {
      *(_BYTE *)p_dst = __tolower(*(char *)p_dst);
      p_dst = (__int128 *)((char *)p_dst + 1);
    }
    while (p_dst != (__int128 *)v12);
    v11 = HIBYTE(v24);
  }
  if ((v11 & 0x80) != 0)
  {
    if (*((_QWORD *)&__dst + 1) == 4)
    {
      v14 = (__int128 *)__dst;
      if (*(_DWORD *)__dst != 1920492846)
      {
LABEL_21:
        if (*(_DWORD *)v14 == 1735290926)
        {
          if (*((char *)a1 + 23) < 0)
          {
            sub_23941A7F8(&v19, *(void **)a1, *((_QWORD *)a1 + 1));
          }
          else
          {
            v19 = *a1;
            v20 = *((_QWORD *)a1 + 2);
          }
          v15 = sub_239944A78((uint64_t)&v19, a2);
          if ((SHIBYTE(v20) & 0x80000000) == 0)
            goto LABEL_38;
          v16 = (void **)&v19;
          goto LABEL_37;
        }
        goto LABEL_22;
      }
LABEL_27:
      if (*((char *)a1 + 23) < 0)
      {
        sub_23941A7F8(&v21, *(void **)a1, *((_QWORD *)a1 + 1));
      }
      else
      {
        v21 = *a1;
        v22 = *((_QWORD *)a1 + 2);
      }
      v15 = sub_239944BB8((char *)&v21, a2, a5);
      if ((SHIBYTE(v22) & 0x80000000) == 0)
        goto LABEL_38;
      v16 = (void **)&v21;
      goto LABEL_37;
    }
  }
  else if (v11 == 4)
  {
    if ((_DWORD)__dst != 1920492846)
    {
      v14 = &__dst;
      goto LABEL_21;
    }
    goto LABEL_27;
  }
LABEL_22:
  if (*((char *)a1 + 23) < 0)
  {
    sub_23941A7F8(&v17, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    v17 = *a1;
    v18 = *((_QWORD *)a1 + 2);
  }
  v15 = sub_239944938((uint64_t)&v17, a2, *(unsigned __int16 *)(a3 + 24));
  if ((SHIBYTE(v18) & 0x80000000) == 0)
    goto LABEL_38;
  v16 = (void **)&v17;
LABEL_37:
  operator delete(*v16);
LABEL_38:
  if (SHIBYTE(v24) < 0)
    operator delete((void *)__dst);
  return v15;
}

void sub_239975B60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;

  if (a21 < 0)
    operator delete(__p);
  if (*(char *)(v28 - 57) < 0)
    operator delete(*(void **)(v28 - 80));
  _Unwind_Resume(exception_object);
}

uint64_t sub_239975BC8(uint64_t a1, _QWORD *a2)
{
  char *v4;
  size_t v5;
  size_t v6;
  unsigned int **p_dst;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t *v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  size_t v19;
  size_t v20;
  unsigned int **v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t *v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _DWORD *v35;
  unint64_t v36;
  int32x4_t v37;
  int8x16_t v38;
  int32x4_t v39;
  int8x16_t *v40;
  uint64_t v41;
  uint64_t *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  std::__shared_weak_count *v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  unsigned int v69;
  uint64_t v70;
  unsigned int *v71;
  uint64_t v72;
  float *v73;
  float *v74;
  float v75;
  float *v76;
  float32x4_t v77;
  float32x4_t v78;
  float v79;
  int32x4_t v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t v86;
  int8x16_t v87;
  unsigned int v88;
  unsigned int *__dst;
  char *v90;
  unint64_t v91;

  v4 = off_256934418[0];
  v5 = strlen(off_256934418[0]);
  if (v5 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_74;
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    p_dst = (unsigned int **)operator new(v8 + 1);
    v90 = (char *)v6;
    v91 = v9 | 0x8000000000000000;
    __dst = (unsigned int *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v91) = v5;
  p_dst = &__dst;
  if (v5)
LABEL_8:
    memmove(p_dst, v4, v6);
  *((_BYTE *)p_dst + v6) = 0;
  v87.i32[2] = 0;
  v87.i64[0] = 0;
  v10 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&v87, (unsigned __int8 *)&__dst);
  v11 = v10;
  if (SHIBYTE(v91) < 0)
  {
    operator delete(__dst);
    if (v11 == -1)
      return 0;
  }
  else if (v10 == -1)
  {
    return 0;
  }
  v12 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v11);
  v14 = *v12;
  v13 = (std::__shared_weak_count *)v12[1];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v18 = off_256934438[0];
  v19 = strlen(off_256934438[0]);
  if (v19 > 0x7FFFFFFFFFFFFFF7)
LABEL_74:
    sub_23941A5AC();
  v20 = v19;
  if (v19 >= 0x17)
  {
    v22 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17)
      v22 = v19 | 7;
    v23 = v22 + 1;
    v21 = (unsigned int **)operator new(v22 + 1);
    v90 = (char *)v20;
    v91 = v23 | 0x8000000000000000;
    __dst = (unsigned int *)v21;
    goto LABEL_26;
  }
  HIBYTE(v91) = v19;
  v21 = &__dst;
  if (v19)
LABEL_26:
    memmove(v21, v18, v20);
  *((_BYTE *)v21 + v20) = 0;
  v87.i64[0] = 0;
  v24 = sub_2394E5C88((uint64_t **)(a1 + 80), (uint64_t)&v87, (unsigned __int8 *)&__dst);
  v25 = v24;
  if ((SHIBYTE(v91) & 0x80000000) == 0)
  {
    if (v24 != -1)
      goto LABEL_29;
    return 0;
  }
  operator delete(__dst);
  if (v25 == -1)
    return 0;
LABEL_29:
  v26 = (uint64_t *)(*(_QWORD *)(a1 + 80) + 16 * v25);
  v28 = *v26;
  v27 = (std::__shared_weak_count *)v26[1];
  if (v27)
  {
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  v32 = (uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
  v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 4);
  if (v32 <= v33)
  {
    if (v32 < v33)
      a2[1] = *a2 + 48 * v32;
  }
  else
  {
    sub_239979CFC((uint64_t)a2, v32 - v33);
  }
  v35 = operator new(0xCuLL);
  v90 = (char *)(v35 + 3);
  v91 = (unint64_t)(v35 + 3);
  *(_QWORD *)v35 = -1;
  v35[2] = -1;
  __dst = v35;
  if (*(_QWORD *)(a1 + 160) == *(_QWORD *)(a1 + 152))
    goto LABEL_72;
  v36 = 0;
  do
  {
    v88 = v36;
    sub_23996362C(a1, &v88, (uint64_t)&__dst);
    v41 = __dst[1];
    v42 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v44 = *v42;
    v43 = (std::__shared_weak_count *)v42[1];
    if (v43)
    {
      v45 = (unint64_t *)&v43->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
      do
        v47 = __ldaxr(v45);
      while (__stlxr(v47 - 1, v45));
      if (!v47)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
    v86 = *(float32x4_t *)(*(_QWORD *)(v44 + 40) + 16 * v41);
    v48 = *__dst;
    v49 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v51 = *v49;
    v50 = (std::__shared_weak_count *)v49[1];
    if (v50)
    {
      v52 = (unint64_t *)&v50->__shared_owners_;
      do
        v53 = __ldxr(v52);
      while (__stxr(v53 + 1, v52));
      do
        v54 = __ldaxr(v52);
      while (__stlxr(v54 - 1, v52));
      if (!v54)
      {
        ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
        std::__shared_weak_count::__release_weak(v50);
      }
    }
    v85 = *(float32x4_t *)(*(_QWORD *)(v51 + 40) + 16 * v48);
    v55 = __dst[2];
    v56 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v58 = *v56;
    v57 = (std::__shared_weak_count *)v56[1];
    if (v57)
    {
      v59 = (unint64_t *)&v57->__shared_owners_;
      do
        v60 = __ldxr(v59);
      while (__stxr(v60 + 1, v59));
      do
        v61 = __ldaxr(v59);
      while (__stlxr(v61 - 1, v59));
      if (!v61)
      {
        ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
        std::__shared_weak_count::__release_weak(v57);
      }
    }
    v84 = *(float32x4_t *)(*(_QWORD *)(v58 + 40) + 16 * v55);
    v62 = *__dst;
    v63 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
    v65 = *v63;
    v64 = (std::__shared_weak_count *)v63[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    v83 = *(float32x4_t *)(*(_QWORD *)(v65 + 40) + 16 * v62);
    v69 = v88;
    v70 = *(_QWORD *)(v14 + 40);
    sub_23995E494(a1, v88, (float32x4_t *)&v87);
    v71 = (unsigned int *)(v70 + 12 * v69);
    v72 = *(_QWORD *)(v28 + 40);
    v73 = (float *)(v72 + 8 * v71[1]);
    v74 = (float *)(v72 + 8 * *v71);
    v75 = v74[1];
    v76 = (float *)(v72 + 8 * v71[2]);
    v77.f32[0] = v73[1] - v75;
    v78.f32[0] = v76[1] - v75;
    v79 = (float)((float)(*v73 - *v74) * v78.f32[0]) - (float)(v77.f32[0] * (float)(*v76 - *v74));
    if (fabsf(v79) >= 0.000001)
    {
      v37 = (int32x4_t)vmulq_n_f32(vsubq_f32(vmulq_n_f32(vsubq_f32(v86, v85), v78.f32[0]), vmulq_n_f32(vsubq_f32(v84, v83), v77.f32[0])), 1.0 / v79);
      v38 = v87;
      v39 = (int32x4_t)vmlsq_f32(vmulq_f32((float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v37, (int8x16_t)v37, 4uLL), v37), (float32x4_t)vzip2q_s32(vzip1q_s32((int32x4_t)v87, (int32x4_t)vextq_s8(v38, v38, 0xCuLL)), (int32x4_t)v87)), (float32x4_t)vzip2q_s32(vzip1q_s32(v37, (int32x4_t)vextq_s8((int8x16_t)v37, (int8x16_t)v37, 0xCuLL)), v37), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8(v38, v38, 4uLL), (int32x4_t)v87));
    }
    else
    {
      v77.f32[0] = fabsf(*(float *)v87.i32 + -1.0);
      v78.i32[0] = 897988541;
      v80 = (int32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_f32(v78, v77), 0), (int8x16_t)xmmword_239ECEFC0, (int8x16_t)xmmword_239F02850);
      v38 = v87;
      v81 = (float32x4_t)vzip2q_s32(vzip1q_s32((int32x4_t)v87, (int32x4_t)vextq_s8(v38, v38, 0xCuLL)), (int32x4_t)v87);
      v82 = (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8(v38, v38, 4uLL), (int32x4_t)v87);
      v39 = (int32x4_t)vmlsq_f32(vmulq_f32(v81, (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v80, (int8x16_t)v80, 4uLL), v80)), (float32x4_t)vzip2q_s32(vzip1q_s32(v80, (int32x4_t)vextq_s8((int8x16_t)v80, (int8x16_t)v80, 0xCuLL)), v80), v82);
      v37 = (int32x4_t)vmlsq_f32(vmulq_f32(v81, (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v39, (int8x16_t)v39, 4uLL), v39)), (float32x4_t)vzip2q_s32(vzip1q_s32(v39, (int32x4_t)vextq_s8((int8x16_t)v39, (int8x16_t)v39, 0xCuLL)), v39), v82);
    }
    v40 = (int8x16_t *)(*a2 + 48 * v88);
    *v40 = v38;
    v40[1] = (int8x16_t)v37;
    v40[2] = (int8x16_t)v39;
    ++v36;
  }
  while (v36 < (uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2);
  v35 = __dst;
  if (__dst)
  {
LABEL_72:
    v90 = (char *)v35;
    operator delete(v35);
  }
  return 1;
}

void sub_239976218(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239976250(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v6;
  size_t v7;
  size_t v8;
  __int128 *p_dst;
  uint64_t v10;
  uint64_t v11;
  uint64_t **v12;
  unsigned int v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  size_t v21;
  std::string::size_type v22;
  std::string *p_p;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  uint64_t **v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  size_t v36;
  size_t v37;
  __int128 *v38;
  uint64_t **v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t *v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  size_t v50;
  size_t v51;
  __int128 *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t *v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  int v67;
  char *v68;
  size_t v69;
  std::string::size_type v70;
  std::string *v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  unsigned int v81;
  uint64_t **v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t *v85;
  int v86;
  size_t v87;
  uint64_t *v88;
  int v89;
  size_t v90;
  uint64_t *v91;
  size_t v92;
  int v93;
  _BOOL4 v94;
  int v95;
  __n128 v96;
  int32x2_t v97;
  _BOOL4 v98;
  uint64_t *v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unsigned int *v106;
  uint64_t v107;
  uint64_t v108;
  float *v109;
  float v110;
  float v111;
  float *v112;
  float *v113;
  float v114;
  signed int v115;
  float v116;
  uint64_t v117;
  signed int v118;
  double v119;
  double v120;
  float v121;
  float v122;
  int v123;
  int v124;
  float v125;
  int v126;
  int v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  float32x4_t v136;
  float32x4_t *v137;
  float32x4_t v138;
  float32x4_t *v139;
  float32x4_t *v140;
  float32x4_t *v141;
  uint64_t v142;
  float32x4_t *v143;
  float32x4_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t *v150;
  unint64_t v151;
  char v152;
  uint64_t v153;
  std::__shared_weak_count *v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int v157;
  unsigned int v158;
  uint64_t *v159;
  uint64_t *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  int v164;
  uint64_t v165;
  int v166;
  unsigned int v167;
  _QWORD *v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  uint64_t v175;
  unsigned int v176;
  unsigned int v177;
  uint64_t *v178;
  unsigned int v179;
  uint64_t **v180;
  uint64_t *v181;
  uint64_t *v182;
  uint64_t *v183;
  int v184;
  size_t v185;
  uint64_t *v186;
  int v187;
  size_t v188;
  uint64_t *v189;
  size_t v190;
  int v191;
  _BOOL4 v192;
  int v193;
  int32x2_t v194;
  _BOOL4 v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  std::__shared_weak_count *v203;
  uint64_t v204;
  unint64_t *v205;
  unint64_t v206;
  uint64_t v207;
  void **v208;
  __int128 v209;
  std::__shared_weak_count *v210;
  uint64_t v211;
  std::string *v212;
  uint64_t v213;
  int v214;
  uint64_t v215;
  int v216;
  uint64_t v217;
  uint64_t v218;
  int v219;
  int v220;
  uint64_t v221;
  int v222;
  int v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unsigned int *v227;
  uint64_t v228;
  float *v229;
  uint64_t v230;
  float v231;
  float v232;
  float *v233;
  float *v234;
  float v235;
  signed int v236;
  double v237;
  float v238;
  uint64_t v239;
  signed int v240;
  double v241;
  double v242;
  float v243;
  float v244;
  int v245;
  int v246;
  float v247;
  float v248;
  int v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  float32x4_t v258;
  float32x4_t *v259;
  float32x4_t v260;
  float32x4_t *v261;
  float32x4_t *v262;
  float32x4_t *v263;
  uint64_t v264;
  float32x4_t *v265;
  float32x4_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t *v271;
  unint64_t v272;
  int v274;
  std::__shared_weak_count *v275;
  _BOOL4 v276;
  int v277;
  uint64_t *v278;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unsigned int v286;
  std::string __p;
  __int128 __dst;
  _QWORD v289[4];

  v289[2] = *MEMORY[0x24BDAC8D0];
  v6 = off_256934428[0];
  v7 = strlen(off_256934428[0]);
  if (v7 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v8 = v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    p_dst = (__int128 *)operator new(v10 + 1);
    *((_QWORD *)&__dst + 1) = v8;
    v289[0] = v11 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v289[0]) = v7;
  p_dst = &__dst;
  if (v7)
LABEL_8:
    memmove(p_dst, v6, v8);
  *((_BYTE *)p_dst + v8) = 0;
  v12 = (uint64_t **)(a1 + 56);
  LOWORD(__p.__r_.__value_.__l.__data_) = 0;
  v13 = sub_23958CE84((uint64_t **)(a1 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v289[0]) < 0)
    operator delete((void *)__dst);
  v14 = &(*v12)[2 * v13];
  v16 = *v14;
  v15 = (std::__shared_weak_count *)v14[1];
  if (!v15)
    goto LABEL_16;
  p_shared_owners = (unint64_t *)&v15->__shared_owners_;
  do
    v18 = __ldxr(p_shared_owners);
  while (__stxr(v18 + 1, p_shared_owners));
  do
    v19 = __ldaxr(p_shared_owners);
  while (__stlxr(v19 - 1, p_shared_owners));
  if (v19)
  {
LABEL_16:
    if (v13 != -1)
      goto LABEL_17;
LABEL_28:
    v26 = 0;
    goto LABEL_29;
  }
  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
  std::__shared_weak_count::__release_weak(v15);
  if (v13 == -1)
    goto LABEL_28;
LABEL_17:
  v20 = off_256934458;
  v21 = strlen(off_256934458);
  if (v21 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v22 = v21;
  if (v21 >= 0x17)
  {
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v21 | 7) != 0x17)
      v24 = v21 | 7;
    v25 = v24 + 1;
    p_p = (std::string *)operator new(v24 + 1);
    __p.__r_.__value_.__l.__size_ = v22;
    __p.__r_.__value_.__r.__words[2] = v25 | 0x8000000000000000;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    v12 = (uint64_t **)(a1 + 56);
    goto LABEL_24;
  }
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = v21;
  p_p = &__p;
  if (v21)
LABEL_24:
    memmove(p_p, v20, v22);
  p_p->__r_.__value_.__s.__data_[v22] = 0;
  *((_QWORD *)&__dst + 1) = 0;
  v289[0] = 0;
  *(_QWORD *)&__dst = (char *)&__dst + 8;
  v13 = sub_23958C234((uint64_t **)(a1 + 80), (uint64_t)&__dst, (unsigned __int8 *)&__p);
  v26 = v13 != -1;
  sub_23958B6B4((uint64_t)&__dst, *((char **)&__dst + 1));
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
LABEL_29:
  v28 = *(_QWORD *)(a1 + 80);
  v27 = (uint64_t **)(a1 + 80);
  v29 = (uint64_t *)(v28 + 16 * v13);
  v30 = *v29;
  v31 = (std::__shared_weak_count *)v29[1];
  if (!v31)
    goto LABEL_34;
  v32 = (unint64_t *)&v31->__shared_owners_;
  do
    v33 = __ldxr(v32);
  while (__stxr(v33 + 1, v32));
  do
    v34 = __ldaxr(v32);
  while (__stlxr(v34 - 1, v32));
  if (v34)
  {
LABEL_34:
    v278 = *(uint64_t **)(v30 + 40);
    if (v26)
      goto LABEL_35;
LABEL_46:
    v42 = -1;
    goto LABEL_47;
  }
  ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
  std::__shared_weak_count::__release_weak(v31);
  v278 = *(uint64_t **)(v30 + 40);
  if (!v26)
    goto LABEL_46;
LABEL_35:
  v35 = off_256934418[0];
  v36 = strlen(off_256934418[0]);
  if (v36 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v37 = v36;
  if (v36 >= 0x17)
  {
    v39 = v12;
    v40 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v36 | 7) != 0x17)
      v40 = v36 | 7;
    v41 = v40 + 1;
    v38 = (__int128 *)operator new(v40 + 1);
    *((_QWORD *)&__dst + 1) = v37;
    v289[0] = v41 | 0x8000000000000000;
    *(_QWORD *)&__dst = v38;
    v12 = v39;
    goto LABEL_42;
  }
  HIBYTE(v289[0]) = v36;
  v38 = &__dst;
  if (v36)
LABEL_42:
    memmove(v38, v35, v37);
  *((_BYTE *)v38 + v37) = 0;
  LODWORD(__p.__r_.__value_.__r.__words[1]) = 0;
  __p.__r_.__value_.__r.__words[0] = 0;
  v42 = sub_2394E5DE4(v12, (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v26 = v42 != -1;
  if (SHIBYTE(v289[0]) < 0)
    operator delete((void *)__dst);
LABEL_47:
  v43 = &(*v12)[2 * v42];
  v44 = *v43;
  v45 = (std::__shared_weak_count *)v43[1];
  if (!v45)
    goto LABEL_52;
  v46 = (unint64_t *)&v45->__shared_owners_;
  do
    v47 = __ldxr(v46);
  while (__stxr(v47 + 1, v46));
  do
    v48 = __ldaxr(v46);
  while (__stlxr(v48 - 1, v46));
  if (v48)
  {
LABEL_52:
    v285 = v44;
    if (v26)
      goto LABEL_53;
LABEL_64:
    v276 = 0;
    v55 = -1;
    goto LABEL_65;
  }
  ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
  std::__shared_weak_count::__release_weak(v45);
  v285 = v44;
  if (!v26)
    goto LABEL_64;
LABEL_53:
  v49 = off_256934438[0];
  v50 = strlen(off_256934438[0]);
  if (v50 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v51 = v50;
  if (v50 >= 0x17)
  {
    v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v50 | 7) != 0x17)
      v53 = v50 | 7;
    v54 = v53 + 1;
    v52 = (__int128 *)operator new(v53 + 1);
    *((_QWORD *)&__dst + 1) = v51;
    v289[0] = v54 | 0x8000000000000000;
    *(_QWORD *)&__dst = v52;
    goto LABEL_60;
  }
  HIBYTE(v289[0]) = v50;
  v52 = &__dst;
  if (v50)
LABEL_60:
    memmove(v52, v49, v51);
  *((_BYTE *)v52 + v51) = 0;
  __p.__r_.__value_.__r.__words[0] = 0;
  v55 = sub_2394E5C88(v27, (uint64_t)&__p, (unsigned __int8 *)&__dst);
  v276 = v55 != -1;
  if (SHIBYTE(v289[0]) < 0)
    operator delete((void *)__dst);
LABEL_65:
  v56 = &(*v27)[2 * v55];
  v57 = *v56;
  v58 = (std::__shared_weak_count *)v56[1];
  if (!v58)
    goto LABEL_70;
  v59 = (unint64_t *)&v58->__shared_owners_;
  do
    v60 = __ldxr(v59);
  while (__stxr(v60 + 1, v59));
  do
    v61 = __ldaxr(v59);
  while (__stlxr(v61 - 1, v59));
  if (!v61)
  {
    ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
    std::__shared_weak_count::__release_weak(v58);
    v63 = a2;
    v62 = a4;
    v64 = a2[3];
    v65 = a2[4];
    v283 = v16;
    v284 = v57;
    if (v64 == v65)
      goto LABEL_83;
  }
  else
  {
LABEL_70:
    v63 = a2;
    v62 = a4;
    v64 = a2[3];
    v65 = a2[4];
    v283 = v16;
    v284 = v57;
    if (v64 == v65)
      goto LABEL_83;
  }
  v66 = 0;
  do
  {
    while (v66)
    {
      v64 += 48;
      v66 = 1;
      if (v64 == v65)
        goto LABEL_77;
    }
    v67 = *(unsigned __int8 *)(v64 + 4);
    v66 = *(_BYTE *)(v64 + 4) == 0;
    v64 += 48;
  }
  while (v64 != v65);
  if (!v67)
  {
LABEL_77:
    if (!v276)
    {
      v152 = 0;
      v153 = (*v27)[0x1FFFFFFFELL];
      v154 = (std::__shared_weak_count *)(*v27)[0x1FFFFFFFFLL];
      if (!v154)
        goto LABEL_174;
      goto LABEL_169;
    }
    v68 = off_256934448[0];
    v69 = strlen(off_256934448[0]);
    if (v69 > 0x7FFFFFFFFFFFFFF7)
      sub_23941A5AC();
    v70 = v69;
    if (v69 >= 0x17)
    {
      v155 = (v69 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v69 | 7) != 0x17)
        v155 = v69 | 7;
      v156 = v155 + 1;
      v71 = (std::string *)operator new(v155 + 1);
      __p.__r_.__value_.__l.__size_ = v70;
      __p.__r_.__value_.__r.__words[2] = v156 | 0x8000000000000000;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v71;
    }
    else
    {
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = v69;
      v71 = &__p;
      if (!v69)
      {
LABEL_163:
        v71->__r_.__value_.__s.__data_[v70] = 0;
        __dst = 0uLL;
        v289[0] = 0;
        v157 = sub_23958C0D8(v27, (uint64_t)&__dst, (unsigned __int8 *)&__p);
        v158 = v157;
        if (SHIBYTE(v289[0]) < 0)
        {
          operator delete((void *)__dst);
          v152 = v158 != -1;
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_165:
            v159 = &(*v27)[2 * v158];
            v153 = *v159;
            v154 = (std::__shared_weak_count *)v159[1];
            if (!v154)
              goto LABEL_174;
LABEL_169:
            v161 = (unint64_t *)&v154->__shared_owners_;
            do
              v162 = __ldxr(v161);
            while (__stxr(v162 + 1, v161));
            do
              v163 = __ldaxr(v161);
            while (__stlxr(v163 - 1, v161));
            if (!v163)
            {
              ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
              std::__shared_weak_count::__release_weak(v154);
            }
LABEL_174:
            v164 = (*(unsigned __int16 (**)(uint64_t))(*(_QWORD *)v153 + 16))(v153);
            if (!v164)
              return v152 & 1;
            v165 = a4;
            if ((v166 = *(_DWORD *)(a4 + 8)) == 0)
              return v152 & 1;
            v167 = 0;
            v168 = a2;
            v274 = v164;
LABEL_177:
            v169 = *(_DWORD *)(v165 + 4);
            if (!v169)
              goto LABEL_275;
            v170 = 0;
            v171 = 0;
            v172 = 0;
            v173 = *(_DWORD *)(v165 + 12);
            v174 = *(_DWORD *)(a5 + 12);
LABEL_180:
            v175 = *(unsigned int *)(v165 + 4);
            v176 = v170;
            v177 = v171;
            while (!*(_BYTE *)(*(_QWORD *)(v165 + 16) + v176)
                 || v167 != *(unsigned __int16 *)(*(_QWORD *)(v16 + 40)
                                                + 2 * *(unsigned int *)(*(_QWORD *)(a5 + 16) + 16 * v177 + 4)))
            {
              v177 += v174;
              v176 += v173;
              if (!--v175)
              {
                ++v172;
                v171 += *(_DWORD *)(a5 + 4) * v174;
                v170 += v169 * v173;
                if (v172 == v166)
                  goto LABEL_275;
                goto LABEL_180;
              }
            }
            v178 = v278;
            do
            {
              v178 = (uint64_t *)v178[1];
              if (!v178)
LABEL_285:
                sub_23941D898("map::at:  key not found");
              while (1)
              {
                v179 = *((unsigned __int16 *)v178 + 16);
                if (v167 >= v179)
                  break;
                v178 = (uint64_t *)*v178;
                if (!v178)
                  goto LABEL_285;
              }
            }
            while (v167 > v179);
            v180 = (uint64_t **)v168[7];
            if (!v180)
LABEL_286:
              sub_23941D898("map::at:  key not found");
            v183 = (uint64_t *)v178[5];
            v181 = v178 + 5;
            v182 = v183;
            v184 = *((char *)v181 + 23);
            if (v184 >= 0)
              v185 = *((unsigned __int8 *)v181 + 23);
            else
              v185 = v181[1];
            if (v184 >= 0)
              v186 = v181;
            else
              v186 = v182;
            while (1)
            {
              while (1)
              {
                v187 = *((char *)v180 + 55);
                if (v187 >= 0)
                  v188 = *((unsigned __int8 *)v180 + 55);
                else
                  v188 = (size_t)v180[5];
                if (v187 >= 0)
                  v189 = (uint64_t *)(v180 + 4);
                else
                  v189 = v180[4];
                if (v188 >= v185)
                  v190 = v185;
                else
                  v190 = v188;
                v191 = memcmp(v186, v189, v190);
                v192 = v185 < v188;
                if (v191)
                  v192 = v191 < 0;
                if (!v192)
                  break;
                v180 = (uint64_t **)*v180;
                if (!v180)
                  goto LABEL_286;
              }
              v193 = memcmp(v189, v186, v190);
              v195 = v188 < v185;
              if (v193)
                v195 = v193 < 0;
              if (!v195)
                break;
              v180 = (uint64_t **)v180[1];
              if (!v180)
                goto LABEL_286;
            }
            v196 = *(uint64_t **)(*a2 + 48 * *((unsigned __int16 *)v180 + 28) + 32);
            v198 = v284;
            v197 = v285;
            if (!v196)
LABEL_287:
              sub_23941D898("map::at:  key not found");
            while (1)
            {
              while (1)
              {
                v199 = *((_DWORD *)v196 + 7);
                if (v199 < 2)
                  break;
                v196 = (uint64_t *)*v196;
                if (!v196)
                  goto LABEL_287;
              }
              if (v199 == 1)
                break;
              v196 = (uint64_t *)v196[1];
              if (!v196)
                goto LABEL_287;
            }
            v200 = *((unsigned __int16 *)v196 + 16);
            v201 = a2[3];
            if (*(_BYTE *)(v201 + 48 * v200 + 4))
            {
              v202 = v201 + 48 * v200;
              v204 = *(_QWORD *)(v202 + 8);
              v203 = *(std::__shared_weak_count **)(v202 + 16);
              if (v203)
              {
                v275 = v203;
                v205 = (unint64_t *)&v203->__shared_owners_;
                do
                  v206 = __ldxr(v205);
                while (__stxr(v206 + 1, v205));
              }
              else
              {
                v275 = 0;
              }
              goto LABEL_242;
            }
            v207 = v201 + 48 * v200;
            v208 = (void **)(v207 + 24);
            if (*(char *)(v207 + 47) < 0)
            {
              sub_23941A7F8(&__dst, *v208, *(_QWORD *)(v201 + 48 * v200 + 32));
              v198 = v284;
              v197 = v285;
            }
            else
            {
              v209 = *(_OWORD *)v208;
              v289[0] = *(_QWORD *)(v207 + 40);
              __dst = v209;
            }
            v210 = (std::__shared_weak_count *)operator new(0x30uLL);
            v210->__shared_owners_ = 0;
            v210->__shared_weak_owners_ = 0;
            v210->__vftable = (std::__shared_weak_count_vtbl *)&off_250ADF208;
            v210[1].__vftable = 0;
            v204 = (uint64_t)&v210[1];
            v210[1].__shared_owners_ = 0;
            v210[1].__shared_weak_owners_ = 0;
            v275 = v210;
            if ((v152 & 1) != 0)
            {
              memset(&__p, 0, sizeof(__p));
              v211 = HIBYTE(v289[0]);
              if (v289[0] >= 0)
                v212 = (std::string *)&__dst;
              else
                v212 = (std::string *)__dst;
              if (v289[0] < 0)
                v211 = *((_QWORD *)&__dst + 1);
              sub_23948900C(&__p, v212, (std::string *)((char *)v212 + v211));
              v152 = sub_239975620((const std::__fs::filesystem::path *)&__p, v204);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              {
                operator delete(__p.__r_.__value_.__l.__data_);
                if ((SHIBYTE(v289[0]) & 0x80000000) == 0)
                {
LABEL_242:
                  v277 = *(_DWORD *)(a4 + 8);
                  if (v277)
                  {
                    v213 = *(unsigned int *)(a4 + 4);
                    if ((_DWORD)v213)
                    {
                      v214 = 0;
                      v215 = *(_QWORD *)(a4 + 16);
                      v216 = *(_DWORD *)(a4 + 12);
                      do
                      {
                        v217 = 0;
                        v218 = *(_QWORD *)(a5 + 16);
                        v219 = *(_DWORD *)(a5 + 4) * v214;
                        v220 = *(_DWORD *)(a5 + 12);
                        v221 = *(_QWORD *)(a3 + 16);
                        v222 = *(_DWORD *)(a3 + 12);
                        v223 = *(_DWORD *)(a3 + 4) * v222 * v214;
                        do
                        {
                          if (*(_BYTE *)(v215 + (v216 * (v213 * v214 + v217))))
                          {
                            v225 = ((v219 + v217) * v220);
                            v226 = *(unsigned int *)(v218 + 16 * v225 + 4);
                            if (v167 == *(unsigned __int16 *)(*(_QWORD *)(v16 + 40) + 2 * v226))
                            {
                              v227 = (unsigned int *)(*(_QWORD *)(v197 + 40) + 12 * v226);
                              v228 = *(_QWORD *)(v198 + 40);
                              v229 = (float *)(v228 + 8 * *v227);
                              v230 = v218 + 16 * v225;
                              v231 = *(float *)(v230 + 8);
                              v232 = *(float *)(v230 + 12);
                              v233 = (float *)(v228 + 8 * v227[1]);
                              v234 = (float *)(v228 + 8 * v227[2]);
                              v235 = (float)(1.0 - v231) - v232;
                              v236 = *(_DWORD *)(v204 + 4);
                              v237 = (float)((float)((float)((float)(*v229 * v231) + (float)(*v233 * v232))
                                                   + (float)(v235 * *v234))
                                           * (float)v236)
                                   + -0.5;
                              if (v237 < 0.0)
                                v237 = 0.0;
                              if (v237 > (double)(v236 - 1))
                                v237 = (double)(v236 - 1);
                              if ((v152 & 1) != 0)
                              {
                                v238 = (float)((float)(v231 * v229[1]) + (float)(v232 * v233[1]))
                                     + (float)(v235 * v234[1]);
                                v240 = *(_DWORD *)(v204 + 8);
                                v239 = *(unsigned int *)(v204 + 12);
                                v241 = (float)((float)(1.0 - v238) * (float)v240) + -0.5;
                                if (v241 < 0.0)
                                  v241 = 0.0;
                                v242 = (double)(v240 - 1);
                                if (v241 > v242)
                                  v241 = (double)(v240 - 1);
                                if ((int)v239 >= 1)
                                {
                                  v243 = v237;
                                  v244 = v241;
                                  v245 = (int)vcvtms_s32_f32(v243) % v236;
                                  v246 = (int)vcvtms_s32_f32(v244) % v240;
                                  v247 = v243 - (float)v245;
                                  v248 = v244 - (float)v246;
                                  v249 = (int)vcvtps_s32_f32(v243) % v236;
                                  v250 = *(_QWORD *)(v204 + 16);
                                  v251 = v246 * v236;
                                  v252 = ((v246 * v236 + v245) * v239);
                                  v253 = (int)vcvtps_s32_f32(v244) % v240 * v236;
                                  v254 = ((v253 + v245) * v239);
                                  v255 = ((v249 + v251) * v239);
                                  v256 = ((v253 + v249) * v239);
                                  *(float *)&v242 = 1.0 - v248;
                                  *(float *)v194.i32 = 1.0 - v247;
                                  if (v239 < 8)
                                  {
                                    v257 = 0;
                                    goto LABEL_266;
                                  }
                                  v258 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v242, 0);
                                  v259 = (float32x4_t *)(v250 + 16 + 4 * v252);
                                  v260 = (float32x4_t)vdupq_lane_s32(v194, 0);
                                  v257 = v239 & 0xFFFFFFF8;
                                  v261 = (float32x4_t *)(v250 + 16 + 4 * v254);
                                  v262 = (float32x4_t *)(v250 + 16 + 4 * v256);
                                  v263 = (float32x4_t *)v289;
                                  v264 = v257;
                                  v265 = (float32x4_t *)(v250 + 16 + 4 * v255);
                                  do
                                  {
                                    v266 = vmlaq_f32(vmulq_n_f32(vmlaq_f32(vmulq_n_f32(*v262, v248), *v265, v258), v247), vmlaq_f32(vmulq_n_f32(*v261, v248), *v259, v258), v260);
                                    v263[-1] = vmlaq_f32(vmulq_n_f32(vmlaq_f32(vmulq_n_f32(v262[-1], v248), v265[-1], v258), v247), vmlaq_f32(vmulq_n_f32(v261[-1], v248), v259[-1], v258), v260);
                                    *v263 = v266;
                                    v259 += 2;
                                    v263 += 2;
                                    v261 += 2;
                                    v262 += 2;
                                    v265 += 2;
                                    v264 -= 8;
                                  }
                                  while (v264);
                                  v16 = v283;
                                  v198 = v284;
                                  v197 = v285;
                                  if (v257 != v239)
                                  {
LABEL_266:
                                    v267 = v250 + 4 * v252;
                                    v268 = v250 + 4 * v254;
                                    v269 = v250 + 4 * v255;
                                    v270 = v250 + 4 * v256;
                                    do
                                    {
                                      *((float *)&v289[-2] + v257) = (float)(v247
                                                                           * (float)((float)(v248
                                                                                           * *(float *)(v270 + 4 * v257))
                                                                                   + (float)(*(float *)&v242
                                                                                           * *(float *)(v269 + 4 * v257))))
                                                                   + (float)(*(float *)v194.i32
                                                                           * (float)((float)(v248
                                                                                           * *(float *)(v268 + 4 * v257))
                                                                                   + (float)(*(float *)&v242
                                                                                           * *(float *)(v267 + 4 * v257))));
                                      ++v257;
                                    }
                                    while (v239 != v257);
                                  }
                                }
                              }
                              v224 = v221 + 4 * (v223 + v222 * v217);
                              v152 &= 1u;
                              *(_QWORD *)v224 = __dst;
                              *(_DWORD *)(v224 + 8) = DWORD2(__dst);
                            }
                          }
                          ++v217;
                        }
                        while (v217 != v213);
                        ++v214;
                      }
                      while (v214 != v277);
                    }
                  }
                  if (v275)
                  {
                    v271 = (unint64_t *)&v275->__shared_owners_;
                    v168 = a2;
                    v165 = a4;
                    v164 = v274;
                    do
                      v272 = __ldaxr(v271);
                    while (__stlxr(v272 - 1, v271));
                    if (!v272)
                    {
                      ((void (*)(std::__shared_weak_count *))v275->__on_zero_shared)(v275);
                      std::__shared_weak_count::__release_weak(v275);
                    }
                  }
                  else
                  {
                    v168 = a2;
                    v165 = a4;
                    v164 = v274;
                  }
LABEL_275:
                  while (++v167 != v164)
                  {
                    v166 = *(_DWORD *)(v165 + 8);
                    if (v166)
                      goto LABEL_177;
                  }
                  return v152 & 1;
                }
              }
              else if ((SHIBYTE(v289[0]) & 0x80000000) == 0)
              {
                goto LABEL_242;
              }
            }
            else
            {
              v152 = 0;
              if ((SHIBYTE(v289[0]) & 0x80000000) == 0)
                goto LABEL_242;
            }
            operator delete((void *)__dst);
            goto LABEL_242;
          }
        }
        else
        {
          v152 = v157 != -1;
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_165;
        }
        operator delete(__p.__r_.__value_.__l.__data_);
        v160 = &(*v27)[2 * v158];
        v153 = *v160;
        v154 = (std::__shared_weak_count *)v160[1];
        if (!v154)
          goto LABEL_174;
        goto LABEL_169;
      }
    }
    memmove(v71, v68, v70);
    goto LABEL_163;
  }
LABEL_83:
  v72 = *(_DWORD *)(v62 + 8);
  if (v72)
  {
    v73 = *(_DWORD *)(v62 + 4);
    if (v73)
    {
      v74 = 0;
      v75 = *(_DWORD *)(v62 + 4);
      while (!v75)
      {
LABEL_87:
        if (++v74 >= v72)
          return v276;
      }
      v76 = 0;
      while (!*(_BYTE *)(*(_QWORD *)(v62 + 16) + *(_DWORD *)(v62 + 12) * (v76 + v75 * v74)))
      {
LABEL_91:
        ++v76;
        v75 = v73;
        if (v76 >= v73)
        {
          v72 = *(_DWORD *)(v62 + 8);
          v75 = v73;
          goto LABEL_87;
        }
      }
      v77 = (uint64_t *)v278[1];
      if (!v77)
LABEL_282:
        sub_23941D898("map::at:  key not found");
      v78 = *(_QWORD *)(a5 + 16);
      v79 = (v76 + *(_DWORD *)(a5 + 4) * v74) * *(_DWORD *)(a5 + 12);
      v80 = *(unsigned __int16 *)(*(_QWORD *)(v16 + 40) + 2 * *(unsigned int *)(v78 + 16 * v79 + 4));
      while (1)
      {
        while (1)
        {
          v81 = *((unsigned __int16 *)v77 + 16);
          if (v80 >= v81)
            break;
          v77 = (uint64_t *)*v77;
          if (!v77)
            goto LABEL_282;
        }
        if (v81 >= v80)
          break;
        v77 = (uint64_t *)v77[1];
        if (!v77)
          goto LABEL_282;
      }
      v286 = *(_DWORD *)(v78 + 16 * v79 + 4);
      v82 = (uint64_t **)v63[7];
      if (!v82)
LABEL_283:
        sub_23941D898("map::at:  key not found");
      v85 = (uint64_t *)v77[5];
      v83 = v77 + 5;
      v84 = v85;
      v86 = *((char *)v83 + 23);
      if (v86 >= 0)
        v87 = *((unsigned __int8 *)v83 + 23);
      else
        v87 = v83[1];
      if (v86 >= 0)
        v88 = v83;
      else
        v88 = v84;
      while (1)
      {
        while (1)
        {
          v89 = *((char *)v82 + 55);
          if (v89 >= 0)
            v90 = *((unsigned __int8 *)v82 + 55);
          else
            v90 = (size_t)v82[5];
          if (v89 >= 0)
            v91 = (uint64_t *)(v82 + 4);
          else
            v91 = v82[4];
          if (v90 >= v87)
            v92 = v87;
          else
            v92 = v90;
          v93 = memcmp(v88, v91, v92);
          v94 = v87 < v90;
          if (v93)
            v94 = v93 < 0;
          if (!v94)
            break;
          v82 = (uint64_t **)*v82;
          if (!v82)
            goto LABEL_283;
        }
        v95 = memcmp(v91, v88, v92);
        v98 = v90 < v87;
        if (v95)
          v98 = v95 < 0;
        if (!v98)
          break;
        v82 = (uint64_t **)v82[1];
        if (!v82)
          goto LABEL_283;
      }
      v63 = a2;
      v62 = a4;
      v99 = *(uint64_t **)(*a2 + 48 * *((unsigned __int16 *)v82 + 28) + 32);
      v16 = v283;
      if (!v99)
LABEL_284:
        sub_23941D898("map::at:  key not found");
      while (1)
      {
        while (1)
        {
          v100 = *((_DWORD *)v99 + 7);
          if (v100 < 2)
            break;
          v99 = (uint64_t *)*v99;
          if (!v99)
            goto LABEL_284;
        }
        if (v100 == 1)
          break;
        v99 = (uint64_t *)v99[1];
        if (!v99)
          goto LABEL_284;
      }
      v101 = a2[3] + 48 * *((unsigned __int16 *)v99 + 16);
      v102 = *(_QWORD *)(v101 + 8);
      v103 = *(std::__shared_weak_count **)(v101 + 16);
      if (v103)
      {
        v104 = (unint64_t *)&v103->__shared_owners_;
        do
          v105 = __ldxr(v104);
        while (__stxr(v105 + 1, v104));
      }
      v106 = (unsigned int *)(*(_QWORD *)(v285 + 40) + 12 * v286);
      v107 = *(_QWORD *)(v284 + 40);
      v108 = v78 + 16 * v79;
      v109 = (float *)(v107 + 8 * *v106);
      v110 = *(float *)(v108 + 8);
      v111 = *(float *)(v108 + 12);
      v112 = (float *)(v107 + 8 * v106[1]);
      v113 = (float *)(v107 + 8 * v106[2]);
      v114 = (float)(1.0 - v110) - v111;
      v115 = *(_DWORD *)(v102 + 4);
      v96.n128_f64[0] = (float)((float)((float)((float)(*v109 * v110) + (float)(*v112 * v111)) + (float)(v114 * *v113))
                              * (float)v115)
                      + -0.5;
      if (v96.n128_f64[0] < 0.0)
        v96.n128_f64[0] = 0.0;
      if (v96.n128_f64[0] > (double)(v115 - 1))
        v96.n128_f64[0] = (double)(v115 - 1);
      if (v276)
      {
        v116 = (float)((float)(v110 * v109[1]) + (float)(v111 * v112[1])) + (float)(v114 * v113[1]);
        v118 = *(_DWORD *)(v102 + 8);
        v117 = *(unsigned int *)(v102 + 12);
        v119 = (float)((float)(1.0 - v116) * (float)v118) + -0.5;
        if (v119 < 0.0)
          v119 = 0.0;
        v120 = (double)(v118 - 1);
        if (v119 > v120)
          v119 = (double)(v118 - 1);
        if ((int)v117 >= 1)
        {
          v121 = v96.n128_f64[0];
          v122 = v119;
          v123 = (int)vcvtms_s32_f32(v121) % v115;
          v124 = (int)vcvtms_s32_f32(v122) % v118;
          v96.n128_f32[0] = v121 - (float)v123;
          v125 = v122 - (float)v124;
          v126 = (int)vcvtps_s32_f32(v122) % v118;
          v127 = (int)vcvtps_s32_f32(v121) % v115;
          v128 = *(_QWORD *)(v102 + 16);
          v129 = v124 * v115;
          v130 = ((v129 + v123) * v117);
          v131 = v126 * v115;
          v132 = ((v131 + v123) * v117);
          v133 = ((v127 + v129) * v117);
          v134 = ((v131 + v127) * v117);
          *(float *)&v120 = 1.0 - v125;
          *(float *)v97.i32 = 1.0 - v96.n128_f32[0];
          if (v117 >= 8)
          {
            v136 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&v120, 0);
            v137 = (float32x4_t *)(v128 + 16 + 4 * v130);
            v138 = (float32x4_t)vdupq_lane_s32(v97, 0);
            v135 = v117 & 0xFFFFFFF8;
            v139 = (float32x4_t *)(v128 + 16 + 4 * v132);
            v140 = (float32x4_t *)(v128 + 16 + 4 * v134);
            v141 = (float32x4_t *)v289;
            v142 = v135;
            v143 = (float32x4_t *)(v128 + 16 + 4 * v133);
            do
            {
              v144 = vmlaq_f32(vmulq_n_f32(vmlaq_f32(vmulq_n_f32(*v140, v125), *v143, v136), v96.n128_f32[0]), vmlaq_f32(vmulq_n_f32(*v139, v125), *v137, v136), v138);
              v141[-1] = vmlaq_f32(vmulq_n_f32(vmlaq_f32(vmulq_n_f32(v140[-1], v125), v143[-1], v136), v96.n128_f32[0]), vmlaq_f32(vmulq_n_f32(v139[-1], v125), v137[-1], v136), v138);
              *v141 = v144;
              v137 += 2;
              v141 += 2;
              v139 += 2;
              v140 += 2;
              v143 += 2;
              v142 -= 8;
            }
            while (v142);
            if (v135 == v117)
              goto LABEL_152;
          }
          else
          {
            v135 = 0;
          }
          v145 = v128 + 4 * v130;
          v146 = v128 + 4 * v132;
          v147 = v128 + 4 * v133;
          v148 = v128 + 4 * v134;
          do
          {
            *((float *)&v289[-2] + v135) = (float)(v96.n128_f32[0]
                                                 * (float)((float)(v125 * *(float *)(v148 + 4 * v135))
                                                         + (float)(*(float *)&v120 * *(float *)(v147 + 4 * v135))))
                                         + (float)(*(float *)v97.i32
                                                 * (float)((float)(v125 * *(float *)(v146 + 4 * v135))
                                                         + (float)(*(float *)&v120 * *(float *)(v145 + 4 * v135))));
            ++v135;
          }
          while (v117 != v135);
        }
      }
LABEL_152:
      v149 = *(_QWORD *)(a3 + 16) + 4 * (v76 + *(_DWORD *)(a3 + 4) * v74) * *(_DWORD *)(a3 + 12);
      *(_QWORD *)v149 = __dst;
      *(_DWORD *)(v149 + 8) = DWORD2(__dst);
      if (v103)
      {
        v150 = (unint64_t *)&v103->__shared_owners_;
        do
          v151 = __ldaxr(v150);
        while (__stlxr(v151 - 1, v150));
        if (!v151)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v103->__on_zero_shared)(v103, v96);
          std::__shared_weak_count::__release_weak(v103);
        }
      }
      v73 = *(_DWORD *)(a4 + 4);
      goto LABEL_91;
    }
  }
  return v276;
}

void sub_239977534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a33 < 0)
    operator delete(__p);
  if (a27 < 0)
  {
    operator delete(a22);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_23997763C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  char *v13;
  size_t v14;
  size_t v15;
  unsigned int **p_dst;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  _DWORD *v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  unsigned int v58;
  float32x4_t v59;
  unsigned int *__dst;
  char *v63;
  unint64_t v64;
  _QWORD v65[2];

  v13 = off_256934408[0];
  v14 = strlen(off_256934408[0]);
  if (v14 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v15 = v14;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    p_dst = (unsigned int **)operator new(v17 + 1);
    v63 = (char *)v15;
    v64 = v18 | 0x8000000000000000;
    __dst = (unsigned int *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v64) = v14;
  p_dst = &__dst;
  if (v14)
LABEL_8:
    memmove(p_dst, v13, v15);
  *((_BYTE *)p_dst + v15) = 0;
  v65[0] = 0;
  v65[1] = 0;
  v19 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)v65, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v64) < 0)
    operator delete(__dst);
  v58 = v19;
  v20 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * v19);
  v22 = *v20;
  v21 = (std::__shared_weak_count *)v20[1];
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v24 = __ldxr(p_shared_owners);
    while (__stxr(v24 + 1, p_shared_owners));
    do
      v25 = __ldaxr(p_shared_owners);
    while (__stlxr(v25 - 1, p_shared_owners));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v26 = operator new(0xCuLL);
  v63 = (char *)(v26 + 3);
  v64 = (unint64_t)(v26 + 3);
  *(_QWORD *)v26 = -1;
  v26[2] = -1;
  __dst = v26;
  v27 = *(_DWORD *)(a4 + 8);
  if (!v27)
    goto LABEL_30;
  v28 = *(_DWORD *)(a4 + 4);
  if (!v28)
    goto LABEL_30;
  v29 = 0;
  __asm { FMOV            V0.4S, #1.0 }
  v59 = _Q0;
  v35 = *(_DWORD *)(a4 + 4);
  do
  {
    if (v35)
    {
      v36 = 0;
      do
      {
        if (*(_BYTE *)(*(_QWORD *)(a4 + 16) + *(_DWORD *)(a4 + 12) * (v36 + v29 * v35)))
        {
          v47 = *(_QWORD *)(a5 + 16);
          v48 = (v36 + v29 * *(_DWORD *)(a5 + 4)) * *(_DWORD *)(a5 + 12);
          LODWORD(v65[0]) = *(_DWORD *)(v47 + 16 * v48 + 4);
          sub_23996362C(a1, (unsigned int *)v65, (uint64_t)&__dst);
          v49 = *(float32x4_t *)(*a8
                               + 48
                               * *(unsigned int *)(*(_QWORD *)(a7 + 16)
                                                 + 4 * (v36 + v29 * *(_DWORD *)(a7 + 4)) * *(_DWORD *)(a7 + 12))
                               + 32);
          v50 = *(float32x4_t *)(*(_QWORD *)(a6 + 16) + 16 * (v36 + v29 * *(_DWORD *)(a6 + 4)) * *(_DWORD *)(a6 + 12));
          v51 = vmulq_f32(v49, v50);
          v51.i32[3] = 0;
          v52 = vsubq_f32(v49, vmulq_n_f32(v50, vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v51, v51))));
          v53 = vmulq_f32(v52, v52);
          v53.i32[3] = 0;
          v54 = vpaddq_f32(v53, v53);
          v55 = vpaddq_f32(v54, v54);
          v56 = (float32x4_t)xmmword_239F02850;
          if (v55.f32[0] > 0.0)
            v56 = vdivq_f32(v52, vsqrtq_f32(v55));
          v26 = __dst;
          v37 = v47 + 16 * v48;
          v38 = vaddq_f32(vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v22 + 40) + 16 * __dst[2]), (float)(1.0 - *(float *)(v37 + 8)) - *(float *)(v37 + 12)), vaddq_f32(vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v22 + 40) + 16 * *__dst), *(float *)(v37 + 8)), vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v22 + 40) + 16 * __dst[1]), *(float *)(v37 + 12))));
          v39 = vmulq_f32(v38, v38);
          v39.i32[3] = 0;
          v39.i64[0] = vpaddq_f32(v39, v39).u64[0];
          v39.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v39.f32));
          v40 = vdivq_f32(v38, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.f32, 0));
          v41 = vmulq_f32(v40, vmlsq_f32(vmulq_f32((float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v50, (int8x16_t)v50, 4uLL), (int32x4_t)v50), (float32x4_t)vzip2q_s32(vzip1q_s32((int32x4_t)v56, (int32x4_t)vextq_s8((int8x16_t)v56, (int8x16_t)v56, 0xCuLL)), (int32x4_t)v56)), (float32x4_t)vzip2q_s32(vzip1q_s32((int32x4_t)v50, (int32x4_t)vextq_s8((int8x16_t)v50, (int8x16_t)v50, 0xCuLL)), (int32x4_t)v50), (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v56, (int8x16_t)v56, 4uLL), (int32x4_t)v56)));
          v41.i32[3] = 0;
          v42 = vmulq_f32(v40, v56);
          v42.i32[3] = 0;
          v43 = vmulq_f32(v40, v50);
          v43.i32[3] = 0;
          v40.i64[0] = __PAIR64__(COERCE_UNSIGNED_INT(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v42, v42))), COERCE_UNSIGNED_INT(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v41, v41))));
          v40.i64[1] = COERCE_UNSIGNED_INT(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v43, v43)));
          v44 = vmulq_f32(v40, v40);
          v44.i32[3] = 0;
          v44.i64[0] = vpaddq_f32(v44, v44).u64[0];
          v44.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v44.f32));
          v42.i64[0] = 0x3F0000003F000000;
          v42.i64[1] = 0x3F0000003F000000;
          v45 = vmulq_f32(vaddq_f32(vdivq_f32(v40, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v44.f32, 0)), v59), v42);
          v46 = *(_QWORD *)(a3 + 16) + 4 * (v36 + v29 * *(_DWORD *)(a3 + 4)) * *(_DWORD *)(a3 + 12);
          *(_DWORD *)(v46 + 8) = v45.i32[2];
          *(_QWORD *)v46 = v45.i64[0];
          v28 = *(_DWORD *)(a4 + 4);
        }
        ++v36;
        v35 = v28;
      }
      while (v36 < v28);
      v27 = *(_DWORD *)(a4 + 8);
      v35 = v28;
    }
    ++v29;
  }
  while (v29 < v27);
  if (v26)
  {
LABEL_30:
    v63 = (char *)v26;
    operator delete(v26);
  }
  return v58 != -1;
}

void sub_239977A2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239977A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v9;
  size_t v10;
  size_t v11;
  unsigned int **p_dst;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t *v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  _DWORD *v22;
  float64x2_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v32;
  unsigned int v33;
  float32x4_t v34;
  uint64_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  float64x2_t v47;
  uint64_t v48;
  int32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float64x2_t v59;
  float32x4_t v60;
  unsigned int *__dst;
  char *v63;
  unint64_t v64;
  _QWORD v65[2];

  v9 = off_256934408[0];
  v10 = strlen(off_256934408[0]);
  if (v10 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v11 = v10;
  if (v10 >= 0x17)
  {
    v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v13 = v10 | 7;
    v14 = v13 + 1;
    p_dst = (unsigned int **)operator new(v13 + 1);
    v63 = (char *)v11;
    v64 = v14 | 0x8000000000000000;
    __dst = (unsigned int *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v64) = v10;
  p_dst = &__dst;
  if (v10)
LABEL_8:
    memmove(p_dst, v9, v11);
  *((_BYTE *)p_dst + v11) = 0;
  v65[0] = 0;
  v65[1] = 0;
  v15 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)v65, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v64) < 0)
    operator delete(__dst);
  v16 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * v15);
  v18 = *v16;
  v17 = (std::__shared_weak_count *)v16[1];
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(p_shared_owners);
    while (__stxr(v20 + 1, p_shared_owners));
    do
      v21 = __ldaxr(p_shared_owners);
    while (__stlxr(v21 - 1, p_shared_owners));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v22 = operator new(0xCuLL);
  v63 = (char *)(v22 + 3);
  v64 = (unint64_t)(v22 + 3);
  *(_QWORD *)v22 = -1;
  v22[2] = -1;
  __dst = v22;
  v24 = *(_DWORD *)(a3 + 8);
  if (!v24)
    goto LABEL_33;
  v25 = *(_DWORD *)(a3 + 4);
  if (!v25)
    goto LABEL_33;
  v26 = 0;
  v23.f64[0] = 0.999;
  v59 = v23;
  __asm { FMOV            V0.4S, #1.0 }
  v60 = _Q0;
  v32 = *(_DWORD *)(a3 + 4);
  do
  {
    if (v32)
    {
      v33 = 0;
      do
      {
        if (*(_BYTE *)(*(_QWORD *)(a3 + 16) + *(_DWORD *)(a3 + 12) * (v33 + v26 * v32)))
        {
          v45 = *(_QWORD *)(a4 + 16);
          v46 = (v33 + v26 * *(_DWORD *)(a4 + 4)) * *(_DWORD *)(a4 + 12);
          LODWORD(v65[0]) = *(_DWORD *)(v45 + 16 * v46 + 4);
          sub_23996362C(a1, (unsigned int *)v65, (uint64_t)&__dst);
          v48 = *(_QWORD *)(a5 + 16) + 16 * (v33 + v26 * *(_DWORD *)(a5 + 4)) * *(_DWORD *)(a5 + 12);
          if (v15 == -1)
          {
            v50 = *(float32x4_t *)v48;
            v34 = 0uLL;
            v57 = 0uLL;
          }
          else
          {
            v47.f64[0] = fabsf(*(float *)(v48 + 8));
            v49 = (int32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s64(vcgtq_f64(v59, v47).i64[0], 0), (int8x16_t)xmmword_239ECEFD0, (int8x16_t)xmmword_239F02850);
            v50 = *(float32x4_t *)v48;
            v51 = (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v50, (int8x16_t)v50, 4uLL), *(int32x4_t *)v48);
            v52 = (float32x4_t)vzip2q_s32(vzip1q_s32(*(int32x4_t *)v48, (int32x4_t)vextq_s8((int8x16_t)v50, (int8x16_t)v50, 0xCuLL)), *(int32x4_t *)v48);
            v53 = vmlsq_f32(vmulq_f32(v51, (float32x4_t)vzip2q_s32(vzip1q_s32(v49, (int32x4_t)vextq_s8((int8x16_t)v49, (int8x16_t)v49, 0xCuLL)), v49)), v52, (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v49, (int8x16_t)v49, 4uLL), v49));
            v54 = vmulq_f32(v53, v53);
            v54.i32[3] = 0;
            v55 = vpaddq_f32(v54, v54);
            v56 = vpaddq_f32(v55, v55);
            v57 = (float32x4_t)xmmword_239F02850;
            if (v56.f32[0] > 0.0)
              v57 = vdivq_f32(v53, vsqrtq_f32(v56));
            v34 = vmlsq_f32(vmulq_f32(v52, (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v57, (int8x16_t)v57, 4uLL), (int32x4_t)v57)), (float32x4_t)vzip2q_s32(vzip1q_s32((int32x4_t)v57, (int32x4_t)vextq_s8((int8x16_t)v57, (int8x16_t)v57, 0xCuLL)), (int32x4_t)v57), v51);
          }
          v22 = __dst;
          v35 = v45 + 16 * v46;
          v36 = vaddq_f32(vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v18 + 40) + 16 * __dst[2]), (float)(1.0 - *(float *)(v35 + 8)) - *(float *)(v35 + 12)), vaddq_f32(vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v18 + 40) + 16 * *__dst), *(float *)(v35 + 8)), vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v18 + 40) + 16 * __dst[1]), *(float *)(v35 + 12))));
          v37 = vmulq_f32(v36, v36);
          v37.i32[3] = 0;
          v37.i64[0] = vpaddq_f32(v37, v37).u64[0];
          v37.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v37.f32));
          v38 = vdivq_f32(v36, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v37.f32, 0));
          v39 = vmulq_f32(v38, v57);
          v39.i32[3] = 0;
          v40 = vmulq_f32(v38, v34);
          v40.i32[3] = 0;
          v41 = vmulq_f32(v38, v50);
          v41.i32[3] = 0;
          v38.i64[0] = __PAIR64__(COERCE_UNSIGNED_INT(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v40, v40))), COERCE_UNSIGNED_INT(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v39, v39))));
          v38.i64[1] = COERCE_UNSIGNED_INT(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v41, v41)));
          v42 = vmulq_f32(v38, v38);
          v42.i32[3] = 0;
          v42.i64[0] = vpaddq_f32(v42, v42).u64[0];
          v42.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v42.f32));
          v39.i64[0] = 0x3F0000003F000000;
          v39.i64[1] = 0x3F0000003F000000;
          v43 = vmulq_f32(vaddq_f32(vdivq_f32(v38, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v42.f32, 0)), v60), v39);
          v44 = *(_QWORD *)(a2 + 16) + 4 * (v33 + v26 * *(_DWORD *)(a2 + 4)) * *(_DWORD *)(a2 + 12);
          *(_DWORD *)(v44 + 8) = v43.i32[2];
          *(_QWORD *)v44 = v43.i64[0];
          v25 = *(_DWORD *)(a3 + 4);
        }
        ++v33;
        v32 = v25;
      }
      while (v33 < v25);
      v24 = *(_DWORD *)(a3 + 8);
      v32 = v25;
    }
    ++v26;
  }
  while (v26 < v24);
  if (v22)
  {
LABEL_33:
    v63 = (char *)v22;
    operator delete(v22);
  }
  return v15 != -1;
}

void sub_239977E70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_239977EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v8;
  size_t v9;
  size_t v10;
  unsigned int **p_dst;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t *v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  _DWORD *v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x2_t *v37;
  uint64_t v38;
  uint64_t v39;
  float64x2_t v41;
  float64x2_t v42;
  unsigned int *__dst;
  char *v44;
  unint64_t v45;
  _QWORD v46[2];

  v8 = off_256934408[0];
  v9 = strlen(off_256934408[0]);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v12 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v12 = v9 | 7;
    v13 = v12 + 1;
    p_dst = (unsigned int **)operator new(v12 + 1);
    v44 = (char *)v10;
    v45 = v13 | 0x8000000000000000;
    __dst = (unsigned int *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v45) = v9;
  p_dst = &__dst;
  if (v9)
LABEL_8:
    memmove(p_dst, v8, v10);
  *((_BYTE *)p_dst + v10) = 0;
  v46[0] = 0;
  v46[1] = 0;
  v14 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)v46, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v45) < 0)
    operator delete(__dst);
  v15 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * v14);
  v17 = *v15;
  v16 = (std::__shared_weak_count *)v15[1];
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v21 = operator new(0xCuLL);
  v44 = (char *)(v21 + 3);
  v45 = (unint64_t)(v21 + 3);
  *(_QWORD *)v21 = -1;
  v21[2] = -1;
  __dst = v21;
  v22 = *(_DWORD *)(a3 + 8);
  if (!v22)
    goto LABEL_28;
  v23 = *(_DWORD *)(a3 + 4);
  if (!v23)
    goto LABEL_28;
  v24 = 0;
  __asm
  {
    FMOV            V1.2D, #1.0
    FMOV            V0.2D, #0.5
  }
  v41 = _Q0;
  v42 = _Q1;
  v31 = *(_DWORD *)(a3 + 4);
  do
  {
    if (v31)
    {
      v32 = 0;
      do
      {
        if (*(_BYTE *)(*(_QWORD *)(a3 + 16) + *(_DWORD *)(a3 + 12) * (v32 + v24 * v31)))
        {
          v38 = *(_QWORD *)(a4 + 16);
          v39 = (v32 + v24 * *(_DWORD *)(a4 + 4)) * *(_DWORD *)(a4 + 12);
          LODWORD(v46[0]) = *(_DWORD *)(v38 + 16 * v39 + 4);
          sub_23996362C(a1, (unsigned int *)v46, (uint64_t)&__dst);
          v21 = __dst;
          v33 = v38 + 16 * v39;
          v34 = vaddq_f32(vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v17 + 40) + 16 * __dst[2]), (float)(1.0 - *(float *)(v33 + 8)) - *(float *)(v33 + 12)), vaddq_f32(vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v17 + 40) + 16 * *__dst), *(float *)(v33 + 8)), vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v17 + 40) + 16 * __dst[1]), *(float *)(v33 + 12))));
          v35 = vmulq_f32(v34, v34);
          v35.i32[3] = 0;
          v35.i64[0] = vpaddq_f32(v35, v35).u64[0];
          v35.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v35.f32));
          v36 = vdivq_f32(v34, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v35.f32, 0));
          v37 = (float32x2_t *)(*(_QWORD *)(a2 + 16) + 4 * (v32 + v24 * *(_DWORD *)(a2 + 4)) * *(_DWORD *)(a2 + 12));
          *v37 = vcvt_f32_f64(vmulq_f64(vaddq_f64(vcvtq_f64_f32(*(float32x2_t *)v36.f32), v42), v41));
          v36.f32[0] = (v36.f32[2] + 1.0) * 0.5;
          v37[1].i32[0] = v36.i32[0];
          v23 = *(_DWORD *)(a3 + 4);
        }
        ++v32;
        v31 = v23;
      }
      while (v32 < v23);
      v22 = *(_DWORD *)(a3 + 8);
      v31 = v23;
    }
    ++v24;
  }
  while (v24 < v22);
  if (v21)
  {
LABEL_28:
    v44 = (char *)v21;
    operator delete(v21);
  }
  return v14 != -1;
}

void sub_239978194(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_2399781C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  char v11;
  float v12;
  float v13;
  float v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  float v25;
  uint64_t v26;
  const float *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  float32x4_t *v33;
  float32x4_t v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  float v42;
  float v43;
  BOOL v44;
  uint64_t v45;
  float32x4_t *v46;
  uint64_t v47;
  float32x4_t *v48;
  float32x4_t v49;
  uint64_t v50;
  float32x4_t v51;
  uint64_t v52;
  float *v53;
  float v55;
  uint64_t v56;
  float32x4_t *v57;
  uint64_t v58;
  float32x4_t *v59;
  float32x4_t v60;
  uint64_t v61;
  float32x4_t v62;
  uint64_t v63;
  float *v64;
  double v65;
  double v66;

  v5 = *(_DWORD *)(a2 + 8);
  if (!v5 || (v6 = *(unsigned int *)(a2 + 4), !(_DWORD)v6))
  {
LABEL_45:
    v45 = (*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 4) * *(_DWORD *)(a1 + 12));
    if ((_DWORD)v45)
    {
      v46 = *(float32x4_t **)(a1 + 16);
      if (v45 >= 8)
      {
        v47 = v45 & 0xFFFFFFF8;
        v48 = v46 + 1;
        v49.i64[0] = 0x3F0000003F000000;
        v49.i64[1] = 0x3F0000003F000000;
        v50 = v47;
        do
        {
          v51 = vaddq_f32(*v48, v49);
          v48[-1] = vaddq_f32(v48[-1], v49);
          *v48 = v51;
          v48 += 2;
          v50 -= 8;
        }
        while (v50);
        if (v47 == v45)
          goto LABEL_53;
      }
      else
      {
        v47 = 0;
      }
      v52 = v45 - v47;
      v53 = &v46->f32[v47];
      do
      {
        *v53 = *v53 + 0.5;
        ++v53;
        --v52;
      }
      while (v52);
    }
LABEL_53:
    v11 = 1;
    return (v11 & 1) == 0;
  }
  v7 = 0;
  v8 = 0;
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_DWORD *)(a2 + 12);
  v11 = 1;
  v12 = -3.4028e38;
  v13 = 3.4028e38;
  v14 = 3.4028e38;
  do
  {
    v15 = *(_QWORD *)(a3 + 16);
    v16 = *(_DWORD *)(a3 + 4);
    v17 = *(_DWORD *)(a3 + 12);
    v18 = *(unsigned int *)(a1 + 12);
    if ((_DWORD)v18)
    {
      v19 = 0;
      v20 = v16 * v8;
      v21 = *(_QWORD *)(a1 + 16);
      v22 = v18 * *(_DWORD *)(a1 + 4) * v8;
      v23 = v16 * v17 * v8;
      v24 = v22;
      v25 = v13;
      while (!*(_BYTE *)(v9 + (v10 * (v6 * v8 + v19))))
      {
        v13 = v25;
LABEL_8:
        ++v19;
        v24 += v18;
        v25 = v13;
        if (v19 == v6)
          goto LABEL_4;
      }
      v26 = 4 * v24;
      v27 = (const float *)(v15 + 16 * ((v20 + v19) * v17));
      if (v18 >= 8
        && ((v28 = 4 * (v22 + (_DWORD)v18 * (_DWORD)v19),
             v29 = v21 + v28,
             v30 = v21 + 4 * v18 + v28,
             v31 = 16 * (v23 + v17 * v19),
             v29 < v15 + 4 + v31)
          ? (v32 = v15 + v31 >= v30)
          : (v32 = 1),
            v32))
      {
        v33 = (float32x4_t *)(v21 + 16 + v26);
        v34 = vld1q_dup_f32(v27);
        v35 = v18 & 0xFFFFFFF8;
        do
        {
          v33[-1] = v34;
          *v33 = v34;
          v33 += 2;
          v35 -= 8;
        }
        while (v35);
        v36 = v18 & 0xFFFFFFF8;
        if (v36 == v18)
        {
LABEL_23:
          v13 = *v27;
          if ((v11 & 1) != 0)
          {
            v11 = 0;
            v14 = *v27;
            v12 = *v27;
          }
          else
          {
            v11 = 0;
            if (v13 >= v12)
              v12 = *v27;
            if (v14 < v13)
              v13 = v25;
            v14 = v13;
          }
          goto LABEL_8;
        }
      }
      else
      {
        v36 = 0;
      }
      v37 = (_DWORD *)(v21 + v26 + 4 * v36);
      v38 = v18 - v36;
      do
      {
        *v37++ = *(_DWORD *)v27;
        --v38;
      }
      while (v38);
      goto LABEL_23;
    }
    v39 = v16 * v17 * v8;
    v40 = v6;
    v41 = v7;
    do
    {
      if (*(_BYTE *)(v9 + v41))
      {
        v42 = *(float *)(v15 + 16 * v39);
        if (v42 >= v12)
          v12 = *(float *)(v15 + 16 * v39);
        if (v14 >= v42)
          v43 = *(float *)(v15 + 16 * v39);
        else
          v43 = v13;
        v44 = (v11 & 1) == 0;
        v11 = 0;
        if (v44)
          v13 = v43;
        else
          v13 = *(float *)(v15 + 16 * v39);
        if (!v44)
          v12 = *(float *)(v15 + 16 * v39);
        v14 = v13;
      }
      v39 += v17;
      v41 += v10;
      --v40;
    }
    while (v40);
LABEL_4:
    ++v8;
    v7 += v6 * v10;
  }
  while (v8 != v5);
  if ((v11 & 1) != 0)
    goto LABEL_45;
  v55 = -v14;
  if (v12 >= (float)-v14)
    v55 = v12;
  if (v55 > 0.0)
  {
    v56 = (*(_DWORD *)(a1 + 8) * *(_DWORD *)(a1 + 4) * *(_DWORD *)(a1 + 12));
    if ((_DWORD)v56)
    {
      v57 = *(float32x4_t **)(a1 + 16);
      if (v56 < 8)
      {
        v58 = 0;
        goto LABEL_64;
      }
      v58 = v56 & 0xFFFFFFF8;
      v59 = v57 + 1;
      v60.i64[0] = 0x3F0000003F000000;
      v60.i64[1] = 0x3F0000003F000000;
      v61 = v58;
      do
      {
        v62 = vaddq_f32(*v59, v60);
        v59[-1] = vaddq_f32(v59[-1], v60);
        *v59 = v62;
        v59 += 2;
        v61 -= 8;
      }
      while (v61);
      if (v58 != v56)
      {
LABEL_64:
        v63 = v56 - v58;
        v64 = &v57->f32[v58];
        do
        {
          *v64 = *v64 + 0.5;
          ++v64;
          --v63;
        }
        while (v63);
      }
    }
  }
  if (a5)
  {
    v65 = v14;
    if (*(double *)(a4 + 336) < v65)
      v65 = *(double *)(a4 + 336);
    v66 = v12;
    if (*(double *)(a4 + 344) > v66)
      v66 = *(double *)(a4 + 344);
    *(double *)(a4 + 336) = v65;
    *(double *)(a4 + 344) = v66;
  }
  return (v11 & 1) == 0;
}

BOOL sub_239978544(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, float32_t a8)
{
  char *v13;
  size_t v14;
  size_t v15;
  unsigned int **p_dst;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t *v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unint64_t v25;
  unsigned int *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unint64_t v43;
  unsigned int v44;
  unsigned int v45;
  float *v46;
  float v47;
  float v48;
  float v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  float32x4_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  float32x4_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  float32x4_t v73;
  float32x4_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t *v79;
  float32x4_t *v80;
  unsigned int *v81;
  _BOOL4 v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  int v86;
  int v87;
  char *v88;
  char *v89;
  float v90;
  unsigned int v91;
  char *v92;
  float v93;
  unsigned int v94;
  char *v96;
  uint64_t v97;
  int v98;
  _BOOL4 v99;
  uint64_t v100;
  unint64_t v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  char *v106;
  char *v107;
  float v108;
  unsigned int v109;
  char *v110;
  float v111;
  unsigned int v112;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  float32x4_t v118;
  float32x4_t v120;
  float32x4_t v121;
  BOOL v122;
  uint64_t v123;
  int *__p;
  float v127;
  float v128;
  float v129;
  float v130;
  float v131;
  float v132;
  float v133;
  float v134;
  float v135;
  uint64_t v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  void *v141;
  char *v142;
  void *v143;
  void *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  unsigned int *__dst;
  unsigned int *v153;
  unint64_t v154;

  v13 = off_256934408[0];
  v14 = strlen(off_256934408[0]);
  if (v14 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v15 = v14;
  v136 = a1;
  if (v14 >= 0x17)
  {
    v17 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v17 = v14 | 7;
    v18 = v17 + 1;
    p_dst = (unsigned int **)operator new(v17 + 1);
    v154 = v18 | 0x8000000000000000;
    __dst = (unsigned int *)p_dst;
    v153 = (unsigned int *)v15;
    goto LABEL_8;
  }
  HIBYTE(v154) = v14;
  p_dst = &__dst;
  if (v14)
LABEL_8:
    memmove(p_dst, v13, v15);
  *((_BYTE *)p_dst + v15) = 0;
  v19 = a1;
  v149 = 0;
  v150 = 0;
  v20 = sub_2394E5F40((uint64_t **)(a1 + 8), (uint64_t)&v149, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v154) < 0)
    operator delete(__dst);
  v21 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * v20);
  v22 = (std::__shared_weak_count *)v21[1];
  v123 = *v21;
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(p_shared_owners);
    while (__stxr(v24 + 1, p_shared_owners));
    do
      v25 = __ldaxr(p_shared_owners);
    while (__stlxr(v25 - 1, p_shared_owners));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v26 = (unsigned int *)operator new(0xCuLL);
  v154 = (unint64_t)(v26 + 3);
  *(_QWORD *)v26 = -1;
  v26[2] = -1;
  __dst = v26;
  v153 = v26 + 3;
  v27 = (char *)operator new(0xC00000uLL);
  v28 = 0;
  v149 = v27;
  v151 = v27 + 12582912;
  v29 = a3;
  do
  {
    v30 = &v27[v28];
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    *((_OWORD *)v30 + 1) = xmmword_239F028E0;
    v28 += 48;
    *((_QWORD *)v30 + 4) = 0x7F7FFFFF3089705FLL;
  }
  while (v28 != 12582912);
  v150 = v27 + 12582912;
  v31 = (char *)operator new(0xC00000uLL);
  v32 = 0;
  v146 = v31;
  v148 = v31 + 12582912;
  do
  {
    v33 = &v31[v32];
    *(_QWORD *)v33 = 0;
    *((_QWORD *)v33 + 1) = 0;
    *((_OWORD *)v33 + 1) = xmmword_239F028E0;
    v32 += 48;
    *((_QWORD *)v33 + 4) = 0x7F7FFFFF3089705FLL;
  }
  while (v32 != 12582912);
  v147 = v31 + 12582912;
  v34 = (char *)operator new(0x400000uLL);
  v35 = 0;
  v143 = v34;
  v145 = v34 + 0x400000;
  do
  {
    v36 = &v34[v35];
    *((_OWORD *)v36 + 2) = xmmword_239F02830;
    *((_OWORD *)v36 + 3) = xmmword_239F02830;
    *(_OWORD *)v36 = xmmword_239F02830;
    *((_OWORD *)v36 + 1) = xmmword_239F02830;
    *((_OWORD *)v36 + 6) = xmmword_239F02830;
    *((_OWORD *)v36 + 7) = xmmword_239F02830;
    v35 += 128;
    *((_OWORD *)v36 + 4) = xmmword_239F02830;
    *((_OWORD *)v36 + 5) = xmmword_239F02830;
  }
  while (v35 != 0x400000);
  v144 = v34 + 0x400000;
  v37 = (char *)operator new(0x400000uLL);
  v38 = 0;
  v140 = v37;
  v142 = v37 + 0x400000;
  do
  {
    v39 = &v37[v38];
    *((_OWORD *)v39 + 2) = xmmword_239F02830;
    *((_OWORD *)v39 + 3) = xmmword_239F02830;
    *(_OWORD *)v39 = xmmword_239F02830;
    *((_OWORD *)v39 + 1) = xmmword_239F02830;
    *((_OWORD *)v39 + 6) = xmmword_239F02830;
    *((_OWORD *)v39 + 7) = xmmword_239F02830;
    v38 += 128;
    *((_OWORD *)v39 + 4) = xmmword_239F02830;
    *((_OWORD *)v39 + 5) = xmmword_239F02830;
  }
  while (v38 != 0x400000);
  v141 = v37 + 0x400000;
  v139 = 0;
  sub_23993C9C8((uint64_t)a3, (double *)&v139);
  v138 = 0;
  __p = (int *)operator new(0x200000uLL);
  bzero(__p, 0x200000uLL);
  v40 = *(_DWORD *)(a2 + 8);
  if (!v40 || (v41 = *(_DWORD *)(a2 + 4)) == 0)
  {
    LOBYTE(v99) = 1;
    goto LABEL_117;
  }
  v42 = 0;
  v43 = 0;
  v44 = *(_DWORD *)(a2 + 4);
  v122 = 1;
  do
  {
    if (v44)
    {
      v45 = 0;
      do
      {
        if (*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_DWORD *)(a2 + 12) * (v45 + v44 * v42)))
        {
          v137 = *(_DWORD *)(*(_QWORD *)(a7 + 16) + 4 * (v45 + *(_DWORD *)(a7 + 4) * v42) * *(_DWORD *)(a7 + 12));
          sub_23996362C(v19, &v137, (uint64_t)&__dst);
          v46 = (float *)(*(_QWORD *)(a6 + 16) + 16 * (v45 + *(_DWORD *)(a6 + 4) * v42) * *(_DWORD *)(a6 + 12));
          v47 = *v46;
          v48 = v46[1];
          v49 = v46[2];
          v50 = *__dst;
          v51 = (uint64_t *)(*(_QWORD *)(v19 + 8) + 16 * *(unsigned int *)(v19 + 176));
          v52 = *v51;
          v53 = (std::__shared_weak_count *)v51[1];
          if (v53)
          {
            v54 = (unint64_t *)&v53->__shared_owners_;
            do
              v55 = __ldxr(v54);
            while (__stxr(v55 + 1, v54));
            do
              v56 = __ldaxr(v54);
            while (__stlxr(v56 - 1, v54));
            if (!v56)
            {
              v130 = v47;
              v133 = v49;
              v127 = v48;
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
              v48 = v127;
              v47 = v130;
              v49 = v133;
            }
          }
          v57 = *(float32x4_t *)(*(_QWORD *)(v52 + 40) + 16 * v50);
          v58 = __dst[1];
          v59 = (uint64_t *)(*(_QWORD *)(v136 + 8) + 16 * *(unsigned int *)(v136 + 176));
          v60 = *v59;
          v61 = (std::__shared_weak_count *)v59[1];
          if (v61)
          {
            v62 = (unint64_t *)&v61->__shared_owners_;
            do
              v63 = __ldxr(v62);
            while (__stxr(v63 + 1, v62));
            do
              v64 = __ldaxr(v62);
            while (__stlxr(v64 - 1, v62));
            if (!v64)
            {
              v131 = v47;
              v134 = v49;
              v128 = v48;
              v120 = v57;
              ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
              std::__shared_weak_count::__release_weak(v61);
              v57 = v120;
              v48 = v128;
              v47 = v131;
              v49 = v134;
            }
          }
          v65 = *(float32x4_t *)(*(_QWORD *)(v60 + 40) + 16 * v58);
          v66 = __dst[2];
          v67 = (uint64_t *)(*(_QWORD *)(v136 + 8) + 16 * *(unsigned int *)(v136 + 176));
          v68 = *v67;
          v69 = (std::__shared_weak_count *)v67[1];
          if (v69)
          {
            v70 = (unint64_t *)&v69->__shared_owners_;
            do
              v71 = __ldxr(v70);
            while (__stxr(v71 + 1, v70));
            do
              v72 = __ldaxr(v70);
            while (__stlxr(v72 - 1, v70));
            if (!v72)
            {
              v132 = v47;
              v135 = v49;
              v129 = v48;
              v121 = v57;
              v118 = v65;
              ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
              std::__shared_weak_count::__release_weak(v69);
              v65 = v118;
              v57 = v121;
              v48 = v129;
              v47 = v132;
              v49 = v135;
            }
          }
          v73 = vaddq_f32(vaddq_f32(vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v123 + 40) + 16 * *__dst), v47), vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v123 + 40) + 16 * __dst[1]), v48)), vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v123 + 40) + 16 * __dst[2]), v49));
          v74 = vmulq_f32(v73, v73);
          v74.i32[3] = 0;
          v75 = vpaddq_f32(v74, v74);
          v76 = vpaddq_f32(v75, v75);
          v77 = (float32x4_t)xmmword_239F02850;
          if (v76.f32[0] > 0.0)
            v77 = vdivq_f32(v73, vsqrtq_f32(v76));
          v78 = vaddq_f32(vaddq_f32(vmulq_n_f32(v57, v47), vmulq_n_f32(v65, v48)), vmulq_n_f32(*(float32x4_t *)(*(_QWORD *)(v68 + 40) + 16 * v66), v49));
          v79 = (float32x4_t *)&v149[48 * v43];
          *v79 = v78;
          v79[1] = v77;
          v79[2].i32[0] = 0;
          v79[2].f32[1] = a8;
          v80 = (float32x4_t *)&v146[48 * v43];
          *v80 = v78;
          v80[1] = vnegq_f32(v77);
          v80[2].i32[0] = 0;
          v80[2].f32[1] = a8;
          v81 = (unsigned int *)&__p[2 * v43];
          *v81 = v45;
          v81[1] = v42;
          ++v43;
          v19 = v136;
          if (v43 == 0x40000)
          {
            v138 = 2;
            sub_23993BC9C(a3, &v138);
            v82 = v122 && sub_23993C9DC((uint64_t)a3, (uint64_t *)&v149, &v143);
            LODWORD(v138) = 1;
            sub_23993BC9C(a3, &v138);
            v122 = v82 && sub_23993C9DC((uint64_t)a3, (uint64_t *)&v146, &v140);
            v83 = 0;
            v84 = __p + 1;
            v85 = 12;
            while (1)
            {
              v86 = *(v84 - 1);
              v87 = *v84;
              v88 = (char *)v143;
              v89 = (char *)v143 + v85;
              v90 = *(float *)((char *)v143 + v85 - 12);
              if (v90 == -1.0)
                break;
              v91 = *((_DWORD *)v89 - 2);
              v92 = (char *)v140 + v85 - 12;
              v93 = *(float *)v92;
              if (*(float *)v92 == -1.0)
              {
                if (v91 < a4)
                  goto LABEL_79;
                goto LABEL_64;
              }
              v94 = *(_DWORD *)((char *)v140 + v85 - 8);
              if (v91 < a4 && v94 < a4)
              {
                if (v90 >= v93)
                  *(float *)v92 = -v93;
                else
                  v92 = (char *)v143 + 16 * v83;
                v97 = *(_QWORD *)(a5 + 16)
                    + 16 * ((v86 + *(_DWORD *)(a5 + 4) * v87) * *(_DWORD *)(a5 + 12));
                *(_QWORD *)v97 = *(_QWORD *)v92;
                *(_DWORD *)(v97 + 8) = *((_DWORD *)v92 + 2);
                v98 = *((_DWORD *)v92 + 3);
                goto LABEL_84;
              }
              if (v91 < a4)
              {
LABEL_79:
                v97 = *(_QWORD *)(a5 + 16)
                    + 16 * ((v86 + *(_DWORD *)(a5 + 4) * v87) * *(_DWORD *)(a5 + 12));
                *(_QWORD *)v97 = *(_QWORD *)(v89 - 12);
                *(_DWORD *)(v97 + 8) = *(_DWORD *)&v88[v85 - 4];
                v98 = *(_DWORD *)&v88[v85];
                goto LABEL_84;
              }
              if (v94 >= a4)
              {
LABEL_64:
                *(_BYTE *)(*(_QWORD *)(a2 + 16)
                         + ((v86 + *(_DWORD *)(a2 + 4) * v87) * *(_DWORD *)(a2 + 12))) = 0;
                v84 += 2;
                ++v83;
                v85 += 16;
                if (v85 == 4194316)
                  goto LABEL_32;
              }
              else
              {
                v96 = (char *)v140 + 16 * v83;
LABEL_77:
                *(float *)v96 = -v93;
                v97 = *(_QWORD *)(a5 + 16)
                    + 16 * ((v86 + *(_DWORD *)(a5 + 4) * v87) * *(_DWORD *)(a5 + 12));
                *(_QWORD *)v97 = *(_QWORD *)v96;
                *(_DWORD *)(v97 + 8) = *((_DWORD *)v96 + 2);
                v98 = *((_DWORD *)v96 + 3);
LABEL_84:
                *(_DWORD *)(v97 + 12) = v98;
                v84 += 2;
                ++v83;
                v85 += 16;
                if (v85 == 4194316)
                {
LABEL_32:
                  v43 = 0;
                  goto LABEL_33;
                }
              }
            }
            v96 = (char *)v140 + v85 - 12;
            v93 = *(float *)v96;
            if (*(float *)v96 != -1.0 && *(_DWORD *)((char *)v140 + v85 - 8) < a4)
              goto LABEL_77;
            goto LABEL_64;
          }
LABEL_33:
          v41 = *(_DWORD *)(a2 + 4);
        }
        ++v45;
        v44 = v41;
      }
      while (v45 < v41);
      v40 = *(_DWORD *)(a2 + 8);
      v44 = v41;
    }
    ++v42;
  }
  while (v42 < v40);
  if (!v43)
  {
    v29 = a3;
    LOBYTE(v99) = v122;
    goto LABEL_117;
  }
  v138 = 2;
  sub_23993BC9C(a3, &v138);
  v99 = v122 && sub_23993C9DC((uint64_t)a3, (uint64_t *)&v149, &v143);
  LODWORD(v138) = 1;
  sub_23993BC9C(a3, &v138);
  if (v99)
    LOBYTE(v99) = sub_23993C9DC((uint64_t)a3, (uint64_t *)&v146, &v140);
  v100 = 0;
  v101 = 0;
  v102 = 1;
  v103 = 1;
  do
  {
    v104 = __p[v102 - 1];
    v105 = __p[v102];
    v106 = (char *)v143;
    v107 = (char *)v143 + v100;
    v108 = *(float *)((char *)v143 + v100);
    if (v108 == -1.0)
    {
      v111 = *(float *)((char *)v140 + v100);
      if (v111 == -1.0 || *(_DWORD *)((char *)v140 + v100 + 4) >= a4)
      {
LABEL_95:
        *(_BYTE *)(*(_QWORD *)(a2 + 16) + ((v104 + *(_DWORD *)(a2 + 4) * v105) * *(_DWORD *)(a2 + 12))) = 0;
        goto LABEL_96;
      }
      v110 = (char *)v140 + 16 * v101;
      goto LABEL_110;
    }
    v109 = *((_DWORD *)v107 + 1);
    v110 = (char *)v140 + v100;
    v111 = *(float *)((char *)v140 + v100);
    if (v111 == -1.0)
    {
      if (v109 >= a4)
        goto LABEL_95;
LABEL_112:
      v115 = *(_QWORD *)(a5 + 16) + 16 * ((v104 + *(_DWORD *)(a5 + 4) * v105) * *(_DWORD *)(a5 + 12));
      *(_QWORD *)v115 = *(_QWORD *)((char *)v143 + v100);
      *(_DWORD *)(v115 + 8) = *(_DWORD *)&v106[v100 + 8];
      *(_DWORD *)(v115 + 12) = *(_DWORD *)&v106[v100 + 12];
      goto LABEL_96;
    }
    v112 = *((_DWORD *)v110 + 1);
    if (v109 >= a4 || v112 >= a4)
    {
      if (v109 >= a4)
      {
        if (v112 >= a4)
          goto LABEL_95;
LABEL_110:
        *(float *)v110 = -v111;
        v114 = *(_QWORD *)(a5 + 16) + 16 * ((v104 + *(_DWORD *)(a5 + 4) * v105) * *(_DWORD *)(a5 + 12));
        *(_QWORD *)v114 = *(_QWORD *)v110;
        *(_DWORD *)(v114 + 8) = *((_DWORD *)v110 + 2);
        *(_DWORD *)(v114 + 12) = *((_DWORD *)v110 + 3);
        goto LABEL_96;
      }
      goto LABEL_112;
    }
    if (v108 >= v111)
    {
      v107 = (char *)v140 + 16 * v101;
      *(float *)v110 = -v111;
    }
    v116 = *(_QWORD *)(a5 + 16) + 16 * ((v104 + *(_DWORD *)(a5 + 4) * v105) * *(_DWORD *)(a5 + 12));
    *(_QWORD *)v116 = *(_QWORD *)v107;
    *(_DWORD *)(v116 + 8) = *((_DWORD *)v107 + 2);
    *(_DWORD *)(v116 + 12) = *((_DWORD *)v107 + 3);
LABEL_96:
    v101 = v103;
    v100 += 16;
    ++v103;
    v102 += 2;
  }
  while (v43 > v101);
  v29 = a3;
LABEL_117:
  sub_23993BC9C(v29, &v139);
  operator delete(__p);
  if (v140)
  {
    v141 = v140;
    operator delete(v140);
  }
  if (v143)
  {
    v144 = v143;
    operator delete(v143);
  }
  if (v146)
  {
    v147 = v146;
    operator delete(v146);
  }
  if (v149)
  {
    v150 = v149;
    operator delete(v149);
  }
  if (__dst)
  {
    v153 = __dst;
    operator delete(__dst);
  }
  return v99;
}

void sub_239978FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,uint64_t a36,void *a37,uint64_t a38)
{
  uint64_t v38;
  void *v40;
  void *v41;
  void *v42;
  void *v43;

  if (__p)
  {
    operator delete(__p);
    v40 = a37;
    if (!a37)
    {
LABEL_3:
      v41 = *(void **)(v38 - 200);
      if (!v41)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else
  {
    v40 = a37;
    if (!a37)
      goto LABEL_3;
  }
  operator delete(v40);
  v41 = *(void **)(v38 - 200);
  if (!v41)
  {
LABEL_4:
    v42 = *(void **)(v38 - 176);
    if (!v42)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  *(_QWORD *)(v38 - 192) = v41;
  operator delete(v41);
  v42 = *(void **)(v38 - 176);
  if (!v42)
  {
LABEL_5:
    v43 = *(void **)(v38 - 152);
    if (!v43)
LABEL_12:
      _Unwind_Resume(exception_object);
LABEL_11:
    *(_QWORD *)(v38 - 144) = v43;
    operator delete(v43);
    goto LABEL_12;
  }
LABEL_10:
  *(_QWORD *)(v38 - 168) = v42;
  operator delete(v42);
  v43 = *(void **)(v38 - 152);
  if (!v43)
    goto LABEL_12;
  goto LABEL_11;
}

uint64_t sub_2399790B4(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, float32_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  _OWORD *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  char *v36;
  char v37;
  unsigned int *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  unint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  char *v57;
  _BYTE *v58;
  float *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *p_shared_owners;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t *v86;
  float32x4_t v87;
  float32x4_t *v88;
  char *v89;
  _BOOL4 v90;
  unint64_t v91;
  uint64_t v92;
  float *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  int v97;
  int v98;
  int v99;
  int v100;
  float v101;
  unsigned int v102;
  float v103;
  unsigned int v104;
  char *v106;
  float v107;
  int v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  int v112;
  int v113;
  float *v114;
  unsigned int v115;
  unsigned int v116;
  float *v117;
  int v118;
  int v119;
  float v120;
  float v121;
  float v122;
  unsigned int v123;
  float *v125;
  float v126;
  int v127;
  unsigned int v128;
  int v129;
  uint64_t v130;
  int v131;
  char v132;
  float v133;
  float v134;
  uint64_t v135;
  int v136;
  unsigned int v137;
  float v138;
  float v139;
  float v140;
  BOOL v141;
  uint64_t v142;
  float32x4_t *v143;
  uint64_t v144;
  float32x4_t *v145;
  float32x4_t v146;
  uint64_t v147;
  float32x4_t v148;
  uint64_t v149;
  float *v150;
  float v152;
  uint64_t v153;
  float32x4_t *v154;
  uint64_t v155;
  float32x4_t *v156;
  float32x4_t v157;
  uint64_t v158;
  float32x4_t v159;
  uint64_t v160;
  float *v161;
  double v162;
  double v163;
  int v164;
  int *v165;
  uint64_t v166;
  _QWORD *v167;
  int v168;
  BOOL v169;
  int v172;
  int v173;
  float32x4_t v174;
  float32x4_t v175;
  float32x4_t v176;
  float v177;
  float v178;
  float v179;
  float32x4_t v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  void *__p;
  void *v185;
  char *v186;
  float *v187;
  float *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  unsigned int *v196;
  unsigned int *v197;
  char *v198;

  v17 = *(unsigned int *)(a2 + 4);
  v18 = *(_DWORD *)(a2 + 8);
  v19 = *(_DWORD *)(a2 + 12);
  v20 = operator new[]();
  v21 = (_BYTE *)v20;
  v22 = (*(_DWORD *)(a2 + 8) * *(_DWORD *)(a2 + 4) * *(_DWORD *)(a2 + 12));
  if ((_DWORD)v22)
  {
    v23 = 0;
    v24 = *(_QWORD *)(a2 + 16);
    if (v22 < 8 || (unint64_t)(v20 - v24) < 0x20)
      goto LABEL_13;
    if (v22 >= 0x20)
    {
      v23 = v22 & 0xFFFFFFE0;
      v25 = (__int128 *)(v24 + 16);
      v26 = (_OWORD *)(v20 + 16);
      v27 = v23;
      do
      {
        v28 = *v25;
        *(v26 - 1) = *(v25 - 1);
        *v26 = v28;
        v25 += 2;
        v26 += 2;
        v27 -= 32;
      }
      while (v27);
      if (v23 == v22)
        goto LABEL_15;
      if ((v22 & 0x18) == 0)
      {
LABEL_13:
        v34 = v22 - v23;
        v35 = (_BYTE *)(v20 + v23);
        v36 = (char *)(v24 + v23);
        do
        {
          v37 = *v36++;
          *v35++ = v37;
          --v34;
        }
        while (v34);
        goto LABEL_15;
      }
    }
    else
    {
      v23 = 0;
    }
    v29 = v23;
    v23 = v22 & 0xFFFFFFF8;
    v30 = (uint64_t *)(v24 + v29);
    v31 = (_QWORD *)(v20 + v29);
    v32 = v29 - v23;
    do
    {
      v33 = *v30++;
      *v31++ = v33;
      v32 += 8;
    }
    while (v32);
    if (v23 != v22)
      goto LABEL_13;
  }
LABEL_15:
  v38 = (unsigned int *)operator new(0xCuLL);
  v197 = v38 + 3;
  v198 = (char *)(v38 + 3);
  *(_QWORD *)v38 = -1;
  v38[2] = -1;
  v196 = v38;
  v39 = (char *)operator new(0xC00000uLL);
  v40 = 0;
  v193 = v39;
  v195 = v39 + 12582912;
  do
  {
    v41 = &v39[v40];
    *(_QWORD *)v41 = 0;
    *((_QWORD *)v41 + 1) = 0;
    *((_OWORD *)v41 + 1) = xmmword_239F028E0;
    v40 += 48;
    *((_QWORD *)v41 + 4) = 0x7F7FFFFF3089705FLL;
  }
  while (v40 != 12582912);
  v194 = v39 + 12582912;
  v42 = (char *)operator new(0xC00000uLL);
  v43 = 0;
  v190 = v42;
  v192 = v42 + 12582912;
  do
  {
    v44 = &v42[v43];
    *(_QWORD *)v44 = 0;
    *((_QWORD *)v44 + 1) = 0;
    *((_OWORD *)v44 + 1) = xmmword_239F028E0;
    v43 += 48;
    *((_QWORD *)v44 + 4) = 0x7F7FFFFF3089705FLL;
  }
  while (v43 != 12582912);
  v191 = v42 + 12582912;
  v45 = (char *)operator new(0x400000uLL);
  v46 = 0;
  v187 = (float *)v45;
  v189 = v45 + 0x400000;
  do
  {
    v47 = &v45[v46];
    *((_OWORD *)v47 + 2) = xmmword_239F02830;
    *((_OWORD *)v47 + 3) = xmmword_239F02830;
    *(_OWORD *)v47 = xmmword_239F02830;
    *((_OWORD *)v47 + 1) = xmmword_239F02830;
    *((_OWORD *)v47 + 6) = xmmword_239F02830;
    *((_OWORD *)v47 + 7) = xmmword_239F02830;
    v46 += 128;
    *((_OWORD *)v47 + 4) = xmmword_239F02830;
    *((_OWORD *)v47 + 5) = xmmword_239F02830;
  }
  while (v46 != 0x400000);
  v188 = (float *)(v45 + 0x400000);
  v48 = (char *)operator new(0x400000uLL);
  v49 = 0;
  __p = v48;
  v186 = v48 + 0x400000;
  do
  {
    v50 = &v48[v49];
    *((_OWORD *)v50 + 2) = xmmword_239F02830;
    *((_OWORD *)v50 + 3) = xmmword_239F02830;
    *(_OWORD *)v50 = xmmword_239F02830;
    *((_OWORD *)v50 + 1) = xmmword_239F02830;
    *((_OWORD *)v50 + 6) = xmmword_239F02830;
    *((_OWORD *)v50 + 7) = xmmword_239F02830;
    v49 += 128;
    *((_OWORD *)v50 + 4) = xmmword_239F02830;
    *((_OWORD *)v50 + 5) = xmmword_239F02830;
  }
  while (v49 != 0x400000);
  v185 = v48 + 0x400000;
  v183 = 0;
  sub_23993C9C8((uint64_t)a3, (double *)&v183);
  v182 = 0;
  v51 = (char *)operator new(0x200000uLL);
  bzero(v51, 0x200000uLL);
  if (!v18 || !(_DWORD)v17)
  {
    LOBYTE(v108) = 1;
    goto LABEL_111;
  }
  v166 = a7;
  v167 = a3;
  v52 = 0;
  v53 = 0;
  v165 = (int *)(v51 + 4);
  v168 = v19;
  v169 = 1;
  v164 = v18;
  while (2)
  {
    v54 = 0;
    v172 = v52;
    v173 = v52 * v17;
    while (2)
    {
      if (!v21[((v173 + v54) * v19)])
        goto LABEL_29;
      v181 = *(_DWORD *)(*(_QWORD *)(a6 + 16)
                       + 4 * ((v54 + *(_DWORD *)(a6 + 4) * v52) * *(_DWORD *)(a6 + 12)));
      v55 = v52;
      sub_23996362C(a1, &v181, (uint64_t)&v196);
      v56 = v17;
      v57 = v51;
      v58 = v21;
      v59 = (float *)(*(_QWORD *)(a5 + 16)
                    + 16 * ((v54 + *(_DWORD *)(a5 + 4) * v55) * *(_DWORD *)(a5 + 12)));
      v177 = *v59;
      v178 = v59[1];
      v179 = v59[2];
      v60 = *v196;
      v61 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v62 = *v61;
      v63 = (std::__shared_weak_count *)v61[1];
      if (v63)
      {
        p_shared_owners = (unint64_t *)&v63->__shared_owners_;
        do
          v65 = __ldxr(p_shared_owners);
        while (__stxr(v65 + 1, p_shared_owners));
        do
          v66 = __ldaxr(p_shared_owners);
        while (__stlxr(v66 - 1, p_shared_owners));
        if (!v66)
        {
          ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
          std::__shared_weak_count::__release_weak(v63);
        }
      }
      v176 = *(float32x4_t *)(*(_QWORD *)(v62 + 40) + 16 * v60);
      v67 = v196[1];
      v68 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v69 = *v68;
      v70 = (std::__shared_weak_count *)v68[1];
      if (v70)
      {
        v71 = (unint64_t *)&v70->__shared_owners_;
        do
          v72 = __ldxr(v71);
        while (__stxr(v72 + 1, v71));
        do
          v73 = __ldaxr(v71);
        while (__stlxr(v73 - 1, v71));
        if (!v73)
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
      }
      v175 = *(float32x4_t *)(*(_QWORD *)(v69 + 40) + 16 * v67);
      v74 = v196[2];
      v75 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
      v76 = *v75;
      v77 = (std::__shared_weak_count *)v75[1];
      if (v77)
      {
        v78 = (unint64_t *)&v77->__shared_owners_;
        do
          v79 = __ldxr(v78);
        while (__stxr(v79 + 1, v78));
        do
          v80 = __ldaxr(v78);
        while (__stlxr(v80 - 1, v78));
        if (!v80)
        {
          ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
          std::__shared_weak_count::__release_weak(v77);
        }
      }
      v174 = *(float32x4_t *)(*(_QWORD *)(v76 + 40) + 16 * v74);
      sub_23995E494(a1, v181, &v180);
      v81 = vmulq_f32(v180, v180);
      v81.i32[3] = 0;
      v82 = vpaddq_f32(v81, v81);
      v83 = vpaddq_f32(v82, v82);
      v84 = (float32x4_t)xmmword_239F02850;
      v51 = v57;
      if (v83.f32[0] > 0.0)
        v84 = vdivq_f32(v180, vsqrtq_f32(v83));
      v85 = vaddq_f32(vaddq_f32(vmulq_n_f32(v176, v177), vmulq_n_f32(v175, v178)), vmulq_n_f32(v174, v179));
      v180 = v84;
      v86 = (float32x4_t *)&v193[48 * v53];
      *v86 = v85;
      v86[1] = v84;
      v86[2].i32[0] = 0;
      v86[2].f32[1] = a8;
      v87 = vnegq_f32(v180);
      v88 = (float32x4_t *)&v190[48 * v53];
      *v88 = v85;
      v88[1] = v87;
      v88[2].i32[0] = 0;
      v88[2].f32[1] = a8;
      v89 = &v57[8 * v53];
      v52 = v172;
      *(_DWORD *)v89 = v54;
      *((_DWORD *)v89 + 1) = v172;
      ++v53;
      v21 = v58;
      v17 = v56;
      if (v53 != 0x40000)
      {
        v19 = v168;
        goto LABEL_29;
      }
      v182 = 2;
      sub_23993BC9C(v167, &v182);
      v19 = v168;
      v90 = v169 && sub_23993C9DC((uint64_t)v167, (uint64_t *)&v193, &v187);
      LODWORD(v182) = 1;
      sub_23993BC9C(v167, &v182);
      v169 = v90 && sub_23993C9DC((uint64_t)v167, (uint64_t *)&v190, &__p);
      v91 = 0;
      v92 = 0;
      v93 = v187;
      v94 = (char *)__p;
      v95 = v165;
      v96 = *(_QWORD *)(v166 + 16);
      v97 = *(_DWORD *)(v166 + 4);
      v98 = *(_DWORD *)(v166 + 12);
      do
      {
        v99 = *(v95 - 1);
        v100 = *v95;
        v101 = v93[v91 / 4];
        if (v101 == -1.0)
        {
          v106 = &v94[v91];
          v103 = *(float *)&v94[v91];
          if (v103 == -1.0 || *((_DWORD *)v106 + 1) >= a4)
          {
LABEL_59:
            v58[((v99 + v100 * v17) * v168)] = 0;
            goto LABEL_60;
          }
          goto LABEL_73;
        }
        v102 = LODWORD(v93[v91 / 4 + 1]);
        v103 = *(float *)&v94[v91];
        if (v103 == -1.0)
        {
          if (v102 >= a4)
            goto LABEL_59;
          goto LABEL_78;
        }
        v104 = *(_DWORD *)&v94[v91 + 4];
        if (v102 < a4 && v104 < a4)
        {
          if (v101 >= v103)
          {
            v101 = -v103;
            *(float *)&v94[v91] = -v103;
          }
          goto LABEL_78;
        }
        if (v102 >= a4)
        {
          if (v104 >= a4)
            goto LABEL_59;
          v106 = &v94[16 * v92];
LABEL_73:
          v107 = -v103;
          *(float *)v106 = v107;
          *(float *)(v96 + 4 * ((v99 + v97 * v100) * v98)) = v107;
          goto LABEL_60;
        }
LABEL_78:
        *(float *)(v96 + 4 * ((v99 + v97 * v100) * v98)) = v101;
LABEL_60:
        v95 += 2;
        ++v92;
        v91 += 16;
      }
      while (v91 != 0x400000);
      v53 = 0;
      v52 = v172;
LABEL_29:
      if (++v54 != v17)
        continue;
      break;
    }
    ++v52;
    v18 = v164;
    if (v52 != v164)
      continue;
    break;
  }
  if (!v53)
  {
    a7 = v166;
    a3 = v167;
    LOBYTE(v108) = v169;
    goto LABEL_111;
  }
  v182 = 2;
  sub_23993BC9C(v167, &v182);
  a7 = v166;
  v108 = v169 && sub_23993C9DC((uint64_t)v167, (uint64_t *)&v193, &v187);
  LODWORD(v182) = 1;
  sub_23993BC9C(v167, &v182);
  if (v108)
    LOBYTE(v108) = sub_23993C9DC((uint64_t)v167, (uint64_t *)&v190, &__p);
  v109 = 0;
  v110 = (char *)__p;
  v111 = *(_QWORD *)(v166 + 16);
  v112 = *(_DWORD *)(v166 + 4);
  v113 = *(_DWORD *)(v166 + 12);
  v114 = v187 + 1;
  v115 = 1;
  v116 = 1;
  v117 = (float *)__p;
  while (2)
  {
    v118 = *(_DWORD *)&v51[4 * v115 - 4];
    v119 = *(_DWORD *)&v51[4 * v115];
    v120 = *(v114 - 1);
    if (v120 == -1.0)
    {
      v122 = *v117;
      if (*v117 != -1.0 && *((_DWORD *)v117 + 1) < a4)
      {
        v125 = (float *)&v110[16 * v109];
LABEL_104:
        v126 = -v122;
        *v125 = v126;
        *(float *)(v111 + 4 * ((v118 + v112 * v119) * v113)) = v126;
        goto LABEL_90;
      }
LABEL_89:
      v21[((v118 + v119 * v17) * v19)] = 0;
      goto LABEL_90;
    }
    v121 = *v114;
    v122 = *v117;
    if (*v117 == -1.0)
    {
      if (LODWORD(v121) < a4)
        goto LABEL_109;
      goto LABEL_89;
    }
    v123 = *((_DWORD *)v117 + 1);
    if (LODWORD(v121) >= a4 || v123 >= a4)
    {
      if (LODWORD(v121) < a4)
        goto LABEL_109;
      v125 = v117;
      if (v123 < a4)
        goto LABEL_104;
      goto LABEL_89;
    }
    if (v120 >= v122)
    {
      v120 = -v122;
      *v117 = -v122;
    }
LABEL_109:
    *(float *)(v111 + 4 * ((v118 + v112 * v119) * v113)) = v120;
LABEL_90:
    v109 = v116;
    v114 += 4;
    v117 += 4;
    ++v116;
    v115 += 2;
    if (v53 > v109)
      continue;
    break;
  }
  a3 = v167;
LABEL_111:
  sub_23993BC9C(a3, &v183);
  if (v18 && (_DWORD)v17)
  {
    v127 = 0;
    v128 = 0;
    v129 = 0;
    v131 = *(_DWORD *)(a7 + 12);
    v132 = 1;
    v133 = -3.4028e38;
    v134 = 3.4028e38;
    do
    {
      v135 = v17;
      v136 = v127;
      v137 = v128;
      do
      {
        if (v21[v136])
        {
          v130 = *(_QWORD *)(a7 + 16);
          v138 = *(float *)(v130 + 4 * v137);
          if (v138 >= v133)
            v139 = *(float *)(v130 + 4 * v137);
          else
            v139 = v133;
          if (v134 >= v138)
            v140 = *(float *)(v130 + 4 * v137);
          else
            v140 = v134;
          v141 = (v132 & 1) == 0;
          v132 = 0;
          if (v141)
            v133 = v139;
          else
            v133 = *(float *)(v130 + 4 * v137);
          if (v141)
            v134 = v140;
          else
            v134 = *(float *)(v130 + 4 * v137);
        }
        v137 += v131;
        v136 += v19;
        --v135;
      }
      while (v135);
      ++v129;
      v128 += *(_DWORD *)(a7 + 4) * v131;
      v127 += v17 * v19;
    }
    while (v129 != v18);
    if ((v132 & 1) == 0)
    {
      v152 = -v134;
      if (v133 >= (float)-v134)
        v152 = v133;
      if (v152 <= 0.0)
        goto LABEL_165;
      v153 = (*(_DWORD *)(a7 + 8) * *(_DWORD *)(a7 + 4) * *(_DWORD *)(a7 + 12));
      if ((_DWORD)v153)
      {
        v154 = *(float32x4_t **)(a7 + 16);
        if (v153 >= 8)
        {
          v155 = v153 & 0xFFFFFFF8;
          v156 = v154 + 1;
          v157.i64[0] = 0x3F0000003F000000;
          v157.i64[1] = 0x3F0000003F000000;
          v158 = v155;
          do
          {
            v159 = vaddq_f32(*v156, v157);
            v156[-1] = vaddq_f32(v156[-1], v157);
            *v156 = v159;
            v156 += 2;
            v158 -= 8;
          }
          while (v158);
          if (v155 == v153)
            goto LABEL_162;
        }
        else
        {
          v155 = 0;
        }
        v160 = v153 - v155;
        v161 = &v154->f32[v155];
        do
        {
          *v161 = *v161 + 0.5;
          ++v161;
          --v160;
        }
        while (v160);
      }
LABEL_162:
      if ((v108 & 1) != 0)
        LOBYTE(v108) = sub_239927458(a7, v21, 5);
      else
        LOBYTE(v108) = 0;
LABEL_165:
      if (a11)
      {
        v162 = v134;
        if (*(double *)(a10 + 336) < v134)
          v162 = *(double *)(a10 + 336);
        v163 = v133;
        if (*(double *)(a10 + 344) > v133)
          v163 = *(double *)(a10 + 344);
        *(double *)(a10 + 336) = v162;
        *(double *)(a10 + 344) = v163;
      }
      goto LABEL_140;
    }
  }
  v142 = (*(_DWORD *)(a7 + 8) * *(_DWORD *)(a7 + 4) * *(_DWORD *)(a7 + 12));
  if ((_DWORD)v142)
  {
    v143 = *(float32x4_t **)(a7 + 16);
    if (v142 < 8)
    {
      v144 = 0;
      goto LABEL_137;
    }
    v144 = v142 & 0xFFFFFFF8;
    v145 = v143 + 1;
    v146.i64[0] = 0x3F0000003F000000;
    v146.i64[1] = 0x3F0000003F000000;
    v147 = v144;
    do
    {
      v148 = vaddq_f32(*v145, v146);
      v145[-1] = vaddq_f32(v145[-1], v146);
      *v145 = v148;
      v145 += 2;
      v147 -= 8;
    }
    while (v147);
    if (v144 != v142)
    {
LABEL_137:
      v149 = v142 - v144;
      v150 = &v143->f32[v144];
      do
      {
        *v150 = *v150 + 0.5;
        ++v150;
        --v149;
      }
      while (v149);
    }
  }
  LOBYTE(v108) = 0;
LABEL_140:
  operator delete(v51);
  if (__p)
  {
    v185 = __p;
    operator delete(__p);
  }
  if (v187)
  {
    v188 = v187;
    operator delete(v187);
  }
  if (v190)
  {
    v191 = v190;
    operator delete(v190);
  }
  if (v193)
  {
    v194 = v193;
    operator delete(v193);
  }
  if (v196)
  {
    v197 = v196;
    operator delete(v196);
  }
  MEMORY[0x23B83E2F8](v21, 0x1000C8077774924);
  return v108 & 1;
}

void sub_239979BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40)
{
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v44;
  void *v45;
  void *v46;
  void *v47;

  operator delete(v41);
  if (__p)
  {
    operator delete(__p);
    v44 = *(void **)(v42 - 216);
    if (!v44)
    {
LABEL_3:
      v45 = *(void **)(v42 - 192);
      if (!v45)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else
  {
    v44 = *(void **)(v42 - 216);
    if (!v44)
      goto LABEL_3;
  }
  *(_QWORD *)(v42 - 208) = v44;
  operator delete(v44);
  v45 = *(void **)(v42 - 192);
  if (!v45)
  {
LABEL_4:
    v46 = *(void **)(v42 - 168);
    if (!v46)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  *(_QWORD *)(v42 - 184) = v45;
  operator delete(v45);
  v46 = *(void **)(v42 - 168);
  if (!v46)
  {
LABEL_5:
    v47 = *(void **)(v42 - 144);
    if (!v47)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_11:
  *(_QWORD *)(v42 - 160) = v46;
  operator delete(v46);
  v47 = *(void **)(v42 - 144);
  if (!v47)
  {
LABEL_7:
    MEMORY[0x23B83E2F8](v40, 0x1000C8077774924);
    _Unwind_Resume(a1);
  }
LABEL_6:
  *(_QWORD *)(v42 - 136) = v47;
  operator delete(v47);
  goto LABEL_7;
}

void sub_239979CFC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  char *v16;
  __int128 v17;

  v5 = *(_OWORD **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - (uint64_t)v5) >> 4) >= a2)
  {
    if (a2)
    {
      v12 = 48 * ((48 * a2 - 48) / 0x30) + 48;
      bzero(*(void **)(a1 + 8), v12);
      v5 = (_OWORD *)((char *)v5 + v12);
    }
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    v6 = *(_OWORD **)a1;
    v7 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v5 - *(_QWORD *)a1) >> 4);
    v8 = v7 + a2;
    if (v7 + a2 > 0x555555555555555)
      sub_2394189F8();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (uint64_t)v6) >> 4);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x2AAAAAAAAAAAAAALL)
      v10 = 0x555555555555555;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0x555555555555555)
        sub_239418A80();
      v11 = (char *)operator new(48 * v10);
    }
    else
    {
      v11 = 0;
    }
    v13 = &v11[48 * v7];
    v14 = &v11[48 * v10];
    v15 = 48 * ((48 * a2 - 48) / 0x30) + 48;
    bzero(v13, v15);
    v16 = &v13[v15];
    if (v5 != v6)
    {
      do
      {
        v17 = *(v5 - 3);
        v5 -= 3;
        *((_OWORD *)v13 - 3) = v17;
        v13 -= 48;
        *((_OWORD *)v13 + 1) = v5[1];
        *((_OWORD *)v13 + 2) = v5[2];
      }
      while (v5 != v6);
      v5 = *(_OWORD **)a1;
    }
    *(_QWORD *)a1 = v13;
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v14;
    if (v5)
      operator delete(v5);
  }
}

__n128 sub_239979E94(__n128 **a1, __n128 *a2)
{
  __n128 *v4;
  __n128 result;
  unint64_t v6;

  v4 = (__n128 *)operator new(0x28uLL);
  result = *a2;
  v4[1] = *a2;
  v4[2].n128_u8[0] = a2[1].n128_u8[0];
  v6 = (unint64_t)*a1;
  v4->n128_u64[0] = (unint64_t)*a1;
  v4->n128_u64[1] = (unint64_t)a1;
  *(_QWORD *)(v6 + 8) = v4;
  *a1 = v4;
  a1[2] = (__n128 *)((char *)a1[2] + 1);
  return result;
}

_QWORD *sub_239979EE8(_QWORD *a1)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  if (a1[4])
  {
    v2 = a1 + 2;
    v4 = a1[2];
    v3 = (uint64_t *)a1[3];
    v5 = *v3;
    *(_QWORD *)(v5 + 8) = *(_QWORD *)(v4 + 8);
    **(_QWORD **)(v4 + 8) = v5;
    a1[4] = 0;
    if (v3 != a1 + 2)
    {
      do
      {
        v6 = (uint64_t *)v3[1];
        operator delete(v3);
        v3 = v6;
      }
      while (v6 != v2);
      if (a1[4])
      {
        v8 = a1[2];
        v7 = (uint64_t *)a1[3];
        v9 = *v7;
        *(_QWORD *)(v9 + 8) = *(_QWORD *)(v8 + 8);
        **(_QWORD **)(v8 + 8) = v9;
        a1[4] = 0;
        if (v7 != v2)
        {
          do
          {
            v10 = (uint64_t *)v7[1];
            operator delete(v7);
            v7 = v10;
          }
          while (v10 != v2);
        }
      }
    }
  }
  return a1;
}

uint64_t sub_239979F94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t *v16;
  signed __int32 v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  uint64_t *v31;
  int *v32;
  int v33;
  int v34;
  int v35;
  char v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  BOOL v51;
  unsigned int v53;
  BOOL v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  int v62;
  int v63;
  BOOL v64;
  int v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  _QWORD *v72;
  unint64_t v73;
  uint64_t *__p;
  int v75;
  signed __int32 v76;
  unsigned int v77;
  char v78;
  signed __int32 v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  char v83;
  _QWORD *v84;
  uint64_t *v85;
  unint64_t v86;

  *(_QWORD *)(a3 + 8) = *(_QWORD *)a3;
  v5 = a2[1] - *a2;
  if (!v5)
  {
    v84 = &v84;
    v85 = (uint64_t *)&v84;
    v86 = 0;
    sub_23997CE8C((uint64_t *)&v84, (uint64_t *)&v84, 0);
    v15 = v86;
    if (v86)
      goto LABEL_10;
    return 1;
  }
  sub_23997CC04((char **)a3, v5 >> 4);
  v8 = *a2;
  v7 = a2[1];
  v84 = &v84;
  v85 = (uint64_t *)&v84;
  v86 = 0;
  v9 = v7 - v8;
  if (!v9)
  {
    sub_23997CE8C((uint64_t *)&v84, (uint64_t *)&v84, 0);
    v15 = v86;
    if (v86)
      goto LABEL_10;
    return 1;
  }
  v10 = 0;
  v11 = 0;
  v12 = v9 >> 4;
  v13 = (uint64_t *)&v84;
  do
  {
    v14 = operator new(0x20uLL);
    v14[1] = &v84;
    v14[2] = v8 + 16 * v10;
    *((_DWORD *)v14 + 6) = v11;
    *v14 = v13;
    v13[1] = (uint64_t)v14;
    v10 = ++v11;
    v13 = v14;
    v84 = v14;
    v86 = v11;
  }
  while (v12 > v11);
  sub_23997CE8C(v85, (uint64_t *)&v84, v11);
  v15 = v86;
  if (!v86)
    return 1;
LABEL_10:
  v72 = (_QWORD *)a3;
  v16 = (uint64_t *)(a1 + 16);
LABEL_13:
  v25 = v85;
  if (v85 != (uint64_t *)&v84)
  {
    v26 = *(uint64_t **)(a1 + 24);
    if (v26 != v16)
    {
      v73 = v15;
      __p = 0;
      v27 = 0;
      v77 = 0x80000000;
      v78 = 0;
      v28 = 0x7FFFFFFF;
      v29 = -1;
      v30 = 0x7FFFFFFF;
      v31 = v85;
      v75 = 0x7FFFFFFF;
      v76 = 0x7FFFFFFF;
      v20 = 0x80000000;
      do
      {
        v32 = (int *)v31[2];
        v33 = *v32;
        v34 = v32[1];
        v35 = v34 * *v32;
        if (*(_BYTE *)(a1 + 8))
        {
          v36 = 0;
          v37 = 0x80000000;
          v38 = 0x7FFFFFFF;
          v39 = 0x7FFFFFFF;
          v40 = 0x80000000;
          v41 = 0x7FFFFFFF;
          v42 = 0x7FFFFFFF;
          v43 = *(_QWORD *)(a1 + 24);
          do
          {
            v45 = *(_DWORD *)(v43 + 16);
            v44 = *(_DWORD *)(v43 + 20);
            v46 = *(_DWORD *)(v43 + 24) - v45;
            v47 = *(_DWORD *)(v43 + 28) - v44;
            v48 = v47 * v46 - v35;
            v49 = v46 - v33;
            if (v46 >= v33 && v47 >= v34)
            {
              if (v47 - v34 < v49)
                v49 = v47 - v34;
              if (v48 < v38 || (v48 == v38 ? (v51 = (int)v49 < v39) : (v51 = 0), v51))
              {
                v36 = 0;
                v40 = v45 + v33;
                v37 = v44 + v34;
                v38 = v47 * v46 - v35;
                v39 = v49;
                v41 = *(_DWORD *)(v43 + 20);
                v42 = *(_DWORD *)(v43 + 16);
              }
            }
            if (v46 >= v34 && v47 >= v33)
            {
              v53 = v47 - v33;
              if (v53 >= v46 - v34)
                v53 = v46 - v34;
              if (v48 < v38 || (v48 == v38 ? (v54 = (int)v53 < v39) : (v54 = 0), v54))
              {
                v40 = v45 + v34;
                v37 = v44 + v33;
                v36 = 1;
                v38 = v48;
                v39 = v53;
                v41 = *(_DWORD *)(v43 + 20);
                v42 = *(_DWORD *)(v43 + 16);
              }
            }
            v43 = *(_QWORD *)(v43 + 8);
          }
          while ((uint64_t *)v43 != v16);
        }
        else
        {
          v37 = 0x80000000;
          v38 = 0x7FFFFFFF;
          v39 = 0x7FFFFFFF;
          v40 = 0x80000000;
          v41 = 0x7FFFFFFF;
          v42 = 0x7FFFFFFF;
          v55 = *(_QWORD *)(a1 + 24);
          do
          {
            v57 = *(_DWORD *)(v55 + 16);
            v56 = *(_DWORD *)(v55 + 20);
            v58 = *(_DWORD *)(v55 + 24) - v57;
            v59 = *(_DWORD *)(v55 + 28) - v56;
            v60 = v58 - v33;
            if (v58 >= v33 && v59 >= v34)
            {
              v62 = v59 * v58 - v35;
              v63 = v59 - v34;
              if (v63 >= v60)
                v63 = v60;
              if (v62 < v38 || (v62 == v38 ? (v64 = v63 < v39) : (v64 = 0), v64))
              {
                v40 = v57 + v33;
                v37 = v56 + v34;
                v38 = v62;
                v39 = v63;
                v41 = *(_DWORD *)(v55 + 20);
                v42 = *(_DWORD *)(v55 + 16);
              }
            }
            v55 = *(_QWORD *)(v55 + 8);
          }
          while ((uint64_t *)v55 != v16);
          v36 = 0;
        }
        if (v37 != v41 && (v38 < v30 || v38 == v30 && v39 < v28))
        {
          v29 = *((_DWORD *)v31 + 6);
          v77 = v40;
          v78 = v36;
          v20 = v37;
          v75 = v41;
          v76 = v42;
          __p = v31;
          v30 = v38;
          v28 = v39;
        }
        if (v27 >= 4 && v29 != -1)
        {
          v18 = v75;
          v17 = v76;
          v79 = v76;
          v80 = v75;
          v19 = v77;
          v21 = v78;
          v81 = v77;
          v82 = v20;
          v83 = v78;
          v22 = v73;
          if (v26 == v16)
            goto LABEL_12;
          do
          {
LABEL_75:
            v65 = sub_23997A4BC(a1, (uint64_t)(v26 + 2), &v79);
            v66 = (uint64_t *)v26[1];
            if (v65)
            {
              v67 = *v26;
              *(_QWORD *)(v67 + 8) = v66;
              *(_QWORD *)v26[1] = v67;
              --*(_QWORD *)(a1 + 32);
              operator delete(v26);
            }
            v26 = v66;
          }
          while (v66 != v16);
          v17 = v79;
          v18 = v80;
          v19 = v81;
          v20 = v82;
          v21 = v83;
          v22 = v86;
LABEL_12:
          v23 = *v72 + 20 * v29;
          *(_DWORD *)v23 = v17;
          *(_DWORD *)(v23 + 4) = v18;
          *(_DWORD *)(v23 + 8) = v19;
          *(_DWORD *)(v23 + 12) = v20;
          *(_BYTE *)(v23 + 16) = v21;
          v24 = *__p;
          *(_QWORD *)(v24 + 8) = __p[1];
          *(_QWORD *)__p[1] = v24;
          v86 = v22 - 1;
          operator delete(__p);
          v15 = v86;
          if (!v86)
            return 1;
          goto LABEL_13;
        }
        v31 = (uint64_t *)v31[1];
        v27 += 2;
      }
      while (v31 != (uint64_t *)&v84);
      v18 = v75;
      v17 = v76;
      v79 = v76;
      v80 = v75;
      v19 = v77;
      v21 = v78;
      v81 = v77;
      v82 = v20;
      v83 = v78;
      if (v29 != -1)
      {
        v26 = *(uint64_t **)(a1 + 24);
        v22 = v73;
        if (v26 == v16)
          goto LABEL_12;
        goto LABEL_75;
      }
      if (!v73)
        return 0;
    }
  }
  v69 = (uint64_t)v84;
  v70 = *v85;
  *(_QWORD *)(v70 + 8) = v84[1];
  **(_QWORD **)(v69 + 8) = v70;
  v86 = 0;
  if (v25 != (uint64_t *)&v84)
  {
    do
    {
      v71 = (uint64_t *)v25[1];
      operator delete(v25);
      v25 = v71;
    }
    while (v71 != (uint64_t *)&v84);
  }
  return 0;
}

void sub_23997A434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_23997A45C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23997A448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_23997A45C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_23997A45C(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  if (a1[2])
  {
    v3 = *a1;
    v2 = (uint64_t *)a1[1];
    v4 = *v2;
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(*a1 + 8);
    **(_QWORD **)(v3 + 8) = v4;
    a1[2] = 0;
    if (v2 != a1)
    {
      do
      {
        v5 = (uint64_t *)v2[1];
        operator delete(v2);
        v2 = v5;
      }
      while (v5 != a1);
    }
  }
  return a1;
}

uint64_t sub_23997A4BC(uint64_t a1, uint64_t a2, signed __int32 *a3)
{
  signed int v5;
  signed __int32 v6;
  signed __int32 v7;
  signed __int32 v8;
  signed __int32 v9;
  unsigned __int32 v11;
  signed int v12;
  signed __int32 v13;
  signed __int32 v14;
  signed __int32 v15;
  unsigned int v16;
  __n128 v18;
  char v19;

  if (a3[2] <= *(_DWORD *)a2)
    return 0;
  v5 = *(_DWORD *)(a2 + 8);
  if (*a3 >= v5)
    return 0;
  v6 = a3[3];
  v7 = *(_DWORD *)(a2 + 4);
  if (v6 <= v7)
    return 0;
  v8 = a3[1];
  v9 = *(_DWORD *)(a2 + 12);
  if (v8 >= v9)
    return 0;
  if (v8 > v7)
  {
    v18.n128_u32[0] = *(_DWORD *)a2;
    *(unint64_t *)((char *)v18.n128_u64 + 4) = __PAIR64__(v5, v7);
    v19 = *(_BYTE *)(a2 + 16);
    v18.n128_u32[3] = v8;
    if ((sub_23997A68C(a1, &v18, a2) & 1) == 0)
    {
      sub_239979E94((__n128 **)(a1 + 16), &v18);
      v6 = a3[3];
      v9 = *(_DWORD *)(a2 + 12);
    }
  }
  if (v6 < v9)
  {
    v11 = *(_DWORD *)a2;
    v18.n128_u32[2] = *(_DWORD *)(a2 + 8);
    v18.n128_u32[3] = v9;
    v19 = *(_BYTE *)(a2 + 16);
    v18.n128_u64[0] = __PAIR64__(v6, v11);
    if ((sub_23997A68C(a1, &v18, a2) & 1) == 0)
    {
      sub_239979E94((__n128 **)(a1 + 16), &v18);
      v9 = *(_DWORD *)(a2 + 12);
    }
  }
  if (a3[1] < v9)
  {
    v12 = *(_DWORD *)(a2 + 4);
    if (a3[3] > v12)
    {
      v13 = *a3;
      v14 = *(_DWORD *)(a2 + 8);
      if (*a3 > *(_DWORD *)a2 && v13 < v14)
      {
        v18.n128_u32[0] = *(_DWORD *)a2;
        *(unint64_t *)((char *)v18.n128_u64 + 4) = __PAIR64__(v13, v12);
        v19 = *(_BYTE *)(a2 + 16);
        v18.n128_u32[3] = v9;
        if ((sub_23997A68C(a1, &v18, a2) & 1) == 0)
        {
          sub_239979E94((__n128 **)(a1 + 16), &v18);
          v14 = *(_DWORD *)(a2 + 8);
        }
      }
      v15 = a3[2];
      if (v15 < v14)
      {
        v16 = *(_DWORD *)(a2 + 4);
        v18.n128_u32[3] = *(_DWORD *)(a2 + 12);
        v19 = *(_BYTE *)(a2 + 16);
        v18.n128_u32[0] = v15;
        *(unint64_t *)((char *)v18.n128_u64 + 4) = __PAIR64__(v14, v16);
        if ((sub_23997A68C(a1, &v18, a2) & 1) == 0)
          sub_239979E94((__n128 **)(a1 + 16), &v18);
      }
    }
  }
  return 1;
}

uint64_t sub_23997A68C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  if (v3 == a1 + 16)
    return 0;
  while (v3 + 16 == a3
       || *(_DWORD *)(v3 + 16) > *a2
       || *(_DWORD *)(v3 + 20) > a2[1]
       || *(_DWORD *)(v3 + 24) < a2[2]
       || *(_DWORD *)(v3 + 28) < a2[3])
  {
    v3 = *(_QWORD *)(v3 + 8);
    if (v3 == a1 + 16)
      return 0;
  }
  return 1;
}

uint64_t sub_23997A700(uint64_t a1, uint64_t a2, _DWORD *a3, _BYTE *a4)
{
  _DWORD *v6;
  char *v7;
  size_t v8;
  size_t v9;
  void **p_dst;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  size_t v15;
  size_t v16;
  void *p_p;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  size_t v22;
  size_t v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  size_t v29;
  size_t v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  char *v36;
  size_t v37;
  size_t v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  size_t v44;
  size_t v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *p_shared_owners;
  unint64_t v53;
  unint64_t v54;
  unsigned int v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  __int128 *v71;
  uint64_t v72;
  __int128 v73;
  int v74;
  unint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  _BYTE *v94;
  _DWORD *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _OWORD *v100;
  char *v101;
  uint64_t v102;
  __int128 v103;
  int v104;
  void **v106;
  void *__p;
  size_t v108;
  unint64_t v109;
  void **__dst;
  size_t v111;
  unint64_t v112;

  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = 0;
  v106 = (void **)(a1 + 16);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = -1;
  v6 = (_DWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 48) = -1;
  *(_DWORD *)(a1 + 56) = -1;
  *(_DWORD *)(a1 + 60) = *a3;
  *(_BYTE *)(a1 + 64) = *a4;
  v7 = off_256934438[0];
  v8 = strlen(off_256934438[0]);
  if (v8 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v9 = v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    p_dst = (void **)operator new(v11 + 1);
    v111 = v9;
    v112 = v12 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v112) = v8;
  p_dst = (void **)&__dst;
  if (v8)
LABEL_8:
    memmove(p_dst, v7, v9);
  *((_BYTE *)p_dst + v9) = 0;
  __p = 0;
  *v6 = sub_2394E5C88((uint64_t **)(a2 + 80), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v112) < 0)
    operator delete(__dst);
  v13 = *(_QWORD *)(a1 + 8);
  v14 = off_256934448[0];
  v15 = strlen(off_256934448[0]);
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v16 = v15;
  if (v15 >= 0x17)
  {
    v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v18 = v15 | 7;
    v19 = v18 + 1;
    p_p = operator new(v18 + 1);
    v108 = v16;
    v109 = v19 | 0x8000000000000000;
    __p = p_p;
    goto LABEL_18;
  }
  HIBYTE(v109) = v15;
  p_p = &__p;
  if (v15)
LABEL_18:
    memmove(p_p, v14, v16);
  *((_BYTE *)p_p + v16) = 0;
  __dst = 0;
  v111 = 0;
  v112 = 0;
  *(_DWORD *)(a1 + 44) = sub_23958C0D8((uint64_t **)(v13 + 80), (uint64_t)&__dst, (unsigned __int8 *)&__p);
  if (SHIBYTE(v112) < 0)
  {
    operator delete(__dst);
    if ((SHIBYTE(v109) & 0x80000000) == 0)
      goto LABEL_21;
  }
  else if ((SHIBYTE(v109) & 0x80000000) == 0)
  {
    goto LABEL_21;
  }
  operator delete(__p);
LABEL_21:
  v20 = *(_QWORD *)(a1 + 8);
  v21 = off_256934428[0];
  v22 = strlen(off_256934428[0]);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = (void **)operator new(v25 + 1);
    v111 = v23;
    v112 = v26 | 0x8000000000000000;
    __dst = v24;
    goto LABEL_28;
  }
  HIBYTE(v112) = v22;
  v24 = (void **)&__dst;
  if (v22)
LABEL_28:
    memmove(v24, v21, v23);
  *((_BYTE *)v24 + v23) = 0;
  LODWORD(__p) = 0;
  *(_DWORD *)(a1 + 48) = sub_2399346C0((uint64_t **)(v20 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v112) < 0)
    operator delete(__dst);
  v27 = *(_QWORD *)(a1 + 8);
  v28 = off_256934428[0];
  v29 = strlen(off_256934428[0]);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = (void **)operator new(v32 + 1);
    v111 = v30;
    v112 = v33 | 0x8000000000000000;
    __dst = v31;
    goto LABEL_38;
  }
  HIBYTE(v112) = v29;
  v31 = (void **)&__dst;
  if (v29)
LABEL_38:
    memmove(v31, v28, v30);
  *((_BYTE *)v31 + v30) = 0;
  LOWORD(__p) = 0;
  v34 = (_DWORD *)(a1 + 52);
  *(_DWORD *)(a1 + 52) = sub_23958CE84((uint64_t **)(v27 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v112) < 0)
    operator delete(__dst);
  v35 = *(_QWORD *)(a1 + 8);
  v36 = off_256934418[0];
  v37 = strlen(off_256934418[0]);
  if (v37 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v38 = v37;
  if (v37 >= 0x17)
  {
    v40 = (v37 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v37 | 7) != 0x17)
      v40 = v37 | 7;
    v41 = v40 + 1;
    v39 = (void **)operator new(v40 + 1);
    v111 = v38;
    v112 = v41 | 0x8000000000000000;
    __dst = v39;
    goto LABEL_48;
  }
  HIBYTE(v112) = v37;
  v39 = (void **)&__dst;
  if (v37)
LABEL_48:
    memmove(v39, v36, v38);
  *((_BYTE *)v39 + v38) = 0;
  LODWORD(v108) = 0;
  __p = 0;
  *(_DWORD *)(a1 + 56) = sub_2394E5DE4((uint64_t **)(v35 + 56), (uint64_t)&__p, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v112) < 0)
  {
    operator delete(__dst);
    if (*v34 != -1)
      goto LABEL_65;
  }
  else if (*v34 != -1)
  {
    goto LABEL_65;
  }
  v42 = *(_QWORD **)(a1 + 8);
  v43 = off_256934428[0];
  v44 = strlen(off_256934428[0]);
  if (v44 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v45 = v44;
  if (v44 >= 0x17)
  {
    v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v44 | 7) != 0x17)
      v47 = v44 | 7;
    v48 = v47 + 1;
    v46 = (void **)operator new(v47 + 1);
    v111 = v45;
    v112 = v48 | 0x8000000000000000;
    __dst = v46;
    goto LABEL_62;
  }
  HIBYTE(v112) = v44;
  v46 = (void **)&__dst;
  if (v44)
LABEL_62:
    memmove(v46, v43, v45);
  *((_BYTE *)v46 + v45) = 0;
  sub_239589414(v42, (_DWORD *)(a1 + 52), (uint64_t)&__dst);
  if (SHIBYTE(v112) < 0)
    operator delete(__dst);
LABEL_65:
  v49 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 44));
  v50 = *v49;
  v51 = (std::__shared_weak_count *)v49[1];
  if (v51)
  {
    p_shared_owners = (unint64_t *)&v51->__shared_owners_;
    do
      v53 = __ldxr(p_shared_owners);
    while (__stxr(v53 + 1, p_shared_owners));
    do
      v54 = __ldaxr(p_shared_owners);
    while (__stlxr(v54 - 1, p_shared_owners));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
      std::__shared_weak_count::__release_weak(v51);
    }
  }
  v55 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 16))(v50);
  v56 = *(_QWORD *)(a1 + 8);
  v57 = *(_BYTE **)(a1 + 16);
  v59 = *(_QWORD *)(v56 + 152);
  v58 = *(_QWORD *)(v56 + 160);
  v60 = v55;
  if (v55 > (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 32) - (_QWORD)v57) >> 2))
  {
    v61 = *(_BYTE **)(a1 + 24);
    v62 = (char *)operator new(4 * v55);
    v63 = v61 - v57;
    v64 = &v62[(v61 - v57) & 0xFFFFFFFFFFFFFFFCLL];
    v65 = v64;
    if (v61 == v57)
      goto LABEL_80;
    if ((unint64_t)(v63 - 4) >= 0x2C)
    {
      v65 = &v62[(v61 - v57) & 0xFFFFFFFFFFFFFFFCLL];
      if ((unint64_t)(&v61[-(v63 & 0xFFFFFFFFFFFFFFFCLL)] - v62) >= 0x20)
      {
        v66 = v63 >> 2;
        v67 = ((unint64_t)(v63 - 4) >> 2) + 1;
        v68 = 4 * (v67 & 0x7FFFFFFFFFFFFFF8);
        v69 = &v61[-v68];
        v65 = &v64[-v68];
        v70 = &v62[4 * v66 - 16];
        v71 = (__int128 *)(v61 - 16);
        v72 = v67 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v73 = *v71;
          *((_OWORD *)v70 - 1) = *(v71 - 1);
          *(_OWORD *)v70 = v73;
          v70 -= 32;
          v71 -= 2;
          v72 -= 8;
        }
        while (v72);
        v61 = v69;
        if (v67 == (v67 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_80:
          *(_QWORD *)(a1 + 16) = v65;
          *(_QWORD *)(a1 + 24) = v64;
          *(_QWORD *)(a1 + 32) = &v62[4 * v60];
          if (v57)
            operator delete(v57);
          goto LABEL_82;
        }
      }
    }
    else
    {
      v65 = &v62[(v61 - v57) & 0xFFFFFFFFFFFFFFFCLL];
    }
    do
    {
      v74 = *((_DWORD *)v61 - 1);
      v61 -= 4;
      *((_DWORD *)v65 - 1) = v74;
      v65 -= 4;
    }
    while (v61 != v57);
    goto LABEL_80;
  }
LABEL_82:
  v75 = v58 - v59;
  if (((v58 - v59) & 0x3FFFFFFFCLL) != 0)
  {
    v76 = 0;
    v77 = 0;
    v78 = (v75 >> 2);
    while (1)
    {
      v80 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 56) + 16 * *(unsigned int *)(a1 + 48));
      v81 = *v80;
      v82 = (std::__shared_weak_count *)v80[1];
      if (!v82)
        goto LABEL_126;
      v83 = (unint64_t *)&v82->__shared_owners_;
      do
        v84 = __ldxr(v83);
      while (__stxr(v84 + 1, v83));
      do
        v85 = __ldaxr(v83);
      while (__stlxr(v85 - 1, v83));
      if (!v85)
      {
        ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
        std::__shared_weak_count::__release_weak(v82);
        if (v77 != *(_DWORD *)(*(_QWORD *)(v81 + 40) + 4 * v76))
          goto LABEL_86;
      }
      else
      {
LABEL_126:
        if (v77 != *(_DWORD *)(*(_QWORD *)(v81 + 40) + 4 * v76))
          goto LABEL_86;
      }
      v87 = *(char **)(a1 + 24);
      v86 = *(_QWORD *)(a1 + 32);
      if ((unint64_t)v87 >= v86)
        break;
      *(_DWORD *)v87 = v76;
      v79 = (uint64_t)(v87 + 4);
LABEL_85:
      *(_QWORD *)(a1 + 24) = v79;
      ++v77;
LABEL_86:
      if (++v76 == v78)
        return a1;
    }
    v88 = (char *)*v106;
    v89 = v87 - (_BYTE *)*v106;
    v90 = v89 >> 2;
    v91 = (v89 >> 2) + 1;
    if (v91 >> 62)
      sub_2394189F8();
    v92 = v86 - (_QWORD)v88;
    if (v92 >> 1 > v91)
      v91 = v92 >> 1;
    if ((unint64_t)v92 >= 0x7FFFFFFFFFFFFFFCLL)
      v93 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v93 = v91;
    if (v93)
    {
      if (v93 >> 62)
        sub_239418A80();
      v94 = operator new(4 * v93);
      v95 = &v94[4 * v90];
      *v95 = v76;
      v79 = (uint64_t)(v95 + 1);
      if (v87 == v88)
        goto LABEL_113;
    }
    else
    {
      v94 = 0;
      v95 = (_DWORD *)(4 * v90);
      *(_DWORD *)(4 * v90) = v76;
      v79 = 4 * v90 + 4;
      if (v87 == v88)
      {
LABEL_113:
        *(_QWORD *)(a1 + 16) = v95;
        *(_QWORD *)(a1 + 24) = v79;
        *(_QWORD *)(a1 + 32) = &v94[4 * v93];
        if (v88)
          operator delete(v88);
        goto LABEL_85;
      }
    }
    v96 = v87 - 4 - v88;
    if (v96 < 0x2C)
      goto LABEL_127;
    if ((unint64_t)(v87 - &v94[v89]) < 0x20)
      goto LABEL_127;
    v97 = (v96 >> 2) + 1;
    v98 = 4 * (v97 & 0x7FFFFFFFFFFFFFF8);
    v99 = &v87[-v98];
    v95 = (_DWORD *)((char *)v95 - v98);
    v100 = &v94[4 * v90 - 16];
    v101 = v87 - 16;
    v102 = v97 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v103 = *(_OWORD *)v101;
      *(v100 - 1) = *((_OWORD *)v101 - 1);
      *v100 = v103;
      v100 -= 2;
      v101 -= 32;
      v102 -= 8;
    }
    while (v102);
    v87 = v99;
    if (v97 != (v97 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_127:
      do
      {
        v104 = *((_DWORD *)v87 - 1);
        v87 -= 4;
        *--v95 = v104;
      }
      while (v87 != v88);
    }
    goto LABEL_113;
  }
  return a1;
}

void sub_23997AF2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v22;
  void *v24;

  if (a22 < 0)
    operator delete(__p);
  v24 = *a10;
  if (*a10)
  {
    *(_QWORD *)(v22 + 24) = v24;
    operator delete(v24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23997AFC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  float v9;
  unint64_t v10;
  unint64_t v16;
  float *v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x2_t *v20;
  unint64_t v21;
  int v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  const float *v39;
  int32x4_t v40;
  int32x4_t v41;
  const float *v42;
  int v43;
  int v44;
  uint64_t *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unsigned int v53;
  unsigned int v54;
  float v55;
  float v56;
  unint64_t v57;
  int v58;
  unsigned int v59;
  int v60;
  _QWORD *v61;
  char v62;
  char **v63;
  char *v64;
  char *v65;
  char **v66;
  char **v67;
  char *v68;
  char *v69;
  char **v70;
  char *v71;
  char *v72;
  _DWORD *v73;
  uint64_t v74;
  int v75;
  char *v76;
  char *v77;
  char *v78;
  unint64_t v79;
  _BYTE *v80;
  _DWORD *v81;
  char *v82;
  int v83;
  _DWORD *v84;
  _DWORD *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  int v93;
  _DWORD *v94;
  int v95;
  int v96;
  _DWORD *v97;
  int64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  _DWORD *v104;
  int v105;
  char v106;
  _DWORD *v107;
  _DWORD *v108;
  int v109;
  char *v110;
  _DWORD *v111;
  int v112;
  char *v113;
  _DWORD *v114;
  _DWORD *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  float *v119;
  uint64_t v120;
  float *v121;
  float32x2_t *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  unint64_t v130;
  int v131;
  uint64_t v132;
  char v133;
  void *v134;
  char *v135;
  uint64_t v136;
  void *v137;
  char *v138;
  char *v139;
  void *v140;
  void *v141;
  uint64_t v142;
  void *__p;
  _DWORD *v144;
  char *v145;
  char **v146;
  uint64_t v147;
  float32x4x2_t v148;
  float32x4x2_t v149;
  float32x4x2_t v150;
  float32x4x2_t v151;
  float32x4x4_t v152;
  float32x4x4_t v153;

  v1 = a1;
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40);
  v3 = *(std::__shared_weak_count **)(v2 + 8);
  v129 = *(_QWORD **)v2;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v7 = (*(uint64_t (**)(_QWORD *))(*v129 + 16))(v129);
  sub_23997B9E4(v1);
  if (v7)
  {
    v8 = v129[5];
    v9 = (float)*(unsigned int *)(v1 + 60);
    if (v7 < 4uLL)
    {
      v10 = 0;
LABEL_13:
      v20 = (float32x2_t *)(v8 + 8 * v10);
      v21 = v7 - v10;
      __asm { FMOV            V1.2S, #5.0 }
      do
      {
        *v20 = vmul_f32(vmul_n_f32(*v20, v9), _D1);
        ++v20;
        --v21;
      }
      while (v21);
      goto LABEL_15;
    }
    v10 = v7 - (unint64_t)(v7 & 3);
    __asm { FMOV            V1.4S, #5.0 }
    v16 = v10;
    v17 = (float *)v129[5];
    do
    {
      v149 = vld2q_f32(v17);
      v18 = vmulq_n_f32(v149.val[0], v9);
      v149.val[0] = vmulq_n_f32(v149.val[1], v9);
      v149.val[1] = vmulq_f32(v18, _Q1);
      v19 = vmulq_f32(v149.val[0], _Q1);
      vst2q_f32(v17, *(float32x4x2_t *)((char *)&v149 + 16));
      v17 += 8;
      v16 -= 4;
    }
    while (v16);
    if ((v7 & 3) != 0)
      goto LABEL_13;
  }
LABEL_15:
  v140 = 0;
  v141 = 0;
  v142 = 0;
  v137 = 0;
  v138 = 0;
  v139 = 0;
  v127 = v7 & 7;
  v128 = v7 - v127;
  v23 = 199;
  v134 = 0;
  v135 = 0;
  v136 = 0;
  v130 = v7;
  v132 = v1;
  while (1)
  {
    sub_23997BD3C(v1, &v137, *(_DWORD *)(v1 + 60));
    v25 = (char *)v137;
    v24 = v138;
    v26 = v138 - (_BYTE *)v137;
    v131 = v23;
    if (v138 == v137)
    {
      v34 = 0;
    }
    else
    {
      v27 = (unsigned int *)((char *)v137 + 4);
      v28 = 1;
      do
      {
        v30 = *(v27 - 1) + 4;
        v31 = *(_DWORD *)(v1 + 60) - 1;
        if (v30 < v31)
        {
          v32 = *v27 + 4;
          if (v32 < v31)
          {
            *(v27 - 1) = v30;
            *v27 = v32;
          }
        }
        v27 += 4;
      }
      while (v26 >> 4 > (unint64_t)v28++);
      v33 = v26 - 16;
      if (v33 >= 0x80)
      {
        v35 = (v33 >> 4) + 1;
        v36 = v35 & 7;
        if ((v35 & 7) == 0)
          v36 = 8;
        v37 = v35 - v36;
        v38 = &v25[16 * v37];
        v39 = (const float *)(v25 + 64);
        v40 = 0uLL;
        v41 = 0uLL;
        do
        {
          v42 = v39 - 16;
          v152 = vld4q_f32(v42);
          v153 = vld4q_f32(v39);
          v40 = vmlaq_s32(v40, (int32x4_t)v152.val[1], (int32x4_t)v152.val[0]);
          v41 = vmlaq_s32(v41, (int32x4_t)v153.val[1], (int32x4_t)v153.val[0]);
          v39 += 32;
          v37 -= 8;
        }
        while (v37);
        v34 = vaddvq_s32(vaddq_s32(v41, v40));
        v25 = v38;
      }
      else
      {
        v34 = 0;
      }
      do
      {
        v43 = *(_DWORD *)v25;
        v44 = *((_DWORD *)v25 + 1);
        v25 += 16;
        v34 += v44 * v43;
      }
      while (v25 != v24);
    }
    v45 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) + 80) + 16 * *(unsigned int *)(v1 + 44));
    v46 = *v45;
    v47 = (std::__shared_weak_count *)v45[1];
    if (v47)
    {
      v48 = (unint64_t *)&v47->__shared_owners_;
      do
        v49 = __ldxr(v48);
      while (__stxr(v49 + 1, v48));
      do
        v50 = __ldaxr(v48);
      while (__stlxr(v50 - 1, v48));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
        std::__shared_weak_count::__release_weak(v47);
      }
    }
    v51 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v46 + 16))(v46);
    v52 = (v135 - (_BYTE *)v134) >> 4;
    if (v51 <= v52)
    {
      if (v51 < v52)
        v135 = (char *)v134 + 16 * v51;
    }
    else
    {
      sub_23997D0A8((uint64_t)&v134, v51 - v52);
    }
    v53 = *(_DWORD *)(v1 + 60);
    v54 = *(unsigned __int8 *)(v1 + 64);
    if (v34 <= v53 * v53 * v54)
      break;
    v55 = logf((float)v53 / sqrtf((float)v34 / (float)v54));
    v56 = pow(0.9, (double)(int)(v55 / -0.105360516));
    if (v56 > 0.9)
      goto LABEL_111;
    v57 = v130;
    v58 = v23;
    if (!v130)
      goto LABEL_16;
LABEL_112:
    v117 = v129[5];
    if (v57 >= 8)
    {
      v119 = (float *)(v117 + 32);
      v120 = v128;
      do
      {
        v121 = v119 - 8;
        v148 = vld2q_f32(v121);
        v150 = vld2q_f32(v119);
        v151.val[0] = vmulq_n_f32(v148.val[0], v56);
        v151.val[1] = vmulq_n_f32(v148.val[1], v56);
        v148.val[0] = vmulq_n_f32(v150.val[0], v56);
        v148.val[1] = vmulq_n_f32(v150.val[1], v56);
        vst2q_f32(v121, v151);
        vst2q_f32(v119, v148);
        v119 += 16;
        v120 -= 8;
      }
      while (v120);
      v118 = v128;
      if (!v127)
        goto LABEL_16;
    }
    else
    {
      v118 = 0;
    }
    v122 = (float32x2_t *)(v117 + 8 * v118);
    v123 = v57 - v118;
    do
    {
      *v122 = vmul_n_f32(*v122, v56);
      ++v122;
      --v123;
    }
    while (v123);
LABEL_16:
    v23 = v58 - 1;
    if (!(_WORD)v58)
      goto LABEL_121;
  }
  v141 = v140;
  if (!v54)
  {
LABEL_111:
    v56 = 0.9;
    v57 = v130;
    v58 = v131;
    if (!v130)
      goto LABEL_16;
    goto LABEL_112;
  }
  v59 = 0;
  while (1)
  {
    v60 = *(_DWORD *)(v1 + 60);
    LOBYTE(v144) = 1;
    LODWORD(__p) = v60;
    HIDWORD(__p) = v60;
    v61 = operator new(0x28uLL);
    v61[1] = &v145;
    v61[2] = 0;
    *((_DWORD *)v61 + 6) = v60;
    *((_DWORD *)v61 + 7) = v60;
    *((_BYTE *)v61 + 32) = 0;
    *v61 = &v145;
    v145 = (char *)v61;
    v146 = (char **)v61;
    v147 = 1;
    v62 = sub_239979F94((uint64_t)&__p, (uint64_t *)&v137, (uint64_t)&v140);
    if (v147)
    {
      v64 = v145;
      v63 = v146;
      v65 = *v146;
      *((_QWORD *)v65 + 1) = *((_QWORD *)v145 + 1);
      **((_QWORD **)v64 + 1) = v65;
      v147 = 0;
      if (v63 != &v145)
      {
        do
        {
          v66 = (char **)v63[1];
          operator delete(v63);
          v63 = v66;
        }
        while (v66 != &v145);
        if (v147)
        {
          v68 = v145;
          v67 = v146;
          v69 = *v146;
          *((_QWORD *)v69 + 1) = *((_QWORD *)v145 + 1);
          **((_QWORD **)v68 + 1) = v69;
          v147 = 0;
          if (v67 != &v145)
          {
            do
            {
              v70 = (char **)v67[1];
              operator delete(v67);
              v67 = v70;
            }
            while (v70 != &v145);
          }
        }
      }
    }
    v133 = v62;
    __p = 0;
    v144 = 0;
    v145 = 0;
    v72 = (char *)v137;
    v71 = v138;
    v73 = 0;
    if (v138 == v137)
    {
      v97 = 0;
      v79 = (v138 - (_BYTE *)v137) >> 4;
      v76 = v138;
      v99 = 0;
    }
    else
    {
      v74 = 0;
      v75 = 0;
      v76 = (char *)v137;
      do
      {
        v80 = v140;
        v81 = (char *)v140 + 20 * v74;
        if (*v81 == 0x7FFFFFFF)
        {
          v82 = &v76[16 * v74];
          if (v73 >= (_DWORD *)v145)
          {
            v85 = __p;
            v86 = ((char *)v73 - (_BYTE *)__p) >> 4;
            v87 = v86 + 1;
            if ((unint64_t)(v86 + 1) >> 60)
              sub_2394189F8();
            v88 = v145 - (_BYTE *)__p;
            if ((v145 - (_BYTE *)__p) >> 3 > v87)
              v87 = v88 >> 3;
            if ((unint64_t)v88 >= 0x7FFFFFFFFFFFFFF0)
              v89 = 0xFFFFFFFFFFFFFFFLL;
            else
              v89 = v87;
            if (v89)
            {
              if (v89 >> 60)
                sub_239418A80();
              v90 = (char *)operator new(16 * v89);
            }
            else
            {
              v90 = 0;
            }
            v91 = &v90[16 * v86];
            *(_DWORD *)v91 = *(_DWORD *)v82;
            *((_DWORD *)v91 + 1) = *((_DWORD *)v82 + 1);
            v92 = &v76[16 * v74];
            v93 = *((_DWORD *)v92 + 2);
            *(_DWORD *)(v91 + 11) = *(_DWORD *)(v92 + 11);
            *((_DWORD *)v91 + 2) = v93;
            v94 = v91;
            if (v73 != v85)
            {
              do
              {
                v95 = *(v73 - 4);
                v73 -= 4;
                *(v94 - 4) = v95;
                v94 -= 4;
                v94[1] = v73[1];
                v96 = v73[2];
                *(_DWORD *)((char *)v94 + 11) = *(_DWORD *)((char *)v73 + 11);
                v94[2] = v96;
              }
              while (v73 != v85);
              v73 = __p;
            }
            v84 = v91 + 16;
            __p = v94;
            v144 = v91 + 16;
            v145 = &v90[16 * v89];
            if (v73)
              operator delete(v73);
          }
          else
          {
            *v73 = *(_DWORD *)v82;
            v73[1] = *((_DWORD *)v82 + 1);
            v83 = *((_DWORD *)v82 + 2);
            *(_DWORD *)((char *)v73 + 11) = *(_DWORD *)(v82 + 11);
            v73[2] = v83;
            v84 = v73 + 4;
          }
          v144 = v84;
          v73 = v84;
          v76 = (char *)v137;
          v71 = v138;
        }
        else
        {
          v77 = &v76[16 * v74];
          v78 = (char *)v134 + 16 * *((unsigned __int16 *)v77 + 4);
          *(_DWORD *)v78 = *v81;
          *((_DWORD *)v78 + 1) = v81[1];
          *((_DWORD *)v78 + 2) = *((_DWORD *)v77 + 2);
          *((_WORD *)v78 + 6) = v59;
          v78[14] = v80[20 * v74 + 16];
        }
        v74 = (unsigned __int16)++v75;
        v79 = (v71 - v76) >> 4;
      }
      while (v79 > (unsigned __int16)v75);
      v97 = __p;
      v72 = v76;
      v98 = (char *)v73 - (_BYTE *)__p;
      v99 = ((char *)v73 - (_BYTE *)__p) >> 4;
      v100 = (uint64_t)v139;
      if (v99 > (v139 - v76) >> 4)
      {
        if (v76)
        {
          v138 = v76;
          operator delete(v76);
          v100 = 0;
          v137 = 0;
          v138 = 0;
          v139 = 0;
        }
        if (v98 < 0)
          goto LABEL_132;
        v101 = v100 >> 3;
        if (v100 >> 3 <= v99)
          v101 = v99;
        v102 = (unint64_t)v100 >= 0x7FFFFFFFFFFFFFF0 ? 0xFFFFFFFFFFFFFFFLL : v101;
        if (v102 >> 60)
LABEL_132:
          sub_2394189F8();
        v103 = (char *)operator new(16 * v102);
        v137 = v103;
        v138 = v103;
        v139 = &v103[16 * v102];
        v104 = v103;
        if (v97 != v73)
        {
          v104 = v103;
          do
          {
            *v104 = *v97;
            v104[1] = v97[1];
            v105 = v97[2];
            *(_DWORD *)((char *)v104 + 11) = *(_DWORD *)((char *)v97 + 11);
            v104[2] = v105;
            v104 += 4;
            v97 += 4;
          }
          while (v97 != v73);
        }
        v97 = __p;
        v138 = (char *)v104;
        v106 = v133;
        if (__p)
          goto LABEL_108;
        goto LABEL_109;
      }
    }
    if (v79 >= v99)
    {
      v113 = v72;
      if (v97 != v73)
      {
        v113 = v76;
        v114 = v76;
        v115 = v97;
        do
        {
          *v114 = *v115;
          v114[1] = v115[1];
          v116 = v115[2];
          *(_DWORD *)((char *)v114 + 11) = *(_DWORD *)((char *)v115 + 11);
          v114[2] = v116;
          v113 += 16;
          v115 += 4;
          v114 += 4;
        }
        while (v115 != v73);
      }
      v138 = &v76[v113 - v72];
      v106 = v133;
      if (v97)
      {
LABEL_108:
        v144 = v97;
        operator delete(v97);
      }
    }
    else
    {
      v107 = &v97[4 * v79];
      if (v71 != v76)
      {
        v108 = v97;
        do
        {
          *(_DWORD *)v76 = *v108;
          *((_DWORD *)v76 + 1) = v108[1];
          v109 = v108[2];
          *(_DWORD *)(v76 + 11) = *(_DWORD *)((char *)v108 + 11);
          *((_DWORD *)v76 + 2) = v109;
          v108 += 4;
          v76 += 16;
        }
        while (v108 != v107);
        v72 = v138;
        v71 = v138;
      }
      v110 = v72;
      if (v107 != v73)
      {
        v110 = v71;
        v111 = v71;
        do
        {
          *v111 = *v107;
          v111[1] = v107[1];
          v112 = v107[2];
          *(_DWORD *)((char *)v111 + 11) = *(_DWORD *)((char *)v107 + 11);
          v111[2] = v112;
          v110 += 16;
          v107 += 4;
          v111 += 4;
        }
        while (v107 != v73);
      }
      v138 = &v71[v110 - v72];
      v106 = v133;
      if (v97)
        goto LABEL_108;
    }
LABEL_109:
    if ((v106 & 1) != 0)
      break;
    ++v59;
    v1 = v132;
    if (v59 >= *(unsigned __int8 *)(v132 + 64))
      goto LABEL_111;
  }
  v1 = v132;
  if ((_WORD)v131)
  {
LABEL_121:
    sub_23997C484(v1, &v134);
    v124 = 1;
    v125 = (char *)v134;
    if (v134)
      goto LABEL_122;
  }
  else
  {
    v124 = 0;
    v125 = (char *)v134;
    if (v134)
    {
LABEL_122:
      v135 = v125;
      operator delete(v125);
    }
  }
  if (v137)
  {
    v138 = (char *)v137;
    operator delete(v137);
  }
  if (v140)
  {
    v141 = v140;
    operator delete(v140);
  }
  return v124;
}

void sub_23997B938(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  void *v27;
  void *v28;

  if (__p)
  {
    operator delete(__p);
    v27 = a19;
    if (!a19)
    {
LABEL_3:
      v28 = a22;
      if (!a22)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v27 = a19;
    if (!a19)
      goto LABEL_3;
  }
  operator delete(v27);
  v28 = a22;
  if (!a22)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v28);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23997B9E4(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int32x2_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  float32x2_t v24;
  uint64_t *v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unsigned int *v31;
  float32x2_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x2_t v35;
  float32x2_t v36;
  _QWORD *v37;
  uint64_t v38;
  void **v39;
  _QWORD *v40;
  char *v41;
  char *v42;
  _QWORD *v43;
  _QWORD *v44;
  void *v45;
  uint64_t v47;
  void *v48[2];
  void *__p[2];
  int v50;

  v2 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
  v4 = *v2;
  v3 = (std::__shared_weak_count *)v2[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v8 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 44));
  v9 = *v8;
  v10 = (std::__shared_weak_count *)v8[1];
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 152);
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 160);
  *(_OWORD *)v48 = 0u;
  *(_OWORD *)__p = 0u;
  v50 = 1065353216;
  v47 = v14;
  if (!v14)
  {
    v48[0] = 0;
    return 1;
  }
  v17 = 0;
  v18 = ((unint64_t)(v15 - v16) >> 2);
  v19 = v14 - 1;
  v20 = vdup_n_s32(0x7F7FFFFFu);
  do
  {
    v21 = *(_QWORD *)(a1 + 16);
    v22 = v18;
    if (v17 != v19)
      v22 = *(unsigned int *)(v21 + 4 * v17 + 4);
    v23 = *(unsigned int *)(v21 + 4 * v17);
    v24 = (float32x2_t)v20;
    if (v23 < v22)
    {
      v24 = (float32x2_t)v20;
      do
      {
        v25 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 56) + 16 * *(unsigned int *)(a1 + 56));
        v27 = *v25;
        v26 = (std::__shared_weak_count *)v25[1];
        if (v26)
        {
          v28 = (unint64_t *)&v26->__shared_owners_;
          do
            v29 = __ldxr(v28);
          while (__stxr(v29 + 1, v28));
          do
            v30 = __ldaxr(v28);
          while (__stlxr(v30 - 1, v28));
          if (!v30)
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
        }
        v31 = (unsigned int *)(*(_QWORD *)(v27 + 40) + 12 * v23);
        sub_239456168((uint64_t)v48, v31, v31);
        v32 = *(float32x2_t *)(*(_QWORD *)(v4 + 40) + 8 * *v31);
        sub_239456168((uint64_t)v48, v31 + 1, v31 + 1);
        v33 = *(float32x2_t *)(*(_QWORD *)(v4 + 40) + 8 * v31[1]);
        v31 += 2;
        sub_239456168((uint64_t)v48, v31, v31);
        v34 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v24, v32), (int8x8_t)v32, (int8x8_t)v24);
        v35 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v34, v33), (int8x8_t)v33, (int8x8_t)v34);
        v36 = *(float32x2_t *)(*(_QWORD *)(v4 + 40) + 8 * *v31);
        v24 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v35, v36), (int8x8_t)v36, (int8x8_t)v35);
        ++v23;
      }
      while (v23 != v22);
    }
    v37 = __p[0];
    if (__p[0])
    {
      v38 = *(_QWORD *)(v4 + 40);
      v39 = (void **)__p[0];
      do
      {
        *(float32x2_t *)(v38 + 8 * *((unsigned int *)v39 + 4)) = vsub_f32(*(float32x2_t *)(v38+ 8 * *((unsigned int *)v39 + 4)), v24);
        v39 = (void **)*v39;
      }
      while (v39);
      if (!__p[1])
        goto LABEL_16;
      do
      {
        v40 = (_QWORD *)*v37;
        operator delete(v37);
        v37 = v40;
      }
      while (v40);
    }
    else if (!__p[1])
    {
      goto LABEL_16;
    }
    __p[0] = 0;
    v41 = (char *)v48[1];
    if (v48[1])
    {
      v42 = 0;
      do
        *((_QWORD *)v48[0] + (_QWORD)v42++) = 0;
      while (v41 != v42);
    }
    __p[1] = 0;
LABEL_16:
    ++v17;
  }
  while (v17 != v47);
  v43 = __p[0];
  if (__p[0])
  {
    do
    {
      v44 = (_QWORD *)*v43;
      operator delete(v43);
      v43 = v44;
    }
    while (v44);
  }
  v45 = v48[0];
  v48[0] = 0;
  if (v45)
    operator delete(v45);
  return 1;
}

void sub_23997BD10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, _QWORD *__p)
{
  _QWORD *v14;
  _QWORD *v15;

  v14 = __p;
  if (__p)
  {
    do
    {
      v15 = (_QWORD *)*v14;
      operator delete(v14);
      v14 = v15;
    }
    while (v15);
  }
  sub_239EC1DC0(&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_23997BD3C(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  float v15;
  int32x2_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  float32x2_t v20;
  float32x2_t v21;
  uint64_t v22;
  float32x2_t v23;
  float32x2_t v24;
  float32x2_t v25;
  float32x2_t v26;
  float32x2_t v27;
  uint64_t *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unsigned int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  float32x2_t v44;
  uint64_t *v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  float32x2_t v51;
  uint64_t *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  float v58;
  float32x2_t v59;
  uint64_t *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  float v70;
  uint32x2_t *v71;
  uint64_t *v72;
  uint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  unsigned int *v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t *v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v107;
  unint64_t v108;
  size_t v109;
  uint64_t v112;
  float v113;
  void *__p;
  uint64_t v115;
  unint64_t v116;

  v4 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 44));
  v5 = *v4;
  v6 = (std::__shared_weak_count *)v4[1];
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 16))(v5);
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 152);
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 160);
  a2[1] = *a2;
  v109 = v10;
  if (v10)
  {
    v13 = v10;
    v108 = ((unint64_t)(v11 - v12) >> 2);
    sub_23997D0A8((uint64_t)a2, v10);
    v14 = 0;
    v15 = (float)(a3 - 1);
    v16 = vdup_n_s32(0x7F7FFFFFu);
    v107 = v13 - 1;
    while (1)
    {
      v17 = *(_QWORD *)(a1 + 16);
      v18 = v108;
      if (v14 != v107)
        v18 = *(unsigned int *)(v17 + 4 * v14 + 4);
      v112 = v14;
      v19 = *(unsigned int *)(v17 + 4 * v14);
      v20 = (float32x2_t)0x80000000800000;
      v21 = (float32x2_t)v16;
      if (v19 < v18)
      {
        v22 = *(unsigned int *)(v17 + 4 * v14);
        v21 = (float32x2_t)v16;
        do
        {
          v28 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 56) + 16 * *(unsigned int *)(a1 + 56));
          v29 = *v28;
          v30 = (std::__shared_weak_count *)v28[1];
          if (v30)
          {
            v31 = (unint64_t *)&v30->__shared_owners_;
            do
              v32 = __ldxr(v31);
            while (__stxr(v32 + 1, v31));
            do
              v33 = __ldaxr(v31);
            while (__stlxr(v33 - 1, v31));
            if (!v33)
            {
              ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
              std::__shared_weak_count::__release_weak(v30);
            }
          }
          v34 = (unsigned int *)(*(_QWORD *)(v29 + 40) + 12 * v22);
          v36 = *v34;
          v35 = v34[1];
          v37 = v34[2];
          v38 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
          v40 = *v38;
          v39 = (std::__shared_weak_count *)v38[1];
          if (v39)
          {
            v41 = (unint64_t *)&v39->__shared_owners_;
            do
              v42 = __ldxr(v41);
            while (__stxr(v42 + 1, v41));
            do
              v43 = __ldaxr(v41);
            while (__stlxr(v43 - 1, v41));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
          v44 = *(float32x2_t *)(*(_QWORD *)(v40 + 40) + 8 * v36);
          v45 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
          v47 = *v45;
          v46 = (std::__shared_weak_count *)v45[1];
          if (v46)
          {
            v48 = (unint64_t *)&v46->__shared_owners_;
            do
              v49 = __ldxr(v48);
            while (__stxr(v49 + 1, v48));
            do
              v50 = __ldaxr(v48);
            while (__stlxr(v50 - 1, v48));
            if (!v50)
            {
              ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
              std::__shared_weak_count::__release_weak(v46);
            }
          }
          v51 = *(float32x2_t *)(*(_QWORD *)(v47 + 40) + 8 * v35);
          v52 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
          v53 = *v52;
          v54 = (std::__shared_weak_count *)v52[1];
          if (v54)
          {
            v55 = (unint64_t *)&v54->__shared_owners_;
            do
              v56 = __ldxr(v55);
            while (__stxr(v56 + 1, v55));
            do
              v57 = __ldaxr(v55);
            while (__stlxr(v57 - 1, v55));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
              std::__shared_weak_count::__release_weak(v54);
            }
          }
          v23 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v21, v44), (int8x8_t)v44, (int8x8_t)v21);
          v24 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v44, v20), (int8x8_t)v44, (int8x8_t)v20);
          v25 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v23, v51), (int8x8_t)v51, (int8x8_t)v23);
          v26 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v51, v24), (int8x8_t)v51, (int8x8_t)v24);
          v27 = *(float32x2_t *)(*(_QWORD *)(v53 + 40) + 8 * v37);
          v21 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v25, v27), (int8x8_t)v27, (int8x8_t)v25);
          v20 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v27, v26), (int8x8_t)v27, (int8x8_t)v26);
          ++v22;
        }
        while (v22 != v18);
      }
      v58 = 1.0;
      if (a3 && *(_BYTE *)a1)
      {
        v59 = vsub_f32(v20, v21);
        if (v59.f32[0] > v15 || v59.f32[1] > v15)
        {
          if (v59.f32[0] < v59.f32[1])
            v59.f32[0] = v59.f32[1];
          v58 = (double)(a3 - 1) / v59.f32[0];
          if (v58 < 0.00001)
            v58 = 0.0;
        }
      }
      v113 = v58;
      v61 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
      v62 = *v61;
      v63 = (std::__shared_weak_count *)v61[1];
      if (v63)
      {
        v64 = (unint64_t *)&v63->__shared_owners_;
        do
          v65 = __ldxr(v64);
        while (__stxr(v65 + 1, v64));
        do
          v66 = __ldaxr(v64);
        while (__stlxr(v66 - 1, v64));
        if (!v66)
        {
          ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
          std::__shared_weak_count::__release_weak(v63);
        }
      }
      v67 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v62 + 16))(v62);
      v115 = 0;
      v116 = 0;
      __p = 0;
      if (v67)
      {
        v68 = v67;
        if (v67 < 0)
          sub_2394189F8();
        v69 = ((unint64_t)(v67 - 1) >> 6) + 1;
        __p = operator new(8 * v69);
        v115 = 0;
        v116 = v69;
        sub_23942D8C8(&__p, v68, 0);
      }
      v70 = v113;
      if (v113 >= 1.0)
        goto LABEL_61;
      if (v19 < v18)
        break;
LABEL_60:
      v20 = vmul_n_f32(v20, v70);
LABEL_61:
      v71 = (uint32x2_t *)(*a2 + 16 * v112);
      *v71 = vcvt_u32_f32(vrndp_f32(vsub_f32(v20, v21)));
      v71[1].i32[0] = v112;
      if (__p)
        operator delete(__p);
      v14 = v112 + 1;
      if (v112 + 1 == v109)
        return 1;
    }
    while (1)
    {
      v72 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 56) + 16 * *(unsigned int *)(a1 + 56));
      v73 = *v72;
      v74 = (std::__shared_weak_count *)v72[1];
      if (v74)
      {
        v75 = (unint64_t *)&v74->__shared_owners_;
        do
          v76 = __ldxr(v75);
        while (__stxr(v76 + 1, v75));
        do
          v77 = __ldaxr(v75);
        while (__stlxr(v77 - 1, v75));
        if (!v77)
        {
          ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
          std::__shared_weak_count::__release_weak(v74);
          v70 = v113;
        }
      }
      v78 = (unsigned int *)(*(_QWORD *)(v73 + 40) + 12 * v19);
      v80 = *v78;
      v79 = v78[1];
      v81 = v78[2];
      v82 = __p;
      if (((1 << v80) & *((_QWORD *)__p + (v80 >> 6))) != 0)
      {
        v83 = v79 >> 6;
        v84 = 1 << v79;
        if (((1 << v79) & *((_QWORD *)__p + (v79 >> 6))) == 0)
          goto LABEL_82;
      }
      else
      {
        v87 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
        v88 = *v87;
        v89 = (std::__shared_weak_count *)v87[1];
        if (v89)
        {
          v90 = (unint64_t *)&v89->__shared_owners_;
          do
            v91 = __ldxr(v90);
          while (__stxr(v91 + 1, v90));
          do
            v92 = __ldaxr(v90);
          while (__stlxr(v92 - 1, v90));
          if (!v92)
          {
            ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
            std::__shared_weak_count::__release_weak(v89);
            v70 = v113;
          }
        }
        *(float32x2_t *)(*(_QWORD *)(v88 + 40) + 8 * v80) = vmul_n_f32(*(float32x2_t *)(*(_QWORD *)(v88 + 40) + 8 * v80), v70);
        v82 = __p;
        *((_QWORD *)__p + (v80 >> 6)) |= 1 << v80;
        v83 = v79 >> 6;
        v84 = 1 << v79;
        if (((1 << v79) & v82[v79 >> 6]) == 0)
        {
LABEL_82:
          v93 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
          v94 = *v93;
          v95 = (std::__shared_weak_count *)v93[1];
          if (v95)
          {
            v96 = (unint64_t *)&v95->__shared_owners_;
            do
              v97 = __ldxr(v96);
            while (__stxr(v97 + 1, v96));
            do
              v98 = __ldaxr(v96);
            while (__stlxr(v98 - 1, v96));
            if (!v98)
            {
              ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
              std::__shared_weak_count::__release_weak(v95);
              v70 = v113;
            }
          }
          *(float32x2_t *)(*(_QWORD *)(v94 + 40) + 8 * v79) = vmul_n_f32(*(float32x2_t *)(*(_QWORD *)(v94 + 40) + 8 * v79), v70);
          v99 = __p;
          *((_QWORD *)__p + v83) |= v84;
          v85 = v81 >> 6;
          v86 = 1 << v81;
          if (((1 << v81) & v99[v81 >> 6]) != 0)
            goto LABEL_64;
LABEL_89:
          v100 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
          v101 = *v100;
          v102 = (std::__shared_weak_count *)v100[1];
          if (v102)
          {
            v103 = (unint64_t *)&v102->__shared_owners_;
            do
              v104 = __ldxr(v103);
            while (__stxr(v104 + 1, v103));
            do
              v105 = __ldaxr(v103);
            while (__stlxr(v105 - 1, v103));
            if (!v105)
            {
              ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
              std::__shared_weak_count::__release_weak(v102);
              v70 = v113;
            }
          }
          *(float32x2_t *)(*(_QWORD *)(v101 + 40) + 8 * v81) = vmul_n_f32(*(float32x2_t *)(*(_QWORD *)(v101 + 40) + 8 * v81), v70);
          *((_QWORD *)__p + v85) |= v86;
          goto LABEL_64;
        }
      }
      v85 = v81 >> 6;
      v86 = 1 << v81;
      if (((1 << v81) & v82[v81 >> 6]) == 0)
        goto LABEL_89;
LABEL_64:
      if (++v19 == v18)
        goto LABEL_60;
    }
  }
  return 1;
}

uint64_t sub_23997C484(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  uint64_t *v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unsigned int *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  float v60;
  float v61;
  float v62;
  float v63;
  float v64;
  uint64_t *v65;
  std::__shared_weak_count *v66;
  uint64_t v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  float v73;
  float v74;
  float v75;
  float v76;
  float v77;
  uint64_t *v78;
  std::__shared_weak_count *v79;
  uint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t i;
  uint64_t *v85;
  uint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  __int16 v91;
  uint64_t *v92;
  std::__shared_weak_count *v93;
  uint64_t v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  std::__shared_weak_count *v100;
  unint64_t *v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  _QWORD *__p;

  v3 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 44));
  v4 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  v10 = *(_QWORD **)(a1 + 8);
  v12 = v10[19];
  v11 = v10[20];
  v13 = (uint64_t *)(v10[10] + 16 * *(unsigned int *)(a1 + 40));
  v14 = *v13;
  v15 = (std::__shared_weak_count *)v13[1];
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
  __p = 0;
  if (v19)
  {
    v20 = v19;
    if (v19 < 0)
      sub_2394189F8();
    v21 = operator new(8 * (((unint64_t)(v19 - 1) >> 6) + 1));
    v22 = v21;
    __p = v21;
    if (v20 >= 0x41)
      v23 = (v20 - 1) >> 6;
    else
      v23 = 0;
    v21[v23] = 0;
    if (v20 >= 0x40)
      bzero(v21, 8 * (v20 >> 6));
    if ((v20 & 0x3F) != 0)
      v22[v20 >> 6] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v20 & 0x3F));
  }
  v24 = ((unint64_t)(v11 - v12) >> 2);
  v112 = v9;
  v25 = a2;
  if (v9)
  {
    v26 = 0;
    v110 = v9 - 1;
    v111 = v24;
    while (1)
    {
      v27 = *(_QWORD *)(a1 + 16);
      v28 = v24;
      if (v26 != v110)
        v28 = *(unsigned int *)(v27 + 4 * v26 + 4);
      v29 = *(unsigned int *)(v27 + 4 * v26);
      if (v29 < v28)
        break;
LABEL_24:
      ++v26;
      v24 = v111;
      if (v26 == v112)
        goto LABEL_70;
    }
    v113 = v28;
    while (1)
    {
      v37 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 56) + 16 * *(unsigned int *)(a1 + 56));
      v38 = *v37;
      v39 = (std::__shared_weak_count *)v37[1];
      if (v39)
      {
        v40 = (unint64_t *)&v39->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
          v28 = v113;
          v25 = a2;
        }
      }
      v43 = (unsigned int *)(*(_QWORD *)(v38 + 40) + 12 * v29);
      v45 = *v43;
      v44 = v43[1];
      v46 = v43[2];
      v47 = __p;
      if (((1 << v45) & __p[v45 >> 6]) != 0)
      {
        v48 = v44 >> 6;
        v49 = 1 << v44;
        if (((1 << v44) & __p[v44 >> 6]) == 0)
          goto LABEL_54;
      }
      else
      {
        v52 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
        v54 = *v52;
        v53 = (std::__shared_weak_count *)v52[1];
        if (v53)
        {
          v55 = (unint64_t *)&v53->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
            std::__shared_weak_count::__release_weak(v53);
            v28 = v113;
            v25 = a2;
          }
        }
        v58 = *(_QWORD *)(v54 + 40) + 8 * v45;
        v59 = *v25 + 16 * v26;
        v61 = *(float *)v58;
        v60 = *(float *)(v58 + 4);
        if (*(_BYTE *)(v59 + 14))
        {
          *(float *)v58 = v60;
          *(float *)(v58 + 4) = v61;
          v62 = v61;
        }
        else
        {
          v62 = *(float *)(v58 + 4);
          v60 = *(float *)v58;
        }
        v63 = (float)*(unsigned int *)(a1 + 60);
        v64 = (float)(v62 + (float)*(unsigned int *)(v59 + 4)) / v63;
        *(float *)v58 = (float)(v60 + (float)*(unsigned int *)v59) / v63;
        *(float *)(v58 + 4) = v64;
        v47 = __p;
        __p[v45 >> 6] |= 1 << v45;
        v48 = v44 >> 6;
        v49 = 1 << v44;
        if (((1 << v44) & __p[v44 >> 6]) == 0)
        {
LABEL_54:
          v65 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
          v67 = *v65;
          v66 = (std::__shared_weak_count *)v65[1];
          if (v66)
          {
            v68 = (unint64_t *)&v66->__shared_owners_;
            do
              v69 = __ldxr(v68);
            while (__stxr(v69 + 1, v68));
            do
              v70 = __ldaxr(v68);
            while (__stlxr(v70 - 1, v68));
            if (!v70)
            {
              ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
              std::__shared_weak_count::__release_weak(v66);
              v28 = v113;
              v25 = a2;
            }
          }
          v71 = *(_QWORD *)(v67 + 40) + 8 * v44;
          v72 = *v25 + 16 * v26;
          v74 = *(float *)v71;
          v73 = *(float *)(v71 + 4);
          if (*(_BYTE *)(v72 + 14))
          {
            *(float *)v71 = v73;
            *(float *)(v71 + 4) = v74;
            v75 = v74;
          }
          else
          {
            v75 = *(float *)(v71 + 4);
            v73 = *(float *)v71;
          }
          v76 = (float)*(unsigned int *)(a1 + 60);
          v77 = (float)(v75 + (float)*(unsigned int *)(v72 + 4)) / v76;
          *(float *)v71 = (float)(v73 + (float)*(unsigned int *)v72) / v76;
          *(float *)(v71 + 4) = v77;
          __p[v48] |= v49;
          v50 = v46 >> 6;
          v51 = 1 << v46;
          if (((1 << v46) & __p[v46 >> 6]) != 0)
            goto LABEL_32;
LABEL_64:
          v78 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 40));
          v80 = *v78;
          v79 = (std::__shared_weak_count *)v78[1];
          if (v79)
          {
            v81 = (unint64_t *)&v79->__shared_owners_;
            do
              v82 = __ldxr(v81);
            while (__stxr(v82 + 1, v81));
            do
              v83 = __ldaxr(v81);
            while (__stlxr(v83 - 1, v81));
            if (!v83)
            {
              ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
              std::__shared_weak_count::__release_weak(v79);
              v28 = v113;
              v25 = a2;
            }
          }
          v30 = *(_QWORD *)(v80 + 40) + 8 * v46;
          v31 = *v25 + 16 * v26;
          v33 = *(float *)v30;
          v32 = *(float *)(v30 + 4);
          if (*(_BYTE *)(v31 + 14))
          {
            *(float *)v30 = v32;
            *(float *)(v30 + 4) = v33;
            v34 = v33;
          }
          else
          {
            v34 = *(float *)(v30 + 4);
            v32 = *(float *)v30;
          }
          v35 = (float)*(unsigned int *)(a1 + 60);
          v36 = (float)(v34 + (float)*(unsigned int *)(v31 + 4)) / v35;
          *(float *)v30 = (float)(v32 + (float)*(unsigned int *)v31) / v35;
          *(float *)(v30 + 4) = v36;
          __p[v50] |= v51;
          goto LABEL_32;
        }
      }
      v50 = v46 >> 6;
      v51 = 1 << v46;
      if (((1 << v46) & v47[v46 >> 6]) == 0)
        goto LABEL_64;
LABEL_32:
      if (++v29 == v28)
        goto LABEL_24;
    }
  }
LABEL_70:
  if (v24)
  {
    for (i = 0; i != v24; ++i)
    {
      v85 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 56) + 16 * *(unsigned int *)(a1 + 48));
      v86 = *v85;
      v87 = (std::__shared_weak_count *)v85[1];
      if (v87)
      {
        v88 = (unint64_t *)&v87->__shared_owners_;
        do
          v89 = __ldxr(v88);
        while (__stxr(v89 + 1, v88));
        do
          v90 = __ldaxr(v88);
        while (__stlxr(v90 - 1, v88));
        if (!v90)
        {
          ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
          std::__shared_weak_count::__release_weak(v87);
          v25 = a2;
        }
      }
      v91 = *(_WORD *)(*v25 + 16 * *(unsigned int *)(*(_QWORD *)(v86 + 40) + 4 * i) + 12);
      v92 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 56) + 16 * *(unsigned int *)(a1 + 52));
      v94 = *v92;
      v93 = (std::__shared_weak_count *)v92[1];
      if (v93)
      {
        v95 = (unint64_t *)&v93->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
          std::__shared_weak_count::__release_weak(v93);
          v25 = a2;
        }
      }
      *(_WORD *)(*(_QWORD *)(v94 + 40) + 2 * i) = v91;
    }
  }
  v98 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 80) + 16 * *(unsigned int *)(a1 + 44));
  v99 = *v98;
  v100 = (std::__shared_weak_count *)v98[1];
  if (v100)
  {
    v101 = (unint64_t *)&v100->__shared_owners_;
    do
      v102 = __ldxr(v101);
    while (__stxr(v102 + 1, v101));
    do
      v103 = __ldaxr(v101);
    while (__stlxr(v103 - 1, v101));
    if (!v103)
    {
      ((void (*)(std::__shared_weak_count *))v100->__on_zero_shared)(v100);
      std::__shared_weak_count::__release_weak(v100);
    }
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v99 + 32))(v99, *(unsigned __int8 *)(a1 + 64));
  v104 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v104 == -1)
    goto LABEL_96;
  v105 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 56) + 16 * v104);
  v106 = (std::__shared_weak_count *)v105[1];
  *v105 = 0;
  v105[1] = 0;
  if (!v106)
    goto LABEL_96;
  v107 = (unint64_t *)&v106->__shared_owners_;
  do
    v108 = __ldaxr(v107);
  while (__stlxr(v108 - 1, v107));
  if (v108)
  {
LABEL_96:
    *(_DWORD *)(a1 + 48) = -1;
    if (*(unsigned __int8 *)(a1 + 64) < 2u)
      goto LABEL_98;
    goto LABEL_97;
  }
  ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
  std::__shared_weak_count::__release_weak(v106);
  *(_DWORD *)(a1 + 48) = -1;
  if (*(unsigned __int8 *)(a1 + 64) >= 2u)
LABEL_97:
    sub_239933E34(*(_QWORD *)(a1 + 8));
LABEL_98:
  if (__p)
    operator delete(__p);
  return 1;
}

void sub_23997CBEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_23997CC04(char **a1, unint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;

  v5 = a1[1];
  v4 = a1[2];
  if (0xCCCCCCCCCCCCCCCDLL * ((v4 - v5) >> 2) >= a2)
  {
    if (a2)
    {
      v12 = &v5[20 * a2];
      v13 = 20 * a2 - 20;
      if (v13 < 0x14)
        goto LABEL_36;
      v14 = v13 / 0x14 + 1;
      v15 = v5 + 20;
      v16 = v14 & 0x1FFFFFFFFFFFFFFELL;
      do
      {
        *(_OWORD *)(v15 - 20) = xmmword_239F03380;
        *(_OWORD *)v15 = xmmword_239F03380;
        *(v15 - 4) = 0;
        v15[16] = 0;
        v15 += 40;
        v16 -= 2;
      }
      while (v16);
      v5 += 20 * (v14 & 0x1FFFFFFFFFFFFFFELL);
      if (v14 != (v14 & 0x1FFFFFFFFFFFFFFELL))
      {
LABEL_36:
        do
        {
          *(_OWORD *)v5 = xmmword_239F03380;
          v5[16] = 0;
          v5 += 20;
        }
        while (v5 != v12);
      }
      v5 = v12;
    }
    a1[1] = v5;
  }
  else
  {
    v6 = *a1;
    v7 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - *a1) >> 2);
    v8 = v7 + a2;
    if (v7 + a2 > 0xCCCCCCCCCCCCCCCLL)
      sub_2394189F8();
    v9 = 0xCCCCCCCCCCCCCCCDLL * ((v4 - v6) >> 2);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x666666666666666)
      v10 = 0xCCCCCCCCCCCCCCCLL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0xCCCCCCCCCCCCCCCLL)
        sub_239418A80();
      v11 = (char *)operator new(20 * v10);
    }
    else
    {
      v11 = 0;
    }
    v17 = &v11[20 * v7];
    v18 = &v17[20 * a2];
    v19 = 20 * a2 - 20;
    v20 = v17;
    if (v19 < 0x14)
      goto LABEL_37;
    v21 = v19 / 0x14 + 1;
    v20 = &v17[20 * (v21 & 0x1FFFFFFFFFFFFFFELL)];
    v22 = (uint64_t)&v11[20 * v7 + 20];
    v23 = v21 & 0x1FFFFFFFFFFFFFFELL;
    do
    {
      *(_OWORD *)(v22 - 20) = xmmword_239F03380;
      *(_OWORD *)v22 = xmmword_239F03380;
      *(_BYTE *)(v22 - 4) = 0;
      *(_BYTE *)(v22 + 16) = 0;
      v22 += 40;
      v23 -= 2;
    }
    while (v23);
    if (v21 != (v21 & 0x1FFFFFFFFFFFFFFELL))
    {
LABEL_37:
      do
      {
        *(_OWORD *)v20 = xmmword_239F03380;
        v20[16] = 0;
        v20 += 20;
      }
      while (v20 != v18);
    }
    if (v5 != v6)
    {
      v24 = 0;
      do
      {
        v25 = &v17[v24];
        *((_DWORD *)v25 - 5) = *(_DWORD *)&v5[v24 - 20];
        *((_DWORD *)v25 - 4) = *(_DWORD *)&v5[v24 - 16];
        *((_DWORD *)v25 - 3) = *(_DWORD *)&v5[v24 - 12];
        *((_DWORD *)v25 - 2) = *(_DWORD *)&v5[v24 - 8];
        *(v25 - 4) = v5[v24 - 4];
        v24 -= 20;
      }
      while (&v5[v24] != v6);
      v17 += v24;
    }
    *a1 = v17;
    a1[1] = v18;
    a1[2] = &v11[20 * v10];
    if (v6)
      operator delete(v6);
  }
}

uint64_t *sub_23997CE8C(uint64_t *result, uint64_t *a2, unint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;

  if (a3 < 2)
    return result;
  if (a3 == 2)
  {
    v4 = (uint64_t *)*a2;
    if (*(_DWORD *)(*(_QWORD *)(*a2 + 16) + 4) * **(_DWORD **)(*a2 + 16) > (*(_DWORD *)(result[2] + 4)
                                                                                           * *(_DWORD *)result[2]))
    {
      v5 = *v4;
      *(_QWORD *)(v5 + 8) = v4[1];
      *(_QWORD *)v4[1] = v5;
      v6 = *result;
      *(_QWORD *)(v6 + 8) = v4;
      *v4 = v6;
      *result = (uint64_t)v4;
      v4[1] = (uint64_t)result;
      return v4;
    }
    return result;
  }
  v8 = a3 >> 1;
  v9 = (a3 >> 1) + 1;
  v10 = result;
  do
  {
    v10 = (uint64_t *)v10[1];
    --v9;
  }
  while (v9 > 1);
  v11 = (uint64_t *)sub_23997CE8C(result, v10, a3 >> 1);
  result = (uint64_t *)sub_23997CE8C(v10, a2, a3 - v8);
  v12 = *(_DWORD *)(v11[2] + 4) * *(_DWORD *)v11[2];
  if (*(_DWORD *)(result[2] + 4) * *(_DWORD *)result[2] <= v12)
  {
    v16 = (uint64_t *)v11[1];
    v13 = result;
    result = v11;
    if (v16 == v13)
      return result;
    goto LABEL_15;
  }
  v13 = (uint64_t *)result[1];
  if (v13 == a2)
  {
LABEL_11:
    v13 = a2;
  }
  else
  {
    while (*(_DWORD *)(v13[2] + 4) * *(_DWORD *)v13[2] > v12)
    {
      v13 = (uint64_t *)v13[1];
      if (v13 == a2)
        goto LABEL_11;
    }
  }
  v14 = *v13;
  v15 = *result;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(*v13 + 8);
  **(_QWORD **)(v14 + 8) = v15;
  v17 = *v11;
  v16 = (uint64_t *)v11[1];
  *(_QWORD *)(v17 + 8) = result;
  *result = v17;
  *v11 = v14;
  *(_QWORD *)(v14 + 8) = v11;
  if (v16 != v13)
  {
LABEL_15:
    if (v13 != a2)
    {
      v18 = v13;
      do
      {
        v19 = *(_DWORD *)(v16[2] + 4) * *(_DWORD *)v16[2];
        if (*(_DWORD *)(v13[2] + 4) * *(_DWORD *)v13[2] <= v19)
        {
          v16 = (uint64_t *)v16[1];
          if (v16 == v18)
            return result;
        }
        else
        {
          v20 = (uint64_t *)v13[1];
          if (v20 == a2)
          {
LABEL_21:
            v20 = a2;
          }
          else
          {
            while (*(_DWORD *)(v20[2] + 4) * *(_DWORD *)v20[2] > v19)
            {
              v20 = (uint64_t *)v20[1];
              if (v20 == a2)
                goto LABEL_21;
            }
          }
          v21 = *v20;
          v22 = *v13;
          *(_QWORD *)(v22 + 8) = *(_QWORD *)(*v20 + 8);
          **(_QWORD **)(v21 + 8) = v22;
          if (v18 == v13)
            v18 = v20;
          v24 = *v16;
          v23 = (uint64_t *)v16[1];
          *(_QWORD *)(v24 + 8) = v13;
          *v13 = v24;
          *v16 = v21;
          *(_QWORD *)(v21 + 8) = v16;
          v16 = v23;
          v13 = v20;
          if (v23 == v18)
            return result;
        }
      }
      while (v13 != a2);
    }
  }
  return result;
}

void sub_23997D0A8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  size_t v14;
  char *v15;
  char *v16;
  int v17;
  int v18;

  v5 = *(_DWORD **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  if (a2 <= (v4 - (uint64_t)v5) >> 4)
  {
    if (a2)
    {
      v12 = 16 * a2;
      bzero(*(void **)(a1 + 8), 16 * a2);
      v5 = (_DWORD *)((char *)v5 + v12);
    }
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    v6 = *(_DWORD **)a1;
    v7 = ((uint64_t)v5 - *(_QWORD *)a1) >> 4;
    v8 = v7 + a2;
    if ((v7 + a2) >> 60)
      sub_2394189F8();
    v9 = v4 - (_QWORD)v6;
    if (v9 >> 3 > v8)
      v8 = v9 >> 3;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0)
      v10 = 0xFFFFFFFFFFFFFFFLL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 >> 60)
        sub_239418A80();
      v11 = (char *)operator new(16 * v10);
    }
    else
    {
      v11 = 0;
    }
    v13 = &v11[16 * v7];
    v14 = 16 * a2;
    v15 = &v11[16 * v10];
    bzero(v13, v14);
    v16 = &v13[v14];
    if (v5 != v6)
    {
      do
      {
        v17 = *(v5 - 4);
        v5 -= 4;
        *((_DWORD *)v13 - 4) = v17;
        v13 -= 16;
        *((_DWORD *)v13 + 1) = v5[1];
        v18 = v5[2];
        *(_DWORD *)(v13 + 11) = *(_DWORD *)((char *)v5 + 11);
        *((_DWORD *)v13 + 2) = v18;
      }
      while (v5 != v6);
      v5 = *(_DWORD **)a1;
    }
    *(_QWORD *)a1 = v13;
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v15;
    if (v5)
      operator delete(v5);
  }
}

BOOL sub_23997D1DC(uint64_t a1, unsigned int *a2, unsigned int *a3, unsigned int *a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  std::__shared_weak_count *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unsigned int *v29;
  uint64_t *v30;
  std::__shared_weak_count *v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  uint64_t *v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int32x2_t *v44;
  unsigned int v45;
  int32x4_t v46;
  int32x4_t v47;
  int32x4_t v48;
  int32x4_t v49;
  int32x4_t v50;
  int16x8_t v51;
  uint8x8_t v52;
  unsigned int v53;

  v8 = a1 + 104;
  v9 = *(unsigned int *)sub_239962518(a1 + 104, a2);
  v10 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
  v12 = *v10;
  v11 = (std::__shared_weak_count *)v10[1];
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      if (((*(_QWORD *)(*(_QWORD *)(v12 + 40) + ((v9 >> 3) & 0x1FFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
      return 1;
    }
  }
  if (((*(_QWORD *)(*(_QWORD *)(v12 + 40) + ((v9 >> 3) & 0x1FFFFFF8)) >> v9) & 1) != 0)
    return 1;
LABEL_7:
  v16 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * *a3);
  v18 = *v16;
  v17 = (std::__shared_weak_count *)v16[1];
  if (v17)
  {
    v19 = (unint64_t *)&v17->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v22 = *(_DWORD *)(*(_QWORD *)(v18 + 40) + 4 * *(unsigned int *)(sub_239962518(v8, a2) + 16));
  v23 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * *a3);
  v25 = *v23;
  v24 = (std::__shared_weak_count *)v23[1];
  if (v24)
  {
    v26 = (unint64_t *)&v24->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
    do
      v28 = __ldaxr(v26);
    while (__stlxr(v28 - 1, v26));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v29 = (unsigned int *)sub_239962518(v8, a2);
  if (v22 != *(_DWORD *)(*(_QWORD *)(v25 + 40) + 4 * *(unsigned int *)(sub_239962518(v8, v29) + 16)))
    return 1;
  v30 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * *a4);
  v32 = *v30;
  v31 = (std::__shared_weak_count *)v30[1];
  if (v31)
  {
    v33 = (unint64_t *)&v31->__shared_owners_;
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 1, v33));
    do
      v35 = __ldaxr(v33);
    while (__stlxr(v35 - 1, v33));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v36 = (unsigned int *)sub_239962518(v8, a2);
  v37 = *(_QWORD *)(v32 + 40) + 12 * *(unsigned int *)(sub_239962518(v8, v36) + 16);
  v38 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * *a4);
  v40 = *v38;
  v39 = (std::__shared_weak_count *)v38[1];
  if (v39)
  {
    v41 = (unint64_t *)&v39->__shared_owners_;
    do
      v42 = __ldxr(v41);
    while (__stxr(v42 + 1, v41));
    do
      v43 = __ldaxr(v41);
    while (__stlxr(v43 - 1, v41));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  v44 = (int32x2_t *)(*(_QWORD *)(v40 + 40) + 12 * *(unsigned int *)(sub_239962518(v8, a2) + 16));
  v45 = *(_DWORD *)(v37 + 8);
  v46.i32[0] = *(_QWORD *)v37;
  v47 = vdupq_n_s32(v45);
  v46.i32[1] = v46.i32[0];
  v46.i64[1] = *(_QWORD *)v37;
  v47.i32[0] = HIDWORD(*(_QWORD *)v37);
  *(int32x2_t *)v48.i8 = vrev64_s32(*v44);
  v49 = v48;
  v49.i32[2] = v44[1].i32[0];
  v50 = vuzp1q_s32(v49, vuzp2q_s32(v49, vdupq_lane_s32(*(int32x2_t *)v48.i8, 0)));
  v49.i32[3] = v48.i32[1];
  v51 = (int16x8_t)vandq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqq_s32(v46, v49), (int16x8_t)vceqq_s32(vtrn1q_s32(v47, v47), v50)), (int8x16_t)xmmword_239F03390);
  v51.i32[0] = vaddvq_s16(v51);
  v52 = (uint8x8_t)vcnt_s8(*(int8x8_t *)v51.i8);
  v52.i16[0] = vaddlv_u8(v52);
  if (v45 == v49.i32[2])
    v53 = v52.i32[0] + 1;
  else
    v53 = v52.i32[0];
  return v53 < 2;
}

uint64_t sub_23997D524(uint64_t a1, float *a2, uint64_t *a3, char **a4, _DWORD *a5)
{
  float v10;
  char *v11;
  size_t v12;
  size_t v13;
  __int128 *p_dst;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  float v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  unint64_t v25;
  int *v26;
  unint64_t v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  float *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t v50;
  unint64_t *p_shared_owners;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int *v55;
  unint64_t v56;
  float v57;
  float32x4_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _BYTE *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _OWORD *v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  int v76;
  float32x4_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  float32x4_t v86;
  float32x4_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  _BYTE *v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  _OWORD *v101;
  char *v102;
  uint64_t v103;
  __int128 v104;
  int v105;
  float32x4_t v106;
  float32x4_t v107;
  unint64_t v108;
  float32x4_t *v109;
  char *v110;
  char *v111;
  float32x4_t *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  float32x4_t *v120;
  float32x4_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  unint64_t v128;
  float32x4_t v129;
  unint64_t v130;
  char **v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  float v137;
  float32x4_t v138;
  float v139;
  uint64_t *v140;
  uint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  float v146;
  float32x4_t v147;
  float v148;
  char v149;
  char *v150;
  uint64_t v151;
  unint64_t i;
  unint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  _DWORD *v157;
  char *v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  _BYTE *v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  _OWORD *v169;
  __int128 *v170;
  uint64_t v171;
  __int128 v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  int v176;
  unsigned int v177;
  unint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  std::__shared_weak_count *v181;
  unint64_t *v182;
  unint64_t v183;
  unint64_t v184;
  unsigned int *v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  void **v190;
  void **v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  void *v195;
  uint64_t j;
  uint64_t *v197;
  uint64_t v198;
  std::__shared_weak_count *v199;
  unint64_t *v200;
  unint64_t v201;
  unint64_t v202;
  uint64_t v203;
  int v204;
  int v205;
  float v206;
  unint64_t v207;
  uint64_t *v208;
  uint64_t v209;
  std::__shared_weak_count *v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t v213;
  unsigned int *v214;
  uint64_t v215;
  uint64_t v216;
  float32x4_t v217;
  float v218;
  float v219;
  uint64_t v220;
  _DWORD *v221;
  uint64_t v222;
  uint64_t k;
  int v224;
  unint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  std::__shared_weak_count *v228;
  unint64_t *v229;
  unint64_t v230;
  unint64_t v231;
  unsigned int *v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  std::__shared_weak_count *v236;
  unint64_t *v237;
  unint64_t v238;
  unint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  std::__shared_weak_count *v242;
  unint64_t *v243;
  unint64_t v244;
  unint64_t v245;
  int v246;
  int v247;
  float v248;
  unint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  std::__shared_weak_count *v252;
  unint64_t *v253;
  unint64_t v254;
  unint64_t v255;
  unsigned int *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  float32x4_t v260;
  float32x4_t v261;
  float v262;
  float32x4_t v263;
  float v264;
  float v266;
  int v267;
  unint64_t v268;
  uint64_t *v269;
  uint64_t v270;
  std::__shared_weak_count *v271;
  unint64_t *v272;
  unint64_t v273;
  unint64_t v274;
  unsigned int *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  float32x4_t v279;
  float32x4_t v280;
  float v281;
  float32x4_t v282;
  float v283;
  float v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  _DWORD *v289;
  uint64_t v290;
  _QWORD *v291;
  std::__shared_weak_count *v292;
  unint64_t *v293;
  unint64_t v294;
  unsigned int v296;
  _DWORD *v297;
  unint64_t v298;
  unint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  __int128 v303;
  uint64_t v304;
  uint64_t v305;
  float32x4_t v306;
  float32x4_t v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  unint64_t v312;
  int *v313;
  float __p;
  void *__pd[2];
  void *__pa[2];
  void *__pb[2];
  unsigned int *__pc;
  char **v319;
  _QWORD *v320;
  unsigned int v321;
  unsigned int v322;
  __int128 __dst;
  __int128 v324;
  __int128 v325;
  _DWORD *v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  char *v332;
  unint64_t v333;
  unint64_t v334;

  sub_2399FCB60();
  v10 = cosf(*a2);
  sub_2399602F4(a1);
  v11 = off_256934430[0];
  v12 = strlen(off_256934430[0]);
  if (v12 >= 0x7FFFFFFFFFFFFFF8)
    sub_23941A5AC();
  v13 = v12;
  v319 = a4;
  if (v12 >= 0x17)
  {
    v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v15 = v12 | 7;
    v16 = v15 + 1;
    p_dst = (__int128 *)operator new(v15 + 1);
    v17 = v16 | 0x8000000000000000;
    a4 = v319;
    *((_QWORD *)&__dst + 1) = v13;
    *(_QWORD *)&v324 = v17;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_8;
  }
  BYTE7(v324) = v12;
  p_dst = &__dst;
  if (v12)
LABEL_8:
    memmove(p_dst, v11, v13);
  *((_BYTE *)p_dst + v13) = 0;
  v332 = 0;
  v333 = 0;
  v320 = (_QWORD *)(a1 + 56);
  v296 = sub_2394E5F40((uint64_t **)(a1 + 56), (uint64_t)&v332, (unsigned __int8 *)&__dst);
  if ((SBYTE7(v324) & 0x80000000) == 0)
  {
    v19 = (uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
    v20 = v19;
    v312 = v19;
    if ((_DWORD)v19)
      goto LABEL_11;
LABEL_18:
    v24 = 0;
    v313 = 0;
    goto LABEL_20;
  }
  operator delete((void *)__dst);
  v19 = (uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
  v20 = v19;
  v312 = v19;
  if (!(_DWORD)v19)
    goto LABEL_18;
LABEL_11:
  v21 = v20;
  v22 = 8 * v20;
  v23 = (char *)operator new(8 * v20);
  v24 = (int *)&v23[v22];
  v25 = (v21 - 1) & 0x1FFFFFFFFFFFFFFFLL;
  v313 = (int *)v23;
  v26 = (int *)v23;
  if (v25 < 7)
    goto LABEL_340;
  v27 = v25 + 1;
  v26 = (int *)&v23[8 * (v27 & 0x3FFFFFFFFFFFFFF8)];
  v28 = v23 + 32;
  *(_QWORD *)&v29 = 0xFFFFFFFFLL;
  *((_QWORD *)&v29 + 1) = 0xFFFFFFFFLL;
  v30 = v27 & 0x3FFFFFFFFFFFFFF8;
  do
  {
    *(v28 - 2) = v29;
    *(v28 - 1) = v29;
    *v28 = v29;
    v28[1] = v29;
    v28 += 4;
    v30 -= 8;
  }
  while (v30);
  if (v27 != (v27 & 0x3FFFFFFFFFFFFFF8))
  {
LABEL_340:
    do
    {
      *(_QWORD *)v26 = 0xFFFFFFFFLL;
      v26 += 2;
    }
    while (v26 != v24);
  }
  v31 = 0;
  v32 = (float *)(v23 + 4);
  do
  {
    LODWORD(__dst) = v31;
    v18 = sub_239932994(a1, (unsigned int *)&__dst);
    *((_DWORD *)v32 - 1) = __dst;
    *v32 = v18;
    v32 += 2;
    ++v31;
  }
  while (v312 != v31);
LABEL_20:
  v33 = ((char *)v24 - (char *)v313) >> 3;
  v34 = 126 - 2 * __clz(v33);
  if (v24 == v313)
    v35 = 0;
  else
    v35 = v34;
  sub_2399856AC((unint64_t)v313, v24, v35, 1, v18);
  v37 = *a4;
  if ((unint64_t)(a4[2] - *a4) <= 0x31F)
  {
    v38 = a4[1];
    v39 = (char *)operator new(0x320uLL);
    v40 = &v39[(v38 - v37) & 0xFFFFFFFFFFFFFFF0];
    v41 = v40;
    if (v38 != v37)
    {
      v41 = &v39[(v38 - v37) & 0xFFFFFFFFFFFFFFF0];
      do
      {
        v42 = *((_OWORD *)v38 - 1);
        v38 -= 16;
        *((_OWORD *)v41 - 1) = v42;
        v41 -= 16;
      }
      while (v38 != v37);
    }
    *a4 = v41;
    a4[1] = v40;
    a4[2] = v39 + 800;
    if (v37)
      operator delete(v37);
  }
  v300 = v33;
  v332 = 0;
  v333 = 0;
  v334 = 0;
  v43 = v312;
  if (v312)
  {
    v332 = (char *)operator new(8 * (((v312 - 1) >> 6) + 1));
    v333 = 0;
    v334 = ((v312 - 1) >> 6) + 1;
    sub_23942D8C8(&v332, v312, 0);
  }
  v329 = 0;
  v330 = 0;
  v331 = 0;
  v44 = (unint64_t)(float)((float)v19 * 0.5);
  if (v44)
  {
    if (v44 >> 62)
      sub_2394189F8();
    v329 = (char *)operator new(4 * v44);
    v330 = v329;
    v331 = &v329[4 * v44];
  }
  if (v312)
  {
    v45 = 0;
    v297 = a5;
    while (1)
    {
      while (((*(_QWORD *)&v332[(v45 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v45) & 1) != 0)
      {
        if (++v45 == v43)
          goto LABEL_131;
      }
      v330 = v329;
      v298 = v45;
      v46 = v313[2 * v45];
      v47 = (uint64_t *)(*v320 + 16 * v296);
      v48 = *v47;
      v49 = (std::__shared_weak_count *)v47[1];
      v50 = v300;
      if (v49)
      {
        p_shared_owners = (unint64_t *)&v49->__shared_owners_;
        do
          v52 = __ldxr(p_shared_owners);
        while (__stxr(v52 + 1, p_shared_owners));
        do
          v53 = __ldaxr(p_shared_owners);
        while (__stlxr(v53 - 1, p_shared_owners));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
          std::__shared_weak_count::__release_weak(v49);
        }
      }
      v54 = *(_QWORD *)(v48 + 40);
      v55 = v313;
      v56 = v298;
      v57 = *(float *)&v313[2 * v298 + 1];
      v58 = *(float32x4_t *)(v54 + 16 * v46);
      v59 = v330;
      v302 = v46;
      v309 = v54;
      if (v330 < v331)
      {
        *(_DWORD *)v330 = v298;
        v60 = (uint64_t)(v59 + 4);
        goto LABEL_66;
      }
      v61 = v329;
      v62 = (v330 - v329) >> 2;
      v63 = v62 + 1;
      if ((unint64_t)(v62 + 1) >> 62)
        sub_2394189F8();
      v64 = v331 - v329;
      if ((v331 - v329) >> 1 > v63)
        v63 = v64 >> 1;
      v65 = (unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v63;
      __p = *(float *)&v313[2 * v298 + 1];
      v306 = v58;
      if (v65)
        break;
      v66 = 0;
      v67 = (char *)(4 * v62);
      *(_DWORD *)(4 * v62) = v298;
      v60 = 4 * v62 + 4;
      if (v59 != v61)
        goto LABEL_57;
LABEL_63:
      v329 = v67;
      v330 = (char *)v60;
      v331 = &v66[4 * v65];
      if (v61)
      {
        operator delete(v61);
        v58 = v306;
        v57 = __p;
      }
      v55 = v313;
      v56 = v298;
      v46 = v302;
      v54 = v309;
LABEL_66:
      v77 = vaddq_f32(vmulq_n_f32(v58, v57), (float32x4_t)0);
      v330 = (char *)v60;
      v78 = v56 + 1;
      v299 = v56 + 1;
      if (v56 + 1 < v300)
      {
        while (1)
        {
          while (1)
          {
            v79 = v55[2 * v78];
            v80 = (uint64_t *)(*v320 + 16 * v296);
            v81 = *v80;
            v82 = (std::__shared_weak_count *)v80[1];
            if (v82)
            {
              v83 = (unint64_t *)&v82->__shared_owners_;
              do
                v84 = __ldxr(v83);
              while (__stxr(v84 + 1, v83));
              do
                v85 = __ldaxr(v83);
              while (__stlxr(v85 - 1, v83));
              if (!v85)
              {
                *(float32x4_t *)__pd = v77;
                ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
                std::__shared_weak_count::__release_weak(v82);
                v77 = *(float32x4_t *)__pd;
                v54 = v309;
              }
            }
            v86 = *(float32x4_t *)(*(_QWORD *)(v81 + 40) + 16 * v79);
            v87 = vmulq_f32(v86, *(float32x4_t *)(v54 + 16 * v46));
            v87.i32[3] = 0;
            if (vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v87, v87)) > v10)
              break;
            v55 = v313;
            if (++v78 == v50)
              goto LABEL_100;
          }
          v55 = v313;
          LODWORD(v36) = v313[2 * v78 + 1];
          v88 = v330;
          if (v330 >= v331)
            break;
          *(_DWORD *)v330 = v78;
          v89 = (uint64_t)(v88 + 4);
LABEL_99:
          v77 = vaddq_f32(v77, vmulq_n_f32(v86, *(float *)&v36));
          v330 = (char *)v89;
          if (++v78 == v50)
            goto LABEL_100;
        }
        v90 = v329;
        v91 = (v330 - v329) >> 2;
        v92 = v91 + 1;
        if ((unint64_t)(v91 + 1) >> 62)
          sub_2394189F8();
        v93 = v331 - v329;
        if ((v331 - v329) >> 1 > v92)
          v92 = v93 >> 1;
        if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFFCLL)
          v94 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v94 = v92;
        *(float32x4_t *)__pa = v77;
        v303 = v36;
        v307 = v86;
        if (v94)
        {
          if (v94 >> 62)
            sub_239418A80();
          v95 = operator new(4 * v94);
          v77 = *(float32x4_t *)__pa;
          v36 = v303;
          v86 = v307;
          v96 = &v95[4 * v91];
          *(_DWORD *)v96 = v78;
          v89 = (uint64_t)(v96 + 4);
          if (v88 != v90)
          {
LABEL_87:
            v97 = v88 - 4 - v90;
            if (v97 < 0x2C)
            {
              v50 = v300;
              goto LABEL_95;
            }
            v50 = v300;
            if ((unint64_t)(v90 - v95) < 0x20)
              goto LABEL_341;
            v98 = (v97 >> 2) + 1;
            v99 = 4 * (v98 & 0x7FFFFFFFFFFFFFF8);
            v100 = &v88[-v99];
            v96 -= v99;
            v101 = &v95[4 * v91 - 16];
            v102 = v88 - 16;
            v103 = v98 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v104 = *(_OWORD *)v102;
              *(v101 - 1) = *((_OWORD *)v102 - 1);
              *v101 = v104;
              v101 -= 2;
              v102 -= 32;
              v103 -= 8;
            }
            while (v103);
            v88 = v100;
            if (v98 != (v98 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_341:
              do
              {
LABEL_95:
                v105 = *((_DWORD *)v88 - 1);
                v88 -= 4;
                *((_DWORD *)v96 - 1) = v105;
                v96 -= 4;
              }
              while (v88 != v90);
            }
LABEL_96:
            v329 = v96;
            v330 = (char *)v89;
            v331 = &v95[4 * v94];
            if (v90)
            {
              operator delete(v90);
              v36 = v303;
              v86 = v307;
              v77 = *(float32x4_t *)__pa;
            }
            v55 = v313;
            v46 = v302;
            v54 = v309;
            goto LABEL_99;
          }
        }
        else
        {
          v95 = 0;
          v96 = (char *)(4 * v91);
          *(_DWORD *)(4 * v91) = v78;
          v89 = 4 * v91 + 4;
          if (v88 != v90)
            goto LABEL_87;
        }
        v50 = v300;
        goto LABEL_96;
      }
LABEL_100:
      v106 = vmulq_f32(v77, v77);
      v106.i32[3] = 0;
      v106.i64[0] = vpaddq_f32(v106, v106).u64[0];
      v106.f32[0] = sqrtf(vaddv_f32(*(float32x2_t *)v106.f32));
      v107 = vdivq_f32(v77, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v106.f32, 0));
      v109 = (float32x4_t *)v319[1];
      v108 = (unint64_t)v319[2];
      *(float32x4_t *)__pb = v107;
      if ((unint64_t)v109 < v108)
      {
        *v109 = v107;
        a5 = v297;
        v319[1] = (char *)&v109[1];
        v110 = v329;
        v111 = v330;
        if (v329 == v330)
          goto LABEL_118;
        do
        {
LABEL_121:
          v122 = v55[2 * *(unsigned int *)v110];
          v123 = (uint64_t *)(*v320 + 16 * v296);
          v124 = *v123;
          v125 = (std::__shared_weak_count *)v123[1];
          if (v125)
          {
            v126 = (unint64_t *)&v125->__shared_owners_;
            do
              v127 = __ldxr(v126);
            while (__stxr(v127 + 1, v126));
            do
              v128 = __ldaxr(v126);
            while (__stlxr(v128 - 1, v126));
            if (!v128)
            {
              ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
              std::__shared_weak_count::__release_weak(v125);
              v107 = *(float32x4_t *)__pb;
            }
          }
          v129 = vmulq_f32(v107, *(float32x4_t *)(*(_QWORD *)(v124 + 40) + 16 * v122));
          v129.i32[3] = 0;
          if (vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v129, v129)) > v10)
            *(_QWORD *)&v332[((unint64_t)*(unsigned int *)v110 >> 3) & 0x1FFFFFF8] |= 1 << *(_DWORD *)v110;
          v110 += 4;
          v55 = v313;
        }
        while (v110 != v111);
        goto LABEL_118;
      }
      v112 = (float32x4_t *)*v319;
      v113 = ((char *)v109 - *v319) >> 4;
      v114 = v113 + 1;
      a5 = v297;
      if ((unint64_t)(v113 + 1) >> 60)
        sub_2394189F8();
      v115 = v108 - (_QWORD)v112;
      if (v115 >> 3 > v114)
        v114 = v115 >> 3;
      if ((unint64_t)v115 >= 0x7FFFFFFFFFFFFFF0)
        v116 = 0xFFFFFFFFFFFFFFFLL;
      else
        v116 = v114;
      if (v116)
      {
        if (v116 >> 60)
          sub_239418A80();
        v117 = (char *)operator new(16 * v116);
        v107 = *(float32x4_t *)__pb;
        v118 = &v117[16 * v113];
        *(_OWORD *)v118 = *(_OWORD *)__pb;
        v119 = v118 + 16;
        if (v109 == v112)
        {
LABEL_129:
          *v319 = v118;
          v319[1] = v119;
          v319[2] = &v117[16 * v116];
          if (!v109)
            goto LABEL_117;
LABEL_116:
          operator delete(v109);
          v107 = *(float32x4_t *)__pb;
          goto LABEL_117;
        }
      }
      else
      {
        v117 = 0;
        v118 = (char *)(16 * v113);
        v120 = (float32x4_t *)(16 * v113);
        *v120 = v107;
        v119 = (char *)&v120[1];
        if (v109 == v112)
          goto LABEL_129;
      }
      do
      {
        v121 = v109[-1];
        --v109;
        *((float32x4_t *)v118 - 1) = v121;
        v118 -= 16;
      }
      while (v109 != v112);
      v109 = (float32x4_t *)*v319;
      *v319 = v118;
      v319[1] = v119;
      v319[2] = &v117[16 * v116];
      if (v109)
        goto LABEL_116;
LABEL_117:
      v55 = v313;
      v319[1] = v119;
      v110 = v329;
      v111 = v330;
      if (v329 != v330)
        goto LABEL_121;
LABEL_118:
      v43 = v312;
      v45 = v299;
      if (v299 == v312)
        goto LABEL_131;
    }
    if (v65 >> 62)
      sub_239418A80();
    v66 = operator new(4 * v65);
    v57 = __p;
    v58 = v306;
    v67 = &v66[4 * v62];
    *(_DWORD *)v67 = v298;
    v60 = (uint64_t)(v67 + 4);
    if (v59 == v61)
      goto LABEL_63;
LABEL_57:
    v68 = v59 - 4 - v61;
    if (v68 < 0x2C)
      goto LABEL_342;
    if ((unint64_t)(v61 - v66) < 0x20)
      goto LABEL_342;
    v69 = (v68 >> 2) + 1;
    v70 = 4 * (v69 & 0x7FFFFFFFFFFFFFF8);
    v71 = &v59[-v70];
    v67 -= v70;
    v72 = &v66[4 * v62 - 16];
    v73 = v59 - 16;
    v74 = v69 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v75 = *(_OWORD *)v73;
      *(v72 - 1) = *((_OWORD *)v73 - 1);
      *v72 = v75;
      v72 -= 2;
      v73 -= 32;
      v74 -= 8;
    }
    while (v74);
    v59 = v71;
    if (v69 != (v69 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_342:
      do
      {
        v76 = *((_DWORD *)v59 - 1);
        v59 -= 4;
        *((_DWORD *)v67 - 1) = v76;
        v67 -= 4;
      }
      while (v59 != v61);
    }
    goto LABEL_63;
  }
LABEL_131:
  v130 = (a3[1] - *a3) >> 2;
  if (v43 > v130)
  {
    sub_23942CB44((uint64_t)a3, v43 - v130);
    v131 = v319;
    *a5 = (unint64_t)(v319[1] - *v319) >> 4;
LABEL_136:
    v132 = 0;
    do
    {
      v134 = *a5;
      if ((_DWORD)v134)
      {
        v135 = *(_QWORD *)(*v320 + 16 * v296 + 8);
        if (v135)
        {
          v136 = 0;
          v133 = 0;
          v137 = -3.4028e38;
          do
          {
            v140 = (uint64_t *)(*v320 + 16 * v296);
            v141 = *v140;
            v142 = (std::__shared_weak_count *)v140[1];
            if (v142)
            {
              v143 = (unint64_t *)&v142->__shared_owners_;
              do
                v144 = __ldxr(v143);
              while (__stxr(v144 + 1, v143));
              do
                v145 = __ldaxr(v143);
              while (__stlxr(v145 - 1, v143));
              if (!v145)
              {
                ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
                std::__shared_weak_count::__release_weak(v142);
              }
            }
            v138 = vmulq_f32(*(float32x4_t *)(*(_QWORD *)(v141 + 40) + 16 * v132), *(float32x4_t *)&(*v319)[16 * v136]);
            v138.i32[3] = 0;
            v139 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v138, v138));
            if (v139 > v137)
            {
              v133 = v136;
              v137 = v139;
            }
            ++v136;
          }
          while (v136 < *a5);
        }
        else
        {
          v133 = 0;
          v146 = -3.4028e38;
          do
          {
            v147 = vmulq_f32(*(float32x4_t *)(*(_QWORD *)(*(_QWORD *)(*v320 + 16 * v296) + 40) + 16 * v132), *(float32x4_t *)&(*v131)[16 * v135]);
            v147.i32[3] = 0;
            v148 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v147, v147));
            if (v148 > v146)
            {
              v133 = v135;
              v146 = v148;
            }
            ++v135;
          }
          while (v134 != v135);
        }
      }
      else
      {
        v133 = 0;
      }
      *(_DWORD *)(*a3 + 4 * v132++) = v133;
      v43 = v312;
      v131 = v319;
    }
    while (v132 != v312);
    v326 = 0;
    v327 = 0;
    v328 = 0;
    if (v312)
    {
      __pc = (unsigned int *)operator new(4 * v312);
      bzero(__pc, 4 * v312);
      v43 = v312;
    }
    else
    {
      __pc = 0;
    }
    goto LABEL_160;
  }
  v131 = v319;
  if (v43 < v130)
    a3[1] = *a3 + 4 * v43;
  *a5 = (unint64_t)(v319[1] - *v319) >> 4;
  if (v43)
    goto LABEL_136;
  __pc = 0;
  v326 = 0;
  v327 = 0;
  v328 = 0;
LABEL_160:
  sub_23941C5D8((uint64_t)&v332, v43, 0);
  v149 = v333;
  if (v333)
  {
    v150 = v332;
    v151 = 8 * (v333 >> 6);
    if (v333 >= 0x40)
      bzero(v332, 8 * (v333 >> 6));
    if ((v149 & 0x3F) != 0)
      *(_QWORD *)&v150[v151] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v149 & 0x3F));
  }
  if (!v312)
    goto LABEL_311;
  for (i = 0; i != v312; ++i)
  {
    v153 = i >> 6;
    v154 = 1 << i;
    if ((*(_QWORD *)&v332[8 * (i >> 6)] & (1 << i)) != 0)
      continue;
    v155 = v327;
    if (v327 < v328)
    {
      *(_DWORD *)v327 = 1;
      v156 = v155 + 4;
      v157 = v326;
      goto LABEL_193;
    }
    v158 = (char *)v326;
    v159 = (v327 - (char *)v326) >> 2;
    v160 = v159 + 1;
    if ((unint64_t)(v159 + 1) >> 62)
      sub_2394189F8();
    v161 = v328 - (char *)v326;
    if ((v328 - (char *)v326) >> 1 > v160)
      v160 = v161 >> 1;
    if ((unint64_t)v161 >= 0x7FFFFFFFFFFFFFFCLL)
      v162 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v162 = v160;
    if (v162)
    {
      if (v162 >> 62)
        sub_239418A80();
      v163 = v162;
      v164 = operator new(4 * v162);
      v162 = v163;
      v157 = &v164[4 * v159];
      *v157 = 1;
      v304 = (uint64_t)(v157 + 1);
      if (v155 == v158)
      {
LABEL_184:
        v154 = 1 << i;
        goto LABEL_190;
      }
    }
    else
    {
      v164 = 0;
      v157 = (_DWORD *)(4 * v159);
      *(_DWORD *)(4 * v159) = 1;
      v304 = 4 * v159 + 4;
      if (v155 == v158)
        goto LABEL_184;
    }
    v165 = v155 - 4 - v158;
    if (v165 >= 0x2C)
    {
      v154 = 1 << i;
      if ((unint64_t)(v158 - v164) >= 0x20)
      {
        v166 = (v165 >> 2) + 1;
        v167 = 4 * (v166 & 0x7FFFFFFFFFFFFFF8);
        v168 = &v155[-v167];
        v157 = (_DWORD *)((char *)v157 - v167);
        v169 = &v164[4 * v159 - 16];
        v170 = (__int128 *)(v155 - 16);
        v171 = v166 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v172 = *v170;
          *(v169 - 1) = *(v170 - 1);
          *v169 = v172;
          v169 -= 2;
          v170 -= 2;
          v171 -= 8;
        }
        while (v171);
        v155 = v168;
        if (v166 == (v166 & 0x7FFFFFFFFFFFFFF8))
          goto LABEL_190;
      }
    }
    else
    {
      v154 = 1 << i;
    }
    do
    {
      v173 = *((_DWORD *)v155 - 1);
      v155 -= 4;
      *--v157 = v173;
    }
    while (v155 != v158);
LABEL_190:
    v326 = v157;
    v328 = &v164[4 * v162];
    if (v158)
      operator delete(v158);
    v153 = i >> 6;
    v156 = (char *)v304;
LABEL_193:
    v327 = v156;
    v324 = 0u;
    v325 = 0u;
    __dst = 0u;
    sub_239931BC8((uint64_t)&__dst);
    v174 = ((unint64_t)(v156 - (char *)v157) >> 2) - 1;
    *(_DWORD *)(*(_QWORD *)(*((_QWORD *)&__dst + 1)
                          + (((*((_QWORD *)&v325 + 1) + (_QWORD)v325) >> 7) & 0x1FFFFFFFFFFFFF8))
              + 4 * ((*((_QWORD *)&v325 + 1) + v325) & 0x3FF)) = i;
    ++*((_QWORD *)&v325 + 1);
    *(_QWORD *)&v332[8 * v153] |= v154;
    v310 = i;
    __pc[i] = v174;
    v175 = *((_QWORD *)&v325 + 1);
    if (*((_QWORD *)&v325 + 1))
    {
      v176 = *(_DWORD *)(*a3 + 4 * i);
      do
      {
        v322 = *(_DWORD *)(*(_QWORD *)(*((_QWORD *)&__dst + 1) + (((unint64_t)v325 >> 7) & 0x1FFFFFFFFFFFFF8))
                         + 4 * (v325 & 0x3FF));
        *(_QWORD *)&v325 = v325 + 1;
        *((_QWORD *)&v325 + 1) = v175 - 1;
        if ((unint64_t)v325 >= 0x800)
        {
          operator delete(**((void ***)&__dst + 1));
          *((_QWORD *)&__dst + 1) += 8;
          *(_QWORD *)&v325 = v325 - 1024;
        }
        v177 = *(_DWORD *)sub_23996252C(a1 + 104, &v322);
        v321 = v177;
        do
        {
          v321 = *(_DWORD *)(sub_239962518(a1 + 104, &v321) + 8);
          v178 = *(unsigned int *)sub_239962518(a1 + 104, &v321);
          v179 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
          v180 = *v179;
          v181 = (std::__shared_weak_count *)v179[1];
          if (v181)
          {
            v182 = (unint64_t *)&v181->__shared_owners_;
            do
              v183 = __ldxr(v182);
            while (__stxr(v183 + 1, v182));
            do
              v184 = __ldaxr(v182);
            while (__stlxr(v184 - 1, v182));
            if (!v184)
            {
              ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
              std::__shared_weak_count::__release_weak(v181);
            }
          }
          if (((*(_QWORD *)(*(_QWORD *)(v180 + 40) + ((v178 >> 3) & 0x1FFFFFF8)) >> v178) & 1) == 0)
          {
            v185 = (unsigned int *)sub_239962518(a1 + 104, &v321);
            v186 = *(unsigned int *)(sub_239962518(a1 + 104, v185) + 16);
            if (((1 << v186) & *(_QWORD *)&v332[8 * (v186 >> 6)]) == 0 && *(_DWORD *)(*a3 + 4 * v186) == v176)
            {
              v187 = *((_QWORD *)&__dst + 1);
              v188 = (((_QWORD)v324 - *((_QWORD *)&__dst + 1)) << 7) - 1;
              if ((_QWORD)v324 == *((_QWORD *)&__dst + 1))
                v188 = 0;
              v189 = *((_QWORD *)&v325 + 1) + v325;
              if (v188 == *((_QWORD *)&v325 + 1) + (_QWORD)v325)
              {
                sub_239931BC8((uint64_t)&__dst);
                v187 = *((_QWORD *)&__dst + 1);
                v189 = *((_QWORD *)&v325 + 1) + v325;
              }
              *(_DWORD *)(*(_QWORD *)(v187 + ((v189 >> 7) & 0x1FFFFFFFFFFFFF8)) + 4 * (v189 & 0x3FF)) = v186;
              ++*((_QWORD *)&v325 + 1);
              *(_QWORD *)&v332[8 * (v186 >> 6)] |= 1 << v186;
              __pc[v186] = v174;
              ++v326[v174];
            }
          }
        }
        while (v321 != v177);
        v175 = *((_QWORD *)&v325 + 1);
      }
      while (*((_QWORD *)&v325 + 1));
    }
    v190 = (void **)*((_QWORD *)&__dst + 1);
    v191 = (void **)v324;
    *((_QWORD *)&v325 + 1) = 0;
    v192 = v324 - *((_QWORD *)&__dst + 1);
    if ((_QWORD)v324 - *((_QWORD *)&__dst + 1) >= 0x11uLL)
    {
      do
      {
        operator delete(*v190);
        v191 = (void **)v324;
        v190 = (void **)(*((_QWORD *)&__dst + 1) + 8);
        *((_QWORD *)&__dst + 1) = v190;
        v192 = v324 - (_QWORD)v190;
      }
      while ((_QWORD)v324 - (_QWORD)v190 > 0x10uLL);
    }
    v193 = v192 >> 3;
    if (v193 == 1)
    {
      v194 = 512;
    }
    else
    {
      if (v193 != 2)
        goto LABEL_221;
      v194 = 1024;
    }
    *(_QWORD *)&v325 = v194;
LABEL_221:
    if (v190 != v191)
    {
      do
      {
        v195 = *v190++;
        operator delete(v195);
      }
      while (v190 != v191);
      if ((_QWORD)v324 != *((_QWORD *)&__dst + 1))
        *(_QWORD *)&v324 = v324 + ((*((_QWORD *)&__dst + 1) - v324 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
    if ((_QWORD)__dst)
      operator delete((void *)__dst);
    i = v310;
  }
  for (j = 0; j != v312; ++j)
  {
    if (v326[__pc[j]] == 1)
    {
      v197 = (uint64_t *)(*v320 + 16 * v296);
      v198 = *v197;
      v199 = (std::__shared_weak_count *)v197[1];
      if (v199)
      {
        v200 = (unint64_t *)&v199->__shared_owners_;
        do
          v201 = __ldxr(v200);
        while (__stxr(v201 + 1, v200));
        do
          v202 = __ldaxr(v200);
        while (__stlxr(v202 - 1, v200));
        if (!v202)
        {
          ((void (*)(std::__shared_weak_count *))v199->__on_zero_shared)(v199);
          std::__shared_weak_count::__release_weak(v199);
        }
      }
      v203 = *(_QWORD *)(v198 + 40);
      v204 = *(_DWORD *)(*a3 + 4 * j);
      LODWORD(__dst) = j;
      v205 = *(_DWORD *)sub_23996252C(a1 + 104, (unsigned int *)&__dst);
      LODWORD(__dst) = v205;
      v206 = 0.5;
      v311 = 0xFFFFFFFFLL;
      do
      {
        LODWORD(__dst) = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&__dst) + 8);
        v207 = *(unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__dst);
        v208 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
        v209 = *v208;
        v210 = (std::__shared_weak_count *)v208[1];
        if (v210)
        {
          v211 = (unint64_t *)&v210->__shared_owners_;
          do
            v212 = __ldxr(v211);
          while (__stxr(v212 + 1, v211));
          do
            v213 = __ldaxr(v211);
          while (__stlxr(v213 - 1, v211));
          if (!v213)
          {
            ((void (*)(std::__shared_weak_count *))v210->__on_zero_shared)(v210);
            std::__shared_weak_count::__release_weak(v210);
          }
        }
        if (((*(_QWORD *)(*(_QWORD *)(v209 + 40) + ((v207 >> 3) & 0x1FFFFFF8)) >> v207) & 1) == 0)
        {
          v214 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__dst);
          v215 = sub_239962518(a1 + 104, v214);
          v216 = *(unsigned int *)(v215 + 16);
          v217 = vmulq_f32(*(float32x4_t *)&(*v319)[16 * *(unsigned int *)(*a3 + 4 * v216)], *(float32x4_t *)(v203 + 16 * j));
          v217.i32[3] = 0;
          v218 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v217, v217));
          if (v218 > v206)
          {
            v219 = v218 * (float)v326[__pc[v216]];
            if (v219 > v10)
            {
              v311 = *(unsigned int *)(v215 + 16);
              v204 = *(_DWORD *)(*a3 + 4 * v216);
              v206 = v219;
            }
          }
        }
      }
      while ((_DWORD)__dst != v205);
      if (*(_DWORD *)(*a3 + 4 * j) != v204)
      {
        v220 = j;
        *(_DWORD *)(*a3 + v220 * 4) = v204;
        v221 = v326;
        v326[__pc[j]] = 0;
        v222 = __pc[v311];
        __pc[v220] = v222;
        ++v221[v222];
      }
    }
  }
  for (k = 0; k != v312; ++k)
  {
    if (v326[__pc[k]] == 2)
    {
      LODWORD(__dst) = k;
      v224 = *(_DWORD *)sub_23996252C(a1 + 104, (unsigned int *)&__dst);
      LODWORD(__dst) = v224;
      while (1)
      {
        LODWORD(__dst) = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&__dst) + 8);
        v225 = *(unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__dst);
        v226 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
        v227 = *v226;
        v228 = (std::__shared_weak_count *)v226[1];
        if (v228)
        {
          v229 = (unint64_t *)&v228->__shared_owners_;
          do
            v230 = __ldxr(v229);
          while (__stxr(v230 + 1, v229));
          do
            v231 = __ldaxr(v229);
          while (__stlxr(v231 - 1, v229));
          if (!v231)
          {
            ((void (*)(std::__shared_weak_count *))v228->__on_zero_shared)(v228);
            std::__shared_weak_count::__release_weak(v228);
          }
        }
        if (((*(_QWORD *)(*(_QWORD *)(v227 + 40) + ((v225 >> 3) & 0x1FFFFFF8)) >> v225) & 1) == 0)
        {
          v232 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__dst);
          v233 = *(unsigned int *)(sub_239962518(a1 + 104, v232) + 16);
          if (*(_DWORD *)(*a3 + 4 * v233) == *(_DWORD *)(*a3 + 4 * k))
            break;
        }
        if ((_DWORD)__dst == v224)
          goto LABEL_251;
      }
      if ((_DWORD)v233 != -1)
      {
        v234 = (uint64_t *)(*v320 + 16 * v296);
        v235 = *v234;
        v236 = (std::__shared_weak_count *)v234[1];
        if (v236)
        {
          v237 = (unint64_t *)&v236->__shared_owners_;
          do
            v238 = __ldxr(v237);
          while (__stxr(v238 + 1, v237));
          do
            v239 = __ldaxr(v237);
          while (__stlxr(v239 - 1, v237));
          if (!v239)
          {
            ((void (*)(std::__shared_weak_count *))v236->__on_zero_shared)(v236);
            std::__shared_weak_count::__release_weak(v236);
          }
        }
        v308 = *(_QWORD *)(v235 + 40);
        v240 = (uint64_t *)(*v320 + 16 * v296);
        v241 = *v240;
        v242 = (std::__shared_weak_count *)v240[1];
        if (v242)
        {
          v243 = (unint64_t *)&v242->__shared_owners_;
          do
            v244 = __ldxr(v243);
          while (__stxr(v244 + 1, v243));
          do
            v245 = __ldaxr(v243);
          while (__stlxr(v245 - 1, v243));
          if (!v245)
          {
            ((void (*)(std::__shared_weak_count *))v242->__on_zero_shared)(v242);
            std::__shared_weak_count::__release_weak(v242);
          }
        }
        v305 = *(_QWORD *)(v241 + 40);
        v246 = *(_DWORD *)(*a3 + 4 * k);
        v322 = k;
        v247 = *(_DWORD *)sub_23996252C(a1 + 104, &v322);
        LODWORD(__dst) = v247;
        v248 = 0.5;
        v301 = 0xFFFFFFFFLL;
        do
        {
          LODWORD(__dst) = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&__dst) + 8);
          v249 = *(unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__dst);
          v250 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
          v251 = *v250;
          v252 = (std::__shared_weak_count *)v250[1];
          if (v252)
          {
            v253 = (unint64_t *)&v252->__shared_owners_;
            do
              v254 = __ldxr(v253);
            while (__stxr(v254 + 1, v253));
            do
              v255 = __ldaxr(v253);
            while (__stlxr(v255 - 1, v253));
            if (!v255)
            {
              ((void (*)(std::__shared_weak_count *))v252->__on_zero_shared)(v252);
              std::__shared_weak_count::__release_weak(v252);
            }
          }
          if (((*(_QWORD *)(*(_QWORD *)(v251 + 40) + ((v249 >> 3) & 0x1FFFFFF8)) >> v249) & 1) == 0)
          {
            v256 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__dst);
            v257 = sub_239962518(a1 + 104, v256);
            v258 = *(unsigned int *)(v257 + 16);
            v259 = *(unsigned int *)(*a3 + 4 * v258);
            if ((_DWORD)v259 != *(_DWORD *)(*a3 + 4 * k))
            {
              v260 = *(float32x4_t *)&(*v319)[16 * v259];
              v261 = vmulq_f32(*(float32x4_t *)(v308 + 16 * k), v260);
              v261.i32[3] = 0;
              v262 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v261, v261));
              v263 = vmulq_f32(v260, *(float32x4_t *)(v305 + 16 * v233));
              v263.i32[3] = 0;
              v264 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v263, v263));
              if (v262 > v10 && v264 > v10)
              {
                v266 = (float)(v262 + v264) * (float)v326[__pc[v258]];
                if (v266 > v248)
                {
                  v301 = *(unsigned int *)(v257 + 16);
                  v246 = *(_DWORD *)(*a3 + 4 * v258);
                  v248 = v266;
                }
              }
            }
          }
        }
        while ((_DWORD)__dst != v247);
        v322 = v233;
        v267 = *(_DWORD *)sub_23996252C(a1 + 104, &v322);
        LODWORD(__dst) = v267;
        do
        {
          LODWORD(__dst) = *(_DWORD *)(sub_239962518(a1 + 104, (unsigned int *)&__dst) + 8);
          v268 = *(unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__dst);
          v269 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
          v270 = *v269;
          v271 = (std::__shared_weak_count *)v269[1];
          if (v271)
          {
            v272 = (unint64_t *)&v271->__shared_owners_;
            do
              v273 = __ldxr(v272);
            while (__stxr(v273 + 1, v272));
            do
              v274 = __ldaxr(v272);
            while (__stlxr(v274 - 1, v272));
            if (!v274)
            {
              ((void (*)(std::__shared_weak_count *))v271->__on_zero_shared)(v271);
              std::__shared_weak_count::__release_weak(v271);
            }
          }
          if (((*(_QWORD *)(*(_QWORD *)(v270 + 40) + ((v268 >> 3) & 0x1FFFFFF8)) >> v268) & 1) == 0)
          {
            v275 = (unsigned int *)sub_239962518(a1 + 104, (unsigned int *)&__dst);
            v276 = sub_239962518(a1 + 104, v275);
            v277 = *(unsigned int *)(v276 + 16);
            v278 = *(unsigned int *)(*a3 + 4 * v277);
            if ((_DWORD)v278 != *(_DWORD *)(*a3 + 4 * (int)v233))
            {
              v279 = *(float32x4_t *)&(*v319)[16 * v278];
              v280 = vmulq_f32(*(float32x4_t *)(v308 + 16 * k), v279);
              v280.i32[3] = 0;
              v281 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v280, v280));
              v282 = vmulq_f32(v279, *(float32x4_t *)(v305 + 16 * v233));
              v282.i32[3] = 0;
              v283 = vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v282, v282));
              if (v281 > v10 && v283 > v10)
              {
                v285 = (float)(v281 + v283) * (float)v326[__pc[v277]];
                if (v285 > v248)
                {
                  v301 = *(unsigned int *)(v276 + 16);
                  v246 = *(_DWORD *)(*a3 + 4 * v277);
                  v248 = v285;
                }
              }
            }
          }
        }
        while ((_DWORD)__dst != v267);
        v286 = *a3;
        if (*(_DWORD *)(*a3 + 4 * k) != v246 && *(_DWORD *)(v286 + 4 * (int)v233) != v246)
        {
          v287 = (int)v233;
          *(_DWORD *)(v286 + v287 * 4) = v246;
          v288 = k;
          *(_DWORD *)(v286 + v288 * 4) = v246;
          v289 = v326;
          v326[__pc[k]] = 0;
          v290 = __pc[v301];
          __pc[v287] = v290;
          __pc[v288] = v290;
          v289[v290] += 2;
        }
      }
    }
LABEL_251:
    ;
  }
LABEL_311:
  if (v296 != -1)
  {
    v291 = (_QWORD *)(*v320 + 16 * v296);
    v292 = (std::__shared_weak_count *)v291[1];
    *v291 = 0;
    v291[1] = 0;
    if (v292)
    {
      v293 = (unint64_t *)&v292->__shared_owners_;
      do
        v294 = __ldaxr(v293);
      while (__stlxr(v294 - 1, v293));
      if (!v294)
      {
        ((void (*)(std::__shared_weak_count *))v292->__on_zero_shared)(v292);
        std::__shared_weak_count::__release_weak(v292);
      }
    }
  }
  if (__pc)
    operator delete(__pc);
  if (v326)
    operator delete(v326);
  if (v329)
  {
    v330 = v329;
    operator delete(v329);
  }
  if (v332)
    operator delete(v332);
  if (v313)
    operator delete(v313);
  return 1;
}

void sub_23997EE0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23997F044(size_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4, _QWORD *a5, _QWORD *a6)
{
  char *v10;
  size_t v11;
  size_t v12;
  __int128 *p_dst;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  size_t v24;
  size_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  char *v30;
  size_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  char *v38;
  size_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  std::__shared_weak_count *v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  std::string *v64;
  std::string::size_type v65;
  char v66;
  uint64_t *v67;
  std::__shared_weak_count *v68;
  uint64_t v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  void **v77;
  void **v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  std::__shared_weak_count *v86;
  uint64_t v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  unsigned int v91;
  unint64_t v92;
  uint64_t *v93;
  std::__shared_weak_count *v94;
  uint64_t v95;
  unint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  unsigned int *v99;
  unint64_t v100;
  char *v101;
  unint64_t v102;
  unint64_t v103;
  void *v104;
  void **v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  float32x4_t v114;
  int32x4_t v115;
  float32x4_t v116;
  float v117;
  float v120;
  float v121;
  float v138;
  float v147;
  float32x4_t v151;
  char *v152;
  size_t v153;
  void *v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int v158;
  uint64_t *v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  char *v163;
  size_t v164;
  void *v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  size_t v170;
  void *v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int v175;
  unsigned int v176;
  uint64_t *v177;
  std::__shared_weak_count *v178;
  uint64_t v179;
  unint64_t *v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  char *v184;
  size_t v185;
  void *v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  unsigned int v199;
  uint64_t *v200;
  std::__shared_weak_count *v201;
  uint64_t v202;
  unint64_t *v203;
  unint64_t v204;
  unint64_t v205;
  unint64_t v207;
  uint64_t *v208;
  unsigned int v210;
  char v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t **v214;
  unsigned int v215;
  uint64_t **v216;
  unsigned int v217;
  unsigned int v218;
  void *__p[2];
  __int128 v220;
  __int128 v221;
  __int128 __dst;
  unint64_t v223;
  uint64_t v224;

  v224 = *MEMORY[0x24BDAC8D0];
  v218 = -1;
  v10 = off_256934448[0];
  v11 = strlen(off_256934448[0]);
  if (v11 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v12 = v11;
  v208 = a4;
  if (v11 >= 0x17)
  {
    v14 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v14 = v11 | 7;
    v15 = v14 + 1;
    p_dst = (__int128 *)operator new(v14 + 1);
    *((_QWORD *)&__dst + 1) = v12;
    v223 = v15 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v223) = v11;
  p_dst = &__dst;
  if (v11)
LABEL_8:
    memmove(p_dst, v10, v12);
  *((_BYTE *)p_dst + v12) = 0;
  __p[0] = 0;
  __p[1] = 0;
  *(_QWORD *)&v220 = 0;
  v214 = (uint64_t **)(a1 + 80);
  v16 = sub_23958C0D8((uint64_t **)(a1 + 80), (uint64_t)__p, (unsigned __int8 *)&__dst);
  if (SBYTE7(v220) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v223) & 0x80000000) == 0)
    {
LABEL_11:
      if (v16 != -1)
        goto LABEL_12;
LABEL_21:
      v23 = off_256934448[0];
      v24 = strlen(off_256934448[0]);
      if (v24 > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      v25 = v24;
      if (v24 >= 0x17)
      {
        v27 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v24 | 7) != 0x17)
          v27 = v24 | 7;
        v28 = v27 + 1;
        v26 = (__int128 *)operator new(v27 + 1);
        *((_QWORD *)&__dst + 1) = v25;
        v223 = v28 | 0x8000000000000000;
        *(_QWORD *)&__dst = v26;
      }
      else
      {
        HIBYTE(v223) = v24;
        v26 = &__dst;
        if (!v24)
        {
LABEL_29:
          *((_BYTE *)v26 + v25) = 0;
          __p[0] = 0;
          __p[1] = 0;
          *(_QWORD *)&v220 = 0;
          v29 = sub_23958964C((uint64_t)v214, (uint64_t)__p, (uint64_t)&__dst);
          if (SBYTE7(v220) < 0)
          {
            operator delete(__p[0]);
            if ((SHIBYTE(v223) & 0x80000000) == 0)
              goto LABEL_31;
          }
          else if ((SHIBYTE(v223) & 0x80000000) == 0)
          {
LABEL_31:
            v210 = v29;
            goto LABEL_32;
          }
          operator delete((void *)__dst);
          goto LABEL_31;
        }
      }
      memmove(v26, v23, v25);
      goto LABEL_29;
    }
  }
  else if ((SHIBYTE(v223) & 0x80000000) == 0)
  {
    goto LABEL_11;
  }
  operator delete((void *)__dst);
  if (v16 == -1)
    goto LABEL_21;
LABEL_12:
  v210 = v16;
  v17 = &(*v214)[2 * v16];
  v18 = *v17;
  v19 = (std::__shared_weak_count *)v17[1];
  if (v19)
  {
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(p_shared_owners);
    while (__stxr(v21 + 1, p_shared_owners));
    do
      v22 = __ldaxr(p_shared_owners);
    while (__stlxr(v22 - 1, p_shared_owners));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v18 + 40))(v18);
LABEL_32:
  v30 = off_256934428[0];
  v31 = strlen(off_256934428[0]);
  if (v31 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v32 = (void *)v31;
  if (v31 >= 0x17)
  {
    v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v31 | 7) != 0x17)
      v34 = v31 | 7;
    v35 = v34 + 1;
    v33 = operator new(v34 + 1);
    __p[1] = v32;
    *(_QWORD *)&v220 = v35 | 0x8000000000000000;
    __p[0] = v33;
    goto LABEL_39;
  }
  BYTE7(v220) = v31;
  v33 = __p;
  if (v31)
LABEL_39:
    memmove(v33, v30, (size_t)v32);
  *((_BYTE *)v32 + (_QWORD)v33) = 0;
  LODWORD(__dst) = 0;
  v216 = (uint64_t **)(a1 + 56);
  v36 = sub_2399346C0((uint64_t **)(a1 + 56), (uint64_t)&__dst, (unsigned __int8 *)__p);
  v37 = v36;
  v218 = v36;
  if (SBYTE7(v220) < 0)
  {
    operator delete(__p[0]);
    if (v37 != -1)
      goto LABEL_53;
  }
  else if (v36 != -1)
  {
    goto LABEL_53;
  }
  v38 = off_256934428[0];
  v39 = strlen(off_256934428[0]);
  if (v39 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v40 = (void *)v39;
  if (v39 >= 0x17)
  {
    v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v39 | 7) != 0x17)
      v42 = v39 | 7;
    v43 = v42 + 1;
    v41 = operator new(v42 + 1);
    __p[1] = v40;
    *(_QWORD *)&v220 = v43 | 0x8000000000000000;
    __p[0] = v41;
    goto LABEL_51;
  }
  BYTE7(v220) = v39;
  v41 = __p;
  if (v39)
LABEL_51:
    memmove(v41, v38, (size_t)v40);
  *((_BYTE *)v40 + (_QWORD)v41) = 0;
  sub_2394E43DC((_QWORD *)a1, &v218, (uint64_t)__p);
  if (SBYTE7(v220) < 0)
  {
    operator delete(__p[0]);
    v44 = *(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152);
    v45 = (v44 >> 2);
    v212 = v45;
    if ((v44 >> 2))
      goto LABEL_54;
    goto LABEL_132;
  }
LABEL_53:
  v44 = *(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152);
  v45 = (v44 >> 2);
  v212 = v45;
  if ((v44 >> 2))
  {
LABEL_54:
    v46 = operator new(8 * ((v45 - 1) >> 6) + 8);
    v47 = v46;
    if (v45 >= 0x41)
      v48 = (v45 - 1) >> 6;
    else
      v48 = 0;
    v46[v48] = 0;
    if (v45 >= 0x40)
      bzero(v46, 8 * (v45 >> 6));
    v207 = v44;
    if (v44 >> 2)
      v47[v45 >> 6] &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v44 >> 2));
    v49 = 0;
    while (1)
    {
      v50 = v49 >> 6;
      v51 = 1 << v49;
      if ((v47[v49 >> 6] & (1 << v49)) == 0)
        break;
LABEL_63:
      if (++v49 == v212)
      {
        v44 = v207;
        goto LABEL_133;
      }
    }
    v213 = v49;
    v52 = &(*v214)[2 * v210];
    v54 = *v52;
    v53 = (std::__shared_weak_count *)v52[1];
    if (v53)
    {
      v55 = (unint64_t *)&v53->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      do
        v57 = __ldaxr(v55);
      while (__stlxr(v57 - 1, v55));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
    (*(void (**)(uint64_t))(*(_QWORD *)v54 + 48))(v54);
    v58 = &(*v214)[2 * v210];
    v60 = *v58;
    v59 = (std::__shared_weak_count *)v58[1];
    if (v59)
    {
      v61 = (unint64_t *)&v59->__shared_owners_;
      do
        v62 = __ldxr(v61);
      while (__stxr(v62 + 1, v61));
      do
        v63 = __ldaxr(v61);
      while (__stlxr(v63 - 1, v61));
      if (!v63)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
    }
    v215 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v60 + 16))(v60) - 1;
    std::to_string((std::string *)__p, v215);
    v64 = std::string::insert((std::string *)__p, 0, "g");
    v65 = v64->__r_.__value_.__r.__words[0];
    *(_QWORD *)&__dst = v64->__r_.__value_.__l.__size_;
    *(_QWORD *)((char *)&__dst + 7) = *(std::string::size_type *)((char *)&v64->__r_.__value_.__r.__words[1] + 7);
    v66 = HIBYTE(v64->__r_.__value_.__r.__words[2]);
    v64->__r_.__value_.__l.__size_ = 0;
    v64->__r_.__value_.__r.__words[2] = 0;
    v64->__r_.__value_.__r.__words[0] = 0;
    v67 = &(*v214)[2 * v210];
    v69 = *v67;
    v68 = (std::__shared_weak_count *)v67[1];
    if (!v68)
      goto LABEL_82;
    v70 = (unint64_t *)&v68->__shared_owners_;
    do
      v71 = __ldxr(v70);
    while (__stxr(v71 + 1, v70));
    do
      v72 = __ldaxr(v70);
    while (__stlxr(v72 - 1, v70));
    if (!v72)
    {
      v211 = v66;
      ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
      std::__shared_weak_count::__release_weak(v68);
      v66 = v211;
      v73 = *(_QWORD *)(v69 + 40) + 24 * v215;
      if ((*(char *)(v73 + 23) & 0x80000000) == 0)
      {
LABEL_84:
        *(_QWORD *)v73 = v65;
        *(_QWORD *)(v73 + 8) = __dst;
        *(_QWORD *)(v73 + 15) = *(_QWORD *)((char *)&__dst + 7);
        *(_BYTE *)(v73 + 23) = v66;
        if (SBYTE7(v220) < 0)
          operator delete(__p[0]);
        v220 = 0u;
        v221 = 0u;
        *(_OWORD *)__p = 0u;
        sub_239931BC8((uint64_t)__p);
        *(_DWORD *)(*(_QWORD *)((char *)__p[1] + (((*((_QWORD *)&v221 + 1) + (_QWORD)v221) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((*((_QWORD *)&v221 + 1) + v221) & 0x3FF)) = v213;
        v75 = *((_QWORD *)&v221 + 1);
        v47[v50] |= v51;
        v76 = v75 + 1;
        *((_QWORD *)&v221 + 1) = v75 + 1;
        if (v75 != -1)
        {
          v82 = *(_DWORD *)(*a5 + 4 * v213);
          do
          {
            v83 = v221;
            v84 = *(unsigned int *)(*(_QWORD *)((char *)__p[1] + (((unint64_t)v221 >> 7) & 0x1FFFFFFFFFFFFF8))
                                  + 4 * (v221 & 0x3FF));
            LODWORD(__dst) = *(_DWORD *)(*(_QWORD *)((char *)__p[1]
                                                   + (((unint64_t)v221 >> 7) & 0x1FFFFFFFFFFFFF8))
                                       + 4 * (v221 & 0x3FF));
            *(_QWORD *)&v221 = v221 + 1;
            *((_QWORD *)&v221 + 1) = v76 - 1;
            if ((unint64_t)(v83 + 1) >= 0x800)
            {
              operator delete(*(void **)__p[1]);
              __p[1] = (char *)__p[1] + 8;
              *(_QWORD *)&v221 = v221 - 1024;
              v84 = __dst;
            }
            v85 = &(*v216)[2 * v218];
            v87 = *v85;
            v86 = (std::__shared_weak_count *)v85[1];
            if (v86)
            {
              v88 = (unint64_t *)&v86->__shared_owners_;
              do
                v89 = __ldxr(v88);
              while (__stxr(v89 + 1, v88));
              do
                v90 = __ldaxr(v88);
              while (__stlxr(v90 - 1, v88));
              if (!v90)
              {
                ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
                std::__shared_weak_count::__release_weak(v86);
              }
            }
            *(_DWORD *)(*(_QWORD *)(v87 + 40) + 4 * v84) = v215;
            v91 = *(_DWORD *)sub_23996252C(a1 + 104, (unsigned int *)&__dst);
            v217 = v91;
            do
            {
              v217 = *(_DWORD *)(sub_239962518(a1 + 104, &v217) + 8);
              v92 = *(unsigned int *)sub_239962518(a1 + 104, &v217);
              v93 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
              v95 = *v93;
              v94 = (std::__shared_weak_count *)v93[1];
              if (v94)
              {
                v96 = (unint64_t *)&v94->__shared_owners_;
                do
                  v97 = __ldxr(v96);
                while (__stxr(v97 + 1, v96));
                do
                  v98 = __ldaxr(v96);
                while (__stlxr(v98 - 1, v96));
                if (!v98)
                {
                  ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
                  std::__shared_weak_count::__release_weak(v94);
                }
              }
              if (((*(_QWORD *)(*(_QWORD *)(v95 + 40) + ((v92 >> 3) & 0x1FFFFFF8)) >> v92) & 1) == 0)
              {
                v99 = (unsigned int *)sub_239962518(a1 + 104, &v217);
                v100 = *(unsigned int *)(sub_239962518(a1 + 104, v99) + 16);
                if (((1 << v100) & v47[v100 >> 6]) == 0 && *(_DWORD *)(*a5 + 4 * v100) == v82)
                {
                  v101 = (char *)__p[1];
                  v102 = (((_QWORD)v220 - (unint64_t)__p[1]) << 7) - 1;
                  if ((void *)v220 == __p[1])
                    v102 = 0;
                  v103 = *((_QWORD *)&v221 + 1) + v221;
                  if (v102 == *((_QWORD *)&v221 + 1) + (_QWORD)v221)
                  {
                    sub_239931BC8((uint64_t)__p);
                    v101 = (char *)__p[1];
                    v103 = *((_QWORD *)&v221 + 1) + v221;
                  }
                  *(_DWORD *)(*(_QWORD *)&v101[(v103 >> 7) & 0x1FFFFFFFFFFFFF8] + 4 * (v103 & 0x3FF)) = v100;
                  ++*((_QWORD *)&v221 + 1);
                  v47[v100 >> 6] |= 1 << v100;
                }
              }
            }
            while (v217 != v91);
            v76 = *((_QWORD *)&v221 + 1);
          }
          while (*((_QWORD *)&v221 + 1));
        }
        v77 = (void **)__p[1];
        v78 = (void **)v220;
        *((_QWORD *)&v221 + 1) = 0;
        v79 = v220 - (unint64_t)__p[1];
        if ((unint64_t)v220 - (unint64_t)__p[1] >= 0x11)
        {
          do
          {
            operator delete(*v77);
            v78 = (void **)v220;
            v77 = (void **)((char *)__p[1] + 8);
            __p[1] = v77;
            v79 = v220 - (_QWORD)v77;
          }
          while ((_QWORD)v220 - (_QWORD)v77 > 0x10uLL);
        }
        v80 = v79 >> 3;
        if (v80 == 1)
        {
          v81 = 512;
        }
        else
        {
          if (v80 != 2)
            goto LABEL_120;
          v81 = 1024;
        }
        *(_QWORD *)&v221 = v81;
LABEL_120:
        if (v77 != v78)
        {
          do
          {
            v104 = *v77++;
            operator delete(v104);
          }
          while (v77 != v78);
          if ((void *)v220 != __p[1])
            *(_QWORD *)&v220 = v220 + (((unint64_t)__p[1] - v220 + 7) & 0xFFFFFFFFFFFFFFF8);
        }
        if (__p[0])
          operator delete(__p[0]);
        v49 = v213;
        goto LABEL_63;
      }
    }
    else
    {
LABEL_82:
      v73 = *(_QWORD *)(v69 + 40) + 24 * v215;
      if ((*(char *)(v73 + 23) & 0x80000000) == 0)
        goto LABEL_84;
    }
    v74 = v66;
    operator delete(*(void **)v73);
    v66 = v74;
    goto LABEL_84;
  }
LABEL_132:
  v47 = 0;
LABEL_133:
  __p[0] = &off_250AF0E10;
  __p[1] = a5;
  *((_QWORD *)&v220 + 1) = __p;
  sub_239932C44(a1, (unint64_t)__p);
  v105 = (void **)*((_QWORD *)&v220 + 1);
  if (*((void ***)&v220 + 1) == __p)
  {
    v106 = 4;
    v105 = __p;
  }
  else
  {
    if (!*((_QWORD *)&v220 + 1))
      goto LABEL_138;
    v106 = 5;
  }
  (*((void (**)(void))*v105 + v106))();
LABEL_138:
  v107 = a3[1];
  v108 = v107 - *a3;
  if (v107 != *a3)
  {
    v109 = 0;
    v110 = 0x8E38E38E38E38E39 * (v108 >> 2);
    v111 = *v208;
    v112 = *a3 + 16;
    _S1 = 0;
    do
    {
      v114 = *(float32x4_t *)(v111 + 16 * v109);
      v115 = (int32x4_t)vmulq_f32(v114, (float32x4_t)xmmword_239ECEFC0);
      _Q30 = vmlsq_f32((float32x4_t)vzip2q_s32(vzip1q_s32(v115, (int32x4_t)vextq_s8((int8x16_t)v115, (int8x16_t)v115, 0xCuLL)), v115), (float32x4_t)xmmword_239ECEFC0, (float32x4_t)vuzp2q_s32((int32x4_t)vextq_s8((int8x16_t)v114, (int8x16_t)v114, 4uLL), (int32x4_t)v114));
      v116 = vmulq_f32(_Q30, _Q30);
      v116.i32[3] = 0;
      v117 = sqrtf(vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v116, v116)));
      _S31 = _Q30.i32[2];
      _S8 = _Q30.i32[1];
      v120 = _Q30.f32[0] + 0.0;
      v121 = 0.0 - _Q30.f32[0];
      *(_DWORD *)(v112 - 16) = 1065353216;
      *(float *)(v112 - 12) = _Q30.f32[2] + 0.0;
      *(float *)(v112 - 8) = 0.0 - _Q30.f32[1];
      *(float *)(v112 - 4) = 0.0 - _Q30.f32[2];
      *(_DWORD *)v112 = 1065353216;
      *(float *)(v112 + 4) = _Q30.f32[0] + 0.0;
      *(float *)(v112 + 8) = _Q30.f32[1] + 0.0;
      *(float *)(v112 + 12) = 0.0 - _Q30.f32[0];
      *(_DWORD *)(v112 + 16) = 1065353216;
      __asm { FMLS            S21, S31, V30.S[2] }
      _S20 = 0;
      __asm
      {
        FMLS            S20, S20, V30.S[2]
        FMLS            S20, S1, V30.S[2]
        FMLA            S20, S30, V30.S[1]
      }
      _S22 = 0;
      __asm
      {
        FMLA            S22, S22, V30.S[1]
        FMLA            S22, S30, V30.S[2]
        FMLA            S22, S1, V30.S[1]
      }
      _S23 = 0;
      __asm
      {
        FMLA            S23, S23, V30.S[2]
        FMLA            S23, S1, V30.S[2]
      }
      v138 = vmlas_n_f32(_S23, _Q30.f32[1], _Q30.f32[0]);
      __asm
      {
        FMLS            S21, S8, V30.S[1]
        FMLS            S24, S30, V30.S[0]
        FMLA            S26, S8, V30.S[2]
        FMLS            S27, S1, V30.S[0]
        FMLS            S27, S1, V30.S[0]
      }
      _S29 = 0;
      __asm
      {
        FMLS            S29, S29, V30.S[1]
        FMLS            S29, S1, V30.S[1]
      }
      v147 = vmlas_n_f32(vmlas_n_f32(_S26, 0.0, _Q30.f32[0]), 0.0, _Q30.f32[0]);
      __asm
      {
        FMLS            S31, S8, V30.S[1]
        FMLS            S31, S30, V30.S[0]
      }
      _Q30.f32[0] = _S31 + 0.0;
      if (fabsf(v117) > 0.00000001)
      {
        v151 = vmulq_f32(v114, (float32x4_t)xmmword_239ECEFD0);
        v151.i32[3] = 0;
        v151.f32[0] = (1.0 - vaddv_f32((float32x2_t)*(_OWORD *)&vpaddq_f32(v151, v151))) / (float)(v117 * v117);
        _S21 = _S21 * v151.f32[0];
        v138 = v138 * v151.f32[0];
        _S29 = _S29 * v151.f32[0];
        _S20 = _S20 * v151.f32[0];
        _S24 = _S24 * v151.f32[0];
        v147 = v147 * v151.f32[0];
        _S22 = _S22 * v151.f32[0];
        _S27 = _S27 * v151.f32[0];
        _Q30.f32[0] = _Q30.f32[0] * v151.f32[0];
      }
      *(float *)(v112 - 16) = _S21 + 1.0;
      *(float *)(v112 - 12) = (float)(_Q30.f32[2] + 0.0) + v138;
      *(float *)(v112 - 8) = (float)(0.0 - _Q30.f32[1]) + _S29;
      *(float *)(v112 - 4) = (float)(0.0 - _Q30.f32[2]) + _S20;
      *(float *)v112 = _S24 + 1.0;
      *(float *)(v112 + 4) = v120 + v147;
      *(float *)(v112 + 8) = (float)(_Q30.f32[1] + 0.0) + _S22;
      *(float *)(v112 + 12) = v121 + _S27;
      *(float *)(v112 + 16) = _Q30.f32[0] + 1.0;
      ++v109;
      v112 += 36;
    }
    while (v110 > v109);
  }
  v217 = -1;
  v152 = off_256934418[0];
  v153 = strlen(off_256934418[0]);
  if (v153 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v154 = (void *)v153;
  if (v153 >= 0x17)
  {
    v156 = (v153 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v153 | 7) != 0x17)
      v156 = v153 | 7;
    v157 = v156 + 1;
    v155 = operator new(v156 + 1);
    __p[1] = v154;
    *(_QWORD *)&v220 = v157 | 0x8000000000000000;
    __p[0] = v155;
    goto LABEL_150;
  }
  BYTE7(v220) = v153;
  v155 = __p;
  if (v153)
LABEL_150:
    memmove(v155, v152, (size_t)v154);
  *((_BYTE *)v154 + (_QWORD)v155) = 0;
  *(_QWORD *)((char *)&__dst + 4) = 0;
  LODWORD(__dst) = 0;
  v158 = sub_2394E5DE4(v216, (uint64_t)&__dst, (unsigned __int8 *)__p);
  v217 = v158;
  if (SBYTE7(v220) < 0)
    operator delete(__p[0]);
  if (v158 != -1)
  {
    if (v217 != -1)
    {
      v159 = &(*v216)[2 * v217];
      v160 = (std::__shared_weak_count *)v159[1];
      *v159 = 0;
      v159[1] = 0;
      if (v160)
      {
        v161 = (unint64_t *)&v160->__shared_owners_;
        do
          v162 = __ldaxr(v161);
        while (__stlxr(v162 - 1, v161));
        if (!v162)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
      }
    }
    v217 = -1;
  }
  v163 = off_256934418[0];
  v164 = strlen(off_256934418[0]);
  if (v164 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v165 = (void *)v164;
  if (v164 >= 0x17)
  {
    v167 = (v164 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v164 | 7) != 0x17)
      v167 = v164 | 7;
    v168 = v167 + 1;
    v166 = operator new(v167 + 1);
    __p[1] = v165;
    *(_QWORD *)&v220 = v168 | 0x8000000000000000;
    __p[0] = v166;
    goto LABEL_168;
  }
  BYTE7(v220) = v164;
  v166 = __p;
  if (v164)
LABEL_168:
    memmove(v166, v163, (size_t)v165);
  *((_BYTE *)v165 + (_QWORD)v166) = 0;
  sub_2394E42E4((_QWORD *)a1, &v217, (uint64_t)__p);
  if (SBYTE7(v220) < 0)
    operator delete(__p[0]);
  v169 = off_256934438[0];
  v170 = strlen(off_256934438[0]);
  if (v170 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v171 = (void *)v170;
  if (v170 >= 0x17)
  {
    v173 = (v170 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v170 | 7) != 0x17)
      v173 = v170 | 7;
    v174 = v173 + 1;
    v172 = operator new(v173 + 1);
    __p[1] = v171;
    *(_QWORD *)&v220 = v174 | 0x8000000000000000;
    __p[0] = v172;
    goto LABEL_178;
  }
  BYTE7(v220) = v170;
  v172 = __p;
  if (v170)
LABEL_178:
    memmove(v172, v169, (size_t)v171);
  *((_BYTE *)v171 + (_QWORD)v172) = 0;
  *(_QWORD *)&__dst = 0;
  v175 = sub_2394E5C88(v214, (uint64_t)&__dst, (unsigned __int8 *)__p);
  v176 = v175;
  if (SBYTE7(v220) < 0)
  {
    operator delete(__p[0]);
    if (v176 != -1)
    {
LABEL_181:
      v177 = &(*v214)[2 * v176];
      v179 = *v177;
      v178 = (std::__shared_weak_count *)v177[1];
      if (v178)
      {
        v180 = (unint64_t *)&v178->__shared_owners_;
        do
          v181 = __ldxr(v180);
        while (__stxr(v181 + 1, v180));
        do
          v182 = __ldaxr(v180);
        while (__stlxr(v182 - 1, v180));
        if (!v182)
        {
          ((void (*)(std::__shared_weak_count *))v178->__on_zero_shared)(v178);
          std::__shared_weak_count::__release_weak(v178);
        }
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v179 + 40))(v179);
      v183 = v212;
      goto LABEL_199;
    }
  }
  else if (v175 != -1)
  {
    goto LABEL_181;
  }
  v184 = off_256934438[0];
  v185 = strlen(off_256934438[0]);
  if (v185 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v186 = (void *)v185;
  if (v185 >= 0x17)
  {
    v188 = (v185 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v185 | 7) != 0x17)
      v188 = v185 | 7;
    v189 = v188 + 1;
    v187 = operator new(v188 + 1);
    __p[1] = v186;
    *(_QWORD *)&v220 = v189 | 0x8000000000000000;
    __p[0] = v187;
    goto LABEL_196;
  }
  BYTE7(v220) = v185;
  v187 = __p;
  if (v185)
LABEL_196:
    memmove(v187, v184, (size_t)v186);
  *((_BYTE *)v186 + (_QWORD)v187) = 0;
  *(_QWORD *)&__dst = 0;
  sub_2394E4504((uint64_t)v214, (uint64_t)&__dst, (uint64_t)__p);
  v183 = v212;
  if (SBYTE7(v220) < 0)
    operator delete(__p[0]);
LABEL_199:
  v190 = &(*v214)[2 * v210];
  v191 = *v190;
  v192 = (std::__shared_weak_count *)v190[1];
  if (v192)
  {
    v193 = (unint64_t *)&v192->__shared_owners_;
    do
      v194 = __ldxr(v193);
    while (__stxr(v194 + 1, v193));
    do
      v195 = __ldaxr(v193);
    while (__stlxr(v195 - 1, v193));
    if (!v195)
    {
      ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
      std::__shared_weak_count::__release_weak(v192);
    }
  }
  v196 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v191 + 16))(v191);
  v197 = (uint64_t)(a6[1] - *a6) >> 2;
  if (v196 <= v197)
  {
    if (v196 < v197)
      a6[1] = *a6 + 4 * v196;
  }
  else
  {
    sub_23942CB44((uint64_t)a6, v196 - v197);
  }
  if ((v44 & 0x3FFFFFFFCLL) != 0)
  {
    v198 = 0;
    v199 = 0;
    while (1)
    {
      v200 = &(*v216)[2 * v218];
      v202 = *v200;
      v201 = (std::__shared_weak_count *)v200[1];
      if (v201)
      {
        v203 = (unint64_t *)&v201->__shared_owners_;
        do
          v204 = __ldxr(v203);
        while (__stxr(v204 + 1, v203));
        do
          v205 = __ldaxr(v203);
        while (__stlxr(v205 - 1, v203));
        if (!v205)
          break;
      }
      if (v199 == *(_DWORD *)(*(_QWORD *)(v202 + 40) + 4 * v198))
        goto LABEL_218;
LABEL_211:
      if (++v198 == v183)
        goto LABEL_221;
    }
    ((void (*)(std::__shared_weak_count *))v201->__on_zero_shared)(v201);
    std::__shared_weak_count::__release_weak(v201);
    if (v199 != *(_DWORD *)(*(_QWORD *)(v202 + 40) + 4 * v198))
      goto LABEL_211;
LABEL_218:
    *(_DWORD *)(*a6 + 4 * v199++) = v198;
    goto LABEL_211;
  }
LABEL_221:
  if (v47)
    operator delete(v47);
  return 1;
}

void sub_2399801AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  void *v29;

  if (a26 < 0)
    operator delete(__p);
  if (!v29)
    _Unwind_Resume(exception_object);
  operator delete(v29);
  _Unwind_Resume(exception_object);
}

BOOL sub_239980398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  void *v6[2];
  void *__p;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD *)(a2 + 12);
  switch(v4)
  {
    case 2:
      LODWORD(v6[0]) = *(unsigned __int8 *)(a2 + 8);
      sub_2399C684C(a1, (_DWORD *)(a2 + 4), (unsigned int *)v6, (float *)(a2 + 16), 0);
      break;
    case 1:
      sub_2399BC210(v6, a1, a3, a2 + 4, a2 + 8, a2 + 16, 1, 0);
      sub_2399BC214((uint64_t)v6);
      sub_239934420(v6);
      break;
    case 0:
      sub_23997AFC0(v6, a1, a2 + 4, a2 + 8);
      sub_23997AFC4((uint64_t)v6);
      if (__p)
      {
        v8 = __p;
        operator delete(__p);
      }
      break;
  }
  return *(_DWORD *)(a3 + 76) != 2;
}

void sub_23998049C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_2399804D8(size_t a1, float *a2, uint64_t a3)
{
  std::chrono::system_clock::time_point v6;
  int v7;
  uint64_t v8;
  size_t v9;
  _OWORD *v10;
  char *v11;
  char *v12;
  size_t v13;
  size_t v14;
  void **p_dst;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  size_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  char *v28;
  size_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  char *v35;
  size_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  _QWORD *v43;
  unint64_t *p_shared_owners;
  unint64_t v45;
  unint64_t v46;
  _DWORD *v47;
  uint64_t v48;
  unsigned int v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void **v55;
  unint64_t v56;
  BOOL v57;
  unint64_t v58;
  char *v59;
  _DWORD *v60;
  uint64_t v61;
  char *v62;
  float32x4_t v63;
  unint64_t v64;
  uint8x8_t v65;
  unint64_t v66;
  uint64_t **v67;
  uint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t *v75;
  std::__shared_weak_count *v76;
  uint64_t v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t **v82;
  uint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  int v94;
  unsigned int v95;
  _QWORD *v96;
  _QWORD *v97;
  char *v98;
  char *v99;
  uint64_t *v100;
  std::__shared_weak_count *v101;
  uint64_t v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  unsigned int v106;
  char v107;
  uint64_t v108;
  size_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  int v114;
  int v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  unint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int v136;
  uint64_t *v137;
  uint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  int v144;
  uint64_t *v145;
  std::__shared_weak_count *v146;
  uint64_t v147;
  unint64_t *v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  std::chrono::system_clock::time_point v152;
  uint64_t *v153;
  uint64_t v154;
  std::__shared_weak_count *v155;
  unint64_t *v156;
  unint64_t v157;
  unint64_t v158;
  std::chrono::system_clock::time_point v159;
  _BOOL8 v160;
  std::chrono::system_clock::time_point v161;
  _QWORD *v162;
  _QWORD *v163;
  void *v164;
  unsigned int v166;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  _BOOL4 v168;
  uint64_t v169;
  uint64_t v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  uint64_t v174;
  size_t __sz;
  size_t __sza;
  int v177;
  char v178;
  int v179;
  uint64_t v180;
  unsigned int v181;
  uint64_t v182;
  int v183;
  void *v184;
  void *v185;
  char *v186;
  int v187;
  void *__p[2];
  void *v189[2];
  int v190;
  unsigned int v191[4];
  void **__dst;
  char *v193;
  unint64_t v194;
  char *v195;
  char *v196;
  char *v197;
  _DWORD *v198;
  _BYTE *v199;
  uint64_t v200;
  unsigned int v201;
  char *v202;
  char *v203;
  uint64_t v204;
  _DWORD *v205;
  _DWORD *v206;
  uint64_t v207;
  char v208;
  unsigned int *v209;

  v6.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  v208 = 0;
  v7 = sub_239940BB8(a1, 1, &v208, 0.001);
  v206 = 0;
  v207 = 0;
  v202 = 0;
  v203 = 0;
  v204 = 0;
  v205 = 0;
  v201 = 0;
  sub_23997D524(a1, a2, (uint64_t *)&v205, &v202, &v201);
  v199 = 0;
  v200 = 0;
  v197 = 0;
  v198 = 0;
  v195 = 0;
  v196 = 0;
  if (v201)
  {
    v9 = 36 * v201;
    v10 = operator new(v9);
    v195 = (char *)v10;
    v11 = (char *)v10 + v9;
    v197 = (char *)v10 + v9;
    do
    {
      *((_DWORD *)v10 + 8) = 1065353216;
      *v10 = xmmword_239F033B4;
      v10[1] = unk_239F033C4;
      v10 = (_OWORD *)((char *)v10 + 36);
      v9 -= 36;
    }
    while (v9);
    v196 = v11;
  }
  sub_23997F044(a1, v8, &v195, (uint64_t *)&v202, &v205, &v198);
  v169 = (uint64_t)a2;
  v170 = a3;
  rep = v6.__d_.__rep_;
  if (!v7)
  {
    v168 = 0;
    v16 = -1;
    v17 = -1;
    v171 = -1;
    v18 = -1;
    goto LABEL_55;
  }
  v12 = off_256934448[0];
  v13 = strlen(off_256934448[0]);
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v14 = v13;
  if (v13 >= 0x17)
  {
    v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v19 = v13 | 7;
    v20 = v19 + 1;
    p_dst = (void **)operator new(v19 + 1);
    v194 = v20 | 0x8000000000000000;
    __dst = p_dst;
    v193 = (char *)v14;
    goto LABEL_14;
  }
  HIBYTE(v194) = v13;
  p_dst = (void **)&__dst;
  if (v13)
LABEL_14:
    memmove(p_dst, v12, v14);
  *((_BYTE *)p_dst + v14) = 0;
  __p[0] = 0;
  __p[1] = 0;
  v189[0] = 0;
  v18 = sub_23958C0D8((uint64_t **)(a1 + 80), (uint64_t)__p, (unsigned __int8 *)&__dst);
  if (SHIBYTE(v189[0]) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v194) & 0x80000000) == 0)
    {
LABEL_17:
      if (v18 != -1)
        goto LABEL_18;
LABEL_24:
      v168 = 0;
      v16 = -1;
      v17 = -1;
      v171 = -1;
      goto LABEL_55;
    }
  }
  else if ((SHIBYTE(v194) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete(__dst);
  if (v18 == -1)
    goto LABEL_24;
LABEL_18:
  v21 = off_256934428[0];
  v22 = strlen(off_256934428[0]);
  if (v22 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v23 = (void *)v22;
  if (v22 >= 0x17)
  {
    v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17)
      v25 = v22 | 7;
    v26 = v25 + 1;
    v24 = operator new(v25 + 1);
    __p[1] = v23;
    v189[0] = (void *)(v26 | 0x8000000000000000);
    __p[0] = v24;
    goto LABEL_28;
  }
  HIBYTE(v189[0]) = v22;
  v24 = __p;
  if (v22)
LABEL_28:
    memmove(v24, v21, (size_t)v23);
  *((_BYTE *)v23 + (_QWORD)v24) = 0;
  LODWORD(__dst) = 0;
  v171 = sub_2399346C0((uint64_t **)(a1 + 56), (uint64_t)&__dst, (unsigned __int8 *)__p);
  if ((SHIBYTE(v189[0]) & 0x80000000) == 0)
  {
    v27 = v171;
    if (v171 != -1)
      goto LABEL_31;
LABEL_36:
    v168 = 0;
    v16 = -1;
    v17 = -1;
    v171 = v27;
    goto LABEL_55;
  }
  operator delete(__p[0]);
  v27 = v171;
  if (v171 == -1)
    goto LABEL_36;
LABEL_31:
  v28 = off_256934418[0];
  v29 = strlen(off_256934418[0]);
  if (v29 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v30 = (void *)v29;
  if (v29 >= 0x17)
  {
    v32 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v29 | 7) != 0x17)
      v32 = v29 | 7;
    v33 = v32 + 1;
    v31 = operator new(v32 + 1);
    __p[1] = v30;
    v189[0] = (void *)(v33 | 0x8000000000000000);
    __p[0] = v31;
  }
  else
  {
    HIBYTE(v189[0]) = v29;
    v31 = __p;
    if (!v29)
      goto LABEL_41;
  }
  memmove(v31, v28, (size_t)v30);
LABEL_41:
  *((_BYTE *)v30 + (_QWORD)v31) = 0;
  LODWORD(v193) = 0;
  __dst = 0;
  v34 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&__dst, (unsigned __int8 *)__p);
  v17 = v34;
  if (SHIBYTE(v189[0]) < 0)
  {
    operator delete(__p[0]);
    if (v17 != -1)
    {
LABEL_43:
      v35 = off_256934438[0];
      v36 = strlen(off_256934438[0]);
      if (v36 > 0x7FFFFFFFFFFFFFF7)
        sub_23941A5AC();
      v37 = (void *)v36;
      if (v36 >= 0x17)
      {
        v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v36 | 7) != 0x17)
          v39 = v36 | 7;
        v40 = v39 + 1;
        v38 = operator new(v39 + 1);
        __p[1] = v37;
        v189[0] = (void *)(v40 | 0x8000000000000000);
        __p[0] = v38;
      }
      else
      {
        HIBYTE(v189[0]) = v36;
        v38 = __p;
        if (!v36)
        {
LABEL_53:
          *((_BYTE *)v37 + (_QWORD)v38) = 0;
          __dst = 0;
          v16 = sub_2394E5C88((uint64_t **)(a1 + 80), (uint64_t)&__dst, (unsigned __int8 *)__p);
          v168 = v16 != -1;
          if (SHIBYTE(v189[0]) < 0)
            operator delete(__p[0]);
          goto LABEL_55;
        }
      }
      memmove(v38, v35, (size_t)v37);
      goto LABEL_53;
    }
  }
  else if (v34 != -1)
  {
    goto LABEL_43;
  }
  v168 = 0;
  v16 = -1;
LABEL_55:
  v41 = *(_QWORD *)(a1 + 80) + 16 * v16;
  v43 = *(_QWORD **)v41;
  v42 = *(std::__shared_weak_count **)(v41 + 8);
  if (v42)
  {
    p_shared_owners = (unint64_t *)&v42->__shared_owners_;
    do
      v45 = __ldxr(p_shared_owners);
    while (__stxr(v45 + 1, p_shared_owners));
    do
      v46 = __ldaxr(p_shared_owners);
    while (__stlxr(v46 - 1, p_shared_owners));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
  }
  v191[0] = v18;
  v191[1] = v171;
  v191[2] = v17;
  v191[3] = v16;
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v189 = 0u;
  v190 = 1065353216;
  __dst = 0;
  v193 = 0;
  v194 = 0;
  v47 = v198;
  if (v199 != (_BYTE *)v198)
  {
    v166 = v18;
    v48 = 0;
    v49 = 0;
    v50 = 0;
    v51 = (v199 - (_BYTE *)v198) >> 2;
    v174 = v17;
    do
    {
      v173 = v50;
      v187 = 0;
      v52 = v47[v48];
      v187 = v47[v48];
      if (v49 >= (int)v51 - 1)
      {
        v53 = (*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
        if (v52 >= v53)
        {
LABEL_67:
          v54 = (v53 - v52);
          v55 = __dst;
          v56 = (v193 - (char *)__dst) >> 2;
          v57 = v54 >= v56;
          v58 = v54 - v56;
          if (v54 > v56)
            goto LABEL_68;
LABEL_130:
          if (!v57)
            v193 = (char *)v55 + 4 * v54;
          goto LABEL_132;
        }
      }
      else
      {
        LODWORD(v53) = v47[v49 + 1];
        if (v52 >= v53)
          goto LABEL_67;
      }
      v172 = v49;
      v177 = v53;
      v179 = v205[v52];
      __sz = v53;
      while (2)
      {
        v59 = v195;
        v60 = operator new(0xCuLL);
        v185 = v60 + 3;
        v186 = (char *)(v60 + 3);
        *(_QWORD *)v60 = -1;
        v60[2] = -1;
        v184 = v60;
        LODWORD(v182) = v52;
        sub_23996362C(a1, (unsigned int *)&v182, (uint64_t)&v184);
        v61 = 0;
        v183 = 0;
        v62 = &v59[36 * v179];
        v182 = 0;
LABEL_74:
        while (2)
        {
          if (__p[1])
          {
            v64 = *((unsigned int *)v184 + v61);
            v65 = (uint8x8_t)vcnt_s8((int8x8_t)__p[1]);
            v65.i16[0] = vaddlv_u8(v65);
            if (v65.u32[0] > 1uLL)
            {
              v66 = *((unsigned int *)v184 + v61);
              if (__p[1] <= (void *)v64)
                v66 = v64 % (unint64_t)__p[1];
            }
            else
            {
              v66 = (LODWORD(__p[1]) - 1) & v64;
            }
            v67 = (uint64_t **)*((_QWORD *)__p[0] + v66);
            if (v67)
            {
              v68 = *v67;
              if (*v67)
              {
                v69 = (unint64_t)__p[1] - 1;
                if (v65.u32[0] < 2uLL)
                {
                  while (1)
                  {
                    v70 = v68[1];
                    if (v70 == v64)
                    {
                      if (*((_DWORD *)v68 + 4) == (_DWORD)v64)
                        goto LABEL_100;
                    }
                    else if ((v70 & v69) != v66)
                    {
                      goto LABEL_94;
                    }
                    v68 = (uint64_t *)*v68;
                    if (!v68)
                      goto LABEL_94;
                  }
                }
                do
                {
                  v71 = v68[1];
                  if (v71 == v64)
                  {
                    if (*((_DWORD *)v68 + 4) == (_DWORD)v64)
                    {
LABEL_100:
                      if (v65.u32[0] > 1uLL)
                      {
                        v81 = *((unsigned int *)v184 + v61);
                        if (__p[1] <= (void *)v64)
                          v81 = v64 % (unint64_t)__p[1];
                      }
                      else
                      {
                        v81 = (LODWORD(__p[1]) - 1) & v64;
                      }
                      v82 = (uint64_t **)*((_QWORD *)__p[0] + v81);
                      if (!v82 || (v83 = *v82) == 0)
LABEL_231:
                        sub_23941D898("unordered_map::at: key not found");
                      if (v65.u32[0] < 2uLL)
                      {
                        while (1)
                        {
                          v84 = v83[1];
                          if (v84 == v64)
                          {
                            if (*((_DWORD *)v83 + 4) == (_DWORD)v64)
                              goto LABEL_112;
                          }
                          else if ((v84 & v69) != v81)
                          {
                            goto LABEL_231;
                          }
                          v83 = (uint64_t *)*v83;
                          if (!v83)
                            goto LABEL_231;
                        }
                      }
                      while (2)
                      {
                        v85 = v83[1];
                        if (v85 != v64)
                        {
                          if ((void *)v85 >= __p[1])
                            v85 %= (unint64_t)__p[1];
                          if (v85 != v81)
                            goto LABEL_231;
LABEL_115:
                          v83 = (uint64_t *)*v83;
                          if (!v83)
                            goto LABEL_231;
                          continue;
                        }
                        break;
                      }
                      if (*((_DWORD *)v83 + 4) != (_DWORD)v64)
                        goto LABEL_115;
LABEL_112:
                      *((_DWORD *)&v182 + v61++) = *((_DWORD *)v83 + 5);
                      if (v61 == 3)
                        goto LABEL_121;
                      goto LABEL_74;
                    }
                  }
                  else
                  {
                    if ((void *)v71 >= __p[1])
                      v71 %= (unint64_t)__p[1];
                    if (v71 != v66)
                      break;
                  }
                  v68 = (uint64_t *)*v68;
                }
                while (v68);
              }
            }
          }
LABEL_94:
          (*(void (**)(_QWORD *))(*v43 + 48))(v43);
          v72 = (*(uint64_t (**)(_QWORD *))(*v43 + 16))(v43);
          v181 = *((_DWORD *)v184 + v61);
          v209 = &v181;
          v73 = v72 - 1;
          *((_DWORD *)sub_2395EC77C((uint64_t)__p, &v181, (uint64_t)&unk_239EC6E98, &v209) + 5) = v72 - 1;
          *((_DWORD *)&v182 + v61) = v72 - 1;
          v74 = *((unsigned int *)v184 + v61);
          v75 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
          v77 = *v75;
          v76 = (std::__shared_weak_count *)v75[1];
          if (v76)
          {
            v78 = (unint64_t *)&v76->__shared_owners_;
            do
              v79 = __ldxr(v78);
            while (__stxr(v79 + 1, v78));
            do
              v80 = __ldaxr(v78);
            while (__stlxr(v80 - 1, v78));
            if (!v80)
            {
              ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
              std::__shared_weak_count::__release_weak(v76);
            }
          }
          v63 = *(float32x4_t *)(*(_QWORD *)(v77 + 40) + 16 * v74);
          *(float32x2_t *)(v43[5] + 8 * v73) = vmla_laneq_f32(vmla_lane_f32(vmla_n_f32(0, *(float32x2_t *)v62, v63.f32[0]), *(float32x2_t *)(v62 + 12), *(float32x2_t *)v63.f32, 1), *(float32x2_t *)(v62 + 24), v63, 2);
          if (++v61 != 3)
            continue;
          break;
        }
LABEL_121:
        v86 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v174);
        v87 = *v86;
        v88 = (std::__shared_weak_count *)v86[1];
        LODWORD(v53) = v177;
        if (v88)
        {
          v89 = (unint64_t *)&v88->__shared_owners_;
          do
            v90 = __ldxr(v89);
          while (__stxr(v90 + 1, v89));
          do
            v91 = __ldaxr(v89);
          while (__stlxr(v91 - 1, v89));
          if (!v91)
          {
            ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
            std::__shared_weak_count::__release_weak(v88);
          }
        }
        v92 = *(_QWORD *)(v87 + 40) + 12 * v52;
        *(_QWORD *)v92 = v182;
        *(_DWORD *)(v92 + 8) = v183;
        if (v184)
        {
          v185 = v184;
          operator delete(v184);
        }
        if (++v52 != __sz)
          continue;
        break;
      }
      LODWORD(v52) = v187;
      v49 = v172;
      v54 = (v177 - v187);
      v55 = __dst;
      v93 = (v193 - (char *)__dst) >> 2;
      v57 = v54 >= v93;
      v58 = v54 - v93;
      if (v54 <= v93)
        goto LABEL_130;
LABEL_68:
      sub_2394EE834((void **)&__dst, v58);
      LODWORD(v52) = v187;
LABEL_132:
      if (v52 < v53)
      {
        do
        {
          *((_DWORD *)__dst + (v52 - v187)) = v52;
          LODWORD(v52) = v52 + 1;
        }
        while ((_DWORD)v53 != (_DWORD)v52);
      }
      v94 = sub_23998166C((_QWORD *)a1, (unsigned int **)&__dst, v191);
      if (v94)
      {
        LODWORD(v184) = v53 - 1;
        sub_23993418C(a1, &v187, (int *)&v184);
      }
      if (v189[1])
      {
        v95 = v49;
        v96 = v189[0];
        if (v189[0])
        {
          do
          {
            v97 = (_QWORD *)*v96;
            operator delete(v96);
            v96 = v97;
          }
          while (v97);
        }
        v189[0] = 0;
        v98 = (char *)__p[1];
        if (__p[1])
        {
          v99 = 0;
          do
            *((_QWORD *)__p[0] + (_QWORD)v99++) = 0;
          while (v98 != v99);
        }
        v189[1] = 0;
        v49 = v95;
      }
      v50 = v173 | v94;
      v47 = v198;
      v51 = (v199 - (_BYTE *)v198) >> 2;
      v48 = ++v49;
    }
    while (v51 > v49);
    if ((v50 & 1) != 0)
    {
      v100 = (uint64_t *)(*(_QWORD *)(a1 + 80) + 16 * v191[0]);
      v102 = *v100;
      v101 = (std::__shared_weak_count *)v100[1];
      if (v101)
      {
        v103 = (unint64_t *)&v101->__shared_owners_;
        do
          v104 = __ldxr(v103);
        while (__stxr(v104 + 1, v103));
        do
          v105 = __ldaxr(v103);
        while (__stlxr(v105 - 1, v103));
        if (!v105)
        {
          ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
          std::__shared_weak_count::__release_weak(v101);
        }
      }
      v106 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v102 + 16))(v102);
      v107 = v106;
      v108 = v106;
      v109 = 4 * v106;
      if (v106)
      {
        v110 = (char *)operator new(4 * v106);
        bzero(v110, v109);
        v111 = *(_QWORD *)(a1 + 160);
        if (v111 != *(_QWORD *)(a1 + 152))
        {
LABEL_152:
          __sza = v109;
          v178 = v107;
          v180 = v108;
          v112 = 0;
          v113 = 0;
          v114 = 0;
          v115 = -1;
          while (1)
          {
            v117 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v171);
            v118 = *v117;
            v119 = (std::__shared_weak_count *)v117[1];
            if (!v119)
              goto LABEL_160;
            v120 = (unint64_t *)&v119->__shared_owners_;
            do
              v121 = __ldxr(v120);
            while (__stxr(v121 + 1, v120));
            do
              v122 = __ldaxr(v120);
            while (__stlxr(v122 - 1, v120));
            if (!v122)
            {
              ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
              std::__shared_weak_count::__release_weak(v119);
              if (v115 != *(_DWORD *)(*(_QWORD *)(v118 + 40) + 4 * v112))
              {
LABEL_161:
                v123 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v171);
                v124 = *v123;
                v125 = (std::__shared_weak_count *)v123[1];
                if (v125)
                {
                  v126 = (unint64_t *)&v125->__shared_owners_;
                  do
                    v127 = __ldxr(v126);
                  while (__stxr(v127 + 1, v126));
                  do
                    v128 = __ldaxr(v126);
                  while (__stlxr(v128 - 1, v126));
                  if (!v128)
                  {
                    ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
                    std::__shared_weak_count::__release_weak(v125);
                  }
                }
                v115 = *(_DWORD *)(*(_QWORD *)(v124 + 40) + 4 * v112);
                *(_DWORD *)&v110[4 * v114++] = v115;
              }
            }
            else
            {
LABEL_160:
              if (v115 != *(_DWORD *)(*(_QWORD *)(v118 + 40) + 4 * v112))
                goto LABEL_161;
            }
            v111 = *(_QWORD *)(a1 + 152);
            v116 = *(_QWORD *)(a1 + 160);
            v112 = ++v113;
            if (v113 >= (unint64_t)((v116 - v111) >> 2))
            {
              v107 = v178;
              v108 = v180;
              v109 = __sza;
              if (v180)
                goto LABEL_170;
LABEL_174:
              v129 = 0;
              if (v108)
                goto LABEL_175;
              goto LABEL_181;
            }
          }
        }
      }
      else
      {
        v110 = 0;
        v111 = *(_QWORD *)(a1 + 160);
        if (v111 != *(_QWORD *)(a1 + 152))
          goto LABEL_152;
      }
      v116 = v111;
      if (!v108)
        goto LABEL_174;
LABEL_170:
      v129 = operator new(v109);
      bzero(v129, v109);
      if (v108)
      {
LABEL_175:
        if (v108 == 1)
        {
          v130 = 0;
        }
        else
        {
          v131 = 0;
          v130 = v108 - (v107 & 1);
          do
          {
            v132 = &v110[4 * v131];
            v134 = *(unsigned int *)v132;
            v133 = *((unsigned int *)v132 + 1);
            *((_DWORD *)v129 + v134) = v131;
            *((_DWORD *)v129 + v133) = v131 + 1;
            v131 += 2;
          }
          while (v130 != v131);
          if ((v107 & 1) == 0)
            goto LABEL_181;
        }
        do
        {
          *((_DWORD *)v129 + *(unsigned int *)&v110[4 * v130]) = v130;
          ++v130;
        }
        while (v108 != v130);
      }
LABEL_181:
      if (v116 != v111)
      {
        v135 = 0;
        v136 = 0;
        while (1)
        {
          v137 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v171);
          v138 = *v137;
          v139 = (std::__shared_weak_count *)v137[1];
          if (!v139)
            goto LABEL_190;
          v140 = (unint64_t *)&v139->__shared_owners_;
          do
            v141 = __ldxr(v140);
          while (__stxr(v141 + 1, v140));
          do
            v142 = __ldaxr(v140);
          while (__stlxr(v142 - 1, v140));
          if (!v142)
          {
            ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
            std::__shared_weak_count::__release_weak(v139);
            v151 = *(unsigned int *)(*(_QWORD *)(v138 + 40) + 4 * v135);
            v144 = *((_DWORD *)v129 + v151);
            if (v144 != (_DWORD)v151)
            {
LABEL_191:
              v145 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v171);
              v147 = *v145;
              v146 = (std::__shared_weak_count *)v145[1];
              if (v146)
              {
                v148 = (unint64_t *)&v146->__shared_owners_;
                do
                  v149 = __ldxr(v148);
                while (__stxr(v149 + 1, v148));
                do
                  v150 = __ldaxr(v148);
                while (__stlxr(v150 - 1, v148));
                if (!v150)
                {
                  ((void (*)(std::__shared_weak_count *))v146->__on_zero_shared)(v146);
                  std::__shared_weak_count::__release_weak(v146);
                }
              }
              *(_DWORD *)(*(_QWORD *)(v147 + 40) + 4 * v135) = v144;
            }
          }
          else
          {
LABEL_190:
            v143 = *(unsigned int *)(*(_QWORD *)(v138 + 40) + 4 * v135);
            v144 = *((_DWORD *)v129 + v143);
            if (v144 != (_DWORD)v143)
              goto LABEL_191;
          }
          v135 = ++v136;
          if (v136 >= (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2))
            goto LABEL_200;
        }
      }
      if (v129)
LABEL_200:
        operator delete(v129);
      v18 = v166;
      if (v110)
        operator delete(v110);
    }
  }
  v152.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (*(_BYTE *)(v170 + 80))
  {
    *(double *)v170 = (double)(v152.__d_.__rep_ - rep) / 1000000.0;
    v153 = (uint64_t *)(*(_QWORD *)(a1 + 80) + 16 * v18);
    v154 = *v153;
    v155 = (std::__shared_weak_count *)v153[1];
    if (v155)
    {
      v156 = (unint64_t *)&v155->__shared_owners_;
      do
        v157 = __ldxr(v156);
      while (__stxr(v157 + 1, v156));
      do
        v158 = __ldaxr(v156);
      while (__stlxr(v158 - 1, v156));
      if (!v158)
      {
        ((void (*)(std::__shared_weak_count *))v155->__on_zero_shared)(v155);
        std::__shared_weak_count::__release_weak(v155);
      }
    }
    *(_QWORD *)(v170 + 40) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v154 + 16))(v154);
  }
  v159.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (!v168)
  {
    v160 = 0;
    v161.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (!*(_BYTE *)(v170 + 80))
      goto LABEL_216;
    goto LABEL_215;
  }
  v160 = sub_239980398(a1, v169, v170);
  v161.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (*(_BYTE *)(v170 + 80))
  {
LABEL_215:
    *(double *)(v170 + 48) = (double)(v161.__d_.__rep_ - v159.__d_.__rep_) / 1000000.0;
    *(_QWORD *)(v170 + 56) = *(unsigned __int8 *)(v169 + 8);
  }
LABEL_216:
  if (__dst)
  {
    v193 = (char *)__dst;
    operator delete(__dst);
  }
  v162 = v189[0];
  if (v189[0])
  {
    do
    {
      v163 = (_QWORD *)*v162;
      operator delete(v162);
      v162 = v163;
    }
    while (v163);
  }
  v164 = __p[0];
  __p[0] = 0;
  if (v164)
    operator delete(v164);
  if (v195)
    operator delete(v195);
  if (v198)
  {
    v199 = v198;
    operator delete(v198);
  }
  if (v202)
  {
    v203 = v202;
    operator delete(v202);
  }
  if (v205)
  {
    v206 = v205;
    operator delete(v205);
  }
  return v160;
}

void sub_239981448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,void *a54)
{
  void *v55;
  void *v56;
  void *v57;

  if (a32 < 0)
    operator delete(__p);
  if (a44)
  {
    operator delete(a44);
    v55 = a47;
    if (!a47)
    {
LABEL_5:
      v56 = a51;
      if (!a51)
        goto LABEL_6;
      goto LABEL_10;
    }
  }
  else
  {
    v55 = a47;
    if (!a47)
      goto LABEL_5;
  }
  operator delete(v55);
  v56 = a51;
  if (!a51)
  {
LABEL_6:
    v57 = a54;
    if (!a54)
      goto LABEL_7;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(v56);
  v57 = a54;
  if (!a54)
LABEL_7:
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(v57);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23998166C(_QWORD *a1, unsigned int **a2, unsigned int *a3)
{
  uint64_t v6;
  unsigned int *v7;
  _BYTE *v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v19;
  void *__p;
  _BYTE *v21;
  uint64_t v22;
  void *v23;
  _BYTE *v24;
  uint64_t v25;
  int v26;
  int v27;

  v27 = -1;
  v26 = -1;
  v6 = sub_239982F28((uint64_t)a1, a2, a3, &v27, &v26);
  if ((_DWORD)v6)
  {
    v23 = 0;
    v24 = 0;
    v25 = 0;
    __p = 0;
    v21 = 0;
    v22 = 0;
    sub_23998434C((uint64_t)a1, (uint64_t *)a2, (uint64_t)a3, &v27, &v26, &v23, (char **)&__p);
    v7 = (unsigned int *)v23;
    v8 = v24;
    v9 = (unsigned int *)__p;
    if (v24 - (_BYTE *)v23 < (unint64_t)(v21 - (_BYTE *)__p))
    {
      v23 = __p;
      v24 = v21;
      __p = v7;
      v21 = v8;
      v10 = v25;
      v25 = v22;
      v22 = v10;
      v7 = v9;
    }
    v19 = 0;
    v11 = *v7;
    v12 = (uint64_t *)(a1[7] + 16 * a3[1]);
    v14 = *v12;
    v13 = (std::__shared_weak_count *)v12[1];
    if (v13)
    {
      p_shared_owners = (unint64_t *)&v13->__shared_owners_;
      do
        v16 = __ldxr(p_shared_owners);
      while (__stxr(v16 + 1, p_shared_owners));
      do
        v17 = __ldaxr(p_shared_owners);
      while (__stlxr(v17 - 1, p_shared_owners));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
    v19 = *(_DWORD *)(*(_QWORD *)(v14 + 40) + 4 * v11);
    sub_239984D38(a1, (uint64_t *)&__p, a3, &v19);
    sub_23998166C(a1, &v23, a3);
    sub_23998166C(a1, &__p, a3);
    if (__p)
    {
      v21 = __p;
      operator delete(__p);
    }
    if (v23)
    {
      v24 = v23;
      operator delete(v23);
    }
  }
  return v6;
}

void sub_2399817EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  void *v15;

  if (__p)
  {
    operator delete(__p);
    v15 = a13;
    if (!a13)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v15 = a13;
    if (!a13)
      goto LABEL_3;
  }
  operator delete(v15);
  _Unwind_Resume(exception_object);
}

BOOL sub_23998182C(float *a1, float *a2)
{
  uint64_t v3;
  uint64_t v4;

  v4 = 0x3F50624DD2F1A9FCLL;
  v3 = 0x3EB0C6F7A0B5ED8DLL;
  return sub_239941054(a1, a1 + 2, a2, a2 + 2, (double *)&v4, (double *)&v3) != 3;
}

uint64_t sub_23998188C(uint64_t a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, int *a5, uint64_t a6)
{
  uint64_t v8;
  unsigned int v9;
  unsigned int i;
  uint64_t *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int *v24;
  _BYTE *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t *v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  _DWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _OWORD *v56;
  __int128 *v57;
  uint64_t v58;
  __int128 v59;
  int v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  uint64_t *v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  unsigned int *v71;
  _BYTE *v72;
  uint64_t v73;
  int v74;
  uint64_t *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  uint64_t *v82;
  uint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  unsigned int *v88;
  _BYTE *v89;
  uint64_t v90;
  _BYTE *v91;
  int64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  _BYTE *v97;
  _DWORD *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  _OWORD *v103;
  __int128 *v104;
  uint64_t v105;
  __int128 v106;
  int v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  _BYTE *v117;
  int64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  _BYTE *v123;
  _DWORD *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  _OWORD *v129;
  __int128 *v130;
  uint64_t v131;
  __int128 v132;
  int v133;
  _BYTE *v134;
  int64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  _BYTE *v140;
  _DWORD *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  _OWORD *v146;
  __int128 *v147;
  uint64_t v148;
  __int128 v149;
  int v150;
  unint64_t v151;
  unint64_t v152;
  char *v153;
  _BYTE *v154;
  uint64_t v155;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  std::__shared_weak_count *v162;
  unint64_t *v163;
  unint64_t v164;
  unint64_t v165;
  unsigned int v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  std::__shared_weak_count *v170;
  unint64_t *v171;
  unint64_t v172;
  unint64_t v173;
  unsigned int *v174;
  uint64_t v175;
  _DWORD *v176;
  int v177;
  int *v178;
  int v179;
  int v180;
  int v181;
  BOOL v182;
  _BYTE *v184;
  _BYTE *v185;
  int64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  unint64_t v190;
  _BYTE *v191;
  void **v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  _OWORD *v197;
  __int128 *v198;
  uint64_t v199;
  __int128 v200;
  void *v201;
  unsigned int *v202;
  uint64_t v203;
  unsigned int v204;
  float *v205;
  uint64_t *v206;
  uint64_t v207;
  std::__shared_weak_count *v208;
  unint64_t *v209;
  unint64_t v210;
  unint64_t v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  unint64_t v219;
  unsigned int *v220;
  uint64_t v221;
  unsigned int *v222;
  int v223;
  uint64_t v224;
  uint64_t v225;
  _DWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t *v229;
  uint64_t v230;
  std::__shared_weak_count *v231;
  unint64_t *v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  uint64_t v237;
  std::__shared_weak_count *v238;
  unint64_t *v239;
  unint64_t v240;
  unint64_t v241;
  float *v242;
  float *v243;
  float v244;
  float v245;
  float v246;
  float v247;
  uint64_t *v248;
  uint64_t v249;
  std::__shared_weak_count *v250;
  unint64_t *v251;
  unint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  std::__shared_weak_count *v257;
  unint64_t *v258;
  unint64_t v259;
  unint64_t v260;
  float v261;
  float *v262;
  float *v263;
  float v264;
  float v265;
  float v266;
  float v267;
  float v268;
  float v269;
  unint64_t v270;
  void *v271;
  int64_t v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  unint64_t v276;
  char *v277;
  float *v278;
  unint64_t v279;
  unint64_t v280;
  float *v281;
  unint64_t v282;
  unint64_t v283;
  uint64_t v284;
  unint64_t v285;
  const float *v286;
  float *v287;
  uint64_t v288;
  int v289;
  char *v290;
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  unint64_t v294;
  int v295;
  int v296;
  unint64_t v297;
  float *v298;
  unsigned int v299;
  unint64_t v300;
  float *v301;
  unint64_t v302;
  void *v303;
  _BOOL4 v305;
  void *v308;
  float *v309;
  float *v310;
  void *v311;
  char *v312;
  char *v313;
  void *v314;
  unint64_t v315;
  uint64_t v316;
  void *__p;
  char *v318;
  char *v319;
  unsigned int v320;
  _DWORD v321[6];
  float32x4x2_t v322;

  v8 = a1 + 104;
  sub_239962B1C((uint64_t)v321, (_QWORD *)(a1 + 104), a2);
  v9 = sub_239962B44(v321);
  v320 = v9;
  __p = 0;
  v318 = 0;
  v319 = 0;
  v314 = 0;
  v315 = 0;
  v316 = 0;
  if (v9 == -1)
  {
    v154 = 0;
    v153 = 0;
    goto LABEL_189;
  }
  for (i = v9; i != -1; v320 = i)
  {
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
    v12 = *v11;
    v13 = (std::__shared_weak_count *)v11[1];
    if (v13)
    {
      p_shared_owners = (unint64_t *)&v13->__shared_owners_;
      do
        v15 = __ldxr(p_shared_owners);
      while (__stxr(v15 + 1, p_shared_owners));
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
    if (((*(_QWORD *)(*(_QWORD *)(v12 + 40) + (((unint64_t)i >> 3) & 0x1FFFFFF8)) >> i) & 1) != 0)
    {
      v17 = *a5;
      v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a4[1]);
      v19 = *v18;
      v20 = (std::__shared_weak_count *)v18[1];
      if (v20)
      {
        v21 = (unint64_t *)&v20->__shared_owners_;
        do
          v22 = __ldxr(v21);
        while (__stxr(v22 + 1, v21));
        do
          v23 = __ldaxr(v21);
        while (__stlxr(v23 - 1, v21));
        if (!v23)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      v24 = (unsigned int *)sub_239962518(v8, &v320);
      if (v17 == *(_DWORD *)(*(_QWORD *)(v19 + 40) + 4 * *(unsigned int *)(sub_239962518(v8, v24) + 16)))
      {
        v25 = v318;
        if (v318 < v319)
        {
          *(_DWORD *)v318 = v320;
          v26 = (uint64_t)(v25 + 4);
          goto LABEL_104;
        }
        v44 = __p;
        v45 = v318 - (_BYTE *)__p;
        v46 = (v318 - (_BYTE *)__p) >> 2;
        v47 = v46 + 1;
        if ((unint64_t)(v46 + 1) >> 62)
          goto LABEL_345;
        v48 = v319 - (_BYTE *)__p;
        if ((v319 - (_BYTE *)__p) >> 1 > v47)
          v47 = v48 >> 1;
        if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFFCLL)
          v49 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v49 = v47;
        if (v49)
        {
          if (v49 >> 62)
            goto LABEL_347;
          v50 = operator new(4 * v49);
          v51 = &v50[4 * v46];
          *v51 = v320;
          v26 = (uint64_t)(v51 + 1);
          if (v25 != v44)
          {
LABEL_44:
            v52 = v25 - 4 - v44;
            if (v52 < 0x2C)
              goto LABEL_357;
            if ((unint64_t)(v25 - &v50[v45]) < 0x20)
              goto LABEL_357;
            v53 = (v52 >> 2) + 1;
            v54 = 4 * (v53 & 0x7FFFFFFFFFFFFFF8);
            v55 = &v25[-v54];
            v51 = (_DWORD *)((char *)v51 - v54);
            v56 = &v50[4 * v46 - 16];
            v57 = (__int128 *)(v25 - 16);
            v58 = v53 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v59 = *v57;
              *(v56 - 1) = *(v57 - 1);
              *v56 = v59;
              v56 -= 2;
              v57 -= 2;
              v58 -= 8;
            }
            while (v58);
            v25 = v55;
            if (v53 != (v53 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_357:
              do
              {
                v60 = *((_DWORD *)v25 - 1);
                v25 -= 4;
                *--v51 = v60;
              }
              while (v25 != v44);
            }
            v25 = __p;
            __p = v51;
            v318 = (char *)v26;
            v319 = &v50[4 * v49];
            if (!v25)
            {
LABEL_104:
              v318 = (char *)v26;
              v108 = v315;
              if (v315 == v316 << 6)
              {
                if ((uint64_t)(v315 + 1) < 0)
                  sub_2394189F8();
                v109 = v316 << 7;
                if (v316 << 7 <= (v315 & 0xFFFFFFFFFFFFFFC0) + 64)
                  v109 = (v315 & 0xFFFFFFFFFFFFFFC0) + 64;
                if (v315 <= 0x3FFFFFFFFFFFFFFELL)
                  v110 = v109;
                else
                  v110 = 0x7FFFFFFFFFFFFFFFLL;
                goto LABEL_111;
              }
              goto LABEL_112;
            }
LABEL_103:
            operator delete(v25);
            goto LABEL_104;
          }
        }
        else
        {
          v50 = 0;
          v51 = (_DWORD *)(4 * v46);
          *(_DWORD *)(4 * v46) = v320;
          v26 = 4 * v46 + 4;
          if (v25 != v44)
            goto LABEL_44;
        }
        __p = v51;
        v318 = (char *)v26;
        v319 = &v50[4 * v49];
        if (!v25)
          goto LABEL_104;
        goto LABEL_103;
      }
    }
    else
    {
      v27 = *(unsigned int *)sub_239962518(v8, &v320);
      v28 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
      v29 = *v28;
      v30 = (std::__shared_weak_count *)v28[1];
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      v34 = *(_QWORD *)(*(_QWORD *)(v29 + 40) + ((v27 >> 3) & 0x1FFFFFF8));
      v35 = *a5;
      v36 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a4[1]);
      v38 = *v36;
      v37 = (std::__shared_weak_count *)v36[1];
      if (((v34 >> v27) & 1) != 0)
      {
        if (v37)
        {
          v39 = (unint64_t *)&v37->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        if (v35 == *(_DWORD *)(*(_QWORD *)(v38 + 40) + 4 * *(unsigned int *)(sub_239962518(v8, &v320) + 16)))
        {
          v42 = v318;
          if (v318 < v319)
          {
            *(_DWORD *)v318 = v320;
            v43 = (uint64_t)(v42 + 4);
            goto LABEL_116;
          }
          v91 = __p;
          v92 = v318 - (_BYTE *)__p;
          v93 = (v318 - (_BYTE *)__p) >> 2;
          v94 = v93 + 1;
          if ((unint64_t)(v93 + 1) >> 62)
            goto LABEL_345;
          v95 = v319 - (_BYTE *)__p;
          if ((v319 - (_BYTE *)__p) >> 1 > v94)
            v94 = v95 >> 1;
          if ((unint64_t)v95 >= 0x7FFFFFFFFFFFFFFCLL)
            v96 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v96 = v94;
          if (v96)
          {
            if (v96 >> 62)
              goto LABEL_347;
            v97 = operator new(4 * v96);
            v98 = &v97[4 * v93];
            *v98 = v320;
            v43 = (uint64_t)(v98 + 1);
            if (v42 != v91)
            {
LABEL_93:
              v99 = v42 - 4 - v91;
              if (v99 < 0x2C)
                goto LABEL_358;
              if ((unint64_t)(v42 - &v97[v92]) < 0x20)
                goto LABEL_358;
              v100 = (v99 >> 2) + 1;
              v101 = 4 * (v100 & 0x7FFFFFFFFFFFFFF8);
              v102 = &v42[-v101];
              v98 = (_DWORD *)((char *)v98 - v101);
              v103 = &v97[4 * v93 - 16];
              v104 = (__int128 *)(v42 - 16);
              v105 = v100 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                v106 = *v104;
                *(v103 - 1) = *(v104 - 1);
                *v103 = v106;
                v103 -= 2;
                v104 -= 2;
                v105 -= 8;
              }
              while (v105);
              v42 = v102;
              if (v100 != (v100 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_358:
                do
                {
                  v107 = *((_DWORD *)v42 - 1);
                  v42 -= 4;
                  *--v98 = v107;
                }
                while (v42 != v91);
              }
              v42 = __p;
              __p = v98;
              v318 = (char *)v43;
              v319 = &v97[4 * v96];
              if (!v42)
              {
LABEL_116:
                v318 = (char *)v43;
                v114 = v315;
                if (v315 == v316 << 6)
                {
                  if ((uint64_t)(v315 + 1) < 0)
                    sub_2394189F8();
                  v115 = v316 << 7;
                  if (v316 << 7 <= (v315 & 0xFFFFFFFFFFFFFFC0) + 64)
                    v115 = (v315 & 0xFFFFFFFFFFFFFFC0) + 64;
                  if (v315 <= 0x3FFFFFFFFFFFFFFELL)
                    v116 = v115;
                  else
                    v116 = 0x7FFFFFFFFFFFFFFFLL;
                  goto LABEL_123;
                }
                goto LABEL_124;
              }
LABEL_115:
              operator delete(v42);
              goto LABEL_116;
            }
          }
          else
          {
            v97 = 0;
            v98 = (_DWORD *)(4 * v93);
            *(_DWORD *)(4 * v93) = v320;
            v43 = 4 * v93 + 4;
            if (v42 != v91)
              goto LABEL_93;
          }
          __p = v98;
          v318 = (char *)v43;
          v319 = &v97[4 * v96];
          if (!v42)
            goto LABEL_116;
          goto LABEL_115;
        }
      }
      else
      {
        if (v37)
        {
          v61 = (unint64_t *)&v37->__shared_owners_;
          do
            v62 = __ldxr(v61);
          while (__stxr(v62 + 1, v61));
          do
            v63 = __ldaxr(v61);
          while (__stlxr(v63 - 1, v61));
          if (!v63)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        if (v35 != *(_DWORD *)(*(_QWORD *)(v38 + 40) + 4 * *(unsigned int *)(sub_239962518(v8, &v320) + 16)))
        {
          v64 = *a5;
          v65 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a4[1]);
          v66 = *v65;
          v67 = (std::__shared_weak_count *)v65[1];
          if (v67)
          {
            v68 = (unint64_t *)&v67->__shared_owners_;
            do
              v69 = __ldxr(v68);
            while (__stxr(v69 + 1, v68));
            do
              v70 = __ldaxr(v68);
            while (__stlxr(v70 - 1, v68));
            if (!v70)
            {
              ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
              std::__shared_weak_count::__release_weak(v67);
            }
          }
          v71 = (unsigned int *)sub_239962518(v8, &v320);
          if (v64 == *(_DWORD *)(*(_QWORD *)(v66 + 40) + 4 * *(unsigned int *)(sub_239962518(v8, v71) + 16)))
          {
            v72 = v318;
            if (v318 < v319)
            {
              *(_DWORD *)v318 = v320;
              v73 = (uint64_t)(v72 + 4);
              goto LABEL_165;
            }
            v117 = __p;
            v118 = v318 - (_BYTE *)__p;
            v119 = (v318 - (_BYTE *)__p) >> 2;
            v120 = v119 + 1;
            if ((unint64_t)(v119 + 1) >> 62)
              goto LABEL_345;
            v121 = v319 - (_BYTE *)__p;
            if ((v319 - (_BYTE *)__p) >> 1 > v120)
              v120 = v121 >> 1;
            if ((unint64_t)v121 >= 0x7FFFFFFFFFFFFFFCLL)
              v122 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v122 = v120;
            if (v122)
            {
              if (v122 >> 62)
                goto LABEL_347;
              v123 = operator new(4 * v122);
              v124 = &v123[4 * v119];
              *v124 = v320;
              v73 = (uint64_t)(v124 + 1);
              if (v72 != v117)
              {
LABEL_137:
                v125 = v72 - 4 - v117;
                if (v125 < 0x2C)
                  goto LABEL_359;
                if ((unint64_t)(v72 - &v123[v118]) < 0x20)
                  goto LABEL_359;
                v126 = (v125 >> 2) + 1;
                v127 = 4 * (v126 & 0x7FFFFFFFFFFFFFF8);
                v128 = &v72[-v127];
                v124 = (_DWORD *)((char *)v124 - v127);
                v129 = &v123[4 * v119 - 16];
                v130 = (__int128 *)(v72 - 16);
                v131 = v126 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v132 = *v130;
                  *(v129 - 1) = *(v130 - 1);
                  *v129 = v132;
                  v129 -= 2;
                  v130 -= 2;
                  v131 -= 8;
                }
                while (v131);
                v72 = v128;
                if (v126 != (v126 & 0x7FFFFFFFFFFFFFF8))
                {
LABEL_359:
                  do
                  {
                    v133 = *((_DWORD *)v72 - 1);
                    v72 -= 4;
                    *--v124 = v133;
                  }
                  while (v72 != v117);
                }
                v72 = __p;
                __p = v124;
                v318 = (char *)v73;
                v319 = &v123[4 * v122];
                if (!v72)
                {
LABEL_165:
                  v318 = (char *)v73;
                  v108 = v315;
                  if (v315 == v316 << 6)
                  {
                    if ((uint64_t)(v315 + 1) < 0)
                      sub_2394189F8();
                    v151 = v316 << 7;
                    if (v316 << 7 <= (v315 & 0xFFFFFFFFFFFFFFC0) + 64)
                      v151 = (v315 & 0xFFFFFFFFFFFFFFC0) + 64;
                    if (v315 <= 0x3FFFFFFFFFFFFFFELL)
                      v110 = v151;
                    else
                      v110 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_111:
                    sub_2394187EC((uint64_t)&v314, v110);
                    v108 = v315;
                  }
LABEL_112:
                  v315 = v108 + 1;
                  v111 = (char *)v314;
                  v112 = (v108 >> 3) & 0x1FFFFFFFFFFFFFF8;
                  v113 = *(_QWORD *)((_BYTE *)v314 + v112) & ~(1 << v108);
LABEL_125:
                  *(_QWORD *)&v111[v112] = v113;
                  goto LABEL_126;
                }
LABEL_164:
                operator delete(v72);
                goto LABEL_165;
              }
            }
            else
            {
              v123 = 0;
              v124 = (_DWORD *)(4 * v119);
              *(_DWORD *)(4 * v119) = v320;
              v73 = 4 * v119 + 4;
              if (v72 != v117)
                goto LABEL_137;
            }
            __p = v124;
            v318 = (char *)v73;
            v319 = &v123[4 * v122];
            if (!v72)
              goto LABEL_165;
            goto LABEL_164;
          }
        }
        v74 = *a5;
        v75 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a4[1]);
        v76 = *v75;
        v77 = (std::__shared_weak_count *)v75[1];
        if (v77)
        {
          v78 = (unint64_t *)&v77->__shared_owners_;
          do
            v79 = __ldxr(v78);
          while (__stxr(v79 + 1, v78));
          do
            v80 = __ldaxr(v78);
          while (__stlxr(v80 - 1, v78));
          if (!v80)
          {
            ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
            std::__shared_weak_count::__release_weak(v77);
          }
        }
        if (v74 == *(_DWORD *)(*(_QWORD *)(v76 + 40) + 4 * *(unsigned int *)(sub_239962518(v8, &v320) + 16)))
        {
          v81 = *a5;
          v82 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a4[1]);
          v83 = *v82;
          v84 = (std::__shared_weak_count *)v82[1];
          if (v84)
          {
            v85 = (unint64_t *)&v84->__shared_owners_;
            do
              v86 = __ldxr(v85);
            while (__stxr(v86 + 1, v85));
            do
              v87 = __ldaxr(v85);
            while (__stlxr(v87 - 1, v85));
            if (!v87)
            {
              ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
              std::__shared_weak_count::__release_weak(v84);
            }
          }
          v88 = (unsigned int *)sub_239962518(v8, &v320);
          if (v81 != *(_DWORD *)(*(_QWORD *)(v83 + 40) + 4 * *(unsigned int *)(sub_239962518(v8, v88) + 16)))
          {
            v89 = v318;
            if (v318 < v319)
            {
              *(_DWORD *)v318 = v320;
              v90 = (uint64_t)(v89 + 4);
              goto LABEL_175;
            }
            v134 = __p;
            v135 = v318 - (_BYTE *)__p;
            v136 = (v318 - (_BYTE *)__p) >> 2;
            v137 = v136 + 1;
            if ((unint64_t)(v136 + 1) >> 62)
LABEL_345:
              sub_2394189F8();
            v138 = v319 - (_BYTE *)__p;
            if ((v319 - (_BYTE *)__p) >> 1 > v137)
              v137 = v138 >> 1;
            if ((unint64_t)v138 >= 0x7FFFFFFFFFFFFFFCLL)
              v139 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v139 = v137;
            if (v139)
            {
              if (v139 >> 62)
LABEL_347:
                sub_239418A80();
              v140 = operator new(4 * v139);
              v141 = &v140[4 * v136];
              *v141 = v320;
              v90 = (uint64_t)(v141 + 1);
              if (v89 != v134)
              {
LABEL_154:
                v142 = v89 - 4 - v134;
                if (v142 < 0x2C)
                  goto LABEL_360;
                if ((unint64_t)(v89 - &v140[v135]) < 0x20)
                  goto LABEL_360;
                v143 = (v142 >> 2) + 1;
                v144 = 4 * (v143 & 0x7FFFFFFFFFFFFFF8);
                v145 = &v89[-v144];
                v141 = (_DWORD *)((char *)v141 - v144);
                v146 = &v140[4 * v136 - 16];
                v147 = (__int128 *)(v89 - 16);
                v148 = v143 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v149 = *v147;
                  *(v146 - 1) = *(v147 - 1);
                  *v146 = v149;
                  v146 -= 2;
                  v147 -= 2;
                  v148 -= 8;
                }
                while (v148);
                v89 = v145;
                if (v143 != (v143 & 0x7FFFFFFFFFFFFFF8))
                {
LABEL_360:
                  do
                  {
                    v150 = *((_DWORD *)v89 - 1);
                    v89 -= 4;
                    *--v141 = v150;
                  }
                  while (v89 != v134);
                }
                v89 = __p;
                __p = v141;
                v318 = (char *)v90;
                v319 = &v140[4 * v139];
                if (!v89)
                {
LABEL_175:
                  v318 = (char *)v90;
                  v114 = v315;
                  if (v315 == v316 << 6)
                  {
                    if ((uint64_t)(v315 + 1) < 0)
                      sub_2394189F8();
                    v152 = v316 << 7;
                    if (v316 << 7 <= (v315 & 0xFFFFFFFFFFFFFFC0) + 64)
                      v152 = (v315 & 0xFFFFFFFFFFFFFFC0) + 64;
                    if (v315 <= 0x3FFFFFFFFFFFFFFELL)
                      v116 = v152;
                    else
                      v116 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_123:
                    sub_2394187EC((uint64_t)&v314, v116);
                    v114 = v315;
                  }
LABEL_124:
                  v315 = v114 + 1;
                  v111 = (char *)v314;
                  v112 = (v114 >> 3) & 0x1FFFFFFFFFFFFFF8;
                  v113 = *(_QWORD *)((char *)v314 + v112) | (1 << v114);
                  goto LABEL_125;
                }
LABEL_174:
                operator delete(v89);
                goto LABEL_175;
              }
            }
            else
            {
              v140 = 0;
              v141 = (_DWORD *)(4 * v136);
              *(_DWORD *)(4 * v136) = v320;
              v90 = 4 * v136 + 4;
              if (v89 != v134)
                goto LABEL_154;
            }
            __p = v141;
            v318 = (char *)v90;
            v319 = &v140[4 * v139];
            if (!v89)
              goto LABEL_175;
            goto LABEL_174;
          }
        }
      }
    }
LABEL_126:
    i = sub_239962B44(v321);
  }
  v153 = (char *)__p;
  v154 = v314;
  if (v318 - (_BYTE *)__p == 8)
  {
    v155 = 0;
    if (!v314)
      goto LABEL_185;
    goto LABEL_184;
  }
LABEL_189:
  v311 = 0;
  v312 = 0;
  v313 = 0;
  v305 = (*v154 & 1) == 0;
  if (v318 == v153)
  {
    v202 = 0;
    goto LABEL_239;
  }
  LODWORD(v157) = 0;
  v158 = (v318 - v153) >> 2;
  while (2)
  {
    LODWORD(v308) = *(_DWORD *)&v153[4 * (v157 | v305)];
    HIDWORD(v308) = *(_DWORD *)&v153[4 * (((v157 | v305) + 1) % v158)];
    v160 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a4[2]);
    v161 = *v160;
    v162 = (std::__shared_weak_count *)v160[1];
    if (v162)
    {
      v163 = (unint64_t *)&v162->__shared_owners_;
      do
        v164 = __ldxr(v163);
      while (__stxr(v164 + 1, v163));
      do
        v165 = __ldaxr(v163);
      while (__stlxr(v165 - 1, v163));
      if (!v165)
      {
        ((void (*)(std::__shared_weak_count *))v162->__on_zero_shared)(v162);
        std::__shared_weak_count::__release_weak(v162);
      }
    }
    v166 = *(_DWORD *)(sub_239962518(v8, (unsigned int *)&v308) + 16);
    v167 = *(_QWORD *)(v161 + 40);
    v168 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a4[2]);
    v169 = *v168;
    v170 = (std::__shared_weak_count *)v168[1];
    if (v170)
    {
      v171 = (unint64_t *)&v170->__shared_owners_;
      do
        v172 = __ldxr(v171);
      while (__stxr(v172 + 1, v171));
      do
        v173 = __ldaxr(v171);
      while (__stlxr(v173 - 1, v171));
      if (!v173)
      {
        ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
        std::__shared_weak_count::__release_weak(v170);
      }
    }
    v174 = (unsigned int *)sub_239962518(v8, (unsigned int *)&v308 + 1);
    v175 = sub_239962518(v8, v174);
    v176 = (_DWORD *)(v167 + 12 * v166);
    v177 = *a3;
    if (*a3 == *v176 || v177 == v176[1] || v177 == v176[2])
    {
      v178 = (int *)(*(_QWORD *)(v169 + 40) + 12 * *(unsigned int *)(v175 + 16));
      v179 = *v178;
      v180 = v178[1];
      v181 = v178[2];
      v182 = v177 == v179 || v177 == v180;
      if (v182 || v177 == v181)
      {
        v184 = v312;
        if (v312 < v313)
        {
          *(_QWORD *)v312 = v308;
          v159 = (uint64_t)(v184 + 8);
        }
        else
        {
          v185 = v311;
          v186 = v312 - (_BYTE *)v311;
          v187 = (v312 - (_BYTE *)v311) >> 3;
          v188 = v187 + 1;
          if ((unint64_t)(v187 + 1) >> 61)
            sub_2394189F8();
          v189 = v313 - (_BYTE *)v311;
          if ((v313 - (_BYTE *)v311) >> 2 > v188)
            v188 = v189 >> 2;
          if ((unint64_t)v189 >= 0x7FFFFFFFFFFFFFF8)
            v190 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v190 = v188;
          if (v190)
          {
            if (v190 >> 61)
              sub_239418A80();
            v191 = operator new(8 * v190);
            v192 = (void **)&v191[8 * v187];
            *v192 = v308;
            v159 = (uint64_t)(v192 + 1);
            if (v184 != v185)
            {
LABEL_227:
              v193 = v184 - 8 - v185;
              if (v193 < 0x58)
                goto LABEL_361;
              if ((unint64_t)(v184 - &v191[v186]) < 0x20)
                goto LABEL_361;
              v194 = (v193 >> 3) + 1;
              v195 = 8 * (v194 & 0x3FFFFFFFFFFFFFFCLL);
              v196 = &v184[-v195];
              v192 = (void **)((char *)v192 - v195);
              v197 = &v191[8 * v187 - 16];
              v198 = (__int128 *)(v184 - 16);
              v199 = v194 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v200 = *v198;
                *(v197 - 1) = *(v198 - 1);
                *v197 = v200;
                v197 -= 2;
                v198 -= 2;
                v199 -= 4;
              }
              while (v199);
              v184 = v196;
              if (v194 != (v194 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_361:
                do
                {
                  v201 = (void *)*((_QWORD *)v184 - 1);
                  v184 -= 8;
                  *--v192 = v201;
                }
                while (v184 != v185);
              }
              v184 = v311;
              v311 = v192;
              v313 = &v191[8 * v190];
              if (!v184)
                goto LABEL_192;
              goto LABEL_237;
            }
          }
          else
          {
            v191 = 0;
            v192 = (void **)(8 * v187);
            *(_QWORD *)(8 * v187) = v308;
            v159 = 8 * v187 + 8;
            if (v184 != v185)
              goto LABEL_227;
          }
          v311 = v192;
          v313 = &v191[8 * v190];
          if (v184)
LABEL_237:
            operator delete(v184);
        }
LABEL_192:
        v312 = (char *)v159;
      }
    }
    v157 = (v157 + 2);
    v153 = (char *)__p;
    v158 = (v318 - (_BYTE *)__p) >> 2;
    if (v158 > v157)
      continue;
    break;
  }
  v202 = (unsigned int *)v311;
  if ((unint64_t)(v312 - (_BYTE *)v311) < 0x10)
  {
LABEL_239:
    v155 = 0;
    goto LABEL_337;
  }
  v308 = 0;
  v309 = 0;
  v310 = 0;
  if (v312 == v311)
  {
    v290 = 0;
    v291 = 0;
    v292 = -1;
    v293 = a6;
LABEL_325:
    v294 = 0;
    v295 = 0;
    v296 = 2;
    while (1)
    {
      v297 = v294;
      v294 = (v295 + 1);
      if (v291 > v294)
        break;
LABEL_326:
      ++v296;
      v295 = v294;
      if (v292 <= v294)
        goto LABEL_334;
    }
    v298 = (float *)&v290[8 * v297];
    v299 = v296;
    v300 = v294;
    while (1)
    {
      v301 = (float *)&v290[8 * v300];
      if (v298[1] >= (float)(*v301 + -0.000001) && *v298 <= (float)(v301[1] + 0.000001))
        break;
      v300 = v299++;
      if (v291 <= v300)
        goto LABEL_326;
    }
    v302 = *(_QWORD *)(v293 + 8) - *(_QWORD *)v293;
    if (v302 > 7)
    {
      if (v302 != 8)
        *(_QWORD *)(v293 + 8) = *(_QWORD *)v293 + 8;
    }
    else
    {
      sub_2394EE834((void **)v293, 2 - (v302 >> 2));
    }
    **(_DWORD **)v293 = *(_DWORD *)(sub_239962518(v8, &v202[2 * v297]) + 16);
    v202 = (unsigned int *)v311;
    *(_DWORD *)(*(_QWORD *)v293 + 4) = *(_DWORD *)(sub_239962518(v8, (unsigned int *)v311 + 2 * v300) + 16);
    v155 = 1;
    v303 = v308;
    if (v308)
      goto LABEL_336;
    goto LABEL_337;
  }
  v203 = 0;
  v204 = 0;
  while (2)
  {
    v206 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a4[2]);
    v207 = *v206;
    v208 = (std::__shared_weak_count *)v206[1];
    if (v208)
    {
      v209 = (unint64_t *)&v208->__shared_owners_;
      do
        v210 = __ldxr(v209);
      while (__stxr(v210 + 1, v209));
      do
        v211 = __ldaxr(v209);
      while (__stlxr(v211 - 1, v209));
      if (!v211)
      {
        ((void (*)(std::__shared_weak_count *))v208->__on_zero_shared)(v208);
        std::__shared_weak_count::__release_weak(v208);
      }
    }
    v212 = *(_DWORD *)(sub_239962518(v8, (unsigned int *)v311 + 2 * v203) + 16);
    v213 = *(_QWORD *)(v207 + 40);
    v214 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * a4[2]);
    v215 = *v214;
    v216 = (std::__shared_weak_count *)v214[1];
    if (v216)
    {
      v217 = (unint64_t *)&v216->__shared_owners_;
      do
        v218 = __ldxr(v217);
      while (__stxr(v218 + 1, v217));
      do
        v219 = __ldaxr(v217);
      while (__stlxr(v219 - 1, v217));
      if (!v219)
      {
        ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
        std::__shared_weak_count::__release_weak(v216);
      }
    }
    v202 = (unsigned int *)v311;
    v220 = (unsigned int *)sub_239962518(v8, (unsigned int *)v311 + 2 * v203 + 1);
    v221 = sub_239962518(v8, v220);
    v222 = (unsigned int *)(v213 + 12 * v212);
    v223 = *a3;
    if (*v222 == *a3)
    {
      v224 = 1;
      goto LABEL_261;
    }
    if (v222[1] == v223)
    {
      v224 = 2;
LABEL_261:
      v225 = v222[v224];
      v226 = (_DWORD *)(*(_QWORD *)(v215 + 40) + 12 * *(unsigned int *)(v221 + 16));
      if (*v226 == v223)
      {
LABEL_262:
        v227 = 2;
        v155 = 0;
        if (v225 == 99)
          goto LABEL_335;
        goto LABEL_273;
      }
    }
    else if (v222[2] == v223)
    {
      v225 = *v222;
      v226 = (_DWORD *)(*(_QWORD *)(v215 + 40) + 12 * *(unsigned int *)(v221 + 16));
      if (*v226 == v223)
        goto LABEL_262;
    }
    else
    {
      v225 = 99;
      v226 = (_DWORD *)(*(_QWORD *)(v215 + 40) + 12 * *(unsigned int *)(v221 + 16));
      if (*v226 == v223)
        goto LABEL_262;
    }
    if (v226[1] == v223)
    {
      v227 = 0;
      v155 = 0;
      if (v225 == 99)
        goto LABEL_335;
    }
    else
    {
      if (v226[2] != v223)
        goto LABEL_334;
      v227 = 1;
      v155 = 0;
      if (v225 == 99)
        goto LABEL_335;
    }
LABEL_273:
    v228 = v226[v227];
    if ((_DWORD)v228 == 99)
      goto LABEL_335;
    v229 = (uint64_t *)(*(_QWORD *)(a1 + 80) + 16 * a4[3]);
    v230 = *v229;
    v231 = (std::__shared_weak_count *)v229[1];
    if (v231)
    {
      v232 = (unint64_t *)&v231->__shared_owners_;
      do
        v233 = __ldxr(v232);
      while (__stxr(v233 + 1, v232));
      do
        v234 = __ldaxr(v232);
      while (__stlxr(v234 - 1, v232));
      if (!v234)
      {
        ((void (*)(std::__shared_weak_count *))v231->__on_zero_shared)(v231);
        std::__shared_weak_count::__release_weak(v231);
      }
    }
    v235 = *(_QWORD *)(v230 + 40);
    v236 = (uint64_t *)(*(_QWORD *)(a1 + 80) + 16 * a4[3]);
    v237 = *v236;
    v238 = (std::__shared_weak_count *)v236[1];
    if (v238)
    {
      v239 = (unint64_t *)&v238->__shared_owners_;
      do
        v240 = __ldxr(v239);
      while (__stxr(v240 + 1, v239));
      do
        v241 = __ldaxr(v239);
      while (__stlxr(v241 - 1, v239));
      if (!v241)
      {
        ((void (*)(std::__shared_weak_count *))v238->__on_zero_shared)(v238);
        std::__shared_weak_count::__release_weak(v238);
      }
    }
    v242 = (float *)(v235 + 8 * v225);
    v243 = (float *)(*(_QWORD *)(v237 + 40) + 8 * *a3);
    v244 = *v242;
    v245 = v242[1];
    v247 = *v243;
    v246 = v243[1];
    v248 = (uint64_t *)(*(_QWORD *)(a1 + 80) + 16 * a4[3]);
    v249 = *v248;
    v250 = (std::__shared_weak_count *)v248[1];
    if (v250)
    {
      v251 = (unint64_t *)&v250->__shared_owners_;
      do
        v252 = __ldxr(v251);
      while (__stxr(v252 + 1, v251));
      do
        v253 = __ldaxr(v251);
      while (__stlxr(v253 - 1, v251));
      if (!v253)
      {
        ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
        std::__shared_weak_count::__release_weak(v250);
      }
    }
    v254 = *(_QWORD *)(v249 + 40);
    v255 = (uint64_t *)(*(_QWORD *)(a1 + 80) + 16 * a4[3]);
    v256 = *v255;
    v257 = (std::__shared_weak_count *)v255[1];
    if (v257)
    {
      v258 = (unint64_t *)&v257->__shared_owners_;
      do
        v259 = __ldxr(v258);
      while (__stxr(v259 + 1, v258));
      do
        v260 = __ldaxr(v258);
      while (__stlxr(v260 - 1, v258));
      if (!v260)
      {
        ((void (*)(std::__shared_weak_count *))v257->__on_zero_shared)(v257);
        std::__shared_weak_count::__release_weak(v257);
      }
    }
    v261 = v245 - v246;
    v262 = (float *)(v254 + 8 * v228);
    v263 = (float *)(*(_QWORD *)(v256 + 40) + 8 * *a3);
    v264 = *v262 - *v263;
    v265 = v262[1] - v263[1];
    v266 = atan2f(v261, v244 - v247);
    v267 = atan2f(v265, v264);
    if (v267 >= v266)
    {
      v269 = v267;
    }
    else
    {
      v268 = v267 + 6.28318531;
      v269 = v268;
    }
    v270 = (unint64_t)v309;
    if (v309 < v310)
    {
      *v309 = v266;
      *(float *)(v270 + 4) = v269;
      v205 = (float *)(v270 + 8);
      goto LABEL_244;
    }
    v271 = v308;
    v272 = (char *)v309 - (_BYTE *)v308;
    v273 = ((char *)v309 - (_BYTE *)v308) >> 3;
    v274 = v273 + 1;
    if ((unint64_t)(v273 + 1) >> 61)
      sub_2394189F8();
    v275 = (char *)v310 - (_BYTE *)v308;
    if (((char *)v310 - (_BYTE *)v308) >> 2 > v274)
      v274 = v275 >> 2;
    if ((unint64_t)v275 >= 0x7FFFFFFFFFFFFFF8)
      v276 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v276 = v274;
    if (!v276)
    {
      v277 = 0;
      v278 = (float *)(8 * v273);
      *v278 = v266;
      v278[1] = v269;
      v279 = v270 - (_QWORD)v271;
      if ((void *)v270 != v271)
        goto LABEL_311;
      goto LABEL_314;
    }
    if (v276 >> 61)
      sub_239418A80();
    v277 = (char *)operator new(8 * v276);
    v278 = (float *)&v277[8 * v273];
    *v278 = v266;
    v278[1] = v269;
    v279 = v270 - (_QWORD)v271;
    if ((void *)v270 == v271)
    {
LABEL_314:
      v281 = v278;
      goto LABEL_321;
    }
LABEL_311:
    v280 = v279 - 8;
    if (v280 < 0x58)
    {
      v281 = v278;
      goto LABEL_320;
    }
    v282 = v280 >> 3;
    if ((unint64_t)&v277[v272 - (v280 & 0xFFFFFFFFFFFFFFF8) - 8] < v270)
    {
      v281 = v278;
      if (v270 - 8 * v282 - 8 < (unint64_t)v278)
        goto LABEL_362;
    }
    v283 = v282 + 1;
    v284 = 8 * (v283 & 0x3FFFFFFFFFFFFFFCLL);
    v285 = v270 - v284;
    v281 = &v278[v284 / 0xFFFFFFFFFFFFFFFCLL];
    v286 = (const float *)(v270 - 32);
    v287 = v278 - 8;
    v288 = v283 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v322 = vld2q_f32(v286);
      v286 -= 8;
      vst2q_f32(v287, v322);
      v287 -= 8;
      v288 -= 4;
    }
    while (v288);
    v270 = v285;
    if (v283 != (v283 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_362:
      do
      {
LABEL_320:
        v289 = *(_DWORD *)(v270 - 8);
        v270 -= 8;
        *((_DWORD *)v281 - 2) = v289;
        v281 -= 2;
        v281[1] = *(float *)(v270 + 4);
      }
      while ((void *)v270 != v271);
    }
LABEL_321:
    v205 = v278 + 2;
    v308 = v281;
    v310 = (float *)&v277[8 * v276];
    if (v271)
      operator delete(v271);
LABEL_244:
    v309 = v205;
    v202 = (unsigned int *)v311;
    v203 = ++v204;
    if (v204 < (unint64_t)((v312 - (_BYTE *)v311) >> 3))
      continue;
    break;
  }
  v290 = (char *)v308;
  v291 = ((char *)v205 - (_BYTE *)v308) >> 3;
  v292 = v291 - 1;
  v293 = a6;
  if (v291 != 1)
    goto LABEL_325;
LABEL_334:
  v155 = 0;
LABEL_335:
  v303 = v308;
  if (v308)
LABEL_336:
    operator delete(v303);
LABEL_337:
  if (v202)
  {
    v312 = (char *)v202;
    operator delete(v202);
  }
  v154 = v314;
  if (v314)
LABEL_184:
    operator delete(v154);
LABEL_185:
  if (__p)
  {
    v318 = (char *)__p;
    operator delete(__p);
  }
  return v155;
}

void sub_239982E60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23)
{
  void *v24;
  void *v25;
  void *v26;

  if (__p)
  {
    operator delete(__p);
    v24 = a16;
    if (!a16)
    {
LABEL_3:
      v25 = a19;
      if (!a19)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v24 = a16;
    if (!a16)
      goto LABEL_3;
  }
  operator delete(v24);
  v25 = a19;
  if (!a19)
  {
LABEL_4:
    v26 = a22;
    if (!a22)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(v25);
  v26 = a22;
  if (!a22)
LABEL_5:
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(v26);
  _Unwind_Resume(exception_object);
}

uint64_t sub_239982F28(uint64_t a1, unsigned int **a2, unsigned int *a3, _DWORD *a4, _DWORD *a5)
{
  unsigned int *v5;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  unsigned int *v18;
  unsigned int *v19;
  unint64_t v20;
  int v21;
  unsigned int *v22;
  unsigned int *v23;
  uint64_t i;
  __int128 v25;
  char *v26;
  unint64_t v27;
  unsigned int v28;
  uint64_t *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t *v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  unsigned int *v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  __int128 v70;
  char *v71;
  char *v72;
  int v73;
  char *v74;
  char *v75;
  char *v76;
  char v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  unsigned int v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unsigned int v85;
  _DWORD *v86;
  char *v87;
  char *v88;
  _DWORD *v89;
  _DWORD *v90;
  int v91;
  unsigned int *v92;
  _DWORD *v93;
  int v94;
  int v95;
  char *v96;
  int *v97;
  int v98;
  int v99;
  unsigned int *v100;
  int v101;
  char *v102;
  char *v103;
  char *v104;
  unsigned int *v105;
  int v106;
  char v107;
  uint64_t v108;
  int v109;
  BOOL v110;
  char *v111;
  unint64_t v112;
  __int128 *v113;
  uint64_t *v114;
  int v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unsigned int v124;
  uint64_t *v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  std::__shared_weak_count *v134;
  unint64_t *v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  std::__shared_weak_count *v161;
  unint64_t *v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  std::__shared_weak_count *v167;
  unint64_t *v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  std::__shared_weak_count *v195;
  unint64_t *v196;
  unint64_t v197;
  unint64_t v198;
  __int16 v199;
  uint64_t *v200;
  uint64_t v201;
  std::__shared_weak_count *v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  _BYTE *v207;
  char *v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  _OWORD *v213;
  char *v214;
  uint64_t v215;
  __int128 v216;
  int v217;
  __int16 v218;
  uint64_t *v219;
  unint64_t *v220;
  unint64_t v221;
  unint64_t v222;
  __int16 v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  std::__shared_weak_count *v228;
  unint64_t *v229;
  unint64_t v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  uint64_t v237;
  std::__shared_weak_count *v238;
  unint64_t *v239;
  unint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t *v246;
  uint64_t v247;
  std::__shared_weak_count *v248;
  unint64_t *v249;
  unint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t *v253;
  uint64_t v254;
  std::__shared_weak_count *v255;
  unint64_t *v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t *v261;
  uint64_t v262;
  std::__shared_weak_count *v263;
  unint64_t *v264;
  unint64_t v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t *v271;
  uint64_t v272;
  std::__shared_weak_count *v273;
  unint64_t *v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t *v280;
  uint64_t v281;
  std::__shared_weak_count *v282;
  unint64_t *v283;
  unint64_t v284;
  unint64_t v285;
  int v286;
  char *v287;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  unsigned int v300;
  _DWORD *v301;
  _DWORD *v302;
  unsigned int *v303;
  int v304;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  __int16 v312;
  __int16 v313;
  __int16 v314;
  uint64_t v315;
  uint64_t v316;
  unsigned int *v317;
  unsigned int v318;
  uint64_t v319;
  uint64_t v320;
  __int16 v321;
  unint64_t v322;
  unsigned int v323;
  _DWORD *v324;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  __int128 v329;
  void *__p;
  _DWORD *v331;
  __int128 v332;
  unsigned int v333;
  char *v334;
  char *v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  char *v340;
  unint64_t v341;
  unsigned int *v342;
  unsigned int *v343;
  char *v344;
  int v345[3];

  v5 = *a2;
  if (*a2 == a2[1])
    return 0;
  v8 = a1;
  v10 = a3 + 1;
  v9 = a3[1];
  v345[0] = 0;
  v11 = *v5;
  v12 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v9);
  v13 = *v12;
  v14 = (std::__shared_weak_count *)v12[1];
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v345[0] = *(_DWORD *)(*(_QWORD *)(v13 + 40) + 4 * v11);
  v18 = (unsigned int *)operator new(0xCuLL);
  v343 = v18 + 3;
  v344 = (char *)(v18 + 3);
  *(_QWORD *)v18 = -1;
  v18[2] = -1;
  v341 = 0;
  v342 = v18;
  v339 = 0;
  v340 = 0;
  v19 = *a2;
  if (a2[1] == *a2)
    goto LABEL_261;
  v301 = a4;
  v302 = a5;
  v20 = 0;
  v21 = 0;
  v22 = a3;
  v23 = a3 + 2;
  v306 = v8;
  v317 = v10;
  while (2)
  {
    v304 = v21;
    v322 = v20;
    sub_23996389C(v8, &v19[v20], (uint64_t)&v342);
    for (i = 0; i != 3; ++i)
    {
      if (!sub_23997D1DC(v8, &v342[i], v10, v23))
        continue;
      v27 = v322;
      v28 = (*a2)[v322];
      v29 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * *v23);
      v30 = *v29;
      v31 = (std::__shared_weak_count *)v29[1];
      if (v31)
      {
        v32 = (unint64_t *)&v31->__shared_owners_;
        do
          v33 = __ldxr(v32);
        while (__stxr(v33 + 1, v32));
        do
          v34 = __ldaxr(v32);
        while (__stlxr(v34 - 1, v32));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
          v27 = v322;
        }
      }
      v35 = *(unsigned int *)(*(_QWORD *)(v30 + 40) + 12 * v28 + 4 * i);
      v36 = (*a2)[v27];
      v37 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * *v23);
      v38 = *v37;
      v39 = (std::__shared_weak_count *)v37[1];
      if (v39)
      {
        v40 = (unint64_t *)&v39->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
          v27 = v322;
        }
      }
      if ((unsigned __int16)i == 2)
        v43 = 0;
      else
        v43 = (unsigned __int16)i + 1;
      v44 = *(unsigned int *)(*(_QWORD *)(v38 + 40) + 12 * v36 + 4 * v43);
      v45 = (uint64_t *)(*(_QWORD *)(v8 + 80) + 16 * v22[3]);
      v46 = *v45;
      v47 = (std::__shared_weak_count *)v45[1];
      if (!v47)
        goto LABEL_36;
      v48 = (unint64_t *)&v47->__shared_owners_;
      do
        v49 = __ldxr(v48);
      while (__stxr(v49 + 1, v48));
      do
        v50 = __ldaxr(v48);
      while (__stlxr(v50 - 1, v48));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
        std::__shared_weak_count::__release_weak(v47);
        v27 = v322;
        v51 = *(_QWORD *)(v46 + 40);
        v58 = (uint64_t *)(*(_QWORD *)(v8 + 80) + 16 * v22[3]);
        v53 = *v58;
        v54 = (std::__shared_weak_count *)v58[1];
        if (v54)
        {
LABEL_37:
          v55 = (unint64_t *)&v54->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
            v27 = v322;
          }
        }
      }
      else
      {
LABEL_36:
        v51 = *(_QWORD *)(v46 + 40);
        v52 = (uint64_t *)(*(_QWORD *)(v8 + 80) + 16 * v22[3]);
        v53 = *v52;
        v54 = (std::__shared_weak_count *)v52[1];
        if (v54)
          goto LABEL_37;
      }
      v59 = v23;
      v60 = *(_QWORD *)(v53 + 40);
      v61 = (*a2)[v27];
      v62 = v342[i];
      v63 = v340;
      if ((unint64_t)v340 < v341)
      {
        *((_QWORD *)&v25 + 1) = *(_QWORD *)(v60 + 8 * v44);
        *(_QWORD *)&v25 = *(_QWORD *)(v51 + 8 * v35);
        *(_OWORD *)v340 = v25;
        *((_DWORD *)v63 + 4) = v35;
        *((_DWORD *)v63 + 5) = v44;
        *((_DWORD *)v63 + 6) = v61;
        *((_DWORD *)v63 + 7) = v62;
        v26 = v63 + 32;
        v23 = v59;
        v10 = v317;
      }
      else
      {
        v64 = v339;
        v65 = (v340 - v339) >> 5;
        v66 = v65 + 1;
        if ((unint64_t)(v65 + 1) >> 59)
          sub_2394189F8();
        v307 = *(_QWORD *)(v60 + 8 * v44);
        v308 = *(_QWORD *)(v51 + 8 * v35);
        v67 = v341 - (_QWORD)v339;
        if ((uint64_t)(v341 - (_QWORD)v339) >> 4 > v66)
          v66 = v67 >> 4;
        if ((unint64_t)v67 >= 0x7FFFFFFFFFFFFFE0)
          v68 = 0x7FFFFFFFFFFFFFFLL;
        else
          v68 = v66;
        if (v68 >> 59)
          sub_239418A80();
        v69 = (char *)operator new(32 * v68);
        *(_QWORD *)&v70 = v308;
        *((_QWORD *)&v70 + 1) = v307;
        v71 = &v69[32 * v65];
        *(_OWORD *)v71 = v70;
        *((_DWORD *)v71 + 4) = v35;
        *((_DWORD *)v71 + 5) = v44;
        *((_DWORD *)v71 + 6) = v61;
        *((_DWORD *)v71 + 7) = v62;
        v72 = v71;
        if (v63 == v64)
        {
          v8 = v306;
          v23 = v59;
          v10 = v317;
        }
        else
        {
          v8 = v306;
          v23 = v59;
          v10 = v317;
          do
          {
            v73 = *((_DWORD *)v63 - 8);
            v63 -= 32;
            *((_DWORD *)v72 - 8) = v73;
            v72 -= 32;
            *((_DWORD *)v72 + 1) = *((_DWORD *)v63 + 1);
            *((_DWORD *)v72 + 2) = *((_DWORD *)v63 + 2);
            *((_DWORD *)v72 + 3) = *((_DWORD *)v63 + 3);
            *((_OWORD *)v72 + 1) = *((_OWORD *)v63 + 1);
          }
          while (v63 != v64);
          v63 = v64;
        }
        v74 = &v69[32 * v68];
        v26 = v71 + 32;
        v339 = v72;
        v341 = (unint64_t)v74;
        v22 = a3;
        if (v63)
          operator delete(v63);
      }
      v340 = v26;
    }
    v20 = (v304 + 1);
    v19 = *a2;
    v21 = v304 + 1;
    if (v20 < a2[1] - *a2)
      continue;
    break;
  }
  v75 = v339;
  v338 = 0x3F50624DD2F1A9FCLL;
  v337 = 0x3EB0C6F7A0B5ED8DLL;
  if (v339 == v340)
    goto LABEL_261;
  v334 = 0;
  v335 = 0;
  v336 = 0;
  v76 = v340;
  if (v340 - v339 == 32)
  {
LABEL_60:
    v77 = 8;
    v78 = v334;
    if (v334)
      goto LABEL_257;
    goto LABEL_258;
  }
  v80 = 0;
  v81 = 0;
  v303 = v23;
  v326 = v8 + 104;
  while (1)
  {
    v82 = v80;
    v80 = ++v81;
    v83 = (v76 - v75) >> 5;
    if (v83 > v81)
      break;
LABEL_65:
    if (v83 - 1 <= v80)
      goto LABEL_60;
  }
  v299 = v81;
  v84 = v81;
  v300 = v81;
  v85 = v81;
  while (2)
  {
    v87 = &v75[32 * v82];
    v88 = &v75[32 * v84];
    v89 = v87 + 24;
    v90 = v88 + 24;
    if (*((_DWORD *)v87 + 6) == *((_DWORD *)v88 + 6))
      goto LABEL_71;
    v92 = (unsigned int *)(v87 + 16);
    v91 = *((_DWORD *)v87 + 4);
    v93 = v88 + 16;
    v94 = *((_DWORD *)v88 + 4);
    if (v91 == v94
      || (v95 = *(_DWORD *)&v75[32 * v82 + 20],
          v96 = &v75[32 * v84],
          v99 = *((_DWORD *)v96 + 5),
          v97 = (int *)(v96 + 20),
          v98 = v99,
          v95 == v99))
    {
      LODWORD(v327) = -1;
      v333 = 0;
      v100 = (unsigned int *)&v75[32 * v82 + 28];
      if (*v92 == *v93)
      {
        v101 = *(_DWORD *)(sub_239962518(v326, v100) + 12);
        LODWORD(v327) = v101;
        v333 = *v92;
        v103 = v334;
        v102 = v335;
        v104 = v334;
        if (v334 != v335)
          goto LABEL_79;
      }
      else
      {
        v105 = (unsigned int *)sub_239962518(v326, v100);
        v101 = *(_DWORD *)(sub_239962518(v326, v105) + 12);
        LODWORD(v327) = v101;
        v333 = *(_DWORD *)&v75[32 * v82 + 20];
        v103 = v334;
        v102 = v335;
        v104 = v334;
        if (v334 != v335)
        {
LABEL_79:
          while (*(_DWORD *)v104 != v101)
          {
            v104 += 4;
            if (v104 == v102)
            {
              v104 = v102;
              break;
            }
          }
        }
      }
      if (v104 == v102)
      {
        __p = 0;
        v331 = 0;
        *(_QWORD *)&v332 = 0;
        v106 = sub_23998188C(v8, (unsigned int *)&v327, &v333, v22, v345, (uint64_t)&__p);
        v107 = v106;
        if (!v106)
        {
          if (v102 < v336)
          {
            *(_DWORD *)v102 = v327;
            v108 = (uint64_t)(v102 + 4);
            v22 = a3;
            goto LABEL_253;
          }
          v203 = (v102 - v103) >> 2;
          v204 = v203 + 1;
          if ((unint64_t)(v203 + 1) >> 62)
            sub_2394189F8();
          v205 = v336 - v103;
          if ((v336 - v103) >> 1 > v204)
            v204 = v205 >> 1;
          if ((unint64_t)v205 >= 0x7FFFFFFFFFFFFFFCLL)
            v206 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v206 = v204;
          if (v206)
          {
            if (v206 >> 62)
              sub_239418A80();
            v207 = operator new(4 * v206);
            v208 = &v207[4 * v203];
            *(_DWORD *)v208 = v327;
            v108 = (uint64_t)(v208 + 4);
            if (v103 != v102)
            {
LABEL_179:
              v209 = v102 - 4 - v103;
              if (v209 < 0x2C)
                goto LABEL_272;
              if ((unint64_t)(v103 - v207) < 0x20)
                goto LABEL_272;
              v210 = (v209 >> 2) + 1;
              v211 = 4 * (v210 & 0x7FFFFFFFFFFFFFF8);
              v212 = &v102[-v211];
              v208 -= v211;
              v213 = &v207[4 * v203 - 16];
              v214 = v102 - 16;
              v215 = v210 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                v216 = *(_OWORD *)v214;
                *(v213 - 1) = *((_OWORD *)v214 - 1);
                *v213 = v216;
                v213 -= 2;
                v214 -= 32;
                v215 -= 8;
              }
              while (v215);
              v102 = v212;
              if (v210 != (v210 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_272:
                do
                {
                  v217 = *((_DWORD *)v102 - 1);
                  v102 -= 4;
                  *((_DWORD *)v208 - 1) = v217;
                  v208 -= 4;
                }
                while (v102 != v103);
              }
              v103 = v334;
              v334 = v208;
              v336 = &v207[4 * v206];
              v22 = a3;
              if (!v103)
              {
LABEL_253:
                v335 = (char *)v108;
                v86 = __p;
                v77 = 13;
                if (!__p)
                  goto LABEL_70;
                goto LABEL_69;
              }
LABEL_252:
              operator delete(v103);
              goto LABEL_253;
            }
          }
          else
          {
            v207 = 0;
            v208 = (char *)(4 * v203);
            *(_DWORD *)(4 * v203) = v327;
            v108 = 4 * v203 + 4;
            if (v103 != v102)
              goto LABEL_179;
          }
          v334 = v208;
          v336 = &v207[4 * v206];
          v22 = a3;
          if (!v103)
            goto LABEL_253;
          goto LABEL_252;
        }
        v86 = __p;
        *v301 = *(_DWORD *)__p;
        *v302 = v86[1];
        v77 = 1;
        v22 = a3;
LABEL_69:
        v331 = v86;
        operator delete(v86);
LABEL_70:
        if ((v107 & 1) != 0)
          goto LABEL_256;
      }
LABEL_71:
      v75 = v339;
      v76 = v340;
      v83 = (v340 - v339) >> 5;
      v84 = ++v85;
      if (v83 <= v85)
      {
        v81 = v300;
        v80 = v299;
        goto LABEL_65;
      }
      continue;
    }
    break;
  }
  if (v95 != v94 && v91 != v98)
  {
    __p = (void *)0x3F50624DD2F1A9FCLL;
    v327 = 0x3EB0C6F7A0B5ED8DLL;
    if (sub_239941054((float *)v87, (float *)&v75[32 * v82 + 8], (float *)v88, (float *)&v75[32 * v84 + 8], (double *)&__p, (double *)&v327) != 3)goto LABEL_255;
    goto LABEL_71;
  }
  __p = 0;
  v331 = 0;
  *(_QWORD *)&v332 = -1;
  *((_QWORD *)&v332 + 1) = -1;
  v327 = 0;
  v328 = 0;
  *(_QWORD *)&v329 = -1;
  *((_QWORD *)&v329 + 1) = -1;
  v109 = *v97;
  v110 = *v92 == v109;
  if (*v92 == v109)
    v111 = &v75[32 * v82];
  else
    v111 = &v75[32 * v84];
  if (v110)
    v112 = v82;
  else
    v112 = v84;
  if (v110)
    v113 = (__int128 *)(v87 + 16);
  else
    v113 = (__int128 *)(v88 + 16);
  if (v110)
    v114 = (uint64_t *)&v75[32 * v84];
  else
    v114 = (uint64_t *)&v75[32 * v82];
  if (!v110)
  {
    v84 = v82;
    v93 = v87 + 16;
  }
  v115 = *((_DWORD *)v111 + 1);
  LODWORD(__p) = *(_DWORD *)v111;
  HIDWORD(__p) = v115;
  v331 = *(_DWORD **)&v75[32 * v112 + 8];
  v332 = *v113;
  v327 = *v114;
  v328 = *(_QWORD *)&v75[32 * v84 + 8];
  v329 = *(_OWORD *)v93;
  v116 = *v303;
  v318 = *(_DWORD *)(sub_239962518(v326, (unsigned int *)&v332 + 3) + 16);
  v117 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v116);
  v118 = *v117;
  v119 = (std::__shared_weak_count *)v117[1];
  if (v119)
  {
    v120 = (unint64_t *)&v119->__shared_owners_;
    do
      v121 = __ldxr(v120);
    while (__stxr(v121 + 1, v120));
    do
      v122 = __ldaxr(v120);
    while (__stlxr(v122 - 1, v120));
    if (!v122)
    {
      ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
      std::__shared_weak_count::__release_weak(v119);
    }
  }
  v309 = *(_QWORD *)(v118 + 40);
  v123 = *v303;
  v124 = *(_DWORD *)(sub_239962518(v326, (unsigned int *)&v329 + 3) + 16);
  v125 = (uint64_t *)(*(_QWORD *)(v306 + 56) + 16 * v123);
  v126 = *v125;
  v127 = (std::__shared_weak_count *)v125[1];
  if (v127)
  {
    v128 = (unint64_t *)&v127->__shared_owners_;
    do
      v129 = __ldxr(v128);
    while (__stxr(v129 + 1, v128));
    do
      v130 = __ldaxr(v128);
    while (__stlxr(v130 - 1, v128));
    if (!v130)
    {
      ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
      std::__shared_weak_count::__release_weak(v127);
    }
  }
  v131 = *(_QWORD *)(v126 + 40);
  v132 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * v22[3]);
  v133 = *v132;
  v134 = (std::__shared_weak_count *)v132[1];
  if (v134)
  {
    v135 = (unint64_t *)&v134->__shared_owners_;
    do
      v136 = __ldxr(v135);
    while (__stxr(v136 + 1, v135));
    do
      v137 = __ldaxr(v135);
    while (__stlxr(v137 - 1, v135));
    if (!v137)
    {
      ((void (*)(std::__shared_weak_count *))v134->__on_zero_shared)(v134);
      std::__shared_weak_count::__release_weak(v134);
    }
  }
  v138 = DWORD1(v332);
  v139 = *(_QWORD *)(v133 + 40);
  v140 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * v22[3]);
  v141 = *v140;
  v142 = (std::__shared_weak_count *)v140[1];
  if (v142)
  {
    v143 = (unint64_t *)&v142->__shared_owners_;
    do
      v144 = __ldxr(v143);
    while (__stxr(v144 + 1, v143));
    do
      v145 = __ldaxr(v143);
    while (__stlxr(v145 - 1, v143));
    if (!v145)
    {
      v323 = v124;
      v146 = v138;
      v147 = v139;
      ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
      std::__shared_weak_count::__release_weak(v142);
      v139 = v147;
      v138 = v146;
      v124 = v323;
    }
  }
  v148 = (unsigned int *)(v131 + 12 * v124);
  v149 = *v148;
  v150 = *(_QWORD *)(v141 + 40);
  v151 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * v22[3]);
  v152 = *v151;
  v153 = (std::__shared_weak_count *)v151[1];
  if (v153)
  {
    v154 = (unint64_t *)&v153->__shared_owners_;
    do
      v155 = __ldxr(v154);
    while (__stxr(v155 + 1, v154));
    do
      v156 = __ldaxr(v154);
    while (__stlxr(v156 - 1, v154));
    if (!v156)
    {
      v290 = v139;
      v293 = v138;
      ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
      std::__shared_weak_count::__release_weak(v153);
      v139 = v290;
      v138 = v293;
    }
  }
  v324 = v148;
  v157 = v148[1];
  v158 = *(_QWORD *)(v152 + 40);
  v159 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * v22[3]);
  v160 = *v159;
  v161 = (std::__shared_weak_count *)v159[1];
  if (v161)
  {
    v162 = (unint64_t *)&v161->__shared_owners_;
    do
      v163 = __ldxr(v162);
    while (__stxr(v163 + 1, v162));
    do
      v164 = __ldaxr(v162);
    while (__stlxr(v164 - 1, v162));
    if (!v164)
    {
      v291 = v139;
      v294 = v138;
      ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
      std::__shared_weak_count::__release_weak(v161);
      v139 = v291;
      v138 = v294;
    }
  }
  if (!sub_239940F9C((float *)(v139 + 8 * v138), (float *)(v150 + 8 * v149), (float *)(v158 + 8 * v157), (float *)(*(_QWORD *)(v160 + 40) + 8 * v324[2])))
  {
    v165 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
    v166 = *v165;
    v167 = (std::__shared_weak_count *)v165[1];
    if (v167)
    {
      v168 = (unint64_t *)&v167->__shared_owners_;
      do
        v169 = __ldxr(v168);
      while (__stxr(v169 + 1, v168));
      do
        v170 = __ldaxr(v168);
      while (__stlxr(v170 - 1, v168));
      if (!v170)
      {
        ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
        std::__shared_weak_count::__release_weak(v167);
      }
    }
    v171 = v329;
    v172 = *(_QWORD *)(v166 + 40);
    v173 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
    v174 = *v173;
    v175 = (std::__shared_weak_count *)v173[1];
    if (v175)
    {
      v176 = (unint64_t *)&v175->__shared_owners_;
      do
        v177 = __ldxr(v176);
      while (__stxr(v177 + 1, v176));
      do
        v178 = __ldaxr(v176);
      while (__stlxr(v178 - 1, v176));
      if (!v178)
      {
        v179 = v171;
        v180 = v172;
        ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
        std::__shared_weak_count::__release_weak(v175);
        v172 = v180;
        v171 = v179;
      }
    }
    v181 = (unsigned int *)(v309 + 12 * v318);
    v182 = *v181;
    v183 = *(_QWORD *)(v174 + 40);
    v184 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
    v185 = *v184;
    v186 = (std::__shared_weak_count *)v184[1];
    if (v186)
    {
      v187 = (unint64_t *)&v186->__shared_owners_;
      do
        v188 = __ldxr(v187);
      while (__stxr(v188 + 1, v187));
      do
        v189 = __ldaxr(v187);
      while (__stlxr(v189 - 1, v187));
      if (!v189)
      {
        v319 = v171;
        v310 = v172;
        v190 = v182;
        ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
        std::__shared_weak_count::__release_weak(v186);
        v182 = v190;
        v172 = v310;
        v171 = v319;
      }
    }
    v191 = v181[1];
    v192 = *(_QWORD *)(v185 + 40);
    v193 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
    v194 = *v193;
    v195 = (std::__shared_weak_count *)v193[1];
    if (v195)
    {
      v196 = (unint64_t *)&v195->__shared_owners_;
      do
        v197 = __ldxr(v196);
      while (__stxr(v197 + 1, v196));
      do
        v198 = __ldaxr(v196);
      while (__stlxr(v198 - 1, v196));
      if (!v198)
      {
        v320 = v171;
        v311 = v172;
        v295 = v182;
        ((void (*)(std::__shared_weak_count *))v195->__on_zero_shared)(v195);
        std::__shared_weak_count::__release_weak(v195);
        v182 = v295;
        v172 = v311;
        v171 = v320;
      }
    }
    if (!sub_239940F9C((float *)(v172 + 8 * v171), (float *)(v183 + 8 * v182), (float *)(v192 + 8 * v191), (float *)(*(_QWORD *)(v194 + 40) + 8 * v181[2])))
    {
      if (*v181 == (_DWORD)v332)
      {
        v199 = 0;
        if (*v324 == (_DWORD)v332)
          goto LABEL_168;
LABEL_194:
        if (v324[1] == (_DWORD)v332)
        {
          v218 = 1;
        }
        else if (v324[2] == (_DWORD)v332)
        {
          v218 = 2;
        }
        else
        {
          v218 = 99;
        }
        v321 = v218;
        v219 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
        v201 = *v219;
        v202 = (std::__shared_weak_count *)v219[1];
        if (v202)
          goto LABEL_200;
      }
      else
      {
        if (v181[1] == (_DWORD)v332)
        {
          v199 = 1;
          if (*v324 != (_DWORD)v332)
            goto LABEL_194;
        }
        else
        {
          if (v181[2] == (_DWORD)v332)
            v199 = 2;
          else
            v199 = 99;
          if (*v324 != (_DWORD)v332)
            goto LABEL_194;
        }
LABEL_168:
        v321 = 0;
        v200 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
        v201 = *v200;
        v202 = (std::__shared_weak_count *)v200[1];
        if (v202)
        {
LABEL_200:
          v220 = (unint64_t *)&v202->__shared_owners_;
          do
            v221 = __ldxr(v220);
          while (__stxr(v221 + 1, v220));
          do
            v222 = __ldaxr(v220);
          while (__stlxr(v222 - 1, v220));
          if (!v222)
          {
            v223 = v199;
            ((void (*)(std::__shared_weak_count *))v202->__on_zero_shared)(v202);
            std::__shared_weak_count::__release_weak(v202);
            v199 = v223;
          }
        }
      }
      v224 = v329;
      v225 = *(_QWORD *)(v201 + 40);
      v226 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
      v227 = *v226;
      v228 = (std::__shared_weak_count *)v226[1];
      if (v228)
      {
        v229 = (unint64_t *)&v228->__shared_owners_;
        do
          v230 = __ldxr(v229);
        while (__stxr(v230 + 1, v229));
        do
          v231 = __ldaxr(v229);
        while (__stlxr(v231 - 1, v229));
        if (!v231)
        {
          v312 = v199;
          v232 = v224;
          v233 = v225;
          ((void (*)(std::__shared_weak_count *))v228->__on_zero_shared)(v228);
          std::__shared_weak_count::__release_weak(v228);
          v225 = v233;
          v224 = v232;
          v199 = v312;
        }
      }
      v234 = DWORD1(v329);
      v235 = *(_QWORD *)(v227 + 40);
      v236 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
      v237 = *v236;
      v238 = (std::__shared_weak_count *)v236[1];
      if (v238)
      {
        v239 = (unint64_t *)&v238->__shared_owners_;
        do
          v240 = __ldxr(v239);
        while (__stxr(v240 + 1, v239));
        do
          v241 = __ldaxr(v239);
        while (__stlxr(v241 - 1, v239));
        if (!v241)
        {
          v313 = v199;
          v296 = v224;
          v242 = v225;
          v243 = v234;
          ((void (*)(std::__shared_weak_count *))v238->__on_zero_shared)(v238);
          std::__shared_weak_count::__release_weak(v238);
          v234 = v243;
          v225 = v242;
          v224 = v296;
          v199 = v313;
        }
      }
      v244 = v181[(v199 + 1 - 3 * ((unsigned __int16)(86 * (v199 + 1)) >> 8))];
      v245 = *(_QWORD *)(v237 + 40);
      v246 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
      v247 = *v246;
      v248 = (std::__shared_weak_count *)v246[1];
      if (v248)
      {
        v249 = (unint64_t *)&v248->__shared_owners_;
        do
          v250 = __ldxr(v249);
        while (__stxr(v250 + 1, v249));
        do
          v251 = __ldaxr(v249);
        while (__stlxr(v251 - 1, v249));
        if (!v251)
        {
          v314 = v199;
          v292 = v225;
          v297 = v224;
          v289 = v235;
          v252 = v234;
          ((void (*)(std::__shared_weak_count *))v248->__on_zero_shared)(v248);
          std::__shared_weak_count::__release_weak(v248);
          v234 = v252;
          v235 = v289;
          v225 = v292;
          v224 = v297;
          v199 = v314;
        }
      }
      if (sub_239941054((float *)(v225 + 8 * v224), (float *)(v235 + 8 * v234), (float *)(v245 + 8 * v244), (float *)(*(_QWORD *)(v247 + 40)+ 8* v181[(v199 + 2 - 3 * ((unsigned __int16)(86 * (v199 + 2)) >> 8))]), (double *)&v338, (double *)&v337) != 3)goto LABEL_255;
      v253 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
      v254 = *v253;
      v255 = (std::__shared_weak_count *)v253[1];
      if (v255)
      {
        v256 = (unint64_t *)&v255->__shared_owners_;
        do
          v257 = __ldxr(v256);
        while (__stxr(v257 + 1, v256));
        do
          v258 = __ldaxr(v256);
        while (__stlxr(v258 - 1, v256));
        if (!v258)
        {
          ((void (*)(std::__shared_weak_count *))v255->__on_zero_shared)(v255);
          std::__shared_weak_count::__release_weak(v255);
        }
      }
      v259 = v332;
      v260 = *(_QWORD *)(v254 + 40);
      v261 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
      v262 = *v261;
      v263 = (std::__shared_weak_count *)v261[1];
      if (v263)
      {
        v264 = (unint64_t *)&v263->__shared_owners_;
        do
          v265 = __ldxr(v264);
        while (__stxr(v265 + 1, v264));
        do
          v266 = __ldaxr(v264);
        while (__stlxr(v266 - 1, v264));
        if (!v266)
        {
          v267 = v259;
          v268 = v260;
          ((void (*)(std::__shared_weak_count *))v263->__on_zero_shared)(v263);
          std::__shared_weak_count::__release_weak(v263);
          v260 = v268;
          v259 = v267;
        }
      }
      v269 = DWORD1(v332);
      v270 = *(_QWORD *)(v262 + 40);
      v271 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
      v272 = *v271;
      v273 = (std::__shared_weak_count *)v271[1];
      if (v273)
      {
        v274 = (unint64_t *)&v273->__shared_owners_;
        do
          v275 = __ldxr(v274);
        while (__stxr(v275 + 1, v274));
        do
          v276 = __ldaxr(v274);
        while (__stlxr(v276 - 1, v274));
        if (!v276)
        {
          v315 = v259;
          v277 = v260;
          ((void (*)(std::__shared_weak_count *))v273->__on_zero_shared)(v273);
          std::__shared_weak_count::__release_weak(v273);
          v260 = v277;
          v259 = v315;
        }
      }
      v278 = v324[(v321 + 1 - 3 * ((unsigned __int16)(86 * (v321 + 1)) >> 8))];
      v279 = *(_QWORD *)(v272 + 40);
      v280 = (uint64_t *)(*(_QWORD *)(v306 + 80) + 16 * a3[3]);
      v281 = *v280;
      v282 = (std::__shared_weak_count *)v280[1];
      if (v282)
      {
        v283 = (unint64_t *)&v282->__shared_owners_;
        do
          v284 = __ldxr(v283);
        while (__stxr(v284 + 1, v283));
        do
          v285 = __ldaxr(v283);
        while (__stlxr(v285 - 1, v283));
        if (!v285)
        {
          v316 = v259;
          v298 = v260;
          ((void (*)(std::__shared_weak_count *))v282->__on_zero_shared)(v282);
          std::__shared_weak_count::__release_weak(v282);
          v260 = v298;
          v259 = v316;
        }
      }
      v286 = sub_239941054((float *)(v260 + 8 * v259), (float *)(v270 + 8 * v269), (float *)(v279 + 8 * v278), (float *)(*(_QWORD *)(v281 + 40)+ 8* v324[(v321 + 2 - 3 * ((unsigned __int16)(86 * (v321 + 2)) >> 8))]), (double *)&v338, (double *)&v337);
      v22 = a3;
      if (v286 != 3)
        goto LABEL_255;
      v8 = v306;
      goto LABEL_71;
    }
  }
LABEL_255:
  *v301 = *v89;
  *v302 = *v90;
  v77 = 1;
LABEL_256:
  v78 = v334;
  if (v334)
LABEL_257:
    operator delete(v78);
LABEL_258:
  if ((v77 & 7) == 0)
  {
LABEL_261:
    v79 = 0;
    v287 = v339;
    if (v339)
      goto LABEL_262;
    goto LABEL_263;
  }
  v79 = 1;
  v287 = v339;
  if (!v339)
    goto LABEL_263;
LABEL_262:
  v340 = v287;
  operator delete(v287);
LABEL_263:
  if (v342)
  {
    v343 = v342;
    operator delete(v342);
  }
  return v79;
}

void sub_2399842A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36)
{
  uint64_t v36;
  void *v38;
  void *v39;
  void *v40;

  if (__p)
  {
    operator delete(__p);
    v38 = *(void **)(v36 - 184);
    if (!v38)
    {
LABEL_3:
      v39 = *(void **)(v36 - 144);
      if (!v39)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else
  {
    v38 = *(void **)(v36 - 184);
    if (!v38)
      goto LABEL_3;
  }
  *(_QWORD *)(v36 - 176) = v38;
  operator delete(v38);
  v39 = *(void **)(v36 - 144);
  if (!v39)
  {
LABEL_4:
    v40 = *(void **)(v36 - 120);
    if (!v40)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  *(_QWORD *)(v36 - 136) = v39;
  operator delete(v39);
  v40 = *(void **)(v36 - 120);
  if (!v40)
LABEL_5:
    _Unwind_Resume(exception_object);
LABEL_9:
  *(_QWORD *)(v36 - 112) = v40;
  operator delete(v40);
  _Unwind_Resume(exception_object);
}

uint64_t sub_23998434C(uint64_t a1, uint64_t *a2, uint64_t a3, _DWORD *a4, _DWORD *a5, _QWORD *a6, char **a7)
{
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unsigned int *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int *v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  char **v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  _DWORD *v51;
  unint64_t v52;
  char *v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _BYTE *v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _OWORD *v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _OWORD *v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  _OWORD *v91;
  char *v92;
  uint64_t v93;
  __int128 v94;
  int v95;
  void **v96;
  void **v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  void *v101;
  void **v102;
  void **v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t *v109;
  unsigned int v111;
  unsigned int v112;
  void *__p[2];
  __int128 v114;
  __int128 v115;
  void *v116[2];
  __int128 v117;
  __int128 v118;

  v117 = 0u;
  v118 = 0u;
  v115 = 0u;
  *(_OWORD *)v116 = 0u;
  *(_OWORD *)__p = 0u;
  v114 = 0u;
  sub_239931BC8((uint64_t)v116);
  *(_DWORD *)(*(_QWORD *)((char *)v116[1] + (((*((_QWORD *)&v118 + 1) + (_QWORD)v118) >> 7) & 0x1FFFFFFFFFFFFF8))
            + 4 * ((*((_QWORD *)&v118 + 1) + v118) & 0x3FF)) = *a4;
  v13 = (char *)__p[1];
  v14 = (((_QWORD)v114 - (unint64_t)__p[1]) << 7) - 1;
  ++*((_QWORD *)&v118 + 1);
  if ((void *)v114 == __p[1])
    v14 = 0;
  v15 = *((_QWORD *)&v115 + 1) + v115;
  if (v14 == *((_QWORD *)&v115 + 1) + (_QWORD)v115)
  {
    sub_239931BC8((uint64_t)__p);
    v13 = (char *)__p[1];
    v15 = *((_QWORD *)&v115 + 1) + v115;
  }
  *(_DWORD *)(*(_QWORD *)&v13[(v15 >> 7) & 0x1FFFFFFFFFFFFF8] + 4 * (v15 & 0x3FF)) = *a5;
  ++*((_QWORD *)&v115 + 1);
  v17 = *(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 160);
  v18 = v16 - v17;
  v109 = a2;
  if (v16 == v17)
  {
    v19 = 0;
  }
  else
  {
    if (v18 < 0)
      sub_2394189F8();
    v19 = operator new(v16 - v17);
    bzero(v19, v18 & 0xFFFFFFFFFFFFFFFCLL);
  }
  *((_DWORD *)v19 + *a4) = 1;
  *((_DWORD *)v19 + *a5) = 2;
  v20 = (unsigned int *)(a3 + 4);
  v21 = (unsigned int *)(a3 + 8);
  while (*((_QWORD *)&v118 + 1))
  {
    v112 = *(_DWORD *)(*(_QWORD *)((char *)v116[1] + (((unint64_t)v118 >> 7) & 0x1FFFFFFFFFFFFF8))
                     + 4 * (v118 & 0x3FF));
    *(_QWORD *)&v118 = v118 + 1;
    --*((_QWORD *)&v118 + 1);
    if ((unint64_t)v118 >= 0x800)
    {
      operator delete(*(void **)v116[1]);
      v116[1] = (char *)v116[1] + 8;
      *(_QWORD *)&v118 = v118 - 1024;
    }
    v22 = *(_DWORD *)sub_23996252C(a1 + 104, &v112);
    v111 = v22;
    do
    {
      v111 = *(_DWORD *)(sub_239962518(a1 + 104, &v111) + 8);
      if (!sub_23997D1DC(a1, &v111, v20, v21))
      {
        v23 = (unsigned int *)sub_239962518(a1 + 104, &v111);
        v24 = *(unsigned int *)(sub_239962518(a1 + 104, v23) + 16);
        if (!*((_DWORD *)v19 + v24))
        {
          v25 = (char *)v116[1];
          v26 = (((_QWORD)v117 - (unint64_t)v116[1]) << 7) - 1;
          if ((void *)v117 == v116[1])
            v26 = 0;
          v27 = *((_QWORD *)&v118 + 1) + v118;
          if (v26 == *((_QWORD *)&v118 + 1) + (_QWORD)v118)
          {
            sub_239931BC8((uint64_t)v116);
            v25 = (char *)v116[1];
            v27 = *((_QWORD *)&v118 + 1) + v118;
          }
          *(_DWORD *)(*(_QWORD *)&v25[(v27 >> 7) & 0x1FFFFFFFFFFFFF8] + 4 * (v27 & 0x3FF)) = v24;
          ++*((_QWORD *)&v118 + 1);
          *((_DWORD *)v19 + v24) = 1;
        }
      }
    }
    while (v111 != v22);
    v28 = *((_QWORD *)&v115 + 1);
    if (*((_QWORD *)&v115 + 1))
    {
LABEL_25:
      v112 = *(_DWORD *)(*(_QWORD *)((char *)__p[1] + (((unint64_t)v115 >> 7) & 0x1FFFFFFFFFFFFF8))
                       + 4 * (v115 & 0x3FF));
      *(_QWORD *)&v115 = v115 + 1;
      *((_QWORD *)&v115 + 1) = v28 - 1;
      if ((unint64_t)v115 >= 0x800)
      {
        operator delete(*(void **)__p[1]);
        __p[1] = (char *)__p[1] + 8;
        *(_QWORD *)&v115 = v115 - 1024;
      }
      v29 = *(_DWORD *)sub_23996252C(a1 + 104, &v112);
      v111 = v29;
      do
      {
        v111 = *(_DWORD *)(sub_239962518(a1 + 104, &v111) + 8);
        if (!sub_23997D1DC(a1, &v111, v20, v21))
        {
          v30 = (unsigned int *)sub_239962518(a1 + 104, &v111);
          v31 = *(unsigned int *)(sub_239962518(a1 + 104, v30) + 16);
          if (!*((_DWORD *)v19 + v31))
          {
            v32 = (char *)__p[1];
            v33 = (((_QWORD)v114 - (unint64_t)__p[1]) << 7) - 1;
            if ((void *)v114 == __p[1])
              v33 = 0;
            v34 = *((_QWORD *)&v115 + 1) + v115;
            if (v33 == *((_QWORD *)&v115 + 1) + (_QWORD)v115)
            {
              sub_239931BC8((uint64_t)__p);
              v32 = (char *)__p[1];
              v34 = *((_QWORD *)&v115 + 1) + v115;
            }
            *(_DWORD *)(*(_QWORD *)&v32[(v34 >> 7) & 0x1FFFFFFFFFFFFF8] + 4 * (v34 & 0x3FF)) = v31;
            ++*((_QWORD *)&v115 + 1);
            *((_DWORD *)v19 + v31) = 2;
          }
        }
      }
      while (v111 != v29);
    }
  }
  v28 = *((_QWORD *)&v115 + 1);
  if (*((_QWORD *)&v115 + 1))
    goto LABEL_25;
  a6[1] = *a6;
  v35 = v109;
  v36 = a7;
  a7[1] = *a7;
  v37 = *v109;
  if (v109[1] != *v109)
  {
    v38 = 0;
    while (1)
    {
      v40 = *(unsigned int *)(v37 + 4 * v38);
      v41 = *((_DWORD *)v19 + v40);
      if (v41 != 2)
        break;
      v53 = v36[1];
      v52 = (unint64_t)v36[2];
      if ((unint64_t)v53 >= v52)
      {
        v60 = *v36;
        v61 = v53 - *v36;
        v62 = v61 >> 2;
        v63 = (v61 >> 2) + 1;
        if (v63 >> 62)
LABEL_140:
          sub_2394189F8();
        v64 = v52 - (_QWORD)v60;
        if (v64 >> 1 > v63)
          v63 = v64 >> 1;
        if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL)
          v65 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v65 = v63;
        if (v65)
        {
          if (v65 >> 62)
LABEL_141:
            sub_239418A80();
          v66 = operator new(4 * v65);
          v67 = &v66[4 * v62];
          *(_DWORD *)v67 = *(_DWORD *)(v37 + 4 * v38);
          v68 = (uint64_t)(v67 + 4);
          if (v53 != v60)
          {
LABEL_76:
            v69 = v53 - 4 - v60;
            if (v69 < 0x2C)
            {
              v36 = a7;
              goto LABEL_99;
            }
            v36 = a7;
            if ((unint64_t)(v53 - &v66[v61]) < 0x20)
              goto LABEL_145;
            v80 = (v69 >> 2) + 1;
            v81 = 4 * (v80 & 0x7FFFFFFFFFFFFFF8);
            v82 = &v53[-v81];
            v67 -= v81;
            v83 = &v66[4 * v62 - 16];
            v84 = v53 - 16;
            v85 = v80 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v86 = *(_OWORD *)v84;
              *(v83 - 1) = *((_OWORD *)v84 - 1);
              *v83 = v86;
              v83 -= 2;
              v84 -= 32;
              v85 -= 8;
            }
            while (v85);
            v53 = v82;
            if (v80 != (v80 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_145:
              do
              {
LABEL_99:
                v87 = *((_DWORD *)v53 - 1);
                v53 -= 4;
                *((_DWORD *)v67 - 1) = v87;
                v67 -= 4;
              }
              while (v53 != v60);
            }
            v53 = *v36;
            *v36 = v67;
            v36[1] = (char *)v68;
            v36[2] = &v66[4 * v65];
            if (v53)
LABEL_101:
              operator delete(v53);
LABEL_102:
            v35 = v109;
            v36[1] = (char *)v68;
            goto LABEL_40;
          }
        }
        else
        {
          v66 = 0;
          v67 = (char *)(4 * v62);
          *(_DWORD *)(4 * v62) = v40;
          v68 = 4 * v62 + 4;
          if (v53 != v60)
            goto LABEL_76;
        }
        v36 = a7;
        *a7 = v67;
        a7[1] = (char *)v68;
        a7[2] = &v66[4 * v65];
        if (v53)
          goto LABEL_101;
        goto LABEL_102;
      }
      *(_DWORD *)v53 = v40;
      v36[1] = v53 + 4;
LABEL_40:
      ++v38;
      v37 = *v35;
      if (v38 >= (v35[1] - *v35) >> 2)
        goto LABEL_111;
    }
    if (v41 == 1)
    {
      v43 = (char *)a6[1];
      v42 = a6[2];
      if ((unint64_t)v43 >= v42)
      {
        v44 = (char *)*a6;
        v45 = (uint64_t)&v43[-*a6];
        v46 = v45 >> 2;
        v47 = (v45 >> 2) + 1;
        if (v47 >> 62)
          goto LABEL_140;
        v48 = v42 - (_QWORD)v44;
        if (v48 >> 1 > v47)
          v47 = v48 >> 1;
        if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFFCLL)
          v49 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v49 = v47;
        if (v49)
        {
          if (v49 >> 62)
            goto LABEL_141;
          v50 = operator new(4 * v49);
          v51 = &v50[4 * v46];
          *v51 = *(_DWORD *)(v37 + 4 * v38);
          v39 = (uint64_t)(v51 + 1);
          if (v43 == v44)
            goto LABEL_87;
        }
        else
        {
          v50 = 0;
          v51 = (_DWORD *)(4 * v46);
          *(_DWORD *)(4 * v46) = v40;
          v39 = 4 * v46 + 4;
          if (v43 == v44)
            goto LABEL_87;
        }
        v70 = v43 - 4 - v44;
        if (v70 < 0x2C)
        {
          v36 = a7;
          do
          {
LABEL_93:
            v79 = *((_DWORD *)v43 - 1);
            v43 -= 4;
            *--v51 = v79;
          }
          while (v43 != v44);
          goto LABEL_108;
        }
        v36 = a7;
        if ((unint64_t)(v43 - &v50[v45]) < 0x20)
          goto LABEL_93;
        v72 = (v70 >> 2) + 1;
        v73 = 4 * (v72 & 0x7FFFFFFFFFFFFFF8);
        v74 = &v43[-v73];
        v51 = (_DWORD *)((char *)v51 - v73);
        v75 = &v50[4 * v46 - 16];
        v76 = v43 - 16;
        v77 = v72 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v78 = *(_OWORD *)v76;
          *(v75 - 1) = *((_OWORD *)v76 - 1);
          *v75 = v78;
          v75 -= 2;
          v76 -= 32;
          v77 -= 8;
        }
        while (v77);
        v43 = v74;
        if (v72 != (v72 & 0x7FFFFFFFFFFFFFF8))
          goto LABEL_93;
LABEL_108:
        v43 = (char *)*a6;
        *a6 = v51;
        a6[1] = v39;
        a6[2] = &v50[4 * v49];
        if (!v43)
        {
LABEL_110:
          v35 = v109;
          goto LABEL_39;
        }
LABEL_109:
        operator delete(v43);
        goto LABEL_110;
      }
    }
    else
    {
      v43 = (char *)a6[1];
      v54 = a6[2];
      if ((unint64_t)v43 >= v54)
      {
        v55 = (char *)*a6;
        v56 = (uint64_t)&v43[-*a6];
        v57 = v56 >> 2;
        v58 = (v56 >> 2) + 1;
        if (v58 >> 62)
          goto LABEL_140;
        v59 = v54 - (_QWORD)v55;
        if (v59 >> 1 > v58)
          v58 = v59 >> 1;
        if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFFCLL)
          v49 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v49 = v58;
        if (v49)
        {
          if (v49 >> 62)
            goto LABEL_141;
          v50 = operator new(4 * v49);
          v51 = &v50[4 * v57];
          *v51 = *(_DWORD *)(v37 + 4 * v38);
          v39 = (uint64_t)(v51 + 1);
          if (v43 == v55)
          {
LABEL_87:
            v36 = a7;
            *a6 = v51;
            a6[1] = v39;
            a6[2] = &v50[4 * v49];
            if (!v43)
              goto LABEL_110;
            goto LABEL_109;
          }
        }
        else
        {
          v50 = 0;
          v51 = (_DWORD *)(4 * v57);
          *(_DWORD *)(4 * v57) = v40;
          v39 = 4 * v57 + 4;
          if (v43 == v55)
            goto LABEL_87;
        }
        v71 = v43 - 4 - v55;
        if (v71 >= 0x2C)
        {
          v36 = a7;
          if ((unint64_t)(v43 - &v50[v56]) >= 0x20)
          {
            v88 = (v71 >> 2) + 1;
            v89 = 4 * (v88 & 0x7FFFFFFFFFFFFFF8);
            v90 = &v43[-v89];
            v51 = (_DWORD *)((char *)v51 - v89);
            v91 = &v50[4 * v57 - 16];
            v92 = v43 - 16;
            v93 = v88 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v94 = *(_OWORD *)v92;
              *(v91 - 1) = *((_OWORD *)v92 - 1);
              *v91 = v94;
              v91 -= 2;
              v92 -= 32;
              v93 -= 8;
            }
            while (v93);
            v43 = v90;
            if (v88 == (v88 & 0x7FFFFFFFFFFFFFF8))
              goto LABEL_108;
          }
        }
        else
        {
          v36 = a7;
        }
        do
        {
          v95 = *((_DWORD *)v43 - 1);
          v43 -= 4;
          *--v51 = v95;
        }
        while (v43 != v55);
        goto LABEL_108;
      }
    }
    *(_DWORD *)v43 = v40;
    v39 = (uint64_t)(v43 + 4);
LABEL_39:
    a6[1] = v39;
    goto LABEL_40;
  }
LABEL_111:
  if (v19)
    operator delete(v19);
  v96 = (void **)__p[1];
  v97 = (void **)v114;
  *((_QWORD *)&v115 + 1) = 0;
  v98 = v114 - (unint64_t)__p[1];
  if ((unint64_t)v114 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v96);
      v97 = (void **)v114;
      v96 = (void **)((char *)__p[1] + 8);
      __p[1] = v96;
      v98 = v114 - (_QWORD)v96;
    }
    while ((_QWORD)v114 - (_QWORD)v96 > 0x10uLL);
  }
  v99 = v98 >> 3;
  if (v99 == 1)
  {
    v100 = 512;
    goto LABEL_119;
  }
  if (v99 == 2)
  {
    v100 = 1024;
LABEL_119:
    *(_QWORD *)&v115 = v100;
  }
  if (v96 != v97)
  {
    do
    {
      v101 = *v96++;
      operator delete(v101);
    }
    while (v96 != v97);
    if ((void *)v114 != __p[1])
      *(_QWORD *)&v114 = v114 + (((unint64_t)__p[1] - v114 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (__p[0])
    operator delete(__p[0]);
  v102 = (void **)v116[1];
  v103 = (void **)v117;
  *((_QWORD *)&v118 + 1) = 0;
  v104 = v117 - (unint64_t)v116[1];
  if ((unint64_t)v117 - (unint64_t)v116[1] >= 0x11)
  {
    do
    {
      operator delete(*v102);
      v103 = (void **)v117;
      v102 = (void **)((char *)v116[1] + 8);
      v116[1] = v102;
      v104 = v117 - (_QWORD)v102;
    }
    while ((_QWORD)v117 - (_QWORD)v102 > 0x10uLL);
  }
  v105 = v104 >> 3;
  if (v105 == 1)
  {
    v106 = 512;
    goto LABEL_132;
  }
  if (v105 == 2)
  {
    v106 = 1024;
LABEL_132:
    *(_QWORD *)&v118 = v106;
  }
  if (v102 != v103)
  {
    do
    {
      v107 = *v102++;
      operator delete(v107);
    }
    while (v102 != v103);
    if ((void *)v117 != v116[1])
      *(_QWORD *)&v117 = v117 + (((unint64_t)v116[1] - v117 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v116[0])
    operator delete(v116[0]);
  return 1;
}

void sub_239984CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_23953439C((uint64_t)va);
  sub_23953439C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_239984CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  void *v19;

  operator delete(v19);
  sub_23953439C((uint64_t)&a13);
  sub_23953439C((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_239984D38(_QWORD *a1, uint64_t *a2, unsigned int *a3, _DWORD *a4)
{
  uint64_t *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  unsigned int *v28;
  _DWORD *v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  uint64_t *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL4 v40;
  _BOOL4 v41;
  uint64_t v42;
  unsigned int i;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t **v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t **v57;
  unsigned int v58;
  uint64_t *v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  uint64_t *v72;
  uint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  std::__shared_weak_count *v80;
  uint64_t v81;
  unint64_t *v82;
  unint64_t v83;
  unint64_t v84;
  int v85;
  _DWORD *v86;
  _DWORD *v87;
  uint64_t *v88;
  uint64_t **j;
  unsigned int v90;
  uint64_t **v91;
  unsigned int v92;
  _DWORD *v93;
  uint64_t *v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t *v97;
  std::__shared_weak_count *v98;
  uint64_t v99;
  unint64_t *v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t *v103;
  std::__shared_weak_count *v104;
  uint64_t v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  _DWORD *v109;
  char *v110;
  uint64_t v111;
  uint64_t v113;
  unsigned int *v115;
  int v116;
  unsigned int v117;
  _DWORD v118[5];
  unsigned int v119;
  _DWORD v120[4];
  uint64_t **v121;
  uint64_t *v122;
  uint64_t v123;
  void *__p;
  char *v125;
  char *v126;
  unsigned int *v127;
  unsigned int *v128;
  char *v129;

  v6 = (uint64_t *)(a1[10] + 16 * *a3);
  v7 = *v6;
  v8 = (std::__shared_weak_count *)v6[1];
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 48))(v7);
  v12 = (uint64_t *)(a1[10] + 16 * *a3);
  v13 = *v12;
  v14 = (std::__shared_weak_count *)v12[1];
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v116 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 16))(v13) - 1;
  v18 = a2[1];
  if (v18 == *a2)
  {
    v20 = a2[1];
  }
  else
  {
    v19 = 0;
    v18 = *a2;
    do
    {
      v21 = *(unsigned int *)(v18 + 4 * v19);
      v22 = (uint64_t *)(a1[7] + 16 * a3[1]);
      v24 = *v22;
      v23 = (std::__shared_weak_count *)v22[1];
      if (v23)
      {
        v25 = (unint64_t *)&v23->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      *(_DWORD *)(*(_QWORD *)(v24 + 40) + 4 * v21) = v116;
      ++v19;
      v18 = *a2;
      v20 = a2[1];
    }
    while (v19 < (v20 - *a2) >> 2);
  }
  v28 = (unsigned int *)operator new(0xCuLL);
  v128 = v28 + 3;
  v129 = (char *)(v28 + 3);
  *(_QWORD *)v28 = -1;
  v28[2] = -1;
  v127 = v28;
  v29 = operator new(0xCuLL);
  v125 = (char *)(v29 + 3);
  v126 = (char *)(v29 + 3);
  *(_QWORD *)v29 = -1;
  v29[2] = -1;
  v123 = 0;
  __p = v29;
  v121 = &v122;
  v122 = 0;
  if (v20 == v18)
  {
    sub_239421038((uint64_t)&v121, 0);
    v110 = (char *)__p;
    if (__p)
    {
LABEL_123:
      v125 = v110;
      operator delete(v110);
    }
  }
  else
  {
    v30 = 0;
    v115 = a3 + 2;
    v31 = a3 + 1;
    do
    {
      sub_23996389C((uint64_t)a1, (unsigned int *)(v18 + 4 * v30), (uint64_t)&v127);
      v111 = v30;
      v32 = *(_DWORD *)(*a2 + 4 * v30);
      v33 = (uint64_t *)(a1[7] + 16 * *v115);
      v34 = *v33;
      v35 = (std::__shared_weak_count *)v33[1];
      if (v35)
      {
        v36 = (unint64_t *)&v35->__shared_owners_;
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
        do
          v38 = __ldaxr(v36);
        while (__stlxr(v38 - 1, v36));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      v39 = *(_QWORD *)(v34 + 40);
      v40 = sub_23997D1DC((uint64_t)a1, v127, v31, v115);
      v41 = sub_23997D1DC((uint64_t)a1, v127 + 1, v31, v115);
      if ((((v40 || v41) | sub_23997D1DC((uint64_t)a1, v127 + 2, v31, v115)) & 1) != 0)
      {
        sub_23996362C((uint64_t)a1, (unsigned int *)(*a2 + 4 * v111), (uint64_t)&__p);
        v42 = 0;
        v113 = v39 + 12 * v32;
        do
        {
          sub_239962B1C((uint64_t)v120, a1 + 13, (unsigned int *)__p + v42);
          for (i = sub_239962B44(v120); ; i = sub_239962B44(v120))
          {
            v119 = i;
            if (i == -1)
              break;
            if (*(_DWORD *)(sub_239962518((uint64_t)(a1 + 13), &v119) + 16) != -1)
            {
              v44 = *v31;
              v45 = *(unsigned int *)(sub_239962518((uint64_t)(a1 + 13), &v119) + 16);
              v46 = (uint64_t *)(a1[7] + 16 * v44);
              v47 = *v46;
              v48 = (std::__shared_weak_count *)v46[1];
              if (v48)
              {
                v49 = (unint64_t *)&v48->__shared_owners_;
                do
                  v50 = __ldxr(v49);
                while (__stxr(v50 + 1, v49));
                do
                  v51 = __ldaxr(v49);
                while (__stlxr(v51 - 1, v49));
                if (!v51)
                {
                  ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
                  std::__shared_weak_count::__release_weak(v48);
                }
              }
              if (*(_DWORD *)(*(_QWORD *)(v47 + 40) + 4 * v45) == *a4)
              {
                v52 = *(unsigned int *)(v113 + 4 * v42);
                v53 = v122;
                if (!v122)
                  goto LABEL_57;
                v54 = &v122;
                v55 = v122;
                do
                {
                  v56 = v55;
                  v57 = v54;
                  v58 = *((_DWORD *)v55 + 7);
                  if (v58 >= v52)
                    v54 = (uint64_t **)v55;
                  else
                    ++v55;
                  v55 = (uint64_t *)*v55;
                }
                while (v55);
                if (v54 == &v122)
                  goto LABEL_57;
                if (v58 < v52)
                  v56 = (uint64_t *)v57;
                if (v52 < *((_DWORD *)v56 + 7))
                {
LABEL_57:
                  v59 = (uint64_t *)(a1[10] + 16 * a3[3]);
                  v60 = *v59;
                  v61 = (std::__shared_weak_count *)v59[1];
                  if (v61)
                  {
                    v62 = (unint64_t *)&v61->__shared_owners_;
                    do
                      v63 = __ldxr(v62);
                    while (__stxr(v63 + 1, v62));
                    do
                      v64 = __ldaxr(v62);
                    while (__stlxr(v64 - 1, v62));
                    if (!v64)
                    {
                      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
                      std::__shared_weak_count::__release_weak(v61);
                    }
                  }
                  (*(void (**)(uint64_t))(*(_QWORD *)v60 + 48))(v60);
                  v65 = (uint64_t *)(a1[10] + 16 * a3[3]);
                  v66 = *v65;
                  v67 = (std::__shared_weak_count *)v65[1];
                  if (v67)
                  {
                    v68 = (unint64_t *)&v67->__shared_owners_;
                    do
                      v69 = __ldxr(v68);
                    while (__stxr(v69 + 1, v68));
                    do
                      v70 = __ldaxr(v68);
                    while (__stlxr(v70 - 1, v68));
                    if (!v70)
                    {
                      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
                      std::__shared_weak_count::__release_weak(v67);
                    }
                  }
                  v71 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v66 + 16))(v66);
                  v72 = (uint64_t *)(a1[10] + 16 * a3[3]);
                  v73 = *v72;
                  v74 = (std::__shared_weak_count *)v72[1];
                  if (v74)
                  {
                    v75 = (unint64_t *)&v74->__shared_owners_;
                    do
                      v76 = __ldxr(v75);
                    while (__stxr(v76 + 1, v75));
                    do
                      v77 = __ldaxr(v75);
                    while (__stlxr(v77 - 1, v75));
                    if (!v77)
                    {
                      ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
                      std::__shared_weak_count::__release_weak(v74);
                    }
                  }
                  v78 = *(_QWORD *)(v73 + 40);
                  v79 = (uint64_t *)(a1[10] + 16 * a3[3]);
                  v81 = *v79;
                  v80 = (std::__shared_weak_count *)v79[1];
                  if (v80)
                  {
                    v82 = (unint64_t *)&v80->__shared_owners_;
                    do
                      v83 = __ldxr(v82);
                    while (__stxr(v83 + 1, v82));
                    do
                      v84 = __ldaxr(v82);
                    while (__stlxr(v84 - 1, v82));
                    if (!v84)
                    {
                      ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
                      std::__shared_weak_count::__release_weak(v80);
                    }
                  }
                  v85 = v71 - 1;
                  v86 = (_DWORD *)(v78 + 8 * v52);
                  v87 = (_DWORD *)(*(_QWORD *)(v81 + 40) + 8 * (v71 - 1));
                  *v87 = *v86;
                  v87[1] = v86[1];
                  v88 = v122;
                  for (j = &v122; ; v88 = *j)
                  {
                    v91 = j;
                    if (!v88)
                      goto LABEL_93;
                    while (1)
                    {
                      j = (uint64_t **)v88;
                      v92 = *((_DWORD *)v88 + 7);
                      if (v52 < v92)
                        break;
                      if (v92 >= v52)
                      {
                        v93 = j;
                        goto LABEL_97;
                      }
                      v88 = j[1];
                      if (!v88)
                      {
                        v91 = j + 1;
LABEL_93:
                        v93 = operator new(0x28uLL);
                        v93[7] = v52;
                        v93[8] = 0;
                        *(_QWORD *)v93 = 0;
                        *((_QWORD *)v93 + 1) = 0;
                        *((_QWORD *)v93 + 2) = j;
                        *v91 = (uint64_t *)v93;
                        v94 = (uint64_t *)v93;
                        if (*v121)
                        {
                          v121 = (uint64_t **)*v121;
                          v94 = *v91;
                        }
                        sub_2394213B8(v122, v94);
                        ++v123;
LABEL_97:
                        v93[8] = v85;
                        *(_DWORD *)(v113 + 4 * v42) = v85;
                        sub_239962B1C((uint64_t)v118, a1 + 13, (unsigned int *)__p + v42);
                        v95 = sub_239962B44(v118);
                        while (2)
                        {
                          v117 = v95;
                          if (v95 == -1)
                            goto LABEL_35;
                          v96 = *(unsigned int *)(sub_239962518((uint64_t)(a1 + 13), &v117) + 16);
                          if ((_DWORD)v96 != -1)
                          {
                            v97 = (uint64_t *)(a1[7] + 16 * *v31);
                            v99 = *v97;
                            v98 = (std::__shared_weak_count *)v97[1];
                            if (!v98)
                              goto LABEL_106;
                            v100 = (unint64_t *)&v98->__shared_owners_;
                            do
                              v101 = __ldxr(v100);
                            while (__stxr(v101 + 1, v100));
                            do
                              v102 = __ldaxr(v100);
                            while (__stlxr(v102 - 1, v100));
                            if (!v102)
                            {
                              ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
                              std::__shared_weak_count::__release_weak(v98);
                              if (*(_DWORD *)(*(_QWORD *)(v99 + 40) + 4 * v96) == v116)
                                goto LABEL_107;
                            }
                            else
                            {
LABEL_106:
                              if (*(_DWORD *)(*(_QWORD *)(v99 + 40) + 4 * v96) == v116)
                              {
LABEL_107:
                                v103 = (uint64_t *)(a1[7] + 16 * *v115);
                                v105 = *v103;
                                v104 = (std::__shared_weak_count *)v103[1];
                                if (!v104)
                                  goto LABEL_112;
                                v106 = (unint64_t *)&v104->__shared_owners_;
                                do
                                  v107 = __ldxr(v106);
                                while (__stxr(v107 + 1, v106));
                                do
                                  v108 = __ldaxr(v106);
                                while (__stlxr(v108 - 1, v106));
                                if (!v108)
                                {
                                  ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
                                  std::__shared_weak_count::__release_weak(v104);
                                  v109 = (_DWORD *)(*(_QWORD *)(v105 + 40) + 12 * v96);
                                  if (*v109 == (_DWORD)v52)
                                    goto LABEL_119;
LABEL_113:
                                  if (v109[1] != (_DWORD)v52)
                                    goto LABEL_114;
LABEL_120:
                                  v109[1] = v85;
                                  if (v109[2] == (_DWORD)v52)
LABEL_121:
                                    v109[2] = v85;
                                }
                                else
                                {
LABEL_112:
                                  v109 = (_DWORD *)(*(_QWORD *)(v105 + 40) + 12 * v96);
                                  if (*v109 != (_DWORD)v52)
                                    goto LABEL_113;
LABEL_119:
                                  *v109 = v85;
                                  if (v109[1] == (_DWORD)v52)
                                    goto LABEL_120;
LABEL_114:
                                  if (v109[2] == (_DWORD)v52)
                                    goto LABEL_121;
                                }
                              }
                            }
                          }
                          v95 = sub_239962B44(v118);
                          continue;
                        }
                      }
                    }
                  }
                }
                while (1)
                {
                  while (1)
                  {
                    v90 = *((_DWORD *)v53 + 7);
                    if (v52 >= v90)
                      break;
                    v53 = (uint64_t *)*v53;
                    if (!v53)
                      goto LABEL_129;
                  }
                  if (v90 >= v52)
                    break;
                  v53 = (uint64_t *)v53[1];
                  if (!v53)
LABEL_129:
                    sub_23941D898("map::at:  key not found");
                }
                *(_DWORD *)(v113 + 4 * v42) = *((_DWORD *)v53 + 8);
                break;
              }
            }
          }
LABEL_35:
          ++v42;
        }
        while (v42 != 3);
      }
      v30 = v111 + 1;
      v18 = *a2;
    }
    while (v111 + 1 < (unint64_t)((a2[1] - *a2) >> 2));
    sub_239421038((uint64_t)&v121, v122);
    v110 = (char *)__p;
    if (__p)
      goto LABEL_123;
  }
  if (v127)
  {
    v128 = v127;
    operator delete(v127);
  }
}

void sub_239985620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25)
{
  uint64_t v25;
  void *v27;

  v27 = *(void **)(v25 - 112);
  if (!v27)
    _Unwind_Resume(exception_object);
  *(_QWORD *)(v25 - 104) = v27;
  operator delete(v27);
  _Unwind_Resume(exception_object);
}

float sub_2399856AC(unint64_t a1, int *a2, uint64_t a3, char a4, float result)
{
  float *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  float v17;
  float v18;
  int v19;
  int *v20;
  int v21;
  float v22;
  float v23;
  int v24;
  int *v25;
  unint64_t v26;
  int *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  float v41;
  float v42;
  uint64_t v43;
  int v44;
  int *v45;
  unint64_t v46;
  int *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  float v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  float v63;
  unint64_t v64;
  float v65;
  uint64_t v66;
  int v67;
  int *v68;
  unint64_t v69;
  int *v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  float v77;
  float v78;
  int v79;
  float v80;
  float *v81;
  unint64_t v82;
  float *v83;
  unint64_t v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  int *v90;
  int *v91;
  float v92;
  int *v93;
  float v94;
  int v95;
  int *v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  BOOL v101;
  unint64_t v102;
  float v103;
  unint64_t v104;
  float v105;
  int *v106;
  int *v107;
  float v108;
  int v109;
  int v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  float v117;
  uint64_t v118;
  int v119;
  float *v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  BOOL v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  int *v138;
  uint64_t v139;
  int v140;
  float v141;
  uint64_t v142;
  uint64_t v143;
  int64_t v144;
  int64_t v145;
  BOOL v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  float v151;
  int v152;
  _DWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  unint64_t v159;
  _DWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  float v167;
  int v168;
  _DWORD *v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  float *v173;
  int *v174;
  uint64_t v175;
  int v176;
  float v177;
  float *v178;
  float *v179;
  int v180;
  uint64_t v181;
  uint64_t v182;

BOOL sub_2399863BC(int *a1, int *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  float v10;
  float v11;
  uint64_t v12;
  float v13;
  int *v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  float v18;
  int v19;
  int v20;
  float v21;
  float v22;
  int v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  float *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  float *v45;
  uint64_t v46;
  int v47;
  float v48;
  uint64_t v49;
  float v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = ((char *)a2 - (char *)a1) >> 3;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *((_QWORD *)a2 - 1);
      v7 = *(_QWORD *)a1;
      if (*((float *)&v6 + 1) > COERCE_FLOAT(HIDWORD(*(_QWORD *)a1)))
      {
        *a1 = v6;
        *(a2 - 2) = v7;
        v8 = a1[1];
        a1[1] = *(a2 - 1);
        *(a2 - 1) = v8;
      }
      return result;
    case 3:
      v9 = a1[2];
      v10 = *((float *)a1 + 1);
      v11 = *((float *)a1 + 3);
      v12 = *((_QWORD *)a2 - 1);
      if (v11 > v10)
      {
        v13 = *(float *)a1;
        if (*((float *)&v12 + 1) <= v11)
        {
          a1[1] = a1[3];
          *((float *)a1 + 2) = v13;
          *((float *)a1 + 3) = v10;
          *a1 = v9;
          v41 = *((_QWORD *)a2 - 1);
          v42 = *((_QWORD *)a1 + 1);
          if (*((float *)&v41 + 1) <= *((float *)&v42 + 1))
            return result;
          a1[2] = v41;
          *(a2 - 2) = v42;
          v15 = a2 - 1;
          v14 = a1 + 3;
        }
        else
        {
          *a1 = v12;
          v14 = a1 + 1;
          *((float *)a2 - 2) = v13;
          v15 = a2 - 1;
        }
        goto LABEL_25;
      }
      if (*((float *)&v12 + 1) > v11)
      {
        a1[2] = v12;
        *(a2 - 2) = v9;
        v15 = a1 + 3;
        v36 = a1[3];
        a1[3] = *(a2 - 1);
        *(a2 - 1) = v36;
        v37 = *(_QWORD *)a1;
        v38 = *((_QWORD *)a1 + 1);
        if (*((float *)&v38 + 1) > COERCE_FLOAT(HIDWORD(*(_QWORD *)a1)))
        {
          *a1 = v38;
          a1[2] = v37;
          v14 = a1 + 1;
LABEL_25:
          v43 = *v14;
          *v14 = *v15;
          *v15 = v43;
          return result;
        }
      }
      return result;
    case 4:
      sub_2399867B0((uint64_t *)a1, (float *)a1 + 2, (uint64_t *)a1 + 2, (uint64_t)(a2 - 2));
      return 1;
    case 5:
      sub_2399867B0((uint64_t *)a1, (float *)a1 + 2, (uint64_t *)a1 + 2, (uint64_t)(a1 + 6));
      v25 = *((_QWORD *)a2 - 1);
      v26 = *((_QWORD *)a1 + 3);
      if (*((float *)&v25 + 1) <= *((float *)&v26 + 1))
        return 1;
      a1[6] = v25;
      *(a2 - 2) = v26;
      v27 = a1[7];
      a1[7] = *(a2 - 1);
      *(a2 - 1) = v27;
      v28 = *((_QWORD *)a1 + 2);
      v29 = *((_QWORD *)a1 + 3);
      v30 = HIDWORD(v29);
      if (*((float *)&v29 + 1) <= *((float *)&v28 + 1))
        return 1;
      *((_QWORD *)a1 + 2) = v29;
      *((_QWORD *)a1 + 3) = v28;
      v31 = *((_QWORD *)a1 + 1);
      v32 = *((_QWORD *)a1 + 2);
      if (*((float *)&v32 + 1) <= *((float *)&v31 + 1))
        return 1;
      a1[2] = v32;
      a1[3] = v30;
      *((_QWORD *)a1 + 2) = v31;
      v33 = *(_QWORD *)a1;
      v34 = *((_QWORD *)a1 + 1);
      v35 = HIDWORD(*(_QWORD *)a1);
      if (*((float *)&v34 + 1) <= COERCE_FLOAT(HIDWORD(*(_QWORD *)a1)))
        return 1;
      *a1 = v34;
      a1[1] = v30;
      result = 1;
      a1[2] = v33;
      a1[3] = v35;
      return result;
    default:
      v16 = (uint64_t *)(a1 + 4);
      v17 = *((_QWORD *)a1 + 2);
      v19 = a1[2];
      v18 = *((float *)a1 + 3);
      v20 = *a1;
      v21 = *((float *)a1 + 1);
      v22 = v21;
      v23 = HIDWORD(v17);
      if (v18 > v21)
      {
        if (*((float *)&v17 + 1) <= v18)
        {
          *((float *)a1 + 1) = v18;
          a1[2] = v20;
          *((float *)a1 + 3) = v21;
          v24 = a1 + 3;
          *a1 = v19;
          v44 = *((_QWORD *)a1 + 1);
          v22 = *((float *)&v44 + 1);
          if (*((float *)&v17 + 1) <= *((float *)&v44 + 1))
            goto LABEL_30;
          a1[2] = v17;
          a1[4] = v44;
        }
        else
        {
          *a1 = v17;
          a1[4] = v20;
          v24 = a1 + 1;
        }
        v39 = (float *)(a1 + 5);
        goto LABEL_29;
      }
      if (*((float *)&v17 + 1) > v18)
      {
        *((_QWORD *)a1 + 1) = v17;
        v39 = (float *)(a1 + 3);
        a1[4] = v19;
        *((float *)a1 + 5) = v18;
        v40 = *((_QWORD *)a1 + 1);
        v23 = HIDWORD(v40);
        if (*((float *)&v40 + 1) > v22)
        {
          *a1 = v40;
          a1[2] = v20;
          v24 = a1 + 1;
LABEL_29:
          *v24 = v23;
          *v39 = v22;
        }
      }
LABEL_30:
      v45 = (float *)(a1 + 6);
      if (a1 + 6 == a2)
        return 1;
      v46 = 0;
      v47 = 0;
      while (1)
      {
        v48 = v45[1];
        v49 = *v16;
        if (v48 > COERCE_FLOAT(HIDWORD(*v16)))
          break;
LABEL_39:
        v16 = (uint64_t *)v45;
        v46 += 8;
        v45 += 2;
        if (v45 == (float *)a2)
          return 1;
      }
      v50 = *v45;
      v51 = v46;
      do
      {
        v52 = (uint64_t)a1 + v51;
        *(_DWORD *)(v52 + 24) = v49;
        *(_DWORD *)(v52 + 28) = *(int *)((char *)a1 + v51 + 20);
        if (v51 == -16)
        {
          *(float *)a1 = v50;
          *((float *)a1 + 1) = v48;
          if (++v47 != 8)
            goto LABEL_39;
          return v45 + 2 == (float *)a2;
        }
        v49 = *(_QWORD *)(v52 + 8);
        v51 -= 8;
      }
      while (v48 > *((float *)&v49 + 1));
      v53 = (uint64_t)a1 + v51;
      *(float *)(v53 + 24) = v50;
      *(float *)(v53 + 28) = v48;
      if (++v47 != 8)
        goto LABEL_39;
      return v45 + 2 == (float *)a2;
  }
}

float sub_2399867B0(uint64_t *a1, float *a2, uint64_t *a3, uint64_t a4)
{
  float v4;
  float v5;
  unint64_t v6;
  float v7;
  int v8;
  int *v9;
  int *v10;
  int v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  float result;
  int v18;
  uint64_t v19;
  int v20;
  unint64_t v21;

  v4 = *a2;
  v5 = a2[1];
  v6 = *a3;
  LODWORD(v7) = HIDWORD(*a3);
  if (v5 <= *((float *)a1 + 1))
  {
    if (v7 > v5)
    {
      *(_DWORD *)a2 = v6;
      *(float *)a3 = v4;
      v10 = (int *)(a2 + 1);
      v11 = *((_DWORD *)a2 + 1);
      a2[1] = *((float *)a3 + 1);
      *((_DWORD *)a3 + 1) = v11;
      v12 = *a1;
      if (COERCE_FLOAT(HIDWORD(*(_QWORD *)a2)) > COERCE_FLOAT(HIDWORD(*a1)))
      {
        *(_DWORD *)a1 = *(_QWORD *)a2;
        v9 = (int *)a1 + 1;
        *(_DWORD *)a2 = v12;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v8 = *(_DWORD *)a1;
    if (v7 > v5)
    {
      *(_DWORD *)a1 = v6;
      v9 = (int *)a1 + 1;
      *(_DWORD *)a3 = v8;
      v10 = (int *)a3 + 1;
LABEL_9:
      v15 = *v9;
      *v9 = *v10;
      *v10 = v15;
      goto LABEL_10;
    }
    *(float *)a1 = v4;
    *(_DWORD *)a2 = v8;
    v9 = (int *)(a2 + 1);
    v13 = *((_DWORD *)a1 + 1);
    *((float *)a1 + 1) = a2[1];
    *((_DWORD *)a2 + 1) = v13;
    v14 = *(_QWORD *)a2;
    if (COERCE_FLOAT(HIDWORD(*a3)) > COERCE_FLOAT(HIDWORD(*(_QWORD *)a2)))
    {
      *(_DWORD *)a2 = *a3;
      *(_DWORD *)a3 = v14;
      v10 = (int *)a3 + 1;
      goto LABEL_9;
    }
  }
LABEL_10:
  v16 = *a3;
  LODWORD(result) = HIDWORD(*(_QWORD *)a4);
  if (result > COERCE_FLOAT(HIDWORD(*a3)))
  {
    *(_DWORD *)a3 = *(_QWORD *)a4;
    *(_DWORD *)a4 = v16;
    v18 = *((_DWORD *)a3 + 1);
    *((_DWORD *)a3 + 1) = *(_DWORD *)(a4 + 4);
    *(_DWORD *)(a4 + 4) = v18;
    v19 = *(_QWORD *)a2;
    LODWORD(result) = HIDWORD(*a3);
    if (result > COERCE_FLOAT(HIDWORD(*(_QWORD *)a2)))
    {
      *(_DWORD *)a2 = *a3;
      *(_DWORD *)a3 = v19;
      v20 = *((_DWORD *)a2 + 1);
      a2[1] = *((float *)a3 + 1);
      *((_DWORD *)a3 + 1) = v20;
      v21 = *a1;
      LODWORD(result) = HIDWORD(*(_QWORD *)a2);
      if (result > COERCE_FLOAT(HIDWORD(*a1)))
      {
        *(_DWORD *)a1 = *(_QWORD *)a2;
        *(_DWORD *)a2 = v21;
        result = *((float *)a1 + 1);
        *((float *)a1 + 1) = a2[1];
        a2[1] = result;
      }
    }
  }
  return result;
}

void sub_23998694C()
{
  JUMPOUT(0x23B83E31CLL);
}

_QWORD *sub_239986960(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_250AF0E10;
  result[1] = v3;
  return result;
}

uint64_t sub_239986994(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_250AF0E10;
  a2[1] = v2;
  return result;
}

uint64_t sub_2399869B0(uint64_t result, unsigned int *a2, unsigned int *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = **(_QWORD **)(result + 8);
  v4 = 4 * *a2;
  v5 = *(_DWORD *)(v3 + v4);
  *(_DWORD *)(v3 + v4) = *(_DWORD *)(v3 + 4 * *a3);
  *(_DWORD *)(v3 + 4 * *a3) = v5;
  return result;
}

BOOL sub_2399869DC(size_t a1, float *a2, uint64_t a3)
{
  std::chrono::system_clock::time_point v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t i;
  unsigned int *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  unint64_t v50;
  uint64_t *v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  std::__shared_weak_count *v58;
  uint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  unsigned int *v63;
  unsigned int *v64;
  unint64_t v65;
  int v66;
  int v67;
  size_t v68;
  _OWORD *v69;
  _DWORD *v70;
  char *v71;
  size_t v72;
  size_t v73;
  char **p_dst;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  unsigned int v78;
  char *v79;
  size_t v80;
  void *v81;
  void *v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  char *v89;
  size_t v90;
  void *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int v95;
  char *v96;
  size_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  _QWORD *v104;
  unint64_t *v105;
  unint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  int v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _DWORD *v115;
  _DWORD *v116;
  uint64_t v117;
  _DWORD *v118;
  float32x4_t v119;
  unint64_t v120;
  uint8x8_t v121;
  unint64_t v122;
  uint64_t **v123;
  uint64_t *v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  int v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t *v131;
  std::__shared_weak_count *v132;
  uint64_t v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t **v138;
  uint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  std::__shared_weak_count *v144;
  unint64_t *v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  int v151;
  uint64_t v152;
  _BOOL4 v153;
  _QWORD *v154;
  _QWORD *v155;
  char *v156;
  char *v157;
  std::chrono::system_clock::time_point v158;
  uint64_t *v159;
  std::__shared_weak_count *v160;
  uint64_t v161;
  unint64_t *v162;
  unint64_t v163;
  unint64_t v164;
  std::chrono::system_clock::time_point v165;
  std::chrono::system_clock::time_point v166;
  _QWORD *v167;
  _QWORD *v168;
  void *v169;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  _BOOL4 v172;
  uint64_t v173;
  unsigned int v174;
  uint64_t v175;
  int v176;
  unsigned int v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  unsigned int v182;
  int v183;
  _QWORD *v184;
  uint64_t v185;
  unsigned int v186;
  uint64_t v187;
  int v188;
  void *v189;
  void *v190;
  char *v191;
  void *__p[4];
  int v193;
  unsigned int v194[5];
  char *__dst;
  char *v196;
  unint64_t v197;
  _DWORD *v198;
  _DWORD *v199;
  char *v200;
  _QWORD *v201;
  _BYTE *v202;
  unint64_t v203;
  char *v204;
  char *v205;
  char *v206;
  unsigned int v207;
  char *v208;
  char *v209;
  uint64_t v210;
  _DWORD *v211;
  _DWORD *v212;
  uint64_t v213;
  char v214;
  unsigned int *v215;

  v6.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  v214 = 0;
  strcpy((char *)__p, "h:is_quadmesh_diagonal");
  HIBYTE(__p[2]) = 22;
  LOBYTE(v211) = 0;
  v184 = (_QWORD *)(a1 + 32);
  v7 = sub_23993A208((uint64_t **)(a1 + 32), (uint64_t)&v211, (unsigned __int8 *)__p);
  if (SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
  if (v7 != -1)
    v214 = 1;
  rep = v6.__d_.__rep_;
  v173 = a3;
  v212 = 0;
  v213 = 0;
  v208 = 0;
  v209 = 0;
  v210 = 0;
  v211 = 0;
  v207 = 0;
  v175 = (uint64_t)a2;
  sub_23997D524(a1, a2, (uint64_t *)&v211, &v208, &v207);
  v9 = *(_QWORD *)(a1 + 152);
  v8 = *(_QWORD *)(a1 + 160);
  v205 = 0;
  v206 = 0;
  v204 = 0;
  v10 = v8 - v9;
  v11 = (v8 - v9) >> 2;
  if (v8 != v9)
  {
    if (v10 < 0)
      sub_2394189F8();
    v204 = (char *)operator new((v8 - v9) >> 2);
    v12 = &v204[v11];
    v206 = &v204[v11];
    bzero(v204, (v8 - v9) >> 2);
    v205 = v12;
  }
  v182 = v7;
  if (v214 && v7 != -1)
  {
    v14 = *(_QWORD *)(a1 + 128);
    v13 = *(_QWORD *)(a1 + 136);
    memset(__p, 0, 24);
    v15 = v13 - v14;
    if (v15)
    {
      if (v15 < 0)
        sub_2394189F8();
      v16 = 0xCCCCCCCCCCCCCCCDLL * (v15 >> 2);
      __p[0] = operator new(8 * (((v16 - 1) >> 6) + 1));
      __p[1] = 0;
      __p[2] = (void *)(((v16 - 1) >> 6) + 1);
      sub_23942D8C8(__p, v16, 0);
      v9 = *(_QWORD *)(a1 + 152);
      v8 = *(_QWORD *)(a1 + 160);
      v10 = v8 - v9;
      v11 = (v8 - v9) >> 2;
    }
    v201 = 0;
    v202 = 0;
    v203 = 0;
    if (v8 != v9)
    {
      if (v10 < 0)
        sub_2394189F8();
      v201 = operator new(8 * (((v11 - 1) >> 6) + 1));
      v202 = 0;
      v203 = ((v11 - 1) >> 6) + 1;
      sub_23942D8C8(&v201, v11, 0);
    }
    v17 = operator new(0xCuLL);
    v199 = v17 + 3;
    v200 = (char *)(v17 + 3);
    *(_QWORD *)v17 = -1;
    v17[2] = -1;
    v198 = v17;
    if (*(_QWORD *)(a1 + 160) != *(_QWORD *)(a1 + 152))
    {
      v18 = 0;
      v19 = 0;
      do
      {
        LODWORD(__dst) = v19;
        sub_23996389C(a1, (unsigned int *)&__dst, (uint64_t)&v198);
        v22 = (uint64_t *)(*v184 + 16 * v7);
        v24 = *v22;
        v23 = (std::__shared_weak_count *)v22[1];
        if (v23)
        {
          p_shared_owners = (unint64_t *)&v23->__shared_owners_;
          do
            v26 = __ldxr(p_shared_owners);
          while (__stxr(v26 + 1, p_shared_owners));
          do
            v27 = __ldaxr(p_shared_owners);
          while (__stlxr(v27 - 1, p_shared_owners));
          if (!v27)
          {
            ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
            std::__shared_weak_count::__release_weak(v23);
          }
        }
        if (((*(_QWORD *)(*(_QWORD *)(v24 + 40) + (((unint64_t)*v198 >> 3) & 0x1FFFFFF8)) >> *v198) & 1) != 0)
          ++v204[v18];
        v28 = (uint64_t *)(*v184 + 16 * v7);
        v30 = *v28;
        v29 = (std::__shared_weak_count *)v28[1];
        if (v29)
        {
          v31 = (unint64_t *)&v29->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
            std::__shared_weak_count::__release_weak(v29);
          }
        }
        if (((*(_QWORD *)(*(_QWORD *)(v30 + 40) + (((unint64_t)v198[1] >> 3) & 0x1FFFFFF8)) >> v198[1]) & 1) != 0)
          ++v204[v18];
        v34 = (uint64_t *)(*v184 + 16 * v7);
        v36 = *v34;
        v35 = (std::__shared_weak_count *)v34[1];
        if (v35)
        {
          v37 = (unint64_t *)&v35->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }
        if (((*(_QWORD *)(*(_QWORD *)(v36 + 40) + (((unint64_t)v198[2] >> 3) & 0x1FFFFFF8)) >> v198[2]) & 1) != 0)
          ++v204[v18];
        v21 = *(_QWORD *)(a1 + 152);
        v20 = *(_QWORD *)(a1 + 160);
        v18 = ++v19;
      }
      while (v19 < (unint64_t)((v20 - v21) >> 2));
      if (v20 != v21)
      {
        v40 = 0;
        v41 = 0;
        do
        {
          v42 = v201[v40 >> 6];
          if ((v42 & (1 << v40)) == 0)
          {
            v201[v40 >> 6] = v42 | (1 << v40);
            LODWORD(__dst) = v41;
            sub_23996389C(a1, (unsigned int *)&__dst, (uint64_t)&v198);
            for (i = 0; i != 3; ++i)
            {
              v44 = &v198[i];
              v45 = *v44;
              v46 = v45 >> 6;
              v47 = 1 << v45;
              v48 = *((_QWORD *)__p[0] + v46);
              if ((v47 & v48) == 0)
              {
                *((_QWORD *)__p[0] + v46) = v47 | v48;
                v49 = (_DWORD *)sub_239962518(a1 + 104, v44);
                *(_QWORD *)((char *)__p[0] + (((unint64_t)*v49 >> 3) & 0x1FFFFFF8)) |= 1 << *v49;
                v50 = *(unsigned int *)sub_239962518(a1 + 104, &v198[i]);
                v51 = (uint64_t *)(*(_QWORD *)(a1 + 32) + 16 * *(unsigned int *)(a1 + 180));
                v53 = *v51;
                v52 = (std::__shared_weak_count *)v51[1];
                if (v52)
                {
                  v54 = (unint64_t *)&v52->__shared_owners_;
                  do
                    v55 = __ldxr(v54);
                  while (__stxr(v55 + 1, v54));
                  do
                    v56 = __ldaxr(v54);
                  while (__stlxr(v56 - 1, v54));
                  if (!v56)
                  {
                    ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
                    std::__shared_weak_count::__release_weak(v52);
                  }
                }
                if (((*(_QWORD *)(*(_QWORD *)(v53 + 40) + ((v50 >> 3) & 0x1FFFFFF8)) >> v50) & 1) == 0)
                {
                  v57 = (uint64_t *)(*v184 + 16 * v182);
                  v59 = *v57;
                  v58 = (std::__shared_weak_count *)v57[1];
                  if (v58)
                  {
                    v60 = (unint64_t *)&v58->__shared_owners_;
                    do
                      v61 = __ldxr(v60);
                    while (__stxr(v61 + 1, v60));
                    do
                      v62 = __ldaxr(v60);
                    while (__stlxr(v62 - 1, v60));
                    if (!v62)
                    {
                      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
                      std::__shared_weak_count::__release_weak(v58);
                    }
                  }
                  v63 = &v198[i];
                  if (((*(_QWORD *)(*(_QWORD *)(v59 + 40) + (((unint64_t)*v63 >> 3) & 0x1FFFFFF8)) >> *v63) & 1) != 0)
                  {
                    v64 = (unsigned int *)sub_239962518(a1 + 104, v63);
                    v65 = *(unsigned int *)(sub_239962518(a1 + 104, v64) + 16);
                    v66 = v211[v40];
                    v67 = v211[v65];
                    if (v66 != v67)
                    {
                      if (v204[v65] == 2)
                      {
                        v211[v40] = v67;
                      }
                      else
                      {
                        v211[v65] = v66;
                        *(_QWORD *)((char *)v201 + ((v65 >> 3) & 0x1FFFFFF8)) |= 1 << v65;
                      }
                    }
                  }
                }
              }
            }
            v21 = *(_QWORD *)(a1 + 152);
            v20 = *(_QWORD *)(a1 + 160);
          }
          v40 = ++v41;
        }
        while (v41 < (unint64_t)((v20 - v21) >> 2));
      }
    }
    if (v198)
    {
      v199 = v198;
      operator delete(v198);
    }
    if (v201)
      operator delete(v201);
    if (__p[0])
      operator delete(__p[0]);
  }
  v202 = 0;
  v203 = 0;
  v200 = 0;
  v201 = 0;
  v198 = 0;
  v199 = 0;
  if (v207)
  {
    v68 = 36 * v207;
    v69 = operator new(v68);
    v198 = v69;
    v70 = (_DWORD *)((char *)v69 + v68);
    v200 = (char *)v69 + v68;
    do
    {
      *((_DWORD *)v69 + 8) = 1065353216;
      *v69 = xmmword_239F033D8;
      v69[1] = unk_239F033E8;
      v69 = (_OWORD *)((char *)v69 + 36);
      v68 -= 36;
    }
    while (v68);
    v199 = v70;
  }
  sub_23997F044(a1, v175, &v198, (uint64_t *)&v208, &v211, &v201);
  v71 = off_256934448[0];
  v72 = strlen(off_256934448[0]);
  if (v72 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v73 = v72;
  if (v72 >= 0x17)
  {
    v75 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v72 | 7) != 0x17)
      v75 = v72 | 7;
    v76 = v75 + 1;
    p_dst = (char **)operator new(v75 + 1);
    v197 = v76 | 0x8000000000000000;
    __dst = (char *)p_dst;
    v196 = (char *)v73;
    goto LABEL_86;
  }
  HIBYTE(v197) = v72;
  p_dst = &__dst;
  if (v72)
LABEL_86:
    memmove(p_dst, v71, v73);
  *((_BYTE *)p_dst + v73) = 0;
  v77 = (_QWORD *)(a1 + 80);
  memset(__p, 0, 24);
  v78 = sub_23958C0D8((uint64_t **)(a1 + 80), (uint64_t)__p, (unsigned __int8 *)&__dst);
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v197) & 0x80000000) == 0)
    {
LABEL_89:
      v174 = v78;
      if (v78 != -1)
        goto LABEL_90;
LABEL_96:
      v172 = 0;
      v83 = -1;
      v84 = -1;
      v85 = -1;
      goto LABEL_127;
    }
  }
  else if ((SHIBYTE(v197) & 0x80000000) == 0)
  {
    goto LABEL_89;
  }
  operator delete(__dst);
  v174 = v78;
  if (v78 == -1)
    goto LABEL_96;
LABEL_90:
  v79 = off_256934428[0];
  v80 = strlen(off_256934428[0]);
  if (v80 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v81 = (void *)v80;
  if (v80 >= 0x17)
  {
    v86 = (v80 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v80 | 7) != 0x17)
      v86 = v80 | 7;
    v87 = v86 + 1;
    v82 = operator new(v86 + 1);
    __p[1] = v81;
    __p[2] = (void *)(v87 | 0x8000000000000000);
    __p[0] = v82;
    goto LABEL_100;
  }
  HIBYTE(__p[2]) = v80;
  v82 = __p;
  if (v80)
LABEL_100:
    memmove(v82, v79, (size_t)v81);
  *((_BYTE *)v81 + (_QWORD)v82) = 0;
  LODWORD(__dst) = 0;
  v88 = sub_2399346C0((uint64_t **)(a1 + 56), (uint64_t)&__dst, (unsigned __int8 *)__p);
  v85 = v88;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
  {
    if (v88 != -1)
      goto LABEL_103;
LABEL_108:
    v172 = 0;
    v83 = -1;
    v84 = -1;
    goto LABEL_127;
  }
  operator delete(__p[0]);
  if (v85 == -1)
    goto LABEL_108;
LABEL_103:
  v89 = off_256934418[0];
  v90 = strlen(off_256934418[0]);
  if (v90 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v91 = (void *)v90;
  if (v90 >= 0x17)
  {
    v93 = (v90 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v90 | 7) != 0x17)
      v93 = v90 | 7;
    v94 = v93 + 1;
    v92 = operator new(v93 + 1);
    __p[1] = v91;
    __p[2] = (void *)(v94 | 0x8000000000000000);
    __p[0] = v92;
    goto LABEL_112;
  }
  HIBYTE(__p[2]) = v90;
  v92 = __p;
  if (v90)
LABEL_112:
    memmove(v92, v89, (size_t)v91);
  *((_BYTE *)v91 + (_QWORD)v92) = 0;
  LODWORD(v196) = 0;
  __dst = 0;
  v95 = sub_2394E5DE4((uint64_t **)(a1 + 56), (uint64_t)&__dst, (unsigned __int8 *)__p);
  v84 = v95;
  if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
  {
    if (v95 != -1)
      goto LABEL_115;
LABEL_120:
    v172 = 0;
    v83 = -1;
    goto LABEL_127;
  }
  operator delete(__p[0]);
  if (v84 == -1)
    goto LABEL_120;
LABEL_115:
  v96 = off_256934438[0];
  v97 = strlen(off_256934438[0]);
  if (v97 > 0x7FFFFFFFFFFFFFF7)
    sub_23941A5AC();
  v98 = (void *)v97;
  if (v97 >= 0x17)
  {
    v100 = (v97 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v97 | 7) != 0x17)
      v100 = v97 | 7;
    v101 = v100 + 1;
    v99 = operator new(v100 + 1);
    __p[1] = v98;
    __p[2] = (void *)(v101 | 0x8000000000000000);
    __p[0] = v99;
    goto LABEL_124;
  }
  HIBYTE(__p[2]) = v97;
  v99 = __p;
  if (v97)
LABEL_124:
    memmove(v99, v96, (size_t)v98);
  *((_BYTE *)v98 + (_QWORD)v99) = 0;
  __dst = 0;
  v83 = sub_2394E5C88((uint64_t **)(a1 + 80), (uint64_t)&__dst, (unsigned __int8 *)__p);
  v172 = v83 != -1;
  if (SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
LABEL_127:
  v102 = *v77 + 16 * v83;
  v104 = *(_QWORD **)v102;
  v103 = *(std::__shared_weak_count **)(v102 + 8);
  if (v103)
  {
    v105 = (unint64_t *)&v103->__shared_owners_;
    do
      v106 = __ldxr(v105);
    while (__stxr(v106 + 1, v105));
    do
      v107 = __ldaxr(v105);
    while (__stlxr(v107 - 1, v105));
    if (!v107)
    {
      ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
      std::__shared_weak_count::__release_weak(v103);
    }
  }
  v194[0] = v174;
  v194[1] = v85;
  v194[2] = v84;
  v194[3] = v83;
  v194[4] = v182;
  memset(__p, 0, sizeof(__p));
  v193 = 1065353216;
  __dst = 0;
  v196 = 0;
  v197 = 0;
  v108 = v201;
  if (v202 != (_BYTE *)v201)
  {
    v109 = 0;
    v177 = 0;
    v110 = 0;
    v111 = (v202 - (_BYTE *)v201) >> 2;
    v178 = v84;
    while (1)
    {
      v176 = v110;
      if (v111 - 1 > v109)
      {
        LODWORD(v112) = *((_DWORD *)v108 + v177 + 1);
        v113 = *((unsigned int *)v108 + v109);
        if (v113 < v112)
          break;
        goto LABEL_200;
      }
      v112 = (*(_QWORD *)(a1 + 160) - *(_QWORD *)(a1 + 152)) >> 2;
      v113 = *((unsigned int *)v108 + v109);
      if (v113 < v112)
        break;
LABEL_200:
      v149 = (v112 - v113);
      v150 = (v196 - __dst) >> 2;
      if (v149 <= v150)
      {
        v151 = v176;
        if (v149 < v150)
          v196 = &__dst[4 * v149];
      }
      else
      {
        sub_2394EE834((void **)&__dst, v149 - v150);
        v151 = v176;
      }
      if (v113 < v112)
      {
        v152 = 0;
        do
        {
          *(_DWORD *)&__dst[4 * v152] = v113 + v152;
          ++v152;
        }
        while (v113 - v112 + v152);
      }
      v153 = sub_239987E1C((_QWORD *)a1, (uint64_t *)&__dst, &v204, v194, &v214);
      if (__p[3])
      {
        v154 = __p[2];
        if (__p[2])
        {
          do
          {
            v155 = (_QWORD *)*v154;
            operator delete(v154);
            v154 = v155;
          }
          while (v155);
        }
        __p[2] = 0;
        v156 = (char *)__p[1];
        if (__p[1])
        {
          v157 = 0;
          do
            *((_QWORD *)__p[0] + (_QWORD)v157++) = 0;
          while (v156 != v157);
        }
        __p[3] = 0;
      }
      v110 = v151 | v153;
      v108 = v201;
      v111 = (v202 - (_BYTE *)v201) >> 2;
      v109 = ++v177;
      if (v111 <= v177)
      {
        v77 = (_QWORD *)(a1 + 80);
        if ((v110 & 1) != 0)
          sub_239933ADC(a1);
        goto LABEL_216;
      }
    }
    v181 = v113;
    v183 = v211[v113];
    v179 = v112;
    v180 = v112;
    v114 = v113;
LABEL_143:
    v115 = v198;
    v116 = operator new(0xCuLL);
    v190 = v116 + 3;
    v191 = (char *)(v116 + 3);
    *(_QWORD *)v116 = -1;
    v116[2] = -1;
    v189 = v116;
    LODWORD(v187) = v114;
    sub_23996362C(a1, (unsigned int *)&v187, (uint64_t)&v189);
    v185 = v114;
    v117 = 0;
    v188 = 0;
    v118 = &v115[9 * v183];
    v187 = 0;
    while (1)
    {
      if (!__p[1])
        goto LABEL_165;
      v120 = *((unsigned int *)v189 + v117);
      v121 = (uint8x8_t)vcnt_s8((int8x8_t)__p[1]);
      v121.i16[0] = vaddlv_u8(v121);
      if (v121.u32[0] > 1uLL)
      {
        v122 = *((unsigned int *)v189 + v117);
        if (__p[1] <= (void *)v120)
          v122 = v120 % (unint64_t)__p[1];
      }
      else
      {
        v122 = (LODWORD(__p[1]) - 1) & v120;
      }
      v123 = (uint64_t **)*((_QWORD *)__p[0] + v122);
      if (!v123 || (v124 = *v123) == 0)
      {
LABEL_165:
        (*(void (**)(_QWORD *))(*v104 + 48))(v104);
        v128 = (*(uint64_t (**)(_QWORD *))(*v104 + 16))(v104);
        v186 = *((_DWORD *)v189 + v117);
        v215 = &v186;
        v129 = v128 - 1;
        *((float *)sub_239989BE0((uint64_t)__p, &v186, (uint64_t)&unk_239EC6E98, &v215) + 5) = (float)(v128 - 1);
        *((_DWORD *)&v187 + v117) = v128 - 1;
        v130 = *((unsigned int *)v189 + v117);
        v131 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 176));
        v133 = *v131;
        v132 = (std::__shared_weak_count *)v131[1];
        if (v132)
        {
          v134 = (unint64_t *)&v132->__shared_owners_;
          do
            v135 = __ldxr(v134);
          while (__stxr(v135 + 1, v134));
          do
            v136 = __ldaxr(v134);
          while (__stlxr(v136 - 1, v134));
          if (!v136)
          {
            ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
            std::__shared_weak_count::__release_weak(v132);
          }
        }
        v119 = *(float32x4_t *)(*(_QWORD *)(v133 + 40) + 16 * v130);
        *(float32x2_t *)(v104[5] + 8 * v129) = vmla_laneq_f32(vmla_lane_f32(vmla_n_f32(0, *(float32x2_t *)v118, v119.f32[0]), *(float32x2_t *)(v118 + 3), *(float32x2_t *)v119.f32, 1), *(float32x2_t *)(v118 + 6), v119, 2);
        if (++v117 != 3)
          continue;
LABEL_192:
        v142 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v178);
        v143 = *v142;
        v144 = (std::__shared_weak_count *)v142[1];
        LODWORD(v112) = v180;
        if (v144)
        {
          v145 = (unint64_t *)&v144->__shared_owners_;
          do
            v146 = __ldxr(v145);
          while (__stxr(v146 + 1, v145));
          do
            v147 = __ldaxr(v145);
          while (__stlxr(v147 - 1, v145));
          if (!v147)
          {
            ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
            std::__shared_weak_count::__release_weak(v144);
          }
        }
        v148 = *(_QWORD *)(v143 + 40) + 12 * v185;
        *(_QWORD *)v148 = v187;
        *(_DWORD *)(v148 + 8) = v188;
        if (v189)
        {
          v190 = v189;
          operator delete(v189);
        }
        v114 = v185 + 1;
        v113 = v181;
        if (v185 + 1 == v179)
          goto LABEL_200;
        goto LABEL_143;
      }
      v125 = (unint64_t)__p[1] - 1;
      if (v121.u32[0] < 2uLL)
      {
        while (1)
        {
          v126 = v124[1];
          if (v126 == v120)
          {
            if (*((_DWORD *)v124 + 4) == (_DWORD)v120)
              goto LABEL_171;
          }
          else if ((v126 & v125) != v122)
          {
            goto LABEL_165;
          }
          v124 = (uint64_t *)*v124;
          if (!v124)
            goto LABEL_165;
        }
      }
      while (1)
      {
        v127 = v124[1];
        if (v127 == v120)
          break;
        if ((void *)v127 >= __p[1])
          v127 %= (unint64_t)__p[1];
        if (v127 != v122)
          goto LABEL_165;
LABEL_160:
        v124 = (uint64_t *)*v124;
        if (!v124)
          goto LABEL_165;
      }
      if (*((_DWORD *)v124 + 4) != (_DWORD)v120)
        goto LABEL_160;
LABEL_171:
      if (v121.u32[0] > 1uLL)
      {
        v137 = *((unsigned int *)v189 + v117);
        if (__p[1] <= (void *)v120)
          v137 = v120 % (unint64_t)__p[1];
      }
      else
      {
        v137 = (LODWORD(__p[1]) - 1) & v120;
      }
      v138 = (uint64_t **)*((_QWORD *)__p[0] + v137);
      if (!v138 || (v139 = *v138) == 0)
LABEL_243:
        sub_23941D898("unordered_map::at: key not found");
      if (v121.u32[0] < 2uLL)
      {
        while (1)
        {
          v140 = v139[1];
          if (v140 == v120)
          {
            if (*((_DWORD *)v139 + 4) == (_DWORD)v120)
              goto LABEL_183;
          }
          else if ((v140 & v125) != v137)
          {
            goto LABEL_243;
          }
          v139 = (uint64_t *)*v139;
          if (!v139)
            goto LABEL_243;
        }
      }
      while (2)
      {
        v141 = v139[1];
        if (v141 != v120)
        {
          if ((void *)v141 >= __p[1])
            v141 %= (unint64_t)__p[1];
          if (v141 != v137)
            goto LABEL_243;
LABEL_186:
          v139 = (uint64_t *)*v139;
          if (!v139)
            goto LABEL_243;
          continue;
        }
        break;
      }
      if (*((_DWORD *)v139 + 4) != (_DWORD)v120)
        goto LABEL_186;
LABEL_183:
      *((_DWORD *)&v187 + v117++) = *((float *)v139 + 5);
      if (v117 == 3)
        goto LABEL_192;
    }
  }
LABEL_216:
  v158.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (*(_BYTE *)(v173 + 80))
  {
    *(double *)v173 = (double)(v158.__d_.__rep_ - rep) / 1000000.0;
    v159 = (uint64_t *)(*v77 + 16 * v174);
    v161 = *v159;
    v160 = (std::__shared_weak_count *)v159[1];
    if (v160)
    {
      v162 = (unint64_t *)&v160->__shared_owners_;
      do
        v163 = __ldxr(v162);
      while (__stxr(v163 + 1, v162));
      do
        v164 = __ldaxr(v162);
      while (__stlxr(v164 - 1, v162));
      if (!v164)
      {
        ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
        std::__shared_weak_count::__release_weak(v160);
      }
    }
    *(_QWORD *)(v173 + 40) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v161 + 16))(v161);
  }
  v165.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  sub_239980398(a1, v175, v173);
  v166.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if (*(_BYTE *)(v173 + 80))
  {
    *(double *)(v173 + 48) = (double)(v166.__d_.__rep_ - v165.__d_.__rep_) / 1000000.0;
    *(_QWORD *)(v173 + 56) = *(unsigned __int8 *)(v175 + 8);
  }
  if (__dst)
  {
    v196 = __dst;
    operator delete(__dst);
  }
  v167 = __p[2];
  if (__p[2])
  {
    do
    {
      v168 = (_QWORD *)*v167;
      operator delete(v167);
      v167 = v168;
    }
    while (v168);
  }
  v169 = __p[0];
  __p[0] = 0;
  if (v169)
    operator delete(v169);
  if (v198)
  {
    v199 = v198;
    operator delete(v198);
  }
  if (v201)
  {
    v202 = v201;
    operator delete(v201);
  }
  if (v204)
  {
    v205 = v204;
    operator delete(v204);
  }
  if (v208)
  {
    v209 = v208;
    operator delete(v208);
  }
  if (v211)
  {
    v212 = v211;
    operator delete(v211);
  }
  return v172;
}

void sub_239987B48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,void *a60)
{
  void *v61;
  void *v62;
  void *v63;
  void *v64;

  if (a34 < 0)
    operator delete(__p);
  if (a47)
  {
    operator delete(a47);
    v61 = a50;
    if (!a50)
    {
LABEL_5:
      v62 = a53;
      if (!a53)
        goto LABEL_6;
      goto LABEL_11;
    }
  }
  else
  {
    v61 = a50;
    if (!a50)
      goto LABEL_5;
  }
  operator delete(v61);
  v62 = a53;
  if (!a53)
  {
LABEL_6:
    v63 = a57;
    if (!a57)
      goto LABEL_7;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v62);
  v63 = a57;
  if (!a57)
  {
LABEL_7:
    v64 = a60;
    if (!a60)
      goto LABEL_8;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v63);
  v64 = a60;
  if (!a60)
LABEL_8:
    _Unwind_Resume(exception_object);
LABEL_13:
  operator delete(v64);
  _Unwind_Resume(exception_object);
}

BOOL sub_239987E1C(_QWORD *a1, uint64_t *a2, _QWORD *a3, unsigned int *a4, _BYTE *a5)
{
  void *v10;
  void *v11;
  void *v12;
  unsigned int *v13;
  uint64_t v14;
  unsigned int *v15;
  _BOOL8 v16;
  uint64_t v17;
  uint64_t *v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t v23;
  int v25;
  void *__p;
  void *v27;
  uint64_t v28;
  void *v29;
  _BYTE *v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;

  v33 = -1;
  v32 = -1;
  if (!sub_23998803C(a1, a2, a4, a5, &v33, &v32))
    return 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  __p = 0;
  v27 = 0;
  v28 = 0;
  sub_239988BF8((uint64_t)a1, a2, a3, a4, &v33, &v32, a5, &v29, &__p);
  v10 = v29;
  v11 = v30;
  v13 = (unsigned int *)__p;
  v12 = v27;
  if (v30 - (_BYTE *)v29 < (unint64_t)((_BYTE *)v27 - (_BYTE *)__p))
  {
    v29 = __p;
    v30 = v27;
    __p = v10;
    v27 = v11;
    v14 = v31;
    v31 = v28;
    v28 = v14;
    v15 = v13;
    v12 = v11;
    v16 = v10 != v11;
    if (v10 == v11)
      goto LABEL_14;
LABEL_7:
    v25 = 0;
    v17 = *v15;
    v18 = (uint64_t *)(a1[7] + 16 * a4[1]);
    v20 = *v18;
    v19 = (std::__shared_weak_count *)v18[1];
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(p_shared_owners);
      while (__stxr(v22 + 1, p_shared_owners));
      do
        v23 = __ldaxr(p_shared_owners);
      while (__stlxr(v23 - 1, p_shared_owners));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    v25 = *(_DWORD *)(*(_QWORD *)(v20 + 40) + 4 * v17);
    sub_239984D38(a1, (uint64_t *)&__p, a4, &v25);
    sub_239987E1C(a1, &v29, a3, a4, a5);
    sub_239987E1C(a1, &__p, a3, a4, a5);
    v12 = __p;
    goto LABEL_14;
  }
  v15 = (unsigned int *)v29;
  v16 = __p != v27;
  if (__p != v27)
    goto LABEL_7;
LABEL_14:
  if (v12)
  {
    v27 = v12;
    operator delete(v12);
  }
  if (v29)
  {
    v30 = v29;
    operator delete(v29);
  }
  return v16;
}

